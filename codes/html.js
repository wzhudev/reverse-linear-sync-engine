!function() {
    try {
        var e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {}
          , n = (new Error).stack;
        n && (e._sentryDebugIds = e._sentryDebugIds || {},
        e._sentryDebugIds[n] = "f8bed1b0-24a3-5791-9cdc-d677732ec8dd")
    } catch (e) {}
}();
function __vite__mapDeps(indexes) {
    if (!__vite__mapDeps.viteFileDeps) {
        __vite__mapDeps.viteFileDeps = [window.__toStaticUrl("assets/plugin.hash-B-rrflHg.js"), window.__toStaticUrl("assets/nivo.hash-3DLvEEek.js"), window.__toStaticUrl("assets/vendor-core.hash-TqyN1mH4.js"), window.__toStaticUrl("assets/prosemirror.hash-DzHTrBWt.js"), window.__toStaticUrl("assets/Root.hash-_Q_JDMPl.js"), window.__toStaticUrl("assets/Root.hash-QbHhGvDq.css")]
    }
    return indexes.map((i)=>__vite__mapDeps.viteFileDeps[i])
}
"use client";
import {_ as KE, i as kf, s as Gi, a as YE, b as QE, c as xf, d as XE, m as xk, n as Df, o as Ic, t as T3, e as JE, f as Sf, g as eA, h as tA, j as nA, k as rA, l as sA, p as iA, q as Dk, r as Yo, u as n5, v as aA, w as _f, x as q7, y as oA, z as cA, A as lA, B as Sk, C as dA, D as _k, E as uA, F as ug, G as hA, W as fA, H as pA, I as mA, J as gA, K as yA, L as CA, M as bA, N as vA, O as wA} from "./nivo.hash-3DLvEEek.js";
import {a as Cn, f as Fi, h as hg, i as Ik, k as Mr, s as hl, l as f2, m as $n, p as dd, n as Do, o as kA, w as xA, R as DA, q as SA, v as ut, x as Le, y as F2, z as ms, A as _A, B as IA, C as EA, D as AA, E as jA, F as fg, G as MA, H as TA, I as pg, J as LA, K as OA, L as O1, r as y, M as lt, N as Ln /** Ln is `makeObservable` of mobX  */, O as ae, Q as Qt, S as Ek, T as $a, j as c, u as If, b as r5, U as L3, V as RA, W as PA, e as Ak, X as jk, Y as Pt, Z as $A, _ as rn, c as FA, $ as Kd, a0 as Ef, a1 as fo, a2 as mg, a3 as gg, a4 as Dd, a5 as s5, a6 as _s, a7 as NA, a8 as n0, a9 as VA, aa as BA, ab as Sd, ac as UA, ad as HA, ae as Mk, af as Sa, ag as pi, ah as N2, ai as zA, aj as ZA, ak as Af, al as p2, am as Tk, an as r0, ao as jf, ap as oc, aq as ps, ar as yg, as as xu, at as qA, au as Cg, av as WA, aw as GA, ax as Zc, ay as Rs, az as vr, aA as O3, aB as Fr, aC as KA, aD as Ws, aE as Lk, aF as YA, aG as QA, aH as fr, aI as Mf, aJ as XA, aK as bg, aL as JA, aM as ej, aN as Ts, aO as zh, aP as s0, aQ as R3, aR as tj, aS as nj, aT as W7, aU as Zh, aV as vg, aW as rj, aX as sj, aY as Ok, aZ as Rk, a_ as Tf, a$ as P3, b0 as ij, b1 as Pk, b2 as $k, b3 as Fk, b4 as aj, b5 as oj, b6 as cj, b7 as lj, b8 as dj, b9 as uj, ba as hj, bb as fj, bc as $3, bd as F3, be as pj, bf as mj, bg as gj} from "./vendor-core.hash-TqyN1mH4.js";
import {t as yj, S as Cj, N as Nk, M as bj, a as vj, b as wj, P as Lf, c as kj, d as O5, F as R5, T as xj} from "./prosemirror.hash-DzHTrBWt.js";
(function() {
    const e = document.createElement("link").relList;
    if (e && e.supports && e.supports("modulepreload"))
        return;
    for (const s of document.querySelectorAll('link[rel="modulepreload"]'))
        r(s);
    new MutationObserver(s=>{
        for (const i of s)
            if (i.type === "childList")
                for (const a of i.addedNodes)
                    a.tagName === "LINK" && a.rel === "modulepreload" && r(a)
    }
    ).observe(document, {
        childList: !0,
        subtree: !0
    });
    function n(s) {
        const i = {};
        return s.integrity && (i.integrity = s.integrity),
        s.referrerPolicy && (i.referrerPolicy = s.referrerPolicy),
        s.crossOrigin === "use-credentials" ? i.credentials = "include" : s.crossOrigin === "anonymous" ? i.credentials = "omit" : i.credentials = "same-origin",
        i
    }
    function r(s) {
        if (s.ep)
            return;
        s.ep = !0;
        const i = n(s);
        fetch(s.href, i)
    }
}
)();
function Dj() {
    "hasOwn"in Object || Object.defineProperty(Object, "hasOwn", {
        value: Object.call.bind(Object.hasOwnProperty),
        writable: !0,
        enumerable: !1,
        configurable: !0
    })
}
var Sj = KE
  , wg = kf;
function _j(t, e, n, r) {
    return t == null ? [] : (wg(e) || (e = e == null ? [] : [e]),
    n = r ? void 0 : n,
    wg(n) || (n = n == null ? [] : [n]),
    Sj(t, e, n))
}
var Ij = _j;
const Of = Cn(Ij);
function Ej() {
    if (Array.prototype.distinct = function() {
        return this.filter((t,e,n)=>n.indexOf(t) === e)
    }
    ,
    Array.prototype.concrete = function() {
        return this.filter(t=>t !== void 0)
    }
    ,
    Array.prototype.groupBy = function(t, e) {
        const n = new Map;
        for (const r of this) {
            const s = r[t]
              , i = n.get(s);
            i ? i.push(r) : n.set(s, [r])
        }
        if (e) {
            const r = [...n.keys()].sortBy(e)
              , s = new Map;
            for (const i of r)
                s.set(i, n.get(i));
            return s
        } else
            return n
    }
    ,
    Array.prototype.orderBy = function(t, e) {
        return Of(this, t, e)
    }
    ,
    Array.prototype.sortBy = function(t) {
        return Gi(this, t)
    }
    ,
    !("at"in Array.prototype)) {
        let t = function(e) {
            if (e = Math.trunc(e) || 0,
            e < 0 && (e += this.length),
            !(e < 0 || e >= this.length))
                return this[e]
        };
        Object.defineProperty(Array.prototype, "at", {
            value: t,
            writable: !0,
            enumerable: !1,
            configurable: !0
        })
    }
}
const Aj = 60 * 60 * 1e3
  , kg = (t,e,n)=>{
    const [r,s] = t.split("/")
      , [i,a] = s.split(":");
    return Date.UTC(n, r - 1, i, a) - e * Aj
}
  , jj = (t,e,n,r,s)=>{
    const i = new Date(t).getUTCFullYear()
      , a = kg(e, s, i)
      , o = kg(n, r, i);
    return t >= a && t < o
}
  , Vk = jj
  , Mj = t=>{
    let n = t.timezones[t.tz];
    if (n === void 0)
        return console.warn("Warning: couldn't find timezone " + t.tz),
        0;
    if (n.dst === void 0)
        return n.offset;
    let r = n.offset
      , s = n.offset + 1;
    n.hem === "n" && (s = r - 1);
    let i = n.dst.split("->");
    return Vk(t.epoch, i[0], i[1], r, s) === !0 ? r : s
}
  , Tj = Mj
  , xg = {
    "9|s": "2/dili,2/jayapura",
    "9|n": "2/chita,2/khandyga,2/pyongyang,2/seoul,2/tokyo,2/yakutsk,11/palau,japan,rok",
    "9.5|s|04/07:03->10/06:02": "4/adelaide,4/broken_hill,4/south,4/yancowinna",
    "9.5|s": "4/darwin,4/north",
    "8|s|03/13:01->10/02:00": "12/casey",
    "8|s": "2/kuala_lumpur,2/makassar,2/singapore,4/perth,2/ujung_pandang,4/west,singapore",
    "8|n": "2/brunei,2/choibalsan,2/hong_kong,2/irkutsk,2/kuching,2/macau,2/manila,2/shanghai,2/taipei,2/ulaanbaatar,2/chongqing,2/chungking,2/harbin,2/macao,2/ulan_bator,hongkong,prc,roc",
    "8.75|s": "4/eucla",
    "7|s": "12/davis,2/jakarta,9/christmas",
    "7|n": "2/bangkok,2/barnaul,2/hovd,2/krasnoyarsk,2/novokuznetsk,2/novosibirsk,2/phnom_penh,2/pontianak,2/ho_chi_minh,2/tomsk,2/vientiane,2/saigon",
    "6|s": "12/vostok",
    "6|n": "2/almaty,2/bishkek,2/dhaka,2/omsk,2/qyzylorda,2/qostanay,2/thimphu,2/urumqi,9/chagos,2/dacca,2/kashgar,2/thimbu",
    "6.5|n": "2/yangon,9/cocos,2/rangoon",
    "5|s": "12/mawson,9/kerguelen",
    "5|n": "2/aqtau,2/aqtobe,2/ashgabat,2/atyrau,2/dushanbe,2/karachi,2/oral,2/samarkand,2/tashkent,2/yekaterinburg,9/maldives,2/ashkhabad",
    "5.75|n": "2/kathmandu,2/katmandu",
    "5.5|n": "2/kolkata,2/colombo,2/calcutta",
    "4|s": "9/reunion",
    "4|n": "2/baku,2/dubai,2/muscat,2/tbilisi,2/yerevan,8/astrakhan,8/samara,8/saratov,8/ulyanovsk,8/volgograd,9/mahe,9/mauritius,2/volgograd",
    "4.5|n": "2/kabul",
    "3|s": "12/syowa,9/antananarivo",
    "3|n|04/28:00->10/26:24": "0/cairo,egypt",
    "3|n|03/31:03->10/27:04": "2/famagusta,2/nicosia,8/athens,8/bucharest,8/helsinki,8/mariehamn,8/riga,8/sofia,8/tallinn,8/uzhgorod,8/vilnius,8/zaporozhye,8/nicosia,eet",
    "3|n|03/31:02->10/27:03": "8/chisinau,8/tiraspol",
    "3|n|03/31:00->10/26:24": "2/beirut",
    "3|n|03/31:00->10/25:01": "2/gaza,2/hebron",
    "3|n|03/29:02->10/27:02": "2/jerusalem,2/tel_aviv,israel",
    "3|n|03/26:03->10/29:04": "8/kyiv,8/kiev",
    "3|n": "0/addis_ababa,0/asmara,0/asmera,0/dar_es_salaam,0/djibouti,0/juba,0/kampala,0/mogadishu,0/nairobi,2/aden,2/amman,2/baghdad,2/bahrain,2/damascus,2/kuwait,2/qatar,2/riyadh,8/istanbul,8/kirov,8/minsk,8/moscow,8/simferopol,9/comoro,9/mayotte,2/istanbul,turkey,w-su",
    "3.5|n": "2/tehran,iran",
    "2|s|03/31:02->10/27:02": "12/troll",
    "2|s": "0/gaborone,0/harare,0/johannesburg,0/lubumbashi,0/lusaka,0/maputo,0/maseru,0/mbabane",
    "2|n|03/31:02->10/27:03": "0/ceuta,arctic/longyearbyen,8/amsterdam,8/andorra,8/belgrade,8/berlin,8/bratislava,8/brussels,8/budapest,8/busingen,8/copenhagen,8/gibraltar,8/ljubljana,8/luxembourg,8/madrid,8/malta,8/monaco,8/oslo,8/paris,8/podgorica,8/prague,8/rome,8/san_marino,8/sarajevo,8/skopje,8/stockholm,8/tirane,8/vaduz,8/vatican,8/vienna,8/warsaw,8/zagreb,8/zurich,3/jan_mayen,poland,cet,met",
    "2|n": "0/blantyre,0/bujumbura,0/khartoum,0/kigali,0/tripoli,8/kaliningrad,libya",
    "1|s": "0/brazzaville,0/kinshasa,0/luanda,0/windhoek",
    "1|n|03/31:01->10/27:02": "3/canary,3/faroe,3/madeira,8/dublin,8/guernsey,8/isle_of_man,8/jersey,8/lisbon,8/london,3/faeroe,eire,8/belfast,gb-eire,gb,portugal,wet",
    "1|n": "0/algiers,0/bangui,0/douala,0/lagos,0/libreville,0/malabo,0/ndjamena,0/niamey,0/porto-novo,0/tunis",
    "14|n": "11/kiritimati",
    "13|s": "11/apia,11/tongatapu",
    "13|n": "11/enderbury,11/kanton,11/fakaofo",
    "12|s|04/07:03->09/29:02": "12/mcmurdo,11/auckland,12/south_pole,nz",
    "12|s": "11/fiji",
    "12|n": "2/anadyr,2/kamchatka,2/srednekolymsk,11/funafuti,11/kwajalein,11/majuro,11/nauru,11/tarawa,11/wake,11/wallis,kwajalein",
    "12.75|s|04/07:03->04/07:02": "11/chatham,nz-chat",
    "11|s|04/07:03->10/06:02": "12/macquarie",
    "11|s": "11/bougainville",
    "11|n": "2/magadan,2/sakhalin,11/efate,11/guadalcanal,11/kosrae,11/noumea,11/pohnpei,11/ponape",
    "11.5|n|04/07:03->10/06:02": "11/norfolk",
    "10|s|04/07:03->10/06:02": "4/currie,4/hobart,4/melbourne,4/sydney,4/act,4/canberra,4/nsw,4/tasmania,4/victoria",
    "10|s": "12/dumontdurville,4/brisbane,4/lindeman,11/port_moresby,4/queensland",
    "10|n": "2/ust-nera,2/vladivostok,11/guam,11/saipan,11/chuuk,11/truk,11/yap",
    "10.5|s|04/07:01->10/06:02": "4/lord_howe,4/lhi",
    "0|s|03/10:03->04/14:02": "0/casablanca,0/el_aaiun",
    "0|n|03/31:00->10/27:01": "1/scoresbysund,3/azores",
    "0|n": "0/abidjan,0/accra,0/bamako,0/banjul,0/bissau,0/conakry,0/dakar,0/freetown,0/lome,0/monrovia,0/nouakchott,0/ouagadougou,0/sao_tome,1/danmarkshavn,3/reykjavik,3/st_helena,13/gmt,13/utc,0/timbuktu,13/greenwich,13/uct,13/universal,13/zulu,gmt-0,gmt+0,gmt0,greenwich,iceland,uct,universal,utc,zulu,13/unknown,factory",
    "-9|n|03/10:02->11/03:02": "1/adak,1/atka,us/aleutian",
    "-9|n": "11/gambier",
    "-9.5|n": "11/marquesas",
    "-8|n|03/10:02->11/03:02": "1/anchorage,1/juneau,1/nome,1/sitka,1/yakutat,us/alaska",
    "-8|n": "1/metlakatla,11/pitcairn",
    "-7|n|03/10:02->11/03:02": "1/los_angeles,1/santa_isabel,1/tijuana,1/vancouver,1/ensenada,6/pacific,10/bajanorte,us/pacific-new,us/pacific",
    "-7|n": "1/creston,1/dawson,1/dawson_creek,1/fort_nelson,1/hermosillo,1/mazatlan,1/phoenix,1/whitehorse,6/yukon,10/bajasur,us/arizona,mst",
    "-6|s|04/06:22->09/07:22": "11/easter,7/easterisland",
    "-6|n|04/07:02->10/27:02": "1/merida",
    "-6|n|03/12:02->11/05:02": "1/ciudad_juarez",
    "-6|n|03/10:02->11/03:02": "1/boise,1/cambridge_bay,1/denver,1/edmonton,1/inuvik,1/north_dakota,1/ojinaga,1/yellowknife,1/shiprock,6/mountain,navajo,us/mountain",
    "-6|n": "1/bahia_banderas,1/belize,1/chihuahua,1/costa_rica,1/el_salvador,1/guatemala,1/managua,1/mexico_city,1/monterrey,1/regina,1/swift_current,1/tegucigalpa,11/galapagos,6/east-saskatchewan,6/saskatchewan,10/general",
    "-5|s": "1/lima,1/rio_branco,1/porto_acre,5/acre",
    "-5|n|03/10:02->11/03:02": "1/chicago,1/matamoros,1/menominee,1/rainy_river,1/rankin_inlet,1/resolute,1/winnipeg,1/indiana/knox,1/indiana/tell_city,1/north_dakota/beulah,1/north_dakota/center,1/north_dakota/new_salem,1/knox_in,6/central,us/central,us/indiana-starke",
    "-5|n": "1/bogota,1/cancun,1/cayman,1/coral_harbour,1/eirunepe,1/guayaquil,1/jamaica,1/panama,1/atikokan,jamaica,est",
    "-4|s|04/06:24->09/08:00": "1/santiago,7/continental",
    "-4|s|03/23:24->10/06:00": "1/asuncion",
    "-4|s": "1/campo_grande,1/cuiaba,1/la_paz,1/manaus,5/west",
    "-4|n|03/10:02->11/03:02": "1/detroit,1/grand_turk,1/indiana,1/indianapolis,1/iqaluit,1/kentucky,1/louisville,1/montreal,1/nassau,1/new_york,1/nipigon,1/pangnirtung,1/port-au-prince,1/thunder_bay,1/toronto,1/indiana/marengo,1/indiana/petersburg,1/indiana/vevay,1/indiana/vincennes,1/indiana/winamac,1/kentucky/monticello,1/fort_wayne,1/indiana/indianapolis,1/kentucky/louisville,6/eastern,us/east-indiana,us/eastern,us/michigan",
    "-4|n|03/10:00->11/03:01": "1/havana,cuba",
    "-4|n": "1/anguilla,1/antigua,1/aruba,1/barbados,1/blanc-sablon,1/boa_vista,1/caracas,1/curacao,1/dominica,1/grenada,1/guadeloupe,1/guyana,1/kralendijk,1/lower_princes,1/marigot,1/martinique,1/montserrat,1/port_of_spain,1/porto_velho,1/puerto_rico,1/santo_domingo,1/st_barthelemy,1/st_kitts,1/st_lucia,1/st_thomas,1/st_vincent,1/tortola,1/virgin",
    "-3|s": "1/argentina,1/buenos_aires,1/catamarca,1/cordoba,1/fortaleza,1/jujuy,1/mendoza,1/montevideo,1/punta_arenas,1/sao_paulo,12/palmer,12/rothera,3/stanley,1/argentina/la_rioja,1/argentina/rio_gallegos,1/argentina/salta,1/argentina/san_juan,1/argentina/san_luis,1/argentina/tucuman,1/argentina/ushuaia,1/argentina/comodrivadavia,1/argentina/buenos_aires,1/argentina/catamarca,1/argentina/cordoba,1/argentina/jujuy,1/argentina/mendoza,1/argentina/rosario,1/rosario,5/east",
    "-3|n|03/10:02->11/03:02": "1/glace_bay,1/goose_bay,1/halifax,1/moncton,1/thule,3/bermuda,6/atlantic",
    "-3|n": "1/araguaina,1/bahia,1/belem,1/cayenne,1/maceio,1/paramaribo,1/recife,1/santarem",
    "-2|n|03/30:22->10/26:23": "1/nuuk,1/godthab",
    "-2|n|03/10:02->11/03:02": "1/miquelon",
    "-2|n": "1/noronha,3/south_georgia,5/denoronha",
    "-2.5|n|03/10:02->11/03:02": "1/st_johns,6/newfoundland",
    "-1|n": "3/cape_verde",
    "-11|n": "11/midway,11/niue,11/pago_pago,11/samoa,us/samoa",
    "-10|n": "11/honolulu,11/johnston,11/rarotonga,11/tahiti,us/hawaii,hst"
}
  , Lj = ["africa", "america", "asia", "atlantic", "australia", "brazil", "canada", "chile", "europe", "indian", "mexico", "pacific", "antarctica", "etc"];
let i0 = {};
Object.keys(xg).forEach(t=>{
    let e = t.split("|")
      , n = {
        offset: Number(e[0]),
        hem: e[1]
    };
    e[2] && (n.dst = e[2]),
    xg[t].split(",").forEach(s=>{
        s = s.replace(/(^[0-9]+)\//, (i,a)=>(a = Number(a),
        Lj[a] + "/")),
        i0[s] = n
    }
    )
}
);
i0.utc = {
    offset: 0,
    hem: "n"
};
for (let t = -14; t <= 14; t += .5) {
    let e = t;
    e > 0 && (e = "+" + e);
    let n = "etc/gmt" + e;
    i0[n] = {
        offset: t * -1,
        hem: "n"
    },
    n = "utc/gmt" + e,
    i0[n] = {
        offset: t * -1,
        hem: "n"
    }
}
const Bk = i0
  , Oj = "utc"
  , Rj = ()=>{
    if (typeof Intl > "u" || typeof Intl.DateTimeFormat > "u")
        return null;
    let t = Intl.DateTimeFormat();
    if (typeof t > "u" || typeof t.resolvedOptions > "u")
        return null;
    let e = t.resolvedOptions().timeZone;
    return e ? e.toLowerCase() : null
}
  , Pj = ()=>{
    let t = Rj();
    return t === null ? Oj : t
}
  , $j = Pj
  , Fj = /(\-?[0-9]+)h(rs)?/i
  , Nj = /(\-?[0-9]+)/
  , Vj = /utc([\-+]?[0-9]+)/i
  , Bj = /gmt([\-+]?[0-9]+)/i
  , P5 = function(t) {
    return t = Number(t),
    t >= -13 && t <= 13 ? (t = t * -1,
    t = (t > 0 ? "+" : "") + t,
    "etc/gmt" + t) : null
}
  , Uj = function(t) {
    let e = t.match(Fj);
    if (e !== null || (e = t.match(Vj),
    e !== null))
        return P5(e[1]);
    if (e = t.match(Bj),
    e !== null) {
        let n = Number(e[1]) * -1;
        return P5(n)
    }
    return e = t.match(Nj),
    e !== null ? P5(e[1]) : null
}
  , Hj = Uj;
let $5 = $j();
const Dg = Object.keys(Bk).reduce((t,e)=>{
    let n = e.split("/")[1] || "";
    return n = n.replace(/_/g, " "),
    t[n] = e,
    t
}
, {})
  , zj = t=>(t = t.replace(/ time/g, ""),
t = t.replace(/ (standard|daylight|summer)/g, ""),
t = t.replace(/\b(east|west|north|south)ern/g, "$1"),
t = t.replace(/\b(africa|america|australia)n/g, "$1"),
t = t.replace(/\beuropean/g, "europe"),
t = t.replace(/\islands/g, "island"),
t)
  , Zj = (t,e)=>{
    if (!t)
        return e.hasOwnProperty($5) || (console.warn(`Unrecognized IANA id '${$5}'. Setting fallback tz to UTC.`),
        $5 = "utc"),
        $5;
    typeof t != "string" && console.error("Timezone must be a string - recieved: '", t, `'
`);
    let n = t.trim();
    if (n = n.toLowerCase(),
    e.hasOwnProperty(n) === !0 || (n = zj(n),
    e.hasOwnProperty(n) === !0))
        return n;
    if (Dg.hasOwnProperty(n) === !0)
        return Dg[n];
    if (/[0-9]/.test(n) === !0) {
        let r = Hj(n);
        if (r)
            return r
    }
    throw new Error("Spacetime: Cannot find timezone named: '" + t + "'. Please enter an IANA timezone id.")
}
  , V2 = Zj;
function i5(t) {
    return t % 4 === 0 && t % 100 !== 0 || t % 400 === 0
}
function Uk(t) {
    return Object.prototype.toString.call(t) === "[object Date]" && !isNaN(t.valueOf())
}
function qj(t) {
    return Object.prototype.toString.call(t) === "[object Array]"
}
function y1(t) {
    return Object.prototype.toString.call(t) === "[object Object]"
}
function Wj(t) {
    return Object.prototype.toString.call(t) === "[object Boolean]"
}
function vt(t, e=2) {
    let n = "0";
    return t = t + "",
    t.length >= e ? t : new Array(e - t.length + 1).join(n) + t
}
function Gj(t) {
    return t ? t[0].toUpperCase() + t.substr(1) : ""
}
function Ja(t) {
    let e = t % 10
      , n = t % 100;
    return e === 1 && n !== 11 ? t + "st" : e === 2 && n !== 12 ? t + "nd" : e === 3 && n !== 13 ? t + "rd" : t + "th"
}
function ud(t) {
    return t = String(t),
    t = t.replace(/([0-9])(st|nd|rd|th)$/i, "$1"),
    parseInt(t, 10)
}
function fl(t="") {
    return t = t.toLowerCase().trim(),
    t = t.replace(/ies$/, "y"),
    t = t.replace(/s$/, ""),
    t = t.replace(/-/g, ""),
    t === "day" || t === "days" ? "date" : t === "min" || t === "mins" ? "minute" : t
}
function uu(t) {
    return typeof t == "number" ? t : Uk(t) ? t.getTime() : t.epoch ? t.epoch : null
}
function yc(t, e) {
    return y1(t) === !1 ? e.clone().set(t) : t
}
function Du(t, e="") {
    const n = t > 0 ? "+" : "-"
      , r = Math.abs(t)
      , s = vt(parseInt("" + r, 10))
      , i = vt(r % 1 * 60);
    return `${n}${s}${e}${i}`
}
const G7 = {
    year: new Date().getFullYear(),
    month: 0,
    date: 1
}
  , Kj = (t,e,n)=>{
    if (e.length === 0)
        return t;
    let r = ["year", "month", "date", "hour", "minute", "second", "millisecond"];
    for (let s = 0; s < r.length; s++) {
        let i = e[s] || n[r[s]] || G7[r[s]] || 0;
        t = t[r[s]](i)
    }
    return t
}
  , Yj = (t,e,n)=>{
    if (Object.keys(e).length === 0)
        return t;
    e = Object.assign({}, G7, n, e);
    let r = Object.keys(e);
    for (let s = 0; s < r.length; s++) {
        let i = r[s];
        if (t[i] === void 0 || typeof t[i] != "function" || e[i] === null || e[i] === void 0 || e[i] === "")
            continue;
        let a = e[i] || n[i] || G7[i] || 0;
        t = t[i](a)
    }
    return t
}
  , Qj = function(t, e) {
    return e > 0 && e < 25e8 && t.silent === !1 && (console.warn("  - Warning: You are setting the date to January 1970."),
    console.warn("       -   did input seconds instead of milliseconds?")),
    t.epoch = e,
    t
}
  , Xj = {
    parseArray: Kj,
    parseObject: Yj,
    parseNumber: Qj
}
  , cc = function(t) {
    return t.epoch = Date.now(),
    Object.keys(t._today || {}).forEach(e=>{
        typeof t[e] == "function" && (t = t[e](t._today[e]))
    }
    ),
    t
}
  , K7 = {
    now: t=>cc(t),
    today: t=>cc(t),
    tonight: t=>(t = cc(t),
    t = t.hour(18),
    t),
    tomorrow: t=>(t = cc(t),
    t = t.add(1, "day"),
    t = t.startOf("day"),
    t),
    yesterday: t=>(t = cc(t),
    t = t.subtract(1, "day"),
    t = t.startOf("day"),
    t),
    christmas: t=>{
        let e = cc(t).year();
        return t = t.set([e, 11, 25, 18, 0, 0]),
        t
    }
    ,
    "new years": t=>{
        let e = cc(t).year();
        return t = t.set([e, 11, 31, 18, 0, 0]),
        t
    }
};
K7["new years eve"] = K7["new years"];
const Sg = K7
  , Jj = function(t) {
    return t = t.replace(/\b(mon|tues?|wed|wednes|thur?s?|fri|sat|satur|sun)(day)?\b/i, ""),
    t = t.replace(/([0-9])(th|rd|st|nd)/, "$1"),
    t = t.replace(/,/g, ""),
    t = t.replace(/ +/g, " ").trim(),
    t
}
  , eM = Jj;
let Qs = {
    millisecond: 1
};
Qs.second = 1e3;
Qs.minute = 6e4;
Qs.hour = 36e5;
Qs.day = 864e5;
Qs.date = Qs.day;
Qs.month = 864e5 * 29.5;
Qs.week = 6048e5;
Qs.year = 3154e7;
Object.keys(Qs).forEach(t=>{
    Qs[t + "s"] = Qs[t]
}
);
const Ar = Qs
  , F5 = (t,e,n,r,s)=>{
    let i = t.d[n]();
    if (i === e)
        return;
    let a = s === null ? null : t.d[s]()
      , o = t.epoch
      , l = e - i;
    t.epoch += Ar[r] * l,
    r === "day" && Math.abs(l) > 28 && e < 28 && (t.epoch += Ar.hour),
    s !== null && a !== t.d[s]() && (t.epoch = o);
    const d = Ar[r] / 2;
    for (; t.d[n]() < e; )
        t.epoch += d;
    for (; t.d[n]() > e; )
        t.epoch -= d;
    s !== null && a !== t.d[s]() && (t.epoch = o)
}
  , qh = {
    year: {
        valid: t=>t > -4e3 && t < 4e3,
        walkTo: (t,e)=>F5(t, e, "getFullYear", "year", null)
    },
    month: {
        valid: t=>t >= 0 && t <= 11,
        walkTo: (t,e)=>{
            let n = t.d
              , r = n.getMonth()
              , s = t.epoch
              , i = n.getFullYear();
            if (r === e)
                return;
            let a = e - r;
            for (t.epoch += Ar.day * (a * 28),
            i !== t.d.getFullYear() && (t.epoch = s); t.d.getMonth() < e; )
                t.epoch += Ar.day;
            for (; t.d.getMonth() > e; )
                t.epoch -= Ar.day
        }
    },
    date: {
        valid: t=>t > 0 && t <= 31,
        walkTo: (t,e)=>F5(t, e, "getDate", "day", "getMonth")
    },
    hour: {
        valid: t=>t >= 0 && t < 24,
        walkTo: (t,e)=>F5(t, e, "getHours", "hour", "getDate")
    },
    minute: {
        valid: t=>t >= 0 && t < 60,
        walkTo: (t,e)=>F5(t, e, "getMinutes", "minute", "getHours")
    },
    second: {
        valid: t=>t >= 0 && t < 60,
        walkTo: (t,e)=>{
            t.epoch = t.seconds(e).epoch
        }
    },
    millisecond: {
        valid: t=>t >= 0 && t < 1e3,
        walkTo: (t,e)=>{
            t.epoch = t.milliseconds(e).epoch
        }
    }
}
  , tM = (t,e)=>{
    let n = Object.keys(qh)
      , r = t.clone();
    for (let s = 0; s < n.length; s++) {
        let i = n[s]
          , a = e[i];
        if (a === void 0 && (a = r[i]()),
        typeof a == "string" && (a = parseInt(a, 10)),
        !qh[i].valid(a)) {
            t.epoch = null,
            t.silent === !1 && console.warn("invalid " + i + ": " + a);
            return
        }
        qh[i].walkTo(t, a)
    }
}
  , an = tM
  , nM = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
  , qc = nM;
let a0 = ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"]
  , o0 = ["january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december"];
function rM() {
    const t = {
        sep: 8
    };
    for (let e = 0; e < a0.length; e++)
        t[a0[e]] = e;
    for (let e = 0; e < o0.length; e++)
        t[o0[e]] = e;
    return t
}
function hu() {
    return a0
}
function sM() {
    return o0
}
function Hk() {
    return rM()
}
function iM(t) {
    a0 = t.short || a0,
    o0 = t.long || o0
}
const aM = (t,e)=>{
    if (!e)
        return t;
    let n = 0;
    if (/^[\+-]?[0-9]{2}:[0-9]{2}$/.test(e) && (/:00/.test(e) === !0 && (e = e.replace(/:00/, "")),
    /:30/.test(e) === !0 && (e = e.replace(/:30/, ".5"))),
    /^[\+-]?[0-9]{4}$/.test(e) && (e = e.replace(/30$/, ".5")),
    n = parseFloat(e),
    Math.abs(n) > 100 && (n = n / 100),
    n === 0 || e === "Z" || e === "z")
        return t.tz = "etc/gmt",
        t;
    n *= -1,
    n >= 0 && (n = "+" + n);
    let r = "etc/gmt" + n;
    return t.timezones[r] && (t.tz = r),
    t
}
  , oM = aM
  , cM = function(t="") {
    return t = String(t),
    t.length > 3 ? t = t.substr(0, 3) : t.length === 1 ? t = t + "00" : t.length === 2 && (t = t + "0"),
    Number(t) || 0
}
  , lM = (t,e="")=>{
    e = e.replace(/^\s+/, "").toLowerCase();
    let n = e.match(/([0-9]{1,2}):([0-9]{1,2}):?([0-9]{1,2})?[:\.]?([0-9]{1,4})?/);
    if (n !== null) {
        let r = Number(n[1]);
        if (r < 0 || r > 24)
            return t.startOf("day");
        let s = Number(n[2]);
        if (n[2].length < 2 || s < 0 || s > 59)
            return t.startOf("day");
        t = t.hour(r),
        t = t.minute(s),
        t = t.seconds(n[3] || 0),
        t = t.millisecond(cM(n[4]));
        let i = e.match(/[\b0-9] ?(am|pm)\b/);
        return i !== null && i[1] && (t = t.ampm(i[1])),
        t
    }
    if (n = e.match(/([0-9]+) ?(am|pm)/),
    n !== null && n[1]) {
        let r = Number(n[1]);
        return r > 12 || r < 1 ? t.startOf("day") : (t = t.hour(n[1] || 0),
        t = t.ampm(n[2]),
        t = t.startOf("hour"),
        t)
    }
    return t = t.startOf("day"),
    t
}
  , cs = lM;
let _g = Hk();
const ls = t=>{
    if (qc.hasOwnProperty(t.month) !== !0)
        return !1;
    if (t.month === 1)
        return i5(t.year) && t.date <= 29 ? !0 : t.date <= 28;
    let e = qc[t.month] || 0;
    return t.date <= e
}
  , Co = (t="",e)=>{
    if (t = t.trim(),
    /^'[0-9][0-9]$/.test(t) === !0) {
        let r = Number(t.replace(/'/, ""));
        return r > 50 ? 1900 + r : 2e3 + r
    }
    let n = parseInt(t, 10);
    return !n && e && (n = e.year),
    n = n || new Date().getFullYear(),
    n
}
  , S1 = function(t) {
    return t = t.toLowerCase().trim(),
    t === "sept" ? _g.sep : _g[t]
}
  , dM = [{
    reg: /^(\-?0?0?[0-9]{3,4})-([0-9]{1,2})-([0-9]{1,2})[T| ]([0-9.:]+)(Z|[0-9\-\+:]+)?$/i,
    parse: (t,e)=>{
        let n = {
            year: e[1],
            month: parseInt(e[2], 10) - 1,
            date: e[3]
        };
        return ls(n) === !1 ? (t.epoch = null,
        t) : (oM(t, e[5]),
        an(t, n),
        t = cs(t, e[4]),
        t)
    }
}, {
    reg: /^([0-9]{4})[\-\/\. ]([0-9]{1,2})[\-\/\. ]([0-9]{1,2})( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,
    parse: (t,e)=>{
        let n = {
            year: e[1],
            month: parseInt(e[2], 10) - 1,
            date: parseInt(e[3], 10)
        };
        return n.month >= 12 && (n.date = parseInt(e[2], 10),
        n.month = parseInt(e[3], 10) - 1),
        ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = cs(t, e[4]),
        t)
    }
}, {
    reg: /^([0-9]{4})[\-\/\. ]([a-z]+)[\-\/\. ]([0-9]{1,2})( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,
    parse: (t,e)=>{
        let n = {
            year: Co(e[1], t._today),
            month: S1(e[2]),
            date: ud(e[3] || "")
        };
        return ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = cs(t, e[4]),
        t)
    }
}]
  , uM = [{
    reg: /^([0-9]{1,2})[\-\/.]([0-9]{1,2})[\-\/.]?([0-9]{4})?( [0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,
    parse: (t,e)=>{
        let n = parseInt(e[1], 10) - 1
          , r = parseInt(e[2], 10);
        (t.british || n >= 12) && (r = parseInt(e[1], 10),
        n = parseInt(e[2], 10) - 1);
        let s = {
            date: r,
            month: n,
            year: Co(e[3], t._today) || new Date().getFullYear()
        };
        return ls(s) === !1 ? (t.epoch = null,
        t) : (an(t, s),
        t = cs(t, e[4]),
        t)
    }
}, {
    reg: /^([a-z]+)[\-\/\. ]([0-9]{1,2})[\-\/\. ]?([0-9]{4}|'[0-9]{2})?( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,
    parse: (t,e)=>{
        let n = {
            year: Co(e[3], t._today),
            month: S1(e[1]),
            date: ud(e[2] || "")
        };
        return ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = cs(t, e[4]),
        t)
    }
}, {
    reg: /^([a-z]+) ([0-9]{1,2})( [0-9]{4})?( ([0-9:]+( ?am| ?pm| ?gmt)?))?$/i,
    parse: (t,e)=>{
        let n = {
            year: Co(e[3], t._today),
            month: S1(e[1]),
            date: ud(e[2] || "")
        };
        return ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = cs(t, e[4]),
        t)
    }
}, {
    reg: /^([a-z]+) ([0-9]{1,2})( [0-9:]+)?( \+[0-9]{4})?( [0-9]{4})?$/i,
    parse: (t,e)=>{
        let n = {
            year: Co(e[5], t._today),
            month: S1(e[1]),
            date: ud(e[2] || "")
        };
        return ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = cs(t, e[3]),
        t)
    }
}]
  , hM = [{
    reg: /^([0-9]{1,2})[\-\/]([a-z]+)[\-\/]?([0-9]{4})?$/i,
    parse: (t,e)=>{
        let n = {
            year: Co(e[3], t._today),
            month: S1(e[2]),
            date: ud(e[1] || "")
        };
        return ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = cs(t, e[4]),
        t)
    }
}, {
    reg: /^([0-9]{1,2})( [a-z]+)( [0-9]{4}| '[0-9]{2})? ?([0-9]{1,2}:[0-9]{2}:?[0-9]{0,2}? ?(am|pm|gmt))?$/i,
    parse: (t,e)=>{
        let n = {
            year: Co(e[3], t._today),
            month: S1(e[2]),
            date: ud(e[1])
        };
        return !n.month || ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = cs(t, e[4]),
        t)
    }
}, {
    reg: /^([0-9]{1,2})[\. -/]([a-z]+)[\. -/]([0-9]{4})?( [0-9]{1,2}(:[0-9]{0,2})?(:[0-9]{0,3})? ?(am|pm)?)?$/i,
    parse: (t,e)=>{
        let n = {
            date: Number(e[1]),
            month: S1(e[2]),
            year: Number(e[3])
        };
        return ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = t.startOf("day"),
        t = cs(t, e[4]),
        t)
    }
}]
  , fM = [{
    reg: /^([0-9]{4})[\-\/]([0-9]{2})$/i,
    parse: (t,e)=>{
        let n = {
            year: e[1],
            month: parseInt(e[2], 10) - 1,
            date: 1
        };
        return ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = cs(t, e[4]),
        t)
    }
}, {
    reg: /^([a-z]+) ([0-9]{4})$/i,
    parse: (t,e)=>{
        let n = {
            year: Co(e[2], t._today),
            month: S1(e[1]),
            date: t._today.date || 1
        };
        return ls(n) === !1 ? (t.epoch = null,
        t) : (an(t, n),
        t = cs(t, e[4]),
        t)
    }
}, {
    reg: /^(q[0-9])( of)?( [0-9]{4})?/i,
    parse: (t,e)=>{
        let n = e[1] || "";
        t = t.quarter(n);
        let r = e[3] || "";
        return r && (r = r.trim(),
        t = t.year(r)),
        t
    }
}, {
    reg: /^(spring|summer|winter|fall|autumn)( of)?( [0-9]{4})?/i,
    parse: (t,e)=>{
        let n = e[1] || "";
        t = t.season(n);
        let r = e[3] || "";
        return r && (r = r.trim(),
        t = t.year(r)),
        t
    }
}, {
    reg: /^[0-9,]+ ?b\.?c\.?$/i,
    parse: (t,e)=>{
        let n = e[0] || "";
        n = n.replace(/^([0-9,]+) ?b\.?c\.?$/i, "-$1");
        let r = new Date
          , s = {
            year: parseInt(n.trim(), 10),
            month: r.getMonth(),
            date: r.getDate()
        };
        return ls(s) === !1 ? (t.epoch = null,
        t) : (an(t, s),
        t = cs(t),
        t)
    }
}, {
    reg: /^[0-9,]+ ?(a\.?d\.?|c\.?e\.?)$/i,
    parse: (t,e)=>{
        let n = e[0] || "";
        n = n.replace(/,/g, "");
        let r = new Date
          , s = {
            year: parseInt(n.trim(), 10),
            month: r.getMonth(),
            date: r.getDate()
        };
        return ls(s) === !1 ? (t.epoch = null,
        t) : (an(t, s),
        t = cs(t),
        t)
    }
}, {
    reg: /^[0-9]{4}( ?a\.?d\.?)?$/i,
    parse: (t,e)=>{
        let n = t._today;
        n.month && !n.date && (n.date = 1);
        let r = new Date
          , s = {
            year: Co(e[0], n),
            month: n.month || r.getMonth(),
            date: n.date || r.getDate()
        };
        return ls(s) === !1 ? (t.epoch = null,
        t) : (an(t, s),
        t = cs(t),
        t)
    }
}]
  , Wh = [].concat(dM, uM, hM, fM)
  , pM = function(t, e, n) {
    for (let r = 0; r < Wh.length; r++) {
        let s = e.match(Wh[r].reg);
        if (s) {
            let i = Wh[r].parse(t, s, n);
            if (i !== null && i.isValid())
                return i
        }
    }
    return t.silent === !1 && console.warn("Warning: couldn't parse date-string: '" + e + "'"),
    t.epoch = null,
    t
}
  , mM = pM
  , {parseArray: gM, parseObject: Ig, parseNumber: yM} = Xj
  , Eg = {
    year: new Date().getFullYear(),
    month: 0,
    date: 1
}
  , CM = (t,e)=>{
    let n = t._today || Eg;
    if (typeof e == "number")
        return yM(t, e);
    if (t.epoch = Date.now(),
    t._today && y1(t._today) && Object.keys(t._today).length > 0) {
        let r = Ig(t, n, Eg);
        r.isValid() && (t.epoch = r.epoch)
    }
    return e == null || e === "" ? t : Uk(e) === !0 ? (t.epoch = e.getTime(),
    t) : qj(e) === !0 ? (t = gM(t, e, n),
    t) : y1(e) === !0 ? e.epoch ? (t.epoch = e.epoch,
    t.tz = e.tz,
    t) : (t = Ig(t, e, n),
    t) : typeof e != "string" ? t : (e = eM(e),
    Sg.hasOwnProperty(e) === !0 ? (t = Sg[e](t),
    t) : mM(t, e))
}
  , zk = CM;
let Y7 = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"]
  , Q7 = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"];
function c0() {
    return Y7
}
function B2() {
    return Q7
}
function bM(t) {
    Y7 = t.short || Y7,
    Q7 = t.long || Q7
}
const Ag = {
    mo: 1,
    tu: 2,
    we: 3,
    th: 4,
    fr: 5,
    sa: 6,
    su: 7,
    tues: 2,
    weds: 3,
    wedn: 3,
    thur: 4,
    thurs: 4
};
let Zk = !0;
function vM() {
    return Zk
}
function wM(t) {
    Zk = t
}
const kM = t=>{
    let e = t.timezone().current.offset;
    return e ? Du(e, ":") : "Z"
}
  , jg = kM
  , ao = t=>vM() ? Gj(t) : t
  , xM = t=>t >= 0 ? vt(t, 4) : (t = Math.abs(t),
"-" + vt(t, 4))
  , Ql = {
    day: t=>ao(t.dayName()),
    "day-short": t=>ao(c0()[t.day()]),
    "day-number": t=>t.day(),
    "day-ordinal": t=>Ja(t.day()),
    "day-pad": t=>vt(t.day()),
    date: t=>t.date(),
    "date-ordinal": t=>Ja(t.date()),
    "date-pad": t=>vt(t.date()),
    month: t=>ao(t.monthName()),
    "month-short": t=>ao(hu()[t.month()]),
    "month-number": t=>t.month(),
    "month-ordinal": t=>Ja(t.month()),
    "month-pad": t=>vt(t.month()),
    "iso-month": t=>vt(t.month() + 1),
    year: t=>{
        let e = t.year();
        return e > 0 ? e : (e = Math.abs(e),
        e + " BC")
    }
    ,
    "year-short": t=>{
        let e = t.year();
        return e > 0 ? `'${String(t.year()).substr(2, 4)}` : (e = Math.abs(e),
        e + " BC")
    }
    ,
    "iso-year": t=>{
        let e = t.year()
          , n = e < 0
          , r = vt(Math.abs(e), 4);
        return n && (r = vt(r, 6),
        r = "-" + r),
        r
    }
    ,
    time: t=>t.time(),
    "time-24": t=>`${t.hour24()}:${vt(t.minute())}`,
    hour: t=>t.hour12(),
    "hour-pad": t=>vt(t.hour12()),
    "hour-24": t=>t.hour24(),
    "hour-24-pad": t=>vt(t.hour24()),
    minute: t=>t.minute(),
    "minute-pad": t=>vt(t.minute()),
    second: t=>t.second(),
    "second-pad": t=>vt(t.second()),
    millisecond: t=>t.millisecond(),
    "millisecond-pad": t=>vt(t.millisecond(), 3),
    ampm: t=>t.ampm(),
    AMPM: t=>t.ampm().toUpperCase(),
    quarter: t=>"Q" + t.quarter(),
    season: t=>t.season(),
    era: t=>t.era(),
    json: t=>t.json(),
    timezone: t=>t.timezone().name,
    offset: t=>jg(t),
    numeric: t=>`${t.year()}/${vt(t.month() + 1)}/${vt(t.date())}`,
    "numeric-us": t=>`${vt(t.month() + 1)}/${vt(t.date())}/${t.year()}`,
    "numeric-uk": t=>`${vt(t.date())}/${vt(t.month() + 1)}/${t.year()}`,
    "mm/dd": t=>`${vt(t.month() + 1)}/${vt(t.date())}`,
    iso: t=>{
        let e = t.format("iso-year")
          , n = vt(t.month() + 1)
          , r = vt(t.date())
          , s = vt(t.h24())
          , i = vt(t.minute())
          , a = vt(t.second())
          , o = vt(t.millisecond(), 3)
          , l = jg(t);
        return `${e}-${n}-${r}T${s}:${i}:${a}.${o}${l}`
    }
    ,
    "iso-short": t=>{
        let e = vt(t.month() + 1)
          , n = vt(t.date());
        return `${xM(t.year())}-${e}-${n}`
    }
    ,
    "iso-utc": t=>new Date(t.epoch).toISOString(),
    nice: t=>`${hu()[t.month()]} ${Ja(t.date())}, ${t.time()}`,
    "nice-24": t=>`${hu()[t.month()]} ${Ja(t.date())}, ${t.hour24()}:${vt(t.minute())}`,
    "nice-year": t=>`${hu()[t.month()]} ${Ja(t.date())}, ${t.year()}`,
    "nice-day": t=>`${c0()[t.day()]} ${ao(hu()[t.month()])} ${Ja(t.date())}`,
    "nice-full": t=>`${t.dayName()} ${ao(t.monthName())} ${Ja(t.date())}, ${t.time()}`,
    "nice-full-24": t=>`${t.dayName()} ${ao(t.monthName())} ${Ja(t.date())}, ${t.hour24()}:${vt(t.minute())}`
}
  , Mg = {
    "day-name": "day",
    "month-name": "month",
    "iso 8601": "iso",
    "time-h24": "time-24",
    "time-12": "time",
    "time-h12": "time",
    tz: "timezone",
    "day-num": "day-number",
    "month-num": "month-number",
    "month-iso": "iso-month",
    "year-iso": "iso-year",
    "nice-short": "nice",
    "nice-short-24": "nice-24",
    mdy: "numeric-us",
    dmy: "numeric-uk",
    ymd: "numeric",
    "yyyy/mm/dd": "numeric",
    "mm/dd/yyyy": "numeric-us",
    "dd/mm/yyyy": "numeric-us",
    "little-endian": "numeric-uk",
    "big-endian": "numeric",
    "day-nice": "nice-day"
};
Object.keys(Mg).forEach(t=>Ql[t] = Ql[Mg[t]]);
const DM = (t,e="")=>{
    if (t.isValid() !== !0)
        return "";
    if (Ql.hasOwnProperty(e)) {
        let n = Ql[e](t) || "";
        return e !== "json" && (n = String(n),
        e.toLowerCase() !== "ampm" && (n = ao(n))),
        n
    }
    if (e.indexOf("{") !== -1) {
        let n = /\{(.+?)\}/g;
        return e = e.replace(n, (r,s)=>{
            if (s = s.toLowerCase().trim(),
            Ql.hasOwnProperty(s)) {
                let i = String(Ql[s](t));
                return s.toLowerCase() !== "ampm" ? ao(i) : i
            }
            return ""
        }
        ),
        e
    }
    return t.format("iso-short")
}
  , Gh = DM
  , U2 = {
    G: t=>t.era(),
    GG: t=>t.era(),
    GGG: t=>t.era(),
    GGGG: t=>t.era() === "AD" ? "Anno Domini" : "Before Christ",
    y: t=>t.year(),
    yy: t=>vt(Number(String(t.year()).substr(2, 4))),
    yyy: t=>t.year(),
    yyyy: t=>t.year(),
    yyyyy: t=>"0" + t.year(),
    Q: t=>t.quarter(),
    QQ: t=>t.quarter(),
    QQQ: t=>t.quarter(),
    QQQQ: t=>t.quarter(),
    M: t=>t.month() + 1,
    MM: t=>vt(t.month() + 1),
    MMM: t=>t.format("month-short"),
    MMMM: t=>t.format("month"),
    w: t=>t.week(),
    ww: t=>vt(t.week()),
    d: t=>t.date(),
    dd: t=>vt(t.date()),
    D: t=>t.dayOfYear(),
    DD: t=>vt(t.dayOfYear()),
    DDD: t=>vt(t.dayOfYear(), 3),
    E: t=>t.format("day-short"),
    EE: t=>t.format("day-short"),
    EEE: t=>t.format("day-short"),
    EEEE: t=>t.format("day"),
    EEEEE: t=>t.format("day")[0],
    e: t=>t.day(),
    ee: t=>t.day(),
    eee: t=>t.format("day-short"),
    eeee: t=>t.format("day"),
    eeeee: t=>t.format("day")[0],
    a: t=>t.ampm().toUpperCase(),
    aa: t=>t.ampm().toUpperCase(),
    aaa: t=>t.ampm().toUpperCase(),
    aaaa: t=>t.ampm().toUpperCase(),
    h: t=>t.h12(),
    hh: t=>vt(t.h12()),
    H: t=>t.hour(),
    HH: t=>vt(t.hour()),
    m: t=>t.minute(),
    mm: t=>vt(t.minute()),
    s: t=>t.second(),
    ss: t=>vt(t.second()),
    SSS: t=>vt(t.millisecond(), 3),
    A: t=>t.epoch - t.startOf("day").epoch,
    z: t=>t.timezone().name,
    zz: t=>t.timezone().name,
    zzz: t=>t.timezone().name,
    zzzz: t=>t.timezone().name,
    Z: t=>Du(t.timezone().current.offset),
    ZZ: t=>Du(t.timezone().current.offset),
    ZZZ: t=>Du(t.timezone().current.offset),
    ZZZZ: t=>Du(t.timezone().current.offset, ":")
}
  , Qo = (t,e,n)=>{
    let r = t
      , s = e;
    for (let i = 0; i < n; i += 1)
        U2[r] = U2[s],
        r += t,
        s += e
}
;
Qo("q", "Q", 4);
Qo("L", "M", 4);
Qo("Y", "y", 4);
Qo("c", "e", 4);
Qo("k", "H", 2);
Qo("K", "h", 2);
Qo("S", "s", 2);
Qo("v", "z", 4);
Qo("V", "Z", 4);
const SM = function(t) {
    for (let e = 0; e < t.length; e += 1)
        if (t[e] === "'")
            for (let n = e + 1; n < t.length; n += 1) {
                if (t[n] && (t[e] += t[n]),
                t[n] === "'") {
                    t[n] = null;
                    break
                }
                t[n] = null
            }
    return t.filter(e=>e)
}
  , _M = function(t) {
    for (let e = 0; e < t.length; e += 1) {
        let n = t[e];
        for (let r = e + 1; r < t.length && t[r] === n; r += 1)
            t[e] += t[r],
            t[r] = null
    }
    return t = t.filter(e=>e),
    t = t.map(e=>(e === "''" && (e = "'"),
    e)),
    t
}
  , IM = (t,e)=>{
    let n = e.split("");
    return n = SM(n),
    n = _M(n),
    n.reduce((r,s)=>(U2[s] !== void 0 ? r += U2[s](t) || "" : (/^'.{1,}'$/.test(s) && (s = s.replace(/'/g, "")),
    r += s),
    r), "")
}
  , EM = IM
  , AM = ["year", "season", "quarter", "month", "week", "day", "quarterHour", "hour", "minute"]
  , Tg = function(t, e) {
    let n = t.clone().startOf(e)
      , s = t.clone().endOf(e).epoch - n.epoch
      , i = (t.epoch - n.epoch) / s;
    return parseFloat(i.toFixed(2))
}
  , jM = (t,e)=>{
    if (e)
        return e = fl(e),
        Tg(t, e);
    let n = {};
    return AM.forEach(r=>{
        n[r] = Tg(t, r)
    }
    ),
    n
}
  , MM = jM
  , TM = (t,e)=>{
    let n = t.progress();
    return e = fl(e),
    e === "quarterhour" && (e = "quarterHour"),
    n[e] !== void 0 ? (n[e] > .5 && (t = t.add(1, e)),
    t = t.startOf(e)) : t.silent === !1 && console.warn("no known unit '" + e + "'"),
    t
}
  , LM = TM
  , Lg = (t,e,n)=>{
    let r = 0;
    for (t = t.clone(); t.isBefore(e); )
        t = t.add(1, n),
        r += 1;
    return t.isAfter(e, n) && (r -= 1),
    r
}
  , OM = (t,e,n)=>t.isBefore(e) ? Lg(t, e, n) : Lg(e, t, n) * -1
  , Kh = OM
  , RM = (t,e)=>{
    let n = e.year() - t.year();
    return t = t.year(e.year()),
    t.isAfter(e) && (n -= 1),
    n
}
  , PM = function(t, e) {
    let n = e.epoch - t.epoch
      , r = {
        milliseconds: n,
        seconds: parseInt(n / 1e3, 10)
    };
    r.minutes = parseInt(r.seconds / 60, 10),
    r.hours = parseInt(r.minutes / 60, 10);
    let s = t.clone();
    return r.years = RM(s, e),
    s = t.add(r.years, "year"),
    r.months = r.years * 12,
    s = t.add(r.months, "month"),
    r.months += Kh(s, e, "month"),
    r.quarters = r.years * 4,
    r.quarters += parseInt(r.months % 12 / 3, 10),
    r.weeks = r.years * 52,
    s = t.add(r.weeks, "week"),
    r.weeks += Kh(s, e, "week"),
    r.days = r.weeks * 7,
    s = t.add(r.days, "day"),
    r.days += Kh(s, e, "day"),
    r
}
  , $M = PM
  , FM = function(t) {
    return Object.keys(t).forEach(e=>{
        t[e] *= -1
    }
    ),
    t
}
  , NM = function(t, e, n) {
    e = yc(e, t);
    let r = !1;
    if (t.isAfter(e)) {
        let i = t;
        t = e,
        e = i,
        r = !0
    }
    let s = $M(t, e);
    return r && (s = FM(s)),
    n ? (n = fl(n),
    /s$/.test(n) !== !0 && (n += "s"),
    n === "dates" && (n = "days"),
    s[n]) : s
}
  , VM = NM
  , Tl = t=>Math.abs(t) || 0
  , BM = function(t) {
    let e = "P";
    return e += Tl(t.years) + "Y",
    e += Tl(t.months) + "M",
    e += Tl(t.days) + "DT",
    e += Tl(t.hours) + "H",
    e += Tl(t.minutes) + "M",
    e += Tl(t.seconds) + "S",
    e
}
  , UM = BM;
function HM(t, e) {
    const n = t.isBefore(e)
      , r = n ? e : t;
    let s = n ? t : e;
    s = s.clone();
    const i = {
        years: 0,
        months: 0,
        days: 0,
        hours: 0,
        minutes: 0,
        seconds: 0
    };
    return Object.keys(i).forEach(a=>{
        if (s.isSame(r, a))
            return;
        let o = s.diff(r, a);
        s = s.add(o, a),
        i[a] = o
    }
    ),
    n && Object.keys(i).forEach(a=>{
        i[a] !== 0 && (i[a] *= -1)
    }
    ),
    i
}
let xs = {
    second: "second",
    seconds: "seconds",
    minute: "minute",
    minutes: "minutes",
    hour: "hour",
    hours: "hours",
    day: "day",
    days: "days",
    month: "month",
    months: "months",
    year: "year",
    years: "years"
};
function Og(t) {
    return xs[t] || ""
}
function zM(t={}) {
    xs = {
        second: t.second || xs.second,
        seconds: t.seconds || xs.seconds,
        minute: t.minute || xs.minute,
        minutes: t.minutes || xs.minutes,
        hour: t.hour || xs.hour,
        hours: t.hours || xs.hours,
        day: t.day || xs.day,
        days: t.days || xs.days,
        month: t.month || xs.month,
        months: t.months || xs.months,
        year: t.year || xs.year,
        years: t.years || xs.years
    }
}
let X7 = "past"
  , J7 = "future"
  , e8 = "present"
  , t8 = "now"
  , n8 = "almost"
  , r8 = "over"
  , s8 = t=>`${t} ago`
  , i8 = t=>`in ${t}`;
function Yh(t) {
    return s8(t)
}
function Qh(t) {
    return i8(t)
}
function ZM() {
    return X7
}
function qM() {
    return J7
}
function WM() {
    return e8
}
function Xh() {
    return t8
}
function GM() {
    return n8
}
function KM() {
    return r8
}
function YM(t) {
    s8 = t.pastDistance || s8,
    i8 = t.futureDistance || i8,
    X7 = t.past || X7,
    J7 = t.future || J7,
    e8 = t.present || e8,
    t8 = t.now || t8,
    n8 = t.almost || n8,
    r8 = t.over || r8
}
const Rg = {
    months: {
        almost: 10,
        over: 4
    },
    days: {
        almost: 25,
        over: 10
    },
    hours: {
        almost: 20,
        over: 8
    },
    minutes: {
        almost: 50,
        over: 20
    },
    seconds: {
        almost: 50,
        over: 20
    }
};
function Pg(t, e) {
    return t === 1 ? t + " " + Og(e.slice(0, -1)) : t + " " + Og(e)
}
const QM = function(t) {
    let e = null
      , n = null
      , r = []
      , s = [];
    return Object.keys(t).forEach((i,a,o)=>{
        const l = Math.abs(t[i]);
        if (l === 0)
            return;
        r.push(l + i[0]);
        const d = Pg(l, i);
        if (s.push(d),
        !e) {
            if (e = n = d,
            a > 4)
                return;
            const u = o[a + 1]
              , h = Math.abs(t[u]);
            h > Rg[u].almost ? (e = Pg(l + 1, i),
            n = GM() + " " + e) : h > Rg[u].over && (n = KM() + " " + d)
        }
    }
    ),
    {
        qualified: n,
        rounded: e,
        abbreviated: r,
        englishValues: s
    }
}
  , XM = QM
  , JM = (t,e)=>{
    e = yc(e, t);
    const n = HM(t, e);
    if (Object.keys(n).every(h=>!n[h]) === !0)
        return {
            diff: n,
            rounded: Xh(),
            qualified: Xh(),
            precise: Xh(),
            abbreviated: [],
            iso: "P0Y0M0DT0H0M0S",
            direction: WM()
        };
    let s, i = qM(), {rounded: a, qualified: o, englishValues: l, abbreviated: d} = XM(n);
    s = l.splice(0, 2).join(", "),
    t.isAfter(e) === !0 ? (a = Yh(a),
    o = Yh(o),
    s = Yh(s),
    i = ZM()) : (a = Qh(a),
    o = Qh(o),
    s = Qh(s));
    let u = UM(n);
    return {
        diff: n,
        rounded: a,
        qualified: o,
        precise: s,
        abbreviated: d,
        iso: u,
        direction: i
    }
}
  , eT = JM
  , tT = [["spring", 2, 1], ["summer", 5, 1], ["fall", 8, 1], ["autumn", 8, 1], ["winter", 11, 1]]
  , nT = [["fall", 2, 1], ["autumn", 2, 1], ["winter", 5, 1], ["spring", 8, 1], ["summer", 11, 1]]
  , Ri = {
    north: tT,
    south: nT
}
  , Ec = [null, [0, 1], [3, 1], [6, 1], [9, 1]]
  , Oc = {
    second: t=>(an(t, {
        millisecond: 0
    }),
    t),
    minute: t=>(an(t, {
        second: 0,
        millisecond: 0
    }),
    t),
    quarterhour: t=>{
        let e = t.minutes();
        return e >= 45 ? t = t.minutes(45) : e >= 30 ? t = t.minutes(30) : e >= 15 ? t = t.minutes(15) : t = t.minutes(0),
        an(t, {
            second: 0,
            millisecond: 0
        }),
        t
    }
    ,
    hour: t=>(an(t, {
        minute: 0,
        second: 0,
        millisecond: 0
    }),
    t),
    day: t=>(an(t, {
        hour: 0,
        minute: 0,
        second: 0,
        millisecond: 0
    }),
    t),
    week: t=>{
        let e = t.clone();
        return t = t.day(t._weekStart),
        t.isAfter(e) && (t = t.subtract(1, "week")),
        an(t, {
            hour: 0,
            minute: 0,
            second: 0,
            millisecond: 0
        }),
        t
    }
    ,
    month: t=>(an(t, {
        date: 1,
        hour: 0,
        minute: 0,
        second: 0,
        millisecond: 0
    }),
    t),
    quarter: t=>{
        let e = t.quarter();
        return Ec[e] && an(t, {
            month: Ec[e][0],
            date: Ec[e][1],
            hour: 0,
            minute: 0,
            second: 0,
            millisecond: 0
        }),
        t
    }
    ,
    season: t=>{
        let e = t.season()
          , n = "north";
        t.hemisphere() === "South" && (n = "south");
        for (let r = 0; r < Ri[n].length; r++)
            if (Ri[n][r][0] === e) {
                let s = t.year();
                return e === "winter" && t.month() < 3 && (s -= 1),
                an(t, {
                    year: s,
                    month: Ri[n][r][1],
                    date: Ri[n][r][2],
                    hour: 0,
                    minute: 0,
                    second: 0,
                    millisecond: 0
                }),
                t
            }
        return t
    }
    ,
    year: t=>(an(t, {
        month: 0,
        date: 1,
        hour: 0,
        minute: 0,
        second: 0,
        millisecond: 0
    }),
    t),
    decade: t=>{
        t = t.startOf("year");
        let e = t.year()
          , n = parseInt(e / 10, 10) * 10;
        return t = t.year(n),
        t
    }
    ,
    century: t=>{
        t = t.startOf("year");
        let e = t.year()
          , n = parseInt(e / 100, 10) * 100;
        return t = t.year(n),
        t
    }
};
Oc.date = Oc.day;
const rT = (t,e)=>{
    let n = t.clone();
    return e = fl(e),
    Oc[e] ? Oc[e](n) : e === "summer" || e === "winter" ? (n = n.season(e),
    Oc.season(n)) : n
}
  , sT = (t,e)=>{
    let n = t.clone();
    return e = fl(e),
    Oc[e] && (n = Oc[e](n),
    n = n.add(1, e),
    n = n.subtract(1, "millisecond")),
    n
}
  , iT = function(t) {
    return !!(c0().find(e=>e === t) || B2().find(e=>e === t))
}
  , aT = function(t, e, n) {
    if (!e || !n)
        return [];
    if (e = fl(e),
    n = t.clone().set(n),
    t.isAfter(n)) {
        let i = t;
        t = n,
        n = i
    }
    let r = t.clone();
    iT(e) ? (r = r.next(e),
    e = "week") : r.startOf(e).isBefore(t) && (r = r.next(e));
    let s = [];
    for (; r.isBefore(n); )
        s.push(r),
        r = r.add(1, e);
    return s
}
  , oT = aT
  , cT = t=>t ? t.split("->") : []
  , lT = t=>(t = t[0].toUpperCase() + t.substr(1),
t = t.replace(/[\/_-]([a-z])/gi, e=>e.toUpperCase()),
t = t.replace(/_(of|es)_/i, e=>e.toLowerCase()),
t = t.replace(/\/gmt/i, "/GMT"),
t = t.replace(/\/Dumontdurville$/i, "/DumontDUrville"),
t = t.replace(/\/Mcmurdo$/i, "/McMurdo"),
t = t.replace(/\/Port-au-prince$/i, "/Port-au-Prince"),
t)
  , dT = t=>{
    let e = t.timezones
      , n = t.tz;
    if (e.hasOwnProperty(n) === !1 && (n = V2(t.tz, e)),
    n === null)
        return t.silent === !1 && console.warn("Warn: could not find given or local timezone - '" + t.tz + "'"),
        {
            current: {
                epochShift: 0
            }
        };
    let r = e[n]
      , s = {
        name: lT(n),
        hasDst: !!r.dst,
        default_offset: r.offset,
        hemisphere: r.hem === "s" ? "South" : "North",
        current: {}
    };
    if (s.hasDst) {
        let o = cT(r.dst);
        s.change = {
            start: o[0],
            back: o[1]
        }
    }
    let i = r.offset
      , a = i;
    return s.hasDst === !0 && (s.hemisphere === "North" ? a = i - 1 : a = r.offset + 1),
    s.hasDst === !1 ? (s.current.offset = i,
    s.current.isDST = !1) : Vk(t.epoch, s.change.start, s.change.back, i, a) === !0 ? (s.current.offset = i,
    s.current.isDST = s.hemisphere === "North") : (s.current.offset = a,
    s.current.isDST = s.hemisphere === "South"),
    s
}
  , fu = dT
  , uT = ["century", "decade", "year", "month", "date", "day", "hour", "minute", "second", "millisecond"]
  , Wc = {
    set: function(t, e) {
        let n = this.clone();
        return n = zk(n, t),
        e && (this.tz = V2(e)),
        n
    },
    timezone: function() {
        return fu(this)
    },
    isDST: function() {
        return fu(this).current.isDST
    },
    hasDST: function() {
        return fu(this).hasDst
    },
    offset: function() {
        return fu(this).current.offset * 60
    },
    hemisphere: function() {
        return fu(this).hemisphere
    },
    format: function(t) {
        return Gh(this, t)
    },
    unixFmt: function(t) {
        return EM(this, t)
    },
    startOf: function(t) {
        return rT(this, t)
    },
    endOf: function(t) {
        return sT(this, t)
    },
    leapYear: function() {
        let t = this.year();
        return i5(t)
    },
    progress: function(t) {
        return MM(this, t)
    },
    nearest: function(t) {
        return LM(this, t)
    },
    diff: function(t, e) {
        return VM(this, t, e)
    },
    since: function(t) {
        return t || (t = this.clone().set()),
        eT(this, t)
    },
    next: function(t) {
        return this.add(1, t).startOf(t)
    },
    last: function(t) {
        return this.subtract(1, t).startOf(t)
    },
    isValid: function() {
        return !this.epoch && this.epoch !== 0 ? !1 : !isNaN(this.d.getTime())
    },
    goto: function(t) {
        let e = this.clone();
        return e.tz = V2(t, e.timezones),
        e
    },
    every: function(t, e) {
        if (typeof t == "object" && typeof e == "string") {
            let n = e;
            e = t,
            t = n
        }
        return oT(this, t, e)
    },
    isAwake: function() {
        let t = this.hour();
        return !(t < 8 || t > 22)
    },
    isAsleep: function() {
        return !this.isAwake()
    },
    daysInMonth: function() {
        switch (this.month()) {
        case 0:
            return 31;
        case 1:
            return this.leapYear() ? 29 : 28;
        case 2:
            return 31;
        case 3:
            return 30;
        case 4:
            return 31;
        case 5:
            return 30;
        case 6:
            return 31;
        case 7:
            return 31;
        case 8:
            return 30;
        case 9:
            return 31;
        case 10:
            return 30;
        case 11:
            return 31;
        default:
            throw new Error("Invalid Month state.")
        }
    },
    log: function() {
        return console.log(""),
        console.log(Gh(this, "nice-short")),
        this
    },
    logYear: function() {
        return console.log(""),
        console.log(Gh(this, "full-short")),
        this
    },
    json: function() {
        return uT.reduce((t,e)=>(t[e] = this[e](),
        t), {})
    },
    debug: function() {
        let t = this.timezone()
          , e = this.format("MM") + " " + this.format("date-ordinal") + " " + this.year();
        return e += `
     - ` + this.format("time"),
        console.log(`

`, e + `
     - ` + t.name + " (" + t.current.offset + ")"),
        this
    },
    from: function(t) {
        return t = this.clone().set(t),
        t.since(this)
    },
    fromNow: function() {
        return this.clone().set(Date.now()).since(this)
    },
    weekStart: function(t) {
        if (typeof t == "number")
            return this._weekStart = t,
            this;
        if (typeof t == "string") {
            t = t.toLowerCase().trim();
            let e = c0().indexOf(t);
            e === -1 && (e = B2().indexOf(t)),
            e === -1 && (e = 1),
            this._weekStart = e
        } else
            console.warn("Spacetime Error: Cannot understand .weekStart() input:", t);
        return this
    }
};
Wc.inDST = Wc.isDST;
Wc.round = Wc.nearest;
Wc.each = Wc.every;
const $g = Wc
  , Xo = t=>(typeof t == "string" && (t = parseInt(t, 10)),
t)
  , Jh = ["year", "month", "date", "hour", "minute", "second", "millisecond"]
  , Rf = (t,e,n)=>{
    let r = Jh.indexOf(n)
      , s = Jh.slice(r, Jh.length);
    for (let i = 0; i < s.length; i++) {
        let a = e[s[i]]();
        t[s[i]](a)
    }
    return t
}
  , tc = function(t, e, n, r) {
    return n === !0 && t.isBefore(e) ? t = t.add(1, r) : n === !1 && t.isAfter(e) && (t = t.minus(1, r)),
    t
}
  , hT = function(t, e) {
    e = Xo(e);
    let r = t.millisecond() - e;
    return t.epoch - r
}
  , fT = function(t, e, n) {
    e = Xo(e);
    let r = t.clone()
      , i = (t.second() - e) * Ar.second;
    return t.epoch = t.epoch - i,
    t = tc(t, r, n, "minute"),
    t.epoch
}
  , Fg = function(t, e, n) {
    e = Xo(e);
    let r = t.clone()
      , i = (t.minute() - e) * Ar.minute;
    return t.epoch -= i,
    Rf(t, r, "second"),
    t = tc(t, r, n, "hour"),
    t.epoch
}
  , e6 = function(t, e, n) {
    e = Xo(e),
    e >= 24 ? e = 24 : e < 0 && (e = 0);
    let r = t.clone()
      , s = t.hour() - e
      , i = s * Ar.hour;
    return t.epoch -= i,
    t.date() !== r.date() && (t = r.clone(),
    s > 1 && (s -= 1),
    s < 1 && (s += 1),
    i = s * Ar.hour,
    t.epoch -= i),
    an(t, {
        hour: e
    }),
    Rf(t, r, "minute"),
    t = tc(t, r, n, "day"),
    t.epoch
}
  , pT = function(t, e, n) {
    let r = e.match(/([0-9]{1,2})[:h]([0-9]{1,2})(:[0-9]{1,2})? ?(am|pm)?/);
    if (!r) {
        if (r = e.match(/([0-9]{1,2}) ?(am|pm)/),
        !r)
            return t.epoch;
        r.splice(2, 0, "0"),
        r.splice(3, 0, "")
    }
    let s = !1
      , i = parseInt(r[1], 10)
      , a = parseInt(r[2], 10);
    a >= 60 && (a = 59),
    i > 12 && (s = !0),
    s === !1 && (r[4] === "am" && i === 12 && (i = 0),
    r[4] === "pm" && i < 12 && (i += 12)),
    r[3] = r[3] || "",
    r[3] = r[3].replace(/:/, "");
    let o = parseInt(r[3], 10) || 0
      , l = t.clone();
    return t = t.hour(i),
    t = t.minute(a),
    t = t.second(o),
    t = t.millisecond(0),
    t = tc(t, l, n, "day"),
    t.epoch
}
  , mT = function(t, e, n) {
    if (e = Xo(e),
    e > 28) {
        let s = t.month()
          , i = qc[s];
        s === 1 && e === 29 && i5(t.year()) && (i = 29),
        e > i && (e = i)
    }
    e <= 0 && (e = 1);
    let r = t.clone();
    return an(t, {
        date: e
    }),
    t = tc(t, r, n, "month"),
    t.epoch
}
  , gT = function(t, e, n) {
    typeof e == "string" && (e === "sept" && (e = "sep"),
    e = Hk()[e.toLowerCase()]),
    e = Xo(e),
    e >= 12 && (e = 11),
    e <= 0 && (e = 0);
    let r = t.date();
    r > qc[e] && (r = qc[e]);
    let s = t.clone();
    return an(t, {
        month: e,
        d: r
    }),
    t = tc(t, s, n, "year"),
    t.epoch
}
  , t6 = function(t, e) {
    return typeof e == "string" && /^'[0-9]{2}$/.test(e) && (e = e.replace(/'/, "").trim(),
    e = Number(e),
    e > 30 ? e = 1900 + e : e = 2e3 + e),
    e = Xo(e),
    an(t, {
        year: e
    }),
    t.epoch
}
  , yT = function(t, e, n) {
    let r = t.clone();
    return e = Xo(e),
    t = t.month(0),
    t = t.date(1),
    t = t.day("monday"),
    t.monthName() === "december" && t.date() >= 28 && (t = t.add(1, "week")),
    e -= 1,
    t = t.add(e, "weeks"),
    t = tc(t, r, n, "year"),
    t.epoch
}
  , CT = function(t, e, n) {
    e = Xo(e);
    let r = t.clone();
    return e -= 1,
    e <= 0 ? e = 0 : e >= 365 && (i5(t.year()) ? e = 365 : e = 364),
    t = t.startOf("year"),
    t = t.add(e, "day"),
    Rf(t, r, "hour"),
    t = tc(t, r, n, "year"),
    t.epoch
};
let a8 = "am"
  , o8 = "pm";
function bT() {
    return a8
}
function vT() {
    return o8
}
function wT(t) {
    a8 = t.am || a8,
    o8 = t.pm || o8
}
const kT = {
    millisecond: function(t) {
        if (t !== void 0) {
            let e = this.clone();
            return e.epoch = hT(e, t),
            e
        }
        return this.d.getMilliseconds()
    },
    second: function(t, e) {
        if (t !== void 0) {
            let n = this.clone();
            return n.epoch = fT(n, t, e),
            n
        }
        return this.d.getSeconds()
    },
    minute: function(t, e) {
        if (t !== void 0) {
            let n = this.clone();
            return n.epoch = Fg(n, t, e),
            n
        }
        return this.d.getMinutes()
    },
    hour: function(t, e) {
        let n = this.d;
        if (t !== void 0) {
            let r = this.clone();
            return r.epoch = e6(r, t, e),
            r
        }
        return n.getHours()
    },
    hourFloat: function(t, e) {
        if (t !== void 0) {
            let i = this.clone()
              , a = t % 1;
            a = a * 60;
            let o = parseInt(t, 10);
            return i.epoch = e6(i, o, e),
            i.epoch = Fg(i, a, e),
            i
        }
        let n = this.d
          , r = n.getHours()
          , s = n.getMinutes();
        return s = s / 60,
        r + s
    },
    hour12: function(t, e) {
        let n = this.d;
        if (t !== void 0) {
            let s = this.clone();
            t = "" + t;
            let i = t.match(/^([0-9]+)(am|pm)$/);
            if (i) {
                let a = parseInt(i[1], 10);
                i[2] === "pm" && (a += 12),
                s.epoch = e6(s, a, e)
            }
            return s
        }
        let r = n.getHours();
        return r > 12 && (r = r - 12),
        r === 0 && (r = 12),
        r
    },
    time: function(t, e) {
        if (t !== void 0) {
            let n = this.clone();
            return t = t.toLowerCase().trim(),
            n.epoch = pT(n, t, e),
            n
        }
        return `${this.h12()}:${vt(this.minute())}${this.ampm()}`
    },
    ampm: function(t, e) {
        let n = bT()
          , r = this.hour();
        if (r >= 12 && (n = vT()),
        typeof t != "string")
            return n;
        let s = this.clone();
        return t = t.toLowerCase().trim(),
        r >= 12 && t === "am" ? (r -= 12,
        s.hour(r, e)) : r < 12 && t === "pm" ? (r += 12,
        s.hour(r, e)) : s
    },
    dayTime: function(t, e) {
        if (t !== void 0) {
            const r = {
                morning: "7:00",
                breakfast: "7:00",
                noon: "12:00",
                lunch: "12:00",
                afternoon: "14:00",
                evening: "18:00",
                dinner: "18:00",
                night: "23:00",
                midnight: "00:00"
            };
            let s = this.clone();
            return t = t || "",
            t = t.toLowerCase(),
            r.hasOwnProperty(t) === !0 && (s = s.time(r[t], e)),
            s
        }
        let n = this.hour();
        return n < 6 ? "night" : n < 12 ? "morning" : n < 17 ? "afternoon" : n < 22 ? "evening" : "night"
    },
    iso: function(t) {
        return t !== void 0 ? this.set(t) : this.format("iso")
    }
}
  , xT = kT
  , DT = {
    date: function(t, e) {
        if (t !== void 0) {
            let n = this.clone();
            return t = parseInt(t, 10),
            t && (n.epoch = mT(n, t, e)),
            n
        }
        return this.d.getDate()
    },
    day: function(t, e) {
        if (t === void 0)
            return this.d.getDay();
        let n = this.clone()
          , r = t;
        typeof t == "string" && (t = t.toLowerCase(),
        Ag.hasOwnProperty(t) ? r = Ag[t] : (r = c0().indexOf(t),
        r === -1 && (r = B2().indexOf(t))));
        let i = this.d.getDay() - r;
        e === !0 && i > 0 && (i = i - 7),
        e === !1 && i < 0 && (i = i + 7);
        let a = this.subtract(i, "days");
        return an(a, {
            hour: n.hour(),
            minute: n.minute(),
            second: n.second()
        }),
        a
    },
    dayName: function(t, e) {
        if (t === void 0)
            return B2()[this.day()];
        let n = this.clone();
        return n = n.day(t, e),
        n
    }
}
  , ST = DT
  , Ng = t=>(t = t.minute(0),
t = t.second(0),
t = t.millisecond(1),
t)
  , _T = {
    dayOfYear: function(t, e) {
        if (t !== void 0) {
            let i = this.clone();
            return i.epoch = CT(i, t, e),
            i
        }
        let n = 0, r = this.d.getMonth(), s;
        for (let i = 1; i <= r; i++)
            s = new Date,
            s.setDate(1),
            s.setFullYear(this.d.getFullYear()),
            s.setHours(1),
            s.setMinutes(1),
            s.setMonth(i),
            s.setHours(-2),
            n += s.getDate();
        return n + this.d.getDate()
    },
    week: function(t, e) {
        if (t !== void 0) {
            let o = this.clone();
            return o.epoch = yT(this, t, e),
            o = Ng(o),
            o
        }
        let n = this.clone();
        n = n.month(0),
        n = n.date(1),
        n = Ng(n),
        n = n.day("monday"),
        n.month() === 11 && n.date() >= 25 && (n = n.add(1, "week"));
        let r = 1;
        n.date() === 1 && (r = 0),
        n = n.minus(1, "second");
        const s = this.epoch;
        if (n.epoch > s)
            return 1;
        let i = 0
          , a = this.month() * 4;
        for (n.epoch += Ar.week * a,
        i += a; i <= 52; i++) {
            if (n.epoch > s)
                return i + r;
            n = n.add(1, "week")
        }
        return 52
    },
    month: function(t, e) {
        if (t !== void 0) {
            let n = this.clone();
            return n.epoch = gT(n, t, e),
            n
        }
        return this.d.getMonth()
    },
    monthName: function(t, e) {
        if (t !== void 0) {
            let n = this.clone();
            return n = n.month(t, e),
            n
        }
        return sM()[this.month()]
    },
    quarter: function(t, e) {
        if (t !== void 0 && (typeof t == "string" && (t = t.replace(/^q/i, ""),
        t = parseInt(t, 10)),
        Ec[t])) {
            let r = this.clone()
              , s = Ec[t][0];
            return r = r.month(s, e),
            r = r.date(1, e),
            r = r.startOf("day"),
            r
        }
        let n = this.d.getMonth();
        for (let r = 1; r < Ec.length; r++)
            if (n < Ec[r][0])
                return r - 1;
        return 4
    },
    season: function(t, e) {
        let n = "north";
        if (this.hemisphere() === "South" && (n = "south"),
        t !== void 0) {
            let s = this.clone();
            for (let i = 0; i < Ri[n].length; i++)
                t === Ri[n][i][0] && (s = s.month(Ri[n][i][1], e),
                s = s.date(1),
                s = s.startOf("day"));
            return s
        }
        let r = this.d.getMonth();
        for (let s = 0; s < Ri[n].length - 1; s++)
            if (r >= Ri[n][s][1] && r < Ri[n][s + 1][1])
                return Ri[n][s][0];
        return n === "north" ? "winter" : "summer"
    },
    year: function(t) {
        if (t !== void 0) {
            let e = this.clone();
            return e.epoch = t6(e, t),
            e
        }
        return this.d.getFullYear()
    },
    era: function(t) {
        if (t !== void 0) {
            let e = this.clone();
            t = t.toLowerCase();
            let n = e.d.getFullYear();
            return t === "bc" && n > 0 && (e.epoch = t6(e, n * -1)),
            t === "ad" && n < 0 && (e.epoch = t6(e, n * -1)),
            e
        }
        return this.d.getFullYear() < 0 ? "BC" : "AD"
    },
    decade: function(t) {
        if (t !== void 0) {
            if (t = String(t),
            t = t.replace(/([0-9])'?s$/, "$1"),
            t = t.replace(/([0-9])(th|rd|st|nd)/, "$1"),
            !t)
                return console.warn("Spacetime: Invalid decade input"),
                this;
            t.length === 2 && /[0-9][0-9]/.test(t) && (t = "19" + t);
            let e = Number(t);
            return isNaN(e) ? this : (e = Math.floor(e / 10) * 10,
            this.year(e))
        }
        return this.startOf("decade").year()
    },
    century: function(t) {
        if (t !== void 0) {
            typeof t == "string" && (t = t.replace(/([0-9])(th|rd|st|nd)/, "$1"),
            t = t.replace(/([0-9]+) ?(b\.?c\.?|a\.?d\.?)/i, (r,s,i)=>(i.match(/b\.?c\.?/i) && (s = "-" + s),
            s)),
            t = t.replace(/c$/, ""));
            let n = Number(t);
            return isNaN(t) ? (console.warn("Spacetime: Invalid century input"),
            this) : (n === 0 && (n = 1),
            n >= 0 ? n = (n - 1) * 100 : n = (n + 1) * 100,
            this.year(n))
        }
        let e = this.startOf("century").year();
        return e = Math.floor(e / 100),
        e < 0 ? e - 1 : e + 1
    },
    millenium: function(t) {
        if (t !== void 0) {
            if (typeof t == "string" && (t = t.replace(/([0-9])(th|rd|st|nd)/, "$1"),
            t = Number(t),
            isNaN(t)))
                return console.warn("Spacetime: Invalid millenium input"),
                this;
            t > 0 && (t -= 1);
            let n = t * 1e3;
            return n === 0 && (n = 1),
            this.year(n)
        }
        let e = Math.floor(this.year() / 1e3);
        return e >= 0 && (e += 1),
        e
    }
}
  , IT = _T
  , Tr = Object.assign({}, xT, ST, IT);
Tr.milliseconds = Tr.millisecond;
Tr.seconds = Tr.second;
Tr.minutes = Tr.minute;
Tr.hours = Tr.hour;
Tr.hour24 = Tr.hour;
Tr.h12 = Tr.hour12;
Tr.h24 = Tr.hour24;
Tr.days = Tr.day;
const ET = t=>{
    Object.keys(Tr).forEach(e=>{
        t.prototype[e] = Tr[e]
    }
    )
}
  , AT = ET
  , c8 = function(t, e) {
    return t === 1 && i5(e) ? 29 : qc[t]
}
  , jT = (t,e)=>{
    if (t.month > 0) {
        let n = parseInt(t.month / 12, 10);
        t.year = e.year() + n,
        t.month = t.month % 12
    } else if (t.month < 0) {
        let n = Math.abs(t.month)
          , r = parseInt(n / 12, 10);
        n % 12 !== 0 && (r += 1),
        t.year = e.year() - r,
        t.month = t.month % 12,
        t.month = t.month + 12,
        t.month === 12 && (t.month = 0)
    }
    return t
}
  , MT = (t,e,n)=>{
    t.year = e.year(),
    t.month = e.month();
    let r = e.date();
    for (t.date = r - Math.abs(n); t.date < 1; ) {
        t.month -= 1,
        t.month < 0 && (t.month = 11,
        t.year -= 1);
        let s = c8(t.month, t.year);
        t.date += s
    }
    return t
}
  , TT = (t,e,n)=>{
    let r = e.year()
      , s = e.month()
      , i = c8(s, r);
    for (; n > i; )
        n -= i,
        s += 1,
        s >= 12 && (s -= 12,
        r += 1),
        i = c8(s, r);
    return t.month = s,
    t.date = n,
    t
}
  , LT = jT
  , OT = TT
  , RT = MT
  , Mi = ["millisecond", "second", "minute", "hour", "date", "month"];
let R1 = {
    second: Mi.slice(0, 1),
    minute: Mi.slice(0, 2),
    quarterhour: Mi.slice(0, 2),
    hour: Mi.slice(0, 3),
    date: Mi.slice(0, 4),
    month: Mi.slice(0, 4),
    quarter: Mi.slice(0, 4),
    season: Mi.slice(0, 4),
    year: Mi,
    decade: Mi,
    century: Mi
};
R1.week = R1.hour;
R1.season = R1.date;
R1.quarter = R1.date;
const PT = {
    year: !0,
    quarter: !0,
    season: !0,
    month: !0,
    week: !0,
    date: !0
}
  , $T = {
    month: !0,
    quarter: !0,
    season: !0,
    year: !0
}
  , FT = t=>{
    t.prototype.add = function(e, n) {
        let r = this.clone();
        if (!n || e === 0)
            return r;
        let s = this.clone();
        if (n = fl(n),
        n === "millisecond")
            return r.epoch += e,
            r;
        n === "fortnight" && (e *= 2,
        n = "week"),
        Ar[n] ? r.epoch += Ar[n] * e : n === "week" || n === "weekend" ? r.epoch += Ar.day * (e * 7) : n === "quarter" || n === "season" ? r.epoch += Ar.month * (e * 3) : n === "quarterhour" && (r.epoch += Ar.minute * 15 * e);
        let i = {};
        if (R1[n] && R1[n].forEach(a=>{
            i[a] = s[a]()
        }
        ),
        PT[n]) {
            const a = s.timezone().current.offset - r.timezone().current.offset;
            r.epoch += a * 3600 * 1e3
        }
        if (n === "month" && (i.month = s.month() + e,
        i = LT(i, s)),
        n === "week") {
            let a = s.date() + e * 7;
            a <= 28 && a > 1 && (i.date = a)
        }
        if (n === "weekend" && r.dayName() !== "saturday")
            r = r.day("saturday", !0);
        else if (n === "date") {
            if (e < 0)
                i = RT(i, s, e);
            else {
                let a = s.date() + e;
                i = OT(i, s, a)
            }
            e !== 0 && s.isSame(r, "day") && (i.date = s.date() + e)
        } else if (n === "quarter") {
            if (i.month = s.month() + e * 3,
            i.year = s.year(),
            i.month < 0) {
                let a = Math.floor(i.month / 12)
                  , o = i.month + Math.abs(a) * 12;
                i.month = o,
                i.year += a
            } else if (i.month >= 12) {
                let a = Math.floor(i.month / 12);
                i.month = i.month % 12,
                i.year += a
            }
            i.date = s.date()
        } else if (n === "year") {
            let a = s.year() + e
              , o = r.year();
            if (o < a) {
                let l = Math.floor(e / 4) || 1;
                r.epoch += Math.abs(Ar.day * l)
            } else if (o > a) {
                let l = Math.floor(e / 4) || 1;
                r.epoch += Ar.day * l
            }
        } else
            n === "decade" ? i.year = r.year() + 10 : n === "century" && (i.year = r.year() + 100);
        if ($T[n]) {
            let a = qc[i.month];
            i.date = s.date(),
            i.date > a && (i.date = a)
        }
        return Object.keys(i).length > 1 && an(r, i),
        r
    }
    ,
    t.prototype.subtract = function(e, n) {
        return this.clone().add(e * -1, n)
    }
    ,
    t.prototype.minus = t.prototype.subtract,
    t.prototype.plus = t.prototype.add
}
  , NT = FT
  , Tu = {
    millisecond: t=>t.epoch,
    second: t=>[t.year(), t.month(), t.date(), t.hour(), t.minute(), t.second()].join("-"),
    minute: t=>[t.year(), t.month(), t.date(), t.hour(), t.minute()].join("-"),
    hour: t=>[t.year(), t.month(), t.date(), t.hour()].join("-"),
    day: t=>[t.year(), t.month(), t.date()].join("-"),
    week: t=>[t.year(), t.week()].join("-"),
    month: t=>[t.year(), t.month()].join("-"),
    quarter: t=>[t.year(), t.quarter()].join("-"),
    year: t=>t.year()
};
Tu.date = Tu.day;
const VT = t=>{
    t.prototype.isSame = function(e, n, r=!0) {
        let s = this;
        if (!n)
            return null;
        if (typeof e == "string" && typeof n == "object") {
            let i = e;
            e = n,
            n = i
        }
        return (typeof e == "string" || typeof e == "number") && (e = new t(e,this.timezone.name)),
        n = n.replace(/s$/, ""),
        r === !0 && s.tz !== e.tz && (e = e.clone(),
        e.tz = s.tz),
        Tu[n] ? Tu[n](s) === Tu[n](e) : null
    }
}
  , BT = VT
  , UT = t=>{
    const e = {
        isAfter: function(n) {
            n = yc(n, this);
            let r = uu(n);
            return r === null ? null : this.epoch > r
        },
        isBefore: function(n) {
            n = yc(n, this);
            let r = uu(n);
            return r === null ? null : this.epoch < r
        },
        isEqual: function(n) {
            n = yc(n, this);
            let r = uu(n);
            return r === null ? null : this.epoch === r
        },
        isBetween: function(n, r, s=!1) {
            n = yc(n, this),
            r = yc(r, this);
            let i = uu(n);
            if (i === null)
                return null;
            let a = uu(r);
            return a === null ? null : s ? this.isBetween(n, r) || this.isEqual(n) || this.isEqual(r) : i < this.epoch && this.epoch < a
        }
    };
    Object.keys(e).forEach(n=>{
        t.prototype[n] = e[n]
    }
    )
}
  , HT = UT
  , zT = t=>{
    const e = {
        i18n: function(n) {
            return y1(n.days) && bM(n.days),
            y1(n.months) && iM(n.months),
            Wj(n.useTitleCase) && wM(n.useTitleCase),
            y1(n.ampm) && wT(n.ampm),
            y1(n.distance) && YM(n.distance),
            y1(n.units) && zM(n.units),
            this
        }
    };
    Object.keys(e).forEach(n=>{
        t.prototype[n] = e[n]
    }
    )
}
  , ZT = zT;
let n6 = Bk;
const Ki = function(t, e, n={}) {
    this.epoch = null,
    this.tz = V2(e, n6),
    this.silent = typeof n.silent < "u" ? n.silent : !0,
    this.british = n.dmy || n.british,
    this._weekStart = 1,
    n.weekStart !== void 0 && (this._weekStart = n.weekStart),
    this._today = {},
    n.today !== void 0 && (this._today = n.today),
    Object.defineProperty(this, "d", {
        get: function() {
            let s = Tj(this)
              , a = (new Date(this.epoch).getTimezoneOffset() || 0) + s * 60;
            a = a * 60 * 1e3;
            let o = this.epoch + a;
            return new Date(o)
        }
    }),
    Object.defineProperty(this, "timezones", {
        get: ()=>n6,
        set: s=>(n6 = s,
        s)
    });
    let r = zk(this, t);
    this.epoch = r.epoch
};
Object.keys($g).forEach(t=>{
    Ki.prototype[t] = $g[t]
}
);
Ki.prototype.clone = function() {
    return new Ki(this.epoch,this.tz,{
        silent: this.silent,
        weekStart: this._weekStart,
        today: this._today,
        parsers: this.parsers
    })
}
;
Ki.prototype.toLocalDate = function() {
    return this.toNativeDate()
}
;
Ki.prototype.toNativeDate = function() {
    return new Date(this.epoch)
}
;
AT(Ki);
NT(Ki);
BT(Ki);
HT(Ki);
ZT(Ki);
const Ci = Ki
  , qT = (t,e)=>{
    let n = new Ci(null)
      , r = new Ci(null);
    n = n.time(t),
    e ? r = r.time(e) : r = n.add(59, "minutes");
    let s = n.hour()
      , i = r.hour();
    return Object.keys(n.timezones).filter(o=>{
        if (o.indexOf("/") === -1)
            return !1;
        let l = new Ci(null,o)
          , d = l.hour();
        return d >= s && d <= i ? !(d === s && l.minute() < n.minute() || d === i && l.minute() > r.minute()) : !1
    }
    )
}
  , WT = qT
  , GT = "7.5.0"
  , ni = (t,e,n)=>new Ci(t,e,n)
  , N3 = function(t) {
    let e = t._today || {};
    return Object.keys(e).forEach(n=>{
        t = t[n](e[n])
    }
    ),
    t
};
ni.now = (t,e)=>{
    let n = new Ci(new Date().getTime(),t,e);
    return n = N3(n),
    n
}
;
ni.today = (t,e)=>{
    let n = new Ci(new Date().getTime(),t,e);
    return n = N3(n),
    n.startOf("day")
}
;
ni.tomorrow = (t,e)=>{
    let n = new Ci(new Date().getTime(),t,e);
    return n = N3(n),
    n.add(1, "day").startOf("day")
}
;
ni.yesterday = (t,e)=>{
    let n = new Ci(new Date().getTime(),t,e);
    return n = N3(n),
    n.subtract(1, "day").startOf("day")
}
;
ni.extend = function(t={}) {
    return Object.keys(t).forEach(e=>{
        Ci.prototype[e] = t[e]
    }
    ),
    this
}
;
ni.timezones = function() {
    return new Ci().timezones
}
;
ni.max = function(t, e) {
    let n = new Ci(null,t,e);
    return n.epoch = 864e13,
    n
}
;
ni.min = function(t, e) {
    let n = new Ci(null,t,e);
    return n.epoch = -864e13,
    n
}
;
ni.whereIts = WT;
ni.version = GT;
ni.plugin = ni.extend;
const Er = ni;
let zt = class extends Error {
    constructor(e) {
        super(`Unreachable case: ${e}`)
    }
}
;
function Jle(t) {}
function Gc(t) {
    throw new Error(`Unexpected object: ${t}`)
}
function KT() {
    Date.prototype.beginningOfWeek = function(t) {
        const e = Er(this, t).day(0).hour(0).minute(0).second(0).millisecond(0);
        return new Date(e.epoch)
    }
    ,
    Date.prototype.nextWeekDay = function(t, e) {
        const n = Er(this, e).day(t).hour(0).minute(0).second(0).millisecond(0);
        return n.isBefore(Er(this, e)) || n.isEqual(Er(this, e)) ? new Date(n.add(1, "week").epoch) : new Date(n.epoch)
    }
    ,
    Date.prototype.midnight = function(t) {
        if (!t) {
            const n = new Date(this.getTime());
            return n.setHours(0),
            n.setMinutes(0),
            n.setSeconds(0),
            n.setMilliseconds(0),
            n
        }
        const e = Er(this, t).hour(0).minute(0).second(0).millisecond(0);
        return new Date(e.epoch)
    }
    ,
    Date.prototype.nearestMidnight = function(t) {
        if (!t)
            return this.offsetByHours(12).midnight();
        const e = Er(this, t).hour(12).minute(0).second(0).millisecond(0);
        let n = Er(this, t);
        return n.isAfter(e) && (n = n.add(1, "day")),
        n = n.hour(0).minute(0).second(0).millisecond(0),
        new Date(n.epoch)
    }
    ,
    Date.prototype.offsetByDays = function(t, e) {
        if (!e) {
            const r = new Date(this.getTime());
            return r.setDate(r.getDate() + t),
            r
        }
        const n = Er(this, e).add(t, "day");
        return new Date(n.epoch)
    }
    ,
    Date.prototype.offsetByHours = function(t) {
        return new Date(this.getTime() + t * 60 * 60 * 1e3)
    }
    ,
    Date.prototype.offsetBySeconds = function(t) {
        return new Date(this.getTime() + t * 1e3)
    }
    ,
    Date.prototype.toUTCDate = function() {
        return new Date(this.getTime() + this.getTimezoneOffset() * 6e4)
    }
    ,
    Date.prototype.daysTo = function(t) {
        return Fi(t, this)
    }
    ,
    Date.prototype.toTimelessDate = function() {
        const t = (this.getMonth() + 1).toString().padStart(2, "0")
          , e = this.getDate().toString().padStart(2, "0");
        return `${this.getFullYear()}-${t}-${e}`
    }
    ,
    String.prototype.toLocalDate = function(t) {
        const e = new Date(this);
        if (e.toString() === "Invalid Date")
            return this.length === 0 ? new Date : this.substring(0, this.length - 1).toLocalDate();
        if (!t)
            return new Date(e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate());
        const n = Er(this, t).year(e.getUTCFullYear()).month(e.getUTCMonth()).date(e.getUTCDate()).hour(0).minute(0).second(0).millisecond(0);
        return new Date(n.epoch)
    }
}
var _1;
(function(t) {
    t[t.Sunday = 0] = "Sunday",
    t[t.Monday = 1] = "Monday",
    t[t.Tuesday = 2] = "Tuesday",
    t[t.Wednesday = 3] = "Wednesday",
    t[t.Thursday = 4] = "Thursday",
    t[t.Friday = 5] = "Friday",
    t[t.Saturday = 6] = "Saturday"
}
)(_1 || (_1 = {}));
function ede(t) {
    switch (t) {
    case "0":
        return 0;
    case "1":
        return 1;
    case "2":
        return 2;
    case "3":
        return 3;
    case "4":
        return 4;
    case "5":
        return 5;
    case "6":
        return 6;
    default:
        throw new Error(`Invalid day: ${t}`)
    }
}
function YT(t) {
    switch (t) {
    case 0:
        return "Sunday";
    case 1:
        return "Monday";
    case 2:
        return "Tuesday";
    case 3:
        return "Wednesday";
    case 4:
        return "Thursday";
    case 5:
        return "Friday";
    case 6:
        return "Saturday";
    default:
        throw new zt(t)
    }
}
const QT = t=>Promise.all([...t].map(e=>new Promise((n,r)=>Promise.resolve(e).then(r, n)))).then(e=>Promise.reject(e), e=>Promise.resolve(e));
function XT() {
    Promise.any || (Promise.any = QT)
}
function JT() {
    String.prototype.capitalize = function() {
        return this.charAt(0).toUpperCase() + this.slice(1)
    }
    ,
    String.prototype.deCapitalize = function() {
        return this.charAt(0).toLowerCase() + this.slice(1)
    }
    ,
    String.prototype.toQuestion = function() {
        const t = this.replace(/(\.|,|:)$/, "");
        return t.lastIndexOf("?") !== t.length - 1 ? t + "?" : t
    }
}
function eL() {
    Set.prototype.isEqualTo = function(t) {
        return this.size === t.size && [...this].every(e=>t.has(e))
    }
}
function tL() {
    Ej(),
    KT(),
    XT(),
    JT(),
    Dj(),
    eL()
}
var nL = {
    VITE_ANALYTICS_URL: "https://e.linear.app",
    VITE_API_SERVER_URL: "https://client-api.linear.app",
    VITE_ASSET_URL: "https://static.linear.app/client/",
    VITE_CLIENT_URL: "https://linear.app",
    VITE_DEBUG_LOG_NETWORK_DATA: "false",
    VITE_DEMO_ORGANIZATION_ID: "3c2f7bee-10f9-4248-838b-c94f7e2242f1",
    VITE_DEMO_USER_EMAIL: "user@linear-demo.com",
    VITE_DEMO_USER_ID: "193aab40-d27d-464c-97b3-1859abfcd721",
    VITE_DEMO_USER_ACCOUNT_ID: "b14b2c53-64b7-468c-9e74-e6934623e1d0",
    VITE_DISCORD_OAUTH_CLIENT_ID: "957060182561669132",
    VITE_DISCORD_OAUTH_REDIRECT_URL: "https://linear.app/connect/discord/callback",
    VITE_EMAIL_INTAKE_HOSTNAME: "intake.linear.app",
    VITE_FIGMA_INTERNAL_OAUTH_CLIENT_ID: "a68faaa3f27a017c4b067874c86773e4",
    VITE_FIGMA_OAUTH_CLIENT_ID: "STbJqWt09xEGg40Xij0i59",
    VITE_FIGMA_OAUTH_REDIRECT_URL: "https://linear.app/connect/figma/callback",
    VITE_FRONT_INTERNAL_OAUTH_CLIENT_ID: "1cb4cbf677a40183f0dc8a178e7d049d",
    VITE_FRONT_OAUTH_CLIENT_ID: "358600cf7be06c253af8",
    VITE_FRONT_OAUTH_REDIRECT_URL: "https://linear.app/connect/front/callback",
    VITE_GITHUB_APP_URL: "https://github.com/apps/linear",
    VITE_GITHUB_APP_OAUTH_CLIENT_ID: "Iv1.085d682ea245c945",
    VITE_GITHUB_APP_OAUTH_REDIRECT_URL: "https://linear.app/connect/github-account/callback",
    VITE_GITHUB_IMPORTER_INSTALL_URL: "https://github.com/apps/linear-data-importer/installations/new",
    VITE_GOOGLE_CALENDAR_REDIRECT_URL: "https://linear.app/connect/google/callback",
    VITE_GOOGLE_OAUTH_CLIENT_ID: "463717515632-5f96ed9uaue5p206umg9toffdbfmsfbm.apps.googleusercontent.com",
    VITE_GOOGLE_OAUTH_REDIRECT_URL: "https://linear.app/auth/google/callback",
    VITE_GOOGLE_SHEETS_REDIRECT_URL: "https://linear.app/connect/google/callback",
    VITE_GRAPHQL_SERVER_HTTP: "https://client-api.linear.app/graphql",
    VITE_HOST: "local.linear.dev",
    VITE_INTERCOM_OAUTH_CLIENT_ID: "56c76476-e15f-425d-9de1-2f60ebcb3370",
    VITE_JIRA_OAUTH_CLIENT_ID: "SbDhEGt9q209sJQh3gOTNeUuibVKhXjg",
    VITE_JIRA_OAUTH_REDIRECT_URL: "https://linear.app/connect/jira/callback",
    VITE_LINEAR_DEMO_ORGANIZATION_ID: "d763f07e-f5da-4a9f-b9da-12c4563607a7",
    VITE_NOTION_INTERNAL_OAUTH_CLIENT_ID: "dd7bac7615ab5b83e6093725b56c42ce",
    VITE_PAGERDUTY_OAUTH_CLIENT_ID: "de0027f4-8caf-48ec-8a87-caf596dbafc0",
    VITE_PAGERDUTY_OAUTH_REDIRECT_URL: "https://linear.app/connect/pagerduty/callback",
    VITE_POSTHOG_WRITE_KEY: "phc_PaCjzqaetuAlYgXjb0uftDOw8QzOmXfWIbD7nkaYrjr",
    VITE_PUSH_MESSAGE_VAPID_PUBLIC_KEY: "BGmzp5YJU9nt-dFhX-jQvi9Ch-ROVsxrK1AqWOsRmPE6zFY6zg4qcln3P_3EsH9M1pddJEGXeK326zp1MSPlNIQ",
    VITE_SANITY_PROJECT_ID: "ornj730p",
    VITE_SANITY_DATASET: "production",
    VITE_SANITY_API_TOKEN: "",
    VITE_SECURE_IMAGE_PROXY_URL: "https://secure-img-proxy.linear.app",
    VITE_SENTRY_INTEGRATION_APP_NAME: "linear",
    VITE_SLACK_STAGING_CLIENT_ID: "328068080260.5674009759762",
    VITE_SLACK_CLIENT_ID: "328068080260.497819820514",
    VITE_SLACK_INTAKE_APP_CLIENT_ID: "328068080260.4867786112663",
    VITE_SOCKET_SERVER_URL: "wss://sync.linear.app",
    VITE_START_SERVICE_WORKER: "true",
    VITE_STRIPE_PUBLIC_KEY: "pk_live_DIFLzeTR6Mm4NO6AWaQZ0erl",
    VITE_ZENDESK_INTERNAL_OAUTH_CLIENT_ID: "f5961297b58e81fa7f2e8b2bf36a41bc",
    VITE_ZENDESK_OAUTH_CLIENT_ID: "zdg-linear",
    VITE_ZENDESK_OAUTH_REDIRECT_URL: "https://linear.app/connect/zendesk/callback",
    VITE_POSTHOG_SESSION_REPLAY_WRITE_KEY: "phc_ug8xcON3MBePKK6mnfbrmOXkv969J77eRbKipX17XpQ",
    VITE_SENTRY_DSN: "https://f172c25063bf4e3492ece32b840ab90b@s.linear.app/5337513",
    VITE_CJS_IGNORE_WARNING: "true",
    VITE_USER_NODE_ENV: "production",
    BASE_URL: "https://static.linear.app/client/",
    MODE: "production",
    DEV: !1,
    PROD: !0,
    SSR: !1
}, pk, mk, gk, yk;
const ft = {
    API_SERVER_URL: Ct("API_SERVER_URL"),
    ASSET_URL: ro("ASSET_URL") ?? "",
    CLIENT_URL: Ct("CLIENT_URL"),
    ANALYTICS_URL: Ct("ANALYTICS_URL"),
    DEMO_ORGANIZATION_ID: Ct("DEMO_ORGANIZATION_ID"),
    DEMO_USER_EMAIL: Ct("DEMO_USER_EMAIL"),
    DEMO_USER_ID: Ct("DEMO_USER_ID"),
    DEMO_USER_ACCOUNT_ID: Ct("DEMO_USER_ACCOUNT_ID"),
    DISCORD_OAUTH_CLIENT_ID: Ct("DISCORD_OAUTH_CLIENT_ID"),
    DISCORD_OAUTH_REDIRECT_URL: Ct("DISCORD_OAUTH_REDIRECT_URL"),
    EMAIL_INTAKE_HOSTNAME: Ct("EMAIL_INTAKE_HOSTNAME"),
    FIGMA_OAUTH_CLIENT_ID: Ct("FIGMA_OAUTH_CLIENT_ID"),
    FIGMA_OAUTH_REDIRECT_URL: Ct("FIGMA_OAUTH_REDIRECT_URL"),
    GITHUB_APP_URL: Ct("GITHUB_APP_URL"),
    GITHUB_APP_OAUTH_REDIRECT_URL: Ct("GITHUB_APP_OAUTH_REDIRECT_URL"),
    GITHUB_APP_OAUTH_CLIENT_ID: Ct("GITHUB_APP_OAUTH_CLIENT_ID"),
    GITHUB_IMPORTER_INSTALL_URL: Ct("GITHUB_IMPORTER_INSTALL_URL"),
    GOOGLE_OAUTH_CLIENT_ID: Ct("GOOGLE_OAUTH_CLIENT_ID"),
    GOOGLE_OAUTH_REDIRECT_URL: Ct("GOOGLE_OAUTH_REDIRECT_URL"),
    GOOGLE_SHEETS_REDIRECT_URL: Ct("GOOGLE_SHEETS_REDIRECT_URL"),
    GOOGLE_CALENDAR_REDIRECT_URL: Ct("GOOGLE_CALENDAR_REDIRECT_URL"),
    GRAPHQL_SERVER_HTTP: Ct("GRAPHQL_SERVER_HTTP"),
    INTERCOM_OAUTH_CLIENT_ID: Ct("INTERCOM_OAUTH_CLIENT_ID"),
    JIRA_OAUTH_CLIENT_ID: Ct("JIRA_OAUTH_CLIENT_ID"),
    JIRA_OAUTH_REDIRECT_URL: Ct("JIRA_OAUTH_REDIRECT_URL"),
    LINEAR_DEMO_ORGANIZATION_ID: Ct("LINEAR_DEMO_ORGANIZATION_ID"),
    NOTION_INTERNAL_OAUTH_CLIENT_ID: Ct("NOTION_INTERNAL_OAUTH_CLIENT_ID"),
    FIGMA_INTERNAL_OAUTH_CLIENT_ID: Ct("FIGMA_INTERNAL_OAUTH_CLIENT_ID"),
    PAGERDUTY_OAUTH_CLIENT_ID: Ct("PAGERDUTY_OAUTH_CLIENT_ID"),
    PAGERDUTY_OAUTH_REDIRECT_URL: Ct("PAGERDUTY_OAUTH_REDIRECT_URL"),
    PUSH_MESSAGE_VAPID_PUBLIC_KEY: Ct("PUSH_MESSAGE_VAPID_PUBLIC_KEY"),
    SANITY_PROJECT_ID: Ct("SANITY_PROJECT_ID"),
    SANITY_DATASET: Ct("SANITY_DATASET"),
    SANITY_API_TOKEN: Ct("SANITY_API_TOKEN"),
    SECURE_IMAGE_PROXY_URL: Ct("SECURE_IMAGE_PROXY_URL"),
    SENTRY_DSN: ro("SENTRY_DSN"),
    SENTRY_INTEGRATION_APP_NAME: Ct("SENTRY_INTEGRATION_APP_NAME"),
    SLACK_CLIENT_ID: Ct("SLACK_CLIENT_ID"),
    SLACK_STAGING_CLIENT_ID: Ct("SLACK_STAGING_CLIENT_ID"),
    SLACK_INTAKE_APP_CLIENT_ID: Ct("SLACK_INTAKE_APP_CLIENT_ID"),
    SOCKET_SERVER_URL: Ct("SOCKET_SERVER_URL"),
    STRIPE_PUBLIC_KEY: Ct("STRIPE_PUBLIC_KEY"),
    ZENDESK_INTERNAL_OAUTH_CLIENT_ID: Ct("ZENDESK_INTERNAL_OAUTH_CLIENT_ID"),
    ZENDESK_OAUTH_CLIENT_ID: Ct("ZENDESK_OAUTH_CLIENT_ID"),
    ZENDESK_OAUTH_REDIRECT_URL: Ct("ZENDESK_OAUTH_REDIRECT_URL"),
    FRONT_INTERNAL_OAUTH_CLIENT_ID: Ct("FRONT_INTERNAL_OAUTH_CLIENT_ID"),
    FRONT_OAUTH_CLIENT_ID: Ct("FRONT_OAUTH_CLIENT_ID"),
    FRONT_OAUTH_REDIRECT_URL: Ct("FRONT_OAUTH_REDIRECT_URL"),
    BUILD_REVISION: (pk = window.__RELEASE_INFO) == null ? void 0 : pk.BUILD_REVISION,
    DEPLOYED_AT: (mk = window.__RELEASE_INFO) != null && mk.DEPLOYED_AT ? new Date(window.__RELEASE_INFO.DEPLOYED_AT) : void 0,
    SHORT_SHA: (gk = window.__RELEASE_INFO) == null ? void 0 : gk.SHORT_SHA,
    PREVIEW_BUILD: ro("PREVIEW_BUILD") === "true",
    PREVIEW_PR_NUMBER: ro("PREVIEW_PR_NUMBER") || ((yk = new URL(self.document.URL).host.match(/pr-(\d+)/)) == null ? void 0 : yk[1]),
    POSTHOG_WRITE_KEY: Ct("POSTHOG_WRITE_KEY"),
    POSTHOG_SESSION_REPLAY_WRITE_KEY: ro("POSTHOG_SESSION_REPLAY_WRITE_KEY"),
    COUNTRY_CODE: ro("COUNTRY_CODE"),
    ENABLE_CRASH_REPORTING: !!ro("ENABLE_CRASH_REPORTING"),
    IS_PRODUCTION_ENV: !0,
    IS_TEST_ENV: !1,
    DEBUG_LOG_NETWORK_DATA: ro("DEBUG_LOG_NETWORK_DATA") === "true"
};
function Ct(t) {
    const e = ro(t);
    return e === void 0 ? (console.error(`Environment variable ${t} is not defined`),
    "") : e
}
function ro(t) {
    return window.CLIENT_ENV && window.CLIENT_ENV[t] ? window.CLIENT_ENV[t] : nL["VITE_" + t]
}
tL();
window.__toStaticUrl = t=>`${ft.ASSET_URL}${t}`;
const rL = "modulepreload"
  , sL = function(t, e) {
    return t[0] === "." ? new URL(t,e).href : t
}
  , Vg = {}
  , H2 = function(e, n, r) {
    let s = Promise.resolve();
    if (n && n.length > 0) {
        const i = document.getElementsByTagName("link");
        s = Promise.all(n.map(a=>{
            if (a = sL(a, r),
            a in Vg)
                return;
            Vg[a] = !0;
            const o = a.endsWith(".css")
              , l = o ? '[rel="stylesheet"]' : "";
            if (!!r)
                for (let h = i.length - 1; h >= 0; h--) {
                    const f = i[h];
                    if (f.href === a && (!o || f.rel === "stylesheet"))
                        return
                }
            else if (document.querySelector(`link[href="${a}"]${l}`))
                return;
            const u = document.createElement("link");
            if (u.rel = o ? "stylesheet" : rL,
            o || (u.as = "script",
            u.crossOrigin = ""),
            u.href = a,
            document.head.appendChild(u),
            o)
                return new Promise((h,f)=>{
                    u.addEventListener("load", h),
                    u.addEventListener("error", ()=>f(new Error(`Unable to preload CSS for ${a}`)))
                }
                )
        }
        ))
    }
    return s.then(()=>e()).catch(i=>{
        const a = new Event("vite:preloadError",{
            cancelable: !0
        });
        if (a.payload = i,
        window.dispatchEvent(a),
        !a.defaultPrevented)
            throw i
    }
    )
}
  , qk = typeof navigator < "u" && (/iPad/.test(navigator.userAgent) || navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1)
  , iL = ()=>typeof window < "u" && window.innerWidth < 640
  , aL = typeof navigator < "u" && /\(Linux; Android \d+\; Pixel \d+/i.test(navigator.userAgent);
var Ck, bk;
const us = aL || typeof window < "u" && ((bk = (Ck = window.matchMedia) == null ? void 0 : Ck.call(window, "(pointer: coarse)")) == null ? void 0 : bk.matches)
  , Pf = typeof navigator < "u" && /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
var vk;
const oL = typeof navigator < "u" && ((vk = window.navigator.brave) == null ? void 0 : vk.isBrave.name) === "isBrave";
function tde() {
    return /(\s|^)AppleWebKit\/[\d\.]+\s+\(.+\)\s+Version\/16(\.|$|\s)/i.test(navigator.userAgent)
}
const cL = typeof navigator < "u" && navigator.userAgent.toLowerCase().indexOf("firefox") > -1
  , lL = typeof navigator < "u" && navigator.userAgent.toLowerCase().indexOf("chrome") > -1
  , $f = typeof navigator < "u" && navigator.platform === "MacIntel";
var wk;
const nde = typeof navigator < "u" && "standalone"in navigator && navigator.standalone === !0 || typeof window < "u" && ((wk = window.matchMedia) == null ? void 0 : wk.call(window, "(display-mode: standalone)").matches)
  , Ff = typeof navigator < "u" && (/iPhone|iPod/.test(navigator.userAgent) || qk)
  , rde = typeof navigator < "u" && "platform"in navigator && navigator.platform === "Win32"
  , sde = typeof navigator < "u" && "platform"in navigator && navigator.platform.includes("Linux")
  , ide = Ff || $f || qk
  , Wk = {
    DESKTOP_PORTS: [44450, 18450, 33234],
    DEFAULT_ISSUES_TEAM_ID: "fb64079d-35f3-4506-a1de-55d4b86b3e55",
    PRODUCTION_ENV: !0,
    CLIENT_URL: typeof window < "u" ? window.CLIENT_ENV && window.CLIENT_ENV.CLIENT_URL : "https://linear.app"
}
  , dL = t=>` __                                               _____          __          __           ______          v${t}
/\\ \\       __                                    /\\  __\`\\       /\\ \\      __/\\ \\__       /\\__  _\\                       
\\ \\ \\     /\\_\\    ___      __     __     _ __    \\ \\ \\/\\ \\  _ __\\ \\ \\____/\\_\\ \\ ,_\\      \\/_/\\ \\/     ___     ___       
 \\ \\ \\  __\\/\\ \\ /' _ \`\\  /'__\`\\ /'__\`\\  /\\\`'__\\   \\ \\ \\ \\ \\/\\\`'__\\ \\ '__\`\\/\\ \\ \\ \\/         \\ \\ \\   /' _ \`\\  /'___\\     
  \\ \\ \\L\\ \\\\ \\ \\/\\ \\/\\ \\/\\  __//\\ \\L\\.\\_\\ \\ \\/     \\ \\ \\_\\ \\ \\ \\/ \\ \\ \\L\\ \\ \\ \\ \\ \\_  __     \\_\\ \\__/\\ \\/\\ \\/\\ \\__/  __ 
   \\ \\____/ \\ \\_\\ \\_\\ \\_\\ \\____\\ \\__/.\\_\\\\ \\_\\      \\ \\_____\\ \\_\\  \\ \\_,__/\\ \\_\\ \\__\\/\\ \\    /\\_____\\ \\_\\ \\_\\ \\____\\/\\_\\
    \\/___/   \\/_/\\/_/\\/_/\\/____/\\/__/\\/_/ \\/_/       \\/_____/\\/_/   \\/___/  \\/_/\\/__/\\ \\/    \\/_____/\\/_/\\/_/\\/____/\\/_/
                                                                                      \\/`
  , uL = "Build products better"
  , hL = "WE'RE HIRING: https://linear.app/readme"
  , fL = "CHANGELOG:    https://linear.app/changelog"
  , pL = ()=>`
  font-family: monospace;
  color: ${typeof window < "u" && window.matchMedia("(prefers-color-scheme: dark)").matches ? "#F7F8F8" : "#282A30"};
  `;
let Bg = !1;
const mL = t=>{
    !Bg && Wk.PRODUCTION_ENV && (console.log(`%c${dL(t)}

${uL}

${hL}
${fL}
`, pL()),
    Bg = !0)
}
;
class V3 {
    static versionString(e) {
        return `1.${e ?? "0"}.0`
    }
}
function Kc(t) {
    return function(e) {
        t.forEach(function(n) {
            typeof n == "function" ? n(e) : n != null && (n.current = e)
        })
    }
}
var gL = YE
  , yL = 1
  , CL = 4;
function bL(t) {
    return gL(t, yL | CL)
}
var vL = bL;
const Fa = Cn(vL)
  , wL = t=>t.replace(/\/issue\/([^\/]+)\/([^\/]+)(.*)/, "/issue/$1$3");
function ade(t) {
    if (!t)
        return null;
    const e = new URL(t)
      , n = e.pathname.split("/");
    return n[n.length - 1] = "<invite-hash>",
    e.pathname = n.join("/"),
    e.toString()
}
const ode = t=>{
    const e = t.split("/");
    switch (e[1] = "<org-id>",
    e[2]) {
    case "project":
        e[3] = "<project-id>",
        e[4] && (["overview", "issues", "activity"].includes(e[4]) || (e[4] = "<team-id>"));
        break;
    case "issue":
        e[3] = "<issue-id>",
        e.splice(4);
        break;
    case "team":
        e[3] = "<team-id>",
        e[4] === "cycle" && !["previous", "active", "upcoming"].includes(e[5]) && (e[5] = "<cycle-id>");
        break;
    case "view":
        e[3] = "<view-id>";
        break;
    case "label":
        e[3] = "<label-id>";
        break;
    case "profiles":
        e[3] = "<username>";
        break;
    case "settings":
        e[3] === "teams" && (e[4] = "<team-id>");
        break
    }
    return e.join("/")
}
;
function kL(t) {
    return typeof t == "object" && t !== null && "type"in t && typeof t.type == "string" && "userError"in t && typeof t.userError == "boolean"
}
const Nf = "downtime";
var z2;
(function(t) {
    t.google = "google",
    t.email = "email",
    t.saml = "saml",
    t.passkey = "passkey"
}
)(z2 || (z2 = {}));
const xL = {
    google: "Google",
    email: "Email & passkeys",
    saml: "SAML",
    passkey: "Passkey"
}
  , cde = 10
  , lde = t=>`csrfToken:${t}`
  , DL = {
    IR: "Iran",
    KP: "North Korea",
    SY: "Syria",
    CU: "Cuba"
}
  , Z2 = "RESTRICTED_COUNTRY_BLOCKED"
  , dde = t=>!!t && Object.keys(DL).includes(t);
function ude(t) {
    const {allowedAuthServices: e, samlEnabled: n, servicesToForbid: r, servicesToAllow: s} = t
      , i = ["email", "google"];
    n && i.push("saml");
    const a = e.length === 0 ? [...i] : e;
    let o = [];
    for (const l of r || [])
        if (o = a.filter(d=>d !== l),
        o.length === 0)
            throw new Error("At least one authentication service must be enabled");
    for (const l of s || [])
        o = [...a.filter(d=>d !== l), l];
    return o.length === i.length ? [] : o
}
var l8;
try {
    l8 = new TextDecoder
} catch {}
var Ne, mi, N = 0, In = {}, Ht, w1, hi = 0, Ea = 0, jr, So, Gr = [], Vt, Ug = {
    useRecords: !1,
    mapsAsObjects: !0
};
class Gk {
}
const Kk = new Gk;
Kk.name = "MessagePack 0xC1";
var I1 = !1, d8 = 2, Hg;
try {
    d8 = 1 / 0
} catch {
    d8 = 1 / 0
}
class _d {
    constructor(e) {
        e && (e.useRecords === !1 && e.mapsAsObjects === void 0 && (e.mapsAsObjects = !0),
        e.sequential && e.trusted !== !1 && (e.trusted = !0,
        !e.structures && e.useRecords != !1 && (e.structures = [],
        e.maxSharedStructures || (e.maxSharedStructures = 0))),
        e.structures ? e.structures.sharedLength = e.structures.length : e.getStructures && ((e.structures = []).uninitialized = !0,
        e.structures.sharedLength = 0),
        e.int64AsNumber && (e.int64AsType = "number")),
        Object.assign(this, e)
    }
    unpack(e, n) {
        if (Ne)
            return tx(()=>(h8(),
            this ? this.unpack(e, n) : _d.prototype.unpack.call(Ug, e, n)));
        !e.buffer && e.constructor === ArrayBuffer && (e = typeof Buffer < "u" ? Buffer.from(e) : new Uint8Array(e)),
        typeof n == "object" ? (mi = n.end || e.length,
        N = n.start || 0) : (N = 0,
        mi = n > -1 ? n : e.length),
        Ea = 0,
        w1 = null,
        jr = null,
        Ne = e;
        try {
            Vt = e.dataView || (e.dataView = new DataView(e.buffer,e.byteOffset,e.byteLength))
        } catch (r) {
            throw Ne = null,
            e instanceof Uint8Array ? r : new Error("Source must be a Uint8Array or Buffer but was a " + (e && typeof e == "object" ? e.constructor.name : typeof e))
        }
        if (this instanceof _d) {
            if (In = this,
            this.structures)
                return Ht = this.structures,
                N5(n);
            (!Ht || Ht.length > 0) && (Ht = [])
        } else
            In = Ug,
            (!Ht || Ht.length > 0) && (Ht = []);
        return N5(n)
    }
    unpackMultiple(e, n) {
        let r, s = 0;
        try {
            I1 = !0;
            let i = e.length
              , a = this ? this.unpack(e, i) : B3.unpack(e, i);
            if (n) {
                if (n(a, s, N) === !1)
                    return;
                for (; N < i; )
                    if (s = N,
                    n(N5(), s, N) === !1)
                        return
            } else {
                for (r = [a]; N < i; )
                    s = N,
                    r.push(N5());
                return r
            }
        } catch (i) {
            throw i.lastPosition = s,
            i.values = r,
            i
        } finally {
            I1 = !1,
            h8()
        }
    }
    _mergeStructures(e, n) {
        e = e || [],
        Object.isFrozen(e) && (e = e.map(r=>r.slice(0)));
        for (let r = 0, s = e.length; r < s; r++) {
            let i = e[r];
            i && (i.isShared = !0,
            r >= 32 && (i.highByte = r - 32 >> 5))
        }
        e.sharedLength = e.length;
        for (let r in n || [])
            if (r >= 0) {
                let s = e[r]
                  , i = n[r];
                i && (s && ((e.restoreStructures || (e.restoreStructures = []))[r] = s),
                e[r] = i)
            }
        return this.structures = e
    }
    decode(e, n) {
        return this.unpack(e, n)
    }
}
function N5(t) {
    try {
        if (!In.trusted && !I1) {
            let n = Ht.sharedLength || 0;
            n < Ht.length && (Ht.length = n)
        }
        let e;
        if (In.randomAccessStructure && Ne[N] < 64 && Ne[N] >= 32 && Hg ? (e = Hg(Ne, N, mi, In),
        Ne = null,
        !(t && t.lazy) && e && (e = e.toJSON()),
        N = mi) : e = ar(),
        jr && (N = jr.postBundlePosition,
        jr = null),
        I1 && (Ht.restoreStructures = null),
        N == mi)
            Ht && Ht.restoreStructures && zg(),
            Ht = null,
            Ne = null,
            So && (So = null);
        else {
            if (N > mi)
                throw new Error("Unexpected end of MessagePack data");
            if (!I1) {
                let n;
                try {
                    n = JSON.stringify(e, (r,s)=>typeof s == "bigint" ? `${s}n` : s).slice(0, 100)
                } catch (r) {
                    n = "(JSON view not available " + r + ")"
                }
                throw new Error("Data read, but end of buffer not reached " + n)
            }
        }
        return e
    } catch (e) {
        throw Ht && Ht.restoreStructures && zg(),
        h8(),
        (e instanceof RangeError || e.message.startsWith("Unexpected end of buffer") || N > mi) && (e.incomplete = !0),
        e
    }
}
function zg() {
    for (let t in Ht.restoreStructures)
        Ht[t] = Ht.restoreStructures[t];
    Ht.restoreStructures = null
}
function ar() {
    let t = Ne[N++];
    if (t < 160)
        if (t < 128) {
            if (t < 64)
                return t;
            {
                let e = Ht[t & 63] || In.getStructures && Yk()[t & 63];
                return e ? (e.read || (e.read = Vf(e, t & 63)),
                e.read()) : t
            }
        } else if (t < 144)
            if (t -= 128,
            In.mapsAsObjects) {
                let e = {};
                for (let n = 0; n < t; n++) {
                    let r = Xk();
                    r === "__proto__" && (r = "__proto_"),
                    e[r] = ar()
                }
                return e
            } else {
                let e = new Map;
                for (let n = 0; n < t; n++)
                    e.set(ar(), ar());
                return e
            }
        else {
            t -= 144;
            let e = new Array(t);
            for (let n = 0; n < t; n++)
                e[n] = ar();
            return In.freezeData ? Object.freeze(e) : e
        }
    else if (t < 192) {
        let e = t - 160;
        if (Ea >= N)
            return w1.slice(N - hi, (N += e) - hi);
        if (Ea == 0 && mi < 140) {
            let n = e < 16 ? Bf(e) : Qk(e);
            if (n != null)
                return n
        }
        return u8(e)
    } else {
        let e;
        switch (t) {
        case 192:
            return null;
        case 193:
            return jr ? (e = ar(),
            e > 0 ? jr[1].slice(jr.position1, jr.position1 += e) : jr[0].slice(jr.position0, jr.position0 -= e)) : Kk;
        case 194:
            return !1;
        case 195:
            return !0;
        case 196:
            if (e = Ne[N++],
            e === void 0)
                throw new Error("Unexpected end of buffer");
            return r6(e);
        case 197:
            return e = Vt.getUint16(N),
            N += 2,
            r6(e);
        case 198:
            return e = Vt.getUint32(N),
            N += 4,
            r6(e);
        case 199:
            return lc(Ne[N++]);
        case 200:
            return e = Vt.getUint16(N),
            N += 2,
            lc(e);
        case 201:
            return e = Vt.getUint32(N),
            N += 4,
            lc(e);
        case 202:
            if (e = Vt.getFloat32(N),
            In.useFloat32 > 2) {
                let n = Uf[(Ne[N] & 127) << 1 | Ne[N + 1] >> 7];
                return N += 4,
                (n * e + (e > 0 ? .5 : -.5) >> 0) / n
            }
            return N += 4,
            e;
        case 203:
            return e = Vt.getFloat64(N),
            N += 8,
            e;
        case 204:
            return Ne[N++];
        case 205:
            return e = Vt.getUint16(N),
            N += 2,
            e;
        case 206:
            return e = Vt.getUint32(N),
            N += 4,
            e;
        case 207:
            return In.int64AsType === "number" ? (e = Vt.getUint32(N) * 4294967296,
            e += Vt.getUint32(N + 4)) : In.int64AsType === "string" ? e = Vt.getBigUint64(N).toString() : In.int64AsType === "auto" ? (e = Vt.getBigUint64(N),
            e <= BigInt(2) << BigInt(52) && (e = Number(e))) : e = Vt.getBigUint64(N),
            N += 8,
            e;
        case 208:
            return Vt.getInt8(N++);
        case 209:
            return e = Vt.getInt16(N),
            N += 2,
            e;
        case 210:
            return e = Vt.getInt32(N),
            N += 4,
            e;
        case 211:
            return In.int64AsType === "number" ? (e = Vt.getInt32(N) * 4294967296,
            e += Vt.getUint32(N + 4)) : In.int64AsType === "string" ? e = Vt.getBigInt64(N).toString() : In.int64AsType === "auto" ? (e = Vt.getBigInt64(N),
            e >= BigInt(-2) << BigInt(52) && e <= BigInt(2) << BigInt(52) && (e = Number(e))) : e = Vt.getBigInt64(N),
            N += 8,
            e;
        case 212:
            if (e = Ne[N++],
            e == 114)
                return Yg(Ne[N++] & 63);
            {
                let n = Gr[e];
                if (n)
                    return n.read ? (N++,
                    n.read(ar())) : n.noBuffer ? (N++,
                    n()) : n(Ne.subarray(N, ++N));
                throw new Error("Unknown extension " + e)
            }
        case 213:
            return e = Ne[N],
            e == 114 ? (N++,
            Yg(Ne[N++] & 63, Ne[N++])) : lc(2);
        case 214:
            return lc(4);
        case 215:
            return lc(8);
        case 216:
            return lc(16);
        case 217:
            return e = Ne[N++],
            Ea >= N ? w1.slice(N - hi, (N += e) - hi) : _L(e);
        case 218:
            return e = Vt.getUint16(N),
            N += 2,
            Ea >= N ? w1.slice(N - hi, (N += e) - hi) : IL(e);
        case 219:
            return e = Vt.getUint32(N),
            N += 4,
            Ea >= N ? w1.slice(N - hi, (N += e) - hi) : EL(e);
        case 220:
            return e = Vt.getUint16(N),
            N += 2,
            qg(e);
        case 221:
            return e = Vt.getUint32(N),
            N += 4,
            qg(e);
        case 222:
            return e = Vt.getUint16(N),
            N += 2,
            Wg(e);
        case 223:
            return e = Vt.getUint32(N),
            N += 4,
            Wg(e);
        default:
            if (t >= 224)
                return t - 256;
            if (t === void 0) {
                let n = new Error("Unexpected end of MessagePack data");
                throw n.incomplete = !0,
                n
            }
            throw new Error("Unknown MessagePack token " + t)
        }
    }
}
const SL = /^[a-zA-Z_$][a-zA-Z\d_$]*$/;
function Vf(t, e) {
    function n() {
        if (n.count++ > d8) {
            let s = t.read = new Function("r","return function(){return " + (In.freezeData ? "Object.freeze" : "") + "({" + t.map(i=>i === "__proto__" ? "__proto_:r()" : SL.test(i) ? i + ":r()" : "[" + JSON.stringify(i) + "]:r()").join(",") + "})}")(ar);
            return t.highByte === 0 && (t.read = Zg(e, t.read)),
            s()
        }
        let r = {};
        for (let s = 0, i = t.length; s < i; s++) {
            let a = t[s];
            a === "__proto__" && (a = "__proto_"),
            r[a] = ar()
        }
        return In.freezeData ? Object.freeze(r) : r
    }
    return n.count = 0,
    t.highByte === 0 ? Zg(e, n) : n
}
const Zg = (t,e)=>function() {
    let n = Ne[N++];
    if (n === 0)
        return e();
    let r = t < 32 ? -(t + (n << 5)) : t + (n << 5)
      , s = Ht[r] || Yk()[r];
    if (!s)
        throw new Error("Record id is not defined for " + r);
    return s.read || (s.read = Vf(s, t)),
    s.read()
}
;
function Yk() {
    let t = tx(()=>(Ne = null,
    In.getStructures()));
    return Ht = In._mergeStructures(t, Ht)
}
var u8 = a5
  , _L = a5
  , IL = a5
  , EL = a5;
function a5(t) {
    let e;
    if (t < 16 && (e = Bf(t)))
        return e;
    if (t > 64 && l8)
        return l8.decode(Ne.subarray(N, N += t));
    const n = N + t
      , r = [];
    for (e = ""; N < n; ) {
        const s = Ne[N++];
        if (!(s & 128))
            r.push(s);
        else if ((s & 224) === 192) {
            const i = Ne[N++] & 63;
            r.push((s & 31) << 6 | i)
        } else if ((s & 240) === 224) {
            const i = Ne[N++] & 63
              , a = Ne[N++] & 63;
            r.push((s & 31) << 12 | i << 6 | a)
        } else if ((s & 248) === 240) {
            const i = Ne[N++] & 63
              , a = Ne[N++] & 63
              , o = Ne[N++] & 63;
            let l = (s & 7) << 18 | i << 12 | a << 6 | o;
            l > 65535 && (l -= 65536,
            r.push(l >>> 10 & 1023 | 55296),
            l = 56320 | l & 1023),
            r.push(l)
        } else
            r.push(s);
        r.length >= 4096 && (e += Dr.apply(String, r),
        r.length = 0)
    }
    return r.length > 0 && (e += Dr.apply(String, r)),
    e
}
function qg(t) {
    let e = new Array(t);
    for (let n = 0; n < t; n++)
        e[n] = ar();
    return In.freezeData ? Object.freeze(e) : e
}
function Wg(t) {
    if (In.mapsAsObjects) {
        let e = {};
        for (let n = 0; n < t; n++) {
            let r = Xk();
            r === "__proto__" && (r = "__proto_"),
            e[r] = ar()
        }
        return e
    } else {
        let e = new Map;
        for (let n = 0; n < t; n++)
            e.set(ar(), ar());
        return e
    }
}
var Dr = String.fromCharCode;
function Qk(t) {
    let e = N
      , n = new Array(t);
    for (let r = 0; r < t; r++) {
        const s = Ne[N++];
        if ((s & 128) > 0) {
            N = e;
            return
        }
        n[r] = s
    }
    return Dr.apply(String, n)
}
function Bf(t) {
    if (t < 4)
        if (t < 2) {
            if (t === 0)
                return "";
            {
                let e = Ne[N++];
                if ((e & 128) > 1) {
                    N -= 1;
                    return
                }
                return Dr(e)
            }
        } else {
            let e = Ne[N++]
              , n = Ne[N++];
            if ((e & 128) > 0 || (n & 128) > 0) {
                N -= 2;
                return
            }
            if (t < 3)
                return Dr(e, n);
            let r = Ne[N++];
            if ((r & 128) > 0) {
                N -= 3;
                return
            }
            return Dr(e, n, r)
        }
    else {
        let e = Ne[N++]
          , n = Ne[N++]
          , r = Ne[N++]
          , s = Ne[N++];
        if ((e & 128) > 0 || (n & 128) > 0 || (r & 128) > 0 || (s & 128) > 0) {
            N -= 4;
            return
        }
        if (t < 6) {
            if (t === 4)
                return Dr(e, n, r, s);
            {
                let i = Ne[N++];
                if ((i & 128) > 0) {
                    N -= 5;
                    return
                }
                return Dr(e, n, r, s, i)
            }
        } else if (t < 8) {
            let i = Ne[N++]
              , a = Ne[N++];
            if ((i & 128) > 0 || (a & 128) > 0) {
                N -= 6;
                return
            }
            if (t < 7)
                return Dr(e, n, r, s, i, a);
            let o = Ne[N++];
            if ((o & 128) > 0) {
                N -= 7;
                return
            }
            return Dr(e, n, r, s, i, a, o)
        } else {
            let i = Ne[N++]
              , a = Ne[N++]
              , o = Ne[N++]
              , l = Ne[N++];
            if ((i & 128) > 0 || (a & 128) > 0 || (o & 128) > 0 || (l & 128) > 0) {
                N -= 8;
                return
            }
            if (t < 10) {
                if (t === 8)
                    return Dr(e, n, r, s, i, a, o, l);
                {
                    let d = Ne[N++];
                    if ((d & 128) > 0) {
                        N -= 9;
                        return
                    }
                    return Dr(e, n, r, s, i, a, o, l, d)
                }
            } else if (t < 12) {
                let d = Ne[N++]
                  , u = Ne[N++];
                if ((d & 128) > 0 || (u & 128) > 0) {
                    N -= 10;
                    return
                }
                if (t < 11)
                    return Dr(e, n, r, s, i, a, o, l, d, u);
                let h = Ne[N++];
                if ((h & 128) > 0) {
                    N -= 11;
                    return
                }
                return Dr(e, n, r, s, i, a, o, l, d, u, h)
            } else {
                let d = Ne[N++]
                  , u = Ne[N++]
                  , h = Ne[N++]
                  , f = Ne[N++];
                if ((d & 128) > 0 || (u & 128) > 0 || (h & 128) > 0 || (f & 128) > 0) {
                    N -= 12;
                    return
                }
                if (t < 14) {
                    if (t === 12)
                        return Dr(e, n, r, s, i, a, o, l, d, u, h, f);
                    {
                        let p = Ne[N++];
                        if ((p & 128) > 0) {
                            N -= 13;
                            return
                        }
                        return Dr(e, n, r, s, i, a, o, l, d, u, h, f, p)
                    }
                } else {
                    let p = Ne[N++]
                      , m = Ne[N++];
                    if ((p & 128) > 0 || (m & 128) > 0) {
                        N -= 14;
                        return
                    }
                    if (t < 15)
                        return Dr(e, n, r, s, i, a, o, l, d, u, h, f, p, m);
                    let g = Ne[N++];
                    if ((g & 128) > 0) {
                        N -= 15;
                        return
                    }
                    return Dr(e, n, r, s, i, a, o, l, d, u, h, f, p, m, g)
                }
            }
        }
    }
}
function Gg() {
    let t = Ne[N++], e;
    if (t < 192)
        e = t - 160;
    else
        switch (t) {
        case 217:
            e = Ne[N++];
            break;
        case 218:
            e = Vt.getUint16(N),
            N += 2;
            break;
        case 219:
            e = Vt.getUint32(N),
            N += 4;
            break;
        default:
            throw new Error("Expected string")
        }
    return a5(e)
}
function r6(t) {
    return In.copyBuffers ? Uint8Array.prototype.slice.call(Ne, N, N += t) : Ne.subarray(N, N += t)
}
function lc(t) {
    let e = Ne[N++];
    if (Gr[e]) {
        let n;
        return Gr[e](Ne.subarray(N, n = N += t), r=>{
            N = r;
            try {
                return ar()
            } finally {
                N = n
            }
        }
        )
    } else
        throw new Error("Unknown extension type " + e)
}
var Kg = new Array(4096);
function Xk() {
    let t = Ne[N++];
    if (t >= 160 && t < 192) {
        if (t = t - 160,
        Ea >= N)
            return w1.slice(N - hi, (N += t) - hi);
        if (!(Ea == 0 && mi < 180))
            return u8(t)
    } else
        return N--,
        Jk(ar());
    let e = (t << 5 ^ (t > 1 ? Vt.getUint16(N) : t > 0 ? Ne[N] : 0)) & 4095, n = Kg[e], r = N, s = N + t - 3, i, a = 0;
    if (n && n.bytes == t) {
        for (; r < s; ) {
            if (i = Vt.getUint32(r),
            i != n[a++]) {
                r = 1879048192;
                break
            }
            r += 4
        }
        for (s += 3; r < s; )
            if (i = Ne[r++],
            i != n[a++]) {
                r = 1879048192;
                break
            }
        if (r === s)
            return N = r,
            n.string;
        s -= 3,
        r = N
    }
    for (n = [],
    Kg[e] = n,
    n.bytes = t; r < s; )
        i = Vt.getUint32(r),
        n.push(i),
        r += 4;
    for (s += 3; r < s; )
        i = Ne[r++],
        n.push(i);
    let o = t < 16 ? Bf(t) : Qk(t);
    return o != null ? n.string = o : n.string = u8(t)
}
function Jk(t) {
    if (typeof t == "string")
        return t;
    if (typeof t == "number")
        return t.toString();
    throw new Error("Invalid property type for record",typeof t)
}
const Yg = (t,e)=>{
    let n = ar().map(Jk)
      , r = t;
    e !== void 0 && (t = t < 32 ? -((e << 5) + t) : (e << 5) + t,
    n.highByte = e);
    let s = Ht[t];
    return s && (s.isShared || I1) && ((Ht.restoreStructures || (Ht.restoreStructures = []))[t] = s),
    Ht[t] = n,
    n.read = Vf(n, r),
    n.read()
}
;
Gr[0] = ()=>{}
;
Gr[0].noBuffer = !0;
Gr[66] = t=>{
    let e = t.length
      , n = BigInt(t[0] & 128 ? t[0] - 256 : t[0]);
    for (let r = 1; r < e; r++)
        n <<= 8n,
        n += BigInt(t[r]);
    return n
}
;
let AL = {
    Error,
    TypeError,
    ReferenceError
};
Gr[101] = ()=>{
    let t = ar();
    return (AL[t[0]] || Error)(t[1])
}
;
Gr[105] = t=>{
    if (In.structuredClone === !1)
        throw new Error("Structured clone extension is disabled");
    let e = Vt.getUint32(N - 4);
    So || (So = new Map);
    let n = Ne[N], r;
    n >= 144 && n < 160 || n == 220 || n == 221 ? r = [] : r = {};
    let s = {
        target: r
    };
    So.set(e, s);
    let i = ar();
    return s.used ? Object.assign(r, i) : (s.target = i,
    i)
}
;
Gr[112] = t=>{
    if (In.structuredClone === !1)
        throw new Error("Structured clone extension is disabled");
    let e = Vt.getUint32(N - 4)
      , n = So.get(e);
    return n.used = !0,
    n.target
}
;
Gr[115] = ()=>new Set(ar());
const ex = ["Int8", "Uint8", "Uint8Clamped", "Int16", "Uint16", "Int32", "Uint32", "Float32", "Float64", "BigInt64", "BigUint64"].map(t=>t + "Array");
let jL = typeof globalThis == "object" ? globalThis : window;
Gr[116] = t=>{
    let e = t[0]
      , n = ex[e];
    if (!n)
        throw new Error("Could not find typed array for code " + e);
    return new jL[n](Uint8Array.prototype.slice.call(t, 1).buffer)
}
;
Gr[120] = ()=>{
    let t = ar();
    return new RegExp(t[0],t[1])
}
;
const ML = [];
Gr[98] = t=>{
    let e = (t[0] << 24) + (t[1] << 16) + (t[2] << 8) + t[3]
      , n = N;
    return N += e - t.length,
    jr = ML,
    jr = [Gg(), Gg()],
    jr.position0 = 0,
    jr.position1 = 0,
    jr.postBundlePosition = N,
    N = n,
    ar()
}
;
Gr[255] = t=>t.length == 4 ? new Date((t[0] * 16777216 + (t[1] << 16) + (t[2] << 8) + t[3]) * 1e3) : t.length == 8 ? new Date(((t[0] << 22) + (t[1] << 14) + (t[2] << 6) + (t[3] >> 2)) / 1e6 + ((t[3] & 3) * 4294967296 + t[4] * 16777216 + (t[5] << 16) + (t[6] << 8) + t[7]) * 1e3) : t.length == 12 ? new Date(((t[0] << 24) + (t[1] << 16) + (t[2] << 8) + t[3]) / 1e6 + ((t[4] & 128 ? -281474976710656 : 0) + t[6] * 1099511627776 + t[7] * 4294967296 + t[8] * 16777216 + (t[9] << 16) + (t[10] << 8) + t[11]) * 1e3) : new Date("invalid");
function tx(t) {
    let e = mi
      , n = N
      , r = hi
      , s = Ea
      , i = w1
      , a = So
      , o = jr
      , l = new Uint8Array(Ne.slice(0, mi))
      , d = Ht
      , u = Ht.slice(0, Ht.length)
      , h = In
      , f = I1
      , p = t();
    return mi = e,
    N = n,
    hi = r,
    Ea = s,
    w1 = i,
    So = a,
    jr = o,
    Ne = l,
    I1 = f,
    Ht = d,
    Ht.splice(0, Ht.length, ...u),
    In = h,
    Vt = new DataView(Ne.buffer,Ne.byteOffset,Ne.byteLength),
    p
}
function h8() {
    Ne = null,
    So = null,
    Ht = null
}
function TL(t) {
    t.unpack ? Gr[t.type] = t.unpack : Gr[t.type] = t
}
const Uf = new Array(147);
for (let t = 0; t < 256; t++)
    Uf[t] = +("1e" + Math.floor(45.15 - t * .30103));
var B3 = new _d({
    useRecords: !1
});
B3.unpack;
B3.unpackMultiple;
B3.unpack;
let LL = new Float32Array(1);
new Uint8Array(LL.buffer,0,4);
let m2;
try {
    m2 = new TextEncoder
} catch {}
let q2, Hf;
const U3 = typeof Buffer < "u"
  , V5 = U3 ? function(t) {
    return Buffer.allocUnsafeSlow(t)
}
: Uint8Array
  , nx = U3 ? Buffer : Uint8Array
  , Qg = U3 ? 4294967296 : 2144337920;
let Y, pu, bn, H = 0, is, Hn = null, OL;
const RL = 21760
  , PL = /[\u0080-\uFFFF]/
  , Ll = Symbol("record-id");
class rx extends _d {
    constructor(e) {
        super(e),
        this.offset = 0;
        let n, r, s, i, a = nx.prototype.utf8Write ? function(I, Q) {
            return Y.utf8Write(I, Q, 4294967295)
        }
        : m2 && m2.encodeInto ? function(I, Q) {
            return m2.encodeInto(I, Y.subarray(Q)).written
        }
        : !1, o = this;
        e || (e = {});
        let l = e && e.sequential
          , d = e.structures || e.saveStructures
          , u = e.maxSharedStructures;
        if (u == null && (u = d ? 32 : 0),
        u > 8160)
            throw new Error("Maximum maxSharedStructure is 8160");
        e.structuredClone && e.moreTypes == null && (this.moreTypes = !0);
        let h = e.maxOwnStructures;
        h == null && (h = d ? 32 : 64),
        !this.structures && e.useRecords != !1 && (this.structures = []);
        let f = u > 32 || h + u > 64
          , p = u + 64
          , m = u + h + 64;
        if (m > 8256)
            throw new Error("Maximum maxSharedStructure + maxOwnStructure is 8192");
        let g = []
          , C = 0
          , b = 0;
        this.pack = this.encode = function(I, Q) {
            if (Y || (Y = new V5(8192),
            bn = Y.dataView || (Y.dataView = new DataView(Y.buffer,0,8192)),
            H = 0),
            is = Y.length - 10,
            is - H < 2048 ? (Y = new V5(Y.length),
            bn = Y.dataView || (Y.dataView = new DataView(Y.buffer,0,Y.length)),
            is = Y.length - 10,
            H = 0) : H = H + 7 & 2147483640,
            n = H,
            Q & HL && (H += Q & 255),
            i = o.structuredClone ? new Map : null,
            o.bundleStrings && typeof I != "string" ? (Hn = [],
            Hn.size = 1 / 0) : Hn = null,
            s = o.structures,
            s) {
                s.uninitialized && (s = o._mergeStructures(o.getStructures()));
                let A = s.sharedLength || 0;
                if (A > u)
                    throw new Error("Shared structures is larger than maximum shared structures, try increasing maxSharedStructures to " + s.sharedLength);
                if (!s.transitions) {
                    s.transitions = Object.create(null);
                    for (let E = 0; E < A; E++) {
                        let V = s[E];
                        if (!V)
                            continue;
                        let X, L = s.transitions;
                        for (let q = 0, oe = V.length; q < oe; q++) {
                            let we = V[q];
                            X = L[we],
                            X || (X = L[we] = Object.create(null)),
                            L = X
                        }
                        L[Ll] = E + 64
                    }
                    this.lastNamedStructuresLength = A
                }
                l || (s.nextId = A + 64)
            }
            r && (r = !1);
            let P;
            try {
                o.randomAccessStructure && I && I.constructor && I.constructor === Object ? _e(I) : D(I);
                let A = Hn;
                if (Hn && ey(n, D, 0),
                i && i.idsToInsert) {
                    let E = i.idsToInsert.sort((q,oe)=>q.offset > oe.offset ? 1 : -1)
                      , V = E.length
                      , X = -1;
                    for (; A && V > 0; ) {
                        let q = E[--V].offset + n;
                        q < A.stringsPosition + n && X === -1 && (X = 0),
                        q > A.position + n ? X >= 0 && (X += 6) : (X >= 0 && (bn.setUint32(A.position + n, bn.getUint32(A.position + n) + X),
                        X = -1),
                        A = A.previous,
                        V++)
                    }
                    X >= 0 && A && bn.setUint32(A.position + n, bn.getUint32(A.position + n) + X),
                    H += E.length * 6,
                    H > is && W(H),
                    o.offset = H;
                    let L = FL(Y.subarray(n, H), E);
                    return i = null,
                    L
                }
                return o.offset = H,
                Q & BL ? (Y.start = n,
                Y.end = H,
                Y) : Y.subarray(n, H)
            } catch (A) {
                throw P = A,
                A
            } finally {
                if (s && (k(),
                r && o.saveStructures)) {
                    let A = s.sharedLength || 0
                      , E = Y.subarray(n, H)
                      , V = VL(s, o);
                    if (!P)
                        return o.saveStructures(V, V.isCompatible) === !1 ? o.pack(I, Q) : (o.lastNamedStructuresLength = A,
                        E)
                }
                Q & UL && (H = n)
            }
        }
        ;
        const k = ()=>{
            b < 10 && b++;
            let I = s.sharedLength || 0;
            if (s.length > I && !l && (s.length = I),
            C > 1e4)
                s.transitions = null,
                b = 0,
                C = 0,
                g.length > 0 && (g = []);
            else if (g.length > 0 && !l) {
                for (let Q = 0, P = g.length; Q < P; Q++)
                    g[Q][Ll] = 0;
                g = []
            }
        }
          , S = I=>{
            var Q = I.length;
            Q < 16 ? Y[H++] = 144 | Q : Q < 65536 ? (Y[H++] = 220,
            Y[H++] = Q >> 8,
            Y[H++] = Q & 255) : (Y[H++] = 221,
            bn.setUint32(H, Q),
            H += 4);
            for (let P = 0; P < Q; P++)
                D(I[P])
        }
          , D = I=>{
            H > is && (Y = W(H));
            var Q = typeof I, P;
            if (Q === "string") {
                let A = I.length;
                if (Hn && A >= 4 && A < 4096) {
                    if ((Hn.size += A) > RL) {
                        let L, q = (Hn[0] ? Hn[0].length * 3 + Hn[1].length : 0) + 10;
                        H + q > is && (Y = W(H + q));
                        let oe;
                        Hn.position ? (oe = Hn,
                        Y[H] = 200,
                        H += 3,
                        Y[H++] = 98,
                        L = H - n,
                        H += 4,
                        ey(n, D, 0),
                        bn.setUint16(L + n - 3, H - n - L)) : (Y[H++] = 214,
                        Y[H++] = 98,
                        L = H - n,
                        H += 4),
                        Hn = ["", ""],
                        Hn.previous = oe,
                        Hn.size = 0,
                        Hn.position = L
                    }
                    let X = PL.test(I);
                    Hn[X ? 0 : 1] += I,
                    Y[H++] = 193,
                    D(X ? -A : A);
                    return
                }
                let E;
                A < 32 ? E = 1 : A < 256 ? E = 2 : A < 65536 ? E = 3 : E = 5;
                let V = A * 3;
                if (H + V > is && (Y = W(H + V)),
                A < 64 || !a) {
                    let X, L, q, oe = H + E;
                    for (X = 0; X < A; X++)
                        L = I.charCodeAt(X),
                        L < 128 ? Y[oe++] = L : L < 2048 ? (Y[oe++] = L >> 6 | 192,
                        Y[oe++] = L & 63 | 128) : (L & 64512) === 55296 && ((q = I.charCodeAt(X + 1)) & 64512) === 56320 ? (L = 65536 + ((L & 1023) << 10) + (q & 1023),
                        X++,
                        Y[oe++] = L >> 18 | 240,
                        Y[oe++] = L >> 12 & 63 | 128,
                        Y[oe++] = L >> 6 & 63 | 128,
                        Y[oe++] = L & 63 | 128) : (Y[oe++] = L >> 12 | 224,
                        Y[oe++] = L >> 6 & 63 | 128,
                        Y[oe++] = L & 63 | 128);
                    P = oe - H - E
                } else
                    P = a(I, H + E);
                P < 32 ? Y[H++] = 160 | P : P < 256 ? (E < 2 && Y.copyWithin(H + 2, H + 1, H + 1 + P),
                Y[H++] = 217,
                Y[H++] = P) : P < 65536 ? (E < 3 && Y.copyWithin(H + 3, H + 2, H + 2 + P),
                Y[H++] = 218,
                Y[H++] = P >> 8,
                Y[H++] = P & 255) : (E < 5 && Y.copyWithin(H + 5, H + 3, H + 3 + P),
                Y[H++] = 219,
                bn.setUint32(H, P),
                H += 4),
                H += P
            } else if (Q === "number")
                if (I >>> 0 === I)
                    I < 32 || I < 128 && this.useRecords === !1 || I < 64 && !this.randomAccessStructure ? Y[H++] = I : I < 256 ? (Y[H++] = 204,
                    Y[H++] = I) : I < 65536 ? (Y[H++] = 205,
                    Y[H++] = I >> 8,
                    Y[H++] = I & 255) : (Y[H++] = 206,
                    bn.setUint32(H, I),
                    H += 4);
                else if (I >> 0 === I)
                    I >= -32 ? Y[H++] = 256 + I : I >= -128 ? (Y[H++] = 208,
                    Y[H++] = I + 256) : I >= -32768 ? (Y[H++] = 209,
                    bn.setInt16(H, I),
                    H += 2) : (Y[H++] = 210,
                    bn.setInt32(H, I),
                    H += 4);
                else {
                    let A;
                    if ((A = this.useFloat32) > 0 && I < 4294967296 && I >= -2147483648) {
                        Y[H++] = 202,
                        bn.setFloat32(H, I);
                        let E;
                        if (A < 4 || (E = I * Uf[(Y[H] & 127) << 1 | Y[H + 1] >> 7]) >> 0 === E) {
                            H += 4;
                            return
                        } else
                            H--
                    }
                    Y[H++] = 203,
                    bn.setFloat64(H, I),
                    H += 8
                }
            else if (Q === "object" || Q === "function")
                if (!I)
                    Y[H++] = 192;
                else {
                    if (i) {
                        let E = i.get(I);
                        if (E) {
                            if (!E.id) {
                                let V = i.idsToInsert || (i.idsToInsert = []);
                                E.id = V.push(E)
                            }
                            Y[H++] = 214,
                            Y[H++] = 112,
                            bn.setUint32(H, E.id),
                            H += 4;
                            return
                        } else
                            i.set(I, {
                                offset: H - n
                            })
                    }
                    let A = I.constructor;
                    if (A === Object)
                        z(I, !0);
                    else if (A === Array)
                        S(I);
                    else if (A === Map)
                        if (this.mapAsEmptyObject)
                            Y[H++] = 128;
                        else {
                            P = I.size,
                            P < 16 ? Y[H++] = 128 | P : P < 65536 ? (Y[H++] = 222,
                            Y[H++] = P >> 8,
                            Y[H++] = P & 255) : (Y[H++] = 223,
                            bn.setUint32(H, P),
                            H += 4);
                            for (let[E,V] of I)
                                D(E),
                                D(V)
                        }
                    else {
                        for (let E = 0, V = q2.length; E < V; E++) {
                            let X = Hf[E];
                            if (I instanceof X) {
                                let L = q2[E];
                                if (L.write) {
                                    L.type && (Y[H++] = 212,
                                    Y[H++] = L.type,
                                    Y[H++] = 0);
                                    let M = L.write.call(this, I);
                                    M === I ? Array.isArray(I) ? S(I) : z(I) : D(M);
                                    return
                                }
                                let q = Y
                                  , oe = bn
                                  , we = H;
                                Y = null;
                                let _;
                                try {
                                    _ = L.pack.call(this, I, M=>(Y = q,
                                    q = null,
                                    H += M,
                                    H > is && W(H),
                                    {
                                        target: Y,
                                        targetView: bn,
                                        position: H - M
                                    }), D)
                                } finally {
                                    q && (Y = q,
                                    bn = oe,
                                    H = we,
                                    is = Y.length - 10)
                                }
                                _ && (_.length + H > is && W(_.length + H),
                                H = $L(_, Y, H, L.type));
                                return
                            }
                        }
                        if (Array.isArray(I))
                            S(I);
                        else {
                            if (I.toJSON) {
                                const E = I.toJSON();
                                if (E !== I)
                                    return D(E)
                            }
                            if (Q === "function")
                                return D(this.writeFunction && this.writeFunction(I));
                            z(I, !I.hasOwnProperty)
                        }
                    }
                }
            else if (Q === "boolean")
                Y[H++] = I ? 195 : 194;
            else if (Q === "bigint") {
                if (I < BigInt(1) << BigInt(63) && I >= -(BigInt(1) << BigInt(63)))
                    Y[H++] = 211,
                    bn.setBigInt64(H, I);
                else if (I < BigInt(1) << BigInt(64) && I > 0)
                    Y[H++] = 207,
                    bn.setBigUint64(H, I);
                else if (this.largeBigIntToFloat)
                    Y[H++] = 203,
                    bn.setFloat64(H, Number(I));
                else if (this.useBigIntExtension && I < 2n ** 1023n && I > -(2n ** 1023n)) {
                    Y[H++] = 199,
                    H++,
                    Y[H++] = 66;
                    let A = [], E;
                    do {
                        let V = I & 0xffn;
                        E = (V & 0x80n) === (I < 0n ? 0x80n : 0n),
                        A.push(V),
                        I >>= 8n
                    } while (!((I === 0n || I === -1n) && E));
                    Y[H - 2] = A.length;
                    for (let V = A.length; V > 0; )
                        Y[H++] = Number(A[--V]);
                    return
                } else
                    throw new RangeError(I + " was too large to fit in MessagePack 64-bit integer format, use useBigIntExtension or set largeBigIntToFloat to convert to float-64");
                H += 8
            } else if (Q === "undefined")
                this.encodeUndefinedAsNil ? Y[H++] = 192 : (Y[H++] = 212,
                Y[H++] = 0,
                Y[H++] = 0);
            else
                throw new Error("Unknown type: " + Q)
        }
          , R = this.variableMapSize || this.coercibleKeyAsNumber ? I=>{
            let Q = Object.keys(I)
              , P = Q.length;
            P < 16 ? Y[H++] = 128 | P : P < 65536 ? (Y[H++] = 222,
            Y[H++] = P >> 8,
            Y[H++] = P & 255) : (Y[H++] = 223,
            bn.setUint32(H, P),
            H += 4);
            let A;
            if (this.coercibleKeyAsNumber)
                for (let E = 0; E < P; E++) {
                    A = Q[E];
                    let V = Number(A);
                    D(isNaN(V) ? A : V),
                    D(I[A])
                }
            else
                for (let E = 0; E < P; E++)
                    D(A = Q[E]),
                    D(I[A])
        }
        : (I,Q)=>{
            Y[H++] = 222;
            let P = H - n;
            H += 2;
            let A = 0;
            for (let E in I)
                (Q || I.hasOwnProperty(E)) && (D(E),
                D(I[E]),
                A++);
            Y[P++ + n] = A >> 8,
            Y[P + n] = A & 255
        }
          , T = this.useRecords === !1 ? R : e.progressiveRecords && !f ? (I,Q)=>{
            let P, A = s.transitions || (s.transitions = Object.create(null)), E = H++ - n, V;
            for (let X in I)
                if (Q || I.hasOwnProperty(X)) {
                    if (P = A[X],
                    P)
                        A = P;
                    else {
                        let L = Object.keys(I)
                          , q = A;
                        A = s.transitions;
                        let oe = 0;
                        for (let we = 0, _ = L.length; we < _; we++) {
                            let M = L[we];
                            P = A[M],
                            P || (P = A[M] = Object.create(null),
                            oe++),
                            A = P
                        }
                        E + n + 1 == H ? (H--,
                        fe(A, L, oe)) : me(A, L, E, oe),
                        V = !0,
                        A = q[X]
                    }
                    D(I[X])
                }
            if (!V) {
                let X = A[Ll];
                X ? Y[E + n] = X : me(A, Object.keys(I), E, 0)
            }
        }
        : (I,Q)=>{
            let P, A = s.transitions || (s.transitions = Object.create(null)), E = 0;
            for (let X in I)
                (Q || I.hasOwnProperty(X)) && (P = A[X],
                P || (P = A[X] = Object.create(null),
                E++),
                A = P);
            let V = A[Ll];
            V ? V >= 96 && f ? (Y[H++] = ((V -= 96) & 31) + 96,
            Y[H++] = V >> 5) : Y[H++] = V : fe(A, A.__keys__ || Object.keys(I), E);
            for (let X in I)
                (Q || I.hasOwnProperty(X)) && D(I[X])
        }
          , B = typeof this.useRecords == "function" && this.useRecords
          , z = B ? (I,Q)=>{
            B(I) ? T(I, Q) : R(I, Q)
        }
        : T
          , W = I=>{
            let Q;
            if (I > 16777216) {
                if (I - n > Qg)
                    throw new Error("Packed buffer would be larger than maximum buffer size");
                Q = Math.min(Qg, Math.round(Math.max((I - n) * (I > 67108864 ? 1.25 : 2), 4194304) / 4096) * 4096)
            } else
                Q = (Math.max(I - n << 2, Y.length - 1) >> 12) + 1 << 12;
            let P = new V5(Q);
            return bn = P.dataView || (P.dataView = new DataView(P.buffer,0,Q)),
            I = Math.min(I, Y.length),
            Y.copy ? Y.copy(P, 0, n, I) : P.set(Y.slice(n, I)),
            H -= n,
            n = 0,
            is = P.length - 10,
            Y = P
        }
          , fe = (I,Q,P)=>{
            let A = s.nextId;
            A || (A = 64),
            A < p && this.shouldShareStructure && !this.shouldShareStructure(Q) ? (A = s.nextOwnId,
            A < m || (A = p),
            s.nextOwnId = A + 1) : (A >= m && (A = p),
            s.nextId = A + 1);
            let E = Q.highByte = A >= 96 && f ? A - 96 >> 5 : -1;
            I[Ll] = A,
            I.__keys__ = Q,
            s[A - 64] = Q,
            A < p ? (Q.isShared = !0,
            s.sharedLength = A - 63,
            r = !0,
            E >= 0 ? (Y[H++] = (A & 31) + 96,
            Y[H++] = E) : Y[H++] = A) : (E >= 0 ? (Y[H++] = 213,
            Y[H++] = 114,
            Y[H++] = (A & 31) + 96,
            Y[H++] = E) : (Y[H++] = 212,
            Y[H++] = 114,
            Y[H++] = A),
            P && (C += b * P),
            g.length >= h && (g.shift()[Ll] = 0),
            g.push(I),
            D(Q))
        }
          , me = (I,Q,P,A)=>{
            let E = Y
              , V = H
              , X = is
              , L = n;
            Y = pu,
            H = 0,
            n = 0,
            Y || (pu = Y = new V5(8192)),
            is = Y.length - 10,
            fe(I, Q, A),
            pu = Y;
            let q = H;
            if (Y = E,
            H = V,
            is = X,
            n = L,
            q > 1) {
                let oe = H + q - 1;
                oe > is && W(oe);
                let we = P + n;
                Y.copyWithin(we + q, we + 1, H),
                Y.set(pu.slice(0, q), we),
                H = oe
            } else
                Y[P + n] = pu[0]
        }
          , _e = (I,Q)=>{
            let P = OL(I, Y, n, H, s, W, (A,E,V)=>{
                if (V)
                    return r = !0;
                H = E;
                let X = Y;
                return D(A),
                k(),
                X !== Y ? {
                    position: H,
                    targetView: bn,
                    target: Y
                } : H
            }
            , this);
            if (P === 0)
                return z(I, !0);
            H = P
        }
    }
    useBuffer(e) {
        Y = e,
        bn = new DataView(Y.buffer,Y.byteOffset,Y.byteLength),
        H = 0
    }
    clearSharedData() {
        this.structures && (this.structures = []),
        this.typedStructs && (this.typedStructs = [])
    }
}
Hf = [Date, Set, Error, RegExp, ArrayBuffer, Object.getPrototypeOf(Uint8Array.prototype).constructor, Gk];
q2 = [{
    pack(t, e, n) {
        let r = t.getTime() / 1e3;
        if ((this.useTimestamp32 || t.getMilliseconds() === 0) && r >= 0 && r < 4294967296) {
            let {target: s, targetView: i, position: a} = e(6);
            s[a++] = 214,
            s[a++] = 255,
            i.setUint32(a, r)
        } else if (r > 0 && r < 4294967296) {
            let {target: s, targetView: i, position: a} = e(10);
            s[a++] = 215,
            s[a++] = 255,
            i.setUint32(a, t.getMilliseconds() * 4e6 + (r / 1e3 / 4294967296 >> 0)),
            i.setUint32(a + 4, r)
        } else if (isNaN(r)) {
            if (this.onInvalidDate)
                return e(0),
                n(this.onInvalidDate());
            let {target: s, targetView: i, position: a} = e(3);
            s[a++] = 212,
            s[a++] = 255,
            s[a++] = 255
        } else {
            let {target: s, targetView: i, position: a} = e(15);
            s[a++] = 199,
            s[a++] = 12,
            s[a++] = 255,
            i.setUint32(a, t.getMilliseconds() * 1e6),
            i.setBigInt64(a + 4, BigInt(Math.floor(r)))
        }
    }
}, {
    pack(t, e, n) {
        if (this.setAsEmptyObject)
            return e(0),
            n({});
        let r = Array.from(t)
          , {target: s, position: i} = e(this.moreTypes ? 3 : 0);
        this.moreTypes && (s[i++] = 212,
        s[i++] = 115,
        s[i++] = 0),
        n(r)
    }
}, {
    pack(t, e, n) {
        let {target: r, position: s} = e(this.moreTypes ? 3 : 0);
        this.moreTypes && (r[s++] = 212,
        r[s++] = 101,
        r[s++] = 0),
        n([t.name, t.message])
    }
}, {
    pack(t, e, n) {
        let {target: r, position: s} = e(this.moreTypes ? 3 : 0);
        this.moreTypes && (r[s++] = 212,
        r[s++] = 120,
        r[s++] = 0),
        n([t.source, t.flags])
    }
}, {
    pack(t, e) {
        this.moreTypes ? Xg(t, 16, e) : Jg(U3 ? Buffer.from(t) : new Uint8Array(t), e)
    }
}, {
    pack(t, e) {
        let n = t.constructor;
        n !== nx && this.moreTypes ? Xg(t, ex.indexOf(n.name), e) : Jg(t, e)
    }
}, {
    pack(t, e) {
        let {target: n, position: r} = e(1);
        n[r] = 193
    }
}];
function Xg(t, e, n, r) {
    let s = t.byteLength;
    if (s + 1 < 256) {
        var {target: i, position: a} = n(4 + s);
        i[a++] = 199,
        i[a++] = s + 1
    } else if (s + 1 < 65536) {
        var {target: i, position: a} = n(5 + s);
        i[a++] = 200,
        i[a++] = s + 1 >> 8,
        i[a++] = s + 1 & 255
    } else {
        var {target: i, position: a, targetView: o} = n(7 + s);
        i[a++] = 201,
        o.setUint32(a, s + 1),
        a += 4
    }
    i[a++] = 116,
    i[a++] = e,
    i.set(new Uint8Array(t.buffer,t.byteOffset,t.byteLength), a)
}
function Jg(t, e) {
    let n = t.byteLength;
    var r, s;
    if (n < 256) {
        var {target: r, position: s} = e(n + 2);
        r[s++] = 196,
        r[s++] = n
    } else if (n < 65536) {
        var {target: r, position: s} = e(n + 3);
        r[s++] = 197,
        r[s++] = n >> 8,
        r[s++] = n & 255
    } else {
        var {target: r, position: s, targetView: i} = e(n + 5);
        r[s++] = 198,
        i.setUint32(s, n),
        s += 4
    }
    r.set(t, s)
}
function $L(t, e, n, r) {
    let s = t.length;
    switch (s) {
    case 1:
        e[n++] = 212;
        break;
    case 2:
        e[n++] = 213;
        break;
    case 4:
        e[n++] = 214;
        break;
    case 8:
        e[n++] = 215;
        break;
    case 16:
        e[n++] = 216;
        break;
    default:
        s < 256 ? (e[n++] = 199,
        e[n++] = s) : s < 65536 ? (e[n++] = 200,
        e[n++] = s >> 8,
        e[n++] = s & 255) : (e[n++] = 201,
        e[n++] = s >> 24,
        e[n++] = s >> 16 & 255,
        e[n++] = s >> 8 & 255,
        e[n++] = s & 255)
    }
    return e[n++] = r,
    e.set(t, n),
    n += s,
    n
}
function FL(t, e) {
    let n, r = e.length * 6, s = t.length - r;
    for (; n = e.pop(); ) {
        let i = n.offset
          , a = n.id;
        t.copyWithin(i + r, i, s),
        r -= 6;
        let o = i + r;
        t[o++] = 214,
        t[o++] = 105,
        t[o++] = a >> 24,
        t[o++] = a >> 16 & 255,
        t[o++] = a >> 8 & 255,
        t[o++] = a & 255,
        s = i
    }
    return t
}
function ey(t, e, n) {
    if (Hn.length > 0) {
        bn.setUint32(Hn.position + t, H + n - Hn.position - t),
        Hn.stringsPosition = H - t;
        let r = Hn;
        Hn = null,
        e(r[0]),
        e(r[1])
    }
}
function NL(t) {
    if (t.Class) {
        if (!t.pack && !t.write)
            throw new Error("Extension has no pack or write function");
        if (t.pack && !t.type)
            throw new Error("Extension has no type (numeric code to identify the extension)");
        Hf.unshift(t.Class),
        q2.unshift(t)
    }
    TL(t)
}
function VL(t, e) {
    return t.isCompatible = n=>{
        let r = !n || (e.lastNamedStructuresLength || 0) === n.length;
        return r || e._mergeStructures(n),
        r
    }
    ,
    t
}
let sx = new rx({
    useRecords: !1
});
sx.pack;
sx.pack;
const BL = 512
  , UL = 1024
  , HL = 2048;
var W2;
(function(t) {
    t[t.CollabMessage = 1] = "CollabMessage",
    t[t.CollabCommand = 2] = "CollabCommand"
}
)(W2 || (W2 = {}));
class ix {
    static registerBinaryExtension(e, n, r) {
        if (ty.has(n))
            throw new Error(`Type ${n} is already used to register a MessagePack extension`);
        ty.add(n),
        NL({
            Class: e,
            type: n,
            write: function(s) {
                return r.map(i=>s[i])
            },
            read: function(s) {
                return new e(...s)
            }
        })
    }
}
const ty = new Set;
var Rc;
(function(t) {
    t.web = "web",
    t.desktop = "desktop",
    t.mobile = "mobile"
}
)(Rc || (Rc = {}));
class zL {
    constructor(e, n) {
        this.id = e,
        this.update = n,
        this.cmd = "collab"
    }
}
ix.registerBinaryExtension(zL, W2.CollabCommand, ["id", "update"]);
var l1;
(function(t) {
    t[t.increment = 1] = "increment",
    t[t.decrement = 2] = "decrement",
    t[t.gauge = 3] = "gauge",
    t[t.histogram = 4] = "histogram",
    t[t.distribution = 5] = "distribution",
    t[t.set = 6] = "set"
}
)(l1 || (l1 = {}));
const ax = 1e3
  , ox = ax * 60
  , cx = ox * 60
  , lx = cx * 24
  , dx = lx * 7
  , ux = dx * 4.35
  , ZL = ux * 12
  , Ol = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
  , be = {
    SECOND: ax,
    MINUTE: ox,
    HOUR: cx,
    DAY: lx,
    WEEK: dx,
    MONTH: ux,
    YEAR: ZL
};
let s6, i6;
function Yc(t) {
    const e = t instanceof Date ? t : t.toLocalDate();
    return hg(e) !== hg(new Date) ? (s6 == null && (s6 = new Intl.DateTimeFormat("en-US",{
        day: "numeric",
        month: "short",
        year: "numeric"
    })),
    s6.format(e)) : (i6 == null && (i6 = new Intl.DateTimeFormat("en-US",{
        day: "numeric",
        month: "short"
    })),
    i6.format(e))
}
function a1(t, e, n) {
    const r = Ik(t, e)
      , s = {
        minute: ["m", "minute"],
        hour: ["h", "hour"],
        day: ["d", "day"],
        week: ["w", "week"],
        month: ["mo", "month"],
        year: ["y", "year"]
    }
      , i = (o,l)=>{
        const [d,u] = s[l];
        return n != null && n.fullNames ? `${o} ${dd(u, o)}` : `${o}${d}`
    }
      , a = (o,l)=>l ? n != null && n.fullNames ? `${o} and ${l}` : `${o} ${l}` : o;
    if (r < be.MINUTE)
        return i(1, "minute");
    if (r < be.HOUR) {
        const o = Math.round(r / be.MINUTE);
        return o === 60 ? i(1, "hour") : i(o, "minute")
    }
    if (r < be.HOUR * 8) {
        const o = Math.floor(r / be.HOUR)
          , l = Math.round((r - o * be.HOUR) / be.MINUTE);
        return l === 60 ? i(o + 1, "hour") : a(i(o, "hour"), l > 0 ? i(l, "minute") : void 0)
    }
    if (r < be.HOUR * 24) {
        const o = Math.round(r / be.HOUR);
        return i(o, "hour")
    }
    if (r < be.DAY * 5) {
        const o = Math.floor(r / be.DAY)
          , l = Math.round((r - o * be.DAY) / be.HOUR);
        return l === 24 ? i(o + 1, "day") : a(i(o, "day"), l > 0 ? i(l, "hour") : void 0)
    }
    if (r < be.MONTH) {
        const o = Math.round(r / be.DAY);
        return i(o, "day")
    }
    if (r < be.WEEK * 10) {
        const o = Math.floor(r / be.WEEK)
          , l = Math.round((r - o * be.WEEK) / be.DAY);
        return l === 7 ? i(o + 1, "week") : a(i(o, "week"), l > 0 ? i(l, "day") : void 0)
    }
    return r < be.YEAR ? i(Math.max(1, Math.floor(r / be.MONTH)), "month") : i(Math.floor(r / be.YEAR), "year")
}
function qL(t) {
    return /^(\d+)(s|m|h|d)$/.test(t)
}
function WL(t, e) {
    const n = /^(\d+)(s|m|h|d)$/.exec(t);
    if (!n) {
        if (e !== void 0)
            return e;
        throw new Error(`Could not parse TimeString format: ${t}`)
    }
    const [,r,s] = n;
    return (s === "s" ? be.SECOND : s === "m" ? be.MINUTE : s === "h" ? be.HOUR : be.DAY) * Number(r)
}
var xa;
(function(t) {
    t.sunday = "sunday",
    t.monday = "monday",
    t.tuesday = "tuesday",
    t.wednesday = "wednesday",
    t.thursday = "thursday",
    t.friday = "friday",
    t.saturday = "saturday"
}
)(xa || (xa = {}));
const GL = t=>{
    if (t < 0 || t > 6)
        throw new Error("Day of week must be represented by a number between 0 and 6.");
    return Object.keys(xa)[t]
}
  , hde = t=>{
    switch (t) {
    case "sunday":
        return "Sunday";
    case "monday":
        return "Monday";
    case "tuesday":
        return "Tuesday";
    case "wednesday":
        return "Wednesday";
    case "thursday":
        return "Thursday";
    case "friday":
        return "Friday";
    case "saturday":
        return "Saturday";
    default:
        throw new zt(t)
    }
}
;
function fde(t) {
    const e = Ol[t];
    switch (e) {
    case "Saturday":
    case "Sunday":
    case "Monday":
        return Ol.indexOf("Friday");
    case "Tuesday":
        return Ol.indexOf("Monday");
    case "Wednesday":
        return Ol.indexOf("Tuesday");
    case "Thursday":
        return Ol.indexOf("Wednesday");
    case "Friday":
        return Ol.indexOf("Thursday");
    default:
        throw new zt(e)
    }
}
const KL = (t,e)=>{
    switch (!0) {
    case (e == null ? void 0 : e.hideYear):
        return Mr(t, "MMM");
    case (e == null ? void 0 : e.shortYear):
        return Mr(t, "MMM ''yy");
    default:
        return Mr(t, "MMM yyyy")
    }
}
  , YL = (t,e)=>{
    const {fiscalYearStartMonth: n=0, hideYear: r} = e ?? {}
      , s = hl(t, n)
      , i = Mr(s, "QQQ");
    return r ? i : `${i} ${H3(t, e)}`
}
  , QL = (t,e)=>{
    const {fiscalYearStartMonth: n=0, hideYear: r} = e ?? {}
      , s = hl(t, n)
      , i = f2(s) < 6 ? "1" : "2";
    return r ? `H${i}` : `H${i} ${H3(t, e)}`
}
  , H3 = (t,e)=>{
    const {fiscalYearStartMonth: n=0, shortYear: r} = e ?? {};
    if (n === 0)
        return Mr(t, r ? "''yy" : "yyyy");
    const s = $n(t, 12 - n);
    return `FY${Mr(s, "yy")}`
}
  , XL = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
  , f8 = XL.map(t=>t.slice(0, 3))
  , hx = "just now"
  , JL = {
    second: ["s", "second"],
    minute: ["min", "minute"],
    hour: ["h", "hour"],
    day: ["d", "day"],
    week: ["w", "week"],
    month: ["mo", "month"],
    year: ["y", "year"]
};
function ny(t, e, n) {
    const r = Ik(t, e)
      , s = (i,a)=>{
        const [o,l] = JL[a];
        return n != null && n.short ? `${i}${o}` : `${i} ${dd(l, i)}`
    }
    ;
    if (r < be.MINUTE)
        return hx;
    if (r < be.HOUR) {
        const i = Math.round(r / be.MINUTE);
        return i === 60 ? s(1, "hour") : s(i, "minute")
    }
    if (r < be.DAY) {
        const i = Math.round(r / be.HOUR);
        return i === 24 ? s(1, "day") : s(i, "hour")
    }
    if (r < be.WEEK * 3) {
        const i = Math.round(r / be.DAY);
        return i === 7 ? s(1, "week") : i === 14 ? s(2, "week") : s(i, "day")
    }
    if (r < be.WEEK * 8) {
        const i = Math.round(r / be.DAY);
        if (i === 29 || i === 30 || i === 31 || i === 32)
            return s(1, "month");
        const a = r / be.WEEK
          , o = Math.floor(a)
          , l = a - o >= 66 / 100;
        return s(Math.max(1, o + (l ? 1 : 0)), "week")
    }
    if (r < be.DAY * 365) {
        const i = r / (be.DAY * 30)
          , a = Math.floor(i)
          , o = i - a >= 66 / 100;
        return s(Math.max(1, a + (o ? 1 : 0)), "month")
    }
    return s(Math.floor(r / (be.DAY * 365)), "year")
}
function fx(t, e) {
    const n = new Date
      , r = Do(t, n)
      , s = r ? ny(t, n, {
        short: e == null ? void 0 : e.short
    }) : ny(n, t, {
        short: e == null ? void 0 : e.short
    });
    return s === hx || e != null && e.withoutSuffix ? s : `${s} ${r ? "from now" : "ago"}`
}
class eO {
    constructor(e, n) {
        this.maxInvocations = e,
        this.timeWindow = n,
        this.count = 0
    }
    consume(e=1) {
        const n = Date.now()
          , r = n - this.timeWindow;
        if (this.startTs === void 0 || this.startTs < r)
            this.startTs = n,
            this.count = 0;
        else if (this.count >= this.maxInvocations)
            return !1;
        return this.count += e,
        !0
    }
}
const ry = 300
  , tO = new Set(["network.error"])
  , Gu = class Gu {
    static increment(e, n, r) {
        this.send({
            cmd: "mtr",
            type: l1.increment,
            stat: e,
            tags: n
        }, r)
    }
    static decrement(e, n) {
        this.send({
            cmd: "mtr",
            type: l1.decrement,
            stat: e
        }, n)
    }
    static gauge(e, n, r, s) {
        this.send({
            cmd: "mtr",
            type: l1.gauge,
            stat: e,
            value: n,
            tags: r
        }, s)
    }
    static histogram(e, n, r, s) {
        this.send({
            cmd: "mtr",
            type: l1.histogram,
            stat: e,
            value: n,
            tags: r
        }, s)
    }
    static distribution(e, n, r, s) {
        this.send({
            cmd: "mtr",
            type: l1.distribution,
            stat: e,
            value: n,
            tags: r
        }, s)
    }
    static set(e, n, r, s) {
        this.send({
            cmd: "mtr",
            type: l1.set,
            stat: e,
            value: n,
            tags: r
        }, s)
    }
    static reportSpans(e, n, r, s, i) {
        r.length !== 0 && this.send({
            cmd: "spn",
            rootSpanName: e,
            resource: n,
            spans: r.orderBy(["startTime", "endTime"], ["asc", "desc"]),
            tags: s
        }, i)
    }
    static setSocket(e) {
        if (this.socket = e,
        e) {
            for (const n of this.bufferedCommands)
                e.send(n);
            this.bufferedCommands = []
        }
    }
    static send(e, n) {
        var r;
        if (this.socket) {
            if (e.cmd === "mtr" && ((r = this.metricRateLimiter[e.stat]) == null ? void 0 : r.consume()) === !1)
                return;
            this.socket.send(e, n)
        } else if (e.cmd === "mtr" && !(n != null && n.onlySendWhenOnline)) {
            const s = e.stat;
            if (tO.has(s) && this.bufferedCommands.find(i=>i.cmd === "mtr" && i.stat === s))
                return
        }
        this.bufferedCommands.push(e),
        this.bufferedCommands.length > ry + this.bufferThreshold && (this.bufferedCommands = this.bufferedCommands.slice(2 * this.bufferThreshold))
    }
}
;
Gu.metricRateLimiter = {
    "network.error": new eO(10,30 * be.SECOND)
},
Gu.bufferedCommands = [],
Gu.bufferThreshold = Math.round(ry * .1);
let Jn = Gu;
function sy(t, e) {
    return t instanceof et && t.userPresentableMessage ? t.userPresentableMessage : e || "An unknown error occurred."
}
function z3(t, e) {
    var n, r, s;
    return t instanceof et ? t.type === "authentication error" || ((n = t.metaData) == null ? void 0 : n.code) === "AUTHENTICATION_ERROR" || ((r = t.metaData) == null ? void 0 : r.code) === Z2 || (e == null ? void 0 : e.logoutOnForbidden) === !0 && ((s = t.metaData) == null ? void 0 : s.code) === "FORBIDDEN" : !1
}
function p8(t) {
    return t instanceof et && t.type === "network error"
}
function P1(t) {
    return t instanceof et
}
function nO(t) {
    var e;
    return t instanceof et && ((e = t.metaData) == null ? void 0 : e.code) === "FORBIDDEN"
}
function hd(t) {
    var e;
    return t instanceof et && ((e = t.metaData) == null ? void 0 : e.code) === "RATELIMITED"
}
class et extends Error {
    constructor(e) {
        super(e.message),
        Object.setPrototypeOf(this, et.prototype),
        this.name = "ClientError",
        this.type = e.type,
        this.userError = e.userError,
        this.userPresentableMessage = e.userPresentableMessage,
        this.metaData = e.metaData,
        this.flags = e.flags,
        this.fieldErrors = e.fieldErrors,
        this.requestId = e.requestId || void 0,
        this.skipSentry = !!e.skipSentry
    }
}
function iy(t) {
    if (t instanceof et)
        return t;
    if (t.response) {
        const e = ya(t.response.headers);
        if (t.response.errors && t.response.errors.length) {
            const n = t.response.errors[0]
              , r = n.extensions;
            if (r) {
                let s = n.message;
                return (!s || !s.length) && (s = "An internal server error has occurred."),
                new et({
                    type: r.type,
                    message: s,
                    userError: r.userError,
                    userPresentableMessage: r.userPresentableMessage,
                    flags: r.flags,
                    metaData: {
                        ...r.meta,
                        code: r.code,
                        statusCode: t.response.status
                    },
                    fieldErrors: r.fieldErrors,
                    requestId: e,
                    skipSentry: r.code === Z2
                })
            } else
                return new et({
                    type: "unknown",
                    message: n.message,
                    userError: !1,
                    requestId: e
                })
        } else if (t.response.error && kL(t.response.extensions)) {
            const n = t.response.extensions
              , r = typeof t.response.error == "string" ? t.response.error : "An internal server error has occurred.";
            return new et({
                type: n.type,
                message: r,
                userError: n.userError,
                userPresentableMessage: n.userPresentableMessage ?? (n.type === "payload too large" ? "Payload too large" : void 0),
                flags: n.flags,
                metaData: {
                    ...n.meta,
                    code: n.code,
                    statusCode: t.response.status
                },
                fieldErrors: n.fieldErrors,
                requestId: e,
                skipSentry: n.code === Z2
            })
        }
    }
    return navigator.onLine && Jn.increment("network.error", {
        source: "graphql"
    }),
    new et({
        type: "network error",
        message: t.message,
        userError: !0,
        skipSentry: !navigator.onLine
    })
}
async function rO(t, e) {
    if (t.ok)
        throw new Error("Unexpected success response.");
    const n = ya(t.headers)
      , r = await t.text().catch(s=>(Jn.increment("network.error", {
        source: "rest_error_body"
    }, {
        onlySendWhenOnline: !0
    }),
    new et({
        type: "network error",
        message: `${e || "Network error: "}${s.message}`,
        userError: !0,
        requestId: n
    })));
    if (r instanceof et)
        return r;
    try {
        const s = JSON.parse(r)
          , i = s.error || "An unknown error occurred."
          , a = s.extensions;
        return a ? new et({
            type: a.type,
            message: `${e || ""}${i}`,
            userError: a.userError || !1,
            userPresentableMessage: a.userPresentableMessage,
            flags: a.flags,
            metaData: {
                ...a.meta,
                code: a.code,
                statusCode: t.status
            },
            fieldErrors: a.fieldErrors,
            requestId: n
        }) : new et({
            type: "unknown",
            message: i,
            userError: !1,
            requestId: n
        })
    } catch {
        return new et({
            type: "internal error",
            message: `${e || "Internal error: "}Invalid response format.`,
            userError: !1,
            requestId: n
        })
    }
}
function ya(t) {
    return t.get("x-request-id") || t.get("cf-ray") || void 0
}
function ay(t) {
    var e;
    if (t instanceof et && t.type === "downtime") {
        const n = (e = t.metaData) == null ? void 0 : e.downtimeMode;
        return n ? n !== "read-only" && n !== "shutdown" && n !== "offline" ? (F.error(`Downtime API error with unknown mode "${n}", defaults to read-only`),
        "read-only") : n : (F.error("Downtime API error without mode, defaults to read-only", t),
        "read-only")
    }
}
const px = kA()
  , pde = xA(DA);
var Mt = SA();
function a6(t) {
    try {
        return JSON.parse(t)
    } catch {
        return
    }
}
class ke {
    static set(e, n, r) {
        try {
            return this.setString(e, JSON.stringify(n), r)
        } catch (s) {
            return F.error("Could not serialize data for storage key", s, {
                key: e
            }),
            !1
        }
    }
    static setString(e, n, r=localStorage) {
        if (!r)
            return F.warning("Local storage not supported"),
            !1;
        try {
            return r.setItem(e, n),
            !0
        } catch {
            return !1
        }
    }
    static setSession(e, n) {
        try {
            return this.setString(e, JSON.stringify(n), sessionStorage),
            !0
        } catch (r) {
            return F.error("Could not serialize data for session storage key", r, {
                key: e
            }),
            !1
        }
    }
    static setPersistent(e, n, r) {
        try {
            return this.setString(`p_${n.id}_${e}`, JSON.stringify(r)),
            !0
        } catch (s) {
            return F.error("Could not serialize data for storage key", s, {
                key: e
            }),
            !1
        }
    }
    static get(e, n={
        logError: !0
    }) {
        try {
            const r = this.getString(e, n.storageMechanism);
            return r ? JSON.parse(r) : void 0
        } catch (r) {
            n.logError && F.error("Could not load local storage key", r, {
                key: e
            });
            return
        }
    }
    static getPersistent(e, n) {
        try {
            const r = this.getString(`p_${n.id}_${e}`);
            return r ? JSON.parse(r) : void 0
        } catch (r) {
            F.error("Could not load local storage key", r, {
                key: e
            });
            return
        }
    }
    static getSession(e) {
        try {
            const n = this.getString(e, sessionStorage);
            return n ? JSON.parse(n) : void 0
        } catch (n) {
            F.error("Could not load session storage key", n, {
                key: e
            });
            return
        }
    }
    static getString(e, n=localStorage) {
        if (!n) {
            F.warning("Local storage not supported");
            return
        }
        const r = n.getItem(e);
        return r || void 0
    }
    static remove(e, n=localStorage) {
        if (!n) {
            F.warning("Local storage not supported");
            return
        }
        n.removeItem(e)
    }
    static removeAllWithCondition(e, n=localStorage) {
        if (!n) {
            F.warning("Local storage not supported");
            return
        }
        for (const r of this.getKeys(n))
            e(r) && n.removeItem(r)
    }
    static removeSession(e) {
        this.remove(e, sessionStorage)
    }
    static removePersistent(e, n) {
        localStorage.removeItem(`p_${n.id}_${e}`)
    }
    static clear(e=localStorage) {
        if (!e) {
            F.warning("Local storage not supported");
            return
        }
        for (const n in e)
            n && !n.startsWith("p_") && e.removeItem(n)
    }
    static getKeys(e=localStorage) {
        const n = [];
        for (let r = 0, s = e.length; r < s; r++) {
            const i = e.key(r);
            i && n.push(i)
        }
        return n
    }
}
var qe;
(function(t) {
    t.slackStagingApp = "slack-staging-app",
    t.slackIntegrationOptOutOfAutojoiningChannel = "slack-integration-opt-out-of-autojoining-channel",
    t.samlAllowMemberRoleInvites = "saml-allow-member-role-invites",
    t.sparklesCommentSummaries = "sparkles-comment-summaries",
    t.hackweekGlobalPasteAndUpload = "hackweek-global-paste-and-upload",
    t.debugCommand = "debug-command",
    t.forceSlackUpdate = "force-slack-update",
    t.elasticIssueSearch = "elastic-issue-search",
    t.sessionRecording = "session-recording",
    t.gitHubSync = "github-sync",
    t.passkeys = "passkeys",
    t.editorEntityEmbed = "editor-entity-embed",
    t.preHydrate = "pre-hydrate",
    t.preloadPageData = "preload-page-data",
    t.createSlackChannelForProject = "create-slack-channel-for-project",
    t.previewVideosInSlack = "preview-videos-in-slack",
    t.teamIssuesNavInTabs = "team-issues-nav-in-tabs",
    t.vscodeExtension = "vscode-extension",
    t.splitSearch = "new-search",
    t.initiatives = "initiatives",
    t.quickEntryPopup = "quick-entry-popup",
    t.attachmentShowRepo = "attachment-show-repo",
    t.documentMinimap = "document-minimap",
    t.multipleSlackWorkspaces = "multiple-slack-workspaces",
    t.pinnedTabsFrozenUrl = "pinned-tabs-frozen-url",
    t.previewLinks = "preview-links",
    t.aiProjectUpdateSummary = "ai-project-update-summary",
    t.aiProjectDetailSuggestion = "ai-project-detail-suggestion",
    t.optimizeTooltipRendering = "optimize-tooltip-rendering",
    t.customViewRestructuring = "custom-view-restructuring",
    t.projectDependencies = "project-dependencies",
    t.themeManagementImprovements = "theme-management-improvements",
    t.reminders = "reminders",
    t.diary = "diary",
    t.giphy = "giphy",
    t.teamFlashcardsGame = "team-flashcards-game",
    t.customViewSlackNotifications = "custom-view-slack-notifications",
    t.linearToLinearMigration = "linear-to-linear-migration",
    t.persistedDrafts = "hackweek-persisted-text-drafts",
    t.showMembersOnProjectCardsRows = "show-members-on-project-cards-rows",
    t.workspaceIpRestrictions = "workspace-ip-restrictions",
    t.githubEnterpriseServer = "github-enterprise-server",
    t.noDesktopTabStateOnWeb = "no-desktop-tab-state-on-web",
    t.projectsPage = "projects-page",
    t.commentThreadSubscriptions = "comment-thread-subscrbe-unsubscribe",
    t.trashDocuments = "trash-documents",
    t.orderCompletedByRecency = "order-completed-by-recency",
    t.updatedTablesDesign = "updated-tables-design",
    t.documentMovedNotifications = "document-moved-notifications",
    t.initiativeFacets = "initiative-facets",
    t.newInboxBehavior = "new-inbox-behavior"
}
)(qe || (qe = {}));
(function(t) {
    function e(n, r=!1) {
        var s, i;
        return n === "projects-page" ? _r.getValue(n, ((s = t.specs[n]) == null ? void 0 : s.defaultValue) || !1, r).value || e("initiatives", r) : _r.getValue(n, ((i = t.specs[n]) == null ? void 0 : i.defaultValue) || !1, r).value
    }
    t.isEnabled = e,
    t.all = Object.values(t).filter(n=>typeof n == "string"),
    t.specs = {
        "slack-integration-opt-out-of-autojoining-channel": {
            title: "Slack Integration: opt out of autojoining channel",
            description: "When true, does not request the channels:join Slack scope during the OAuth flow"
        },
        "elastic-issue-search": {
            title: "Elastic Issue Search",
            description: "Uses Elastic Search endpoint for all issue actions"
        },
        "slack-staging-app": {
            title: "Linear Stating Slack app",
            description: "Allow the workspace to install the Linear Staging Slack app"
        },
        "session-recording": {
            title: "Session recording",
            description: "Internal control for throttling session recording"
        },
        "github-sync": {
            title: "Enables GitHub sync settings",
            description: "Syncs issues between GitHub and Linear"
        },
        passkeys: {
            title: "Passkeys",
            description: "Enables passkeys as a login method",
            defaultValue: !1
        },
        "editor-entity-embed": {
            title: "Editor entity embed",
            description: "Let you embed entities (Issue, Project, Document) into the editor"
        },
        "saml-allow-member-role-invites": {
            title: "SAML allow member role invites",
            description: "When enabled, users in SAML-enabled workspaces might invite other users as members"
        },
        "pre-hydrate": {
            title: "Pre-hydrate issues",
            description: "Whether to pre-hydrate the issues of the team at startup"
        },
        "debug-command": {
            title: "Debug command",
            description: "Enables some debug command to facilitate debugging customers issues"
        },
        "create-slack-channel-for-project": {
            title: "Create Slack channel for project",
            description: "Automatically create a Slack channel for a project"
        },
        "preload-page-data": {
            title: "Preload page data for issues",
            description: "Preloads the data for issue pages to be able to render them faster."
        },
        "force-slack-update": {
            title: "Force Slack update",
            description: "Displays an option to update Slack integration no matter what"
        },
        "sparkles-comment-summaries": {
            title: "Sparkles: comment summaries",
            description: "AI actions for summarizing comments"
        },
        "preview-videos-in-slack": {
            title: "Preview videos in Slack",
            description: "Enables previewing unfurling videos in Slack"
        },
        "team-issues-nav-in-tabs": {
            title: "Team issues navigation in tabs",
            description: "Removes team issues nav from sidebar, moves it to tabs in the view"
        },
        "vscode-extension": {
            title: "VSCode extension",
            description: "Features that work with the VSCode extension"
        },
        "new-search": {
            title: "Split search",
            description: "A new search experience using a split view"
        },
        initiatives: {
            title: "Initiatives",
            description: "Enables initiatives feature"
        },
        "quick-entry-popup": {
            title: "Quick Entry popup",
            description: "Popup available on Control + Space global shortcut, requires app restart"
        },
        "attachment-show-repo": {
            title: "Show repository in attachment",
            description: "Show repository name in GitHub/GitLab attachments"
        },
        "document-minimap": {
            title: "Document Minimap",
            description: "Enabled a minimap for navigating the headers on large documents"
        },
        "multiple-slack-workspaces": {
            title: "Multiple Slack workspaces",
            description: "Allow connecting to multiple Slack workspaces"
        },
        "pinned-tabs-frozen-url": {
            title: "Pinned tabs frozen URL",
            description: "Pinned tabs will have a frozen URL and all links will open in new tabs."
        },
        "preview-links": {
            title: "Preview links",
            description: "Support preview links in GitHub/GitLab attachments"
        },
        "ai-project-update-summary": {
            title: "AI Project Update Summary",
            description: "Use AI to summarize project updates"
        },
        "ai-project-detail-suggestion": {
            title: "AI suggest project details",
            description: "Suggest icon/color when composing a project"
        },
        "optimize-tooltip-rendering": {
            title: "Optimize Tooltip Rendering",
            description: "Be smarter about when we render the full tooltip component"
        },
        "custom-view-restructuring": {
            title: "Custom view restructuring",
            description: "Combine view types and other view improvements"
        },
        "hackweek-global-paste-and-upload": {
            title: "[Hackweek] Global Paste and Upload (hackweek)",
            description: "Allow pasting and uploading files globally"
        },
        "project-dependencies": {
            title: "Project Dependencies",
            description: "Enables project dependencies feature"
        },
        "theme-management-improvements": {
            title: "[Hackweek] Theme management improvements",
            description: "Improvements to theme management: multiple custom themes, theme sharing, and more"
        },
        reminders: {
            title: "Reminders improvements",
            description: "Improvements to Reminders functionality"
        },
        diary: {
            title: "[Hackweek] Diary",
            description: "A personal space for your daily plans and thoughts."
        },
        giphy: {
            title: "Giphy",
            description: "Allow users to search and insert gifs into the editor"
        },
        "team-flashcards-game": {
            title: "Team flashcards game",
            description: "Team flashcards game in the arcade"
        },
        "custom-view-slack-notifications": {
            title: "Slack notifications for custom views",
            description: "Enables Slack notifications for custom views"
        },
        "linear-to-linear-migration": {
            title: "Linear to Linear migration",
            description: "Allow users to self-serve Linear to Linear migrations"
        },
        "hackweek-persisted-text-drafts": {
            title: "[Hackweek] Persisted text drafts",
            description: "Persist text drafts on server",
            defaultValue: !1
        },
        "show-members-on-project-cards-rows": {
            title: "Show members on project cards/rows",
            description: "Show members on project cards/rows",
            defaultValue: !1
        },
        "workspace-ip-restrictions": {
            title: "Workspace IP restrictions",
            description: "Allow admins to restrict workspace to specific IP address ranges (Enterprise feature)",
            defaultValue: !1
        },
        "github-enterprise-server": {
            title: "GitHub Enterprise Server",
            description: "Enable GitHub Enterprise Server integration",
            defaultValue: !1
        },
        "no-desktop-tab-state-on-web": {
            title: "No desktop tab state on web",
            description: "Disable desktop tab state on web to make sure it doesn't break anything. We should remove this flag and make it default behavior by July 2024.",
            defaultValue: !1
        },
        "projects-page": {
            title: "Projects page",
            description: "New projects page"
        },
        "comment-thread-subscrbe-unsubscribe": {
            title: "Comment thread subscriptions",
            description: "Allow users to subscribe and unsubscribe from notifications for specific comment threads",
            defaultValue: !1
        },
        "trash-documents": {
            title: "Trash documents",
            description: "Put documents in the trash before they go to the shredder",
            defaultValue: !1
        },
        "order-completed-by-recency": {
            title: "Order completed by recency",
            description: "Alternative sorting of completed/cancelled groups for issue views grouped by status",
            defaultValue: !1
        },
        "updated-tables-design": {
            title: "Updated tables design",
            description: "Updated tables design",
            defaultValue: !1
        },
        "document-moved-notifications": {
            title: "Document moved notifications",
            description: "Notify users when a document is moved, deleted or restored",
            defaultValue: !1
        },
        "initiative-facets": {
            title: "Initiative facets",
            description: "Enable initiatives facets",
            defaultValue: !1
        },
        "new-inbox-behavior": {
            title: "New inbox behavior",
            description: "More granular grouping, change of order and delayed marking as read",
            defaultValue: !1
        }
    }
}
)(qe || (qe = {}));
var mn;
(function(t) {
    t.bootstrapRateLimitedRetryCount = "bootstrap-ratelimited-retry-count",
    t.bootstrapRatelimitedInSyncDeltaRetryCount = "bootstrap-ratelimited-in-sync-delta-retry-count",
    t.clientDatabaseMinVersion = "client-database-min-version",
    t.trialLength = "plus-trial-length",
    t.timeBeforeFullBootstrap = "time-before-full-bootstrap",
    t.perTeamIssueQuota = "per-team-issue-quota",
    t.analyticsSampleRate = "analytics-sample-rate",
    t.similarIssuesCreationMinSimilarity = "similar-issues-creation-min-similarity",
    t.similarIssuesTriageMinSimilarity = "similar-issues-triage-min-similarity",
    t.similarIssuesMarkDuplicateMinSimilarity = "similar-issues-mark-duplicate-min-similarity",
    t.tracingCategories = "tracing-categories",
    t.sentryTracingRate = "sentry-tracing-rate",
    t.newPartialModels = "new-partial-models"
}
)(mn || (mn = {}));
(function(t) {
    function e(n, r, s=!1) {
        return _r.getValue(n, r, s).value
    }
    t.getValue = e,
    t.all = Object.values(t).filter(n=>typeof n == "string")
}
)(mn || (mn = {}));
var _r;
(function(t) {
    const e = "FeatureFlags"
      , n = "FeatureFlagsOverrides"
      , r = "FeatureFlagsReleaseChannelOverride"
      , s = "FeatureFlagsCurrentUser"
      , i = ut.box("");
    let a, o, l;
    const d = new Set
      , u = new Map
      , h = [];
    let f;
    const p = new Set
      , m = new Set;
    function g(_, M, Z=!1) {
        const U = typeof _ == "string" ? _ : qe[_] || mn[_]
          , ce = A.get()[U]
          , De = i.get();
        if (ce === void 0)
            return De && d.has(De) && !p.has(U) && (setTimeout(()=>{
                F.warning("Non existing flag", {
                    userId: De,
                    flag: U,
                    originalFlag: _
                })
            }
            , 0),
            p.add(U)),
            {
                value: M
            };
        if (typeof ce != typeof M)
            return m.has(U) || (setTimeout(()=>{
                F.warning("Invalid flag value type", {
                    userId: De,
                    flag: U,
                    value: ce,
                    defaultValue: M
                })
            }
            , 0),
            m.add(U)),
            {
                value: M
            };
        let Ce = E()[U];
        typeof Ce != typeof ce && (Ce = void 0);
        const Ie = Ce ?? ce;
        return Z || V(U, ce),
        {
            value: Ie,
            originalValue: Ie !== ce ? ce : void 0
        }
    }
    t.getValue = g;
    function C(_) {
        return _.graphQLClient.query(Mt.gql`
          query FlagsMetadata {
            flagsMetadata {
              flag
              name
              description
              maintainer
              isEnabled
              releaseChannel
              status
            }
          }
        `, void 0, {
            dontLog: !0
        }).then(M=>M.flagsMetadata.reduce((Z,U)=>(Z[U.flag] = U,
        Z), {})).catch(()=>({}))
    }
    t.fetchMetadata = C;
    function b() {
        return Object.entries(A.get()).reduce((_,[M,Z])=>(_[M] = g(M, Z, !0),
        _), {})
    }
    t.getAllValues = b;
    function k(_) {
        return `https://app.launchdarkly.com/default/production/features/${typeof _ == "string" ? _ : qe[_] || mn[_]}`
    }
    t.getFlagUrl = k;
    function S(_) {
        const M = i.get();
        if (M)
            if (_) {
                const Z = {
                    ...E()
                };
                for (const U of _)
                    delete Z[U];
                Q(M, Z)
            } else
                Q(M)
    }
    t.clearOverrides = S;
    function D(_, M) {
        const Z = i.get();
        if (!Z)
            return;
        const U = typeof _ == "string" ? _ : qe[_];
        if (M == null) {
            const ce = {
                ...E()
            };
            delete ce[_],
            Q(Z, ce)
        } else {
            const ce = {
                ...E(),
                [U]: M
            };
            Q(Z, ce)
        }
    }
    t.setOverride = D;
    function R(_) {
        if (_ = _ ?? i.get(),
        !!_)
            return l.get(_) ?? void 0
    }
    t.getReleaseChannelOverride = R;
    function T(_, M) {
        P(_, M)
    }
    t.setReleaseOverrideChannel = T;
    function B(_) {
        i.set(_),
        L(s, _)
    }
    t.setUser = B;
    function z(_) {
        const M = a.get(_)
          , Z = qe.all.filter(ce=>(M == null ? void 0 : M[ce]) === void 0)
          , U = mn.all.filter(ce=>(M == null ? void 0 : M[ce]) === void 0);
        return M && Z.length === 0 && U.length === 0 ? !1 : {
            missingFeatures: Z,
            missingConfigs: U
        }
    }
    t.getMissingFlags = z;
    function W(_) {
        d.add(_)
    }
    t.ensureLoaded = W;
    function fe(_, M) {
        I(_, M)
    }
    t.setFlags = fe;
    function me(_) {
        f = _;
        for (const M of h)
            _(M)
    }
    t.registerReportEvaluationFnc = me;
    function _e(_) {
        f === _ && (f = void 0)
    }
    t.unregisterReportEvaluationFnc = _e;
    const I = Le((_,M)=>{
        const Z = a.get(_);
        Z && F2(Z, M) || (a.set(_, M),
        L(e, JSON.stringify(a.toJSON())))
    }
    )
      , Q = Le((_,M)=>{
        const Z = o.get(_);
        F2(Z ?? {}, M ?? {}) || (o.set(_, M ?? {}),
        L(n, JSON.stringify(o.toJSON())))
    }
    )
      , P = Le((_,M)=>{
        (l.get(_) ?? null) !== (M ?? null) && (l.set(_, M ?? null),
        L(r, JSON.stringify(l.toJSON())))
    }
    )
      , A = ms(()=>{
        const _ = i.get();
        return _ ? {
            ...Object.fromEntries(qe.all.map(M=>[M, !1])),
            ...a.get(_)
        } : {}
    }
    );
    function E() {
        const _ = i.get();
        return _ ? o.get(_) ?? {} : {}
    }
    function V(_, M) {
        const ce = `${i.get()}-${_}-${typeof M == "boolean" || typeof M == "number" || typeof M == "string" ? M : "object"}`;
        Date.now() - (u.get(ce) || 0) < be.HOUR || (u.set(ce, Date.now()),
        setTimeout(()=>{
            const Ce = {
                cmd: "flagEvaluated",
                flag: _,
                value: M
            };
            f ? f(Ce) : h.push(Ce)
        }
        , 1))
    }
    function X(_) {
        if (!(typeof localStorage > "u"))
            try {
                return localStorage.getItem(_)
            } catch (M) {
                setTimeout(()=>{
                    F.warning("Error getting flags state from local storage.", M)
                }
                , 0);
                return
            }
    }
    function L(_, M) {
        if (!(typeof localStorage > "u"))
            try {
                localStorage.setItem(_, M)
            } catch (Z) {
                setTimeout(()=>{
                    F.warning("Error saving flags state to local storage.", Z)
                }
                , 0)
            }
    }
    function q() {
        try {
            i.set(X(s) || ""),
            a = ut.map(a6(X(e) || "{}") || {}),
            o = ut.map(a6(X(n) || "{}") || {}),
            l = ut.map(a6(X(r) || "{}") || {})
        } catch (_) {
            setTimeout(()=>{
                F.error("Error loading flags from local storage. Resetting.", _)
            }
            , 0),
            a = ut.map({}),
            L(e, JSON.stringify(a.toJSON())),
            o = ut.map({}),
            l = ut.map({}),
            L(n, JSON.stringify(o.toJSON()))
        }
    }
    function oe(_) {
        ke.remove(_, localStorage)
    }
    function we(_) {
        oe(e),
        _ || oe(n),
        oe(r),
        oe(s)
    }
    t.clearAll = we,
    q()
}
)(_r || (_r = {}));
let B5;
const sO = new Uint8Array(16);
function iO() {
    if (!B5 && (B5 = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto),
    !B5))
        throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    return B5(sO)
}
const Or = [];
for (let t = 0; t < 256; ++t)
    Or.push((t + 256).toString(16).slice(1));
function aO(t, e=0) {
    return Or[t[e + 0]] + Or[t[e + 1]] + Or[t[e + 2]] + Or[t[e + 3]] + "-" + Or[t[e + 4]] + Or[t[e + 5]] + "-" + Or[t[e + 6]] + Or[t[e + 7]] + "-" + Or[t[e + 8]] + Or[t[e + 9]] + "-" + Or[t[e + 10]] + Or[t[e + 11]] + Or[t[e + 12]] + Or[t[e + 13]] + Or[t[e + 14]] + Or[t[e + 15]]
}
const oO = typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto)
  , oy = {
    randomUUID: oO
};
function Qc(t, e, n) {
    if (oy.randomUUID && !e && !t)
        return oy.randomUUID();
    t = t || {};
    const r = t.random || (t.rng || iO)();
    if (r[6] = r[6] & 15 | 64,
    r[8] = r[8] & 63 | 128,
    e) {
        n = n || 0;
        for (let s = 0; s < 16; ++s)
            e[n + s] = r[s];
        return e
    }
    return aO(r)
}
function Na(t, e) {
    const n = new Promise(r=>{
        setTimeout(()=>{
            e == null || e(),
            r()
        }
        , t)
    }
    );
    return e === void 0 ? n : void 0
}
function cO(t=1, e) {
    const n = new Promise(r=>{
        const s = ()=>{
            t--,
            t <= 0 ? (e == null || e(),
            r()) : setTimeout(s, 0)
        }
        ;
        setTimeout(s, 0)
    }
    );
    return e === void 0 ? n : void 0
}
async function mde(t, e) {
    return new Promise(n=>{
        cO(1, ()=>{
            setTimeout(()=>{
                e == null || e(),
                n()
            }
            , t)
        }
        )
    }
    )
}
const lO = 10 * be.SECOND
  , dO = 2 * be.MINUTE
  , cy = 5 * be.MINUTE
  , uO = 50;
class hO {
    constructor(e) {
        this.started = !1,
        this.handleUpdateSession = ()=>{
            this.addBreadcrumb("Crash monitor is updating")
        }
        ,
        this.handleCheckForCrashes = ()=>{
            const n = Date.now()
              , r = ke.getKeys();
            for (const s of r)
                if (s !== this.sessionKey && s.indexOf("crashMonitor_") === 0) {
                    const i = ke.get(s);
                    i && (i.lastUpdate ? n > i.lastUpdate + cy && this.delayedCrashReport(s) : ke.remove(s))
                }
        }
        ,
        this.crashDetectedCallback = e,
        this.sessionKey = "crashMonitor_" + Qc(),
        this.startTime = Date.now(),
        this.sessionData = {
            lastUpdate: Date.now(),
            breadCrumbs: [],
            version: 2
        },
        window.addEventListener("beforeunload", n=>{
            n.defaultPrevented || this.stopCrashDetection()
        }
        ),
        self.document.addEventListener("freeze", ()=>{
            this.stopCrashDetection()
        }
        ),
        self.document.addEventListener("resume", ()=>{
            this.started && !self.document.hidden && this.startCrashDetection()
        }
        ),
        self.document.addEventListener("visibilitychange", ()=>{
            this.started && !self.document.hidden ? this.startCrashDetection() : this.stopCrashDetection()
        }
        )
    }
    startCrashDetection() {
        this.checkInterval || (this.started = !0,
        this.checkInterval = window.setInterval(this.handleCheckForCrashes, dO),
        this.updateInterval = window.setInterval(this.handleUpdateSession, lO),
        this.handleUpdateSession(),
        this.handleCheckForCrashes())
    }
    addBreadcrumb(e) {
        this.checkInterval && (this.sessionData.breadCrumbs.push(Mr(new Date, "hh:mm:ss") + " " + e),
        this.sessionData.breadCrumbs.length > uO && this.sessionData.breadCrumbs.shift(),
        this.sessionData.lastUpdate = Date.now(),
        ke.set(this.sessionKey, this.sessionData))
    }
    stopCrashDetection() {
        ke.remove(this.sessionKey),
        window.clearInterval(this.checkInterval),
        window.clearInterval(this.updateInterval),
        this.checkInterval = void 0,
        this.updateInterval = void 0
    }
    async delayedCrashReport(e) {
        await Na(12 * be.SECOND + 4 * Math.random() * be.SECOND);
        const n = ke.get(e);
        if (n)
            try {
                Date.now() > n.lastUpdate + cy && (ke.remove(e),
                this.crashDetectedCallback(n))
            } catch {
                ke.remove(e)
            }
    }
}
const fO = 200
  , pO = 5
  , mO = ft.IS_PRODUCTION_ENV;
let ly = !1
  , Ac = !1;
if (ft.SENTRY_DSN)
    try {
        const t = window.localStorage.getItem("profilingEnabled");
        Ac = t === "true" || t === null && !mO
    } catch {
        Ac = !1
    }
var m8;
(function(t) {
    t[t.none = 0] = "none",
    t[t.regular = 1] = "regular",
    t[t.verbose = 2] = "verbose"
}
)(m8 || (m8 = {}));
ft.SENTRY_DSN && _A({
    dsn: ft.SENTRY_DSN,
    release: V3.versionString(ft.BUILD_REVISION),
    environment: "production",
    ignoreErrors: [/.*ResizeObserver loop.*/, "TypeError: Failed to fetch", "TypeError: NetworkError when attempting to fetch resource.", "ReferenceError: Can't find variable: _chromeNamespace"],
    attachStacktrace: !0,
    tracesSampler: t=>{
        var n;
        if (t.parentSampled !== void 0)
            return t.parentSampled;
        const e = t.transactionContext.name.substring(t.transactionContext.name.indexOf("/", 1));
        try {
            const r = (n = mn.getValue(mn.sentryTracingRate, {}).tracingRates) == null ? void 0 : n.find(s=>s.nameRegex === void 0 ? !0 : new RegExp(s.nameRegex,"i").test(e));
            if (typeof (r == null ? void 0 : r.rate) == "number" && r.rate <= 1 && r.rate >= 0)
                return r.rate
        } catch {}
        return .001
    }
    ,
    profilesSampleRate: mn.getValue(mn.sentryTracingRate, {}).profilingEnabled === !0 ? 1 : 0,
    normalizeDepth: 6,
    transport: IA(OA),
    allowUrls: ["linear.app"],
    integrations: [new EA({
        routingInstrumentation: AA(px)
    }), Ac ? new jA : void 0].concrete(),
    beforeSend: (t,e)=>{
        var i, a, o, l, d, u, h;
        if ((i = t.request) == null || delete i.cookies,
        t.tags = t.tags || {},
        t.tags["browser.online"] = navigator.onLine,
        t.tags["document.visibilityState"] = self.document.visibilityState,
        (a = t.request) != null && a.url && (t.request.url = wL(t.request.url)),
        P1(e == null ? void 0 : e.originalException)) {
            if (e.originalException.skipSentry)
                return null;
            if ((o = t.fingerprint) == null || o.unshift(`Client error (${e.originalException.type})`),
            e.originalException.userError && (t.level = "info"),
            e.originalException.type === "network error" || e.originalException.type === Nf) {
                if (ly)
                    return null;
                ly = !0
            }
        }
        const n = t.message || ((l = t.extra) == null ? void 0 : l.description) + "";
        if (n) {
            const f = (mu.get(n) || 0) + 1;
            if (mu.set(n, f),
            f > pO)
                return null
        }
        if ((mu.get("*") ?? 0) > fO)
            return null;
        mu.set("*", (mu.get("*") ?? 0) + 1);
        const r = (u = (d = t.exception) == null ? void 0 : d.values) == null ? void 0 : u[0]
          , s = (h = t.extra) == null ? void 0 : h.description;
        return r && s && (r.value = `${r.type}: ${r.value}`,
        r.type = typeof s == "string" ? s : void 0),
        t
    }
});
function gO(t) {
    return t.firstName !== void 0
}
const Rr = class Rr {
    static setUser(e) {
        var n;
        if (e && e.organization) {
            const r = {
                id: e.id,
                name: e.name,
                email: e.email,
                isAdmin: gO(e) ? e.isAdmin : void 0,
                organizationId: e.organization.id,
                organizationName: e.organization.name,
                linearClientId: this.clientId
            };
            fg(r),
            MA("organization", e.organization.name)
        } else
            fg(null);
        (n = this.crashMonitor) == null || n.startCrashDetection()
    }
    static info(e, n) {
        this.leaveBreadcrumb("info", e, n),
        Rr.loggingLevel !== 0 && (n ? console.log(e, n) : console.log(e))
    }
    static remote(e, n) {
        var s;
        Rr.debug("[REM] " + e, n);
        const r = {
            cmd: "log",
            message: e,
            metaData: n
        };
        (s = Rr.socket) == null || s.send(r)
    }
    static debug(e, n) {
        this.leaveBreadcrumb("debug", e, n),
        Rr.loggingLevel !== 0 && (n ? console.debug(e, n) : console.debug(e))
    }
    static network(e, n) {
        this.leaveBreadcrumb("info", e, n),
        Rr.loggingLevel !== 0 && (n ? console.debug(`[NET] ${e}`, n) : console.debug(`[NET] ${e}`))
    }
    static verbose(e) {
        if (Rr.loggingLevel === 2) {
            const n = e();
            typeof n == "string" ? console.debug(`[VER] ${n}`) : console.debug(`[VER] ${n.message}`, n.metaData)
        }
    }
    static error(e, n, r) {
        let s = e;
        n && (s += `
${n}`),
        r && (s += `
${JSON.stringify(r, void 0, 2)}`,
        !r.description && n && (r.description = e)),
        P1(n) && n.requestId && (r = r || {},
        r.requestId = n.requestId),
        n ? TA(n, i=>(i.setFingerprint([e, n.message]),
        i.setExtra("description", e),
        r && i.setContext("metaData", r),
        P1(n) && (n.userError || n.type === "network error" || n.type === Nf) ? i.setLevel("info") : i.setLevel("error"),
        i)) : pg(e, i=>(r && i.setContext("metaData", r),
        i.setLevel("error"),
        i)),
        console.error(s)
    }
    static warning(e, n) {
        this.leaveBreadcrumb("warning", e, n),
        pg(e, r=>(r.setContext("error", {
            description: e
        }),
        r.setLevel("info"),
        n && r.setContext("metaData", n),
        r)),
        Rr.loggingLevel !== 0 && (n ? console.warn(e, n) : console.warn(e))
    }
    static withEnabledLogging(e) {
        const n = Rr.loggingLevel;
        Rr.loggingLevel = 2,
        e(),
        Rr.loggingLevel = n
    }
    static get clientId() {
        if (!this._clientId) {
            try {
                this._clientId = window.localStorage.getItem("clientId") || ""
            } catch {}
            if (!this._clientId) {
                this._clientId = Math.random().toString(36).substring(2, 15);
                try {
                    window.localStorage.setItem("clientId", this._clientId)
                } catch {}
            }
        }
        return this._clientId
    }
    static get profilingEnabled() {
        return Ac
    }
    static toggleProfiling() {
        Ac = !Ac;
        try {
            window.localStorage.setItem("profilingEnabled", Ac + "")
        } catch {}
    }
    static initialize(e) {
        this.socket = e
    }
    static leaveBreadcrumb(e, n, r) {
        var i;
        let s;
        if (r)
            try {
                s = this.redactData(Fa(r))
            } catch {
                s = {
                    redactionError: !0
                }
            }
        try {
            LA({
                level: e,
                message: n,
                ...s && {
                    data: s
                }
            }),
            (i = this.crashMonitor) == null || i.addBreadcrumb(n)
        } catch {}
    }
    static redactData(e) {
        if (Array.isArray(e)) {
            if (e.length > 20) {
                const n = e.length;
                e.splice(10, n - 20),
                e.push(`...${n - 20} entries removed`)
            }
            for (const n of e)
                this.redactData(n)
        } else if (typeof e == "object") {
            if (e !== null)
                for (const n of Object.keys(e))
                    e[n] = this.redactedKeys.has(n) ? "*" : this.redactData(e[n])
        } else if (typeof e == "string" && e.length > 1024)
            return e.substring(0, 1024) + "…";
        return e
    }
    static reportCrash(e) {
        e.version && Rr.error("Crash monitor detected crash", void 0, {
            breadcrumbs: e.breadCrumbs
        })
    }
}
;
Rr.loggingLevel = 0,
Rr.crashMonitor = ft.ENABLE_CRASH_REPORTING ? new hO(Rr.reportCrash) : void 0,
Rr.redactedKeys = new Set(["description", "descriptionData", "contentData", "contentState", "body", "bodyData", "name", "displayName", "title", "email", "state", "delta"]);
let F = Rr;
const mu = new Map
  , yO = 5
  , o6 = 9e3
  , b3 = class b3 {
    static protectedLoadable(e, n) {
        let r;
        function s(o=0) {
            if (o === 0 && r)
                return r;
            const l = e().then(d=>({
                default: n.resolveComponent(d)
            })).catch(d=>{
                if (o < yO)
                    return s(o + 1);
                throw d
            }
            );
            return o === 0 && (r = l),
            l
        }
        const i = y.lazy(s)
          , a = y.forwardRef(function(l, d) {
            const u = y.useRef(i)
              , h = y.useRef(null)
              , f = Kc([d, h]);
            return y.useEffect(()=>{
                if (n.fadeIn) {
                    if (n.fadeIn && !h.current) {
                        F.warning("[ComponentLoader] If you want to fade in the lazy-loaded component, it must be wrapped in forwardRef and assign that ref to the container you want to fade.");
                        return
                    }
                    h.current.classList.add("suspenseFadeIn")
                }
            }
            , []),
            y.createElement(u.current, n.fadeIn ? {
                ...l,
                ref: f
            } : d ? {
                ...l,
                ref: d
            } : l)
        });
        if (n.loadAtStartupForPath) {
            const o = Array.isArray(n.loadAtStartupForPath) ? n.loadAtStartupForPath : [{
                path: n.loadAtStartupForPath
            }];
            for (const l of o)
                this.componentsToLoadBasedOnURL[l.path] || (this.componentsToLoadBasedOnURL[l.path] = []),
                this.componentsToLoadBasedOnURL[l.path].push({
                    preload: s,
                    exact: l.exact
                })
        }
        if (n.preloadOrder !== "skip") {
            let o = n.preloadOrder === "last" ? o6 : n.preloadOrder;
            o = o > o6 ? o6 : o,
            this.componentsToLoadAtStartup[o] || (this.componentsToLoadAtStartup[o] = []),
            this.componentsToLoadAtStartup[o].push({
                preload: s
            })
        }
        return a.preload = s,
        a
    }
    static preloadComponentsForPath(e) {
        const n = [];
        for (const r in this.componentsToLoadBasedOnURL) {
            const s = O1(e, {
                path: r
            });
            if (s)
                for (const i of this.componentsToLoadBasedOnURL[r])
                    (!i.exact || s.isExact) && n.push(i)
        }
        for (const r of n)
            r.preload()
    }
    static async preloadLazyReactComponentAtStartup() {
        const e = Object.keys(this.componentsToLoadAtStartup).sort();
        for (const n of e)
            for (const r of this.componentsToLoadAtStartup[n])
                try {
                    await r.preload()
                } catch {}
    }
}
;
b3.componentsToLoadBasedOnURL = {},
b3.componentsToLoadAtStartup = {};
let g8 = b3;
var mx = {
    exports: {}
}
  , gx = {
    exports: {}
};
(function() {
    var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
      , e = {
        rotl: function(n, r) {
            return n << r | n >>> 32 - r
        },
        rotr: function(n, r) {
            return n << 32 - r | n >>> r
        },
        endian: function(n) {
            if (n.constructor == Number)
                return e.rotl(n, 8) & 16711935 | e.rotl(n, 24) & 4278255360;
            for (var r = 0; r < n.length; r++)
                n[r] = e.endian(n[r]);
            return n
        },
        randomBytes: function(n) {
            for (var r = []; n > 0; n--)
                r.push(Math.floor(Math.random() * 256));
            return r
        },
        bytesToWords: function(n) {
            for (var r = [], s = 0, i = 0; s < n.length; s++,
            i += 8)
                r[i >>> 5] |= n[s] << 24 - i % 32;
            return r
        },
        wordsToBytes: function(n) {
            for (var r = [], s = 0; s < n.length * 32; s += 8)
                r.push(n[s >>> 5] >>> 24 - s % 32 & 255);
            return r
        },
        bytesToHex: function(n) {
            for (var r = [], s = 0; s < n.length; s++)
                r.push((n[s] >>> 4).toString(16)),
                r.push((n[s] & 15).toString(16));
            return r.join("")
        },
        hexToBytes: function(n) {
            for (var r = [], s = 0; s < n.length; s += 2)
                r.push(parseInt(n.substr(s, 2), 16));
            return r
        },
        bytesToBase64: function(n) {
            for (var r = [], s = 0; s < n.length; s += 3)
                for (var i = n[s] << 16 | n[s + 1] << 8 | n[s + 2], a = 0; a < 4; a++)
                    s * 8 + a * 6 <= n.length * 8 ? r.push(t.charAt(i >>> 6 * (3 - a) & 63)) : r.push("=");
            return r.join("")
        },
        base64ToBytes: function(n) {
            n = n.replace(/[^A-Z0-9+\/]/ig, "");
            for (var r = [], s = 0, i = 0; s < n.length; i = ++s % 4)
                i != 0 && r.push((t.indexOf(n.charAt(s - 1)) & Math.pow(2, -2 * i + 8) - 1) << i * 2 | t.indexOf(n.charAt(s)) >>> 6 - i * 2);
            return r
        }
    };
    gx.exports = e
}
)();
var CO = gx.exports
  , y8 = {
    utf8: {
        stringToBytes: function(t) {
            return y8.bin.stringToBytes(unescape(encodeURIComponent(t)))
        },
        bytesToString: function(t) {
            return decodeURIComponent(escape(y8.bin.bytesToString(t)))
        }
    },
    bin: {
        stringToBytes: function(t) {
            for (var e = [], n = 0; n < t.length; n++)
                e.push(t.charCodeAt(n) & 255);
            return e
        },
        bytesToString: function(t) {
            for (var e = [], n = 0; n < t.length; n++)
                e.push(String.fromCharCode(t[n]));
            return e.join("")
        }
    }
}
  , dy = y8;
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
var bO = function(t) {
    return t != null && (yx(t) || vO(t) || !!t._isBuffer)
};
function yx(t) {
    return !!t.constructor && typeof t.constructor.isBuffer == "function" && t.constructor.isBuffer(t)
}
function vO(t) {
    return typeof t.readFloatLE == "function" && typeof t.slice == "function" && yx(t.slice(0, 0))
}
(function() {
    var t = CO
      , e = dy.utf8
      , n = bO
      , r = dy.bin
      , s = function(i, a) {
        i.constructor == String ? a && a.encoding === "binary" ? i = r.stringToBytes(i) : i = e.stringToBytes(i) : n(i) ? i = Array.prototype.slice.call(i, 0) : Array.isArray(i) || (i = i.toString());
        for (var o = t.bytesToWords(i), l = i.length * 8, d = 1732584193, u = -271733879, h = -1732584194, f = 271733878, p = 0; p < o.length; p++)
            o[p] = (o[p] << 8 | o[p] >>> 24) & 16711935 | (o[p] << 24 | o[p] >>> 8) & 4278255360;
        o[l >>> 5] |= 128 << l % 32,
        o[(l + 64 >>> 9 << 4) + 14] = l;
        for (var m = s._ff, g = s._gg, C = s._hh, b = s._ii, p = 0; p < o.length; p += 16) {
            var k = d
              , S = u
              , D = h
              , R = f;
            d = m(d, u, h, f, o[p + 0], 7, -680876936),
            f = m(f, d, u, h, o[p + 1], 12, -389564586),
            h = m(h, f, d, u, o[p + 2], 17, 606105819),
            u = m(u, h, f, d, o[p + 3], 22, -1044525330),
            d = m(d, u, h, f, o[p + 4], 7, -176418897),
            f = m(f, d, u, h, o[p + 5], 12, 1200080426),
            h = m(h, f, d, u, o[p + 6], 17, -1473231341),
            u = m(u, h, f, d, o[p + 7], 22, -45705983),
            d = m(d, u, h, f, o[p + 8], 7, 1770035416),
            f = m(f, d, u, h, o[p + 9], 12, -1958414417),
            h = m(h, f, d, u, o[p + 10], 17, -42063),
            u = m(u, h, f, d, o[p + 11], 22, -1990404162),
            d = m(d, u, h, f, o[p + 12], 7, 1804603682),
            f = m(f, d, u, h, o[p + 13], 12, -40341101),
            h = m(h, f, d, u, o[p + 14], 17, -1502002290),
            u = m(u, h, f, d, o[p + 15], 22, 1236535329),
            d = g(d, u, h, f, o[p + 1], 5, -165796510),
            f = g(f, d, u, h, o[p + 6], 9, -1069501632),
            h = g(h, f, d, u, o[p + 11], 14, 643717713),
            u = g(u, h, f, d, o[p + 0], 20, -373897302),
            d = g(d, u, h, f, o[p + 5], 5, -701558691),
            f = g(f, d, u, h, o[p + 10], 9, 38016083),
            h = g(h, f, d, u, o[p + 15], 14, -660478335),
            u = g(u, h, f, d, o[p + 4], 20, -405537848),
            d = g(d, u, h, f, o[p + 9], 5, 568446438),
            f = g(f, d, u, h, o[p + 14], 9, -1019803690),
            h = g(h, f, d, u, o[p + 3], 14, -187363961),
            u = g(u, h, f, d, o[p + 8], 20, 1163531501),
            d = g(d, u, h, f, o[p + 13], 5, -1444681467),
            f = g(f, d, u, h, o[p + 2], 9, -51403784),
            h = g(h, f, d, u, o[p + 7], 14, 1735328473),
            u = g(u, h, f, d, o[p + 12], 20, -1926607734),
            d = C(d, u, h, f, o[p + 5], 4, -378558),
            f = C(f, d, u, h, o[p + 8], 11, -2022574463),
            h = C(h, f, d, u, o[p + 11], 16, 1839030562),
            u = C(u, h, f, d, o[p + 14], 23, -35309556),
            d = C(d, u, h, f, o[p + 1], 4, -1530992060),
            f = C(f, d, u, h, o[p + 4], 11, 1272893353),
            h = C(h, f, d, u, o[p + 7], 16, -155497632),
            u = C(u, h, f, d, o[p + 10], 23, -1094730640),
            d = C(d, u, h, f, o[p + 13], 4, 681279174),
            f = C(f, d, u, h, o[p + 0], 11, -358537222),
            h = C(h, f, d, u, o[p + 3], 16, -722521979),
            u = C(u, h, f, d, o[p + 6], 23, 76029189),
            d = C(d, u, h, f, o[p + 9], 4, -640364487),
            f = C(f, d, u, h, o[p + 12], 11, -421815835),
            h = C(h, f, d, u, o[p + 15], 16, 530742520),
            u = C(u, h, f, d, o[p + 2], 23, -995338651),
            d = b(d, u, h, f, o[p + 0], 6, -198630844),
            f = b(f, d, u, h, o[p + 7], 10, 1126891415),
            h = b(h, f, d, u, o[p + 14], 15, -1416354905),
            u = b(u, h, f, d, o[p + 5], 21, -57434055),
            d = b(d, u, h, f, o[p + 12], 6, 1700485571),
            f = b(f, d, u, h, o[p + 3], 10, -1894986606),
            h = b(h, f, d, u, o[p + 10], 15, -1051523),
            u = b(u, h, f, d, o[p + 1], 21, -2054922799),
            d = b(d, u, h, f, o[p + 8], 6, 1873313359),
            f = b(f, d, u, h, o[p + 15], 10, -30611744),
            h = b(h, f, d, u, o[p + 6], 15, -1560198380),
            u = b(u, h, f, d, o[p + 13], 21, 1309151649),
            d = b(d, u, h, f, o[p + 4], 6, -145523070),
            f = b(f, d, u, h, o[p + 11], 10, -1120210379),
            h = b(h, f, d, u, o[p + 2], 15, 718787259),
            u = b(u, h, f, d, o[p + 9], 21, -343485551),
            d = d + k >>> 0,
            u = u + S >>> 0,
            h = h + D >>> 0,
            f = f + R >>> 0
        }
        return t.endian([d, u, h, f])
    };
    s._ff = function(i, a, o, l, d, u, h) {
        var f = i + (a & o | ~a & l) + (d >>> 0) + h;
        return (f << u | f >>> 32 - u) + a
    }
    ,
    s._gg = function(i, a, o, l, d, u, h) {
        var f = i + (a & l | o & ~l) + (d >>> 0) + h;
        return (f << u | f >>> 32 - u) + a
    }
    ,
    s._hh = function(i, a, o, l, d, u, h) {
        var f = i + (a ^ o ^ l) + (d >>> 0) + h;
        return (f << u | f >>> 32 - u) + a
    }
    ,
    s._ii = function(i, a, o, l, d, u, h) {
        var f = i + (o ^ (a | ~l)) + (d >>> 0) + h;
        return (f << u | f >>> 32 - u) + a
    }
    ,
    s._blocksize = 16,
    s._digestsize = 16,
    mx.exports = function(i, a) {
        if (i == null)
            throw new Error("Illegal argument " + i);
        var o = t.wordsToBytes(s(i, a));
        return a && a.asBytes ? o : a && a.asString ? r.bytesToString(o) : t.bytesToHex(o)
    }
}
)();
var wO = mx.exports;
const $1 = Cn(wO) // this is a hash function
  , Cx = "3.7.5"
  , kO = Cx
  , xO = typeof atob == "function"
  , DO = typeof btoa == "function"
  , Yd = typeof Buffer == "function"
  , uy = typeof TextDecoder == "function" ? new TextDecoder : void 0
  , hy = typeof TextEncoder == "function" ? new TextEncoder : void 0
  , SO = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  , Su = Array.prototype.slice.call(SO)
  , U5 = (t=>{
    let e = {};
    return t.forEach((n,r)=>e[n] = r),
    e
}
)(Su)
  , _O = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/
  , Pr = String.fromCharCode.bind(String)
  , fy = typeof Uint8Array.from == "function" ? Uint8Array.from.bind(Uint8Array) : t=>new Uint8Array(Array.prototype.slice.call(t, 0))
  , bx = t=>t.replace(/=/g, "").replace(/[+\/]/g, e=>e == "+" ? "-" : "_")
  , vx = t=>t.replace(/[^A-Za-z0-9\+\/]/g, "")
  , wx = t=>{
    let e, n, r, s, i = "";
    const a = t.length % 3;
    for (let o = 0; o < t.length; ) {
        if ((n = t.charCodeAt(o++)) > 255 || (r = t.charCodeAt(o++)) > 255 || (s = t.charCodeAt(o++)) > 255)
            throw new TypeError("invalid character found");
        e = n << 16 | r << 8 | s,
        i += Su[e >> 18 & 63] + Su[e >> 12 & 63] + Su[e >> 6 & 63] + Su[e & 63]
    }
    return a ? i.slice(0, a - 3) + "===".substring(a) : i
}
  , zf = DO ? t=>btoa(t) : Yd ? t=>Buffer.from(t, "binary").toString("base64") : wx
  , C8 = Yd ? t=>Buffer.from(t).toString("base64") : t=>{
    let n = [];
    for (let r = 0, s = t.length; r < s; r += 4096)
        n.push(Pr.apply(null, t.subarray(r, r + 4096)));
    return zf(n.join(""))
}
  , g2 = (t,e=!1)=>e ? bx(C8(t)) : C8(t)
  , IO = t=>{
    if (t.length < 2) {
        var e = t.charCodeAt(0);
        return e < 128 ? t : e < 2048 ? Pr(192 | e >>> 6) + Pr(128 | e & 63) : Pr(224 | e >>> 12 & 15) + Pr(128 | e >>> 6 & 63) + Pr(128 | e & 63)
    } else {
        var e = 65536 + (t.charCodeAt(0) - 55296) * 1024 + (t.charCodeAt(1) - 56320);
        return Pr(240 | e >>> 18 & 7) + Pr(128 | e >>> 12 & 63) + Pr(128 | e >>> 6 & 63) + Pr(128 | e & 63)
    }
}
  , EO = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g
  , kx = t=>t.replace(EO, IO)
  , py = Yd ? t=>Buffer.from(t, "utf8").toString("base64") : hy ? t=>C8(hy.encode(t)) : t=>zf(kx(t))
  , fd = (t,e=!1)=>e ? bx(py(t)) : py(t)
  , my = t=>fd(t, !0)
  , AO = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g
  , jO = t=>{
    switch (t.length) {
    case 4:
        var e = (7 & t.charCodeAt(0)) << 18 | (63 & t.charCodeAt(1)) << 12 | (63 & t.charCodeAt(2)) << 6 | 63 & t.charCodeAt(3)
          , n = e - 65536;
        return Pr((n >>> 10) + 55296) + Pr((n & 1023) + 56320);
    case 3:
        return Pr((15 & t.charCodeAt(0)) << 12 | (63 & t.charCodeAt(1)) << 6 | 63 & t.charCodeAt(2));
    default:
        return Pr((31 & t.charCodeAt(0)) << 6 | 63 & t.charCodeAt(1))
    }
}
  , xx = t=>t.replace(AO, jO)
  , Dx = t=>{
    if (t = t.replace(/\s+/g, ""),
    !_O.test(t))
        throw new TypeError("malformed base64.");
    t += "==".slice(2 - (t.length & 3));
    let e, n = "", r, s;
    for (let i = 0; i < t.length; )
        e = U5[t.charAt(i++)] << 18 | U5[t.charAt(i++)] << 12 | (r = U5[t.charAt(i++)]) << 6 | (s = U5[t.charAt(i++)]),
        n += r === 64 ? Pr(e >> 16 & 255) : s === 64 ? Pr(e >> 16 & 255, e >> 8 & 255) : Pr(e >> 16 & 255, e >> 8 & 255, e & 255);
    return n
}
  , Zf = xO ? t=>atob(vx(t)) : Yd ? t=>Buffer.from(t, "base64").toString("binary") : Dx
  , Sx = Yd ? t=>fy(Buffer.from(t, "base64")) : t=>fy(Zf(t).split("").map(e=>e.charCodeAt(0)))
  , _x = t=>Sx(Ix(t))
  , MO = Yd ? t=>Buffer.from(t, "base64").toString("utf8") : uy ? t=>uy.decode(Sx(t)) : t=>xx(Zf(t))
  , Ix = t=>vx(t.replace(/[-_]/g, e=>e == "-" ? "+" : "/"))
  , b8 = t=>MO(Ix(t))
  , TO = t=>{
    if (typeof t != "string")
        return !1;
    const e = t.replace(/\s+/g, "").replace(/={0,2}$/, "");
    return !/[^\s0-9a-zA-Z\+/]/.test(e) || !/[^\s0-9a-zA-Z\-_]/.test(e)
}
  , Ex = t=>({
    value: t,
    enumerable: !1,
    writable: !0,
    configurable: !0
})
  , Ax = function() {
    const t = (e,n)=>Object.defineProperty(String.prototype, e, Ex(n));
    t("fromBase64", function() {
        return b8(this)
    }),
    t("toBase64", function(e) {
        return fd(this, e)
    }),
    t("toBase64URI", function() {
        return fd(this, !0)
    }),
    t("toBase64URL", function() {
        return fd(this, !0)
    }),
    t("toUint8Array", function() {
        return _x(this)
    })
}
  , jx = function() {
    const t = (e,n)=>Object.defineProperty(Uint8Array.prototype, e, Ex(n));
    t("toBase64", function(e) {
        return g2(this, e)
    }),
    t("toBase64URI", function() {
        return g2(this, !0)
    }),
    t("toBase64URL", function() {
        return g2(this, !0)
    })
}
  , LO = ()=>{
    Ax(),
    jx()
}
  , gy = {
    version: Cx,
    VERSION: kO,
    atob: Zf,
    atobPolyfill: Dx,
    btoa: zf,
    btoaPolyfill: wx,
    fromBase64: b8,
    toBase64: fd,
    encode: fd,
    encodeURI: my,
    encodeURL: my,
    utob: kx,
    btou: xx,
    decode: b8,
    isValid: TO,
    fromUint8Array: g2,
    toUint8Array: _x,
    extendString: Ax,
    extendUint8Array: jx,
    extendBuiltins: LO
}
  , bt = {
    serialize: t=>t.toISOString(),
    deserialize: t=>new Date(t)
}
  , Jo = {
    serialize: t=>t.substring(0, 10),
    deserialize: t=>t.substring(0, 10)
}
  , hn = {
    serialize: t=>JSON.stringify(t),
    deserialize: t=>typeof t == "string" ? JSON.parse(t) : t
}
  , Aa = {
    serialize: t=>gy.fromUint8Array(t),
    deserialize: t=>gy.toUint8Array(t)
}
  , Yi = {
    serialize: t=>JSON.stringify(t).replace(/"([^"]+)":/g, "$1:"),
    deserialize: t=>{
        if (typeof t == "string") {
            const e = t.replace(/([{,])(\s*)([A-Za-z0-9_\-]+?)\s*:/g, '$1"$3":');
            return JSON.parse(e)
        }
        return t
    }
    ,
    dontQuote: !0
};
function OO(t) {
    return {
        serialize: e=>JSON.stringify(e, (n,r)=>{
            if (t[n]) {
                const {nullable: s, serializer: i} = t[n];
                if (r == null) {
                    if (s === !0)
                        return r;
                    throw new Error(`Value for key ${n} is null or undefined`)
                }
                return i === bt && typeof r == "string" ? r : i.serialize(r)
            }
            return r
        }
        ),
        deserialize: e=>{
            typeof e == "string" ? e = JSON.parse(e) : e = {
                ...e
            };
            for (const [n,r] of Object.entries(t)) {
                const {nullable: s, serializer: i} = r
                  , a = e[n];
                if (a == null) {
                    if (s === !0)
                        continue;
                    throw new Error(`Value for key ${n} is null or undefined`)
                }
                e[n] = i.deserialize(a)
            }
            return e
        }
    }
}

// #region ModelRegistry

const rr = class rr {
    static get schemaHash() {
        return rr._schemaHash
    }
    static getModelNames(e) {
        return e ? Object.keys(this.modelLookup).filter(n=>this.modelLookup[n].loadStrategy === e) : Object.keys(this.modelLookup)
    }
    static getModelNamesByMaxLoadStrategy(e) {
        return Object.keys(this.modelLookup).filter(n=>this.modelLookup[n].loadStrategy <= e)
    }
    static getModelClasses(e) {
        return e ? Object.values(this.modelLookup).filter(n=>n.loadStrategy === e) : Object.values(this.modelLookup)
    }
    static getModelClass(e) {
        return this.modelLookup[e]
    }
    static getClassName(e) {
        return e.prototype.modelName
    }
    static registerModel(e, n, r) { // e for model name, n for the constructor, r for the hash.
        this.modelLookup[e] = n, // Map model's name to the constructor.
        n.prototype.modelName = e, // Hey, this line has been set before! Do we find a duplication here?

        // When the properties are registered, they may are bound to the constructor's name. The name may get minified in production
        // code, we we need to move the property metadata.
        n.name !== e && (this.modelPropertyLookup[e] = this.modelPropertyLookup[n.name], 
        delete this.modelPropertyLookup[n.name],
        this.modelActionLookup[e] = this.modelActionLookup[n.name],
        delete this.modelActionLookup[n.name],
        this.modelComputedLookup[e] = this.modelComputedLookup[n.name],
        delete this.modelComputedLookup[n.name],
        this.modelDataPropertyLookup[e] = this.modelDataPropertyLookup[n.name],
        delete this.modelDataPropertyLookup[n.name],
        this.modelReferencedPropertyLookup[e] = this.modelReferencedPropertyLookup[n.name],
        delete this.modelReferencedPropertyLookup[n.name],
        this.modelLazyCollectionKeys[e] = this.modelLazyCollectionKeys[n.name],
        delete this.modelLazyCollectionKeys[n.name],
        this.modelLazyReferenceKeys[e] = this.modelLazyReferenceKeys[n.name],
        delete this.modelLazyReferenceKeys[n.name],
        this.modelCascadeHydrationKeys[e] = this.modelCascadeHydrationKeys[n.name],
        delete this.modelCascadeHydrationKeys[n.name]),
        
        this.modelPropertyHashLookup[e] = r, // Map model's name to the hash.
        rr._schemaHash = $1(rr._schemaHash + r) // The model's hash is added to the schema hash.
    }
    static registerProperty(e, n, r) {
        // e for model name
        // n for property name
        // r for configuration
        const s = this.modelPropertyLookup[e];
        if (s ? s[n] = r : (this.modelPropertyLookup[e] = {
            // the following properties exist in every model
            id: {
                persistance: 1
            },
            createdAt: {
                serializer: bt,
                persistance: 0
            },
            updatedAt: {
                serializer: bt,
                persistance: 0
            },
            archivedAt: {
                serializer: bt,
                persistance: 0
            }
        },
        this.modelPropertyLookup[e][n] = r), // bind to the dictionary

        // reference or referenceArray are registered 
        r.referencedProperty || r.type === 2 || r.type === 6) {
            const i = this.modelReferencedPropertyLookup[e];
            i ? i[n] = r : (this.modelReferencedPropertyLookup[e] = {},
            this.modelReferencedPropertyLookup[e][n] = r)
            // For reference properties, the configuration registered here
            // would be used to get reference values.
        }

        if (r.lazy) // If a reference is lazy, it would be loaded when it is accessed.
            if (r.type === 4) { // reference collection
                const i = this.modelLazyCollectionKeys[e];
                i ? i.push(n) : this.modelLazyCollectionKeys[e] = [n]
            } else {
                const i = this.modelLazyReferenceKeys[e];
                i ? i.push(n) : this.modelLazyReferenceKeys[e] = [n]
            }
        if (r.cascadeHydration) { // If should cascade hydration.
            const i = this.modelCascadeHydrationKeys[e];
            i ? i.push(n) : this.modelCascadeHydrationKeys[e] = [n]
        }
    }
    static registerAction(e, n) {
        const r = this.modelActionLookup[e];
        r ? r.push(n) : this.modelActionLookup[e] = [n]
    }
    static registerComputed(e, n) {
        const r = this.modelComputedLookup[e];
        r ? r.push(n) : this.modelComputedLookup[e] = [n]
    }
    static propertiesOfModel(e) {
        return this.modelPropertyLookup[e] || {}
    }
    static dataPropertiesOfModel(e) {
        if (!this.modelDataPropertyLookup[e]) {
            this.modelDataPropertyLookup[e] = {};
            for (const n in this.modelPropertyLookup[e]) {
                const r = this.modelPropertyLookup[e][n];
    // t[t.property = 0] = "property", // for a self-owned property, e.g. issue.title
    // t[t.ephemeralProperty = 1] = "ephemeralProperty",
    // t[t.reference = 2] = "reference", // for reference target's id, e.g. issue.documentContentId
    // t[t.referencedModel = 3] = "referencedModel", //  for reference target, e.g. issue.documentContent
    // t[t.referenceCollection = 4] = "referenceCollection",
    // t[t.backReference = 5] = "backReference", // for back reference, e.g. documentContent.issue
    // t[t.referenceArray = 6] = "referenceArray"
                // filtered all non-reference properties
                (r.type === void 0 || r.type === 0 || r.type === 1 || r.type === 2 || r.type === 6) && (this.modelDataPropertyLookup[e][n] = r)
            }
        }
        return this.modelDataPropertyLookup[e]
    }
    static referencedPropertiesOfModel(e) {
        return this.modelReferencedPropertyLookup[e] || {}
    }
    static lazyCollectionKeysOfModel(e) {
        return this.modelLazyCollectionKeys[e] || []
    }
    static lazyReferenceKeysOfModel(e) {
        return this.modelLazyReferenceKeys[e] || []
    }
    static cascadeHydrationKeysOfModel(e) {
        return this.modelCascadeHydrationKeys[e] || []
    }
    static propertyHashOfModel(e) {
        return this.modelPropertyHashLookup[e] || ""
    }
    static observableAnnotationsOfModel(e) {
        if (this.observableAnnotationsLookup[e] === void 0) {
            const n = {};
            for (const r of this.modelActionLookup[e] || [])
                n[r] = Le;
            for (const r of this.modelComputedLookup[e] || [])
                n[r] = ms;
            this.observableAnnotationsLookup[e] = n
        }
        return this.observableAnnotationsLookup[e]
    }
    static dependenciesOfModel(e) { // name of the dependent on model
        var n;
        // model dependencies are gathered the first time this function get called.
        if (!this.modelDependencyLookup[e]) {
            const r = this.getModelClass(e);
            if (!r)
                return [];
            const s = [];
            // loop all models
            for (const i of this.getModelNames())
                for (const [a,o] of Object.entries(this.propertiesOfModel(i)))
                    // loop all reference and referenceArray properties
                    if ((o.type === 2 || o.type === 6) && ((n = o.referencedClassResolver) == null ? void 0 : n.call(o)) === r && (o.onDelete !== "NO ACTION" || o.onArchive !== "NO ACTION")) {
                        const l = this.getModelClass(i);
                        if (!l)
                            break;
                        const d = o.onDelete ?? (o.referenceNullable || o.type === 6 ? "SET NULL" : "CASCADE")
                          , u = {
                            model: l,
                            property: a,
                            backReference: o.referencedProperty,
                            deleteType: d,
                            archiveType: o.onArchive ?? d,
                            isOptional: o.referenceOptional ?? !1
                        };
                        (u.deleteType !== "NO ACTION" || u.archiveType !== "NO ACTION") && s.push(u)
                        // e.g. documentContent depends on issue
                    }
            this.modelDependencyLookup[e] = s
        }
        return this.modelDependencyLookup[e]
    }
    static dependencyOrder() {
        if (!this.dependencyOrderCache) {
            const e = rr.getModelClasses()
              , n = new Map
              , r = (l,d)=>rr.dependenciesOfModel(l.modelName).map(h=>{
                if (d.includes(h.model.modelName))
                    return;
                const f = {
                    modelName: h.model.modelName,
                    path: d,
                    children: r(h.model, [...d, h.model.modelName])
                };
                return n.set(f.modelName, f),
                f
            }
            ).concrete()
              , s = e.filter(l=>!e.some(d=>d !== l && rr.dependenciesOfModel(d.modelName).some(u=>u.model === l)));
            for (const l of s) {
                const d = {
                    modelName: l.modelName,
                    path: [],
                    children: []
                };
                n.set(d.modelName, d),
                d.children = r(l, [d.modelName])
            }
            const i = {
                roots: [...n.values()].filter(l=>l.path.length === 0)
            }
              , a = [];
            let o = i.roots;
            for (; o.length; ) {
                for (const l of o)
                    a.includes(l.modelName) || a.push(l.modelName);
                o = o.flatMap(l=>l.children).sortBy(l=>`${(999 - l.children.length).toString().padStart(3, "0")}-${l.modelName}`)
            }
            this.dependencyOrderCache = Object.freeze(a)
        }
        return this.dependencyOrderCache
    }
}
;
rr._schemaHash = "",
rr.modelLookup = {},
rr.modelPropertyLookup = {},
rr.modelActionLookup = {},
rr.modelComputedLookup = {},
rr.modelDataPropertyLookup = {},
// store referenced model ids
rr.modelReferencedPropertyLookup = {},
rr.modelLazyReferenceKeys = {},
rr.modelLazyCollectionKeys = {},
rr.modelCascadeHydrationKeys = {},
rr.modelPropertyHashLookup = {},
rr.modelDependencyLookup = {},
rr.observableAnnotationsLookup = {};
let Me = rr;
var ee;
(function(t) {
    t[t.none = 0] = "none",
    t[t.createOnly = 1] = "createOnly",
    t[t.updateOnly = 2] = "updateOnly",
    t[t.createAndUpdate = 3] = "createAndUpdate"
}
)(ee || (ee = {}));
var vn; // different types of properties
(function(t) {
    t[t.property = 0] = "property", // for a self-owned property, e.g. issue.title
    t[t.ephemeralProperty = 1] = "ephemeralProperty",
    t[t.reference = 2] = "reference", // for reference target's id, e.g. issue.documentContentId
    t[t.referencedModel = 3] = "referencedModel", //  for reference target, e.g. issue.documentContent
    t[t.referenceCollection = 4] = "referenceCollection",
    t[t.backReference = 5] = "backReference", // for back reference, e.g. documentContent.issue
    t[t.referenceArray = 6] = "referenceArray" // like reference, but in an array
}
)(vn || (vn = {}));
var dn; // load strategies
(function(t) { 
    t[t.instant = 1] = "instant",
    t[t.lazy = 2] = "lazy",
    t[t.partial = 3] = "partial",
    t[t.explicitlyRequested = 4] = "explicitlyRequested",
    t[t.local = 5] = "local"
}
)(dn || (dn = {}));
var ki; // `partialLoadMode` bootstrap strategies
(function(t) {
    t[t.full = 1] = "full",
    t[t.regular = 2] = "regular",
    t[t.lowPriority = 3] = "lowPriority"
}
)(ki || (ki = {}));

// #endregion

class Jt extends Promise {
    constructor(e) {
        if (typeof e == "function") {
            let n, r;
            super((s,i)=>{
                n = s,
                r = i
            }
            ),
            e(s=>{
                this.__result__ = {
                    resolved: s,
                    success: !0
                },
                n(s)
            }
            , s=>{
                this.__result__ = {
                    rejected: s,
                    success: !1
                },
                r(s)
            }
            )
        } else
            super(n=>{
                n(e)
            }
            ),
            this.__result__ = {
                resolved: e,
                success: !0
            }
    }
    get value() {
        var e;
        return (e = this.__result__) == null ? void 0 : e.resolved
    }
    get error() {
        var e;
        return (e = this.__result__) == null ? void 0 : e.rejected
    }
    get isPending() {
        return this.__result__ === void 0
    }
    static create(e) {
        return typeof e == "function" ? new Jt(e) : new Jt(e)
    }
    static allResolved(e) {
        let n = !0;
        for (const r of e) {
            if (r.error)
                return r;
            r.isPending && (n = !1)
        }
        return n ? Id : new Jt((r,s)=>{
            Promise.all(e).then(()=>{
                r()
            }
            ).catch(i=>{
                s(i)
            }
            )
        }
        )
    }
    get __cached__() {
        return !0
    }
}
const Id = Jt.resolve();
class RO {
    constructor(e, n, r) {
        this.map = new Map;
        for (const s of e.elements) {
            const i = s[n]
              , a = this.map.get(i);
            a ? a.collection.add(s) : this.map.set(i, {
                group: s[n],
                collection: te.of([s])
            })
        }
        this.groups = Array.from(this.map.values()),
        r && (this.groups = r.orderElements(this.groups))
    }
    getCollectionOfGroup(e) {
        var n;
        return (n = this.map.get(e)) == null ? void 0 : n.collection
    }
}
class E1 { // base class of ReferenceCollection
    get first() {
        return this.length > 0 ? this.elements[0] : void 0
    }
    get last() {
        return this.length > 0 ? this.elements[this.elements.length - 1] : void 0
    }
    get hydratedElements() {
        const e = []
          , n = [];
        for (const r of this.elements)
            r.isHydrated() ? e.push(r) : n.push(r.hydrate());
        return n.length && Jt.allResolved(n).then(this.afterHydrate).catch(()=>{}
        ),
        e
    }
    get hydratedLength() {
        return this.hydratedElements.length
    }
    get length() {
        return this.elements.length
    }
    indexOf(e) {
        return this.elements.indexOf(e)
    }
    indexOfId(e) {
        const n = this.elements;
        for (let r = 0, s = n.length; r < s; ++r)
            if (n[r].id === e)
                return r;
        return -1
    }
    contains(e) {
        return this.elements.indexOf(e) !== -1
    }
    findById(e) {
        for (const n of this.elements)
            if (n.id === e)
                return n
    }
    slice(e, n) {
        return this.elements.slice(e, n)
    }
    map(e) {
        return this.elements.map(e)
    }
    flatMap(e) {
        return this.elements.flatMap(e)
    }
    reduce(e, n) {
        return this.elements.reduce(e, n)
    }
    forEach(e) {
        const n = this.elements.concat();
        for (let r = 0, s = n.length; r < s; ++r)
            e(n[r], r, n)
    }
    find(e) {
        return this.elements.find(e)
    }
    findLast(e) {
        for (let n = this.elements.length - 1; n >= 0; n--)
            if (e(this.elements[n], n, this.elements))
                return this.elements[n]
    }
    some(e) {
        return this.elements.some(e)
    }
    every(e) {
        return this.elements.every(e)
    }
    findIndex(e) {
        return this.elements.findIndex(e)
    }
    filter(e) {
        return e === void 0 ? this : new yy(this,e)
    }
    filterNot(e) {
        return e === void 0 ? this : new yy(this,e,{
            inverseFilter: !0
        })
    }
    split(e) {
        const n = []
          , r = []
          , s = this.elements;
        for (let i = 0, a = s.length; i < a; ++i) {
            const o = s[i];
            e(o, i, s) ? n.push(o) : r.push(o)
        }
        return [n, r]
    }
    orderBy(e, n="asc") {
        return e instanceof de ? new vy(this,e) : new vy(this,new de(e,n))
    }
    groupBy(e, n) {
        return new RO(this,e,n)
    }
    [Symbol.iterator]() {
        let e = 0;
        const n = this.elements;
        return {
            next: ()=>({
                value: n[e++],
                done: e > n.length
            })
        }
    }
    hydrateElements() {
        const e = this.elements.map(n=>n.id).join(",");
        return this.hydrationElementsPromise && this.hydrationElementsPromiseHash !== e && (this.hydrationElementsPromiseHash = void 0,
        this.hydrationElementsPromise = void 0),
        this.hydrationElementsPromise ? this.hydrationElementsPromise : (this.hydrationElementsPromiseHash = e,
        this.hydrationElementsPromise = new Jt((n,r)=>{
            if (this.elements.length === 0)
                return n();
            const s = [];
            for (const i of this.elements)
                i.isHydrated() || s.push(i.hydrate()); // Call hypdate() for each element that is not hydrated.
            s.length ? Jt.allResolved(s).then(n).catch(i=>{
                this.invalidateRejectedWhenRequested(),
                r(i)
            }
            ) : n()
        }
        ),
        this.hydrationElementsPromise)
    }
    afterHydrate() {}
    invalidateRejectedWhenRequested() {
        this._invalidateRejectedWhenRequestedSubscribed || (at.store.onInvalidateRejectedHydrations.subscribeOnce(()=>this.invalidateRejectedHydrationPromises()),
        this._invalidateRejectedWhenRequestedSubscribed = !0)
    }
    invalidateRejectedHydrationPromises() {
        var e;
        (e = this.hydrationElementsPromise) != null && e.error && (this.hydrationElementsPromiseHash = void 0,
        this.hydrationElementsPromise = void 0),
        this._invalidateRejectedWhenRequestedSubscribed = !1
    }
}
/** Signal */
class Tt { // a in-house rxjs?
    get hasAutoFired() {
        return this.hasAutoFireData
    }
    constructor(e) {
        this.observers = [],
        this.maxObservers = (e == null ? void 0 : e.maxObservers) ?? 40
    }
    subscribe(e) {
        this.observers.push({
            callback: e,
            once: !1
        }),
        this.maxObservers !== 0 && this.observers.length > this.maxObservers && F.warning("Signal is oversubscribed", {
            subscriberCount: this.observers.length
        }),
        this.hasAutoFireData && e(this.autoFireData)
    }
    subscribeOnce(e) {
        this.hasAutoFireData ? e(this.autoFireData) : this.observers.push({
            callback: e,
            once: !0
        })
    }
    unsubscribe(e) {
        this.observers = this.observers.filter(n=>n.callback !== e)
    }
    fire(e) {
        return this.observers.slice(0).map(n=>{
            const r = n.callback;
            return n.once && this.unsubscribe(n.callback),
            r(e)
        }
        )
    }
    autoFire(e) {
        return this.autoFireData = e,
        this.hasAutoFireData = !0,
        this.fire(e)
    }
}
class te extends E1 { // ReferenceCollection (not lazy)
    static of(e, n) {
        return new te(n,e)
    }
    get length() {
        return this.makeObservable(),
        this.rawElements.length
    }
    get elements() {
        return this.makeObservable(),
        this.makeElementsObservable(),
        this.sortedElements
    }
    get order() {
        return this.collectionOrder
    }
    contains(e) {
        return this.makeObservable(),
        this.idLookup[e.id] !== void 0
    }
    indexOf(e) {
        return this.makeObservable(),
        this.sortedElements.indexOf(e)
    }
    indexOfId(e) {
        this.makeObservable();
        const n = this.idLookup[e];
        return n ? this.indexOf(n) : -1
    }
    get onChange() {
        return this._onChange
    }
    constructor(e, n) {
        if (super(),
        this.idLookup = {},
        this.rawElements = [],
        this.elementIds = [],
        this._onChange = new Tt,
        this.elementsObserved = !1,
        this.observed = !1,
        this.collectionOrder = e,
        n)
            for (const r of n)
                r !== void 0 && (this.rawElements.push(r),
                this.idLookup[r.id] = r,
                this.elementIds.push(r.id))
    }
    findById(e) {
        const n = this.idLookup[e];
        return n && n.observePropertyChanges(),
        n
    }
    add(e) {
        if (this.elementsObserved && e.observePropertyChanges(),
        this.idLookup[e.id] === void 0) {
            const n = this.elementIds.slice(0);
            this.rawElements.push(e),
            this.idLookup[e.id] = e,
            this.elementIds.push(e.id),
            this._onChange.fire([n, this.elementIds])
        }
    }
    remove(e) {
        const n = this.rawElements.indexOf(e);
        if (n !== -1) {
            const r = this.elementIds.slice(0);
            return this.rawElements.splice(n, 1),
            this.elementIds.splice(n, 1),
            delete this.idLookup[e.id],
            this._onChange.fire([r, this.elementIds]),
            !0
        }
        return !1
    }
    clear() {
        const e = this.elementIds;
        this.rawElements = [],
        this.elementIds = [],
        this.idLookup = {},
        this._onChange.fire([e, this.elementIds])
    }
    concat(e) {
        return new te(this.collectionOrder,this.elements.concat(Array.isArray(e) ? e : e.elements))
    }
    setElementIds(e) {
        const n = this.elementIds
          , r = []
          , s = []
          , i = {};
        for (let a = 0, o = e.length; a < o; ++a) {
            const l = e[a]
              , d = at.store.syncClient.getModel(l);
            d && (r.push(l),
            s.push(d),
            i[l] = d,
            this.elementsObserved && d.observePropertyChanges())
        }
        this.elementIds = r,
        this.rawElements = s,
        this.idLookup = i,
        this._onChange.fire([n, r])
    }
    getElementIds() {
        return this.elementIds
    }
    updateOnSyncGroupChanges() {
        at.store.syncClient.onSyncGroupsChanged.subscribe(()=>{
            lt(()=>{
                this.rawElements = this.elementIds.map(e=>at.store.syncClient.getModel(e)).concrete()
            }
            )
        }
        )
    }
    afterHydrate() {
        lt(()=>{
            this.forceObserverUpdates()
        }
        )
    }
    get sortedElements() {
        return this.collectionOrder ? this.collectionOrder.orderElements(this.rawElements) : this.rawElements
    }
    forceObserverUpdates() {
        lt(()=>{
            this.rawElements = this.rawElements.slice(0)
        }
        )
    }
    makeObservable() {
        this.observed || (this.observed = !0,
        Ln(this, {
            add: Le,
            remove: Le,
            clear: Le,
            setElementIds: Le,
            idLookup: ut,
            rawElements: ut,
            sortedElements: ms
        }))
    }
    makeElementsObservable() {
        if (!this.elementsObserved) {
            this.elementsObserved = !0;
            for (const e of this.rawElements)
                e.observePropertyChanges()
        }
    }
}
class Z3 {
    filterElements(e) {
        return this.isFiltering ? e.filter(n=>this.filterElement(n)) : e
    }
    filterNotElements(e) {
        return this.isFiltering ? e.filter(n=>!this.filterElement(n)) : []
    }
}
class bo extends Z3 {
    get isFiltering() {
        return this.filters.length > 0
    }
    get filterCount() {
        return this.filters.length
    }
    constructor(e) {
        super(),
        this.filters = [],
        e && this.addFilter(e),
        Ln(this, {
            addFilter: Le,
            reset: Le,
            isFiltering: ms,
            filterCount: ms,
            filters: ut
        })
    }
    addFilter(e) {
        this.filters.push(e)
    }
    reset() {
        this.filters = []
    }
    filterElement(e) {
        return this.filters.every(n=>n(e))
    }
}
class de {
    constructor(e, n="asc") {
        this.observable = !1,
        this.reset(e, n),
        v8 || (v8 = new Intl.Collator(void 0,{
            numeric: !0
        }))
    }
    and(e, n="asc") {
        return this.fields.push(e),
        this.orders.push(n),
        this
    }
    reset(e, n="asc") {
        return this.fields = [e],
        this.orders = [n],
        this
    }
    orderElements(e) {
        return this.observable || (this.observable = !0,
        Ln(this, {
            and: Le,
            reset: Le,
            fields: ut,
            orders: ut
        })),
        this._orderElements(e)
    }
    getFieldValues(e) {
        return this.fields.map(n=>typeof n == "function" ? n(e) : e[n])
    }
    _orderElements(e) {
        const n = this.orders
          , r = e.length;
        function s(a, o) {
            const l = a.fields
              , d = o.fields;
            for (let u = 0, h = l.length; u < h; ++u) {
                const f = PO(l[u], d[u]);
                if (f !== 0)
                    return (n[u] === "desc" ? -1 : 1) * f
            }
            return a.index - o.index
        }
        const i = new Array(r);
        for (let a = 0; a < r; ++a) {
            const o = e[a];
            i[a] = {
                index: a,
                value: o,
                fields: this.getFieldValues(o)
            }
        }
        return i.sort(s),
        i.map(a=>a.value)
    }
}
let v8;
function PO(t, e) {
    return t === e ? 0 : t == null ? e == null ? 0 : 1 : e == null ? -1 : typeof t == "string" ? v8.compare(t, e) : t - e
}
class yy extends E1 {
    constructor(e, n, r) {
        super(),
        this.collection = e,
        this.privateFilter = n,
        this.inverse = (r == null ? void 0 : r.inverseFilter) ?? !1,
        Ln(this, {
            elements: ms
        })
    }
    get elements() {
        return Array.isArray(this.privateFilter) ? this.privateFilter.reduce(this.inverse ? by : Cy, this.collection.elements) : this.inverse ? by(this.collection.elements, this.privateFilter) : Cy(this.collection.elements, this.privateFilter)
    }
}
function Cy(t, e) {
    return e instanceof Z3 ? e.filterElements(t) : t.filter(e)
}
function by(t, e) {
    return e instanceof Z3 ? e.filterNotElements(t) : t.filter((n,r,s)=>!e(n, r, s))
}
class vy extends E1 {
    constructor(e, n) {
        super(),
        this.collection = e,
        this.collectionOrder = n,
        Ln(this, {
            elements: ms
        })
    }
    get length() {
        return this.collection.length
    }
    contains(e) {
        return this.collection.contains(e)
    }
    indexOf(e) {
        return this.collection.indexOf(e)
    }
    get elements() {
        return this.collectionOrder.orderElements(this.collection.elements)
    }
}
function Zl(t) {
    const e = Mx(t);
    return e.shift() + Tx(e).join("")
}
function o5(t) {
    const e = Mx(t);
    return Tx(e).join("")
}
function Mx(t) {
    const e = t.replace(/[^a-z0-9]+/gi, " ").replace(/([A-Z0-9]+)([A-Z][a-z])/g, "$1 $2").replace(/([a-z0-9])([A-Z])/g, "$1 $2").toLowerCase();
    return $O(e).split(/\s+/)
}
function $O(t) {
    return t.replace(/^\s+|\s+$/g, "")
}
function Tx(t) {
    const e = [];
    for (let n = 0; n < t.length; n++)
        e.push(t[n].charAt(0).toUpperCase() + t[n].substr(1));
    return e
}
const Ku = class Ku { // PartialIndexHelper
    static createPartialIndexValue(e, n) {
        return typeof e == "string" 
            ? e.split(".").at(-1) === "teamId" 
                ? n 
                : `${e}-${n}` // userId-<hash>
            : "id"in e 
                ? e.id 
                // TODO: what are indexedKey and syncGroup used for?
                : "indexedKey"in e 
                    ? this.createPartialIndexValue(e.indexedKey, e.keyValue.toString()) 
                    : "syncGroup"in e // SyncGroup is a Team or a User
                        ? this.createPartialIndexValue("teamId", e.syncGroup) 
                        : this.FULLY_LOADED_INDEX_NAME
    }
    static resolveCoveringPartialIndexValues(e, n, r) { // e for Model class, n for partial index key, r for parent model
        // For example, e == class Comment, n == "issueId", r == Issue instance
        const s = this.partialIndexInfoForModel(e.modelName).map(a=>a.path)
          , i = [this.createPartialIndexValue(n, r.id)]; // ["issueId-xxxxx"]
        for (const a of s) {
            const o = a.split(".");
            if (o.length === 1)
                continue; // Already included in i.
            let l = r;
            const d = o.shift();
            if (!(d !== n && d !== n.replace(/Id(s?)$/, "")))
                for (const u of o) {
                    const h = l[u];
                    if (h instanceof at)
                        l = h;
                    else if (typeof h == "string") {
                        // Create partial index value for the reference property. For example, team.
                        i.push(this.createPartialIndexValue(a, h));
                        break
                    } else if (Array.isArray(h)) {
                        for (const f of h)
                            typeof f == "string" && i.push(this.createPartialIndexValue(a, f));
                        break
                    } else
                        break
                }
        }
        return i
    }
    static transientPartialIndexedKeysOfModel(e) {
        if (!this.transientPartialIndexedKeys[e]) {
            if (!Me.getModelClass(e))
                return [];
            const r = this.partialIndexInfoForModel(e).map(s=>s.path);
            if (r.length === 0)
                this.transientPartialIndexedKeys[e] = [];
            else {
                const i = Me.dependenciesOfModel(e).filter(a=>a.model.isPartiallyLoaded);
                i.length === 0 ? this.transientPartialIndexedKeys[e] = [] : this.transientPartialIndexedKeys[e] = i.flatMap(a=>r.map(o=>({
                    dependency: a,
                    indexedKey: o
                })))
            }
        }
        return this.transientPartialIndexedKeys[e]
    }
    static partialIndexInfoForModel(e, n) {
        if (n) {
            const r = e + "_" + n;
            return this.modelPartialIndexPathsLookup[r] || (this.modelPartialIndexPathsLookup[r] = this.partialIndexInfoForModel(e).filter(s=>s.referencedModelName === n)),
            this.modelPartialIndexPathsLookup[r]
        } else
            return this.modelPartialIndexPathsLookup[e] || (this.modelPartialIndexPathsLookup[e] = this.processPartialIndexInfoForModel(e)),
            this.modelPartialIndexPathsLookup[e]
    }
    static processPartialIndexInfoForModel(e, n=new Set, r=0) {
        // E for modelName, n for 
        const s = Me.getModelClass(e);
        if (!s || !s.isPartiallyLoaded) // Only models whose load strategy is partial are considered.
            return [];
        const i = Me.propertiesOfModel(e)
          , a = [];
        for (const o of Object.keys(i)) {
            const l = i[o];
            // Search reference properties with referencedProperty.
            if ((l.type === vn.reference || l.type === vn.referenceArray) && l.referencedProperty && l.referencedClassResolver) {
                const d = l.referencedClassResolver();
                if (!d.usedForPartialIndexes || d.modelName === e) // 1. The referenced model is not used for partial indexes. 
                // 2. The referenced model is the same as the current model.
                    continue;
                if (a.push({
                    path: o,
                    referencedModelName: d.modelName
                }),
                d.isPartiallyLoaded && r < 3) {
                    n.add(d.modelName);
                    // Recursively process the referenced model.
                    // So a model can deep dive into its reference models' reference models (limited to 3 levels).
                    // For example, Issue is also partially loaded, so we will process what issue references.
                    for (const u of this.processPartialIndexInfoForModel(d.modelName, n, r + 1))
                        // So we find out deeply referenced models here!
                        a.push({
                            path: o.replace(/Id(s?)$/, "") + "." + u.path,
                            referencedModelName: u.referencedModelName
                        })
                }
            }
        }
        return a
    }
}
;
Ku.FULLY_LOADED_INDEX_NAME = "#fullyLoaded#",
Ku.modelPartialIndexPathsLookup = {},
Ku.transientPartialIndexedKeys = {};
/** PartialIndexHelper */
let Zn = Ku;
class Ed extends Error {
    constructor(e, n) {
        super(`Hydrating a model of type ${e.modelName} failed due to network error`),
        this.modelClass = e,
        this.underlyingError = n
    }
}
/**
 * LazyReferenceCollection
 */
class Et extends te {
    get elements() {
        return this.isHydrated() || this.hydrate(),
        super.elements
    }
    get localElements() {
        return this.isHydrated() || this.hydrate({
            onlyIfLocallyAvailable: !0
        }),
        super.elements
    }
    get length() {
        return this.isHydrated() || this.hydrate(),
        super.length
    }
    get localLength() {
        return this.isHydrated() || this.hydrate({
            onlyIfLocallyAvailable: !0
        }),
        super.length
    }
    constructor(e, n, r, s, i) {
        super(s),
        this.modelClass = e, // e.g. `Issue` class
        this.parent = n, // e.g. `User` object
        this.index = r, // e.g. "assigneeId"
        this.options = i,
        e.loadStrategy === dn.instant && (this.isHydrationPromiseLocalOnly = !1,
        this.hydrationPromise = Id) // If the model's load strategy is instant, it must be loaded into the client during bootstrapping.
        // So we can set `this.hydrationPromise` to `Id` (resolved promise).
    }
    isHydrated() {
        // If the hydration promise is resolved and there is no error, it is considered hydrated.
        return !!(this.hydrationPromise && !this.hydrationPromise.error && !this.hydrationPromise.isPending && !this.isHydrationPromiseLocalOnly)
    }
    hydrationFailed() {
        var e;
        return !!((e = this.hydrationPromise) != null && e.error)
    }
    async isLocallyAvailable() {
        return this.isHydrated() ? !0 : at.store.syncClient.hasModelsForPartialIndexValues(this.modelClass.modelName, this.getCoveringPartialIndexValues())
    }
    hydrate(e) { // Hydrate a LazyReferenceCollection
        var s, i, a, o;
        if (this.hydrationPromise && (!this.isHydrationPromiseLocalOnly || e != null && e.onlyIfLocallyAvailable))
            return this.hydrationPromise;
        if ((i = (s = this.options) == null ? void 0 : s.canSkipHydration) != null && i.call(s))
            return this.hydrationPromise = Id,
            this.hydrationPromise;
        this.isHydrationPromiseLocalOnly = this.index && this.parent ? !!(e != null && e.onlyIfLocallyAvailable) && !at.store.localStoreReady(this.modelClass) : !1;
        const n = this.isHydrationPromiseLocalOnly ? { // Final hydration options
            onlyIfLocallyAvailable: !0
        } : {
            onlyIfLocallyAvailable: !1,
            customNetworkHydration: (a = this.options) == null ? void 0 : a.customNetworkHydration,
            canSkipNetworkHydration: (o = this.options) == null ? void 0 : o.canSkipNetworkHydration
        }
          , r = new Jt(async(l,d)=>{
            var u;
            try {
                if (this.index && this.parent) { // E.g. index === "assigneeId" and parent === User object
                    const h = this.getCoveringPartialIndexValues() // Let's figure out what is partial index.
                      , f = await at.store.hydrateModels(this.modelClass, { // Hydrate Issue model.
                        key: this.index, // Issue model reference the parent model by `assigneeId`.
                        value: this.parent.id, // The current user's ID.
                        coveringPartialIndexValues: h // In this case, userId-<the current user's ID>.
                    }, n);
                    r === this.hydrationPromise && (f === !1 ? (this.isHydrationPromiseLocalOnly = void 0,
                    this.hydrationPromise = void 0) : this.isHydrationPromiseLocalOnly = !1)
                } else
                    await at.store.hydrateLocalModelsByIds(this.modelClass, this.elementIds),
                    this.updateRawModels();
                l()
            } catch (h) {
                F.error("Hydration failed", h, {
                    modelClass: this.modelClass.modelName,
                    key: this.index,
                    keyValue: (u = this.parent) == null ? void 0 : u.id
                }),
                this.invalidateRejectedWhenRequested(),
                d(new Ed(this.modelClass,h))
            }
        }
        );
        return this.hydrationPromise = r,
        r
    }
    setElementIds(e) {
        this.isHydrationPromiseLocalOnly = void 0,
        this.hydrationPromise = void 0;
        const n = this.elementIds.concat();
        this.elementIds = e.concat(),
        this.updateRawModels(),
        this._onChange.fire([n, this.elementIds.concat()])
    }
    hydrateElements() {
        return this.isHydrated() ? super.hydrateElements() : new Jt(async(e,n)=>{
            try {
                await this.hydrate(),
                await super.hydrateElements(),
                e()
            } catch (r) {
                n(r)
            }
        }
        )
    }
    invalidateRejectedHydrationPromises() {
        var e;
        (e = this.hydrationPromise) != null && e.error && (this.hydrationPromise = void 0,
        this.isHydrationPromiseLocalOnly = !1),
        super.invalidateRejectedHydrationPromises()
    }
    updateRawModels() {
        lt(()=>{
            const e = this.elementIds.map(n=>at.store.syncClient.getModel(n)).concrete();
            this.rawElements = e,
            this.idLookup = {};
            for (const n of e)
                this.idLookup[n.id] = n,
                this.elementsObserved && n.observePropertyChanges()
        }
        )
    }
    getCoveringPartialIndexValues() {
        // Examples:
        // parent === 'User' object and index === 'assigneeId' 
        // parent === 'Issue' object and index === 'issueId'
        return !this.parent || !this.index ? [] : Zn.resolveCoveringPartialIndexValues(this.modelClass, this.index, this.parent)
    }
}
const v3 = class v3 {
    static isLazy(e) {
        return e !== null && typeof e == "object" && v3.identifier in e
    }
}
;
v3.identifier = Symbol("LazyIdentifier");
let G2 = v3;
function Lx(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
let wy;
const Sm = class Sm { // class BaseLazyReference
    static unwrap(e) {
        return e instanceof Sm ? e.value : e
    }
    isHydrated() {
        return !!(this.hydrationPromise && !this.hydrationPromise.error && !this.hydrationPromise.isPending && !this.isHydrationPromiseLocalOnly)
    }
    hydrationFailed() {
        var e;
        return !!((e = this.hydrationPromise) != null && e.error)
    }
    get value() {
        if (this.observable || (this.observable = !0,
        Ln(this)),
        this._value)
            return this._value;
        this.hydrate()
    }
    set value(e) {
        lt(()=>{
            this._value = e,
            e ? this.hydrationPromise = new Jt(e) : this.hydrationPromise = void 0
        }
        )
    }
    then(e, n) {
        return this.hydrate().then(e, n)
    }
    invalidateRejectedWhenRequested() {
        this._invalidateRejectedWhenRequestedSubscribed || (at.store.onInvalidateRejectedHydrations.subscribeOnce(()=>this.invalidateRejectedHydrationPromises()),
        this._invalidateRejectedWhenRequestedSubscribed = !0)
    }
    invalidateRejectedHydrationPromises() {
        var e;
        (e = this.hydrationPromise) != null && e.error && (this.hydrationPromise = void 0,
        this.isHydrationPromiseLocalOnly = !1),
        this._invalidateRejectedWhenRequestedSubscribed = !1
    }
    constructor() {
        this[wy] = !0, // LazyRefernce simple
        this.observable = !1 // When a reference is not hydrated, it is not observable.
    }
}
;
wy = G2.identifier;
let A1 = Sm; // The base class of LazyReference and LazyBackReference
Lx([ut], A1.prototype, "_value", void 0);
class Qn extends A1 { // LazyReference
    static wrap(e) {
        return new FO(e)
    }
    constructor(e, n) {
        super(),
        this.referencedClass = n,
        this.id = e
    }
    get id() {
        return this.observable || (this.observable = !0,
        Ln(this)),
        this._id
    }
    set id(e) {
        lt(()=>{
            this._id = e,
            this._value = at.store.findById(at, e),
            this._value ? this.hydrationPromise = new Jt(this._value) : this.hydrationPromise = void 0
        }
        )
    }
    get value() {
        return super.value
    }
    set value(e) {
        super.value = e,
        e && (this._id = e.id)
    }
    hydrate(e) { // Hydate LazyReference
        return this.isHydrationPromiseLocalOnly 
            && (e == null ? void 0 : e.onlyIfLocallyAvailable) !== !0 
            && (this.hydrationPromise = void 0),
        this.hydrationPromise ? this.hydrationPromise : (this.isHydrationPromiseLocalOnly = (e == null ? void 0 : e.onlyIfLocallyAvailable) === !0,
        this.hydrationPromise = new Jt(async(n,r)=>{
            await at.store.hydrateModel(this.referencedClass, { // It actually call ObjectStore.hydrateModel to load a reference.
                id: this._id
            }, e).then(Le(s=>{
                // After model is constructed in memory, the callback will be executed to assign the model to this._value.
                // And since this callback is wrapped using MobX, the view will update to access the model.
                s && (this.isHydrationPromiseLocalOnly = !1),
                this._value = s,
                n(s)
            }
            )).catch(async s=>{
                F.error("Hydration of model from disk or network failed", s, {
                    modelClass: this.referencedClass.name,
                    id: this._id
                }),
                this.invalidateRejectedWhenRequested(),
                r(new Ed(this.referencedClass,s))
            }
            )
        }
        ),
        this.hydrationPromise)
    }
}
Lx([ut], Qn.prototype, "_id", void 0);
class Lu extends A1 { // LazyBackReference
    static wrap(e) {
        return new NO(e)
    }
    constructor(e, n) {
        super(),
        this.model = e, // e.g. Issue instance
        this.referencedKey = n // e.g. documentContnetId
    }
    hydrate(e) {
        if (this.isHydrationPromiseLocalOnly && (e == null ? void 0 : e.onlyIfLocallyAvailable) !== !0 && (this.hydrationPromise = void 0),
        this.hydrationPromise)
            return this.hydrationPromise;

        // Find the back reference model.
        const n = Me.dependenciesOfModel(this.model.modelName).find(i=>i.backReference === this.referencedKey);
        if (!n)
            throw Error(`No dependencies on ${this.model.modelName}.${this.referencedKey}. Can't use LazyBackReference`);
        const r = Zn.resolveCoveringPartialIndexValues(n.model, n.property, this.model)
          , s = this.model.id;
        return this.isHydrationPromiseLocalOnly = (e == null ? void 0 : e.onlyIfLocallyAvailable) === !0,
        this.hydrationPromise = new Jt(async(i,a)=>{
            let o;
            try {
                // hypdrate that model
                const l = await at.store.hydrateModels(n.model, {
                    key: n.property,
                    value: s, // hydrate with the id
                    coveringPartialIndexValues: r
                }, e);
                l === !1 ? o = void 0 : l === !0 ? (this.isHydrationPromiseLocalOnly = !1,
                o = this._value) : (this.isHydrationPromiseLocalOnly = !1,
                o = Array.isArray(l) ? l[0] : void 0)
            } catch (l) {
                return F.error("Hydration of model from disk or network failed", l, {
                    modelClass: n.model.modelName,
                    key: n.property,
                    keyValue: s
                }),
                this.invalidateRejectedWhenRequested(),
                a(new Ed(n.model,l))
            }
            lt(()=>{
                this._value = o
            }
            ),
            i(o)
        }
        ),
        this.hydrationPromise
    }
}
class FO extends Qn {
    constructor(e) {
        super(e.id, e.constructor),
        this.hydrationPromise = new Jt(e),
        this._value = e
    }
    hydrate() {
        return this.hydrationPromise
    }
}
class NO extends Lu {
    constructor(e) {
        super(e, "unused"),
        this.hydrationPromise = new Jt(e),
        this._value = e
    }
    hydrate() {
        return this.hydrationPromise
    }
}
class ky {
    constructor(e, n) {
        this.modelClass = e,
        this.options = n,
        this.path = []
    }
    withRelation(e) {
        return this.path.push(e),
        this
    }
    async withId(e) {
        const n = at.store
          , r = Array.isArray(e) ? e : [e];
        if (this.path.length === 0) {
            await Promise.all(r.map(d=>n.syncClient.hydrateModel(this.modelClass, d)));
            return
        }
        let s = this.modelClass;
        const i = [];
        for (let d = 0; d < this.path.length; d++) {
            const u = this.path[d]
              , h = Me.propertiesOfModel(s.modelName)[u];
            d !== this.path.length - 1 && (h != null && h.referencedClassResolver) ? (s = h.referencedClassResolver(),
            i.push(u)) : h.type === vn.referenceCollection ? i.push(u.replace(/s$/, "Ids")) : i.push(u + "Id")
        }
        const a = i.join(".")
          , o = new Set(await n.syncClient.removeLoadedPartialIndexValues(this.modelClass.modelName, r.map(d=>Zn.createPartialIndexValue(a, d))));
        if (o.size === 0)
            return;
        const l = r.map(d=>{
            var h;
            const u = Zn.createPartialIndexValue(a, d);
            return o.has(u) ? n.batchModelLoader.addRequest({
                modelClass: this.modelClass,
                indexedKey: a,
                keyValue: d,
                skipCreatingModelsInMemory: (h = this.options) == null ? void 0 : h.skipAddingToMemory
            }) : Id
        }
        );
        await Promise.all(l)
    }
}

// #region BaseModel

const as = class as { // basic data model class
    static get constructorName() {
        return this.modelName
    }
    get supportsUndoCreatedAtArguments() {
        return !1
    }
    static get isPartiallyLoaded() {
        switch (this.loadStrategy) {
        case dn.instant:
        case dn.lazy:
        case dn.explicitlyRequested:
        case dn.local:
            return !1;
        case dn.partial:
            return !0;
        default:
            throw this.loadStrategy,
            void 0
        }
    }
    static get modelName() {
        return this.prototype.modelName
    }
    get isArchived() {
        return this.archivedAt !== void 0
    }
    get onSave() {
        if (!this._onSave) {
            const e = new Tt;
            this._onSave = e
        }
        return this._onSave
    }
    get onUpdateFromData() {
        if (!this._onUpdateFromData) {
            const e = new Tt;
            this._onUpdateFromData = e
        }
        return this._onUpdateFromData
    }
    get onUpdate() {
        if (!this._onUpdate) {
            const e = new Tt;
            this._onUpdate = e
        }
        return this._onUpdate
    }
    get clonedFromModel() {
        return this._clonedFromModel
    }
    get isClone() {
        return this._clonedFromModel !== void 0
    }
    get modelClass() {
        return this.constructor
    }
    get mutationResultName() {
        return this.modelName[0].toLowerCase() + this.modelName.substring(1)
    }
    get properties() {
        return Me.propertiesOfModel(this.modelName)
    }
    get dataProperties() {
        return Me.dataPropertiesOfModel(this.modelName)
    }
    get applyingNetworkChanges() {
        return this.ignoreUpdates
    }
    constructor(e=!0) { // the constructor of all model
        if (this.dependenciesRequireLoading = !1,
        this.hydrated = !1,
        this.__mobx = {},
        this.modifiedProperties = {}, // store what property has been changed on this model
        this.madeObservable = !1,
        this.observingPropertyChanges = !1,
        this.ignoreUpdates = !1,
        this.hydratedRelationsPromises = new Map,
        !as.store)
            throw Error("Model.store not registered when instantiating Model.");
        this.store = as.store, // the store is assigned to the Model object here
        e && (this.id = Qc(),
        this.createdAt = new Date,
        this.updatedAt = new Date,
        this.hydrated = !0)
    }
    beforeSave(e) {}
    prepareForAdd() {}
    get isSingletonModel() {
        return !1
    }
    // PART III: transaction
    save(e=!1, n) { // the `save` method on every model to trigger syncing
        return lt(()=>{ // `lt` is actually mobx's util function `runInAction`. It kicks MobX awaik to do its job.
            var s;
            const r = this.store.save(this, e, n);
            return this.isInTransaction() || (this._clonedFromModel = void 0),
            (s = this._onSave) == null || s.fire(),
            r
        }
        )
    }
    createMutation(e, n={}) { // generate transcation operation for most Models
        var h;
        const r = `${this.modelName}CreateInput`
          , s = {}
          , i = Object.keys(this.properties).filter(f=>{
            const p = this.properties[f];
            return p.persistance === ee.createOnly || p.persistance === ee.createAndUpdate
        }
        );
        for (const f of i) {
            let p = this.serializedValue(f, this[f]);
            this.properties[f].optimizer && p && (p = (h = this.properties[f].optimizer) == null ? void 0 : h.optimizeCreate(p));
            const m = this.graphQLSerializedVariableValue(f, p, !1);
            m !== void 0 && (s[f] = m)
        }
        let a = "";
        n && Object.keys(n).length > 0 && (a = ", " + Object.keys(n).map(f=>`${f}:${JSON.stringify(n[f])}`).join(", "));
        const o = `${Zl(this.modelName)}Create`;
        let l = 1
          , d = `${o}Input`;
        for (; e.has(d); )
            d = `${o}Input_${++l}`;
        const u = `${o}(input: $${d}${a}) { lastSyncId }`;
        return this.observePropertyChanges(),
        {
            mutationText: u,
            variables: {
                [d]: s
            },
            variableTypes: {
                [d]: r
            }
        }
    }
    get changedProperties() {
        return Object.keys(this.modifiedProperties)
    }
    updateMutation(e, n, r={}) {
        // TODO: what is this e? It is a Set of what?
        // n for an array of change descriptors. e.g.
        // [{ 
        //   "assigneeId" {
        //     "original": null,
        //     "unoptimizedUpdated": undefined,
        //     "updatedFrom": null,
        //     "updated": "4e8622c7-0a24-412d-bf38-156e073ab384"
        //   }
        // }]
        const s = `${this.modelName}UpdateInput`
          , i = {};
        for (const f in n.changes) {
            const p = this.graphQLSerializedVariableValue(f, n.changes[f].updated, !0);
            p !== void 0 && (i[f] = p)
        }
        if (Object.keys(i).length === 0)
            return;
        const a = this.isSingletonModel ? "" : `id: "${this.id}", ` // id: "id-of-the-changed-model"
          , o = `${Zl(this.modelName)}Update`; // IssueUpdate
        let l = 1
          , d = `${o}Input`;
        for (; e.has(d); )
            d = `${o}Input_${++l}`;
        let u = "";
        return r && Object.keys(r).length > 0 && (u = ", " + Object.keys(r).map(f=>`${f}:${JSON.stringify(r[f])}`).join(", ")),
        {
            mutationText: `${o}(${a}input: $${d}${u}) { lastSyncId }`,
            variables: {
                [d]: i
            },
            variableTypes: {
                [d]: s
            }
        }
    }
    archiveMutation() {
        return `${Zl(this.modelName)}Archive(id: "${this.id}") { lastSyncId }`
    }
    unarchiveMutation() {
        return `${Zl(this.modelName)}Unarchive(id: "${this.id}") { lastSyncId }`
    }
    deleteMutation() {
        return `${Zl(this.modelName)}Delete(id: "${this.id}") { lastSyncId }`
    }
    markPropertyChanged(e, n) { // e for the name of the changed property, n for the new value
        const r = this.properties[e];
        if ((r.persistance === ee.updateOnly || r.persistance === ee.createAndUpdate) && !(e in this.modifiedProperties) && !this.ignoreUpdates) {
            // Check if the value really changes by comparing the serialized values.
            const s = this.serializedValue(e, n) // new value serilaized
              , i = this.serializedValue(e, this[e]); // old value serialized
            s !== i && (this.modifiedProperties[e] = s)
        }
    }
    changeSnapshot() { // get the changes of the model, it seems to be universal for all models
        const e = {};
        for (const n in this.modifiedProperties) {
            const r = this.properties[n];
            let s, i = this.serializedValue(n, this[n]);
            r.optimizer && this.modifiedProperties[n] && i && (s = i,
            i = r.optimizer.optimizeUpdate(this.modifiedProperties[n], i)),
            e[n] = { // each modified property would have its own descriptor
                original: this.modifiedProperties[n],
                updatedFrom: this.modifiedProperties[n],
                updated: i,
                unoptimizedUpdated: s
            }
        }
        return this.clearSnapshot(),
        {
            changes: e
        }
    }
    clearSnapshot() { 
        this.modifiedProperties = {}
    }
    clone(e) {
        const n = Me.getModelClass(this.modelName);
        if (!n)
            throw Error(`Could not find class for model ${this.modelName}`);
        const r = new n(!0);
        return r.merge(this),
        r.markAsClonedFrom(this),
        e && (r.id = Qc()),
        r
    }
    serialize() {
        const e = {};
        for (const n of Object.keys(this.properties)) {
            const r = this.serializedValue(n, this[n]);
            r !== null && (e[n] = r)
        }
        return e
    }
    merge(e, n) {
        lt(()=>{
            const r = (n == null ? void 0 : n.onlyKeys) ?? Object.keys(this.properties);
            for (const s of r) {
                const i = this.properties[s];
                if (i.type === vn.referenceCollection || i.type === vn.referencedModel || i.type === vn.backReference)
                    continue;
                const a = e.serializedValue(s, e[s]);
                this.setSerializedValue(s, a === null ? void 0 : a, i)
            }
            this.hydrated = e.hydrated
        }
        )
    }
    differences(e) {
        return Object.keys(this.properties).filter(n=>{
            const r = this.serializedValue(n, this[n])
              , s = e.serializedValue(n, e[n]);
            return !F2(r, s)
        }
        )
    }
    /**
     * Dump values from a plain object to a model. This would be called when the client receives deltas from the server,
     * or the model is constructed when bootstrapping (and many other circustances).
     */
    updateFromData(e, n) {
        var s;
        this.ignoreUpdates = !0; // Mark we are catching remote changes, all updates from setters would be ignored!
        const r = Me.propertiesOfModel(this.modelName);
        for (const i in e)
            this.setSerializedValue(i, e[i], r[i]);
        if ((n == null ? void 0 : n.dataContainsAllProperties) === !0) {
            const i = this.dataProperties;
            for (const a in i)
                a in e || this.setSerializedValue(a, void 0, i[a])
        }
        (s = this._onUpdateFromData) == null || s.fire(e),
        this.ignoreUpdates = !1
    }
    didUpdate() {
        var e;
        (e = this._onUpdate) == null || e.fire(this)
    }
    attachToReferencedProperties() {
        this.updateReferencedModels(!0)
    }
    detachFromReferencedProperties() {
        this.updateReferencedModels(!1)
    }
    serializedValue(e, n) {
        const r = this.properties[e];
        return !r || r.type === vn.referenceCollection || r.type === vn.referencedModel || r.type === vn.backReference ? null : n !== void 0 && r.serializer !== void 0 ? r.serializer.serialize(n) : Array.isArray(n) ? [].concat(n) : n === void 0 ? null : n
    }
    setSerializedValue(e, n, r) {
        if (!r)
            return;
        let s = n === null ? void 0 : n;
        if (r.type === vn.reference || r.type === vn.backReference)
            this[e] = s;
        else {
            if (s !== void 0 && r.serializer !== void 0)
                if (this.modelName === "Template" && e === "templateData" && s === "" && (s = "{}"),
                this.madeObservable)
                    s = r.serializer.deserialize(s);
                else {
                    this.__mobx[e + "_d"] = r.serializer, // _d is set here?
                    this.__mobx[e + "_v"] = s;
                    return
                }
            (!this.madeObservable || !F2(this[e], s)) && (this[e] = s)
        }
    }
    references(e) {
        for (const n in this.properties)
            if (A1.unwrap(this[n]) === e)
                return !0;
        return !1
    }
    get persisted() {
        return as.store ? as.store.findById(as, this.id, {
            excludeTemporaryModels: !0
        }) !== void 0 : !1
    }
    get persistedOnBackend() {
        return this.persisted && this.store.transactionsForModel(this).filter(e=>e.type === "create").length === 0
    }
    get filterValue() {
        return this.id
    }
    get filterMatchValue() {
        return this.id
    }
    updateRelation(e, n, r=!0) { // r === true for build reference, r === false to remove reference
        var o, l;
        if (r && !this.isArchived && e.isArchived || !r && this.isArchived && e.isArchived || this.isInDifferentLocalTransaction(e))
            return;
        const s = this.properties[n]
          , a = (s == null ? void 0 : s.type) === vn.referenceCollection && this[n];
        if (a instanceof te) // Update ReferenceCollection
            r ? a.add(e) : a.remove(e);
        else if (r)
            this[n] = e; // Or simply change reference
        else {
            if (s || F.error("Trying to detach a non-existing property", void 0, {
                property: n,
                modelName: this.modelName,
                relatedModelName: e.modelName
            }),
            (s == null ? void 0 : s.referenceNullable) === !1)
                return;
            (s == null ? void 0 : s.lazy) === !0 ? (this[`${n}Id`] === e.id || ((o = this[`${n}Lazy`]) == null ? void 0 : o.value) === e || ((l = this[`${n}_l`]) == null ? void 0 : l.value) === e) && (this[n] = void 0) : this[`${n}Id`] === e.id && (this[n] = void 0)
        }
    }
    referencedPropertyChanged(e, n, r) {
        if (this.observingPropertyChanges)
            if (Array.isArray(r) && Array.isArray(n)) {
                for (const s of n)
                    r.includes(s) || this.updateReferencedModel(s, e, !1);
                for (const s of r)
                    n.includes(s) || this.updateReferencedModel(s, e, !0)
            } else
                n !== r && (this.updateReferencedModel(n, e, !1),
                this.updateReferencedModel(r, e, !0))
    }
    observePropertyChanges() {
        this.observingPropertyChanges || (this.observingPropertyChanges = !0,
        this.makeObservable())
    }
    hydrate(e) { // To hydrate a model.
        var a;
        if (this.hydrationPromise && (!this.isHydrationPromiseLocalOnly || e != null && e.onlyIfLocallyAvailable))
            return this.hydrationPromise;
        if (!this.persisted) // Temporary models will not be hydrated.
            return this.setHydrated(),
            new Jt(this); // Return self in a Promise.
        const n = []; // All micro tasks to hydrate properties.
        let r = !1;
        const s = Me.propertiesOfModel(this.modelName);
        for (const o of Me.lazyCollectionKeysOfModel(this.modelName)) {
            const l = this[o];
            if (l instanceof Et && !l.isHydrated()) { // LazyReferenceCollection
                const d = l.hydrate(e);
                n.push(d),
                l.modelClass.isPartiallyLoaded && (r = !0)
            }
        }
        for (const o of Me.lazyReferenceKeysOfModel(this.modelName)) {
            const l = s[o]
              , d = this[o];
            d instanceof A1 && !d.isHydrated() && (n.push(d.hydrate(e)), // Hydrate lazy references and lazy back referencies
            (a = l.referencedClassResolver) != null && a.call(l).isPartiallyLoaded ? r = !0 : l.referencedClassResolver || (r = !0))
        }
        const i = Me.cascadeHydrationKeysOfModel(this.modelName);
        if (i) // Some references may need to be hydrated cascadely as well.
            for (const o of i) {
                const l = this[o];
                if (l instanceof as && l.isHydrated() === !1) {
                    const d = l.hydrate(e); // Recursively hydrate another Model.
                    n.push(d)
                } else if (l instanceof te) { // ReferenceCollection.
                    const d = l.hydrateElements();
                    d.isPending && n.push(d)
                }
            }
        if (n.length) {
            this.isHydrationPromiseLocalOnly = r && (e == null ? void 0 : e.onlyIfLocallyAvailable);
            const o = new Jt((l,d)=>{
                Promise.all(n).then(()=>{
                    this.setHydrated(!r || !(e != null && e.onlyIfLocallyAvailable)),
                    l(this)
                }
                ).catch(async u=>{
                    this.invalidateRejectedWhenRequested(),
                    d(new Ed(this.modelClass,u))
                }
                )
            }
            );
            this.hydrationPromise = o
        } else
            this.setHydrated(),
            this.isHydrationPromiseLocalOnly = !1,
            this.hydrationPromise = new Jt(this);
        return this.hydrationPromise
    }
    hydrateRelations(e, n) {
        const r = [...e].sort().join("-")
          , s = this.hydratedRelationsPromises.get(r);
        if (s)
            return s;
        const i = new Jt(async(a,o)=>{
            if (!this.isHydrated())
                try {
                    await this.hydrate(n)
                } catch (d) {
                    return o(d)
                }
            if (e.length === 0)
                return a(this);
            const l = [];
            for (const d of e) {
                const u = this[d];
                u instanceof A1 && u.value && !u.value.isHydrated() && l.push(u.value.hydrate(n))
            }
            if (l.length)
                try {
                    await Promise.all(l)
                } catch (d) {
                    return this.invalidateRejectedWhenRequested(r),
                    o(new Ed(this.modelClass,d))
                }
            a(this)
        }
        );
        return this.hydratedRelationsPromises.set(r, i),
        i
    }
    setHydrated(e=!0) {
        this.hydrated = e
    }
    isHydrated() {
        if (this.hydrated)
            return !0;
        for (const n of Me.lazyCollectionKeysOfModel(this.modelName)) {
            const r = this[n];
            if (r instanceof Et && !r.isHydrated())
                return !1
        }
        for (const n of Me.lazyReferenceKeysOfModel(this.modelName))
            if (this[n + "Id"] !== void 0) {
                const r = this[n + "Lazy"];
                if (r && r.isPending || !as.store.findById(as, this[n + "Id"]))
                    return !1
            }
        const e = Me.cascadeHydrationKeysOfModel(this.modelName);
        if (e)
            for (const n of e) {
                const r = this[n];
                if (r instanceof as && !r.isHydrated())
                    return !1
            }
        return !0
    }
    hydrationFailed() {
        var e;
        return !!((e = this.hydrationPromise) != null && e.error)
    }
    static preloadFor(e, n) {
        return new ky(this,n).withRelation(e)
    }
    static preloadWithId(e) {
        return new ky(this).withId(e)
    }
    get shouldSetUpdatedAt() {
        const e = this.skipUpdatedAtKeys
          , n = Object.keys(this.modifiedProperties);
        return n.length === 0 ? !1 : e === void 0 || n.some(r=>!e.has(r))
    }
    isInstanceOf(e) {
        return this instanceof e
    }
    propertyChanged(e, n, r) { // `e` for changed property, `n` for new value, `r` for old value
        const s = this.properties[e];
        if (s) {
            if (s.type === vn.ephemeralProperty) {
                const i = r === void 0 ? null : r;
                this.ignoreUpdates || (this.ephemeralUpdates ? this.ephemeralUpdates[e] = i : (this.ephemeralUpdates = {
                    [e]: i
                },
                window.setTimeout(()=>{
                    this.store.sendEphemeralUpdate(this, this.ephemeralUpdates || {}),
                    this.ephemeralUpdates = void 0
                }
                , 5)))
            } else
                this.markPropertyChanged(e, n);
            // Also, if the property is a reference, update the referenced model.
            s.referencedProperty && this.referencedPropertyChanged(s.referencedProperty, n, r)
        }
    }
    static createEmpty() {
        return new this
    }
    makeObservable() {
        this.madeObservable || (this.madeObservable = !0,
        // Make these properties observable.
        Ln(this, {
            // actions & computed
            ...Me.observableAnnotationsOfModel(this.modelName),
            hydrated: ut,
            setHydrated: Le
        }))
    }
    graphQLSerializedVariableValue(e, n, r) {
        const s = this.properties[e];
        if (!(n === null && !r)) {
            if (s.enum)
                if (typeof n == "string" || typeof n == "number") {
                    for (const i of Object.keys(s.enum))
                        if (s.enum[i] === n)
                            return i;
                    return n
                } else
                    return n === null ? null : void 0;
            return s.serializer === Yi && typeof n == "string" ? Yi.deserialize(n) : n
        }
    }
    updateReferencedModels(e) { // Update references of a model.
        const n = Me.referencedPropertiesOfModel(this.modelName); 
        for (const r in n) {
            const s = n[r];
            if (!s)
                continue;
            const i = this[r]
              , a = i instanceof as ? i.id : i;
            if (!(!a || !s.referencedProperty)) // if (a && s.referencedProperty)
                if (Array.isArray(a))
                    for (const o of a)
                        this.updateReferencedModel(o, s.referencedProperty, e);
                else
                    this.updateReferencedModel(a, s.referencedProperty, e)
        }
    }
    updateReferencedModel(e, n, r) {
        const s = this.store.syncClient.getModel(e); // s is for the referenced model, this for the referencing model
        s ? s.updateRelation(this, n, r) : r && this.store.delayedRelationManager.addDelayedRelation(this, e)
    }
    isInDifferentLocalTransaction(e) {
        const n = this.store.localTransactionsForModel(this)
          , r = this.store.localTransactionsForModel(e)
          , s = n.some(o=>r.includes(o))
          , i = !!n.length && !!r.length
          , a = !n.length && !!r.length;
        return !s && i || a
    }
    markAsClonedFrom(e) {
        this._clonedFromModel = e
    }
    isInTransaction() {
        return this.store.modelIsInTransaction(this)
    }
    invalidateRejectedWhenRequested(e) {
        e && (this._invalidateRejectedWhenRequestedKeys || (this._invalidateRejectedWhenRequestedKeys = new Set),
        this._invalidateRejectedWhenRequestedKeys.add(e)),
        this._invalidateRejectedWhenRequestedSubscribed || (this.store.onInvalidateRejectedHydrations.subscribeOnce(()=>this.invalidateRejectedHydrationPromises()),
        this._invalidateRejectedWhenRequestedSubscribed = !0)
    }
    invalidateRejectedHydrationPromises() {
        var e;
        if ((e = this.hydrationPromise) != null && e.error && (this.hydrationPromise = void 0,
        this.isHydrationPromiseLocalOnly = !1),
        this._invalidateRejectedWhenRequestedKeys) {
            for (const n of this._invalidateRejectedWhenRequestedKeys.keys())
                this.hydratedRelationsPromises.delete(n);
            this._invalidateRejectedWhenRequestedKeys = void 0
        }
        this._invalidateRejectedWhenRequestedSubscribed = !1
    }
}
;
as.usedForPartialIndexes = !1,
as.loadStrategy = dn.instant,
as.partialLoadMode = ki.regular;
let at = as;
class si extends at { // archiveable model
    archive() {
        return this.archivedAt = new Date,
        this.store.archive(this)
    }
    unarchive() {
        return this.store.unarchive(this)
    }
}
class It extends si { // deletable-model, some model could only be archvied
    delete(e) {
        return lt(()=>{
            var n;
            return (n = this._onDelete) == null || n.fire(this),
            this.store.delete(this, e)
        }
        )
    }
    get onDelete() {
        if (!this._onDelete) {
            const e = new Tt;
            this._onDelete = e
        }
        return this._onDelete
    }
}
class Xc extends si { // trash-able model
    trash() {
        return lt(()=>this.store.trash(this))
    }
}

// #endregion

const VO = ()=>{
    const t = self.document.createElement("div");
    t.setAttribute("style", "width: 30px; height: 30px; overflow: auto;"),
    t.classList.add("scrollbar-test");
    const e = self.document.createElement("div");
    e.setAttribute("style", "width:100%;height:40px"),
    t.appendChild(e),
    self.document.body.appendChild(t),
    30 - t.firstChild.clientWidth && self.document.body.classList.add("layoutScrollbarObtrusive"),
    self.document.body.removeChild(t)
}
;
var BO = QE
  , UO = function() {
    return BO.Date.now()
}
  , HO = UO
  , zO = /\s/;
function ZO(t) {
    for (var e = t.length; e-- && zO.test(t.charAt(e)); )
        ;
    return e
}
var qO = ZO
  , WO = qO
  , GO = /^\s+/;
function KO(t) {
    return t && t.slice(0, WO(t) + 1).replace(GO, "")
}
var YO = KO
  , QO = YO
  , xy = xf
  , XO = XE
  , Dy = NaN
  , JO = /^[-+]0x[0-9a-f]+$/i
  , eR = /^0b[01]+$/i
  , tR = /^0o[0-7]+$/i
  , nR = parseInt;
function rR(t) {
    if (typeof t == "number")
        return t;
    if (XO(t))
        return Dy;
    if (xy(t)) {
        var e = typeof t.valueOf == "function" ? t.valueOf() : t;
        t = xy(e) ? e + "" : e
    }
    if (typeof t != "string")
        return t === 0 ? t : +t;
    t = QO(t);
    var n = eR.test(t);
    return n || tR.test(t) ? nR(t.slice(2), n ? 2 : 8) : JO.test(t) ? Dy : +t
}
var q3 = rR;
const gde = Cn(q3);
var sR = xf
  , c6 = HO
  , Sy = q3
  , iR = "Expected a function"
  , aR = Math.max
  , oR = Math.min;
function cR(t, e, n) {
    var r, s, i, a, o, l, d = 0, u = !1, h = !1, f = !0;
    if (typeof t != "function")
        throw new TypeError(iR);
    e = Sy(e) || 0,
    sR(n) && (u = !!n.leading,
    h = "maxWait"in n,
    i = h ? aR(Sy(n.maxWait) || 0, e) : i,
    f = "trailing"in n ? !!n.trailing : f);
    function p(T) {
        var B = r
          , z = s;
        return r = s = void 0,
        d = T,
        a = t.apply(z, B),
        a
    }
    function m(T) {
        return d = T,
        o = setTimeout(b, e),
        u ? p(T) : a
    }
    function g(T) {
        var B = T - l
          , z = T - d
          , W = e - B;
        return h ? oR(W, i - z) : W
    }
    function C(T) {
        var B = T - l
          , z = T - d;
        return l === void 0 || B >= e || B < 0 || h && z >= i
    }
    function b() {
        var T = c6();
        if (C(T))
            return k(T);
        o = setTimeout(b, g(T))
    }
    function k(T) {
        return o = void 0,
        f && r ? p(T) : (r = s = void 0,
        a)
    }
    function S() {
        o !== void 0 && clearTimeout(o),
        d = 0,
        r = l = s = o = void 0
    }
    function D() {
        return o === void 0 ? a : k(c6())
    }
    function R() {
        var T = c6()
          , B = C(T);
        if (r = arguments,
        s = this,
        l = T,
        B) {
            if (o === void 0)
                return m(l);
            if (h)
                return clearTimeout(o),
                o = setTimeout(b, e),
                p(l)
        }
        return o === void 0 && (o = setTimeout(b, e)),
        a
    }
    return R.cancel = S,
    R.flush = D,
    R
}
var Ox = cR;
const lR = Cn(Ox);
var dR = Ox
  , uR = xf
  , hR = "Expected a function";
function fR(t, e, n) {
    var r = !0
      , s = !0;
    if (typeof t != "function")
        throw new TypeError(hR);
    return uR(n) && (r = "leading"in n ? !!n.leading : r,
    s = "trailing"in n ? !!n.trailing : s),
    dR(t, e, {
        leading: r,
        maxWait: e,
        trailing: s
    })
}
var pR = fR;
const K2 = Cn(pR)
  , mR = t=>t.length === 1 ? t[0] : t.slice(0, t.length - 1).join(", ") + " and " + t.slice(-1);
class qf {
    constructor(e=0) {
        this.sharedQueue = [],
        this.exclusiveQueue = [],
        this.sharedCount = 0,
        this.exclusiveCount = 0,
        this.maxExclusiveQueueLength = e
    }
    async runShared(e) {
        return this.addCallback(e, !0)
    }
    async runExclusive(e) {
        return this.addCallback(e, !1)
    }
    async addCallback(e, n) {
        const r = new Promise((s,i)=>{
            n ? this.sharedQueue.push({
                callback: e,
                resolve: s,
                reject: i
            }) : this.maxExclusiveQueueLength < 1 || this.exclusiveQueue.length + this.exclusiveCount < this.maxExclusiveQueueLength ? this.exclusiveQueue.push({
                callback: e,
                resolve: s,
                reject: i
            }) : s(void 0)
        }
        );
        return this.executeNext(),
        r
    }
    executeNext() {
        if (this.exclusiveCount === 0) {
            if (this.sharedQueue.length > 0)
                this.sharedQueue.forEach(e=>this.execute(e, !0)),
                this.sharedQueue = [];
            else if (this.sharedCount === 0) {
                const e = this.exclusiveQueue.shift();
                e && this.execute(e, !1)
            }
        }
    }
    async execute(e, n) {
        n ? ++this.sharedCount : ++this.exclusiveCount;
        try {
            const r = await e.callback();
            e.resolve(r)
        } catch (r) {
            e.reject(r)
        } finally {
            n ? --this.sharedCount : --this.exclusiveCount,
            this.executeNext()
        }
    }
}
async function gR(t, e) {
    const n = Mt.gql`
    query SsoUrlFromEmailQuery($email: String!, $isDesktop: Boolean) {
      ssoUrlFromEmail(email: $email, isDesktop: $isDesktop) {
        success
        samlSsoUrl
      }
    }
  `;
    return t.query(n, e, {
        asAnonymous: !0
    })
}
const Rx = ["column", "reverse", "center", "align", "alignSelf", "justify", "auto", "grow", "shrink", "wrap", "inline", "disabled", "gap", "wrapGap", "overflowHidden", "noMinWidth"]
  , Lt = ae("div").withConfig({
    shouldForwardProp: t=>!Rx.includes(t)
})`
  display: ${({inline: t})=>t ? "inline-flex" : "flex"};
  flex: ${({auto: t})=>t ? "1 1 auto" : "initial"};
  flex-direction: ${({column: t, reverse: e})=>t ? e ? "column-reverse" : "column" : e ? "row-reverse" : "row"};
  align-items: ${({align: t})=>t};
  justify-content: ${({justify: t})=>t};
  ${({center: t})=>t === !0 ? "align-items: center; justify-content: center;" : ""};
  ${({grow: t})=>typeof t == "number" ? `flex-grow: ${t};` : ""};
  ${({shrink: t})=>typeof t == "number" ? `flex-shrink: ${t};` : ""};
  ${({wrap: t})=>t ? "flex-wrap: wrap;" : ""};
  ${({alignSelf: t})=>t ? `align-self: ${t};` : ""};
  ${({overflowHidden: t})=>t ? "overflow: hidden;" : ""};
  ${({gap: t})=>typeof t == "number" ? `gap: ${t}px` : ""};
  ${({wrapGap: t, column: e})=>typeof t == "number" ? `${e ? "column" : "row"}-gap: ${t}px` : ""};
  ${({noMinWidth: t})=>t ? "min-width: 0px" : ""};
`
  , yde = ae.div`
  display: flex;
  flex: auto;
`
  , yR = !Pf && !cL
  , l0 = ()=>yR || typeof window > "u" || typeof window.CSS > "u" ? "RGB" : window.CSS.supports("color", "lch(0% 0 0)") ? "LCH" : window.CSS.supports("color", "color(display-p3 0 0 0)") ? "P3" : "RGB";
var Tn;
(function(t) {
    t.HEX_REGEX_LOOSE = /#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?/i,
    t.HEX_REGEX = new RegExp(`^${t.HEX_REGEX_LOOSE.source}$`,"i"),
    t.HEX_REGEX_SMALL_LOOSE = /#?([a-f\d])([a-f\d])([a-f\d])/i,
    t.HEX_REGEX_SMALL = new RegExp(`^${t.HEX_REGEX_SMALL_LOOSE.source}$`,"i"),
    t.HEX_REGEX_STRICT = /^#([a-f\d]{6}|[a-f\d]{3})$/i,
    t.LCH_REGEX_LOOSE = /lch\((\d{1,3}(?:\.\d+)?)\% (\d{1,3}(?:\.\d+)?) (\d{1,3}(?:\.\d+)?)(?: \/ ([1|0](?:\.\d+)?)?)?\)/i,
    t.LCH_REGEX = new RegExp(`^${t.LCH_REGEX_LOOSE.source}$`,"i"),
    t.P3_REGEX_LOOSE = /color\(display-p3 (\d{1,3}(?:\.\d+)?)\ (\d{1,3}(?:\.\d+)?) (\d{1,3}(?:\.\d+)?)\)/i,
    t.P3_REGEX = new RegExp(`^${t.P3_REGEX_LOOSE.source}$`,"i"),
    t.ANY_COLOR_REGEX_LOOSE = new RegExp(`(?:${t.HEX_REGEX_LOOSE.source})|(?:${t.LCH_REGEX_LOOSE.source})|(?:${t.P3_REGEX_LOOSE.source})`,"i"),
    t.ANY_COLOR_REGEX = new RegExp(`^${t.ANY_COLOR_REGEX_LOOSE.source}$`,"i");
    const e = [.3457 / .3585, 1, (1 - .3457 - .3585) / .3585];
    function n(_, [M,Z,U,ce]) {
        return _ === "LCH" ? `lch(${H5(M)}% ${H5(Z)} ${H5(U)}${ce !== void 0 ? " / " + H5(ce) : ""})` : _ === "P3" ? k([M, Z, U, ce]) : m([M, Z, U, ce])
    }
    t.toCss = n;
    function r(_) {
        let M = t.HEX_REGEX.exec(_);
        if (M == null && (M = t.HEX_REGEX_SMALL.exec(_),
        M && (M[1] = M[1] + M[1],
        M[2] = M[2] + M[2],
        M[3] = M[3] + M[3])),
        M) {
            const Z = t.rgbToLch([parseInt(M[1], 16), parseInt(M[2], 16), parseInt(M[3], 16)]);
            return M[4] && !/ff/i.test(M[4]) && (Z[3] = parseInt(M[4], 16) / 255),
            Z
        } else {
            const Z = t.LCH_REGEX.exec(_);
            if (Z) {
                const U = [parseFloat(Z[1]), parseFloat(Z[2]), parseFloat(Z[3])];
                return Z[4] && Z[4] !== "1" && (U[3] = parseFloat(Z[4])),
                U
            } else {
                const U = t.P3_REGEX.exec(_);
                if (U)
                    return T([parseFloat(U[1]), parseFloat(U[2]), parseFloat(U[3])])
            }
        }
        return [0, 0, 0]
    }
    t.fromCss = r;
    function s(_, M) {
        return t.toCss(l0(), t.adjustTo(t.fromCss(_), {
            a: M
        }))
    }
    t.cssWithAlpha = s;
    function i(_) {
        const [M,Z,U] = _;
        return [M - Z * .075 > 65 ? 0 : 100, Math.min(Z / 2, Z), U]
    }
    t.getTextColor = i;
    function a(_, M) {
        const [ce,De,Ce] = q(_)
          , [Ie,ge,Te] = q(M)
          , Ge = Math.sqrt(De * De + Ce * Ce)
          , ln = Math.sqrt(ge * ge + Te * Te)
          , xr = ce < 16 ? .511 : .040975 * ce / (1 + .01765 * ce)
          , Vn = .0638 * Ge / (1 + .0131 * Ge) + .638;
        let Bn = Ge < 1e-6 ? 0 : Math.atan2(Ce, De) * 180 / Math.PI;
        for (; Bn < 0; )
            Bn += 360;
        for (; Bn >= 360; )
            Bn -= 360;
        const nr = Bn >= 164 && Bn <= 345 ? .56 + Math.abs(.2 * Math.cos(Math.PI * (Bn + 168) / 180)) : .36 + Math.abs(.4 * Math.cos(Math.PI * (Bn + 35) / 180))
          , Un = Ge * Ge * Ge * Ge
          , ua = Math.sqrt(Un / (Un + 1900))
          , ha = Vn * (ua * nr + 1 - ua)
          , Hh = ce - Ie
          , du = Ge - ln
          , ag = De - ge
          , og = Ce - Te
          , GE = ag * ag + og * og - du * du
          , cg = Hh / (1 * xr)
          , lg = du / (3 * Vn)
          , dg = ha;
        return Math.sqrt(cg * cg + lg * lg + GE / (dg * dg))
    }
    t.deltaE = a;
    function o(_, M) {
        const ln = _[0] / 100
          , xr = M[0] / 100;
        let Vn, Bn, nr;
        const Un = Iy(ln)
          , ua = Iy(xr)
          , ha = ua > Un;
        return Math.abs(ua - Un) < 5e-4 ? Bn = 0 : ha ? (Vn = ua ** .56 - Un ** .57,
        Bn = Vn * 1.14) : (Vn = ua ** .65 - Un ** .62,
        Bn = Vn * 1.14),
        Math.abs(Bn) < .1 ? nr = 0 : Bn > 0 ? nr = Bn - .027 : nr = Bn + .027,
        Math.abs(nr * 100)
    }
    t.apcaContrast = o;
    function l(_, M) {
        return o(_, M) > 38
    }
    t.sufficientContrastForText = l;
    function d(_) {
        return _[0] > 50
    }
    t.isBright = d;
    function u(_, M) {
        const [Z,U,ce,De=1] = _;
        return [$s(Z + (M.l ?? 0), 0, 100), $s(U + (M.c ?? 0), 0, 132), $s(ce + (M.h ?? 0), 0, 360), $s(De + (M.a ?? 0), 0, 1)]
    }
    t.adjust = u;
    function h(_, M) {
        const [Z,U,ce,De=1] = _;
        return [$s(M.l ?? Z, 0, 100), $s(M.c ?? U, 0, 132), $s(M.h ?? ce, 0, 360), $s(M.a ?? De, 0, 1)]
    }
    t.adjustTo = h;
    function f(_, M, Z) {
        const U = _[3] ?? 1
          , ce = M[3] ?? 1
          , [De,Ce,Ie] = X(q(_))
          , [ge,Te,Ge] = X(q(M))
          , ln = [De * (1 - Z) + Z * ge, Ce * (1 - Z) + Z * Te, Ie * (1 - Z) + Z * Ge]
          , [xr,Vn,Bn] = L(V(ln));
        return [$s(xr, 0, 100), $s(Vn, 0, 132), $s(Bn, 0, 360), (U + ce) / 2]
    }
    t.mix = f;
    function p(_, M, Z) {
        return t.toCss(l0(), t.mix(t.fromCss(_), t.fromCss(M), Z))
    }
    t.mixCss = p;
    function m(_) {
        const M = B(_).map(U=>U.toString(16).split(".")[0]).map(U=>U.length === 1 ? "0" + U : U)
          , Z = _[3] !== void 0 && _[3] !== 1 ? g((_[3] * 255).toString(16).split(".")[0]) : "";
        return `#${M[0]}${M[1]}${M[2]}${Z}`
    }
    t.lchToRgbString = m;
    function g(_) {
        return _.length === 1 ? "0" + _ : _
    }
    function C(_, M) {
        switch (M.format) {
        case "hex":
            switch (M.level) {
            case "loose":
                return t.HEX_REGEX_LOOSE.test(_);
            case "small":
                return t.HEX_REGEX_SMALL.test(_);
            default:
                return t.HEX_REGEX_STRICT.test(_)
            }
        case "p3":
            return t.P3_REGEX.test(_);
        case "lch":
            return t.LCH_REGEX.test(_);
        default:
            return t.ANY_COLOR_REGEX.test(_)
        }
    }
    t.isValidColor = C;
    function b(_) {
        return t.HEX_REGEX.test(_) ? _ : m(r(_))
    }
    t.cssToRgb = b;
    function k(_) {
        const M = S(_);
        return `color(display-p3 ${M[0]} ${M[1]} ${M[2]}${_[3] !== void 0 ? ` / ${_[3].toString(10)}` : ""})`
    }
    function S(_) {
        return P(A(X(q(_)))).map(fe).map(M=>$s(M, 0, 1))
    }
    function D(_) {
        return L(V(E(_e(we(_)))))
    }
    t.rgbToLch = D;
    function R(_, M, Z, U) {
        let ce = M;
        const De = []
          , Ce = .618033988749895;
        for (let Ie = 0; Ie < _; Ie++)
            ce += Ce,
            ce %= 1,
            De[Ie] = m([Z * 100, U * 100, ce * 360]);
        return De
    }
    t.palette = R;
    function T(_) {
        return L(V(E(I(we(_)))))
    }
    function B(_) {
        return W(q(_))
    }
    function z([[_,M,Z],[U,ce,De],[Ce,Ie,ge]], [Te,Ge,ln]) {
        return [_ * Te + M * Ge + Z * ln, U * Te + ce * Ge + De * ln, Ce * Te + Ie * Ge + ge * ln]
    }
    const W = _=>{
        if (_[0] === 100 && _[1] === 0 && _[2] === 0)
            return [255, 255, 255];
        const M = X(_)
          , Z = A(M);
        return me(Q(Z)).map(U=>$s(U, 0, 255))
    }
    ;
    function fe(_) {
        const M = _ < 0 ? -1 : 1
          , Z = Math.abs(_);
        return Z > .0031308 ? M * (1.055 * Math.pow(Z, 1 / 2.4) - .055) : 12.92 * _
    }
    function me(_) {
        return _.map(M=>255 * fe(M))
    }
    function _e(_) {
        return z([[.41239079926595934, .357584339383878, .1804807884018343], [.21263900587151027, .715168678767756, .07219231536073371], [.01933081871559182, .11919477979462598, .9505321522496607]], _)
    }
    function I(_) {
        return z([[.4865709486482162, .26566769316909306, .1982172852343625], [.2289745640697488, .6917385218365064, .079286914093745], [0, .04511338185890264, 1.043944368900976]], _)
    }
    function Q(_) {
        return z([[3.2409699419045226, -1.537383177570094, -.4986107602930034], [-.9692436362808796, 1.8759675015077202, .04155505740717559], [.05563007969699366, -.20397695888897652, 1.0569715142428786]], _)
    }
    function P(_) {
        return z([[2.493496911941425, -.9313836179191239, -.40271078445071684], [-.8294889695615747, 1.7626640603183463, .023624685841943577], [.03584583024378447, -.07617238926804182, .9568845240076872]], _)
    }
    function A(_) {
        return z([[.9554734527042182, -.023098536874261423, .0632593086610217], [-.028369706963208136, 1.0099954580058226, .021041398966943008], [.012314001688319899, -.020507696433477912, 1.3303659366080753]], _)
    }
    function E(_) {
        return z([[1.0479298208405488, .022946793341019088, -.05019222954313557], [.029627815688159344, .990434484573249, -.01707382502938514], [-.009243058152591178, .015055144896577895, .7518742899580008]], _)
    }
    function V(_) {
        const M = .008856451679035631
          , Z = 24389 / 27
          , ce = _.map((De,Ce)=>De / e[Ce]).map(De=>De > M ? Math.cbrt(De) : (Z * De + 16) / 116);
        return [116 * ce[1] - 16, 500 * (ce[0] - ce[1]), 200 * (ce[1] - ce[2])]
    }
    function X(_) {
        const M = 903.2962962962963
          , Z = 216 / 24389
          , U = [];
        return U[1] = (_[0] + 16) / 116,
        U[0] = _[1] / 500 + U[1],
        U[2] = U[1] - _[2] / 200,
        [Math.pow(U[0], 3) > Z ? Math.pow(U[0], 3) : (116 * U[0] - 16) / M, _[0] > M * Z ? Math.pow((_[0] + 16) / 116, 3) : _[0] / M, Math.pow(U[2], 3) > Z ? Math.pow(U[2], 3) : (116 * U[2] - 16) / M].map((De,Ce)=>De * e[Ce])
    }
    function L(_) {
        const M = Math.atan2(_[2], _[1]) * 180 / Math.PI;
        return [_[0], Math.sqrt(Math.pow(_[1], 2) + Math.pow(_[2], 2)), M >= 0 ? M : M + 360, 1]
    }
    function q(_) {
        return [_[0], _[1] * Math.cos(_[2] * Math.PI / 180), _[1] * Math.sin(_[2] * Math.PI / 180)]
    }
    function oe(_) {
        const M = _ < 0 ? -1 : 1
          , Z = Math.abs(_);
        return Z < .04045 ? _ / 12.92 : M * Math.pow((Z + .055) / 1.055, 2.4)
    }
    function we(_) {
        return _.map(M=>oe(M / 255))
    }
}
)(Tn || (Tn = {}));
function H5(t) {
    return parseFloat(t.toFixed(3))
}
const _y = .022
  , CR = 1.414;
function Iy(t) {
    return t >= _y ? t : t + (_y - t) ** CR
}
function $s(t, e, n) {
    return Math.max(e, Math.min(n, t))
}
const Wf = ()=>`
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
`
  , bR = t=>`
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: ${t};
  overflow: hidden;
  overflow-wrap: anywhere;
`;
function w8(t, e, n, r, s=!0) {
    return `
  ${s ? "position: relative;" : ""}
  &::before {
    position: absolute;
    content: "";
    top: -${t}px;
    right: -${e ?? t}px;
    left: -${r ?? t}px;
    bottom: -${n ?? t}px;
  }
`
}
const vR = ()=>`
  -ms-overflow-style: none !important;  // IE 10+
  overflow: -moz-scrollbars-none !important;  // Firefox
  scrollbar-width: none !important; // Firefox
  &::-webkit-scrollbar {
    display: none;
  }
`
  , Cde = ()=>`
   appearance: none;
   background: none;
   border: none;
   padding: 0;
   margin: 0;
   font: inherit;
   color: inherit;
   -webkit-tap-highlight-color: transparent;
 `;
function Ni(t) {
    return `var(--font-size-${t})`
}
function jc(t) {
    return `${F1()} solid ${t}`
}
function d0(t, e="solid") {
    return n=>`${W3 ? "0.5" : "1"}px ${e} ${wR(t)(n)}`
}
function wR(t) {
    return e=>`${e.theme.color[W3 ? `${t}Thin` : `${t}`]}`
}
function kR() {
    return W3 ? .5 : 1
}
function F1() {
    return W3 ? "0.5px" : "1px"
}
function bde() {
    return "13vh"
}
function vde(t) {
    return `
  transition: 300ms;
  transition-property: ${t};
  transition-timing-function: cubic-bezier(0.43, 0.07, 0.59, 0.94);
  `
}
var kk;
const W3 = typeof window < "u" && ((kk = window.matchMedia) == null ? void 0 : kk.call(window, "only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi)").matches) || !1
  , xR = l0()
  , wde = t=>e=>Tn.toCss(xR, Tn.adjustTo(Tn.fromCss(t ? e.theme.focusColor : e.theme.color.labelMuted), {
    a: t ? .4 : .2
}))
  , kde = Qt`
  outline-offset: calc(-1 * var(--focus-ring-width));
`
  , Px = Qt`
  outline: var(--focus-ring-outline);
`;
var xde = function() {};
function Dde(t) {
    for (var e = [], n = 1; n < arguments.length; n++)
        e[n - 1] = arguments[n];
    t && t.addEventListener && t.addEventListener.apply(t, e)
}
function Sde(t) {
    for (var e = [], n = 1; n < arguments.length; n++)
        e[n - 1] = arguments[n];
    t && t.removeEventListener && t.removeEventListener.apply(t, e)
}
var DR = typeof window < "u"
  , SR = function(t, e) {
    return e !== void 0 ? e : DR ? window.matchMedia(t).matches : !1
}
  , _R = function(t, e) {
    var n = y.useState(SR(t, e))
      , r = n[0]
      , s = n[1];
    return y.useEffect(function() {
        var i = !0
          , a = window.matchMedia(t)
          , o = function() {
            i && s(!!a.matches)
        };
        return a.addListener(o),
        s(a.matches),
        function() {
            i = !1,
            a.removeListener(o)
        }
    }, [t]),
    r
};
const IR = _R;
function $x(t) {
    var e = y.useRef();
    return y.useEffect(function() {
        e.current = t
    }),
    e.current
}
var Y2;
(function(t) {
    t.phone = "phone",
    t.tablet = "tablet",
    t.laptop = "laptop",
    t.normal = "normal",
    t.large = "large",
    t.xlarge = "xlarge"
}
)(Y2 || (Y2 = {}));
const fi = {
    phone: 640,
    tablet: 768,
    laptop: 1024,
    large: 1400,
    xlarge: 1800
}
  , _de = "laptop"
  , Cc = t=>{
    let e;
    switch (t) {
    case "phone":
        e = `(max-width: ${fi.phone}px)`;
        break;
    case "tablet":
        e = `(max-width: ${fi.tablet}px)`;
        break;
    case "laptop":
        e = `(max-width: ${fi.laptop}px)`;
        break;
    case "large":
        e = `(min-width: ${fi.large}px)`;
        break;
    case "xlarge":
        e = `(min-width: ${fi.xlarge}px)`;
        break;
    default:
        e = `(min-width: ${fi.laptop + 1}px)`;
        break
    }
    return IR(e)
}
  , Ide = ()=>{
    const t = Cc("phone")
      , e = Cc("tablet")
      , n = Cc("laptop")
      , r = Cc("large")
      , s = Cc("xlarge");
    return t ? "phone" : e ? "tablet" : n ? "laptop" : r ? "large" : s ? "xlarge" : "normal"
}
;
var vo;
(function(t) {
    t[t.elevated = 10] = "elevated",
    t[t.onboarding = 20] = "onboarding",
    t[t.detailsPaneBackdrop = 80] = "detailsPaneBackdrop",
    t[t.detailsPane = 90] = "detailsPane",
    t[t.sidebarBackdrop = 95] = "sidebarBackdrop",
    t[t.sidebar = 96] = "sidebar",
    t[t.modalBackdrop = 100] = "modalBackdrop",
    t[t.proTip = 200] = "proTip",
    t[t.slideOver = 250] = "slideOver",
    t[t.fastCreate = 300] = "fastCreate",
    t[t.popoverBackdrop = 400] = "popoverBackdrop",
    t[t.popover = 500] = "popover",
    t[t.commandMenu = 650] = "commandMenu",
    t[t.dialog = 700] = "dialog",
    t[t.popoverBackdropInDialog = 701] = "popoverBackdropInDialog",
    t[t.popoverInDialog = 702] = "popoverInDialog",
    t[t.peek = 750] = "peek",
    t[t.toast = 800] = "toast",
    t[t.dndDragLayer = 1e3] = "dndDragLayer",
    t[t.tooltip = 1100] = "tooltip",
    t[t.skipToContent = 1200] = "skipToContent"
}
)(vo || (vo = {}));
const l6 = t=>`@media (max-width: ${t}px)`
  , d6 = t=>`@media (min-width: ${t}px)`
  , Ede = {
    phone: l6(fi.phone),
    tablet: l6(fi.tablet),
    laptop: l6(fi.laptop),
    normal: d6(fi.laptop + 1),
    large: d6(fi.large),
    xlarge: d6(fi.xlarge)
}
  , gs = us ? "active" : "hover"
  , ze = t=>e=>e.theme.color[t]
  , Ade = t=>e=>{
    var n;
    return ((n = e.theme.baseTheme) == null ? void 0 : n.color[t]) ?? e.theme.color[t]
}
  , Fx = (t,e)=>`var(--font-${t}${e ? `,${e}` : ""})`
  , u6 = t=>e=>e.theme[ER[t]]
  , pn = t=>`var(--speed-${t})`
  , jde = (t,e,n)=>r=>{
    const s = Tn.fromCss(r.theme.color[t])
      , i = Tn.fromCss(r.theme.color[e])
      , a = Tn.mix(s, i, n);
    return Tn.toCss(l0(), a)
}
  , ER = {
    low: "shadowLow",
    medium: "shadowMedium",
    high: "shadowHigh",
    page: "shadowPage",
    inset: "shadowInset"
}
  , nc = ae("input").attrs(t=>({
    "data-1p-ignore": t.allowPMAutofill !== !0
}))`
  height: ${us ? 36 : 32}px;
  padding: ${t=>t.theme.inputPadding};
  background: ${t=>t.theme.inputBackground};
  border: 1px solid ${t=>t.noBorder ? "transparent" : t.theme.color.bgBorderSolid};
  border-radius: ${t=>t.theme.inputBorderRadius};
  font-size: ${t=>t.theme.inputFontSize};
  color: ${t=>t.theme.color.labelTitle};
  margin: 0;
  appearance: none;
  transition: border ${pn("highlightFadeOut")};
  -webkit-app-region: no-drag;

  &:disabled {
    color: ${t=>t.theme.color.labelMuted};
  }

  &::placeholder {
    color: ${t=>t.theme.color.labelFaint};
  }

  &:not(:disabled):${gs} {
    border-color: ${t=>t.theme.highlightVariant(t.theme.color.bgBorderSolid)};
    transition-duration: ${pn("highlightFadeIn")};
  }

  ${t=>t.type !== "checkbox" && t.type !== "radio" ? "outline-offset: -1px;" : null}

  ${t=>t.type === "checkbox" ? `
    height: auto;
  ` : ""};

  ${t=>t.appearance === "small" ? `
    font-size: ${Ni("mini")};
    height: 26px;
  ` : ""};

  ${t=>t.appearance === "large" ? `
    height: 44px;
    padding: 12px;
    border-radius: 6px;
  ` : ""};

  ${t=>t.appearance === "xlarge" ? `
    height: 48px;
    padding: 12px;
    border-radius: 6px;
  ` : ""};

  ${t=>t.stretched ? "width: 100%;" : ""};
`
  , AR = ae(nc).attrs({
    as: "textarea"
})`
  appearance: none;
  height: 64px;
  resize: none;
`
  , jR = ae(nc).attrs({
    as: "select"
})`
  height: ${us ? 36 : 32}px;
  padding: 6px 24px 6px 12px;
  border: 1px solid ${t=>t.theme.color.bgBorderSolid};
  border-radius: ${t=>t.theme.inputBorderRadius};
  font-size: ${t=>t.theme.inputFontSize};
  color: ${t=>t.theme.color.labelTitle};
  margin: 0;
  appearance: none;
  transition: border ${pn("highlightFadeOut")};

  // prettier-ignore
  &:${gs} {
    background-color: ${t=>t.theme.color.controlSecondaryHover};
    transition-duration: ${pn("highlightFadeIn")};
  }

  background-color: ${t=>t.theme.color.controlSecondary};
  background-image: url("${t=>MR(t.theme.color.labelMuted)}");
  background-position: ${us ? "calc(100% + 6px) 14px" : "calc(100% + 4px) 12px"};
  background-size: 24px 24px;
  background-repeat: no-repeat;

  ${t=>t.appearance === "small" ? `
    font-size: ${Ni("mini")};
    padding: 3px 24px 3px 12px;
    height: 24px;
    background-position: calc(100% + 4px) 9px;
    background-size: 20px 20px;
  ` : ""};
`
  , Mde = ae(nc).attrs({
    type: "checkbox"
})`
  -webkit-appearance: none;
  background-color: transparent;
  flex-shrink: 0;
  height: 14px;
  width: 14px;
  padding: 2px;
  margin: 0 8px 0 0;
  vertical-align: middle;
  transition: all 80ms ease-out;
  fill-opacity: 0;
  border: 1px solid ${t=>t.theme.color.labelFaint};
  border-radius: 3px;
  background-position: 1px 2px;
  box-shadow: none;

  ${t=>t.checked && `background-color: ${t.theme.color.controlPrimary};
     border-color: ${t.theme.color.controlPrimary};
     background-image: url("${LR(t.theme.color.controlLabel)}");
     background-repeat: no-repeat;
     border: 1px solid ${t.theme.color.controlPrimary};
   `};

  ${t=>t.indeterminate && `background-color: ${t.theme.color.labelFaint};
     border-color: ${t.theme.color.labelFaint};
     background-image: url("${TR(t.theme.color.controlLabel)}");
     background-repeat: no-repeat;
     border: 1px solid ${t.theme.color.labelFaint};
     background-position: 3px 5px;
   `};

  &:disabled {
    opacity: 0.5;
    background-color: ${t=>t.theme.color.bgBorderSolidThin};
    border-color: ${t=>t.theme.color.labelFaint};
  }

  &:hover:not(:disabled) {
    border: 1px solid
      ${t=>(t.checked,
t.theme.color.controlPrimaryHover)};
  }
`
  , Tde = ae(nc).attrs({
    type: "radio"
})`
  -webkit-appearance: none;
  background-color: transparent;
  flex-shrink: 0;
  height: 16px;
  width: 16px;
  padding: 2px;
  margin: 0 8px 0 0;
  transition: all 80ms ease-out;
  border: 1px solid ${t=>t.theme.color.bgBorderSolid};
  border-radius: 50%;
  box-shadow: none;
  position: relative;

  &:checked::after {
    content: "";
    position: absolute;
    height: 8px;
    width: 8px;
    border-radius: 50%;
    top: 3px;
    left: 3px;
    background-color: ${t=>t.theme.color.controlPrimary};
  }

  &:hover:not(:disabled) {
    border: 1px solid ${t=>t.checked ? t.theme.color.controlPrimary : t.theme.color.labelFaint};
  }
`
  , Gf = t=>encodeURI(t).replace(/#/g, "%23").replace(/\(/g, "%28").replace(/\)/g, "%29")
  , MR = t=>Gf('data:image/svg+xml;utf8,<svg width="32" height="32" viewBox="0 0 32 32" fill="color" xmlns="http://www.w3.org/2000/svg"><path d="M10.1611 0.314094L5.99463 4.48054L1.82819 0.314094C1.4094 -0.104698 0.732886 -0.104698 0.314094 0.314094C-0.104698 0.732886 -0.104698 1.4094 0.314094 1.82819L5.24295 6.75705C5.66174 7.17584 6.33825 7.17584 6.75705 6.75705L11.6859 1.82819C12.1047 1.4094 12.1047 0.732886 11.6859 0.314094C11.2671 -0.0939597 10.5799 -0.104698 10.1611 0.314094Z" transform="translate(0.77832 0.998535)"/></svg>'.replace("color", t))
  , TR = t=>Gf('data:image/svg+xml;utf8,<svg width="6" height="2" viewBox="0 0 6 2" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="6" height="1.5" fill="color" /></svg>'.replace("color", t))
  , LR = t=>Gf('data:image/svg+xml;utf8,<svg width="10" height="9" viewBox="0 0 10 8" xmlns="http://www.w3.org/2000/svg" fill="color"><path d="M3.46975 5.70757L1.88358 4.1225C1.65832 3.8974 1.29423 3.8974 1.06897 4.1225C0.843675 4.34765 0.843675 4.7116 1.06897 4.93674L3.0648 6.93117C3.29006 7.15628 3.65414 7.15628 3.8794 6.93117L8.93103 1.88306C9.15633 1.65792 9.15633 1.29397 8.93103 1.06883C8.70578 0.843736 8.34172 0.843724 8.11646 1.06879C8.11645 1.0688 8.11643 1.06882 8.11642 1.06883L3.46975 5.70757Z" stroke-width="0.2" /></svg>'.replace("color", t))
  , Pc = Ni
  , Xe = ae("span").withConfig({
    shouldForwardProp: t=>!["selectable", "color", "type"].includes(t) && Ek(t)
})`
  font-style: normal;
  line-height: normal;
  font-weight: normal;
  ${t=>t.align ? `text-align: ${t.align};` : ""}
  ${t=>typeof t.truncate == "number" ? bR(t.truncate) : t.truncate ? Wf() : ""};
  ${t=>t.nowrap ? "white-space: nowrap;" : ""};
  ${t=>t.overflowWrap ? `overflow-wrap: ${t.overflowWrap};` : ""};
  ${t=>t.transform ? `text-transform: ${t.transform};` : ""};
  ${t=>t.wrap ? `text-wrap: ${t.wrap};` : ""};

  color: ${t=>t.color === "currentColor" ? "currentColor" : t.theme.color[t.color || "labelTitle"]};

  & b {
    font-weight: 500;
    color: ${t=>t.theme.color.labelBase};
  }

  ${t=>OR(t.type ?? "regular")}

  ${t=>t.selectable ? "user-select: text;" : ""};

  ${t=>t.tabularNums ? "font-variant-numeric: tabular-nums;" : ""};

  ${t=>t.fontFamily === "display" ? `
          font-family: ${Fx("display")};
          font-feature-settings: "calt";
        ` : ""}
`;
Xe.defaultProps = {
    type: "regular",
    align: "left",
    selectable: !1,
    truncate: !1
};
function OR(t) {
    let e = "normal"
      , n = "normal"
      , r = ""
      , s = "";
    return (t.endsWith("Plus") || t === "title2" || t === "title3") && (n = "500",
    (t === "smallPlus" || t === "regularPlus") && (r = `& b {
        font-weight: 700;
       }`)),
    t === "regular" || t === "regularPlus" ? e = "1.4375rem" : t === "title2" ? e = "2rem" : t === "title1" && (e = "2.875rem"),
    (t === "title2" || t === "title3") && (s = "-0.01rem"),
    Qt`
    line-height: ${e};
    font-size: ${Ni(t)};
    font-weight: ${n};
    ${r}
    ${s ? `letter-spacing: ${s};` : ""}
  `
}
class Lde extends Error {
    constructor(e) {
        super(`Unreachable case: ${e}`)
    }
}
function Ode(t) {}
const RR = Qt`
  display: inline-flex;
  // because we use an inline display we need to specify "top" here so that buttons don't try to incorrectly align with
  // texts baseline which can throw alignment off even in centered flex containers
  vertical-align: top;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  flex-shrink: 0;
  margin: 0;
  border-radius: 5px;
  font-weight: 500;
  line-height: normal;
  transition-property: border, background-color, color, opacity;
  transition-duration: ${pn("highlightFadeOut")};
  user-select: none;
  -webkit-app-region: no-drag;

  svg {
    transition-property: fill;
    transition-duration: ${pn("highlightFadeOut")};
  }

  // prettier-ignore
  &:not(:disabled):${gs} {
    transition-duration: ${pn("highlightFadeIn")};
    svg {
      transition-duration: ${pn("highlightFadeIn")};
    }
  }

  &:disabled {
    cursor: default;
    opacity: 0.6;
  }
`
  , PR = xk(function({kind: e, active: n=!1}) {
    switch (e) {
    case "primary":
        return Qt`
          border: ${r=>jc(r.theme.color.controlPrimaryHover)};
          box-shadow: ${u6("low")};
          background-color: ${ze(n ? "controlPrimaryHover" : "controlPrimary")};
          color: ${ze("controlLabel")};
          ${dc} {
            background-color: ${ze("controlPrimaryHover")};
          }
          &:focus-visible {
            outline-offset: 2px;
          }
        `;
    case "secondary":
        return Qt`
          border: ${d0("bgBorderSolid")};
          box-shadow: ${u6("low")};
          background-color: ${ze(n ? "controlSecondaryHover" : "controlSecondary")};
          color: ${ze(n ? "labelTitle" : "labelBase")};
          ${dc} {
            background-color: ${ze("controlSecondaryHover")};
          }
          &:disabled {
            color: ${ze("labelMuted")};
          }
        `;
    case "ghost":
        return Qt`
          border: 1px dashed ${r=>r.theme.highlightVariant(r.theme.color.bgBorderSolid)};
          background-color: transparent;
          color: ${ze("labelBase")};
          ${dc} {
            color: ${ze("labelTitle")};
            background-color: ${ze("controlTertiaryHover")};
            ${Xe} {
              color: ${ze("labelTitle")};
            }
            svg {
              fill: ${ze("labelTitle")};
            }
          }
          &:focus-visible {
            outline-offset: 2px;
          }
        `;
    case "borderless":
        return Qt`
          border: ${jc("transparent")};
          background-color: transparent;
          color: ${ze("labelBase")};
          ${dc} {
            color: ${ze("labelTitle")};
            background-color: ${ze("controlTertiaryHover")};
            ${Xe} {
              color: ${ze("labelTitle")};
            }
            svg {
              fill: ${ze("labelTitle")};
            }
          }
        `;
    case "link":
        return Qt`
          border: ${jc("transparent")};
          box-shadow: none;
          background-color: transparent;
          color: ${ze(n ? "labelTitle" : "labelBase")};
          ${dc} {
            color: ${ze("labelTitle")};
            svg {
              fill: ${ze("labelTitle")};
            }
          }
        `;
    case "dangerous":
        return Qt`
          --focus-ring-color: ${ze("redBaseHover")};
          --focus-ring-outline: var(--focus-ring-width) solid ${ze("redBaseHover")};
          border: ${r=>jc(r.theme.color.redBaseHover)};
          box-shadow: ${u6("low")};
          background-color: ${ze(n ? "redBaseHover" : "redBase")};
          color: ${ze("controlLabel")};
          ${dc} {
            background-color: ${ze("redBaseHover")};
          }
          &:focus-visible {
            outline-offset: 2px;
          }
        `;
    case "card":
        return Qt`
          width: 100%;
          flex-direction: column;
          gap: 4px;
          border: ${d0("bgBorderSolid")};
          background-color: ${n ? ze("bgShade") : "transparent"};
          color: ${ze(n ? "labelBase" : "labelMuted")};
          svg {
            fill: ${ze(n ? "labelBase" : "labelMuted")};
          }
          ${dc} {
            ${n ? "" : Qt`
                  background-color: ${ze("bgShadeHover")};
                  border-color: ${ze("bgBorderSolidHover")};
                `}
            color: ${ze("labelBase")};
            svg {
              fill: ${ze("labelBase")};
            }
          }
          &:disabled {
            color: ${ze("labelMuted")};
          }
        `;
    default:
        throw void 0
    }
}, ({kind: t, active: e=!1})=>`${t}-${e}`);
function $R(t, e) {
    switch (t) {
    case "small":
        return Qt`
        min-width: ${Rl ? 28 : 24}px;
        height: ${Rl ? 28 : 24}px;
        padding: ${e ? "0 2px" : "0 8px"};
        font-size: ${Ni("mini")};
      `;
    case "medium":
        return Qt`
        min-width: ${Rl ? 32 : 28}px;
        height: ${Rl ? 32 : 28}px;
        padding: ${e ? "0 2px" : "0 14px"};
        font-size: ${Ni("mini")};
      `;
    case "normal":
        return Qt`
        min-width: ${Rl ? 36 : 32}px;
        height: ${Rl ? 36 : 32}px;
        padding: ${e ? "0 2px" : "0 14px"};
        font-size: ${Ni("small")};
      `;
    case "large":
        return Qt`
        min-width: 32px;
        height: 44px;
        padding: ${e ? "0 2px" : "0 21px"};
        font-size: ${Ni("small")};
      `;
    default:
        throw void 0
    }
}
function FR(t) {
    return t.icon !== void 0 ? `> *:first-child {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      ${t.size === "medium" ? `max-width: 14px;
        max-height: 14px;
        ${t.$onlyIcon ? "&:not(:only-child) { margin-right: 8px; }" : "margin-right: 8px;"}` : t.size === "normal" ? `max-width: 18px;
        max-height: 18px;
        ${t.$onlyIcon ? "&:not(:only-child) { margin-right: 10px; }" : "margin-right: 10px;"}` : t.size === "small" ? `max-width: 14px;
        max-height: 14px;
        ${t.$onlyIcon ? "&:not(:only-child) { margin-right: 6px; }" : "margin-right: 6px;"}` : ""};
      transition-property: fill, stroke;
      transition-duration: ${pn("highlightFadeOut")};
      svg {
        ${t.monotoneIcon ? "fill: currentColor;" : ""}
      }
    }
  &:enabled:${gs} svg {
    transition-duration: ${pn("highlightFadeIn")};
  }` : ""
}
function dc() {
    return `&:not(:disabled, [data-disabled="true"]):${gs},
  [data-menu-open="true"] > &,
  &[data-menu-open="true"]`
}
const js = {
    rootCss: RR,
    kindCss: PR,
    sizeCss: $R,
    iconCss: FR
}
  , Rl = us
  , Qi = $a.forwardRef((t,e)=>{
    const {icon: n, monotoneIcon: r=!0, children: s, ...i} = t;
    return c.jsxs(Nx, {
        ref: e,
        icon: n,
        monotoneIcon: r,
        $onlyIcon: !s || t.onlyIcon,
        ...i,
        children: [t.icon ? c.jsx("span", {
            "aria-hidden": t.onlyIcon ? "false" : "true",
            children: t.icon
        }) : null, t.onlyIcon ? null : s]
    })
}
)
  , Nx = ae.button.withConfig({
    shouldForwardProp: t=>!["monotoneIcon", "kind", "size", "stretched", "active", "onlyIcon"].includes(t) && Ek(t)
})`
  ${js.rootCss}
  border: 1px solid transparent;
  position: relative;

  ::placeholder {
    color: ${t=>t.theme.color.labelFaint};
  }

  ${t=>t.stretched ? "width: 100%;" : ""};
  ${t=>js.kindCss({
    kind: t.kind ?? "primary",
    active: t.active
})}
  ${t=>js.sizeCss(t.size ?? "normal", t.$onlyIcon)}
  ${t=>js.iconCss({
    size: t.size ?? "normal",
    $onlyIcon: t.$onlyIcon,
    icon: t.icon,
    monotoneIcon: t.monotoneIcon
})};
`;
Nx.defaultProps = {
    kind: "primary",
    type: "button",
    size: "normal"
};
function Kf() {
    const [t,e] = y.useState(NR);
    return y.useEffect(()=>{
        var s;
        const n = window.matchMedia(Vx)
          , r = ()=>{
            e(n.matches)
        }
        ;
        return (s = n.addEventListener) == null || s.call(n, "change", r),
        ()=>{
            var i;
            (i = n.removeEventListener) == null || i.call(n, "change", r)
        }
    }
    , []),
    t
}
function NR() {
    return typeof window > "u" ? !1 : window.matchMedia(Vx).matches
}
const Vx = "(prefers-reduced-motion: reduce)";
function Bx(t, e, n) {
    const [r,s] = y.useState(t != null && t.current ? Ey(t == null ? void 0 : t.current, e) : void 0);
    return y.useLayoutEffect(()=>{
        const i = t == null ? void 0 : t.current;
        if (!i) {
            s(void 0);
            return
        }
        const a = o=>{
            s(Ey(o || i, e))
        }
        ;
        return a(),
        BR(t, a)
    }
    , [t, t == null ? void 0 : t.current, ...n || []]),
    r
}
function Ux(t) {
    return Bx(t, "clientHeight")
}
function VR(t) {
    return Bx(t, "clientWidth")
}
function Ey(t, e) {
    if (!t)
        return;
    let n = 0;
    if (e === "scrollHeight") {
        const r = t.style.height;
        t.style.height = "0px",
        n = t.scrollHeight,
        t.style.height = r
    } else if (e === "scrollWidth") {
        const r = t.style.width;
        t.style.width = "0px",
        n = t.scrollWidth,
        t.style.width = r
    } else if (e === "clientRectWidth" || e === "clientRectHeight" || e === "clientRectRight" || e === "clientRectLeft") {
        const r = t.getBoundingClientRect();
        if (e === "clientRectWidth")
            return r.width;
        if (e === "clientRectHeight")
            return r.height;
        if (e === "clientRectRight")
            return r.right;
        if (e === "clientRectLeft")
            return r.left
    } else
        n = t[e];
    return n
}
function BR(t, e) {
    const n = t == null ? void 0 : t.current;
    if (!(t == null || n == null))
        if (typeof ResizeObserver == "function") {
            let r = new ResizeObserver(()=>{
                window.requestAnimationFrame(()=>{
                    n === (t == null ? void 0 : t.current) && e(n)
                }
                )
            }
            );
            return r.observe(n),
            ()=>{
                r == null || r.disconnect(),
                r = null
            }
        } else {
            const r = ()=>e();
            return window.addEventListener("resize", r),
            ()=>{
                window.removeEventListener("resize", r)
            }
        }
}
function UR() {
    const [,t] = y.useState(0);
    return y.useCallback(()=>t(e=>e + 1), [])
}
function HR(t) {
    const {open: e, align: n="top", speed: r="regular", onOpen: s, onClose: i, children: a, property: o="height", containerStyles: l, fadeOut: d=!1, config: u={}, minSize: h=0, ...f} = t
      , p = y.useRef(null)
      , m = y.useRef(null)
      , g = Ux(m)
      , C = VR(m)
      , b = Kf()
      , k = UR()
      , S = y.useRef(e);
    y.useEffect(()=>{
        e && (S.current = !0)
    }
    , [e]);
    const D = o === "height" ? g : C
      , R = If({
        to: {
            [o]: e ? 1 : 0,
            opacity: e || !d ? 1 : 0
        },
        config: {
            tension: r === "regular" ? 2e3 : r === "dev" ? 20 : 2500,
            friction: r === "regular" ? 100 : r === "dev" ? 20 : 80,
            precision: .01,
            ...u
        },
        immediate: b,
        onRest: ()=>{
            e ? s == null || s(p) : (S.current = !1,
            k(),
            i == null || i(p))
        }
    });
    let T, B;
    D !== void 0 ? (T = R[o].to(W=>W === 1 ? "auto" : h + W * (D - h)),
    B = R[o].to(W=>W === 1 ? "visible" : "hidden")) : (T = e ? "auto" : 0,
    B = e ? "visible" : "hidden");
    const z = l ? {
        [o]: T,
        overflow: B,
        opacity: R.opacity,
        ...l
    } : {
        [o]: T,
        overflow: B,
        opacity: R.opacity
    };
    return c.jsx(zR, {
        ref: p,
        align: n,
        open: e || h > 0,
        style: z,
        $property: o,
        children: c.jsx("div", {
            ...f,
            ref: m,
            children: e || h > 0 || S.current ? a() : null
        })
    })
}
const zR = ae(r5.div)`
  position: relative;
  flex-shrink: 0;
  ${t=>t.open ? "" : "pointer-events: none;"}

  ${t=>t.align !== "top" ? `display: flex;
     align-items: ${t.align === "center" ? "center" : "flex-end"};

     & > div {
       ${t.$property === "height" ? "width" : "height"}: 100%;
     }` : ""}
`
  , ZR = y.memo(t=>{
    const {align: e, speed: n, children: r, ...s} = t
      , i = qR(r);
    return c.jsx(HR, {
        align: e,
        speed: n,
        open: !!r,
        ...s,
        children: ()=>r || i
    })
}
);
function qR(t) {
    const e = y.useRef();
    return y.useEffect(()=>{
        t && (e.current = t)
    }
    ),
    e.current
}
const WR = y.forwardRef(function(e, n) {
    const r = y.useRef(null)
      , s = Kc([n, r].filter(Boolean))
      , i = e.focusSelectors || "button"
      , {onArrowNavigationKeyDown: a} = GR(r, i);
    return c.jsx("div", {
        ref: s,
        onKeyDown: o=>{
            var l;
            (l = e.onKeyDown) == null || l.call(e, o),
            a(o)
        }
        ,
        className: e.className,
        style: e.style,
        children: e.children
    })
});
function GR(t, e) {
    return {
        onArrowNavigationKeyDown: y.useCallback(r=>{
            if (r.key === "ArrowLeft" || r.key === "ArrowRight") {
                if (r.preventDefault(),
                !t.current)
                    return;
                let s = "left";
                r.key === "ArrowLeft" ? s = "left" : r.key === "ArrowRight" && (s = "right");
                const i = t.current.querySelectorAll(e)
                  , a = self.document.activeElement;
                let o = !0;
                for (let l = 0; l < i.length; l++)
                    if (i[l] === a) {
                        o = !1;
                        break
                    }
                if (!a || o) {
                    s === "left" ? i[i.length - 1].focus() : i[0].focus();
                    return
                }
                for (let l = 0; l < i.length; l++)
                    if (i[l] === a) {
                        const u = s === "left" ? l - 1 : l + 1
                          , h = i[u];
                        h && h.focus();
                        break
                    }
            }
        }
        , [e])
    }
}
const KR = {
    small: 420,
    default: 480,
    medium: 562,
    large: 700,
    xlarge: 860,
    xxlarge: 1020
}
  , vc = class vc {
    static show(e, n) {
        return new Promise(r=>{
            const s = {
                content: e,
                resolve: r,
                originalOnResult: e.props.onResult,
                options: n,
                key: vc.key++
            };
            vc.presentDialog ? vc.presentDialog(s) : (F.error("Tried to show a dialog before DialogPresenter was mounted"),
            r(void 0))
        }
        )
    }
}
;
vc.widths = KR,
vc.key = 0;
let Q2 = vc;
var u0;
(function(t) {
    t.confirm = "confirm",
    t.cancel = "cancel",
    t.reject = "reject"
}
)(u0 || (u0 = {}));
class k8 {
    constructor(e) {
        this.props = {
            confirmButtonType: "primary",
            showCancelButton: !0,
            ...e,
            onResult: ()=>{}
        }
    }
    show() {
        return new Promise(e=>{
            let n = "";
            const r = s=>`[data-type="${s}"]`;
            this.props.confirmButtonType === "dangerous" && this.props.showCancelButton && (this.props.rejectButtonTitle ? n = r("reject") : n = r("cancel")),
            n || (n = r("confirm")),
            Q2.show(c.jsx(YR, {
                ...this.props
            }), {
                focusTrapOptions: {
                    initialFocus: n,
                    delayInitialFocus: !0
                }
            }).then(s=>{
                e(s === void 0 ? "cancel" : s)
            }
            )
        }
        )
    }
}
function YR(t) {
    const {onResult: e, showCancelButton: n} = t
      , [r,s] = y.useState(!1)
      , i = y.useRef(null)
      , a = y.useRef(null)
      , o = y.useRef(null)
      , l = y.useRef(null)
      , [d,u] = y.useState(!1)
      , h = ()=>{
        var D;
        const k = t.confirmPromptText
          , S = (D = i.current) == null ? void 0 : D.value;
        return !k || k.trim() === (S == null ? void 0 : S.trim())
    }
      , f = ()=>{
        s(!0),
        h() && d && u(!1)
    }
      , p = ()=>{
        u(!h())
    }
      , m = ()=>{
        var k;
        if (s(!0),
        !h()) {
            u(!0),
            (k = i.current) == null || k.focus();
            return
        }
        e == null || e("confirm")
    }
      , g = ()=>{
        e == null || e(t.rejectAction ?? "cancel")
    }
      , C = ()=>{
        e == null || e("cancel")
    }
      , b = r ? Qi : Ay;
    return c.jsxs(QR, {
        column: !0,
        $reducedPadding: t.reducedPadding,
        tabIndex: -1,
        onClick: ()=>s(!0),
        children: [c.jsx(eP, {
            type: "regularPlus",
            children: t.title
        }), c.jsx(Xe, {
            type: "regular",
            color: "labelMuted",
            children: t.description
        }), t.confirmPromptText && c.jsxs(c.Fragment, {
            children: [c.jsx(JR, {
                children: c.jsxs(Xe, {
                    type: "regular",
                    color: "labelMuted",
                    selectable: !0,
                    children: ["Please enter", " ", c.jsxs(Xe, {
                        type: "regularPlus",
                        color: "labelMuted",
                        style: {
                            whiteSpace: "pre-wrap"
                        },
                        children: ["“", t.confirmPromptText, "”"]
                    }), " ", "to continue", "", ":"]
                })
            }), c.jsx(XR, {
                ref: i,
                placeholder: `Enter “${t.confirmPromptText}” to continue`,
                value: void 0,
                onChange: f,
                onBlur: p
            }), c.jsx(ZR, {
                children: d && c.jsx(Xe, {
                    type: "small",
                    color: "redText",
                    style: {
                        marginTop: "5px"
                    },
                    children: "Please type the required string"
                })
            })]
        }), c.jsxs(tP, {
            style: {
                justifyContent: t.rejectButtonTitle && n ? "space-between" : "flex-end"
            },
            children: [t.rejectButtonTitle ? c.jsx(b, {
                kind: "secondary",
                onClick: g,
                ref: a,
                "data-type": "reject",
                tabIndex: 0,
                children: t.rejectButtonTitle
            }) : null, c.jsxs(Lt, {
                children: [n ? c.jsx(b, {
                    kind: "secondary",
                    onClick: C,
                    ref: l,
                    "data-type": "cancel",
                    tabIndex: 0,
                    children: t.cancelButtonTitle || "Cancel"
                }) : null, c.jsx(Ay, {
                    kind: t.confirmButtonType ?? "primary",
                    onClick: m,
                    ref: o,
                    "data-type": "confirm",
                    tabIndex: 0,
                    children: t.confirmButtonTitle
                })]
            })]
        })]
    })
}
const Ay = ae(Qi)`
  ${t=>t.kind === "dangerous" || t.kind === "primary" || t.kind === "secondary" ? `
        &:focus:not(:focus-visible):not(:active) {
          ${Px}
          outline-offset: ${t.kind === "secondary" ? "0" : "2"}px;
        }
      ` : ""}
`
  , QR = ae(Lt)`
  padding: ${t=>t.$reducedPadding ? 24 : 32}px;
  width: 100%;
  max-width: 480px;

  p {
    margin: 12px 0px;
  }

  p:first-child {
    margin-top: 0;
  }

  p:last-child {
    margin: 0;
  }
`
  , XR = ae(nc)`
  margin-bottom: 3px;
`
  , JR = ae(Xe)`
  margin-top: 16px;
  margin-bottom: 12px;
`
  , eP = ae(Xe)`
  margin-bottom: 6px;
  pointer-events: none;
`
  , tP = ae(WR)`
  display: flex;
  margin-top: 16px;
  margin-bottom: -4px;
  & button {
    margin: 4px;
    margin-right: 16px;
    &:last-child {
      margin-right: 0;
    }
  }
`;
var h6 = {};
const nP = typeof process == "object" && h6 && h6.NODE_DEBUG && /\bsemver\b/i.test(h6.NODE_DEBUG) ? (...t)=>console.error("SEMVER", ...t) : ()=>{}
;
var Hx = nP;
const rP = "2.0.0"
  , zx = 256
  , sP = Number.MAX_SAFE_INTEGER || 9007199254740991
  , iP = 16
  , aP = zx - 6
  , oP = ["major", "premajor", "minor", "preminor", "patch", "prepatch", "prerelease"];
var Zx = {
    MAX_LENGTH: zx,
    MAX_SAFE_COMPONENT_LENGTH: iP,
    MAX_SAFE_BUILD_LENGTH: aP,
    MAX_SAFE_INTEGER: sP,
    RELEASE_TYPES: oP,
    SEMVER_SPEC_VERSION: rP,
    FLAG_INCLUDE_PRERELEASE: 1,
    FLAG_LOOSE: 2
}
  , x8 = {
    exports: {}
};
(function(t, e) {
    const {MAX_SAFE_COMPONENT_LENGTH: n, MAX_SAFE_BUILD_LENGTH: r} = Zx
      , s = Hx;
    e = t.exports = {};
    const i = e.re = []
      , a = e.safeRe = []
      , o = e.src = []
      , l = e.t = {};
    let d = 0;
    const u = "[a-zA-Z0-9-]"
      , h = [["\\s", 1], ["\\d", n], [u, r]]
      , f = m=>{
        for (const [g,C] of h)
            m = m.split(`${g}*`).join(`${g}{0,${C}}`).split(`${g}+`).join(`${g}{1,${C}}`);
        return m
    }
      , p = (m,g,C)=>{
        const b = f(g)
          , k = d++;
        s(m, k, g),
        l[m] = k,
        o[k] = g,
        i[k] = new RegExp(g,C ? "g" : void 0),
        a[k] = new RegExp(b,C ? "g" : void 0)
    }
    ;
    p("NUMERICIDENTIFIER", "0|[1-9]\\d*"),
    p("NUMERICIDENTIFIERLOOSE", "\\d+"),
    p("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${u}*`),
    p("MAINVERSION", `(${o[l.NUMERICIDENTIFIER]})\\.(${o[l.NUMERICIDENTIFIER]})\\.(${o[l.NUMERICIDENTIFIER]})`),
    p("MAINVERSIONLOOSE", `(${o[l.NUMERICIDENTIFIERLOOSE]})\\.(${o[l.NUMERICIDENTIFIERLOOSE]})\\.(${o[l.NUMERICIDENTIFIERLOOSE]})`),
    p("PRERELEASEIDENTIFIER", `(?:${o[l.NUMERICIDENTIFIER]}|${o[l.NONNUMERICIDENTIFIER]})`),
    p("PRERELEASEIDENTIFIERLOOSE", `(?:${o[l.NUMERICIDENTIFIERLOOSE]}|${o[l.NONNUMERICIDENTIFIER]})`),
    p("PRERELEASE", `(?:-(${o[l.PRERELEASEIDENTIFIER]}(?:\\.${o[l.PRERELEASEIDENTIFIER]})*))`),
    p("PRERELEASELOOSE", `(?:-?(${o[l.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${o[l.PRERELEASEIDENTIFIERLOOSE]})*))`),
    p("BUILDIDENTIFIER", `${u}+`),
    p("BUILD", `(?:\\+(${o[l.BUILDIDENTIFIER]}(?:\\.${o[l.BUILDIDENTIFIER]})*))`),
    p("FULLPLAIN", `v?${o[l.MAINVERSION]}${o[l.PRERELEASE]}?${o[l.BUILD]}?`),
    p("FULL", `^${o[l.FULLPLAIN]}$`),
    p("LOOSEPLAIN", `[v=\\s]*${o[l.MAINVERSIONLOOSE]}${o[l.PRERELEASELOOSE]}?${o[l.BUILD]}?`),
    p("LOOSE", `^${o[l.LOOSEPLAIN]}$`),
    p("GTLT", "((?:<|>)?=?)"),
    p("XRANGEIDENTIFIERLOOSE", `${o[l.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),
    p("XRANGEIDENTIFIER", `${o[l.NUMERICIDENTIFIER]}|x|X|\\*`),
    p("XRANGEPLAIN", `[v=\\s]*(${o[l.XRANGEIDENTIFIER]})(?:\\.(${o[l.XRANGEIDENTIFIER]})(?:\\.(${o[l.XRANGEIDENTIFIER]})(?:${o[l.PRERELEASE]})?${o[l.BUILD]}?)?)?`),
    p("XRANGEPLAINLOOSE", `[v=\\s]*(${o[l.XRANGEIDENTIFIERLOOSE]})(?:\\.(${o[l.XRANGEIDENTIFIERLOOSE]})(?:\\.(${o[l.XRANGEIDENTIFIERLOOSE]})(?:${o[l.PRERELEASELOOSE]})?${o[l.BUILD]}?)?)?`),
    p("XRANGE", `^${o[l.GTLT]}\\s*${o[l.XRANGEPLAIN]}$`),
    p("XRANGELOOSE", `^${o[l.GTLT]}\\s*${o[l.XRANGEPLAINLOOSE]}$`),
    p("COERCE", `(^|[^\\d])(\\d{1,${n}})(?:\\.(\\d{1,${n}}))?(?:\\.(\\d{1,${n}}))?(?:$|[^\\d])`),
    p("COERCERTL", o[l.COERCE], !0),
    p("LONETILDE", "(?:~>?)"),
    p("TILDETRIM", `(\\s*)${o[l.LONETILDE]}\\s+`, !0),
    e.tildeTrimReplace = "$1~",
    p("TILDE", `^${o[l.LONETILDE]}${o[l.XRANGEPLAIN]}$`),
    p("TILDELOOSE", `^${o[l.LONETILDE]}${o[l.XRANGEPLAINLOOSE]}$`),
    p("LONECARET", "(?:\\^)"),
    p("CARETTRIM", `(\\s*)${o[l.LONECARET]}\\s+`, !0),
    e.caretTrimReplace = "$1^",
    p("CARET", `^${o[l.LONECARET]}${o[l.XRANGEPLAIN]}$`),
    p("CARETLOOSE", `^${o[l.LONECARET]}${o[l.XRANGEPLAINLOOSE]}$`),
    p("COMPARATORLOOSE", `^${o[l.GTLT]}\\s*(${o[l.LOOSEPLAIN]})$|^$`),
    p("COMPARATOR", `^${o[l.GTLT]}\\s*(${o[l.FULLPLAIN]})$|^$`),
    p("COMPARATORTRIM", `(\\s*)${o[l.GTLT]}\\s*(${o[l.LOOSEPLAIN]}|${o[l.XRANGEPLAIN]})`, !0),
    e.comparatorTrimReplace = "$1$2$3",
    p("HYPHENRANGE", `^\\s*(${o[l.XRANGEPLAIN]})\\s+-\\s+(${o[l.XRANGEPLAIN]})\\s*$`),
    p("HYPHENRANGELOOSE", `^\\s*(${o[l.XRANGEPLAINLOOSE]})\\s+-\\s+(${o[l.XRANGEPLAINLOOSE]})\\s*$`),
    p("STAR", "(<|>)?=?\\s*\\*"),
    p("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$"),
    p("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$")
}
)(x8, x8.exports);
var cP = x8.exports;
const lP = Object.freeze({
    loose: !0
})
  , dP = Object.freeze({})
  , uP = t=>t ? typeof t != "object" ? lP : t : dP;
var hP = uP;
const jy = /^[0-9]+$/
  , qx = (t,e)=>{
    const n = jy.test(t)
      , r = jy.test(e);
    return n && r && (t = +t,
    e = +e),
    t === e ? 0 : n && !r ? -1 : r && !n ? 1 : t < e ? -1 : 1
}
  , fP = (t,e)=>qx(e, t);
var pP = {
    compareIdentifiers: qx,
    rcompareIdentifiers: fP
};
const z5 = Hx
  , {MAX_LENGTH: My, MAX_SAFE_INTEGER: Z5} = Zx
  , {safeRe: Ty, t: Ly} = cP
  , mP = hP
  , {compareIdentifiers: Pl} = pP;
let gP = class ma {
    constructor(e, n) {
        if (n = mP(n),
        e instanceof ma) {
            if (e.loose === !!n.loose && e.includePrerelease === !!n.includePrerelease)
                return e;
            e = e.version
        } else if (typeof e != "string")
            throw new TypeError(`Invalid version. Must be a string. Got type "${typeof e}".`);
        if (e.length > My)
            throw new TypeError(`version is longer than ${My} characters`);
        z5("SemVer", e, n),
        this.options = n,
        this.loose = !!n.loose,
        this.includePrerelease = !!n.includePrerelease;
        const r = e.trim().match(n.loose ? Ty[Ly.LOOSE] : Ty[Ly.FULL]);
        if (!r)
            throw new TypeError(`Invalid Version: ${e}`);
        if (this.raw = e,
        this.major = +r[1],
        this.minor = +r[2],
        this.patch = +r[3],
        this.major > Z5 || this.major < 0)
            throw new TypeError("Invalid major version");
        if (this.minor > Z5 || this.minor < 0)
            throw new TypeError("Invalid minor version");
        if (this.patch > Z5 || this.patch < 0)
            throw new TypeError("Invalid patch version");
        r[4] ? this.prerelease = r[4].split(".").map(s=>{
            if (/^[0-9]+$/.test(s)) {
                const i = +s;
                if (i >= 0 && i < Z5)
                    return i
            }
            return s
        }
        ) : this.prerelease = [],
        this.build = r[5] ? r[5].split(".") : [],
        this.format()
    }
    format() {
        return this.version = `${this.major}.${this.minor}.${this.patch}`,
        this.prerelease.length && (this.version += `-${this.prerelease.join(".")}`),
        this.version
    }
    toString() {
        return this.version
    }
    compare(e) {
        if (z5("SemVer.compare", this.version, this.options, e),
        !(e instanceof ma)) {
            if (typeof e == "string" && e === this.version)
                return 0;
            e = new ma(e,this.options)
        }
        return e.version === this.version ? 0 : this.compareMain(e) || this.comparePre(e)
    }
    compareMain(e) {
        return e instanceof ma || (e = new ma(e,this.options)),
        Pl(this.major, e.major) || Pl(this.minor, e.minor) || Pl(this.patch, e.patch)
    }
    comparePre(e) {
        if (e instanceof ma || (e = new ma(e,this.options)),
        this.prerelease.length && !e.prerelease.length)
            return -1;
        if (!this.prerelease.length && e.prerelease.length)
            return 1;
        if (!this.prerelease.length && !e.prerelease.length)
            return 0;
        let n = 0;
        do {
            const r = this.prerelease[n]
              , s = e.prerelease[n];
            if (z5("prerelease compare", n, r, s),
            r === void 0 && s === void 0)
                return 0;
            if (s === void 0)
                return 1;
            if (r === void 0)
                return -1;
            if (r === s)
                continue;
            return Pl(r, s)
        } while (++n)
    }
    compareBuild(e) {
        e instanceof ma || (e = new ma(e,this.options));
        let n = 0;
        do {
            const r = this.build[n]
              , s = e.build[n];
            if (z5("prerelease compare", n, r, s),
            r === void 0 && s === void 0)
                return 0;
            if (s === void 0)
                return 1;
            if (r === void 0)
                return -1;
            if (r === s)
                continue;
            return Pl(r, s)
        } while (++n)
    }
    inc(e, n, r) {
        switch (e) {
        case "premajor":
            this.prerelease.length = 0,
            this.patch = 0,
            this.minor = 0,
            this.major++,
            this.inc("pre", n, r);
            break;
        case "preminor":
            this.prerelease.length = 0,
            this.patch = 0,
            this.minor++,
            this.inc("pre", n, r);
            break;
        case "prepatch":
            this.prerelease.length = 0,
            this.inc("patch", n, r),
            this.inc("pre", n, r);
            break;
        case "prerelease":
            this.prerelease.length === 0 && this.inc("patch", n, r),
            this.inc("pre", n, r);
            break;
        case "major":
            (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) && this.major++,
            this.minor = 0,
            this.patch = 0,
            this.prerelease = [];
            break;
        case "minor":
            (this.patch !== 0 || this.prerelease.length === 0) && this.minor++,
            this.patch = 0,
            this.prerelease = [];
            break;
        case "patch":
            this.prerelease.length === 0 && this.patch++,
            this.prerelease = [];
            break;
        case "pre":
            {
                const s = Number(r) ? 1 : 0;
                if (!n && r === !1)
                    throw new Error("invalid increment argument: identifier is empty");
                if (this.prerelease.length === 0)
                    this.prerelease = [s];
                else {
                    let i = this.prerelease.length;
                    for (; --i >= 0; )
                        typeof this.prerelease[i] == "number" && (this.prerelease[i]++,
                        i = -2);
                    if (i === -1) {
                        if (n === this.prerelease.join(".") && r === !1)
                            throw new Error("invalid increment argument: identifier already exists");
                        this.prerelease.push(s)
                    }
                }
                if (n) {
                    let i = [n, s];
                    r === !1 && (i = [n]),
                    Pl(this.prerelease[0], n) === 0 ? isNaN(this.prerelease[1]) && (this.prerelease = i) : this.prerelease = i
                }
                break
            }
        default:
            throw new Error(`invalid increment argument: ${e}`)
        }
        return this.raw = this.format(),
        this.build.length && (this.raw += `+${this.build.join(".")}`),
        this
    }
}
;
var yP = gP;
const Oy = yP
  , CP = (t,e,n)=>new Oy(t,n).compare(new Oy(e,n));
var Wx = CP;
const bP = Wx
  , vP = (t,e,n)=>bP(t, e, n) > 0;
var wP = vP;
const kP = Cn(wP)
  , xP = Wx
  , DP = (t,e,n)=>xP(t, e, n) >= 0;
var SP = DP;
const X2 = Cn(SP)
  , Qd = function() {
    return !!(typeof process < "u" && typeof process.versions == "object" && process.versions.electron || typeof navigator == "object" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Electron") >= 0 && navigator.userAgent.indexOf("Linear") >= 0)
}()
  , Gx = "1.18.0"
  , Rde = ()=>!(!Xt.isElectron || typeof Xt.bridge.version != "string" || !X2(Xt.bridge.version, Gx))
  , Kx = new Tt
  , _P = new Tt
  , IP = new Tt
  , EP = new Tt
  , AP = new Tt
  , jP = new Tt
  , MP = new Tt
  , TP = new Tt
  , LP = new Tt
  , D8 = new Tt
  , S8 = new Tt
  , Ry = "notifyLoggedIn";
class Py {
    constructor({x: e, y: n, contentHeaderHeight: r}) {
        this.x = 0,
        this.y = 0,
        this.contentHeaderHeight = 0,
        this.x = e,
        this.y = n,
        this.contentHeaderHeight = r,
        L3(this)
    }
}
const Dn = class Dn {
    static initialize() {
        var e, n, r, s, i, a, o, l, d, u, h;
        if (Dn.isElectron) {
            (e = Dn.bridge) == null || e.onDesktopReady(()=>Kx.fire()),
            (n = Dn.bridge) == null || n.onDesktopRedirect((p,m)=>_P.fire({
                route: p,
                forceSameTab: m
            })),
            (r = Dn.bridge) == null || r.onNewIssue(()=>EP.fire()),
            (s = Dn.bridge) == null || s.onNewProject(()=>AP.fire()),
            (i = Dn.bridge) == null || i.onNewTab(p=>MP.fire(p)),
            (a = Dn.bridge) == null || a.onSetAlwaysShowTabBar(p=>jP.fire(p)),
            (o = Dn.bridge) == null || o.onContactForm(p=>TP.fire(p)),
            (l = Dn.bridge) == null || l.onHelpCenter(p=>LP.fire(p)),
            (d = Dn.bridge) == null || d.onCheckUrl(async(p,m,g)=>!!IP.fire({
                url: p,
                userId: m,
                open: g ?? !1
            })[0]),
            (u = Dn.bridge) == null || u.onEnterFullScreen(()=>D8.fire()),
            (h = Dn.bridge) == null || h.onLeaveFullScreen(()=>S8.fire()),
            Dn.bridge || F.warning("Electron bridge was not found in desktop context, listeners not set up.");
            const f = $y();
            this.trafficLightPosition = f ? new Py({
                x: f.x,
                y: f.y,
                contentHeaderHeight: f.contentHeaderHeight
            }) : void 0
        }
    }
    static transparentSidebarAvailable() {
        var e, n;
        return Dn.isElectron && $f && typeof ((e = Dn.bridge) == null ? void 0 : e.version) == "string" && kP((n = Dn.bridge) == null ? void 0 : n.version, "1.5.3")
    }
    static isFullScreen() {
        var e;
        return Dn.isElectron && (((e = Dn.bridge) == null ? void 0 : e.isFullScreen()) ?? !1)
    }
    static updateTrafficLightPosition(e) {
        if (typeof Dn.bridge.version == "string" && X2(Dn.bridge.version, "1.24.0")) {
            const n = $y(e == null ? void 0 : e.topContainerSize);
            n && (lt(()=>{
                this.trafficLightPosition ? (this.trafficLightPosition.x = n.x,
                this.trafficLightPosition.y = n.y,
                this.trafficLightPosition.contentHeaderHeight = n.contentHeaderHeight) : this.trafficLightPosition = new Py({
                    x: n.x,
                    y: n.y,
                    contentHeaderHeight: n.contentHeaderHeight
                })
            }
            ),
            Dn.bridge.updateTrafficLightPosition({
                x: n.x,
                y: n.y
            }))
        }
    }
}
;
Dn.isElectron = Qd,
Dn.bridge = Dn.isElectron ? new Proxy(window.ElectronBridge || {},{
    get(e, n) {
        return n in e ? e[n] : n === "notifyLoginStatusChange" && Ry in e ? e[Ry] : ()=>{}
    }
}) : new Proxy({},{
    get() {
        return ()=>{}
    }
});
let Xt = Dn;
function Pde() {
    const [t,e] = y.useState(Xt.isFullScreen())
      , n = y.useCallback(()=>e(!0), [])
      , r = y.useCallback(()=>e(!1), []);
    return y.useEffect(()=>(D8.subscribe(n),
    S8.subscribe(r),
    ()=>{
        D8.unsubscribe(n),
        S8.unsubscribe(r)
    }
    ), []),
    t
}
window.__Desktop__ = {
    notifyReady: ()=>{
        Kx.fire()
    }
};
Xt.initialize();
function $y(t) {
    if (Qd && typeof Xt.bridge.version == "string" && $f) {
        let n = 11;
        return t && (n = t.marginTop + Math.floor((t.height - 16) / 2)),
        X2(Xt.bridge.version, Gx) ? {
            x: 17,
            y: n,
            contentHeaderHeight: 57
        } : X2(Xt.bridge.version, "1.14.0") ? {
            x: 14,
            y: 18,
            contentHeaderHeight: 53
        } : {
            x: 12,
            y: 16,
            contentHeaderHeight: 49
        }
    }
}
const OP = "linear-region"
  , rd = class rd {
    static get defaultRegionForCurrentClient() {
        const e = new Date().getTimezoneOffset() / 60;
        return e <= 0 && e >= -7 ? "europe-west1" : rd.defaultRegion
    }
    static labelForRegion(e) {
        switch (e) {
        case "us-east1":
            return "United States";
        case "europe-west1":
            return "European Union";
        default:
            throw void 0
        }
    }
    static isValidRegion(e) {
        return rd.allRegions.includes(e)
    }
}
;
rd.allRegions = ["us-east1", "europe-west1"],
rd.defaultRegion = "us-east1";
let Fy = rd;
function Yx(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
function $de(t) {
    return new Jt((e,n)=>{
        t.then(async r=>{
            e(r),
            await (r == null ? void 0 : r.refresh())
        }
        ).catch(n)
    }
    )
}
class J2 {
    constructor(e, n) {
        this._isLoading = !1;
        const {clearCache: r, query: s, isFresh: i} = n;
        this._value = e,
        this._clearCache = r,
        i || (this._refresh = s()),
        this._query = s,
        Ln(this)
    }
    setValue(e, n=!0) {
        lt(()=>{
            this._value = e
        }
        ),
        n && this._clearCache()
    }
    get isLoading() {
        return this._isLoading
    }
    async forceRefresh() {
        this._refresh = this._query(),
        await this.refresh()
    }
    async refresh() {
        if (this._refresh === void 0)
            return;
        const e = this._refresh;
        this._refresh = void 0,
        this.setLoading(!0);
        try {
            this.setValue(await e, !1)
        } catch (n) {
            F.error("Failed to refresh cache value", n)
        } finally {
            this.setLoading(!1)
        }
    }
    get value() {
        return this._value
    }
    setLoading(e) {
        lt(()=>{
            this._isLoading = e
        }
        )
    }
}
Yx([ut], J2.prototype, "_value", void 0);
Yx([ut], J2.prototype, "_isLoading", void 0);
const RP = "demo"
  , PP = new RegExp(`^\\/${RP}(?:\\/.*?)?$`)
  , hs = PP.test(window.location.pathname);
function Fs(t, e, n) {
    return Math.max(e, Math.min(n, t))
}
var wo;
(function(t) {
    t.HEX_REGEX_LOOSE = /#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?/i,
    t.HEX_REGEX = new RegExp(`^${t.HEX_REGEX_LOOSE.source}$`,"i"),
    t.LCH_REGEX_LOOSE = /lch\((\d{1,3}(?:\.\d+)?)\% (\d{1,3}(?:\.\d+)?) (\d{1,3}(?:\.\d+)?)(?: \/ ([1|0](?:\.\d+)?)?)?\)/i,
    t.LCH_REGEX = new RegExp(`^${t.LCH_REGEX_LOOSE.source}$`,"i"),
    t.P3_REGEX_LOOSE = /color\(display-p3 (\d{1,3}(?:\.\d+)?)\ (\d{1,3}(?:\.\d+)?) (\d{1,3}(?:\.\d+)?)\)/i,
    t.P3_REGEX = new RegExp(`^${t.P3_REGEX_LOOSE.source}$`,"i"),
    t.ANY_COLOR_REGEX_LOOSE = new RegExp(`(?:${t.HEX_REGEX_LOOSE.source})|(?:${t.LCH_REGEX_LOOSE.source})|(?:${t.P3_REGEX_LOOSE.source})`,"i"),
    t.ANY_COLOR_REGEX = new RegExp(`^${t.ANY_COLOR_REGEX_LOOSE.source}$`,"i");
    const e = [.3457 / .3585, 1, (1 - .3457 - .3585) / .3585];
    function n(L, [q,oe,we,_]) {
        return L === "LCH" ? `lch(${q5(q)}% ${q5(oe)} ${q5(we)}${_ !== void 0 ? " / " + q5(_) : ""})` : L === "P3" ? m([q, oe, we, _]) : u([q, oe, we, _])
    }
    t.toCss = n;
    function r(L) {
        const q = t.HEX_REGEX.exec(L);
        if (q) {
            const oe = t.rgbToLch([parseInt(q[1], 16), parseInt(q[2], 16), parseInt(q[3], 16)]);
            return q[4] && !/ff/i.test(q[4]) && (oe[3] = parseInt(q[4], 16) / 255),
            oe
        } else {
            const oe = t.LCH_REGEX.exec(L);
            if (oe) {
                const we = [parseFloat(oe[1]), parseFloat(oe[2]), parseFloat(oe[3])];
                return oe[4] && oe[4] !== "1" && (we[3] = parseFloat(oe[4])),
                we
            } else {
                const we = t.P3_REGEX.exec(L);
                if (we)
                    return k([parseFloat(we[1]), parseFloat(we[2]), parseFloat(we[3])])
            }
        }
        return [0, 0, 0]
    }
    t.fromCss = r;
    function s(L, q) {
        return t.toCss("RGB", t.adjustTo(t.fromCss(L), {
            a: q
        }))
    }
    t.cssWithAlpha = s;
    function i(L) {
        const [q,oe,we] = L;
        return [q > 50 ? 0 : 100, Math.min(10, oe), we]
    }
    t.getTextColor = i;
    function a(L) {
        return L[0] > 50
    }
    t.isBright = a;
    function o(L, q) {
        const [oe,we,_,M=1] = L;
        return [Fs(oe + (q.l ?? 0), 0, 100), Fs(we + (q.c ?? 0), 0, 132), Fs(_ + (q.h ?? 0), 0, 360), Fs(M + (q.a ?? 0), 0, 1)]
    }
    t.adjust = o;
    function l(L, q) {
        const [oe,we,_,M=1] = L;
        return [Fs(q.l ?? oe, 0, 100), Fs(q.c ?? we, 0, 132), Fs(q.h ?? _, 0, 360), Fs(q.a ?? M, 0, 1)]
    }
    t.adjustTo = l;
    function d(L, q, oe) {
        const we = L[3] ?? 1
          , _ = q[3] ?? 1
          , [M,Z,U] = P(E(L))
          , [ce,De,Ce] = P(E(q))
          , Ie = [M * (1 - oe) + oe * ce, Z * (1 - oe) + oe * De, U * (1 - oe) + oe * Ce]
          , [ge,Te,Ge] = A(Q(Ie));
        return [Fs(ge, 0, 100), Fs(Te, 0, 132), Fs(Ge, 0, 360), (we + _) / 2]
    }
    t.mix = d;
    function u(L) {
        const q = S(L).map(we=>we.toString(16).split(".")[0]).map(we=>we.length === 1 ? "0" + we : we)
          , oe = L[3] !== void 0 && L[3] !== 1 ? h((L[3] * 255).toString(16).split(".")[0]) : "";
        return `#${q[0]}${q[1]}${q[2]}${oe}`
    }
    t.lchToRgbString = u;
    function h(L) {
        return L.length === 1 ? "0" + L : L
    }
    function f(L) {
        return t.ANY_COLOR_REGEX.test(L)
    }
    t.isValidColor = f;
    function p(L) {
        return t.HEX_REGEX.test(L) ? L : u(r(L))
    }
    t.cssToRgb = p;
    function m(L) {
        const q = g(L);
        return `color(display-p3 ${q[0]} ${q[1]} ${q[2]}${L[3] !== void 0 ? ` / ${L[3].toString(10)}` : ""})`
    }
    function g(L) {
        return me(_e(P(E(L)))).map(T).map(q=>Fs(q, 0, 1))
    }
    function C(L) {
        return A(Q(I(z(X(L)))))
    }
    t.rgbToLch = C;
    function b(L, q, oe, we) {
        let _ = q;
        const M = []
          , Z = .618033988749895;
        for (let U = 0; U < L; U++)
            _ += Z,
            _ %= 1,
            M[U] = u([oe * 100, we * 100, _ * 360]);
        return M
    }
    t.palette = b;
    function k(L) {
        return A(Q(I(W(X(L)))))
    }
    function S(L) {
        return R(E(L))
    }
    function D([[L,q,oe],[we,_,M],[Z,U,ce]], [De,Ce,Ie]) {
        return [L * De + q * Ce + oe * Ie, we * De + _ * Ce + M * Ie, Z * De + U * Ce + ce * Ie]
    }
    const R = L=>{
        const q = P(L)
          , oe = _e(q);
        return B(fe(oe)).map(we=>Fs(we, 0, 255))
    }
    ;
    function T(L) {
        const q = L < 0 ? -1 : 1
          , oe = Math.abs(L);
        return oe > .0031308 ? q * (1.055 * Math.pow(oe, 1 / 2.4) - .055) : 12.92 * L
    }
    function B(L) {
        return L.map(q=>255 * T(q))
    }
    function z(L) {
        return D([[.41239079926595934, .357584339383878, .1804807884018343], [.21263900587151027, .715168678767756, .07219231536073371], [.01933081871559182, .11919477979462598, .9505321522496607]], L)
    }
    function W(L) {
        return D([[.4865709486482162, .26566769316909306, .1982172852343625], [.2289745640697488, .6917385218365064, .079286914093745], [0, .04511338185890264, 1.043944368900976]], L)
    }
    function fe(L) {
        return D([[3.2409699419045226, -1.537383177570094, -.4986107602930034], [-.9692436362808796, 1.8759675015077202, .04155505740717559], [.05563007969699366, -.20397695888897652, 1.0569715142428786]], L)
    }
    function me(L) {
        return D([[2.493496911941425, -.9313836179191239, -.40271078445071684], [-.8294889695615747, 1.7626640603183463, .023624685841943577], [.03584583024378447, -.07617238926804182, .9568845240076872]], L)
    }
    function _e(L) {
        return D([[.9554734527042182, -.023098536874261423, .0632593086610217], [-.028369706963208136, 1.0099954580058226, .021041398966943008], [.012314001688319899, -.020507696433477912, 1.3303659366080753]], L)
    }
    function I(L) {
        return D([[1.0479298208405488, .022946793341019088, -.05019222954313557], [.029627815688159344, .990434484573249, -.01707382502938514], [-.009243058152591178, .015055144896577895, .7518742899580008]], L)
    }
    function Q(L) {
        const q = .008856451679035631
          , oe = 24389 / 27
          , _ = L.map((M,Z)=>M / e[Z]).map(M=>M > q ? Math.cbrt(M) : (oe * M + 16) / 116);
        return [116 * _[1] - 16, 500 * (_[0] - _[1]), 200 * (_[1] - _[2])]
    }
    function P(L) {
        const q = 903.2962962962963
          , oe = 216 / 24389
          , we = [];
        return we[1] = (L[0] + 16) / 116,
        we[0] = L[1] / 500 + we[1],
        we[2] = we[1] - L[2] / 200,
        [Math.pow(we[0], 3) > oe ? Math.pow(we[0], 3) : (116 * we[0] - 16) / q, L[0] > q * oe ? Math.pow((L[0] + 16) / 116, 3) : L[0] / q, Math.pow(we[2], 3) > oe ? Math.pow(we[2], 3) : (116 * we[2] - 16) / q].map((M,Z)=>M * e[Z])
    }
    function A(L) {
        const q = Math.atan2(L[2], L[1]) * 180 / Math.PI;
        return [L[0], Math.sqrt(Math.pow(L[1], 2) + Math.pow(L[2], 2)), q >= 0 ? q : q + 360, 1]
    }
    function E(L) {
        return [L[0], L[1] * Math.cos(L[2] * Math.PI / 180), L[1] * Math.sin(L[2] * Math.PI / 180)]
    }
    function V(L) {
        const q = L < 0 ? -1 : 1
          , oe = Math.abs(L);
        return oe < .04045 ? L / 12.92 : q * Math.pow((oe + .055) / 1.055, 2.4)
    }
    function X(L) {
        return L.map(q=>V(q / 255))
    }
}
)(wo || (wo = {}));
function q5(t) {
    return parseFloat(t.toFixed(3))
}
const $P = t=>{
    const [e,n] = y.useState([0, 0]);
    return y.useEffect(()=>{
        const r = (a,o)=>{
            n([a, o])
        }
          , s = K2(a=>{
            r(a.clientX, a.clientY)
        }
        , 50)
          , i = K2(a=>{
            a.touches.length > 0 && r(a.touches[0].clientX, a.touches[0].clientY)
        }
        , 50);
        return window.addEventListener("mousemove", s),
        t != null && t.handleTouch && window.addEventListener("touchmove", i),
        ()=>{
            s.cancel(),
            window.removeEventListener("mousemove", s),
            t != null && t.handleTouch && (i.cancel(),
            window.removeEventListener("touchmove", i))
        }
    }
    , []),
    e
}
;
function FP(t) {
    var h;
    const {parentRef: e, triggerSelector: n, direction: r="horizontal", ...s} = t
      , [i,a] = y.useState(!0)
      , o = y.useRef()
      , l = (h = e.current) == null ? void 0 : h.getBoundingClientRect()
      , d = $P()
      , u = l ? NP(l, d, r) : void 0;
    return y.useEffect(()=>{
        if (n) {
            if (i)
                return o.current = setTimeout(()=>{
                    Ny(n, d) || a(!1)
                }
                , 150),
                ()=>{
                    clearTimeout(o.current)
                }
                ;
            Ny(n, d) && a(!0)
        }
    }
    , [i, d]),
    u === void 0 || !i || d[0] === 0 && d[1] === 0 ? null : c.jsx("div", {
        ...s,
        style: u
    })
}
function Ny(t, e) {
    var r;
    const n = (r = self.document.querySelector(t)) == null ? void 0 : r.getBoundingClientRect();
    if (n) {
        const [s,i] = e;
        return s >= n.x && s <= n.x + n.width && i >= n.y && i <= n.y + n.height
    } else
        return !1
}
function NP(t, e, n) {
    const [r,s] = e
      , i = {
        position: "absolute"
    };
    if (n === "horizontal") {
        const {left: a, right: o, top: l, height: d} = t;
        i.top = 0,
        i.bottom = 0;
        const u = 100 * (s - l) / d;
        if (r < a) {
            const h = r + 1
              , f = Math.max(a - h, 10);
            i.left = `-${f}px`,
            i.width = `${f}px`,
            i.clipPath = `polygon(
        100% 0%,
        100% 100%,
        0% ${u}%
      )`
        } else if (r > o) {
            const h = r - 1
              , f = Math.max(h - o, 10);
            i.right = `-${f}px`,
            i.width = `${f}px`,
            i.clipPath = `polygon(
        0% 0%,
        0% 100%,
        100% ${u}%
      )`
        } else
            return
    } else {
        const {left: a, top: o, bottom: l, width: d} = t;
        i.left = 0,
        i.right = 0;
        const u = 100 * (r - a) / d;
        if (s < o) {
            const h = s + 1
              , f = Math.max(o - h, 10);
            i.top = `-${f}px`,
            i.height = `${f}px`,
            i.clipPath = `polygon(
        0% 100%,
        100% 100%,
        ${u}% 0%
      )`
        } else if (s > l) {
            const h = s - 1
              , f = Math.max(h - l, 10);
            i.bottom = `-${f}px`,
            i.height = `${f}px`,
            i.clipPath = `polygon(
        0% 0%,
        100% 0%,
        ${u}% 100%
      )`
        } else
            return
    }
    return i
}
function VP(t) {
    switch (t) {
    case "top-start":
        return "0 100%";
    case "top-end":
        return "100% 100%";
    case "bottom-start":
        return "0 0";
    case "bottom-end":
        return "100% 0";
    case "right-start":
        return "0 0";
    case "right-end":
        return "0 100%";
    case "left-start":
        return "100% 0";
    case "left-end":
        return "100% 100%";
    case "top":
        return "50% 100%";
    case "right":
        return "0 50%";
    case "bottom":
        return "50% 0";
    case "left":
        return "100% 50%";
    default:
        return "0 0"
    }
}
const BP = {
    name: "maxSize",
    enabled: !0,
    phase: "main",
    requiresIfExists: ["offset", "preventOverflow", "flip", "discreteMaxHeight"],
    fn({state: t, name: e, options: n}) {
        const r = RA(t, n)
          , {width: s, height: i} = t.rects.popper
          , [a,o] = t.placement.split("-")
          , l = a === "top" || a === "bottom"
          , d = a === "left" ? "left" : "right"
          , u = a === "top" ? "top" : "bottom"
          , h = i - r.top - r.bottom
          , f = s - r.left - r.right
          , p = Math.min(i - r[u], h)
          , m = Math.min(s - r[d], f);
        let g = p
          , C = m;
        l ? C = o ? Math.min(m, f) : f : g = o ? Math.min(p, h) : h;
        const b = Array.isArray(t.modifiersData.discreteMaxHeight) ? t.modifiersData.discreteMaxHeight : void 0;
        if (b) {
            for (let k = 1; k < b.length; k++)
                if (g < b[k]) {
                    g = b[k - 1];
                    break
                }
        }
        t.modifiersData[e] = {
            width: C,
            height: g
        }
    }
}
  , Qx = "--popper-max-height"
  , Xx = "--popper-overflow"
  , UP = {
    name: "applyMaxSize",
    enabled: !0,
    phase: "beforeWrite",
    requires: ["maxSize"],
    requiresIfExists: ["alwaysApplyMaxSize"],
    fn({state: t}) {
        const {height: e} = t.modifiersData.maxSize;
        t.rects.popper.height < e && !t.modifiersData.alwaysApplyMaxSize || (t.styles.popper.maxHeight = e,
        t.elements.popper.style.setProperty(Qx, e + "px"),
        t.elements.popper.style.setProperty(Xx, "hidden auto"))
    }
}
  , HP = {
    name: "alwaysApplyMaxSize",
    enabled: !0,
    phase: "beforeWrite",
    fn({state: t, name: e}) {
        t.modifiersData[e] = !0
    }
}
  , Fde = t=>({
    name: "discreteMaxHeight",
    enabled: !0,
    phase: "beforeMain",
    fn({state: e, name: n}) {
        e.modifiersData[n] = t
    }
})
  , Yf = 4;
function Jx({targetRef: t, popoverRef: e, initiallyOpen: n, options: r}) {
    var p;
    const [s,i] = y.useState(0)
      , [a,o] = y.useState((r == null ? void 0 : r.placement) ?? "top-start")
      , l = y.useRef()
      , d = y.useRef(!0)
      , u = y.useCallback(()=>{
        var m;
        d.current && ((m = r == null ? void 0 : r.onOpen) == null || m.call(r),
        i(1))
    }
    , [r == null ? void 0 : r.onOpen])
      , h = y.useCallback(()=>{
        d.current && i(m=>m === 0 ? m : 2)
    }
    , [])
      , f = y.useCallback(()=>{
        var m;
        d.current && (i(0),
        (m = r == null ? void 0 : r.onClose) == null || m.call(r))
    }
    , [r == null ? void 0 : r.onClose]);
    return y.useLayoutEffect(()=>{
        var m;
        if (s === 0)
            (m = l.current) == null || m.destroy(),
            l.current = void 0;
        else if (!l.current && t.current && e.current) {
            const {onFirstUpdate: g} = r ?? {};
            l.current = PA(t.current, e.current, {
                placement: a,
                strategy: (r == null ? void 0 : r.strategy) ?? "fixed",
                modifiers: Vy(a, r),
                onFirstUpdate(C) {
                    g == null || g(C),
                    C.placement && o(C.placement)
                }
            })
        }
    }
    , [s]),
    y.useLayoutEffect(()=>{
        l.current && l.current.setOptions({
            placement: a,
            modifiers: Vy(a, r)
        })
    }
    , [a]),
    y.useEffect(()=>{
        const m = ZP(()=>{
            f()
        }
        );
        return d.current = !0,
        n && u(),
        ()=>{
            m(),
            d.current = !1
        }
    }
    , []),
    y.useLayoutEffect(()=>{
        r != null && r.placement && o(r.placement)
    }
    , [r == null ? void 0 : r.placement]),
    {
        onShow: u,
        onHide: h,
        ref: l,
        popoverProps: {
            lifecycle: s,
            onClosed: f,
            transformOrigin: VP(((p = l.current) == null ? void 0 : p.state.placement) ?? a)
        }
    }
}
const Nde = Qt`
  // Hide poppers when the target is scrolled out of the viewport
  [data-popper-reference-hidden] & {
    opacity: 0 !important;
    pointer-events: none;
  }
`;
var Zr;
(function(t) {
    t[t.closed = 0] = "closed",
    t[t.open = 1] = "open",
    t[t.closing = 2] = "closing"
}
)(Zr || (Zr = {}));
let zP = 0;
const _8 = new Map
  , ZP = t=>{
    const e = zP++;
    return _8.set(e, t),
    ()=>_8.delete(e)
}
;
function Vy(t, e) {
    const {modifiers: n} = e ?? {}
      , r = qP(t, (e == null ? void 0 : e.placement) ?? "top-start", (n == null ? void 0 : n.find(i=>i.name === "offset")) ?? {
        name: "offset",
        options: {
            offset: [0, Yf]
        }
    })
      , s = (n ?? []).filter(i=>i.name !== "offset");
    return s.push(r),
    (e == null ? void 0 : e.maxSizeModifier) === "never" || ((e == null ? void 0 : e.maxSizeModifier) === "always" && s.push(HP),
    s.push({
        ...BP,
        options: Object.assign({
            padding: 16
        }, e == null ? void 0 : e.maxSizeOptions)
    }, UP)),
    s.push({
        name: "hide",
        enabled: (e == null ? void 0 : e.hideWithTarget) !== !1
    }),
    s
}
function qP(t, e, n) {
    var s, i;
    if (t === e || !((i = (s = n.options) == null ? void 0 : s.offset) != null && i[0]))
        return n;
    const r = {
        name: "offset",
        options: {
            offset: [-n.options.offset[0], n.options.offset[1]]
        }
    };
    switch (e) {
    case "bottom-end":
    case "top-end":
        switch (t) {
        case "bottom-start":
        case "top-start":
            return r
        }
        break;
    case "bottom-start":
    case "top-start":
        switch (t) {
        case "bottom-end":
        case "top-end":
            return r
        }
        break
    }
    return n
}
const Vde = ()=>{
    _8.forEach(t=>t())
}
  , WP = y.createContext(0)
  , I8 = {
    linear: t=>t,
    quadOut: t=>t * (2 - t),
    quadIn: t=>t * t,
    quadInOut: t=>t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t,
    cubicOut: t=>{
        const e = t - 1;
        return e * e * e + 1
    }
    ,
    cubicIn: t=>t * t * t,
    cubicInOut: t=>t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1
}
  , GP = (t=!1)=>Qd ? Qt`
        html:not(.electron-disable-drag) & {
          -webkit-app-region: drag;

          ${t ? Qt`
                & > * {
                  -webkit-app-region: no-drag;
                }
              ` : ""}
        }
      ` : ""
  , Qf = ()=>Qd ? Qt`
        -webkit-app-region: no-drag;
      ` : "";
function KP(t) {
    const {show: e, zIndex: n, onClick: r, style: s={}, position: i="absolute", ...a} = t
      , o = Kf()
      , l = y.useContext(WP);
    return Ak(e, {
        config: (u,h,f)=>({
            duration: f === "leave" ? 280 : 400,
            easing: I8.quadOut
        }),
        from: {
            opacity: 0
        },
        enter: {
            opacity: .95
        },
        leave: {
            opacity: 0
        },
        immediate: o
    })((u,h)=>h ? Qd ? c.jsxs(By, {
        style: {
            ...u,
            ...s,
            zIndex: n
        },
        $position: i,
        ...a,
        children: [c.jsx(QP, {
            style: {
                height: l
            }
        }), c.jsx(YP, {
            onClick: r,
            style: {
                height: `calc(100% - ${l}px)`
            }
        })]
    }) : c.jsx(By, {
        style: {
            ...u,
            ...s,
            zIndex: n
        },
        $position: i,
        onClick: r,
        ...a
    }) : null)
}
const By = ae(r5.div)`
  position: ${t=>t.$position};
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  overflow: auto;
  background-color: ${ze("bgModalOverlay")};
`
  , YP = ae.div`
  ${Qf()}
`
  , QP = ae.div`
  pointer-events: all;
  ${GP(!0)};
`;
function ql(t) {
    const e = y.useRef(t);
    return t !== e.current && (e.current = t),
    e
}
const XP = y.createContext(!1);
function eD() {
    return y.useContext(XP)
}
const Bde = ()=>{
    const {activeElement: t} = window.document;
    return t ? Xf(t) : !1
}
  , Xf = t=>t === null || t instanceof HTMLTextAreaElement || t.contentEditable === "true" || t instanceof HTMLInputElement && (t.type === "text" || t.type === "email" || t.type === "search") && !t.disabled
  , JP = y.createContext(null);
class Ude {
    addListeners(e, ...n) {
        for (const r of n)
            this.listenersForEventType(e).unshift(r);
        return ()=>{
            for (const r of n) {
                const s = this.listenersForEventType(e).indexOf(r);
                this.listenersForEventType(e).splice(s, 1)
            }
        }
    }
    attachGlobalEventListeners() {
        self.document.body.addEventListener("keydown", this.handleEvent),
        self.document.body.addEventListener("keyup", this.handleEvent)
    }
    removeGlobalEventListeners() {
        self.document.body.removeEventListener("keydown", this.handleEvent),
        self.document.body.removeEventListener("keyup", this.handleEvent)
    }
    listenersForEventType(e) {
        return e === "keydown" ? this.keydownListeners : e === "keyup" ? this.keyupListeners : []
    }
    constructor() {
        this.handleEvent = e=>{
            const n = this.listenersForEventType(e.type)
              , r = e.target && Xf(e.target);
            for (const s of n) {
                if (e.defaultPrevented === !0 || e.target instanceof HTMLElement && e.target.hasAttribute("data-prevent-global-listener"))
                    break;
                (!r || s.runWithInputElementFocus) && s.callback(e)
            }
        }
        ,
        this.keydownListeners = [],
        this.keyupListeners = []
    }
}
const e$ = ()=>{
    const t = y.useContext(JP);
    if (!t)
        throw Error("Trying to call useKeyboardEventListeners outside KeyboardEventListenersContext");
    return t
}
  , t$ = t=>typeof t == "function" ? t : typeof t == "string" ? e=>e.key === t : t ? ()=>!0 : ()=>!1
  , Jf = (t,e,n,r)=>{
    const s = e$()
      , i = y.useMemo(()=>t$(t), [t])
      , a = y.useMemo(()=>e ? [{
        callback: l=>{
            Uy(l) && i(l) && e(l)
        }
        ,
        runWithInputElementFocus: (r == null ? void 0 : r.runWithInputElementFocus) || !1
    }] : [], [e, r == null ? void 0 : r.runWithInputElementFocus])
      , o = y.useMemo(()=>n ? [{
        callback: l=>{
            Uy(l) && i(l) && n(l)
        }
        ,
        runWithInputElementFocus: (r == null ? void 0 : r.runWithInputElementFocus) || !1
    }] : [], [n, r == null ? void 0 : r.runWithInputElementFocus]);
    y.useEffect(()=>s.addListeners("keydown", ...a), [a]),
    y.useEffect(()=>s.addListeners("keyup", ...o), [o])
}
  , Hde = t=>{
    const {targetKey: e, onKeyDown: n, onKeyUp: r, runWithInputElementFocus: s} = t;
    return Jf(e, n, r, {
        runWithInputElementFocus: s
    }),
    null
}
;
function Uy(t) {
    return "nativeEvent"in t ? t.nativeEvent instanceof KeyboardEvent : t instanceof KeyboardEvent
}
const tD = y.createContext(void 0);
function n$(t) {
    const e = y.useContext(tD);
    return c.jsx(jk, {
        node: e,
        children: t.children
    })
}
function r$() {
    const t = eD();
    return {
        zIndexContainer: t ? vo.popoverInDialog : vo.popover,
        zIndexBackdrop: t ? vo.popoverBackdropInDialog : vo.popoverBackdrop
    }
}
const nD = y.forwardRef(function(e, n) {
    const {lifecycle: r, disableClickAway: s=!1, onRequestClose: i, contextualPortal: a, zIndex: o, disablePointerEvents: l=!1} = e
      , {zIndexContainer: d, zIndexBackdrop: u} = r$()
      , h = r === Zr.open ? D=>{
        D.preventDefault(),
        (i == null ? void 0 : i()) || D.stopPropagation()
    }
    : void 0;
    Jf("Escape", h);
    const f = y.useRef(null)
      , p = Kc([n, f])
      , m = r === Zr.closed
      , [g,C] = y.useState(void 0)
      , b = y.useMemo(()=>({
        maxHeight: g
    }), [g]);
    if (y.useEffect(()=>{
        const D = f.current;
        if (!D)
            return ()=>{}
            ;
        function R() {
            if (!D)
                return;
            const B = D.style.maxHeight;
            if (B) {
                const z = parseFloat(B);
                Number.isFinite(z) ? C(z) : C(void 0)
            }
        }
        R();
        const T = new MutationObserver(B=>{
            B.length > 0 && R()
        }
        );
        return T.observe(D, {
            attributeFilter: ["style"]
        }),
        ()=>{
            T.disconnect(),
            C(void 0)
        }
    }
    , [m]),
    m)
        return null;
    const k = D=>{
        "key"in D && D.key === "Escape" || D.stopPropagation()
    }
      , S = a ? n$ : jk;
    return c.jsxs(S, {
        children: [s === !1 && h ? c.jsx(KP, {
            "data-animated-popover-backdrop": !0,
            position: "fixed",
            onContextMenu: h,
            style: {
                background: "transparent"
            },
            onMouseDown: h,
            show: !0,
            zIndex: u
        }) : null, c.jsx(s$, {
            onClick: k,
            onPointerUp: k,
            onPointerDown: k,
            onMouseDown: k,
            onContextMenu: k,
            onKeyDown: k,
            ref: p,
            $zIndex: o ?? d,
            $disablePointerEvents: l,
            "data-animated-popover-container": !0,
            children: c.jsx(a$.Provider, {
                value: b,
                children: c.jsx(i$, {
                    ...e
                })
            })
        })]
    })
})
  , s$ = ae.div`
  z-index: ${t=>t.$zIndex};
  position: fixed;
  pointer-events: ${t=>t.$disablePointerEvents ? "none" : "auto"};
  ${Qf()}
`;
function i$(t) {
    const {lifecycle: e, onClosed: n, children: r, enterDelay: s=0, exitDelay: i=0, immediate: a, initiallyImmediate: o, onRequestClose: l=Df, transformOrigin: d, component: u=r5.div} = t
      , h = Kf()
      , f = ql(e)
      , p = y.useRef(!1)
      , m = y.useRef(!1);
    p.current === !1 && e === Zr.open && (m.current = !0),
    y.useEffect(()=>{
        e === Zr.closing && !p.current && (n == null || n())
    }
    , [e]);
    const g = h || a || o && !m.current
      , C = If({
        config: {
            tension: e === Zr.closing ? 2e3 : 1500,
            friction: 100,
            precision: .01
        },
        from: {
            opacity: 0,
            scale: .98
        },
        to: e === Zr.open ? {
            opacity: 2,
            scale: 1
        } : e === Zr.closing ? {
            opacity: 0,
            scale: .98
        } : {},
        delay: e === Zr.open ? s : i,
        immediate: g,
        onRest: ()=>{
            f.current === Zr.closing ? (n == null || n(),
            p.current = !1) : f.current === Zr.open && (p.current = !0)
        }
    });
    return c.jsx(u, {
        style: {
            opacity: C.opacity,
            transform: d ? C.scale.to(b=>`scale(${b})`) : void 0,
            transformOrigin: d,
            pointerEvents: e === Zr.open ? void 0 : "none",
            maxHeight: `var(${Qx})`,
            overflow: `var(${Xx})`
        },
        children: r({
            requestClose: l
        })
    })
}
const a$ = y.createContext(null)
  , o$ = y.createContext(!1);
function c$(t) {
    const {TooltipComponent: e, tooltipRef: n, tooltipProps: r} = t
      , {skipOptimization: s} = r
      , [i,a] = y.useState(s)
      , o = y.useRef(!1)
      , l = y.useRef()
      , d = y.useCallback(()=>{
        o.current = !1,
        clearTimeout(l.current),
        l.current = setTimeout(()=>{
            s || a(!1)
        }
        , 400)
    }
    , [s]);
    y.useEffect(()=>()=>clearTimeout(l.current), [s]);
    const u = y.useCallback(()=>a(!0), [])
      , h = y.useCallback(()=>{
        o.current = !0,
        u()
    }
    , [])
      , f = y.useCallback(b=>{
        o.current && ((b == null ? void 0 : b.firstElementChild)instanceof HTMLElement && b.firstElementChild.focus(),
        document.activeElement !== (b == null ? void 0 : b.firstElementChild) && b instanceof HTMLElement && b.focus())
    }
    , [])
      , p = y.useCallback(b=>{
        const k = self.document.getElementById("root");
        !b.target.contains(b.relatedTarget) && (k != null && k.contains(b.relatedTarget)) && o.current && d()
    }
    , [r.onClick]);
    if (i)
        return c.jsx(e, {
            ...r,
            ref: n ? Kc([f, n]) : f,
            onMouseLeave: d,
            onBlur: p
        });
    const m = ["aria-label", "role", "tabIndex", "className"].filter(b=>typeof r[b] == "string" || typeof r[b] == "number");
    m.push("style");
    const g = Object.fromEntries(Object.entries(r).filter(([b])=>m.includes(b)))
      , C = Object.fromEntries(Object.entries(r).filter(([b])=>Rx.includes(b)));
    return c.jsx(E8, {
        handlers: {
            handleMouseEnter: u,
            handleMouseDown: u,
            handleFocus: h
        },
        tooltipProps: {
            children: r.children,
            ...g,
            ...r.as ? {} : C
        },
        calculatedTitle: typeof r.title == "string" ? r.title : void 0
    })
}
const E8 = y.forwardRef((t,e)=>{
    const {calculatedTitle: n, tooltipProps: r} = t
      , {as: s=Lt, title: i, immediate: a, disabled: o, contentStyle: l, hideShortcut: d, shortcut: u, interactive: h, absoluteChildren: f, clickToOpen: p, position: m, contentFactory: g, transitionDelay: C, children: b, onMouseEnter: k, onMouseLeave: S, onClick: D, onOpen: R, onClose: T, maxWidth: B, methodsRef: z, skipOptimization: W, ...fe} = r
      , me = r["aria-label"] ?? typeof n == "string" ? n : void 0
      , _e = y.isValidElement(b)
      , I = _e && me && !b.props["aria-label"] ? y.cloneElement(b, {
        "aria-label": me
    }) : b;
    return c.jsx(s, {
        onFocus: t.handlers.handleFocus,
        onPointerEnter: t.handlers.handleMouseEnter,
        onPointerLeave: t.handlers.handleMouseOut,
        onPointerDown: t.handlers.handleMouseDown,
        onClick: t.handlers.handleClick,
        ref: e,
        children: I,
        "aria-label": _e ? void 0 : me,
        ...fe
    })
}
);
function l$(t) {
    const {menuTheme: e, children: n} = t
      , r = Pt();
    let s = t.elevation === -1 ? r.subTheme() : e ? r.menuTheme() : r.elevatedTheme();
    return t.elevation === 2 ? s = s.elevatedTheme() : t.elevation === 3 ? s = s.elevatedTheme().elevatedTheme() : t.elevation === 0 && (s = r.baseTheme || r),
    c.jsx($A, {
        theme: s,
        children: n
    })
}
const ep = y.forwardRef(function({elevation: e, $disableFocusRing: n, ...r}, s) {
    return c.jsx(l$, {
        menuTheme: !0,
        children: c.jsx(u$, {
            ref: s,
            $disableFocusRing: n,
            ...r
        })
    })
})
  , d$ = t=>`
  background-color: ${t.theme.color.bgBase};
  border: ${jc(t.theme.color.bgBorderSolidThin)};

  &:focus,
  &:focus-visible {
    outline: none;
    ${t.$disableFocusRing ? "box-shadow: none" : void 0};
  }
`
  , u$ = ae(r5.div)`
  ${d$};
`;
function h$(t, e=[]) {
    return y.useMemo(()=>ms(t), e).get()
}
const f$ = (t,e)=>{
    const n = y.useCallback(Le(r=>{
        W5[t] = r instanceof Function ? r(W5[t]) : r
    }
    ), [t]);
    return e !== void 0 && W5[t] === void 0 && n(e instanceof Function ? e() : e),
    [h$(()=>W5[t], [t]), n]
}
  , W5 = ut({})
  , p$ = ["top", "right", "bottom", "left", "bottom-start", "bottom-end", "top-start", "top-end"]
  , rD = 450
  , m$ = rD + 100
  , g$ = Yf * 2
  , fc = Yf;
function y$(t) {
    const {targetRef: e, popoverRef: n, interactive: r=!1, clickToOpen: s=!1, transitionDelay: i, position: a="bottom", onMouseEnter: o, onMouseLeave: l, onMouseDown: d, onClick: u, onOpen: h, onClose: f, immediate: p} = t
      , m = i ?? (r ? m$ : rD)
      , [g,C] = y.useState(a)
      , [b,k] = y.useState(!1)
      , [S,D] = y.useState(!1)
      , R = y.useRef();
    y.useEffect(()=>{
        R.current || (R.current = Qc())
    }
    , []);
    const [T,B] = w$()
      , {onShow: z, onHide: W, popoverProps: fe} = Jx({
        targetRef: e,
        popoverRef: n,
        options: {
            strategy: "fixed",
            onOpen: h,
            onClose: f,
            placement: a,
            maxSizeOptions: {
                padding: 8
            },
            modifiers: [{
                name: "position-setter",
                enabled: !0,
                phase: "main",
                fn({state: M}) {
                    typeof M.placement == "string" && p$.includes(M.placement) ? C(M.placement) : C(a)
                }
            }, {
                name: "preventOverflow",
                options: {
                    padding: 8
                }
            }, {
                name: "offset",
                options: {
                    offset: r ? [0, 0] : [0, g$]
                }
            }, {
                name: "flip",
                options: {
                    fallbackPlacements: C$(a, r)
                }
            }]
        }
    })
      , me = ql(fe.lifecycle)
      , _e = ql(T)
      , I = ql(z)
      , Q = ql(W)
      , P = ql(fe.onClosed);
    y.useEffect(()=>{
        var ce;
        let M, Z, U;
        if (S)
            if (_e.current && _e.current !== R.current || p)
                B(R.current),
                I.current();
            else {
                const De = ()=>window.setTimeout(()=>{
                    B(R.current),
                    z()
                }
                , m);
                M = De(),
                U = ()=>{
                    M !== void 0 && window.clearTimeout(M),
                    M = De()
                }
                ,
                (ce = e.current) == null || ce.addEventListener("mousemove", U)
            }
        else
            T !== R.current ? P.current() : Q.current(),
            Z = window.setTimeout(()=>{
                Zr.open !== me.current && _e.current === R.current && B(De=>{
                    if (De !== R.current)
                        return De
                }
                )
            }
            , 100);
        return ()=>{
            var De;
            M !== void 0 && window.clearTimeout(M),
            Z !== void 0 && window.clearTimeout(Z),
            U && ((De = e.current) == null || De.removeEventListener("mousemove", U))
        }
    }
    , [S, s]);
    const A = y.useCallback(M=>{
        k(!0),
        D(!0),
        o == null || o(M)
    }
    , [o])
      , E = y.useCallback(()=>{
        D(!1)
    }
    , [])
      , V = y.useCallback(M=>{
        var Z;
        r && M.relatedTarget instanceof Node && ((Z = n.current) != null && Z.contains(M.relatedTarget)) || (E(),
        l == null || l(M))
    }
    , [l])
      , X = y.useCallback(M=>{
        s || E(),
        d == null || d(M)
    }
    , [d, s])
      , L = y.useCallback(()=>{
        k(!0)
    }
    , [])
      , q = y.useCallback(M=>{
        s && (D(!0),
        k(!0),
        B(R.current),
        z()),
        u == null || u(M)
    }
    , [s, z, u])
      , oe = y.useMemo(()=>r ? b$(g) : v$(), [g, r])
      , we = T !== void 0 && T !== R.current
      , _ = y.useCallback(()=>{
        W(),
        D(!1),
        k(!1)
    }
    , [W]);
    return {
        handleFocus: L,
        handleMouseEnter: A,
        handleMouseOut: V,
        handleMouseDown: X,
        handleClick: q,
        TooltipPopoverWithOffset: oe,
        hasHovered: b,
        onHideRef: Q,
        disableMouseOver: E,
        onShow: z,
        onHide: _,
        popoverProps: fe,
        shouldBeImmediate: we,
        currentPosition: g
    }
}
function C$(t, e) {
    return e ? ["top", "top-start", "bottom-start", "bottom"] : t.includes("top") ? ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "right"].filter(n=>n !== t) : t.includes("left") ? ["right", "bottom", "bottom-start", "bottom-end", "top", "top-start", "top-end"] : t.includes("right") ? ["left", "bottom", "bottom-start", "bottom-end", "top", "top-start", "top-end"] : ["bottom", "bottom-start", "bottom-end", "top", "top-start", "top-end", "right", "left"].filter(n=>n !== t)
}
const b$ = t=>y.forwardRef((e,n)=>c.jsx("div", {
    style: k$(t, fc),
    ref: n,
    children: c.jsx(sD, {
        style: e.style,
        children: e.children
    })
}))
  , v$ = ()=>y.forwardRef((t,e)=>c.jsx(sD, {
    style: t.style,
    ref: e,
    children: t.children
}));
function w$() {
    return f$("__usePopoverState__")
}
const sD = ae(ep).attrs({
    elevation: 1
})`
  border-radius: 4px;
  box-shadow: ${t=>t.theme.shadowLow};
`
  , k$ = (t,e)=>{
    switch (t) {
    case "top":
    case "top-end":
    case "top-start":
        return {
            position: "relative",
            paddingBottom: e,
            paddingTop: e
        };
    case "bottom":
    case "bottom-end":
    case "bottom-start":
        return {
            position: "relative",
            paddingTop: e,
            paddingBottom: e
        };
    case "left":
        return {
            position: "relative",
            paddingRight: e,
            paddingLeft: e
        };
    case "right":
        return {
            position: "relative",
            paddingLeft: e,
            paddingRight: e
        };
    default:
        return {}
    }
}
;
function x$(t) {
    var l, d;
    const [e,n] = y.useState(!0)
      , {popoverRef: r, targetRef: s} = t
      , i = (l = r.current) == null ? void 0 : l.getBoundingClientRect()
      , a = (d = s.current) == null ? void 0 : d.getBoundingClientRect();
    if (!e)
        return null;
    let o = {};
    if (i && a)
        switch (t.position) {
        case "top":
        case "top-end":
        case "top-start":
            o = G5(i, [a.left, a.top], [a.right, a.top], "top");
            break;
        case "bottom":
        case "bottom-end":
        case "bottom-start":
            o = G5(i, [a.left, a.bottom], [a.right, a.bottom], "bottom");
            break;
        case "left":
            o = G5(i, [a.left, a.top], [a.left, a.bottom], "left");
            break;
        case "right":
            o = G5(i, [a.right, a.top], [a.right, a.bottom], "right");
            break
        }
    return c.jsx("div", {
        style: o,
        onPointerLeave: ()=>{
            n(!1)
        }
    })
}
function G5(t, e, n, r) {
    const [s,i] = e
      , [a,o] = n
      , l = {
        position: "absolute"
    };
    if (r === "left" || r === "right") {
        const {top: d, height: u} = t;
        l.top = 0,
        l.bottom = 0,
        l.width = fc;
        const h = 100 * (i - d) / (u || 1)
          , f = 100 * (o - d) / (u || 1);
        r === "left" ? (l.right = -1 * fc,
        l.clipPath = `polygon(0 0, 100% ${h}%, 100% ${f}%, 0 100%)`) : r === "right" && (l.left = -1 * fc,
        l.clipPath = `polygon(0 ${h}%, 100% 0, 100% 100%, 0 ${f}%)`)
    } else if (r === "top" || r === "bottom") {
        const {left: d, width: u} = t;
        l.left = 0,
        l.right = 0,
        l.height = fc;
        const h = 100 * (s - d) / (u || 1)
          , f = 100 * (a - d) / (u || 1);
        return r === "top" ? (l.bottom = -1 * fc,
        l.clipPath = `polygon(0 0, 100% 0, ${f}% 100%, ${h}% 100%)`) : r === "bottom" && (l.top = -1 * fc,
        l.clipPath = `polygon(${h}% 0, ${f}% 0, 100% 100%, 0 100%)`),
        l
    }
    return l
}
const e4 = {
    vertical: 5,
    horizontal: 8
}
  , D$ = ae(Lt)`
  padding: ${e4.vertical}px ${e4.horizontal}px;
  font-size: ${Pc("micro")};
  max-width: 520px;
  color: ${t=>t.theme.color.labelBase};
`
  , c5 = y.forwardRef(function(e, n) {
    return y.useContext(o$) ? c.jsx(c$, {
        tooltipProps: e,
        TooltipComponent: Hy,
        tooltipRef: n
    }) : c.jsx(Hy, {
        ...e,
        ref: n
    })
})
  , Hy = y.forwardRef(function(e, n) {
    return c.jsx(E$, {
        fallback: ()=>c.jsx(c.Fragment, {
            children: e.children
        }),
        children: c.jsx(S$, {
            ...e,
            ref: n
        })
    })
})
  , S$ = rn(y.forwardRef((t,e)=>{
    const {disabled: n, contentStyle: r, title: s, hideShortcut: i, shortcut: a, interactive: o, absoluteChildren: l=!1, clickToOpen: d, contentFactory: u, maxWidth: h, methodsRef: f} = t
      , p = y.useRef(null)
      , m = y.useRef(null)
      , {onHideRef: g, hasHovered: C, onShow: b, onHide: k, disableMouseOver: S, TooltipPopoverWithOffset: D, shouldBeImmediate: R, popoverProps: T, currentPosition: B, ...z} = y$({
        ...t,
        targetRef: p,
        popoverRef: m
    });
    Jf(I$, _e=>{
        var Q;
        _e.target && Xf(_e.target) && ((Q = g.current) == null || Q.call(g))
    }
    , void 0, {
        runWithInputElementFocus: !0
    }),
    y.useEffect(()=>{
        if (!(d && us) || T.lifecycle !== Zr.open)
            return;
        const _e = I=>{
            var Q, P;
            !((Q = m.current) != null && Q.contains(I.target)) && !((P = p.current) != null && P.contains(I.target)) && k()
        }
        ;
        return self.document.addEventListener("click", _e, {
            capture: !0
        }),
        ()=>self.document.removeEventListener("click", _e, {
            capture: !0
        })
    }
    , [d, us, k, T.lifecycle]),
    y.useImperativeHandle(f, ()=>({
        hide: k,
        show: b
    }));
    const W = typeof s == "function" ? s({
        hasHovered: C
    }) : s;
    if (us && !d || n || W === null)
        return c.jsx(E8, {
            handlers: {
                handleClick: z.handleClick
            },
            ref: Kc([e, p]),
            tooltipProps: t,
            calculatedTitle: W
        });
    const fe = c.jsx(E8, {
        tooltipProps: t,
        handlers: z,
        calculatedTitle: W,
        ref: Kc([e, p])
    });
    if (!C)
        return fe;
    const me = i ? !1 : a;
    return c.jsxs(c.Fragment, {
        children: [fe, c.jsx(nD, {
            ref: m,
            onRequestClose: k,
            immediate: R,
            disableClickAway: !0,
            component: D,
            zIndex: vo.tooltip,
            ...T,
            children: ()=>{
                const _e = u == null ? void 0 : u({
                    requestClose: k
                });
                let I;
                return _e === void 0 ? (W || me) && (I = c.jsxs(c.Fragment, {
                    children: [W ? c.jsx(zy, {
                        maxWidth: h,
                        children: W
                    }) : null, me ? a : null]
                })) : typeof _e == "string" ? I = c.jsxs(c.Fragment, {
                    children: [c.jsx(zy, {
                        maxWidth: h,
                        children: _e
                    }), me ? a : null]
                }) : I = _e,
                I === void 0 ? null : c.jsxs(D$, {
                    gap: 8,
                    align: "center",
                    onPointerLeave: S,
                    onContextMenu: Q=>{
                        Q.stopPropagation()
                    }
                    ,
                    style: r,
                    children: [I, o ? c.jsx(_$, {
                        delay: 10,
                        children: l ? c.jsx(FP, {
                            parentRef: m,
                            direction: "vertical"
                        }) : c.jsx(x$, {
                            popoverRef: m,
                            targetRef: p,
                            position: B
                        })
                    }) : null]
                })
            }
        })]
    })
}
))
  , _$ = t=>{
    const [e,n] = y.useState(!1);
    return y.useEffect(()=>{
        const r = setTimeout(()=>n(!0), t.delay);
        return ()=>clearTimeout(r)
    }
    , [t.delay]),
    e ? c.jsx(c.Fragment, {
        children: t.children
    }) : null
}
  , I$ = ()=>!0
  , zy = ae("div")`
  ${t=>t.maxWidth && `max-width: ${t.maxWidth}px;`}
  font-weight: normal;
`;
class E$ extends y.Component {
    constructor(e) {
        super(e),
        this.state = {
            error: !1
        }
    }
    componentDidCatch() {
        this.setState({
            error: !0
        })
    }
    render() {
        return this.state.error ? this.props.fallback() : this.props.children
    }
}
const A$ = y.createContext(null)
  , j$ = ()=>y.useContext(A$)
  , pl = ()=>j$().store
  , zde = ({width: t=60, height: e=20, warning: n=10})=>{
    const r = pl()
      , s = Pt()
      , [i,a] = y.useState([])
      , o = ()=>{
        a(h=>{
            const f = [...h, $c.callCount];
            return $c.reset(),
            f.length > t / 4 && f.shift(),
            f
        }
        )
    }
    ;
    y.useEffect(()=>{
        const h = window.setInterval(()=>{
            o()
        }
        , be.SECOND);
        return ()=>{
            window.clearInterval(h)
        }
    }
    );
    const l = Math.ceil(i.length > 0 ? i.reduce((h,f)=>h + f, 0) : 0)
      , d = i.reduce((h,f)=>Math.max(h, f), 5)
      , u = y.useCallback((h,f,p)=>({
        position: "absolute",
        bottom: "0",
        right: (i.length - 1 - p) * 4 + "px",
        height: 2 + h + "px",
        width: "4px",
        backgroundColor: wo.toCss("LCH", wo.mix(wo.fromCss(s.color.bgShadeHover), wo.fromCss(s.color.redBase), f / n))
    }), [i.length]);
    return c.jsx(c5, {
        title: `Total network operations in the last ${Math.ceil(t / 4)}s`,
        children: c.jsx(Lt, {
            align: "center",
            children: c.jsxs(M$, {
                style: {
                    width: t,
                    height: e,
                    border: r.hasDeveloperOptions ? "solid 1px red" : void 0
                },
                children: [i.map((h,f)=>c.jsx("div", {
                    style: u(e * h / d, h, f)
                }, f)), c.jsxs(T$, {
                    type: "micro",
                    color: l > n ? "redText" : "labelTitle",
                    children: [c.jsxs(Xe, {
                        type: "micro",
                        color: "labelMuted",
                        children: ["Net", " "]
                    }), l]
                })]
            })
        })
    })
}
  , M$ = ae.div`
  position: relative;
  overflow: hidden;
`
  , T$ = ae(Xe)`
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  text-align: center;
  line-height: 20px;
`
  , _m = class _m {
    static registerCall() {
        this.callCount += 1
    }
    static reset() {
        this.callCount = 0
    }
}
;
_m.callCount = 0;
let $c = _m;
const sd = class sd { // class GraphQLClient
    get onClientReady() {
        return this._onClientReady
    }
    constructor(e) {
        this.downtimeMode = void 0,
        this._onClientReady = new Tt,
        this.headers = {
            "Linear-Client-Version": V3.versionString(ft.BUILD_REVISION),
            "Linear-Client-ID": F.clientId
        },
        this.client = new Mt.GraphQLClient(e.httpURL,{
            credentials: "include",
            errorPolicy: "none",
            keepalive: !0
        }),
        Ln(this, {
            downtimeMode: ut
        })
    }
    setUser({userId: e, userAccountId: n, organizationId: r}) {
        e ? this.headers.user = e : delete this.headers.user,
        n ? this.headers.userAccount = n : delete this.headers.userAccount,
        r ? this.headers.organization = r : delete this.headers.organization,
        this._onClientReady.autoFire()
    }
    async cacheGetAndRefresh(e, n, r, s) {
        const i = this.getGraphQLHeaders(r)
          , a = this.createCacheKey({
            query: e,
            variables: n,
            userId: i.user
        })
          , o = this.cacheGet(a)
          , l = u=>this.query(e, n, {
            ...r,
            cache: !1
        }).then(h=>(u && !(r != null && r.dontLog) && F.network("Refreshed cache with GraphQL response", {
            query: e,
            variables: n
        }),
        this.cacheSet(a, h, r == null ? void 0 : r.cacheTTL),
        s ? s(h) : h))
          , d = ()=>{
            this.cacheDelete(a)
        }
        ;
        if (!o) {
            const u = await l();
            return new J2(u,{
                clearCache: d,
                query: l.bind(!0),
                isFresh: !0
            })
        }
        return new J2(s ? s(o) : o,{
            clearCache: d,
            query: l.bind(!0)
        })
    }
    async query(e, n, r) {
        const s = this.getGraphQLHeaders(r)
          , i = sd.requestNumber++;
        $c.registerCall();
        const a = this.outdent(e);
        r != null && r.dontLog || F.network(`Sending query #${i}`, {
            query: a,
            variables: n
        });
        let o;
        if (r != null && r.cache) {
            o = this.createCacheKey({
                query: e,
                variables: n,
                cacheKey: r.cacheKey,
                userId: s.user
            });
            const d = this.cacheGet(o);
            if (d)
                return r != null && r.dontLog || F.network(`Returning cached query response #${i}`, {
                    query: a,
                    variables: n
                }),
                d
        }
        const l = await this.client.request(a, n, s).catch(d=>{
            var f;
            const u = iy(d)
              , h = this.operationName(a);
            if (u.type === "network error") {
                const p = r == null ? void 0 : r.retry;
                if (p !== void 0 && p > 0)
                    return this.query(e, n, {
                        ...r,
                        retry: p - 1
                    });
                F.network("Network error executing query" + (h ? " " + h : ""), {
                    query: a,
                    variables: n
                })
            } else {
                const p = ((f = u.metaData) == null ? void 0 : f.code) === "GRAPHQL_VALIDATION_FAILED";
                if (u.userError && !p)
                    F.info(`User error executing query${h ? " " + h : ""}`, {
                        error: u,
                        query: a,
                        variables: n
                    });
                else {
                    const m = p ? "Validation failure executing query" : "Error executing query";
                    F.error(`${m}${h ? " " + h : ""}`, u, {
                        query: a,
                        variables: n
                    })
                }
            }
            throw u
        }
        );
        return r != null && r.dontLog || F.network(`Received query result #${i}`, {
            ...ft.DEBUG_LOG_NETWORK_DATA && {
                result: l
            }
        }),
        r != null && r.cache && o && this.cacheSet(o, l, r.cacheTTL),
        l
    }
    async mutate(e, n, r) { // the method to send mutations to the backend with GraphQL
        const s = this.getGraphQLHeaders(r)
          , i = this.outdent(e)
          , a = sd.requestNumber++;
        if ($c.registerCall(),
        r != null && r.dontLog || F.network(`Sending mutation #${a}`, {
            mutation: i,
            variables: n
        }),
        hs) {
            const l = this.operationName(i);
            return l ? new Promise(u=>u({
                [l]: {
                    success: !0
                }
            })) : new Promise(u=>u({}))
        }
        const o = await this.client.request(i, n, s).catch(l=>{
            const d = iy(l)
              , u = this.operationName(i);
            if (d.type === "network error" || d.type === "downtime" || d.type === "lock timeout") {
                const h = ay(d);
                h && lt(()=>this.downtimeMode = h);
                const f = r == null ? void 0 : r.retry;
                if (f !== void 0 && f > 0)
                    return this.mutate(e, n, {
                        ...r,
                        retry: f - 1
                    });
                const p = d.type === "network error" ? "Network" : d.type.capitalize();
                F.network(`${p} error executing mutation` + (u ? " " + u : ""), {
                    query: i,
                    variables: n
                })
            } else
                (!d.userError || r != null && r.logUserErrors) && F.error("Error executing mutation" + (u ? " " + u : ""), d, {
                    query: i,
                    variables: n
                });
            throw d
        }
        );
        return this.downtimeMode && lt(()=>this.downtimeMode = void 0),
        r != null && r.dontLog || F.network(`Received mutation result #${a}`, {
            ...ft.DEBUG_LOG_NETWORK_DATA && {
                result: o
            }
        }),
        o
    }
    async restModelsJsonStream(e, n, r=0) {
        const s = typeof (n == null ? void 0 : n.retry) == "number" ? {
            times: n.retry
        } : n == null ? void 0 : n.retry;
        try {
            let i = [], a, o;
            const l = this.restModelsJsonStreamGen(e, Number.MAX_SAFE_INTEGER, n);
            let d = !0
              , u = !1;
            for await(const h of l) {
                if (u)
                    throw new Error("restModelsJsonStream got results after completed!");
                d ? (i = h.models,
                a = h.syncActions,
                o = h.metadata,
                d = !1) : (i = i.length ? i.concat(h.models) : h.models,
                h.syncActions && (a = a ? a.concat(h.syncActions) : h.syncActions),
                h.metadata && (o = h.metadata))
            }
            if (u = !0,
            !o)
                throw new et({
                    type: "internal error",
                    message: "Internal error: No _metadata_ in response",
                    userError: !1
                });
            return {
                models: i,
                syncActions: a,
                metadata: o
            }
        } catch (i) {
            // Retry in catch.
            if (this.isModelsCountMismatchError(i) && r < 2)
                return await Na(be.SECOND),
                await this.restModelsJsonStream(e, n, r + 1);
            if (s && s.times > r && (s.retryAllErrors || p8(i) || s.retryOnRatelimit && hd(i)))
                return s.delayMs && await Na(s.delayMs(r)),
                await this.restModelsJsonStream(e, n, r + 1);
            throw i
        }
    }
    getFirstSyncId() {
        return this._firstSyncId
    }
    setFirstSyncId(e) {
        this._firstSyncId = e
    }
    async*restModelsJsonStreamGen(e, n, r) { // This method send the request and parse stream results.
        const s = `${ft.API_SERVER_URL}${e.startsWith("/") ? "" : "/"}${e}`
          , i = (r == null ? void 0 : r.asUserAccount) === !0 ? Ic(this.headers, "user") : {
            ...this.headers
        }
          , a = sd.requestNumber++;
        $c.registerCall(),
        r != null && r.dontLog || F.network(`Sending REST query #${a}`, {
            url: s
        }),
        hs && (i["linear-load-demo-workspace"] = "true");
        const o = await fetch(s, {
            method: (r == null ? void 0 : r.method) ?? "GET",
            headers: {
                ...i,
                accept: "text/plain",
                "content-type": "application/json"
            },
            body: (r == null ? void 0 : r.method) === "POST" ? r.body : void 0,
            cache: "no-cache",
            credentials: "include"
        }).catch(C=>{
            throw Jn.increment("network.error", {
                source: "rest",
                path: e.split("?")[0]
            }, {
                onlySendWhenOnline: !0
            }),
            new et({
                type: "network error",
                message: `Network error: ${C.message}`,
                userError: !0,
                requestId: void 0
            })
        }
        );
        if (!o.ok) {
            const C = await rO(o)
              , b = ay(C);
            throw b && lt(()=>this.downtimeMode = b),
            C
        }
        if (!o.body)
            throw new et({
                type: "internal error",
                message: "Internal error: No response body",
                userError: !1,
                requestId: ya(o.headers)
            });
        this.downtimeMode && lt(()=>this.downtimeMode = void 0);
        let l = [], d, u;
        const h = {}
        // This f function is to handle one line of the streaming response.
          , f = C=>{
            if (!C)
                return;
            const b = C[0] === "{" ? -1 : C.indexOf("=");
            let k, S;
            if (b >= 0) { // Handle a model in this branch.
                k = C.substring(0, b);
                const D = C.substring(b + 1);
                S = JSON.parse(D), // deserialize models from streams
                S.__class || (S.__class = k)
            } else
                S = JSON.parse(C),
                k = S.__class;
            if (!k)
                throw new et({
                    type: "internal error",
                    message: `Internal error: invalid streaming response line without modelName: ${C.substring(0, b > 0 ? b : 30)}`,
                    userError: !1,
                    requestId: ya(o.headers)
                });
            if (u)
                throw new et({
                    type: "internal error",
                    message: `Internal error: _metadata_ not last entity in response: ${C.substring(0, b > 0 ? b : 30)}`,
                    userError: !1,
                    requestId: ya(o.headers)
                });
            k === "_metadata_" ? u = S : k === "SyncAction" ? (d || (d = []), // Handle _metadata_.
            d.push(S),
            h[k] = (h[k] || 0) + 1) : (l.push(S), // The parsed model will be pushed into an array and returned to the caller.
            h[k] = (h[k] || 0) + 1)
        }
          , p = async(C,b)=>{
            let k = 0
              , S = 0;
            for (; ; ) {
                // Give the event loop a chance to process other events after each 2k lines.
                ++k % 2e3 === 0 && await new Promise(R=>setTimeout(R, 0));
                // Split lines and parse them.
                let D = C.indexOf(`
`, S);
                if (D === -1)
                    if (b)
                        D = void 0;
                    else
                        return C.substring(S);
                if (f(C.substring(S, D)), // Parse a single line.
                D === void 0)
                    return "";
                S = D + 1
            }
        }
          , m = async C=>{
            const b = `${C instanceof Error ? C.message : typeof C == "string" ? C : "Unknown error"}`;
            throw Jn.increment("network.error", {
                source: "rest_stream_body"
            }, {
                onlySendWhenOnline: !0
            }),
            new et({
                type: "internal error",
                message: `Internal/Network error while reading streaming response: ${b}`,
                userError: !1,
                requestId: ya(o.headers)
            })
        }
        ;
        F.network(`Processing REST query response #${a}`, {
            url: s,
            streamProcessing: !1
        });
        {
            const C = await o.text().catch(m);
            await p(C, !0),
            yield{
                models: l,
                syncActions: d,
                metadata: u
            }
        }
        if (!u)
            throw new et({
                type: "internal error",
                message: "Internal error: No _metadata_ in response",
                userError: !1,
                requestId: ya(o.headers)
            });
        if (r != null && r.dontLog || F.network(`Received REST query response #${a}`, {
            url: s,
            requestId: ya(o.headers),
            metadata: u,
            ...ft.DEBUG_LOG_NETWORK_DATA && {
                models: l,
                syncActions: d,
                metadata: u
            }
        }),
        u.returnedModelsCount) {
            // Examine metadata of the response.
            const C = [];
            for (const [b,k] of Object.entries(u.returnedModelsCount))
                (h[b] || 0) !== (k || 0) && C.push(`${b}: ${h[b]}/${k}`);
            if (C.length)
                throw F.error("Stream response models count mismatch", void 0, {
                    url: s,
                    requestId: ya(o.headers),
                    errors: C,
                    readModelsCount: h,
                    returnedModelsCount: u.returnedModelsCount
                }),
                new et({
                    type: "internal error",
                    message: "Internal error: Stream response models count mismatch",
                    userError: !1,
                    requestId: ya(o.headers)
                })
        }
    }
    isModelsCountMismatchError(e) {
        return P1(e) && e.type === "internal error" && e.message.includes("Stream response models count mismatch")
    }
    getGraphQLHeaders(e) {
        const n = {
            ...this.headers
        };
        return (e == null ? void 0 : e.asUserAccount) === !0 && (delete n.user,
        delete n.organization),
        (e == null ? void 0 : e.asAnonymous) === !0 && (delete n.user,
        delete n.userAccount,
        delete n.organization,
        n["linear-force-anonymous"] = "true"),
        hs && (n["linear-load-demo-workspace"] = "true"),
        e != null && e.region && (n[OP] = e.region),
        n
    }
    cacheGet(e) {
        const n = ke.getSession(e);
        if (n && typeof n == "object" && "cacheData"in n) {
            const r = n
              , s = r.expiresAt;
            if (s === null || Date.now() < s)
                return r.cacheData;
            this.cacheDelete(e);
            return
        }
        return n
    }
    cacheSet(e, n, r=1 / 0) {
        ke.setSession(e, {
            cacheData: n,
            expiresAt: Date.now() + r
        })
    }
    cacheDelete(e) {
        ke.removeSession(e)
    }
    outdent(e) {
        let n = e;
        for (; n.substring(0, 1) === `
`; )
            n = n.substring(1);
        let r = 0;
        for (; r < n.length && n.substring(r, r + 1) === " "; )
            r++;
        if (r === 0)
            return n.trim();
        {
            const s = new RegExp(`^\\s{${r}}`,"gm");
            return n = n.replace(s, "").trim(),
            n
        }
    }
    operationName(e) {
        const n = e.match(/\{[^\w]*(\w*)/);
        if (n)
            return n[1]
    }
    createCacheKey(e) {
        const {cacheKey: n, query: r, variables: s, userId: i} = e
          , a = [iD];
        return i && a.push(i),
        n && a.push($1(n)),
        a.push($1(r + (s ? JSON.stringify(s) : ""))),
        a.join("_")
    }
}
;
sd.requestNumber = 1;
let A8 = sd;
const iD = "cache";
function L$(t) {
    return function(e) {
        return t == null ? void 0 : t[e]
    }
}
var O$ = L$
  , R$ = O$
  , P$ = {
    À: "A",
    Á: "A",
    Â: "A",
    Ã: "A",
    Ä: "A",
    Å: "A",
    à: "a",
    á: "a",
    â: "a",
    ã: "a",
    ä: "a",
    å: "a",
    Ç: "C",
    ç: "c",
    Ð: "D",
    ð: "d",
    È: "E",
    É: "E",
    Ê: "E",
    Ë: "E",
    è: "e",
    é: "e",
    ê: "e",
    ë: "e",
    Ì: "I",
    Í: "I",
    Î: "I",
    Ï: "I",
    ì: "i",
    í: "i",
    î: "i",
    ï: "i",
    Ñ: "N",
    ñ: "n",
    Ò: "O",
    Ó: "O",
    Ô: "O",
    Õ: "O",
    Ö: "O",
    Ø: "O",
    ò: "o",
    ó: "o",
    ô: "o",
    õ: "o",
    ö: "o",
    ø: "o",
    Ù: "U",
    Ú: "U",
    Û: "U",
    Ü: "U",
    ù: "u",
    ú: "u",
    û: "u",
    ü: "u",
    Ý: "Y",
    ý: "y",
    ÿ: "y",
    Æ: "Ae",
    æ: "ae",
    Þ: "Th",
    þ: "th",
    ß: "ss",
    Ā: "A",
    Ă: "A",
    Ą: "A",
    ā: "a",
    ă: "a",
    ą: "a",
    Ć: "C",
    Ĉ: "C",
    Ċ: "C",
    Č: "C",
    ć: "c",
    ĉ: "c",
    ċ: "c",
    č: "c",
    Ď: "D",
    Đ: "D",
    ď: "d",
    đ: "d",
    Ē: "E",
    Ĕ: "E",
    Ė: "E",
    Ę: "E",
    Ě: "E",
    ē: "e",
    ĕ: "e",
    ė: "e",
    ę: "e",
    ě: "e",
    Ĝ: "G",
    Ğ: "G",
    Ġ: "G",
    Ģ: "G",
    ĝ: "g",
    ğ: "g",
    ġ: "g",
    ģ: "g",
    Ĥ: "H",
    Ħ: "H",
    ĥ: "h",
    ħ: "h",
    Ĩ: "I",
    Ī: "I",
    Ĭ: "I",
    Į: "I",
    İ: "I",
    ĩ: "i",
    ī: "i",
    ĭ: "i",
    į: "i",
    ı: "i",
    Ĵ: "J",
    ĵ: "j",
    Ķ: "K",
    ķ: "k",
    ĸ: "k",
    Ĺ: "L",
    Ļ: "L",
    Ľ: "L",
    Ŀ: "L",
    Ł: "L",
    ĺ: "l",
    ļ: "l",
    ľ: "l",
    ŀ: "l",
    ł: "l",
    Ń: "N",
    Ņ: "N",
    Ň: "N",
    Ŋ: "N",
    ń: "n",
    ņ: "n",
    ň: "n",
    ŋ: "n",
    Ō: "O",
    Ŏ: "O",
    Ő: "O",
    ō: "o",
    ŏ: "o",
    ő: "o",
    Ŕ: "R",
    Ŗ: "R",
    Ř: "R",
    ŕ: "r",
    ŗ: "r",
    ř: "r",
    Ś: "S",
    Ŝ: "S",
    Ş: "S",
    Š: "S",
    ś: "s",
    ŝ: "s",
    ş: "s",
    š: "s",
    Ţ: "T",
    Ť: "T",
    Ŧ: "T",
    ţ: "t",
    ť: "t",
    ŧ: "t",
    Ũ: "U",
    Ū: "U",
    Ŭ: "U",
    Ů: "U",
    Ű: "U",
    Ų: "U",
    ũ: "u",
    ū: "u",
    ŭ: "u",
    ů: "u",
    ű: "u",
    ų: "u",
    Ŵ: "W",
    ŵ: "w",
    Ŷ: "Y",
    ŷ: "y",
    Ÿ: "Y",
    Ź: "Z",
    Ż: "Z",
    Ž: "Z",
    ź: "z",
    ż: "z",
    ž: "z",
    Ĳ: "IJ",
    ĳ: "ij",
    Œ: "Oe",
    œ: "oe",
    ŉ: "'n",
    ſ: "s"
}
  , $$ = R$(P$)
  , F$ = $$
  , N$ = F$
  , V$ = T3
  , B$ = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g
  , U$ = "\\u0300-\\u036f"
  , H$ = "\\ufe20-\\ufe2f"
  , z$ = "\\u20d0-\\u20ff"
  , Z$ = U$ + H$ + z$
  , q$ = "[" + Z$ + "]"
  , W$ = RegExp(q$, "g");
function G$(t) {
    return t = V$(t),
    t && t.replace(B$, N$).replace(W$, "")
}
var K$ = G$;
const ml = Cn(K$);
var Y$ = JE
  , Q$ = Sf
  , X$ = eA
  , J$ = tA;
function eF(t, e) {
    if (t == null)
        return {};
    var n = Y$(J$(t), function(r) {
        return [r]
    });
    return e = Q$(e),
    X$(t, n, function(r, s) {
        return e(r, s[0])
    })
}
var tF = eF;
const pd = Cn(tF);
var nF = rA
  , rF = sA
  , sF = nA
  , Zy = iA
  , iF = sF(function(t, e) {
    return Zy(t) ? nF(t, rF(e, 1, Zy, !0)) : []
})
  , aF = iF;
const oF = Cn(aF);
var mo;
(function(t) {
    t.none = "none",
    t.due = "due",
    t.dueSoon = "dueSoon",
    t.dueToday = "dueToday",
    t.overdue = "overdue"
}
)(mo || (mo = {}));
class _u {
    static qualifierForDueDate(e, n) {
        if (!e)
            return "none";
        const r = n ?? new Date
          , s = e instanceof Date ? e : e.toLocalDate()
          , i = r.midnight().daysTo(s.midnight());
        return n ? i >= 0 ? "none" : "overdue" : i > 7 ? "due" : i > 0 ? "dueSoon" : i === 0 ? "dueToday" : "overdue"
    }
    static get allDueDateQualifierTypes() {
        return ["none", "due", "dueSoon", "dueToday", "overdue"]
    }
}
var aD = {
    exports: {}
};
(function(t, e) {
    (function(n, r, s) {
        t.exports = s(),
        t.exports.default = s()
    }
    )("slugify", FA, function() {
        var n = JSON.parse(`{"$":"dollar","%":"percent","&":"and","<":"less",">":"greater","|":"or","¢":"cent","£":"pound","¤":"currency","¥":"yen","©":"(c)","ª":"a","®":"(r)","º":"o","À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Æ":"AE","Ç":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","Þ":"TH","ß":"ss","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","æ":"ae","ç":"c","è":"e","é":"e","ê":"e","ë":"e","ì":"i","í":"i","î":"i","ï":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","þ":"th","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Č":"C","č":"c","Ď":"D","ď":"d","Đ":"DJ","đ":"dj","Ē":"E","ē":"e","Ė":"E","ė":"e","Ę":"e","ę":"e","Ě":"E","ě":"e","Ğ":"G","ğ":"g","Ģ":"G","ģ":"g","Ĩ":"I","ĩ":"i","Ī":"i","ī":"i","Į":"I","į":"i","İ":"I","ı":"i","Ķ":"k","ķ":"k","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ł":"L","ł":"l","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","Ő":"O","ő":"o","Œ":"OE","œ":"oe","Ŕ":"R","ŕ":"r","Ř":"R","ř":"r","Ś":"S","ś":"s","Ş":"S","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","Ť":"T","ť":"t","Ũ":"U","ũ":"u","Ū":"u","ū":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","ƒ":"f","Ơ":"O","ơ":"o","Ư":"U","ư":"u","ǈ":"LJ","ǉ":"lj","ǋ":"NJ","ǌ":"nj","Ș":"S","ș":"s","Ț":"T","ț":"t","˚":"o","Ά":"A","Έ":"E","Ή":"H","Ί":"I","Ό":"O","Ύ":"Y","Ώ":"W","ΐ":"i","Α":"A","Β":"B","Γ":"G","Δ":"D","Ε":"E","Ζ":"Z","Η":"H","Θ":"8","Ι":"I","Κ":"K","Λ":"L","Μ":"M","Ν":"N","Ξ":"3","Ο":"O","Π":"P","Ρ":"R","Σ":"S","Τ":"T","Υ":"Y","Φ":"F","Χ":"X","Ψ":"PS","Ω":"W","Ϊ":"I","Ϋ":"Y","ά":"a","έ":"e","ή":"h","ί":"i","ΰ":"y","α":"a","β":"b","γ":"g","δ":"d","ε":"e","ζ":"z","η":"h","θ":"8","ι":"i","κ":"k","λ":"l","μ":"m","ν":"n","ξ":"3","ο":"o","π":"p","ρ":"r","ς":"s","σ":"s","τ":"t","υ":"y","φ":"f","χ":"x","ψ":"ps","ω":"w","ϊ":"i","ϋ":"y","ό":"o","ύ":"y","ώ":"w","Ё":"Yo","Ђ":"DJ","Є":"Ye","І":"I","Ї":"Yi","Ј":"J","Љ":"LJ","Њ":"NJ","Ћ":"C","Џ":"DZ","А":"A","Б":"B","В":"V","Г":"G","Д":"D","Е":"E","Ж":"Zh","З":"Z","И":"I","Й":"J","К":"K","Л":"L","М":"M","Н":"N","О":"O","П":"P","Р":"R","С":"S","Т":"T","У":"U","Ф":"F","Х":"H","Ц":"C","Ч":"Ch","Ш":"Sh","Щ":"Sh","Ъ":"U","Ы":"Y","Ь":"","Э":"E","Ю":"Yu","Я":"Ya","а":"a","б":"b","в":"v","г":"g","д":"d","е":"e","ж":"zh","з":"z","и":"i","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"h","ц":"c","ч":"ch","ш":"sh","щ":"sh","ъ":"u","ы":"y","ь":"","э":"e","ю":"yu","я":"ya","ё":"yo","ђ":"dj","є":"ye","і":"i","ї":"yi","ј":"j","љ":"lj","њ":"nj","ћ":"c","џ":"dz","Ґ":"G","ґ":"g","฿":"baht","ა":"a","ბ":"b","გ":"g","დ":"d","ე":"e","ვ":"v","ზ":"z","თ":"t","ი":"i","კ":"k","ლ":"l","მ":"m","ნ":"n","ო":"o","პ":"p","ჟ":"zh","რ":"r","ს":"s","ტ":"t","უ":"u","ფ":"f","ქ":"k","ღ":"gh","ყ":"q","შ":"sh","ჩ":"ch","ც":"ts","ძ":"dz","წ":"ts","ჭ":"ch","ხ":"kh","ჯ":"j","ჰ":"h","ẞ":"SS","Ạ":"A","ạ":"a","Ả":"A","ả":"a","Ấ":"A","ấ":"a","Ầ":"A","ầ":"a","Ẩ":"A","ẩ":"a","Ẫ":"A","ẫ":"a","Ậ":"A","ậ":"a","Ắ":"A","ắ":"a","Ằ":"A","ằ":"a","Ẳ":"A","ẳ":"a","Ẵ":"A","ẵ":"a","Ặ":"A","ặ":"a","Ẹ":"E","ẹ":"e","Ẻ":"E","ẻ":"e","Ẽ":"E","ẽ":"e","Ế":"E","ế":"e","Ề":"E","ề":"e","Ể":"E","ể":"e","Ễ":"E","ễ":"e","Ệ":"E","ệ":"e","Ỉ":"I","ỉ":"i","Ị":"I","ị":"i","Ọ":"O","ọ":"o","Ỏ":"O","ỏ":"o","Ố":"O","ố":"o","Ồ":"O","ồ":"o","Ổ":"O","ổ":"o","Ỗ":"O","ỗ":"o","Ộ":"O","ộ":"o","Ớ":"O","ớ":"o","Ờ":"O","ờ":"o","Ở":"O","ở":"o","Ỡ":"O","ỡ":"o","Ợ":"O","ợ":"o","Ụ":"U","ụ":"u","Ủ":"U","ủ":"u","Ứ":"U","ứ":"u","Ừ":"U","ừ":"u","Ử":"U","ử":"u","Ữ":"U","ữ":"u","Ự":"U","ự":"u","Ỳ":"Y","ỳ":"y","Ỵ":"Y","ỵ":"y","Ỷ":"Y","ỷ":"y","Ỹ":"Y","ỹ":"y","‘":"'","’":"'","“":"\\"","”":"\\"","†":"+","•":"*","…":"...","₠":"ecu","₢":"cruzeiro","₣":"french franc","₤":"lira","₥":"mill","₦":"naira","₧":"peseta","₨":"rupee","₩":"won","₪":"new shequel","₫":"dong","€":"euro","₭":"kip","₮":"tugrik","₯":"drachma","₰":"penny","₱":"peso","₲":"guarani","₳":"austral","₴":"hryvnia","₵":"cedi","₹":"indian rupee","₽":"russian ruble","₿":"bitcoin","℠":"sm","™":"tm","∂":"d","∆":"delta","∑":"sum","∞":"infinity","♥":"love","元":"yuan","円":"yen","﷼":"rial"}`);
        function r(s, i) {
            if (typeof s != "string")
                throw new Error("slugify: string argument expected");
            i = typeof i == "string" ? {
                replacement: i
            } : i || {};
            var a = s.split("").reduce(function(o, l) {
                return o + (n[l] || l).replace(i.remove || /[^\w\s$*_+~.()'"!\-:@]/g, "")
            }, "").trim().replace(/[-\s]+/g, i.replacement || "-");
            return i.lower ? a.toLowerCase() : a
        }
        return r.extend = function(s) {
            for (var i in s)
                n[i] = s[i]
        }
        ,
        r
    })
}
)(aD);
var cF = aD.exports;
const Wl = Cn(cF);
var lF = ()=>/(?:[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26F9(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC3\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDD-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC08(?:\u200D\u2B1B)?|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF6](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7C\uDE80-\uDE86\uDE90-\uDEAC\uDEB0-\uDEBA\uDEC0-\uDEC2\uDED0-\uDED9\uDEE0-\uDEE7]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?))/g;
const oD = Cn(lF);
function dF(t, e=" ") {
    if (!t)
        return "";
    const {_firstAssociations: n, _nonFirstAssociations: r} = uF()
      , s = t.normalize();
    let i = ""
      , a = !1;
    for (let o = 0; o < s.length; o++) {
        const l = s[o] === s[o].toUpperCase()
          , d = s[o].toLowerCase();
        if (d === " ") {
            i += e,
            a = !0;
            continue
        }
        let u;
        o === 0 || a ? (u = n[d],
        a = !1) : u = r[d],
        typeof u > "u" ? i += l ? d.toUpperCase() : d : l ? u.length > 1 ? i += u[0].toUpperCase() + u.slice(1) : i += u.toUpperCase() : i += u
    }
    return i
}
function uF() {
    const t = {
        а: "a",
        б: "b",
        в: "v",
        д: "d",
        з: "z",
        е: "e",
        й: "y",
        к: "k",
        л: "l",
        м: "m",
        н: "n",
        о: "o",
        п: "p",
        р: "r",
        с: "s",
        т: "t",
        у: "u",
        ц: "c",
        ф: "f",
        ь: ""
    };
    Object.assign(t, {
        г: "g",
        и: "i",
        ъ: "",
        ы: "i",
        э: "e"
    }),
    Object.assign(t, {
        ґ: "g",
        г: "h",
        і: "i",
        "'": "",
        "’": "",
        ʼ: ""
    });
    const e = {
        є: "ye",
        ї: "yi"
    }
      , n = {
        ё: "yo",
        ж: "zh",
        х: "kh",
        ч: "ch",
        ш: "sh",
        щ: "shch",
        ю: "yu",
        я: "ya"
    }
      , r = Object.assign({}, n, e)
      , s = Object.assign(t, r)
      , i = Object.assign({}, t, {
        й: "i",
        ї: "i"
    })
      , o = Object.assign(n, {})
      , l = Object.assign(i, o);
    return {
        _firstAssociations: s,
        _nonFirstAssociations: l
    }
}
const h1 = class h1 {
    static branchName(e, n) {
        const r = /[=#%*+~\{\}\`\^\|.,;()\[\]\?\&\⌘\$'"”“<>!:@\000-\037\177\/\\]/g
          , s = Wl(n.username, {
            remove: r
        }).toLowerCase()
          , i = n.issueIdentifier.toLowerCase();
        let a = n.issueTitle.replace(r, "").replace(oD(), "").trim().replace(/\s+(-|–|—)\s+/g, " ").replace(/\s+/g, "-").toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "").replace(/[\u2000-\u2BFF]/g, "").replace(/[\u00A1-\u00BF]/g, "");
        hF(a) && (a = dF(a));
        const o = a.split(/-+/);
        let l = o.shift() || "";
        for (; o.length && l.length + o[0].length < h1.maxGitBranchNameLength; )
            l += "-" + o.shift();
        return l = l.slice(0, h1.maxGitBranchNameLength),
        e.replace(/\{username\}/g, s).replace(/\{issueIdentifier\}/g, i).replace(/\{issueTitle\}/g, l).replace(/-+$/, "")
    }
}
;
h1.maxGitBranchNameLength = 60,
h1.defaultFormat = "{username}/{issueIdentifier}-{issueTitle}",
h1.validFormat = /^[^\/]?([a-z0-9\-\/]|\{username\}|\{issueIdentifier\}|\{issueTitle\})+$/,
h1.validTemplateVariables = /(\{issueIdentifier\}|\{issueTitle\}){1,}/;
let t4 = h1;
function hF(t) {
    return /[\u0400-\u04FF]/u.test(t)
}
const Zde = 40
  , qde = "lin_integration_";
var G;
(function(t) {
    t.airbyte = "airbyte",
    t.discord = "discord",
    t.figma = "figma",
    t.figmaPlugin = "figmaPlugin",
    t.front = "front",
    t.github = "github",
    t.githubEnterpriseServer = "githubEnterpriseServer",
    t.githubCommit = "githubCommit",
    t.githubImport = "githubImport",
    t.githubPersonal = "githubPersonal",
    t.gitlab = "gitlab",
    t.googleCalendarPersonal = "googleCalendarPersonal",
    t.googleSheets = "googleSheets",
    t.intercom = "intercom",
    t.jira = "jira",
    t.jiraPersonal = "jiraPersonal",
    t.launchDarkly = "launchDarkly",
    t.loom = "loom",
    t.notion = "notion",
    t.opsgenie = "opsgenie",
    t.pagerDuty = "pagerDuty",
    t.slack = "slack",
    t.slackAsks = "slackAsks",
    t.slackCustomViewNotifications = "slackCustomViewNotifications",
    t.slackOrgProjectUpdatesPost = "slackOrgProjectUpdatesPost",
    t.slackPersonal = "slackPersonal",
    t.slackPost = "slackPost",
    t.slackProjectPost = "slackProjectPost",
    t.slackProjectUpdatesPost = "slackProjectUpdatesPost",
    t.sentry = "sentry",
    t.zendesk = "zendesk",
    t.email = "email"
}
)(G || (G = {}));
var j8;
(function(t) {
    t.zapier = "zapier"
}
)(j8 || (j8 = {}));
const Wde = ["slack", "slackAsks"]
  , fF = t=>t === "pagerDuty" || t === "opsgenie";
var qy;
(function(t) {
    t.app = "APP"
}
)(qy || (qy = {}));
var M8;
(function(t) {
    t[t.Linear = 0] = "Linear",
    t[t.Asks = 1] = "Asks"
}
)(M8 || (M8 = {}));
const Gde = ["app.intercom.com", "app.eu.intercom.com", "app.au.intercom.com"]
  , Wy = ["figmaPlugin", "front", "github", "intercom", "jira", "slack", "slackAsks", "sentry", "zendesk"];
var h0;
(function(t) {
    function e(n) {
        switch (n) {
        case "airbyte":
            return "Airbyte";
        case "discord":
            return "Discord";
        case "figma":
        case "figmaPlugin":
            return "Figma";
        case "front":
            return "Front";
        case "github":
        case "githubCommit":
        case "githubImport":
        case "githubPersonal":
            return "GitHub";
        case "githubEnterpriseServer":
            return "GitHub Enterprise Server";
        case "gitlab":
            return "GitLab";
        case "googleCalendarPersonal":
            return "Google Calendar";
        case "googleSheets":
            return "Google Sheets";
        case "intercom":
            return "Intercom";
        case "jira":
        case "jiraPersonal":
            return "Jira";
        case "launchDarkly":
            return "LaunchDarkly";
        case "loom":
            return "Loom";
        case "notion":
            return "Notion";
        case "opsgenie":
            return "Opsgenie";
        case "pagerDuty":
            return "PagerDuty";
        case "slackAsks":
            return "Asks";
        case "slack":
        case "slackOrgProjectUpdatesPost":
        case "slackPersonal":
        case "slackPost":
        case "slackProjectPost":
        case "slackProjectUpdatesPost":
        case "slackCustomViewNotifications":
            return "Slack";
        case "sentry":
            return "Sentry";
        case "zendesk":
            return "Zendesk";
        case "email":
            return "Email";
        default:
            throw void 0
        }
    }
    t.getDisplayName = e
}
)(h0 || (h0 = {}));
var _n;
(function(t) {
    t.blocks = "blocks",
    t.duplicate = "duplicate",
    t.related = "related"
}
)(_n || (_n = {}));
function Kde(t, e, n) {
    let r = t || 0;
    const s = 1 << e;
    return n ? r |= s : r &= ~s,
    r !== 0 ? r : null
}
function cD(t, e) {
    return ((t || 0) & 1 << e) > 0
}
var T8;
(function(t) {
    t[t.hasChildren = 0] = "hasChildren",
    t[t.hasAttachments = 1] = "hasAttachments",
    t[t.hasChildrenInDifferentTeam = 2] = "hasChildrenInDifferentTeam"
}
)(T8 || (T8 = {}));
var n4;
(function(t) {
    t.first = "first",
    t.last = "last",
    t.noAction = "noAction"
}
)(n4 || (n4 = {}));
var L8;
(function(t) {
    t.teamSetting = "teamSetting"
}
)(L8 || (L8 = {}));
const Gy = {
    ...n4,
    ...L8
};
var ye;
(function(t) {
    t.triage = "triage",
    t.backlog = "backlog",
    t.unstarted = "unstarted",
    t.started = "started",
    t.completed = "completed",
    t.canceled = "canceled"
}
)(ye || (ye = {}));
var ko;
(function(t) {
    t.statusOrdering = Object.freeze({
        triage: 0,
        backlog: 1,
        unstarted: 2,
        started: 3,
        completed: 4,
        canceled: 5
    }),
    t.customStatusOrdering = Object.freeze({
        started: 0,
        unstarted: 1,
        backlog: 2,
        triage: 3,
        completed: 4,
        canceled: 5
    }),
    t.all = Object.values(ye).filter(e=>typeof e == "string"),
    t.allWithoutTriage = t.all.filter(e=>e !== "triage"),
    t.categoryNameMappings = {
        triage: [],
        backlog: [],
        unstarted: [],
        started: [],
        completed: ["done", "resolved"],
        canceled: ["cancelled"]
    },
    t.closedStateTypes = ["completed", "canceled"]
}
)(ko || (ko = {}));
const f1 = class f1 {
    static getStateTypeOrder(e) {
        return ko.statusOrdering[e]
    }
    static isStateBefore(e, n) {
        const r = ko.statusOrdering[e.type]
          , s = ko.statusOrdering[n.type];
        return r < s || r === s && e.position < n.position
    }
    static getPositionOrder(e) {
        return ko.closedStateTypes.includes(e.type) ? -e.position : e.position
    }
}
;
f1.maxNameLength = 30,
f1.maxDescriptionLength = 255,
f1.defaultDuplicateState = {
    type: ye.canceled,
    name: "Duplicate",
    color: "#95a2b3"
},
f1.reviewState = {
    type: ye.started,
    name: "In Review",
    color: "#0f783c",
    position: 2.5
},
f1.defaultStates = [{
    type: ye.backlog,
    name: "Backlog",
    color: "#bec2c8"
}, {
    type: ye.unstarted,
    name: "Todo",
    color: "#e2e2e2"
}, {
    type: ye.started,
    name: "In Progress",
    color: "#f2c94c"
}, {
    type: ye.completed,
    name: "Done",
    color: "#5e6ad2"
}, {
    type: ye.canceled,
    name: "Canceled",
    color: "#95a2b3"
}, f1.defaultDuplicateState];
let Jc = f1;
var $i;
(function(t) {
    t.notUsed = "notUsed",
    t.exponential = "exponential",
    t.fibonacci = "fibonacci",
    t.linear = "linear",
    t.tShirt = "tShirt"
}
)($i || ($i = {}));
class Ma {
    static get availableTypes() {
        return Object.values($i).map(e=>`"${e}"`).join(", ")
    }
    static nameForType(e) {
        switch (e) {
        case "notUsed":
            return "Not in use";
        case "exponential":
            return "Exponential";
        case "fibonacci":
            return "Fibonacci";
        case "linear":
            return "Linear";
        case "tShirt":
            return "T-Shirt";
        default:
            return "Unknown"
        }
    }
    static detailsForType(e, n, r) {
        switch (e) {
        case "notUsed":
            return "";
        case "exponential":
            return `(${n ? "0, " : ""}1, 2, 4, 8, 16${r ? ", 32, 64" : ""} Points)`;
        case "fibonacci":
            return `(${n ? "0, " : ""}1, 2, 3, 5, 8${r ? ", 13, 21" : ""} Points)`;
        case "linear":
            return `(${n ? "0, " : ""}1, 2, 3, 4, 5${r ? ", 6, 7" : ""} Points)`;
        case "tShirt":
            return `(${n ? "-, " : ""}XS, S, M, L, XL${r ? ", XXL, XXXL" : ""})`;
        default:
            return ""
        }
    }
    static keywordsForType(e, n) {
        switch (e) {
        case "notUsed":
        case "exponential":
        case "fibonacci":
        case "linear":
            return n ? ["none unestimated"] : [];
        case "tShirt":
            return [...n ? ["none unestimated"] : [], "extra small", "small", "medium", "large", "extra large", "extra extra large", "extra extra extra large"];
        default:
            return []
        }
    }
    static valuesForType(e, n, r) {
        const s = n ? [0] : [];
        switch (e) {
        case "notUsed":
            return [];
        case "exponential":
            return s.concat([1, 2, 4, 8, 16]).concat(r ? [32, 64] : []);
        case "fibonacci":
            return s.concat([1, 2, 3, 5, 8]).concat(r ? [13, 21] : []);
        case "linear":
            return s.concat([1, 2, 3, 4, 5]).concat(r ? [6, 7] : []);
        case "tShirt":
            return s.concat([1, 2, 3, 5, 8]).concat(r ? [13, 21] : []);
        default:
            return []
        }
    }
    static indexOfValueForType(e, n, r, s) {
        const i = Ma.valuesForType(n, r, s);
        let a = i.indexOf(e);
        if (a !== -1)
            return a;
        let o = e
          , l = Number.MAX_VALUE;
        for (const d of i) {
            const u = Math.abs(d - e);
            u <= l && (o = d,
            l = u)
        }
        return a = i.indexOf(o),
        a !== -1 ? a : 0
    }
    static transformValueBetweenConfigurations(e, n, r) {
        const s = Ma.valuesForType(r.type, r.allowZero, r.extended);
        if (n.type === r.type)
            return s[Ma.indexOfValueForType(e, r.type, r.allowZero, r.extended)];
        let a = Ma.indexOfValueForType(e, n.type, n.allowZero, !0);
        return n.allowZero !== r.allowZero && (n.allowZero ? a-- : a++),
        a = Math.min(Math.max(a, 0), s.length - 1),
        s[a]
    }
    static labelForValueAndType(e, n, r, s) {
        if (e === void 0)
            return "Estimate";
        const i = this.labelsForType(n, r, s);
        let o = this.valuesForType(n, r, s).indexOf(e);
        if (o !== -1)
            return i[o];
        if (n === "tShirt") {
            const l = this.labelsForType(n, r, !0);
            return o = this.indexOfValueForType(e, n, r, !0),
            "~" + l[o]
        }
        return e + " Point" + (e !== 1 ? "s" : "")
    }
    static shortLabelForValueAndType(e, n, r, s) {
        return e === void 0 ? "" : this.labelForValueAndType(e, n, r, s).replace(" Points", "").replace(" Point", "")
    }
    static labelsForType(e, n, r) {
        switch (e) {
        case "notUsed":
            return [];
        case "exponential":
        case "fibonacci":
        case "linear":
            return this.valuesForType(e, n, r).map(s=>s === 1 ? "1 Point" : `${s} Points`);
        case "tShirt":
            return [...n ? ["-"] : [], "XS", "S", "M", "L", "XL", ...r ? ["XXL", "XXXL"] : []];
        default:
            return []
        }
    }
    static labelsForValues(e, n) {
        return e.map(r=>{
            const s = n === "none" ? void 0 : pF(r);
            return n === "only" ? s ?? "-" : `${r} Point${r === 1 ? "" : "s"}${s ? ` (${s})` : ""}`
        }
        )
    }
}
function pF(t) {
    switch (t) {
    case 0:
        return "-";
    case 1:
        return "XS";
    case 2:
        return "S";
    case 3:
        return "M";
    case 5:
        return "L";
    case 8:
        return "XL";
    case 13:
        return "XXL";
    case 21:
        return "XXXL";
    default:
        return
    }
}
var er;
(function(t) {
    function e(g) {
        return g >= 1
    }
    t.isCompletelyDone = e;
    function n(g) {
        return g === 0
    }
    t.isNotStarted = n;
    function r(g) {
        if (g.length === 0)
            return 0;
        let C = !1
          , b = 0
          , k = f(g);
        if (k === 0) {
            for (let D = 0, R = g.length; D < R; ++D) {
                const T = g[D].state.type;
                T !== ye.canceled && T !== ye.triage && (b += t.progressMultipliers[T],
                k += 1),
                T !== ye.completed && T !== ye.canceled && (C = !0)
            }
            if (k === 0)
                return 0
        } else
            C = g.some(D=>D.state.type !== ye.completed && D.state.type !== ye.canceled),
            b = h(g);
        const S = b / k;
        return S === 1 && C ? .999 : S
    }
    t.progress = r;
    function s(g) {
        return Math.floor(g.reduce((C,b)=>{
            switch (b.state.type) {
            case ye.started:
                return C + m(b);
            default:
                return C
            }
        }
        , 0))
    }
    t.inProgressEstimatePoints = s;
    function i(g) {
        return g.filter(C=>C.state.type === ye.started).length
    }
    t.inProgressIssueCount = i;
    function a(g) {
        return Math.floor(g.reduce((C,b)=>{
            switch (b.state.type) {
            case ye.triage:
                return C + m(b);
            default:
                return C
            }
        }
        , 0))
    }
    t.inTriageEstimatePoints = a;
    function o(g) {
        return g.filter(C=>C.state.type === ye.triage).length
    }
    t.inTriageIssueCount = o;
    function l(g) {
        return Math.floor(g.reduce((C,b)=>{
            switch (b.state.type) {
            case ye.completed:
                return C + m(b);
            default:
                return C
            }
        }
        , 0))
    }
    t.completedEstimatePoints = l;
    function d(g) {
        return g.filter(C=>C.state.type === ye.completed).length
    }
    t.completedIssueCount = d;
    function u(g) {
        const C = Math.round(g * 1e3) / 10;
        return C % 1 === 0 ? C.toFixed(0) : C.toFixed(1)
    }
    t.formatProgressToPercentage = u;
    function h(g) {
        return g.reduce((C,b)=>C + m(b) * (t.progressMultipliers[b.state.type] ?? 0), 0)
    }
    t.progressEstimatePoints = h;
    function f(g, C) {
        return g.reduce((b,k)=>{
            let S = 0;
            return (k.state.type !== ye.canceled || C != null && C.includeCanceledStates) && (k.state.type !== ye.triage || C != null && C.includeTriaged) && (S = m(k)),
            b + S
        }
        , 0)
    }
    t.totalEstimatePoints = f;
    function p(g) {
        return g.filter(C=>C.state.type !== ye.triage && C.state.type !== ye.canceled).length
    }
    t.totalIssueCount = p;
    function m(g) {
        return g.team.issueEstimationType !== $i.notUsed ? g.estimate ?? g.team.defaultIssueEstimate : 1
    }
    t.getEstimate = m,
    t.progressMultipliers = {
        [ye.backlog]: 0,
        [ye.canceled]: 0,
        [ye.completed]: 1,
        [ye.started]: .25,
        [ye.triage]: 0,
        [ye.unstarted]: 0
    }
}
)(er || (er = {}));
const f6 = t=>{
    if (t != null)
        return Number.isFinite(+t) ? +t : void 0
}
;
function mF(t) {
    if (t.type === "text")
        return t.text;
    if (["issueMention", "entityMention"].includes(t.type))
        return t.attrs.label;
    if (Array.isArray(t.content))
        return t.content.map(e=>mF(e)).join("")
}
function gF(t) {
    if (t.isText)
        return t.textContent;
    {
        const e = [];
        return t.content.forEach(n=>{
            e.push(n.textContent)
        }
        ),
        e.join(`
`)
    }
}
function yF() {
    return Qc()
}
const wa = class wa {
}
;
wa.nodeViewControlsClass = "node-controls",
wa.listNodeClass = "list-node",
wa.headingNodeClass = "heading-node",
wa.headingNodeLinkClass = "heading-node-link",
wa.textNodeClass = "text-node",
wa.blockNodeClass = "block-node",
wa.autocompleteInputClass = "aci",
wa.tableWrapperClass = "table-wrapper";
let Ca = wa;
var CF = Dk;
function bF(t, e, n) {
    var r = t.length;
    return n = n === void 0 ? r : n,
    !e && n >= r ? t : CF(t, e, n)
}
var vF = bF
  , wF = "\\ud800-\\udfff"
  , kF = "\\u0300-\\u036f"
  , xF = "\\ufe20-\\ufe2f"
  , DF = "\\u20d0-\\u20ff"
  , SF = kF + xF + DF
  , _F = "\\ufe0e\\ufe0f"
  , IF = "\\u200d"
  , EF = RegExp("[" + IF + wF + SF + _F + "]");
function AF(t) {
    return EF.test(t)
}
var lD = AF;
function jF(t) {
    return t.split("")
}
var MF = jF
  , dD = "\\ud800-\\udfff"
  , TF = "\\u0300-\\u036f"
  , LF = "\\ufe20-\\ufe2f"
  , OF = "\\u20d0-\\u20ff"
  , RF = TF + LF + OF
  , PF = "\\ufe0e\\ufe0f"
  , $F = "[" + dD + "]"
  , O8 = "[" + RF + "]"
  , R8 = "\\ud83c[\\udffb-\\udfff]"
  , FF = "(?:" + O8 + "|" + R8 + ")"
  , uD = "[^" + dD + "]"
  , hD = "(?:\\ud83c[\\udde6-\\uddff]){2}"
  , fD = "[\\ud800-\\udbff][\\udc00-\\udfff]"
  , NF = "\\u200d"
  , pD = FF + "?"
  , mD = "[" + PF + "]?"
  , VF = "(?:" + NF + "(?:" + [uD, hD, fD].join("|") + ")" + mD + pD + ")*"
  , BF = mD + pD + VF
  , UF = "(?:" + [uD + O8 + "?", O8, hD, fD, $F].join("|") + ")"
  , HF = RegExp(R8 + "(?=" + R8 + ")|" + UF + BF, "g");
function zF(t) {
    return t.match(HF) || []
}
var ZF = zF
  , qF = MF
  , WF = lD
  , GF = ZF;
function KF(t) {
    return WF(t) ? GF(t) : qF(t)
}
var YF = KF
  , QF = vF
  , XF = lD
  , JF = YF
  , eN = T3;
function tN(t) {
    return function(e) {
        e = eN(e);
        var n = XF(e) ? JF(e) : void 0
          , r = n ? n[0] : e.charAt(0)
          , s = n ? QF(n, 1).join("") : e.slice(1);
        return r[t]() + s
    }
}
var nN = tN
  , rN = nN
  , sN = rN("toUpperCase")
  , gD = sN;
const P8 = Cn(gD);
var iN = T3
  , aN = gD;
function oN(t) {
    return aN(iN(t).toLowerCase())
}
var cN = oN;
const el = Cn(cN);
class aa {
}
var Zs;
(function(t) {
    t.asana = "asana",
    t.clubhouse = "clubhouse",
    t.github = "github",
    t.jira = "jira",
    t.linear = "linear",
    t.linearV2 = "linearV2"
}
)(Zs || (Zs = {}));
var Ky;
(function(t) {
    t.api = "api",
    t.csv = "csv"
}
)(Ky || (Ky = {}));
var oo;
(function(t) {
    t.expired = "expired",
    t.complete = "complete",
    t.error = "error",
    t.inProcess = "inProcess",
    t.inProgress = "inProgress",
    t.notStarted = "notStarted",
    t.deleting = "deleting"
}
)(oo || (oo = {}));
const p1 = class p1 {
    static extendedDisplayName(e, n) {
        return e === "linearV2" && n && n.linearV2 ? `linear.app/${n.linearV2.sourceOrganization.urlKey}` : p1.importServiceToDisplayName[e]
    }
}
;
p1.importServiceToDisplayName = {
    asana: "Asana",
    clubhouse: "Shortcut",
    github: "GitHub",
    jira: "Jira",
    linear: "Linear",
    linearV2: "Linear"
},
p1.importServiceToSyncIntegration = {
    github: G.github,
    jira: G.jira
},
p1.importStatusToDisplayText = {
    expired: "Expired",
    complete: "Completed",
    error: "Error",
    inProcess: "Processing",
    inProgress: "In progress",
    notStarted: "Not started",
    deleting: "Deleting"
},
p1.importDataSourceToDisplayText = {
    api: "Provide API credentials",
    csv: "Upload a CSV"
},
p1.importDataTypeToDisplayText = {
    ImportIssueData: "Issues",
    ImportProjectData: "Projects",
    ImportEpicData: "Epics",
    ImportIssueRelationData: "Issue Relations"
};
let $8 = p1;
var Yy;
(function(t) {
    t.asanaNoOrgs = "ASANA_NO_ORGS",
    t.invalidTeam = "INVALID_TEAM",
    t.invalidProject = "INVALID_PROJECT",
    t.invalidJiraHost = "INVALID_JIRA_HOST",
    t.invalidJiraCredentials = "INVALID_JIRA_CREDENTIALS",
    t.githubOAuthRestrictions = "GITHUB_OAUTH_RESTRICTIONS",
    t.invalidAsanaToken = "INVALID_ASANA_TOKEN",
    t.invalidShortcutToken = "INVALID_SHORTCUT_TOKEN",
    t.noIssues = "NO_ISSUES",
    t.unknownError = "UNKNOWN_ERROR",
    t.invalidCsvRow = "INVALID_CSV_ROW"
}
)(Yy || (Yy = {}));
const Im = class Im extends aa {
}
;
Im.storageName = "issues";
let Qy = Im;
var Xy;
(function(t) {
    t[t.Urgent = 1] = "Urgent",
    t[t.High = 2] = "High",
    t[t.Medium = 3] = "Medium",
    t[t.Low = 4] = "Low"
}
)(Xy || (Xy = {}));
const Em = class Em extends aa {
}
;
Em.storageName = "comments";
let Jy = Em;
const Am = class Am extends aa {
}
;
Am.storageName = "users";
let eC = Am;
const jm = class jm extends aa {
}
;
jm.storageName = "labels";
let tC = jm;
const Mm = class Mm extends aa {
}
;
Mm.storageName = "epics";
let nC = Mm;
const Tm = class Tm extends aa {
}
;
Tm.storageName = "projects";
let rC = Tm;
const Lm = class Lm extends aa {
}
;
Lm.storageName = "workflowStates";
let sC = Lm;
const Om = class Om extends aa {
}
;
Om.storageName = "projectStatuses";
let iC = Om;
const Rm = class Rm extends aa {
}
;
Rm.storageName = "teams";
let aC = Rm;
const Pm = class Pm extends aa {
}
;
Pm.storageName = "estimateScales";
let oC = Pm;
const $m = class $m extends aa {
}
;
$m.storageName = "relations";
let cC = $m;
var lC;
(function(t) {
    t.Blocks = "blocks",
    t.Duplicates = "duplicates",
    t.Related = "related",
    t.Parent = "parent"
}
)(lC || (lC = {}));
const lN = ["javascript", "data", "blob", "file", "vbscript"]
  , gu = {
    https: "",
    http: "",
    linear: "https://linear.app/login",
    obsidian: "https://obsidian.md",
    slack: "https://slack.com",
    notion: "https://notion.so",
    craftdocs: "https://craft.do"
}
  , Yu = class Yu {
    static getSourceType(e) {
        const {url: n, source: r} = e;
        if (!r || r.type === "api") {
            const s = n.match(new RegExp(this.URLDomainRegex));
            return s ? s[1] : n
        }
        return r.type
    }
    static formattedPullRequestNumber(e) {
        const n = Yu.getSourceType(e);
        return n === G.github || n === G.gitlab ? (n === G.gitlab ? "!" : "#") + e.metadata.number : ""
    }
    static userVisibleSourceName(e) {
        const {source: n, title: r} = e;
        if (!n || n.type === "api") {
            const s = this.getSourceType(e);
            for (const [i,a] of Object.entries(dN))
                if (s.includes(i))
                    return a;
            return r ?? s
        }
        return n.type === "import" ? `Migrated - ${$8.importServiceToDisplayName[n.issueImportService]}` : n.type === "integration" || n.type === "oauthClient" ? el(n.name) : n.type === G.figmaPlugin || n.type === G.figma ? r ?? "Figma" : n.type === G.githubCommit ? "GitHub commit" : n.type === G.github ? "GitHub" : n.type === G.gitlab ? "GitLab" : ["email", "discord", "front", "intercom", "jira", "notion", "sentry", "slack", "twitter", "zendesk"].includes(n.type) ? el(n.type) : "Unknown"
    }
    static getIframelyUrlForAttachmentLink(e) {
        switch (new URL(e).protocol.slice(0, -1)) {
        case "obsidian":
            return gu.obsidian;
        case "slack":
            return gu.slack;
        case "linear":
            return gu.linear;
        case "notion":
            return gu.notion;
        case "craftdocs":
            return gu.craftdocs;
        default:
            return e
        }
    }
}
;
Yu.maxContentLength = 75e3,
Yu.URLDomainRegex = ".*:\\/\\/(?:.*\\.)?([^\\/\\.]+)\\.[a-z]{2,}(?:\\/|$)";
let f0 = Yu;
const dN = {
    helpscout: "Help Scout",
    height: "Height",
    github: "GitHub",
    gitlab: "GitLab"
};
function li(t, e={}) {
    if (typeof t != "string")
        return;
    let n;
    try {
        n = new URL(t)
    } catch {
        return
    }
    const {allowedProtocols: r=[]} = e
      , s = n.protocol.slice(0, -1);
    if (!(lN.includes(s) && !r.includes(s)))
        return t
}
const yD = yj({
    tableGroup: "block",
    cellContent: "allowedInTable+",
    cellAttributes: {
        colwidth: {
            default: [200]
        }
    }
});
yD.table.draggable = !0;
const uN = [1, 2, 3, 4, 5, 6];
var dC;
(function(t) {
    t[t.LOW = 49] = "LOW",
    t[t.REGULAR = 50] = "REGULAR",
    t[t.HIGH = 51] = "HIGH"
}
)(dC || (dC = {}));
const F8 = {
    doc: {
        content: "block+"
    },
    paragraph: {
        content: "inline*",
        group: "block allowedInTable",
        draggable: !1,
        parseDOM: [{
            tag: "p"
        }],
        toDOM: ()=>["p", {
            class: Ca.textNodeClass
        }, 0]
    },
    blockquote: {
        content: "block*",
        group: "block",
        defining: !0,
        draggable: !1,
        parseDOM: [{
            tag: "blockquote"
        }],
        toDOM: ()=>["blockquote", {
            class: Ca.blockNodeClass
        }, 0]
    },
    bullet_list: {
        content: "list_item+",
        group: "block",
        selectable: !1,
        parseDOM: [{
            tag: "ul"
        }],
        toDOM: ()=>["ul", {
            class: Ca.listNodeClass
        }, 0]
    },
    code_block: {
        content: "text*",
        attrs: {
            language: {
                default: null
            }
        },
        marks: "inlineComment",
        group: "block",
        code: !0,
        defining: !0,
        draggable: !1,
        parseDOM: [{
            tag: "pre",
            preserveWhitespace: "full"
        }],
        toDOM: ()=>["pre", {
            spellcheck: "false",
            autocapitalize: "off",
            class: Ca.blockNodeClass
        }, ["code", 0]]
    },
    embed: {
        attrs: {
            type: {
                default: "rich"
            },
            embedView: {
                default: "embed"
            },
            src: {
                default: null
            },
            title: {
                default: null
            },
            description: {
                default: null
            },
            authorName: {
                default: null
            },
            thumbnailUrl: {
                default: null
            },
            thumbnailWidth: {
                default: null
            },
            thumbnailHeight: {
                default: null
            },
            href: {
                default: null
            },
            service: {
                default: null
            },
            border: {
                default: !1
            },
            width: {
                default: "100%"
            },
            height: {
                default: "400px"
            }
        },
        group: "block allowedInTable",
        selectable: !0,
        parseDOM: [{
            tag: "[data-type=embed]",
            priority: 51,
            getAttrs: t=>JSON.parse(t.getAttribute("data-json") || "{}")
        }],
        toDOM: t=>["a", {
            href: li(t.attrs.href),
            "data-type": "embed",
            "data-json": JSON.stringify(t.attrs)
        }, t.attrs.title || t.attrs.href],
        toPlainText: t=>`${t.attrs.href}

`
    },
    file: {
        attrs: {
            href: {
                default: null
            },
            name: {
                default: ""
            },
            size: {
                default: 0
            },
            mimetype: {
                default: null
            }
        },
        group: "block allowedInTable",
        selectable: !0,
        draggable: !1,
        parseDOM: [{
            tag: "[data-type=file]",
            priority: 51,
            getAttrs: t=>({
                href: t.getAttribute("href"),
                name: t.textContent,
                size: +(t.getAttribute("data-size") || 0),
                mimetype: t.getAttribute("data-mimetype")
            })
        }],
        toDOM: t=>["a", {
            "data-type": "file",
            "data-size": t.attrs.size,
            "data-mimetype": t.attrs.mimetype,
            href: li(t.attrs.href),
            target: "_blank"
        }, t.attrs.name],
        toPlainText: t=>`${t.attrs.name}: ${t.attrs.href}`
    },
    figma: {
        attrs: {
            href: {
                default: null
            },
            title: {
                default: null
            },
            nodeName: {
                default: null
            },
            embedUrl: {
                default: null
            },
            screenshotUrl: {
                default: null
            },
            file: {
                default: null
            },
            nodeId: {
                default: null
            },
            fetched: {
                default: !1
            }
        },
        group: "block allowedInTable",
        selectable: !0,
        parseDOM: [{
            tag: "[data-type=figma]",
            priority: 51,
            getAttrs: t=>JSON.parse(t.getAttribute("data-json") || "{}")
        }],
        toDOM: t=>["a", {
            href: li(t.attrs.href),
            "data-type": "figma",
            "data-json": JSON.stringify(t.attrs)
        }, t.attrs.title],
        toPlainText: t=>`${t.attrs.nodeName}: ${t.attrs.href}`
    },
    hard_break: {
        inline: !0,
        group: "inline",
        selectable: !1,
        parseDOM: [{
            tag: "br"
        }, {
            tag: '[data-stringify-type="paragraph-break"]'
        }],
        toDOM: ()=>["br"],
        toPlainText: ()=>`
`
    },
    heading: {
        attrs: {
            level: {
                default: 1
            },
            id: {
                default: void 0
            }
        },
        content: "inline*",
        group: "block allowedInTable",
        defining: !0,
        draggable: !1,
        parseDOM: uN.map(t=>({
            tag: `h${t}`,
            getAttrs: e=>({
                id: e.getAttribute("id"),
                level: t
            })
        })),
        toDOM: t=>[`h${t.attrs.level}`, {
            id: t.attrs.id,
            class: Ca.headingNodeClass
        }, 0]
    },
    horizontal_rule: {
        group: "block",
        parseDOM: [{
            tag: "hr"
        }],
        toDOM: ()=>["hr"]
    },
    iframe: {
        attrs: {
            src: {
                default: null
            }
        },
        group: "block",
        selectable: !0,
        parseDOM: [{
            tag: "iframe",
            priority: 49,
            getAttrs: t=>({
                src: t.getAttribute("src")
            })
        }],
        toDOM: t=>["iframe", {
            src: li(t.attrs.src),
            frameborder: "0",
            allowfullscreen: "true"
        }]
    },
    list_item: {
        content: "paragraph block*",
        defining: !0,
        draggable: !1,
        selectable: !1,
        parseDOM: [{
            tag: "li"
        }],
        toDOM: ()=>["li", 0]
    },
    image: {
        attrs: {
            src: {},
            alt: {
                default: null
            },
            title: {
                default: null
            },
            attribution: {
                default: null
            },
            width: {
                default: null
            },
            height: {
                default: null
            },
            displayWidth: {
                default: null
            }
        },
        group: "block allowedInTable",
        selectable: !0,
        draggable: !0,
        parseDOM: [{
            tag: "img",
            getAttrs: t=>({
                src: t.getAttribute("src"),
                title: t.getAttribute("title"),
                alt: t.getAttribute("alt"),
                width: f6(t.getAttribute("width")),
                height: f6(t.getAttribute("height")),
                displayWidth: f6(t.getAttribute("displayWidth"))
            })
        }],
        toDOM: t=>["img", {
            src: li(t.attrs.src),
            title: t.attrs.title,
            alt: t.attrs.alt,
            width: t.attrs.width,
            height: t.attrs.height,
            displayWidth: t.attrs.displayWidth
        }]
    },
    image_group: {
        content: "image{0,3}",
        group: "block",
        selectable: !1,
        parseDOM: [{
            tag: "div.image-group"
        }],
        toDOM: ()=>["div", {
            class: "image-group"
        }, 0]
    },
    ordered_list: {
        attrs: {
            order: {
                default: 1
            }
        },
        content: "list_item+",
        group: "block",
        selectable: !1,
        parseDOM: [{
            tag: "ol",
            getAttrs: t=>({
                order: +(t.getAttribute("start") || 1)
            })
        }],
        toDOM: t=>t.attrs.order === 1 ? ["ol", {
            class: Ca.listNodeClass
        }, 0] : ["ol", {
            start: t.attrs.order,
            class: Ca.listNodeClass
        }, 0]
    },
    text: {
        group: "inline"
    },
    todo_item: {
        attrs: {
            done: {
                default: !1
            }
        },
        defining: !0,
        draggable: !0,
        content: "paragraph block*",
        toDOM: t=>{
            const {done: e} = t.attrs;
            return ["li", {
                "data-type": "todo_item",
                "data-done": e.toString()
            }, ["span", {
                class: `todo-checkbox ${e ? "todo-checkbox-checked" : "todo-checkbox-unchecked"}`,
                contenteditable: "false"
            }], ["div", {
                class: "todo-content"
            }, 0]]
        }
        ,
        parseDOM: [{
            priority: 51,
            tag: "[data-type=todo_item]",
            getAttrs: t=>({
                done: t.getAttribute("data-done") === "true"
            })
        }]
    },
    todo_list: {
        group: "block",
        content: "(todo_item | list_item)+",
        toDOM: ()=>["ul", {
            "data-type": "todo_list",
            class: Ca.listNodeClass
        }, 0],
        parseDOM: [{
            priority: 51,
            tag: "[data-type=todo_list]"
        }]
    },
    video: {
        attrs: {
            src: {},
            title: {
                default: null
            },
            controls: {
                default: !0
            },
            height: {
                default: null
            },
            width: {
                default: null
            }
        },
        group: "block allowedInTable",
        selectable: !0,
        draggable: !0,
        parseDOM: [{
            tag: "video",
            getAttrs: t=>({
                src: t.getAttribute("src"),
                title: t.getAttribute("title")
            })
        }],
        toDOM: t=>["video", {
            controls: "true",
            src: t.attrs.src,
            title: t.attrs.title
        }]
    },
    suggestion_userMentions: {
        attrs: {
            id: {},
            label: {}
        },
        group: "inline",
        inline: !0,
        selectable: !1,
        atom: !0,
        parseDOM: [{
            tag: "[data-mention-type=userMentions]",
            getAttrs: t=>{
                var e;
                return {
                    id: t.getAttribute("data-mention-id"),
                    label: (e = t.textContent) == null ? void 0 : e.replace(/^@/, "")
                }
            }
        }],
        toDOM: t=>["span", {
            class: "mention",
            "data-mention-id": t.attrs.id,
            "data-mention-type": "userMentions"
        }, `@${t.attrs.label}`],
        toPlainText: t=>`@${t.attrs.label}`,
        leafText: t=>`@${t.attrs.label}`
    },
    issueMention: {
        attrs: {
            id: {},
            label: {},
            href: {}
        },
        group: "inline",
        inline: !0,
        selectable: !1,
        atom: !0,
        parseDOM: [{
            priority: 51,
            tag: "[data-mention-type=issueMention]",
            getAttrs: t=>({
                id: t.getAttribute("id"),
                href: t.getAttribute("href"),
                label: t.textContent
            })
        }],
        toDOM: t=>["a", {
            href: li(t.attrs.href),
            id: t.attrs.id,
            target: "_blank",
            "data-mention-type": "issueMention"
        }, t.attrs.label],
        toPlainText: t=>t.attrs.label
    },
    entityMention: {
        attrs: {
            id: {},
            label: {},
            href: {}
        },
        group: "inline",
        inline: !0,
        selectable: !1,
        atom: !0,
        parseDOM: [{
            priority: 51,
            tag: "[data-mention-type=entityMention]",
            getAttrs: t=>({
                id: t.getAttribute("id"),
                href: t.getAttribute("href"),
                label: t.textContent
            })
        }],
        toDOM: t=>["a", {
            href: li(t.attrs.href),
            id: t.attrs.id,
            target: "_blank",
            "data-mention-type": "entityMention"
        }, t.attrs.label],
        toPlainText: t=>t.attrs.label
    },
    entityEmbed: {
        attrs: {
            id: {},
            modelName: {},
            label: {},
            href: {}
        },
        group: "block",
        selectable: !0,
        draggable: !0,
        parseDOM: [{
            priority: 51,
            tag: "[data-mention-type=entityEmbed]",
            getAttrs: t=>({
                id: t.getAttribute("id"),
                modelName: t.getAttribute("data-model-name"),
                variant: t.getAttribute("data-variant"),
                href: t.getAttribute("href"),
                label: t.textContent
            })
        }],
        toDOM: t=>["a", {
            href: li(t.attrs.href),
            id: t.attrs.id,
            "data-mention-type": "entityEmbed",
            "data-model-name": t.attrs.modelName,
            "data-variant": t.attrs.variant
        }, t.attrs.label],
        toPlainText: t=>t.attrs.label
    },
    documentMention: {
        attrs: {
            id: {},
            label: {},
            href: {}
        },
        group: "inline",
        inline: !0,
        selectable: !1,
        atom: !0,
        parseDOM: [{
            tag: "[data-mention-type=documentMention]",
            getAttrs: t=>({
                href: t.getAttribute("href"),
                label: t.textContent
            })
        }],
        toDOM: t=>["a", {
            href: li(t.attrs.href),
            target: "_blank",
            "data-mention-type": "documentMention"
        }, t.attrs.label],
        toPlainText: t=>t.attrs.label
    },
    emoji: {
        attrs: {
            label: {
                default: null
            },
            type: {
                default: null
            },
            src: {
                default: null
            },
            name: {
                default: null
            }
        },
        group: "inline",
        inline: !0,
        draggable: !1,
        selectable: !1,
        atom: !0,
        parseDOM: [{
            tag: "span[data-emoji]",
            getAttrs: t=>({
                type: "native",
                name: t.getAttribute("data-emoji"),
                label: t.textContent
            })
        }, {
            tag: "img[data-emoji]",
            priority: 51,
            getAttrs: t=>({
                src: t.getAttribute("src"),
                name: t.getAttribute("data-emoji")
            })
        }],
        toDOM: t=>{
            const e = li(t.attrs.src);
            return t.attrs.type === "native" ? ["span", {
                "data-emoji": t.attrs.name,
                class: "emoji"
            }, t.attrs.label] : ["img", {
                src: e,
                alt: `Custom emoji ${t.attrs.name}`,
                title: t.attrs.name,
                class: "emoji custom-emoji",
                "data-emoji": t.attrs.name,
                style: e ? `background-image: url(${e})` : void 0
            }]
        }
        ,
        toPlainText: t=>t.attrs.label || t.attrs.name
    },
    ...yD
}
  , hN = {
    code: {
        excludes: "em underline strong placeholder code",
        parseDOM: [{
            tag: "code"
        }],
        toDOM: ()=>["code", {
            spellcheck: "false",
            class: "inline"
        }, 0]
    },
    link: {
        attrs: {
            href: {
                default: null
            }
        },
        inclusive: !1,
        parseDOM: [{
            tag: "a[href]",
            getAttrs: t=>t.getAttribute("data-type") ? !1 : {
                href: t.getAttribute("href")
            }
        }],
        toDOM: t=>["a", {
            ...t.attrs,
            href: li(t.attrs.href),
            target: "_blank",
            rel: "noopener noreferrer nofollow"
        }, 0]
    },
    inlineComment: {
        attrs: {
            commentId: {
                default: null
            },
            createdBy: {
                default: null
            },
            resolved: {
                default: !1
            }
        },
        excludes: "",
        inclusive: !1,
        parseDOM: [{
            tag: "span.inline-comment",
            getAttrs: t=>({
                commentId: t.getAttribute("data-comment-id"),
                createdBy: t.getAttribute("data-created-by"),
                resolved: t.getAttribute("data-comment-resolved")
            })
        }],
        toDOM: t=>["span", {
            class: "inline-comment",
            "data-comment-resolved": t.attrs.resolved ?? "false",
            "data-comment-id": t.attrs.commentId ?? "null",
            ...t.attrs.createdBy ? {
                "data-created-by": t.attrs.createdBy
            } : {}
        }, 0]
    },
    em: {
        parseDOM: [{
            tag: "i"
        }, {
            tag: "em"
        }, {
            style: "font-style=italic"
        }],
        toDOM: ()=>["em", 0]
    },
    strike: {
        parseDOM: [{
            tag: "s"
        }, {
            tag: "del"
        }, {
            tag: "strike"
        }, {
            style: "text-decoration",
            getAttrs: t=>t === "line-through" ? null : !1
        }],
        toDOM: ()=>["s", 0]
    },
    underline: {
        parseDOM: [{
            tag: "u"
        }, {
            style: "text-decoration",
            tag: ":not(a)",
            getAttrs: t=>t === "underline" ? null : !1
        }],
        toDOM: ()=>["u", 0]
    },
    strong: {
        parseDOM: [{
            tag: "strong"
        }, {
            tag: "b",
            getAttrs: t=>t.style.fontWeight !== "normal" && null
        }, {
            style: "font-weight",
            getAttrs: t=>/^(bold(er)?|[5-9]\d{2,})$/.test(t) && null
        }],
        toDOM: ()=>["strong", 0]
    },
    placeholder: {
        parseDOM: [{
            tag: "span.template-placeholder"
        }],
        toDOM: ()=>["span", {
            class: "template-placeholder",
            spellcheck: "false"
        }, 0]
    }
}
  , j1 = new Cj({
    nodes: F8,
    marks: hN
});
function G3() {
    return {
        type: "doc",
        content: [{
            type: "paragraph"
        }]
    }
}
function fN(t) {
    t.core.ruler.after("inline", "image_dimensions", e=>{
        function n(r) {
            return r.map(s=>{
                if (s.type === "image") {
                    const i = s.attrGet("title")
                      , a = i == null ? void 0 : i.match(/^=(\d+)x(\d+)?$/);
                    if (a) {
                        const [,o,l] = a;
                        return s.attrSet("width", o),
                        s.attrSet("height", l),
                        s.attrSet("title", ""),
                        s
                    }
                } else
                    s.children && (s.children = n(s.children));
                return s
            }
            )
        }
        return e.tokens = n(e.tokens),
        !1
    }
    )
}
function pN(t) {
    switch (t) {
    case 9:
    case 32:
        return !0
    }
    return !1
}
function p6(t, e) {
    const n = t.bMarks[e] + t.blkIndent
      , r = t.eMarks[e];
    return t.src.substr(n, r - n)
}
function uC(t) {
    const e = []
      , n = t.length;
    let r = 0, s, i = 0, a = 0, o = !1, l = 0;
    for (s = t.charCodeAt(r); r < n; )
        s === 96 ? o ? (o = !1,
        l = r) : i % 2 === 0 && (o = !0,
        l = r) : s === 124 && i % 2 === 0 && !o && (e.push(t.substring(a, r)),
        a = r + 1),
        s === 92 ? i++ : i = 0,
        r++,
        r === n && o && (o = !1,
        r = l + 1),
        s = t.charCodeAt(r);
    return e.push(t.substring(a)),
    e
}
function mN(t, e, n, r) {
    let s;
    try {
        t.md.block._tokenize = t.md.block.tokenize,
        t.md.block.tokenize = (...i)=>{
            if (s && Yo(i, s))
                throw new Error("Infinite loop detected");
            return s = i,
            t.md.block._tokenize(...i)
        }
        ,
        t.md.block.tokenize(t, e, n, r)
    } finally {
        t.md.block.tokenize = t.md.block._tokenize
    }
}
function gN(t, e, n, r) {
    var C, b;
    let s, i, a, o, l, d, u, h, f, p;
    if (e + 2 > n || (l = e + 1,
    t.sCount[l] < t.blkIndent) || t.sCount[l] - t.blkIndent >= 4 || (a = t.bMarks[l] + t.tShift[l],
    a >= t.eMarks[l]) || (s = t.src.charCodeAt(a++),
    s !== 124 && s !== 45 && s !== 58))
        return !1;
    for (; a < t.eMarks[l]; ) {
        if (s = t.src.charCodeAt(a),
        s !== 124 && s !== 45 && s !== 58 && !pN(s))
            return !1;
        a++
    }
    i = p6(t, e + 1),
    d = i.split("|");
    const m = [];
    for (o = 0; o < d.length; o++) {
        if (h = d[o].trim(),
        !h) {
            if (o === 0 || o === d.length - 1)
                continue;
            return !1
        }
        if (!/^:?-+:?$/.test(h))
            return !1;
        h.charCodeAt(h.length - 1) === 58 ? m.push(h.charCodeAt(0) === 58 ? "center" : "right") : h.charCodeAt(0) === 58 ? m.push("left") : m.push("")
    }
    if (i = p6(t, e).trim(),
    i.indexOf("|") === -1 || t.sCount[e] - t.blkIndent >= 4)
        return !1;
    d = uC(i.replace(/^\||\|$/g, ""));
    const g = d.length;
    if (g > m.length)
        return !1;
    if (r)
        return !0;
    for (u = t.push("table_open", "table", 1),
    u.map = f = [e, 0],
    u = t.push("tr_open", "tr", 1),
    u.map = [e, e + 1],
    o = 0; o < d.length; o++)
        u = t.push("th_open", "th", 1),
        u.map = [e, e + 1],
        m[o] && (u.attrs = [["style", "text-align:" + m[o]]]),
        u = t.push("paragraph_open", "p", 1),
        u = t.push("inline", "", 0),
        u.content = d[o].trim(),
        u.map = [e, e + 1],
        u.children = [],
        u = t.push("paragraph_close", "p", -1),
        u = t.push("th_close", "th", -1);
    for (u = t.push("tr_close", "tr", -1),
    u.map = p = [e + 2, 0],
    l = e + 2; l < n && !(t.sCount[l] < t.blkIndent || (i = p6(t, l).trim(),
    i.indexOf("|") === -1) || t.sCount[l] - t.blkIndent >= 4); l++) {
        d = uC(i.replace(/^\||\|$/g, "")),
        u = t.push("tr_open", "tr", 1);
        for (let k = 0, S = 1; k < g; k++) {
            u = t.push("td_open", "td", 1),
            m[k] && (u.attrs = [["style", "text-align:" + m[k]]]);
            const D = ((C = d[k]) == null ? void 0 : C[0]) === " " || /^(\d+\.|\*|-)$/.test((b = d[k]) == null ? void 0 : b.trim()) ? 1 : 0;
            t.bMarks[l] += S + D,
            S = (d[k] || "").length + (D ? 0 : 1),
            t.eMarks[l] = t.bMarks[l] + S - 1;
            const R = t.lineMax;
            t.lineMax = 1;
            try {
                mN(t, l, l + 1)
            } catch {
                break
            } finally {
                t.lineMax = R
            }
            u = t.push("td_close", "td", -1)
        }
        u = t.push("tr_close", "tr", -1)
    }
    return u = t.push("table_close", "table", -1),
    f[1] = p[1] = l,
    t.line = l,
    !0
}
const yN = t=>{
    t.block.ruler.before("paragraph", "table", gN, {
        alt: ["paragraph", "reference"]
    })
}
  , CN = {
    blockquote(t, e) {
        t.wrapBlock("> ", null, e, ()=>t.renderContent(e))
    },
    code_block(t, e) {
        t.write("```" + (e.attrs.language || "") + `
`),
        t.text(e.textContent, !1),
        t.ensureNewLine(),
        t.write("```"),
        t.closeBlock(e)
    },
    heading(t, e, n, r) {
        vD(t, e),
        t.closeBlock(e)
    },
    horizontal_rule(t, e) {
        t.write(e.attrs.markup || "---"),
        t.closeBlock(e)
    },
    bullet_list(t, e) {
        t.renderList(e, "  ", ()=>(e.attrs.bullet || "*") + " ")
    },
    ordered_list(t, e) {
        const n = e.attrs.order || 1
          , r = String(n + e.childCount - 1).length
          , s = t.repeat(" ", r + 2);
        t.renderList(e, s, i=>{
            const a = String(n + i);
            return t.repeat(" ", r - a.length) + a + ". "
        }
        )
    },
    list_item(t, e) {
        t.renderContent(e)
    },
    todo_list(t, e) {
        t.renderList(e, "  ", ()=>(e.attrs.bullet || "-") + " ")
    },
    todo_item(t, e) {
        t.write((e.attrs.done ? "[X]" : "[ ]") + " "),
        t.renderInline(e),
        t.closeBlock(e)
    },
    paragraph(t, e) {
        t.renderInline(e),
        t.closeBlock(e)
    },
    image(t, e, n, r) {
        N8(t, e),
        t.closeBlock(e)
    },
    image_group(t, e) {
        e.forEach((n,r)=>{
            N8(t, n)
        }
        )
    },
    video(t, e, n, r) {
        CD(t, e),
        t.closeBlock(e)
    },
    file(t, e, n, r) {
        bD(t, e),
        t.closeBlock(e)
    },
    hard_break(t, e, n, r=0) {
        for (let s = r + 1; s < n.childCount; s++)
            if (n.child(s).type !== e.type) {
                t.write(t.options.hardBreakDelimiter ?? `
`);
                return
            }
    },
    text(t, e) {
        t.text(e.text || "")
    },
    table(t, e) {
        t.renderContent(e),
        t.closeBlock(e)
    },
    table_row(t, e) {
        t.write("|"),
        t.renderContent(e),
        t.ensureNewLine(),
        e.content.firstChild && e.content.firstChild.type.name === "table_header" && (t.write("|"),
        Array.from({
            length: e.content.childCount
        }).forEach(()=>{
            t.write(" -- |")
        }
        ),
        t.ensureNewLine())
    },
    table_cell: (...t)=>hC(...t),
    table_header: (...t)=>hC(...t),
    embed: (t,e)=>{
        const n = e.attrs.href || e.attrs.src;
        n && (t.ensureNewLine(),
        t.write("[" + t.esc(n) + "](" + t.esc(n) + ")"),
        t.closeBlock(e))
    }
    ,
    iframe: (t,e)=>{
        const n = e.attrs.src;
        n && (t.ensureNewLine(),
        t.write("[" + t.esc(n) + "](" + t.esc(n) + ")"),
        t.closeBlock(e))
    }
    ,
    figma: (t,e)=>{
        t.ensureNewLine();
        const n = e.attrs.nodeName ? `${e.attrs.nodeName} - ${e.attrs.title}` : e.attrs.title;
        t.write(`[${t.esc(n)} (Figma)](${t.esc(e.attrs.href)})`),
        t.closeBlock(e)
    }
    ,
    suggestion_userMentions: (t,e)=>t.text(`@${e.attrs.label}`),
    issueMention: (t,e)=>t.text(`[${e.attrs.label}](${e.attrs.href})`, !1),
    documentMention: (t,e)=>t.text(`[${e.attrs.label}](${e.attrs.href})`, !1),
    entityMention: (t,e)=>t.text(`[${e.attrs.label}](${e.attrs.href})`, !1),
    entityEmbed: (t,e)=>t.text(`[${e.attrs.label}](${e.attrs.href})`, !1),
    emoji: (t,e)=>t.text(e.attrs.label || e.attrs.name)
}
  , N8 = (t,e)=>{
    let n = e.attrs.src;
    if (!n)
        return;
    n = n.includes("%") ? n : encodeURI(e.attrs.src);
    const r = e.attrs.displayWidth ? ` "=${e.attrs.displayWidth}x"` : e.attrs.width ? ` "=${e.attrs.width}x${e.attrs.height ?? ""}"` : "";
    t.write(`![${t.esc(e.attrs.alt || e.attrs.title || "")}](${t.esc(n)}${t.options.includeImageDimensions ? t.esc(r) : ""})`)
}
  , CD = (t,e)=>{
    const n = e.attrs.title ? t.esc(e.attrs.title) : t.esc(e.attrs.src).split("/").pop();
    t.write(`[${n}](${t.esc(encodeURI(e.attrs.src))})`)
}
  , bD = (t,e)=>{
    t.write(`[${t.esc(e.attrs.name)}](${t.esc(encodeURI(e.attrs.href))})`)
}
  , vD = (t,e)=>{
    t.write(t.repeat("#", e.attrs.level) + " "),
    t.renderInline(e)
}
  , hC = (t,e)=>{
    t.text(" "),
    e.content.forEach((n,r)=>{
        switch (n.type.name) {
        case "image":
            N8(t, n);
            break;
        case "video":
            CD(t, n);
            break;
        case "file":
            bD(t, n);
            break;
        case "heading":
            vD(t, n);
            break;
        default:
            t.renderInline(n)
        }
    }
    ),
    t.write(" |")
}
  , bN = {
    em: {
        open: "*",
        close: "*",
        mixable: !0,
        expelEnclosingWhitespace: !0
    },
    inlineComment: {
        open: "",
        close: "",
        mixable: !0,
        expelEnclosingWhitespace: !0
    },
    strong: {
        open: "**",
        close: "**",
        mixable: !0,
        expelEnclosingWhitespace: !0
    },
    link: {
        open: "[",
        close(t, e) {
            return "](" + t.esc(e.attrs.href) + (e.attrs.title ? " " + t.quote(e.attrs.title) : "") + ")"
        }
    },
    strike: {
        open: "~~",
        close: "~~",
        mixable: !0,
        expelEnclosingWhitespace: !0
    },
    code: {
        open: (t,e,n)=>fC(n.text || "", -1),
        close: (t,e,n)=>fC(n.text || "", 1),
        escape: !1
    },
    underline: {
        open: "",
        close: "",
        mixable: !0,
        expelEnclosingWhitespace: !0
    },
    placeholder: {
        open: "<",
        close: ">",
        mixable: !0,
        expelEnclosingWhitespace: !0
    }
};
function fC(t, e) {
    const n = /`+/g;
    let r, s = 0;
    for (; r = n.exec(t); )
        s = Math.max(s, r[0].length);
    let i = s > 0 && e > 0 ? " `" : "`";
    for (let a = 0; a < s; a++)
        i += "`";
    return s > 0 && e < 0 && (i += " "),
    i
}
const vN = "![]()".split("")
  , m6 = vN.map(t=>t.charCodeAt(0))
  , wN = (t,e,n)=>{
    const r = t.substring(n || 0).search(e);
    return r >= 0 ? r + (n || 0) + 1 : r
}
  , pC = (t,e,n,r)=>{
    let s = null
      , i = r.line;
    const a = wN(t.src, new RegExp(`[^\\\\]\\${n}`), r.pos - 1);
    if (a === -1)
        return !1;
    for (s = t.eMarks[r.line]; a >= s; )
        if (++i,
        s = t.eMarks[i],
        i >= e)
            return !1;
    return r.prevPos = r.pos,
    r.pos = a,
    r.line = i,
    !0
}
;
function kN(t, e, n, r) {
    const s = t.bMarks[e] + t.tShift[e]
      , i = t.eMarks[e]
      , a = {
        line: e,
        pos: s
    };
    if (i - s < 2 || m6[0] !== t.src.charCodeAt(a.pos++) || m6[1] !== t.src.charCodeAt(a.pos++) || !pC(t, n, "]", a) || (++a.pos,
    m6[3] !== t.src.charCodeAt(a.pos++)) || !pC(t, n, ")", a) || (++a.pos,
    a.line >= n))
        return !1;
    if (!r) {
        const o = t.push("inline", "", 0);
        o.content = t.src.substr(s, a.pos - s),
        o.map = [e, a.line + 1],
        o.children = [],
        t.line = a.line + 1
    }
    return !0
}
class xN {
    constructor(e) {
        this.md = e
    }
}
const DN = t=>{
    const e = new xN(t);
    t.block.ruler.before("fence", "block-image", kN.bind(e), {
        alt: ["paragraph"]
    })
}
  , wD = /^\s*\[(X|\s|_|-)\]\s(.*)?/i;
function SN(t) {
    return t.content.match(wD)
}
function _N(t) {
    return t.type === "inline"
}
function IN(t) {
    return (t == null ? void 0 : t.type) === "bullet_list_open"
}
function EN(t, e) {
    return t.slice(0, e + 1).filter(n=>n.type === "bullet_list_open").length > 1
}
function AN(t) {
    return (t == null ? void 0 : t.type) === "bullet_list_close"
}
function jN(t) {
    return t.type === "paragraph_open"
}
function MN(t, e) {
    return e > 0 && _N(t[e]) && jN(t[e - 1]) && SN(t[e])
}
function TN(t) {
    t.core.ruler.after("inline", "todo_lists", e=>{
        const n = e.tokens;
        let r = !1;
        const s = [];
        for (let i = n.length - 1; i >= 0; i--) {
            AN(n[i]) ? r = !0 : IN(n[i]) && !EN(n, i) && (r = !1);
            const a = MN(n, i);
            if (a && r) {
                const l = a[1].toLowerCase() === "x";
                n[i - 3].type === "bullet_list_open" && (n[i - 3].type = "todo_list_open"),
                n[i + 3].type === "bullet_list_close" && (n[i + 3].type = "todo_list_close");
                const d = n[i].children;
                if (d) {
                    const h = d[0].content.match(wD);
                    if (h) {
                        const f = h[2];
                        n[i].content = f,
                        d[0].content = f
                    }
                }
                n[i - 2].type = "todo_item_open",
                l === !0 && (n[i - 2].attrs = [["checked", "true"]]);
                let u = i;
                for (; n[u].type !== "list_item_close"; )
                    u++;
                n[u].type = "todo_item_close"
            }
            i + 3 < n.length && n[i + 3].type === "todo_list_close" && s.push(n[i + 3]),
            n[i].type === "todo_list_open" && s.pop(),
            n[i].type === "bullet_list_open" && s.length > 0 && (n[i].type = "todo_list_open")
        }
        return !1
    }
    )
}
const K3 = t=>t.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i) !== null;
function LN(t) {
    t.core.ruler.after("inline", "userMention", e=>{
        const n = /@$/;
        e.tokens.forEach(r=>{
            if (r.type !== "inline")
                return;
            const {children: s} = r;
            s && (s.forEach((i,a)=>{
                if (a + 3 > s.length)
                    return;
                let[o,l,d,u] = s.slice(a, a + 4);
                if (d.type === "link_close" && (u = d,
                d = null),
                o.type !== "text" || !n.test(o.content) || l.type !== "link_open" || u.type !== "link_close")
                    return;
                const h = l.attrGet("href");
                !h || !K3(h) || (o.content = o.content.slice(0, -1),
                l.type = "user_mention",
                l.attrSet("id", h),
                l.attrSet("label", d.content),
                s.splice(a + 2, d ? 2 : 1))
            }
            ),
            r.children = s)
        }
        )
    }
    )
}
const Qu = class Qu {
    static parseToProsemirrorData(e) {
        var n;
        return (n = this.instance().parse(e)) == null ? void 0 : n.toJSON()
    }
    static parseToProsemirrorNode(e, n) {
        return this.instance(n).parse(e) ?? void 0
    }
    static serialize(e, n) {
        const r = e instanceof Nk ? e : this.instance().schema.nodeFromJSON(e);
        return this.instance().serialize(r, n)
    }
    static serializeLeafNode(e) {
        var o, l, d;
        const n = e.type;
        let r;
        const s = F8[n];
        if (n === "hard_break")
            return `
`;
        if (n === "list_item")
            r = "bullet_list";
        else if ("group"in s && ((o = s.group) != null && o.includes("block")))
            r = "doc";
        else if ("group"in s && ((l = s.group) != null && l.includes("inline")))
            r = "paragraph";
        else
            for (const [u,h] of Object.entries(F8))
                if ("content"in h && ((d = h.content) != null && d.includes(n))) {
                    r = u;
                    break
                }
        if (!r)
            throw new Error(`Unknown or doc type for serializeLeafNode: ${e.type}`);
        const i = {
            content: [e],
            type: r
        }
          , a = this.instance().schema.nodeFromJSON(r === "doc" ? i : {
            content: [i],
            type: "doc"
        });
        return this.instance().serialize(a)
    }
    serialize(e, n) {
        return new bj(this.nodes,this.marks).serialize(e, {
            includeImageDimensions: (n == null ? void 0 : n.includeImageDimensions) ?? !1,
            hardBreakDelimiter: n == null ? void 0 : n.hardBreakDelimiter,
            tightLists: !0
        })
    }
    parse(e) {
        return this.markdownParser.parse(e)
    }
    constructor(e) {
        this.schema = e;
        const n = vj("commonmark", {
            html: !1,
            linkify: !0
        }).use(TN).use(fN).use(LN);
        n.block.ruler.enableOnly([]),
        n.inline.ruler.enableOnly(["entity", "escape", "text"]);
        const r = {
            tokenizer: n,
            nodes: CN,
            marks: bN
        };
        this.nodes = r.nodes,
        this.marks = r.marks,
        ["nodes", "marks"].forEach(s=>{
            for (const i in mC[s])
                this.schema[s][i] && r.tokenizer.enable(mC[s][i])
        }
        ),
        this.schema.nodes.table && r.tokenizer.use(yN),
        this.schema.nodes.image && r.tokenizer.use(DN),
        this.markdownParser = new wj(this.schema,r.tokenizer,ON(e, RN))
    }
    static instance(e=j1) {
        return this.instances.has(e) || this.instances.set(e, new Qu(e)),
        this.instances.get(e)
    }
}
;
Qu.imageRegex = /!\[(?<alt>[^\][]*?)]\((?<filename>[^\][]*?)(?="|\))"?(?<title>[^\]["]+)?"?\)/g,
Qu.instances = new WeakMap;
let Po = Qu;
function ON(t, e) {
    return Object.keys(e).reduce((n,r)=>{
        const s = e[r]
          , i = s.block || s.node
          , a = s.mark;
        return (i && t.nodes[i] || a && t.marks[a]) && (n[r] = s),
        n
    }
    , {})
}
const mC = {
    nodes: {
        blockquote: "blockquote",
        paragraph: "paragraph",
        horizontal_rule: "hr",
        heading: ["heading", "lheading"],
        code_block: ["code", "fence"],
        list_item: "list",
        image: "image"
    },
    marks: {
        em: "emphasis",
        inlineComment: "text",
        strong: "text",
        link: ["link", "autolink", "reference", "linkify"],
        strike: "strikethrough",
        code: "backticks"
    }
}
  , RN = {
    blockquote: {
        block: "blockquote"
    },
    paragraph: {
        block: "paragraph"
    },
    em: {
        mark: "em"
    },
    strong: {
        mark: "strong"
    },
    link: {
        mark: "link",
        getAttrs: t=>({
            href: t.attrGet("href")
        })
    },
    hr: {
        node: "horizontal_rule"
    },
    heading: {
        block: "heading",
        getAttrs: t=>({
            level: +t.tag.slice(1),
            id: yF()
        })
    },
    image: {
        node: "image",
        getAttrs: t=>{
            var r;
            const e = t.attrGet("width")
              , n = (r = t.children) == null ? void 0 : r[0];
            return {
                src: t.attrGet("src"),
                displayWidth: e ? +e : null,
                title: t.attrGet("title") || null,
                alt: (n == null ? void 0 : n.content) || null
            }
        }
    },
    softbreak: {
        node: "hard_break"
    },
    hardbreak: {
        node: "hard_break"
    },
    code_block: {
        block: "code_block",
        getAttrs: t=>({
            language: t.info || null
        })
    },
    todo_list: {
        block: "todo_list"
    },
    todo_item: {
        block: "todo_item",
        getAttrs: t=>({
            done: t.attrGet("checked") === "true"
        })
    },
    list_item: {
        block: "list_item"
    },
    bullet_list: {
        block: "bullet_list"
    },
    ordered_list: {
        block: "ordered_list",
        getAttrs: t=>({
            order: +(t.attrGet("start") || 1)
        })
    },
    code_inline: {
        mark: "code"
    },
    fence: {
        block: "code_block",
        getAttrs: t=>({
            language: t.info || null
        })
    },
    table: {
        block: "table"
    },
    tr: {
        block: "table_row"
    },
    th: {
        block: "table_header"
    },
    td: {
        block: "table_cell"
    },
    s: {
        mark: "strike"
    },
    user_mention: {
        node: "suggestion_userMentions",
        getAttrs: t=>({
            id: t.attrGet("id"),
            label: t.attrGet("label")
        })
    }
};
function PN(t) {
    return t.replace(/(\!\[([^\]]*)]\(([^(]+)\))/g, "$2").replace(/\[([^\]]+)]\(([^(]+?)\)/g, "$1")
}
const $N = t=>{
    const e = Po.serialize(t)
      , r = PN(e).split(`
`).find(s=>s.trim() !== "");
    return r && r.trim()
}
;
class Fc {
    static isModKey(e, n=!1) {
        return n ? K5() ? e.key === "Meta" : e.key === "Control" : K5() ? e.metaKey : e.ctrlKey
    }
    static isKey(e, n) {
        const r = "isComposing"in e && e.isComposing || "nativeEvent"in e && e.nativeEvent.isComposing;
        return e.key === n && !r
    }
    static isEscape(e) {
        return Fc.isKey(e, "Escape")
    }
    static isEnter(e) {
        return Fc.isKey(e, "Enter")
    }
    static isSpace(e) {
        return Fc.isKey(e, " ")
    }
    static hasAnyModifier(e) {
        return e.ctrlKey || e.shiftKey || e.metaKey || e.altKey
    }
    static get systemModKeyText() {
        return K5() ? "⌘" : "Ctrl"
    }
    static get systemAltKeyText() {
        return K5() ? "⌥" : "Alt"
    }
}
const K5 = ()=>typeof window < "u" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
function kD(t) {
    var e, n, r = "";
    if (typeof t == "string" || typeof t == "number")
        r += t;
    else if (typeof t == "object")
        if (Array.isArray(t))
            for (e = 0; e < t.length; e++)
                t[e] && (n = kD(t[e])) && (r && (r += " "),
                r += n);
        else
            for (e in t)
                t[e] && (r && (r += " "),
                r += e);
    return r
}
function gl() {
    for (var t, e, n = 0, r = ""; n < arguments.length; )
        (t = arguments[n++]) && (e = kD(t)) && (r && (r += " "),
        r += e);
    return r
}
const x = t=>{
    const e = Pt()
      , {size: n=16, width: r, height: s, viewBox: i="0 0 16 16", color: a="labelMuted", style: o, noFill: l=!1, className: d, children: u, ...h} = t
      , f = y.Children.only(u)
      , p = a in e.color ? e.color[a] : a === "brand" ? void 0 : a
      , m = {
        ...h,
        className: gl(d, {
            "color-override": a === "brand"
        }),
        style: {
            ...o,
            "--icon-color": p
        },
        width: r ?? n,
        height: s ?? n,
        viewBox: i,
        fill: l ? "none" : p,
        role: "img",
        focusable: "false",
        "aria-hidden": "aria-hidden"in h ? h["aria-hidden"] : "aria-label"in h ? void 0 : !0,
        xmlns: void 0
    };
    return y.isValidElement(f) ? y.cloneElement(f, m) : null
}
;
function FN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M12.6429 7.69048L8.92925 11.4041C7.48164 12.8517 5.34347 13.0101 4.16667 11.8333C2.98733 10.654 3.14447 8.52219 4.59216 7.07451L8.00206 3.66461C8.93557 2.73109 10.2976 2.63095 11.0333 3.36667C11.7681 4.10139 11.6658 5.4675 10.7361 6.39727L7.32363 9.8097C6.90202 10.2313 6.32171 10.2741 6.02381 9.97619C5.72651 9.6789 5.76949 9.09718 6.1989 8.66776L9.29048 5.57619C9.56662 5.30005 9.56662 4.85233 9.29048 4.57619C9.01433 4.30005 8.56662 4.30005 8.29048 4.57619L5.1989 7.66776C4.24737 8.6193 4.13865 10.091 5.02381 10.9762C5.9095 11.8619 7.37984 11.7535 8.32363 10.8097L11.7361 7.39727C13.1876 5.94573 13.3564 3.68975 12.0333 2.36667C10.7099 1.04326 8.45782 1.20884 7.00206 2.66461L3.59216 6.07451C1.62229 8.04437 1.39955 11.0662 3.16667 12.8333C4.93146 14.5981 7.9596 14.3737 9.92925 12.4041L13.6429 8.69048C13.919 8.41433 13.919 7.96662 13.6429 7.69048C13.3667 7.41433 12.919 7.41433 12.6429 7.69048Z"
            })
        })
    })
}
function NN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            width: "16",
            height: "16",
            viewBox: "0 0 16 16",
            children: [c.jsx("path", {
                d: "M1 6.09523C1 4.38578 2.45507 3 4.25 3C6.04493 3 7.50003 4.38578 7.50003 6.09523L7.50003 6.14871C7.50011 7.29952 7.5002 8.45945 7.15705 9.57058C6.797 10.7365 6.07643 11.8089 4.71855 12.8435C4.3951 13.0899 3.92313 13.0399 3.66438 12.7319C3.40562 12.4239 3.45806 11.9744 3.78151 11.7279C4.92363 10.8577 5.45306 10.0254 5.718 9.16748C5.75447 9.04939 5.78623 8.93011 5.81388 8.80921C5.34991 9.05222 4.81691 9.19046 4.25 9.19046C2.45507 9.19046 1 7.80468 1 6.09523Z"
            }), c.jsx("path", {
                d: "M8.5 6.09523C8.5 4.38578 9.95507 3 11.75 3C13.5449 3 15 4.38578 15 6.09523L15 6.14871C15.0001 7.29952 15.0002 8.45945 14.6571 9.57058C14.297 10.7365 13.5764 11.8089 12.2185 12.8435C11.8951 13.0899 11.4231 13.0399 11.1644 12.7319C10.9056 12.4239 10.9581 11.9744 11.2815 11.7279C12.4236 10.8577 12.9531 10.0254 13.218 9.16748C13.2545 9.04939 13.2862 8.93011 13.3139 8.80921C12.8499 9.05222 12.3169 9.19046 11.75 9.19046C9.95507 9.19046 8.5 7.80468 8.5 6.09523Z"
            })]
        })
    })
}
function pc(t) {
    const {variant: e, dayOfMonth: n, ...r} = t;
    let s;
    return e === "overdue" ? s = c.jsx("path", {
        d: "M11 1C13.2091 1 15 2.79086 15 5V6.25C15 6.66421 14.6642 7 14.25 7C13.8358 7 13.5 6.66421 13.5 6.25V6H2.5V11C2.5 12.3807 3.61929 13.5 5 13.5H6.25C6.66421 13.5 7 13.8358 7 14.25C7 14.6642 6.66421 15 6.25 15H5C2.79086 15 1 13.2091 1 11V5C1 2.79086 2.79086 1 5 1H11ZM9.53033 8.46967L11.5 10.4393L13.4697 8.46967C13.7626 8.17678 14.2374 8.17678 14.5303 8.46967C14.8232 8.76256 14.8232 9.23744 14.5303 9.53033L12.5607 11.5L14.5303 13.4697C14.8232 13.7626 14.8232 14.2374 14.5303 14.5303C14.2374 14.8232 13.7626 14.8232 13.4697 14.5303L11.5 12.5607L9.53033 14.5303C9.23744 14.8232 8.76256 14.8232 8.46967 14.5303C8.17678 14.2374 8.17678 13.7626 8.46967 13.4697L10.4393 11.5L8.46967 9.53033C8.17678 9.23744 8.17678 8.76256 8.46967 8.46967C8.76256 8.17678 9.23744 8.17678 9.53033 8.46967Z"
    }) : e === "add" ? s = c.jsx("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M15 5C15 2.79086 13.2091 1 11 1H5C2.79086 1 1 2.79086 1 5V11C1 13.2091 2.79086 15 5 15H6.25C6.66421 15 7 14.6642 7 14.25C7 13.8358 6.66421 13.5 6.25 13.5H5C3.61929 13.5 2.5 12.3807 2.5 11V6H13.5V6.25C13.5 6.66421 13.8358 7 14.25 7C14.6642 7 15 6.66421 15 6.25V5ZM11.5001 8C11.9143 8 12.2501 8.33579 12.2501 8.75V10.75L14.2501 10.75C14.6643 10.75 15.0001 11.0858 15.0001 11.5C15.0001 11.9142 14.6643 12.25 14.2501 12.25L12.2501 12.25V14.25C12.2501 14.6642 11.9143 15 11.5001 15C11.0859 15 10.7501 14.6642 10.7501 14.25V12.25H8.75C8.33579 12.25 8 11.9142 8 11.5C8 11.0858 8.33579 10.75 8.75 10.75L10.7501 10.75V8.75C10.7501 8.33579 11.0859 8 11.5001 8Z"
    }) : e === "disable" ? s = c.jsx("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M15 5C15 2.79086 13.2091 1 11 1H5C2.79086 1 1 2.79086 1 5V11C1 13.2091 2.79086 15 5 15H6.25C6.66421 15 7 14.6642 7 14.25C7 13.8358 6.66421 13.5 6.25 13.5H5C3.61929 13.5 2.5 12.3807 2.5 11V6H13.5V6.25C13.5 6.66421 13.8358 7 14.25 7C14.6642 7 15 6.66421 15 6.25V5ZM11 13.5C11.4172 13.5 11.8106 13.3978 12.1564 13.2171L8.78295 9.84361C8.60221 10.1894 8.5 10.5828 8.5 11C8.5 12.3807 9.61929 13.5 11 13.5ZM9.84361 8.78295L13.2171 12.1564C13.3978 11.8106 13.5 11.4172 13.5 11C13.5 9.61929 12.3807 8.5 11 8.5C10.5828 8.5 10.1894 8.60221 9.84361 8.78295ZM11 15C13.2091 15 15 13.2091 15 11C15 8.79086 13.2091 7 11 7C8.79086 7 7 8.79086 7 11C7 13.2091 8.79086 15 11 15Z"
    }) : n ? s = c.jsxs(c.Fragment, {
        children: [c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M15 5C15 2.79086 13.2091 1 11 1H5C2.79086 1 1 2.79086 1 5V11C1 13.2091 2.79086 15 5 15H11C13.2091 15 15 13.2091 15 11V5ZM2.5 5C2.5 4.44772 2.94772 4 3.5 4H12.5C13.0523 4 13.5 4.44772 13.5 5V11C13.5 12.3807 12.3807 13.5 11 13.5H5C3.61929 13.5 2.5 12.3807 2.5 11V5Z"
        }), c.jsx(VN, {
            x: "50%",
            y: "11.5",
            children: n
        })]
    }) : s = c.jsx("path", {
        d: "M11 1C13.2091 1 15 2.79086 15 5V11C15 13.2091 13.2091 15 11 15H5C2.79086 15 1 13.2091 1 11V5C1 2.79086 2.79086 1 5 1H11ZM13.5 6H2.5V11C2.5 12.3807 3.61929 13.5 5 13.5H11C12.3807 13.5 13.5 12.3807 13.5 11V6Z"
    }),
    c.jsx(x, {
        ...r,
        children: c.jsx("svg", {
            children: s
        })
    })
}
const VN = ae.text`
  font-size: 7px;
  font-weight: 800;
  text-anchor: middle;
`;
function BN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M4.53 5.47a.75.75 0 0 0-1.06 1.06l4 4a.75.75 0 0 0 1.054.007l4-3.903a.75.75 0 0 0-1.048-1.073l-3.47 3.385L4.53 5.47Z"
            })
        })
    })
}
function xD(t) {
    const e = Pt();
    return c.jsx("svg", {
        width: "9",
        height: "5",
        viewBox: "0 0 9 5",
        fill: e.color.labelMuted,
        className: t.className,
        children: c.jsx("path", {
            d: "M1.915.557a.667.667 0 0 0-.943.943l2.862 2.862a.942.942 0 0 0 1.333 0L8.028 1.5a.667.667 0 0 0-.943-.943L4.5 3.14 1.915.557Z"
        })
    })
}
function UN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M11.2197 10.7803C11.5126 11.0732 11.9874 11.0732 12.2803 10.7803C12.5732 10.4874 12.5732 10.0126 12.2803 9.71967L8.28033 5.71967C7.98999 5.42933 7.52014 5.42643 7.22624 5.71318L3.22624 9.61581C2.92976 9.90508 2.92391 10.3799 3.21318 10.6764C3.50244 10.9729 3.97728 10.9787 4.27376 10.6895L7.74351 7.30417L11.2197 10.7803Z"
            })
        })
    })
}
function DD(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M2.96967 2.96967C3.26256 2.67678 3.73744 2.67678 4.03033 2.96967L8 6.939L11.9697 2.96967C12.2626 2.67678 12.7374 2.67678 13.0303 2.96967C13.3232 3.26256 13.3232 3.73744 13.0303 4.03033L9.061 8L13.0303 11.9697C13.2966 12.2359 13.3208 12.6526 13.1029 12.9462L13.0303 13.0303C12.7374 13.3232 12.2626 13.3232 11.9697 13.0303L8 9.061L4.03033 13.0303C3.73744 13.3232 3.26256 13.3232 2.96967 13.0303C2.67678 12.7374 2.67678 12.2626 2.96967 11.9697L6.939 8L2.96967 4.03033C2.7034 3.76406 2.6792 3.3474 2.89705 3.05379L2.96967 2.96967Z"
            })
        })
    })
}
function HN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M9.45708 3.78512C9.52818 3.42972 9.29771 3.08398 8.94232 3.01288C8.58692 2.94178 8.24118 3.17224 8.17008 3.52763L6.53808 11.685C6.46698 12.0403 6.69744 12.3861 7.05284 12.4572C7.40823 12.5283 7.75397 12.2978 7.82508 11.9424L9.45708 3.78512ZM4.44437 4.89378C4.66182 5.18374 4.60304 5.59507 4.31308 5.81252L1.75006 7.73461L4.31308 9.6567C4.60304 9.87415 4.66182 10.2855 4.44437 10.5754C4.22692 10.8654 3.81559 10.9242 3.52563 10.7067L0.262523 8.25963C0.0972618 8.1357 0 7.94118 0 7.73461C0 7.52804 0.0972618 7.33353 0.262523 7.2096L3.52563 4.76249C3.81559 4.54504 4.22692 4.60382 4.44437 4.89378ZM11.5508 4.89378C11.7682 4.60382 12.1796 4.54504 12.4695 4.76249L15.7326 7.2096C15.8979 7.33353 15.9952 7.52804 15.9952 7.73461C15.9952 7.94118 15.8979 8.1357 15.7326 8.25963L12.4695 10.7067C12.1796 10.9242 11.7682 10.8654 11.5508 10.5754C11.3333 10.2855 11.3921 9.87415 11.6821 9.6567L14.2451 7.73461L11.6821 5.81252C11.3921 5.59507 11.3333 5.18374 11.5508 4.89378Z"
            })
        })
    })
}
function zN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M11.424 9.202a.135.135 0 01-.108.12 5.054 5.054 0 00-1.914.78.135.135 0 01-.076.023h-2.94l-2.358 2.099a.27.27 0 01-.45-.203v-1.896H2.751a.79.79 0 01-.795-.784V2.813c0-.45.363-.813.811-.813h10.005c.447 0 .81.364.81.813v5.694a.135.135 0 01-.22.108l-.189-.15a1.08 1.08 0 00-1.75.737zm.96-.133a.266.266 0 01.285.032l2.163 1.723a.271.271 0 01.014.412l-2.163 1.97a.27.27 0 01-.452-.2v-.955c-3.324.132-3.783 2.689-3.79 2.722a.27.27 0 01-.266.227h-.022a.27.27 0 01-.248-.27c0-.047.05-4.517 4.326-4.697v-.72c0-.104.06-.199.153-.244z"
            })
        })
    })
}
function ZN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.10972 1.93688C2 2.20775 2 2.55017 2 3.235V12.765C2 13.4498 2 13.7922 2.10972 14.0631C2.26213 14.4394 2.56058 14.7379 2.93688 14.8903C3.20775 15 3.55017 15 4.235 15H11.765C12.4498 15 12.7922 15 13.0631 14.8903C13.4394 14.7379 13.7379 14.4394 13.8903 14.0631C14 13.7922 14 13.4498 14 12.765V7V3.235C14 2.55017 14 2.20775 13.8903 1.93688C13.7379 1.56058 13.4394 1.26213 13.0631 1.10972C12.7922 1 12.4498 1 11.765 1H9.63636H4.235C3.55017 1 3.20775 1 2.93688 1.10972C2.56058 1.26213 2.26213 1.56058 2.10972 1.93688ZM12 3.5C12 3.22386 11.7761 3 11.5 3H4.5C4.22386 3 4 3.22386 4 3.5V5.5C4 5.77614 4.22386 6 4.5 6H4.60961C4.83905 6 5.03904 5.84385 5.09468 5.62127L5.42425 4.30299C5.46877 4.12492 5.62876 4 5.81231 4H7.25V11C7.25 11.5523 6.80228 12 6.25 12H5.83333C5.3731 12 5 12.3731 5 12.8333C5 12.9254 5.07462 13 5.16667 13H10.8333C10.9254 13 11 12.9254 11 12.8333C11 12.3731 10.6269 12 10.1667 12H9.75C9.19772 12 8.75 11.5523 8.75 11V4H10.1877C10.3712 4 10.5312 4.12492 10.5757 4.30299L10.9053 5.62127C10.961 5.84385 11.161 6 11.3904 6H11.5C11.7761 6 12 5.77614 12 5.5V3.5Z"
            })
        })
    })
}
function r4(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M9.30558 10.206C9.57224 10.4726 9.59447 10.8912 9.37225 11.1831L9.30558 11.2594L6.84751 13.7175C5.58692 14.9781 3.54311 14.9781 2.28252 13.7175C1.0654 12.5004 1.02344 10.5531 2.15661 9.28564L2.28252 9.15251L4.74059 6.69443C5.0315 6.40353 5.50315 6.40353 5.79405 6.69443C6.06071 6.9611 6.08294 7.37963 5.86072 7.67161L5.79405 7.74789L3.33598 10.206C2.6572 10.8847 2.6572 11.9853 3.33598 12.664C3.98082 13.3089 5.00628 13.3411 5.68918 12.7608L5.79405 12.664L8.25212 10.206C8.54303 9.91506 9.01468 9.91506 9.30558 10.206ZM9.82982 6.17019C10.1207 6.46109 10.1207 6.93274 9.82982 7.22365L7.34921 9.70427C7.0583 9.99518 6.58665 9.99518 6.29575 9.70427C6.00484 9.41337 6.00484 8.94172 6.29575 8.65081L8.77637 6.17019C9.06727 5.87928 9.53892 5.87928 9.82982 6.17019ZM13.7175 2.2825C14.9346 3.49962 14.9766 5.44688 13.8434 6.71436L13.7175 6.84749L11.2594 9.30557C10.9685 9.59647 10.4969 9.59647 10.206 9.30557C9.93931 9.03891 9.91709 8.62037 10.1393 8.32839L10.206 8.25211L12.664 5.79403C13.3428 5.11525 13.3428 4.01474 12.664 3.33596C12.0192 2.69112 10.9938 2.65888 10.3109 3.23923L10.206 3.33596L7.74791 5.79403C7.457 6.08494 6.98535 6.08494 6.69445 5.79403C6.42779 5.52737 6.40556 5.10883 6.62778 4.81686L6.69445 4.74057L9.15252 2.2825C10.4131 1.02191 12.4569 1.02191 13.7175 2.2825Z"
            })
        })
    })
}
const Y3 = t=>c.jsx(x, {
    ...t,
    children: c.jsxs("svg", {
        children: [c.jsx("path", {
            d: "M11 1C13.2091 1 15 2.79086 15 5V6.25C15 6.66421 14.6642 7 14.25 7C13.8358 7 13.5 6.66421 13.5 6.25V6H2.5V11C2.5 12.3807 3.61929 13.5 5 13.5H6.25C6.66421 13.5 7 13.8358 7 14.25C7 14.6642 6.66421 15 6.25 15H5C2.79086 15 1 13.2091 1 11V5C1 2.79086 2.79086 1 5 1H11Z"
        }), c.jsx("path", {
            d: "M13.2633 8.13808L9.37793 12.0487C10.1422 12.2768 10.7617 12.8515 11.0497 13.5954L14.8764 9.74799C15.1693 9.4815 14.8839 8.6406 14.6178 8.37776C14.3395 8.10295 13.5148 7.82593 13.2633 8.13808Z"
        }), c.jsx("path", {
            d: "M10.2505 14.3635C10.166 13.5465 9.48171 12.9178 8.66337 12.9077C8.41558 13.3992 8.16295 14.1567 8.01335 14.6377C7.94869 14.8456 8.12874 15.0407 8.34173 14.9926C8.90202 14.8662 9.82253 14.6304 10.2505 14.3635Z"
        })]
    })
})
  , qN = t=>c.jsx(x, {
    ...t,
    children: c.jsxs("svg", {
        children: [c.jsx("path", {
            d: "M5.885 13.967c-.278.325-.735.443-1.113.246a7 7 0 1 1 9.798-8.634c.17.463-.198.921-.692.921-.346 0-.645-.232-.774-.554A5.502 5.502 0 0 0 2.5 8c0 1.519.616 2.894 1.61 3.89l1.011-1.011A3 3 0 0 1 7.243 10h1.514c.218 0 .313.252.171.417l-3.043 3.55Z"
        }), c.jsx("path", {
            d: "M6 6a2 2 0 0 1 4 0v.5a2 2 0 0 1-4 0V6ZM13.263 8.138l-3.885 3.91a2.594 2.594 0 0 1 1.672 1.547l3.826-3.847c.293-.266.008-1.107-.258-1.37-.279-.275-1.103-.552-1.355-.24ZM10.25 14.364a1.622 1.622 0 0 0-1.587-1.456c-.247.491-.5 1.249-.65 1.73a.277.277 0 0 0 .329.355c.56-.127 1.48-.363 1.909-.63Z"
        })]
    })
});
function WN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15 7V11.5C15 12.3284 14.3284 13 13.5 13H2.5C1.67157 13 1 12.3284 1 11.5V7H15ZM12.5 8H9.5C9.22386 8 9 8.22386 9 8.5V9.5C9 9.77614 9.22386 10 9.5 10H12.5C12.7761 10 13 9.77614 13 9.5V8.5C13 8.22386 12.7761 8 12.5 8ZM13.5 3C14.3284 3 15 3.67157 15 4.5V5H1V4.5C1 3.67157 1.67157 3 2.5 3H13.5Z"
            })
        })
    })
}
function bi(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8 4a2 2 0 0 0-2 2v.5a2 2 0 0 0 4 0V6a2 2 0 0 0-2-2Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm-2.879-4.121-1.01 1.01a5.5 5.5 0 1 1 7.778 0l-1.01-1.01A3 3 0 0 0 8.757 10H7.243a3 3 0 0 0-2.122.879Z"
            })]
        })
    })
}
function SD(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.03531 2.4967C8.00782 2.49206 7.97974 2.49206 7.95225 2.4967C7.94834 2.49762 7.93369 2.50161 7.89987 2.51472C7.84539 2.53584 7.77481 2.56698 7.64896 2.62291L3.76649 4.34834C3.27153 4.56831 2.9481 4.71286 2.72417 4.8378C2.58219 4.91702 2.52809 4.96361 2.51321 4.9772C2.48794 5.03526 2.48565 5.10081 2.50683 5.16048C2.52072 5.17508 2.57145 5.22532 2.70758 5.31423C2.92227 5.45446 3.23486 5.62118 3.71331 5.87507L6.47204 7.33898C7.1979 7.72415 7.42758 7.83752 7.65481 7.88244C7.87863 7.92668 8.10893 7.92668 8.33274 7.88244C8.55998 7.83752 8.78966 7.72415 9.51552 7.33898L12.2742 5.87507C12.7527 5.62118 13.0653 5.45446 13.28 5.31423C13.4161 5.22532 13.4668 5.17508 13.4807 5.16049C13.5019 5.10081 13.4996 5.03527 13.4743 4.97721C13.4595 4.96361 13.4054 4.91703 13.2634 4.83781C13.0394 4.71287 12.716 4.56831 12.2211 4.34834L8.3386 2.62291C8.21275 2.56698 8.14217 2.53584 8.08768 2.51472M7.70273 1.01854C7.8954 0.986007 8.09216 0.986007 8.28483 1.01854C8.50567 1.05583 8.7095 1.14687 8.90002 1.23197C8.91581 1.23902 8.9315 1.24603 8.9471 1.25296L12.8619 2.99276C13.3156 3.19437 13.7026 3.36635 13.9934 3.52863C14.2797 3.68837 14.6072 3.90799 14.7946 4.26626C15.0403 4.73608 15.0597 5.29202 14.8472 5.7778C14.6853 6.14824 14.3738 6.39013 14.0994 6.56942C13.8205 6.75154 13.4464 6.95005 13.0078 7.18275L10.2179 8.66325C10.1873 8.67946 10.1572 8.69546 10.1275 8.71125C9.5304 9.02846 9.09485 9.25986 8.62329 9.35307C8.20763 9.43524 7.77993 9.43524 7.36427 9.35307C6.89271 9.25986 6.45717 9.02846 5.8601 8.71125C5.83038 8.69546 5.80025 8.67946 5.7697 8.66325L2.97973 7.18276C2.54116 6.95005 2.16704 6.75154 1.88819 6.56941C1.6137 6.39013 1.30229 6.14824 1.14031 5.7778C0.927888 5.29201 0.947252 4.73607 1.19296 4.26626C1.38032 3.90799 1.70781 3.68836 1.99411 3.52862C2.28494 3.36635 2.67197 3.19437 3.12565 2.99276L7.04046 1.25296C7.05607 1.24603 7.07176 1.23902 7.08754 1.23197C7.27806 1.14687 7.48189 1.05583 7.70273 1.01854ZM8.03531 2.4967C8.03458 2.49657 8.03421 2.49648 8.03419 2.49647ZM8.03531 2.4967C8.03458 2.49657 8.03421 2.49648 8.03419 2.49647Z"
            }), c.jsx("path", {
                d: "M2.11544 7.84129C1.75436 7.63903 1.29772 7.76786 1.09551 8.12904C0.893307 8.49022 1.0221 8.94699 1.38319 9.14925L4.22703 10.7422C5.39968 11.3994 6.13596 11.812 6.93014 11.9765C7.6318 12.1218 8.35579 12.1218 9.05744 11.9765C9.85162 11.812 10.5879 11.3994 11.7606 10.7422L14.6044 9.14925C14.9655 8.94699 15.0943 8.49022 14.8921 8.12904C14.6899 7.76786 14.2332 7.63903 13.8721 7.84129L11.1425 9.3703C9.81742 10.1126 9.29302 10.3968 8.75354 10.5086C8.25236 10.6124 7.73523 10.6124 7.23404 10.5086C6.69456 10.3968 6.17017 10.1125 4.84508 9.3703L2.11544 7.84129Z"
            }), c.jsx("path", {
                d: "M2.12332 10.8439C1.76471 10.6373 1.30654 10.7606 1.09998 11.1193C0.893422 11.478 1.01668 11.9363 1.3753 12.1429L3.35378 13.2829C4.83534 14.1367 5.7312 14.653 6.69796 14.8582C7.55234 15.0395 8.43523 15.0395 9.28961 14.8582C10.2564 14.653 11.1522 14.1367 12.6338 13.2829L14.6123 12.1429C14.9709 11.9363 15.0941 11.478 14.8876 11.1193C14.681 10.7606 14.2229 10.6373 13.8642 10.8439L12.0082 11.9133C10.3656 12.8597 9.68496 13.2418 8.97861 13.3917C8.32928 13.5295 7.65828 13.5295 7.00896 13.3917C6.30261 13.2418 5.62199 12.8597 3.9794 11.9133L2.12332 10.8439Z"
            })]
        })
    })
}
function s4(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1 8C1 11.4623 3.51369 14.3375 6.81561 14.9002C6.30117 14.0365 6.41563 12.9024 7.15899 12.1591L8.06801 11.25L7.159 10.341C7.05874 10.2407 6.96991 10.1333 6.89253 10.0205C6.22584 10.0988 5.60081 10.3992 5.12134 10.8787L4.1109 11.8891C3.1156 10.8938 2.5 9.5188 2.5 8C2.5 4.96246 4.96246 2.5 8 2.5C10.5335 2.5 12.667 4.21311 13.3053 6.54415C13.8441 6.43602 14.4148 6.52651 14.9002 6.81561C14.3375 3.51369 11.4623 1 8 1C4.13403 1 1 4.13403 1 8Z"
            }), c.jsx("path", {
                d: "M7.15901 7.15901C7.92202 6.396 9.09671 6.29556 9.9681 6.85769C9.98906 6.74163 10 6.62209 10 6.5V6C10 4.89545 9.10455 4 8 4C6.89545 4 6 4.89545 6 6V6.5C6 7.07945 6.24643 7.60134 6.6402 7.96661C6.74937 7.67202 6.92231 7.3957 7.15901 7.15901Z"
            }), c.jsx("path", {
                d: "M9.38043 8.31967L11.3501 10.2893L13.3198 8.31967C13.6127 8.02678 14.0875 8.02678 14.3804 8.31967C14.6733 8.61256 14.6733 9.08745 14.3804 9.38034L12.4108 11.35L14.3804 13.3197C14.6733 13.6126 14.6733 14.0874 14.3804 14.3803C14.0875 14.6732 13.6127 14.6732 13.3198 14.3803L11.3501 12.4107L9.38043 14.3803C9.08754 14.6732 8.61266 14.6732 8.31977 14.3803C8.02688 14.0874 8.02688 13.6126 8.31977 13.3197L10.2894 11.35L8.31977 9.38034C8.02688 9.08745 8.02688 8.61256 8.31977 8.31967C8.61266 8.02678 9.08754 8.02678 9.38043 8.31967Z"
            })]
        })
    })
}
function GN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M10.8196 3.15118L14.6253 5.10724C14.9872 5.29306 15.0128 5.52901 14.9963 5.65432L13.1772 8.97351C13.1772 8.97351 12.907 9.18073 12.5152 8.94661L9.08599 6.89825C9.06802 6.88766 9.04808 6.88084 9.02739 6.87819C9.0067 6.87554 8.98568 6.87712 8.96562 6.88284C8.94556 6.88855 8.92686 6.89829 8.91067 6.91144C8.89449 6.9246 8.88114 6.94091 8.87144 6.95938L8.7229 7.24973C8.71175 7.27127 8.70594 7.29516 8.70594 7.31941C8.70594 7.34367 8.71175 7.36756 8.7229 7.3891L11.9064 13.6075C11.9449 13.6792 11.9688 13.7577 11.9765 13.8387C11.9843 13.9196 11.9758 14.0013 11.9516 14.079C11.9274 14.1566 11.888 14.2287 11.8356 14.2909C11.7832 14.3531 11.7189 14.4042 11.6466 14.4413C11.5742 14.4783 11.4951 14.5005 11.414 14.5066C11.3329 14.5128 11.2514 14.5026 11.1743 14.4768C11.0971 14.4511 11.0259 14.4101 10.9648 14.3565C10.9037 14.3028 10.8539 14.2375 10.8183 14.1644L7.12994 6.95938C7.12042 6.94084 7.10722 6.92445 7.09113 6.9112C7.07505 6.89796 7.05643 6.88814 7.03641 6.88236C7.01607 6.87643 6.99473 6.87473 6.97371 6.87735C6.95268 6.87998 6.93242 6.88689 6.91416 6.89764L3.48495 8.946C3.09373 9.18011 2.87429 9.01385 2.82355 8.97289C2.73499 8.89221 1.02492 5.77348 1.00381 5.65554C0.986694 5.53084 1.01359 5.29184 1.37546 5.10846L5.18122 3.1524L5.04185 2.87978C4.97191 2.73593 4.96114 2.5704 5.01185 2.4187C5.06255 2.267 5.1707 2.14122 5.31309 2.06835C5.45547 1.99548 5.62075 1.98132 5.77346 2.02891C5.92616 2.0765 6.05413 2.18205 6.1299 2.32291L7.86468 5.71117C7.87732 5.73629 7.89671 5.75738 7.92069 5.77207C7.94467 5.78675 7.97227 5.79445 8.00038 5.7943C8.02856 5.79436 8.0562 5.78662 8.08026 5.77195C8.10432 5.75728 8.12385 5.73625 8.1367 5.71117L9.87086 2.32169C9.94664 2.18083 10.0746 2.07528 10.2273 2.02768C10.38 1.98009 10.5453 1.99425 10.6877 2.06713C10.8301 2.14 10.9382 2.26578 10.9889 2.41748C11.0396 2.56917 11.0289 2.7347 10.9589 2.87855L10.8196 3.15118Z"
            }), c.jsx("path", {
                d: "M4.09443 13.6078C4.0559 13.6794 4.03205 13.758 4.02428 13.8389C4.01651 13.9199 4.02497 14.0016 4.04917 14.0792C4.07337 14.1569 4.11281 14.2289 4.1652 14.2911C4.21759 14.3533 4.28187 14.4044 4.35426 14.4415C4.42666 14.4785 4.50572 14.5008 4.58682 14.5069C4.66791 14.513 4.74941 14.5029 4.82655 14.4771C4.90368 14.4513 4.97489 14.4104 5.03601 14.3567C5.09713 14.3031 5.14693 14.2378 5.18249 14.1646L7.62145 9.40102C7.63231 9.37939 7.63796 9.35553 7.63796 9.33133C7.63796 9.30714 7.63231 9.28327 7.62145 9.26165L7.10615 8.2555C7.09332 8.23047 7.07384 8.20946 7.04984 8.19479C7.02585 8.18013 6.99826 8.17236 6.97014 8.17236C6.94201 8.17236 6.91443 8.18013 6.89044 8.19479C6.86644 8.20946 6.84696 8.23047 6.83413 8.2555L4.09443 13.6078Z"
            })]
        })
    })
}
function _D(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M7.39947 4.1511C8.00569 3.81649 8.758 4.05623 9.0798 4.68658L12.3549 11.1019C12.4502 11.2885 12.5 11.4966 12.5 11.7078C12.5 12.4215 11.9436 13 11.2573 13H4.74297C4.54172 13 4.34349 12.9492 4.1653 12.8519C3.55763 12.5202 3.32364 11.739 3.64268 11.1071L6.88186 4.69178C6.99813 4.46149 7.17853 4.27305 7.39947 4.1511ZM7.97623 4.96939C7.92894 4.97029 7.88112 4.98247 7.83648 5.00711C7.78125 5.0376 7.73614 5.08471 7.70708 5.14228L4.4679 11.5576C4.38814 11.7156 4.44663 11.9109 4.59855 11.9938C4.6431 12.0182 4.69266 12.0309 4.74297 12.0309L7.97564 12.0303L7.97623 4.96939Z"
            })
        })
    })
}
function KN(t) {
    const {className: e, type: n="closed"} = t
      , r = Pt();
    return n === "dashed" ? c.jsx("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: r.color.labelMuted,
        className: e,
        children: c.jsx("path", {
            d: "M3.75 2H4v1.5h-.25c-.69 0-1.25.56-1.25 1.25V5H1v-.25A2.75 2.75 0 0 1 3.75 2ZM1 7v3h1.5V7H1ZM1.104 12a2.751 2.751 0 0 0 2.646 2H4v-1.5h-.25c-.409 0-.772-.196-1-.5H1.104ZM6 14v-1.5h3V14H6ZM11 14h1.25c1.259 0 2.32-.846 2.646-2H13.25c-.228.304-.591.5-1 .5H11V14ZM15 8v2h-1.5V8H15ZM14.896 6H13.25a1.248 1.248 0 0 0-1-.5H11V4h1.25c1.259 0 2.32.846 2.646 2ZM9 3.987a.25.25 0 0 1-.102-.065L7.59 2.545A1.75 1.75 0 0 0 6.321 2H6v1.5h.32a.25.25 0 0 1 .182.078L7.81 4.955A1.75 1.75 0 0 0 9 5.498v-1.51Z"
        })
    }) : c.jsxs("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: r.color.labelMuted,
        className: e,
        children: [c.jsx(gC, {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6.32 3.5H3.75c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h8.5c.69 0 1.25-.56 1.25-1.25v-4.5c0-.69-.56-1.25-1.25-1.25H9.08a1.75 1.75 0 01-1.27-.545L6.503 3.578A.25.25 0 006.32 3.5zM3.75 2h2.57c.48 0 .939.197 1.27.545l1.308 1.377A.25.25 0 009.08 4h3.171A2.75 2.75 0 0115 6.75v4.5A2.75 2.75 0 0112.25 14h-8.5A2.75 2.75 0 011 11.25v-6.5A2.75 2.75 0 013.75 2z",
            style: {
                opacity: n === "open" ? 0 : 1
            }
        }), c.jsx(gC, {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M13.806 6a1.25 1.25 0 0 1 1.186 1.645l-1.768 5.304C12.966 13.68 12.217 14 11.25 14h-7.5c-.435 0-.845-.1-1.21-.28a.748.748 0 0 1-.304-.175A2.748 2.748 0 0 1 .999 11.25v-6.5A2.75 2.75 0 0 1 3.75 2h2.57c.48 0 .939.197 1.27.545l1.308 1.377A.25.25 0 0 0 9.08 4h2.171c1.259 0 2.32.846 2.646 2h-.09ZM6.321 3.5H3.75c-.69 0-1.25.56-1.25 1.25v6.5c0 .065.005.128.014.19l1.542-4.283A1.75 1.75 0 0 1 5.703 6h6.547a1.248 1.248 0 0 0-1-.5H9.08a1.75 1.75 0 0 1-1.27-.545L6.503 3.578A.25.25 0 0 0 6.32 3.5Zm-2.594 9h7.523c.214 0 .416-.054.592-.15L13.46 7.5H5.704a.25.25 0 0 0-.235.165L3.728 12.5Z",
            style: {
                opacity: n === "open" ? 1 : 0
            }
        })]
    })
}
const gC = ae.path`
  transition-property: opacity;
  transition-duration: ${pn("slowTransition")};
`;
function YN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.323 5.68A1 1 0 0 0 2 6.415v8.083a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3.515a2 2 0 0 1 4 0v3.515a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5V6.416a1 1 0 0 0-.323-.737L9.015 1.396a1.5 1.5 0 0 0-2.03 0L2.323 5.679Z"
            })
        })
    })
}
function QN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M2.085 4.659c.33-1.322.496-1.983.868-2.473a3 3 0 0 1 1.209-.944C4.727 1 5.409 1 6.772 1h2.457c1.362 0 2.044 0 2.609.242a3 3 0 0 1 1.21.944c.37.49.536 1.15.867 2.473l.94 3.764c.055.218.083.327.102.438.016.094.027.19.035.284.008.112.008.225.008.45v.575c0 1.709 0 2.563-.338 3.213a2.999 2.999 0 0 1-1.28 1.28C12.733 15 11.88 15 10.17 15H5.83c-1.708 0-2.563 0-3.213-.338a3 3 0 0 1-1.28-1.28C1 12.733 1 11.88 1 10.17v-.575c0-.225 0-.338.008-.45a3 3 0 0 1 .035-.284 6.02 6.02 0 0 1 .098-.426l.944-3.776ZM2.6 8.787l.942-3.765c.17-.682.28-1.115.387-1.442.102-.31.173-.425.22-.487a1.5 1.5 0 0 1 .604-.472c.072-.03.201-.07.526-.095.343-.025.79-.026 1.493-.026H9.23c.703 0 1.15 0 1.493.026.325.024.454.064.526.095a1.5 1.5 0 0 1 .604.472c.047.062.118.178.22.487.108.327.217.76.387 1.442l.942 3.765c.06.239.07.285.077.328.008.047.014.095.018.142.003.044.004.092.004.338V10h-1.382a2.56 2.56 0 0 0-2.289 1.415 1.06 1.06 0 0 1-.947.585H7.118a1.06 1.06 0 0 1-.947-.585A2.559 2.559 0 0 0 3.882 10H2.5v-.405c0-.246.001-.294.004-.338.004-.047.01-.095.018-.142.007-.043.018-.09.077-.328Z",
                fillRule: "evenodd"
            })
        })
    })
}
function XN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M4.59101 9.58053L7.48769 4.79175C7.72142 4.40535 8.27858 4.40535 8.51231 4.79175L11.409 9.58053C11.7265 10.1055 11.153 10.7168 10.6144 10.4275L8.09409 9.07421C8.03528 9.04263 7.96471 9.04263 7.90591 9.07421L5.38559 10.4275C4.84695 10.7168 4.27348 10.1055 4.59101 9.58053Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15 8.00195C15 11.8679 11.866 15.002 8 15.002C4.13401 15.002 1 11.8679 1 8.00195C1 4.13596 4.13401 1.00195 8 1.00195C11.866 1.00195 15 4.13596 15 8.00195ZM13.5 8.00195C13.5 11.0395 11.0376 13.502 8 13.502C4.96243 13.502 2.5 11.0395 2.5 8.00195C2.5 4.96439 4.96243 2.50195 8 2.50195C11.0376 2.50195 13.5 4.96439 13.5 8.00195Z"
            })]
        })
    })
}
function JN(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M11.2803 6.78228C11.5732 6.48939 11.5732 6.01452 11.2803 5.72162C10.9874 5.42873 10.5126 5.42873 10.2197 5.72162L7.25 8.69129L5.78033 7.22162C5.48744 6.92873 5.01256 6.92873 4.71967 7.22162C4.42678 7.51452 4.42678 7.98939 4.71967 8.28228L6.71967 10.2823C7.01256 10.5752 7.48744 10.5752 7.78033 10.2823L11.2803 6.78228Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15 8.00195C15 11.8679 11.866 15.002 8 15.002C4.13401 15.002 1 11.8679 1 8.00195C1 4.13596 4.13401 1.00195 8 1.00195C11.866 1.00195 15 4.13596 15 8.00195ZM13.5 8.00195C13.5 11.0395 11.0376 13.502 8 13.502C4.96243 13.502 2.5 11.0395 2.5 8.00195C2.5 4.96439 4.96243 2.50195 8 2.50195C11.0376 2.50195 13.5 4.96439 13.5 8.00195Z"
            })]
        })
    })
}
function eV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8 2.5a5.5 5.5 0 0 0-5.213 7.26.75.75 0 0 1-1.42.48 7 7 0 1 1 13.268 0 .75.75 0 0 1-1.423-.48A5.5 5.5 0 0 0 8 2.5Z"
            }), c.jsx("path", {
                d: "m3.617 13.771 3.724-6.385a.755.755 0 0 1 1.318 0l3.724 6.385c.408.7-.33 1.515-1.022 1.13l-3.24-1.805a.248.248 0 0 0-.242 0l-3.24 1.805c-.693.385-1.43-.43-1.022-1.13Z"
            })]
        })
    })
}
function tV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M9 8.00195C9 8.55424 8.55228 9.00195 8 9.00195C7.44772 9.00195 7 8.55424 7 8.00195C7 7.44967 7.44772 7.00195 8 7.00195C8.55228 7.00195 9 7.44967 9 8.00195Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 12.002C10.2091 12.002 12 10.2111 12 8.00195C12 5.79281 10.2091 4.00195 8 4.00195C5.79086 4.00195 4 5.79281 4 8.00195C4 10.2111 5.79086 12.002 8 12.002ZM8 10.502C9.38071 10.502 10.5 9.38267 10.5 8.00195C10.5 6.62124 9.38071 5.50195 8 5.50195C6.61929 5.50195 5.5 6.62124 5.5 8.00195C5.5 9.38267 6.61929 10.502 8 10.502Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15 8.00195C15 11.8679 11.866 15.002 8 15.002C4.13401 15.002 1 11.8679 1 8.00195C1 4.13596 4.13401 1.00195 8 1.00195C11.866 1.00195 15 4.13596 15 8.00195ZM13.5 8.00195C13.5 11.0395 11.0376 13.502 8 13.502C4.96243 13.502 2.5 11.0395 2.5 8.00195C2.5 4.96439 4.96243 2.50195 8 2.50195C11.0376 2.50195 13.5 4.96439 13.5 8.00195Z"
            })]
        })
    })
}
function nV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11.1111 1H4.88889L4.68235 1.0053C2.6306 1.11094 1 2.78131 1 4.8264V11.1736L1.00539 11.3768C1.11275 13.3956 2.8104 15 4.88889 15H5.14815L5.25369 14.993C5.63332 14.9423 5.92593 14.6222 5.92593 14.2347C5.92593 13.8121 5.5777 13.4694 5.14815 13.4694H4.88889L4.72913 13.4641C3.51498 13.3834 2.55556 12.3887 2.55556 11.1736V4.8264L2.56094 4.66922C2.64303 3.47457 3.65392 2.53056 4.88889 2.53056H11.1111L11.2709 2.53586C12.485 2.61663 13.4515 3.61128 13.4515 4.8264V4.93025C13.503 5.30378 13.8285 5.59168 14.2222 5.59168C14.6518 5.59168 15 5.24906 15 4.8264L14.9946 4.62319C14.8872 2.6044 13.1896 1 11.1111 1ZM9.14639 7.74497C8.93387 8.01972 8.95512 8.41357 9.21015 8.6645C9.48837 8.93825 9.93944 8.93825 10.2177 8.6645L10.6687 8.22067L10.769 8.12965C11.4221 7.58353 12.4029 7.61387 13.0196 8.22067C13.6688 8.85941 13.6688 9.89501 13.0196 10.5338L12.5685 10.9776L12.5048 11.0494C12.2922 11.3241 12.3135 11.718 12.5685 11.9689C12.8467 12.2426 13.2978 12.2426 13.576 11.9689L14.0271 11.5251L14.1475 11.3998C15.2313 10.2071 15.1911 8.37468 14.0271 7.22935C12.8215 6.04313 10.8668 6.04313 9.66123 7.22936L9.21015 7.67319L9.14639 7.74497ZM11.9698 13.5396C12.1823 13.2649 12.1611 12.871 11.9061 12.6201C11.6278 12.3463 11.1768 12.3463 10.8986 12.6201L10.4475 13.0639L10.3472 13.1549C9.69406 13.701 8.71333 13.6707 8.09662 13.0639C7.44745 12.4252 7.44745 11.3896 8.09662 10.7508L8.5477 10.307L8.61146 10.2352C8.82398 9.96045 8.80273 9.5666 8.5477 9.31567C8.26948 9.04193 7.81841 9.04193 7.54019 9.31567L7.08911 9.7595L6.9687 9.88478C5.88495 11.0775 5.92509 12.9099 7.08911 14.0552C8.29471 15.2414 10.2494 15.2414 11.455 14.0552L11.9061 13.6114L11.9698 13.5396ZM12.1972 9.1321C12.501 9.43096 12.501 9.9155 12.1972 10.2144L10.1232 12.2551C9.81942 12.554 9.32696 12.554 9.02322 12.2551C8.71947 11.9563 8.71947 11.4717 9.02322 11.1728L11.0973 9.1321C11.401 8.83323 11.8935 8.83323 12.1972 9.1321Z"
            })
        })
    })
}
function rV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1 6C1 3.23858 3.23858 1 6 1C8.44846 1 10.4859 2.75992 10.9162 5.08376C13.2401 5.51413 15 7.55154 15 10C15 12.7614 12.7614 15 10 15C7.55154 15 5.51413 13.2401 5.08376 10.9162C2.75992 10.4859 1 8.44846 1 6ZM6 2.5C4.067 2.5 2.5 4.067 2.5 6C2.5 7.6 3.57361 8.94924 5.03973 9.36663C5.32479 7.11167 7.11167 5.32479 9.36663 5.03973C8.94924 3.57361 7.6 2.5 6 2.5ZM10 13.5C11.933 13.5 13.5 11.933 13.5 10C13.5 8.4 12.4264 7.05076 10.9603 6.63337C10.6752 8.88833 8.88833 10.6752 6.63337 10.9603C7.05076 12.4264 8.4 13.5 10 13.5Z"
            })
        })
    })
}
function ID(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M10.2105 4C10.6337 4 11.0126 4.18857 11.24 4.48L14 8L11.24 11.52C11.0126 11.8114 10.6337 12 10.2105 12L3.26316 11.9943C2.56842 11.9943 2 11.4857 2 10.8571V5.14286C2 4.51429 2.56842 4.00571 3.26316 4.00571L10.2105 4ZM11.125 9C11.6773 9 12.125 8.55228 12.125 8C12.125 7.44772 11.6773 7 11.125 7C10.5727 7 10.125 7.44772 10.125 8C10.125 8.55228 10.5727 9 11.125 9Z"
            })
        })
    })
}
function ED(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.32698 2.63803C1 3.27976 1 4.11984 1 5.8V10.2C1 11.8802 1 12.7202 1.32698 13.362C1.6146 13.9265 2.07354 14.3854 2.63803 14.673C3.27976 15 4.11984 15 5.8 15H10.2C11.8802 15 12.7202 15 13.362 14.673C13.9265 14.3854 14.3854 13.9265 14.673 13.362C15 12.7202 15 11.8802 15 10.2V5.8C15 4.11984 15 3.27976 14.673 2.63803C14.3854 2.07354 13.9265 1.6146 13.362 1.32698C12.7202 1 11.8802 1 10.2 1H5.8C4.11984 1 3.27976 1 2.63803 1.32698C2.07354 1.6146 1.6146 2.07354 1.32698 2.63803ZM10.8272 10.8354C10.7574 10.9052 10.6855 10.972 10.6119 11.0356L4.96436 5.38807C5.028 5.31448 5.09476 5.24265 5.16465 5.17276C6.72833 3.60908 9.26356 3.60908 10.8272 5.17276C12.3909 6.73644 12.3909 9.27167 10.8272 10.8354ZM4.6101 5.86502L10.135 11.3899C9.95994 11.5007 9.77818 11.5966 9.59151 11.6776L4.32236 6.40849C4.40338 6.22182 4.49929 6.04006 4.6101 5.86502ZM8.9709 11.8882L4.11177 7.0291C4.05264 7.26564 4.01538 7.50652 4 7.74854L8.25146 12C8.49348 11.9846 8.73436 11.9474 8.9709 11.8882ZM4.03909 8.61883L7.38117 11.9609C6.56983 11.8355 5.78964 11.4603 5.16465 10.8354C4.53966 10.2104 4.16447 9.43017 4.03909 8.61883Z"
            })
        })
    })
}
function sV(t) {
    const e = Pt();
    return c.jsxs("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: e.color[t.fill ?? "labelMuted"],
        className: t.className,
        style: t.style,
        children: [c.jsx("path", {
            d: "M11.6678 12.7487C10.6537 13.5332 9.38135 14 8 14C4.68629 14 2 11.3137 2 8C2 6.61865 2.4668 5.34632 3.25127 4.33216L1.82842 2.90931C0.686208 4.29247 0 6.0661 0 8C0 12.4183 3.58172 16 8 16C9.9339 16 11.7075 15.3138 13.0907 14.1716L11.6678 12.7487Z"
        }), c.jsx("path", {
            d: "M5.32045 2.6301C6.12695 2.22688 7.03698 2 8 2C11.3137 2 14 4.68629 14 8C14 8.96302 13.7731 9.87305 13.3699 10.6796L14.8406 12.1503C15.5763 10.9403 16 9.51961 16 8C16 3.58172 12.4183 0 8 0C6.48039 0 5.05974 0.423692 3.84973 1.15939L5.32045 2.6301Z"
        })]
    })
}
const Yde = ae(sV)`
  animation-name: rotate;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
`;
function iV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M10.2857 5.44444C10.2857 6.79447 9.26237 7.88889 8 7.88889C6.73764 7.88889 5.71429 6.79447 5.71429 5.44444C5.71429 4.09441 6.73764 3 8 3C9.26237 3 10.2857 4.09441 10.2857 5.44444Z"
            }), c.jsx("path", {
                d: "M3.42857 11.9603C3.42857 10.9748 3.98128 10.081 4.85831 9.7786C5.79546 9.45545 7.02325 9.11111 8 9.11111C8.97675 9.11111 10.2045 9.45545 11.1417 9.77859C12.0187 10.081 12.5714 10.9748 12.5714 11.9603V12.7778C12.5714 13.4528 12.0598 14 11.4286 14H4.57143C3.94025 14 3.42857 13.4528 3.42857 12.7778V11.9603Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.63272 4.75066C4.59249 4.97531 4.57143 5.20725 4.57143 5.44444C4.57143 6.00206 4.68782 6.5306 4.89604 7.00381C4.59565 7.53433 4.05083 7.88889 3.42857 7.88889C2.4818 7.88889 1.71429 7.06808 1.71429 6.05556C1.71429 5.04303 2.4818 4.22222 3.42857 4.22222C3.89788 4.22222 4.32315 4.42391 4.63272 4.75066Z"
            }), c.jsx("path", {
                d: "M2.28571 12.7778V11.9603C2.28571 10.8522 2.76028 9.77952 3.59669 9.11537C3.5397 9.11257 3.48361 9.11111 3.42857 9.11111C2.69601 9.11111 1.77516 9.36937 1.0723 9.61172C0.414531 9.83853 0 10.5089 0 11.248V11.8611C0 12.3674 0.383756 12.7778 0.857143 12.7778H2.28571Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11.3716 4.75066C11.4118 4.97531 11.4329 5.20725 11.4329 5.44444C11.4329 6.00206 11.3166 6.5306 11.1086 7.00381C11.4087 7.53433 11.953 7.88889 12.5747 7.88889C13.5205 7.88889 14.2873 7.06808 14.2873 6.05556C14.2873 5.04303 13.5205 4.22222 12.5747 4.22222C12.1058 4.22222 11.6809 4.42391 11.3716 4.75066Z"
            }), c.jsx("path", {
                d: "M13.7164 12.7778V11.9603C13.7164 10.8522 13.2423 9.77952 12.4067 9.11537C12.4636 9.11257 12.5197 9.11111 12.5747 9.11111C13.3065 9.11111 14.2265 9.36937 14.9287 9.61172C15.5859 9.83853 16 10.5089 16 11.248V11.8611C16 12.3674 15.6166 12.7778 15.1437 12.7778H13.7164Z"
            })]
        })
    })
}
function aV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M6.336 13.6a1.049 1.049 0 0 1-.8-.376L2.632 9.736a.992.992 0 0 1 .152-1.424 1.056 1.056 0 0 1 1.456.152l2.008 2.4 5.448-8a1.048 1.048 0 0 1 1.432-.288A.992.992 0 0 1 13.424 4L7.2 13.144a1.04 1.04 0 0 1-.8.456h-.064Z"
            })
        })
    })
}
function oV(t) {
    const e = Pt();
    return c.jsx("svg", {
        width: "16",
        height: "16",
        viewBox: "1 1 14 14",
        stroke: "currentColor",
        fill: e.color.labelMuted,
        ...t,
        children: c.jsx("path", {
            d: "M7.3406 2.32C7.68741 1.89333 8.31259 1.89333 8.6594 2.32L12.7903 7.402C13.0699 7.74597 13.0699 8.25403 12.7903 8.598L8.6594 13.68C8.31259 14.1067 7.68741 14.1067 7.3406 13.68L3.2097 8.598C2.9301 8.25403 2.9301 7.74597 3.2097 7.402L7.3406 2.32Z"
        })
    })
}
function cV(t) {
    return c.jsx(lV, {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        ...t,
        children: c.jsx("path", {
            d: "M7.3406 2.32C7.68741 1.89333 8.31259 1.89333 8.6594 2.32L12.7903 7.402C13.0699 7.74597 13.0699 8.25403 12.7903 8.598L8.6594 13.68C8.31259 14.1067 7.68741 14.1067 7.3406 13.68L3.2097 8.598C2.9301 8.25403 2.9301 7.74597 3.2097 7.402L7.3406 2.32Z",
            fill: "none",
            strokeWidth: "2"
        })
    })
}
const lV = ae.svg`
  stroke: ${({theme: t})=>t.color.labelMuted};
  .list-item-focused & {
    stroke: ${({theme: t})=>t.color.labelTitle};
  }
`;
function V8(t) {
    const e = Pt();
    return c.jsx("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: t.color || e.color.labelMuted,
        className: t.className ?? "color-override",
        children: c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M7.95021 6C8.91671 6 9.70021 5.2165 9.70021 4.25C9.70021 3.2835 8.91671 2.5 7.95021 2.5C6.98371 2.5 6.20021 3.2835 6.20021 4.25C6.20021 5.2165 6.98371 6 7.95021 6ZM4.4502 9.5C5.41669 9.5 6.2002 8.7165 6.2002 7.75C6.2002 6.7835 5.41669 6 4.4502 6C3.4837 6 2.7002 6.7835 2.7002 7.75C2.7002 8.7165 3.4837 9.5 4.4502 9.5ZM7.95018 13C8.91668 13 9.70018 12.2165 9.70018 11.25C9.70018 10.2835 8.91668 9.5 7.95018 9.5C6.98369 9.5 6.20018 10.2835 6.20018 11.25C6.20018 12.2165 6.98369 13 7.95018 13ZM13.2002 7.75C13.2002 8.7165 12.4167 9.5 11.4502 9.5C10.4837 9.5 9.7002 8.7165 9.7002 7.75C9.7002 6.7835 10.4837 6 11.4502 6C12.4167 6 13.2002 6.7835 13.2002 7.75Z"
        })
    })
}
function dV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M10.9577 6.65305L9.54117 6.46827C9.56108 6.31564 9.57143 6.15939 9.57143 6C9.57143 5.84061 9.56108 5.68436 9.54117 5.53173L10.9577 5.34695C10.9856 5.56069 11 5.77866 11 6C11 6.22134 10.9856 6.43931 10.9577 6.65305ZM10.6206 4.08606C10.452 3.67957 10.2314 3.30014 9.967 2.95608L8.83426 3.82655C9.02346 4.07275 9.18091 4.34371 9.30099 4.63328L10.6206 4.08606ZM9.04392 2.033L8.17345 3.16574C7.92725 2.97654 7.65629 2.81909 7.36672 2.69901L7.91394 1.3794C8.32043 1.54797 8.69986 1.76861 9.04392 2.033ZM6.65305 1.04226L6.46827 2.45883C6.31564 2.43892 6.15939 2.42857 6 2.42857C5.84061 2.42857 5.68436 2.43892 5.53173 2.45883L5.34695 1.04226C5.56069 1.01438 5.77866 1 6 1C6.22134 1 6.43931 1.01438 6.65305 1.04226ZM4.08606 1.3794L4.63328 2.69901C4.34371 2.81909 4.07275 2.97654 3.82655 3.16574L2.95608 2.033C3.30014 1.76861 3.67957 1.54797 4.08606 1.3794ZM2.033 2.95608L3.16574 3.82655C2.97654 4.07275 2.81909 4.34371 2.69901 4.63328L1.3794 4.08606C1.54797 3.67957 1.76861 3.30014 2.033 2.95608ZM1.04226 5.34695C1.01438 5.56069 1 5.77866 1 6C1 6.22134 1.01438 6.43931 1.04226 6.65305L2.45883 6.46827C2.43892 6.31564 2.42857 6.15939 2.42857 6C2.42857 5.84061 2.43892 5.68436 2.45883 5.53173L1.04226 5.34695ZM1.3794 7.91394L2.69901 7.36672C2.81909 7.65629 2.97654 7.92725 3.16574 8.17345L2.033 9.04392C1.76861 8.69986 1.54797 8.32043 1.3794 7.91394ZM2.95608 9.967L3.82655 8.83426C4.07275 9.02346 4.34371 9.18091 4.63328 9.30099L4.08606 10.6206C3.67957 10.452 3.30014 10.2314 2.95608 9.967ZM7.91394 10.6206L7.36672 9.30099C7.65629 9.18091 7.92725 9.02346 8.17345 8.83426L9.04392 9.967C8.69986 10.2314 8.32043 10.452 7.91394 10.6206ZM9.967 9.04392L8.83426 8.17345C9.02346 7.92725 9.18091 7.65629 9.30099 7.36672L10.6206 7.91394C10.452 8.32043 10.2314 8.69986 9.967 9.04392Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14.9577 10.653L13.5412 10.4683C13.5611 10.3156 13.5714 10.1594 13.5714 10C13.5714 9.84061 13.5611 9.68436 13.5412 9.53173L14.9577 9.34695C14.9856 9.56069 15 9.77866 15 10C15 10.2213 14.9856 10.4393 14.9577 10.653ZM14.6206 8.08606C14.452 7.67957 14.2314 7.30014 13.967 6.95608L12.8343 7.82655C13.0235 8.07275 13.1809 8.34371 13.301 8.63328L14.6206 8.08606ZM13.0439 6.033L12.1735 7.16574C11.9272 6.97654 11.6563 6.81909 11.3667 6.69901L11.9139 5.3794C12.3204 5.54797 12.6999 5.76861 13.0439 6.033ZM8.08606 5.3794L8.63328 6.69901C8.34371 6.81909 8.07275 6.97654 7.82655 7.16574L6.95608 6.033C7.30014 5.76861 7.67957 5.54797 8.08606 5.3794ZM6.033 6.95608L7.16574 7.82655C6.97654 8.07275 6.81909 8.34371 6.69901 8.63328L5.3794 8.08606C5.54797 7.67957 5.76861 7.30014 6.033 6.95608ZM5.04226 9.34695C5.01438 9.56069 5 9.77866 5 10C5 10.2213 5.01438 10.4393 5.04226 10.653L6.45883 10.4683C6.43892 10.3156 6.42857 10.1594 6.42857 10C6.42857 9.84061 6.43892 9.68436 6.45883 9.53173L5.04226 9.34695ZM5.3794 11.9139L6.69901 11.3667C6.81909 11.6563 6.97654 11.9272 7.16574 12.1735L6.033 13.0439C5.76861 12.6999 5.54797 12.3204 5.3794 11.9139ZM6.95608 13.967L7.82655 12.8343C8.07275 13.0235 8.34371 13.1809 8.63328 13.301L8.08606 14.6206C7.67957 14.452 7.30014 14.2314 6.95608 13.967ZM9.34695 14.9577L9.53173 13.5412C9.68436 13.5611 9.84061 13.5714 10 13.5714C10.1594 13.5714 10.3156 13.5611 10.4683 13.5412L10.653 14.9577C10.4393 14.9856 10.2213 15 10 15C9.77866 15 9.56069 14.9856 9.34695 14.9577ZM11.9139 14.6206L11.3667 13.301C11.6563 13.1809 11.9272 13.0235 12.1735 12.8343L13.0439 13.967C12.6999 14.2314 12.3204 14.452 11.9139 14.6206ZM13.967 13.0439L12.8343 12.1735C13.0235 11.9272 13.1809 11.6563 13.301 11.3667L14.6206 11.9139C14.452 12.3204 14.2314 12.6999 13.967 13.0439Z"
            })]
        })
    })
}
function uV(t) {
    const e = Pt();
    return c.jsx("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: "none",
        ...t,
        children: c.jsx("path", {
            d: "M7.3406 2.32C7.68741 1.89333 8.31259 1.89333 8.6594 2.32L12.7903 7.402C13.0699 7.74597 13.0699 8.25403 12.7903 8.598L8.6594 13.68C8.31259 14.1067 7.68741 14.1067 7.3406 13.68L3.2097 8.598C2.9301 8.25403 2.9301 7.74597 3.2097 7.402L7.3406 2.32Z",
            stroke: e.color.labelFaint,
            strokeWidth: "2",
            strokeDasharray: "2 1.93",
            strokeDashoffset: .15,
            style: {
                fill: "none"
            }
        })
    })
}
function hV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11.111 1H4.89l-.207.005C2.631 1.111 1 2.781 1 4.826v6.348l.005.203C1.113 13.396 2.81 15 4.89 15h.26l.105-.007a.77.77 0 0 0 .672-.758.772.772 0 0 0-.778-.766h-.26l-.159-.005c-1.214-.08-2.173-1.075-2.173-2.29V4.826l.005-.157c.082-1.194 1.093-2.138 2.328-2.138h6.222l.16.005c1.214.08 2.18 1.075 2.18 2.29v.104a.774.774 0 0 0 .771.662c.43 0 .778-.343.778-.766l-.005-.203C14.887 2.604 13.19 1 11.11 1Zm3.857 8.903a.295.295 0 0 0-.038-.325l-2.025-2.462a.326.326 0 0 0-.484-.015l-2.314 2.461a.303.303 0 0 0-.082.207c0 .17.142.308.318.308h1.122c-.155 3.783-3.159 4.305-3.198 4.312a.311.311 0 0 0-.267.303v.025c.013.16.152.284.318.283.054 0 5.305-.058 5.518-4.923h.845a.32.32 0 0 0 .287-.174Z"
            })
        })
    })
}
function fV(t) {
    return c.jsx(x, {
        ...t,
        "aria-label": "No Priority",
        children: c.jsxs("svg", {
            children: [c.jsx("rect", {
                x: "1.5",
                y: "7.25",
                width: "3",
                height: "1.5",
                rx: "0.5",
                opacity: .9
            }), c.jsx("rect", {
                x: "6.5",
                y: "7.25",
                width: "3",
                height: "1.5",
                rx: "0.5",
                opacity: .9
            }), c.jsx("rect", {
                x: "11.5",
                y: "7.25",
                width: "3",
                height: "1.5",
                rx: "0.5",
                opacity: .9
            })]
        })
    })
}
function pV(t) {
    const e = Pt()
      , {muted: n, ...r} = t;
    return c.jsx("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: t.muted ? e.color.labelMuted : e.color.orangeBase,
        "aria-label": "Urgent Priority",
        ...r,
        children: c.jsx("path", {
            d: "M3 1C1.91067 1 1 1.91067 1 3V13C1 14.0893 1.91067 15 3 15H13C14.0893 15 15 14.0893 15 13V3C15 1.91067 14.0893 1 13 1H3ZM7 4L9 4L8.75391 8.99836H7.25L7 4ZM9 11C9 11.5523 8.55228 12 8 12C7.44772 12 7 11.5523 7 11C7 10.4477 7.44772 10 8 10C8.55228 10 9 10.4477 9 11Z"
        })
    })
}
function mV(t) {
    return c.jsx(x, {
        ...t,
        "aria-label": "High Priority",
        children: c.jsxs("svg", {
            children: [c.jsx("rect", {
                x: "1.5",
                y: "8",
                width: "3",
                height: "6",
                rx: "1"
            }), c.jsx("rect", {
                x: "6.5",
                y: "5",
                width: "3",
                height: "9",
                rx: "1"
            }), c.jsx("rect", {
                x: "11.5",
                y: "2",
                width: "3",
                height: "12",
                rx: "1"
            })]
        })
    })
}
function gV(t) {
    return c.jsx(x, {
        ...t,
        "aria-label": "Medium Priority",
        children: c.jsxs("svg", {
            children: [c.jsx("rect", {
                x: "1.5",
                y: "8",
                width: "3",
                height: "6",
                rx: "1"
            }), c.jsx("rect", {
                x: "6.5",
                y: "5",
                width: "3",
                height: "9",
                rx: "1"
            }), c.jsx("rect", {
                x: "11.5",
                y: "2",
                width: "3",
                height: "12",
                rx: "1",
                fillOpacity: "0.4"
            })]
        })
    })
}
function yV(t) {
    return c.jsx(x, {
        ...t,
        "aria-label": "Low Priority",
        children: c.jsxs("svg", {
            children: [c.jsx("rect", {
                x: "1.5",
                y: "8",
                width: "3",
                height: "6",
                rx: "1"
            }), c.jsx("rect", {
                x: "6.5",
                y: "5",
                width: "3",
                height: "9",
                rx: "1",
                fillOpacity: "0.4"
            }), c.jsx("rect", {
                x: "11.5",
                y: "2",
                width: "3",
                height: "12",
                rx: "1",
                fillOpacity: "0.4"
            })]
        })
    })
}
function CV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("rect", {
                x: "1",
                y: "8",
                width: "3",
                height: "6",
                rx: "1"
            }), c.jsx("rect", {
                x: "6",
                y: "5",
                width: "3",
                height: "9",
                rx: "1"
            }), c.jsx("rect", {
                x: "11",
                y: "2",
                width: "3",
                height: "12",
                rx: "1"
            })]
        })
    })
}
function bV(t) {
    const e = Pt()
      , {progress: n, circleColor: r=e.color.bgBorder, warnOnOverage: s, ...i} = t
      , a = s ? n : Math.min(1, n)
      , o = Math.PI * 2 * 7
      , l = a > 1 ? 1.13 : .085 + (a || 0) * (.915 + $l / o)
      , d = 360 * o / (o + $l);
    return c.jsxs("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        ...i,
        children: [c.jsx("circle", {
            transform: `rotate(${-76 + Math.min(l, 1) * d} 8 8)`,
            cx: "8",
            cy: "8",
            r: "7",
            fill: "none",
            strokeWidth: "2",
            stroke: r,
            strokeDasharray: o + "px",
            strokeDashoffset: $l + (o - $l) * Math.min(l, 1) + "px",
            style: {
                transition: "transform 0.6s, stroke-dashoffset 0.6s",
                strokeLinecap: "round"
            }
        }), c.jsx("circle", {
            transform: "rotate(-76 8 8)",
            cx: "8",
            cy: "8",
            r: "7",
            fill: "none",
            strokeWidth: "2",
            strokeDasharray: o + "px",
            strokeDashoffset: $l + o - (o - $l) * l + "px",
            style: {
                transition: "all 0.6s",
                strokeLinecap: "round"
            },
            stroke: a > 1 ? e.color.redBase : e.color.purpleBase
        }), s && c.jsxs(c.Fragment, {
            children: [c.jsxs("defs", {
                children: [c.jsx("clipPath", {
                    id: "cut-off",
                    children: c.jsx("rect", {
                        x: "0",
                        y: "50",
                        width: "100",
                        height: "100"
                    })
                }), c.jsxs("linearGradient", {
                    id: "yellowHighlight",
                    children: [c.jsx("stop", {
                        offset: "0",
                        stopColor: e.color.yellowBase,
                        stopOpacity: "1"
                    }), c.jsx("stop", {
                        offset: "50%",
                        stopColor: e.color.yellowBase,
                        stopOpacity: "0"
                    })]
                })]
            }), c.jsx("circle", {
                transform: `rotate(${90 + d * n} 8 8)`,
                cx: "8",
                cy: "8",
                r: "7",
                fill: "none",
                strokeWidth: "2",
                strokeDasharray: o,
                strokeDashoffset: o * .5,
                style: {
                    transition: "all 0.6s",
                    strokeLinecap: "round",
                    opacity: n > 1 ? 1 : 0
                },
                stroke: "url(#yellowHighlight)",
                filter: "drop-shadow(0px -2px 1px #000)"
            })]
        })]
    })
}
const $l = 3
  , tp = t=>c.jsx(x, {
    ...t,
    viewBox: "1 1 14 14",
    className: gl("color-override", t.className),
    children: c.jsxs("svg", {
        children: [c.jsx("path", {
            d: "M2 4.74695C2 4.68722 2.01039 4.62899 2.02989 4.57451L2.11601 4.42269C2.15266 4.37819 2.19711 4.33975 2.24806 4.30966L3.16473 3.76824L3.92054 5.08013L3.5 5.32852V5.8313H2V4.74695Z"
        }), c.jsx("path", {
            d: "M4.8372 4.53871L4.0814 3.22682L5.91473 2.14398L6.67054 3.45588L4.8372 4.53871Z"
        }), c.jsx("path", {
            d: "M7.5872 2.91446L6.8314 1.60257L7.74806 1.06115C7.7997 1.03065 7.85539 1.01027 7.91244 1H8.08756C8.14461 1.01027 8.2003 1.03065 8.25194 1.06115L9.1686 1.60257L8.4128 2.91446L8 2.67065L7.5872 2.91446Z"
        }), c.jsx("path", {
            d: "M9.32946 3.45588L10.0853 2.14398L11.9186 3.22682L11.1628 4.53871L9.32946 3.45588Z"
        }), c.jsx("path", {
            d: "M12.0795 5.08013L12.8353 3.76824L13.7519 4.30966C13.8029 4.33975 13.8473 4.37819 13.884 4.42269L13.9701 4.57451C13.9896 4.62899 14 4.68722 14 4.74695V5.8313H12.5V5.32852L12.0795 5.08013Z"
        }), c.jsx("path", {
            d: "M12.5 6.91565H14V9.08435H12.5V6.91565Z"
        }), c.jsx("path", {
            d: "M12.5 10.1687H14V11.253C14 11.3128 13.9896 11.371 13.9701 11.4255L13.884 11.5773C13.8473 11.6218 13.8029 11.6602 13.7519 11.6903L12.8353 12.2318L12.0795 10.9199L12.5 10.6715V10.1687Z"
        }), c.jsx("path", {
            d: "M11.1628 11.4613L11.9186 12.7732L10.0853 13.856L9.32946 12.5441L11.1628 11.4613Z"
        }), c.jsx("path", {
            d: "M8.4128 13.0855L9.1686 14.3974L8.25194 14.9389C8.2003 14.9694 8.14461 14.9897 8.08756 15H7.91244C7.85539 14.9897 7.7997 14.9694 7.74806 14.9389L6.8314 14.3974L7.5872 13.0855L8 13.3294L8.4128 13.0855Z"
        }), c.jsx("path", {
            d: "M6.67054 12.5441L5.91473 13.856L4.0814 12.7732L4.8372 11.4613L6.67054 12.5441Z"
        }), c.jsx("path", {
            d: "M3.92054 10.9199L3.16473 12.2318L2.24806 11.6903C2.19711 11.6602 2.15266 11.6218 2.11601 11.5773L2.02989 11.4255C2.01039 11.371 2 11.3128 2 11.253V10.1687H3.5V10.6715L3.92054 10.9199Z"
        }), c.jsx("path", {
            d: "M3.5 9.08435H2V6.91565H3.5V9.08435Z"
        })]
    })
})
  , vV = t=>c.jsx(x, {
    ...t,
    viewBox: "1 1 14 14",
    className: gl("color-override", t.className),
    children: c.jsxs("svg", {
        children: [c.jsx("path", {
            d: "M5.96967 5.96967C6.26256 5.67678 6.73744 5.67678 7.03033 5.96967L8 6.93934L8.96967 5.96967C9.26256 5.67678 9.73744 5.67678 10.0303 5.96967C10.3232 6.26256 10.3232 6.73744 10.0303 7.03033L9.06066 8L10.0303 8.96967C10.3232 9.26256 10.3232 9.73744 10.0303 10.0303C9.73744 10.3232 9.26256 10.3232 8.96967 10.0303L8 9.06066L7.03033 10.0303C6.73744 10.3232 6.26256 10.3232 5.96967 10.0303C5.67678 9.73744 5.67678 9.26256 5.96967 8.96967L6.93934 8L5.96967 7.03033C5.67678 6.73744 5.67678 6.26256 5.96967 5.96967Z"
        }), c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M8.75581 1.21148C8.28876 0.929507 7.71124 0.929507 7.24419 1.21148L2.74419 3.92829C2.28337 4.20651 2 4.71711 2 5.26927V10.7307C2 11.2829 2.28337 11.7935 2.74419 12.0717L7.24419 14.7885C7.71124 15.0705 8.28876 15.0705 8.75581 14.7885L13.2558 12.0717C13.7166 11.7935 14 11.2829 14 10.7307V5.26927C14 4.71711 13.7166 4.20651 13.2558 3.92829L8.75581 1.21148ZM12.5 5.26928L8 2.55246L3.5 5.26927L3.5 10.7307L8 13.4475L12.5 10.7307L12.5 5.26928Z"
        })]
    })
})
  , wV = t=>c.jsx(x, {
    ...t,
    viewBox: "1 1 14 14",
    className: gl("color-override", t.className),
    children: c.jsxs("svg", {
        children: [c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M12.5 5.125L8 2.5L3.5 5.125L3.5 10.4019L8 13.0269L12.5 10.4019L12.5 5.125ZM8.75581 1.20433C8.28876 0.93189 7.71124 0.931889 7.24419 1.20433L2.74419 3.82933C2.28337 4.09815 2 4.5915 2 5.125V10.4019C2 10.9354 2.28337 11.4287 2.74419 11.6976L7.24419 14.3226C7.71124 14.595 8.28876 14.595 8.75581 14.3226L13.2558 11.6976C13.7166 11.4287 14 10.9354 14 10.4019V5.125C14 4.5915 13.7166 4.09815 13.2558 3.82933L8.75581 1.20433Z"
        }), c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M10.7381 5.69424C11.0526 5.96381 11.089 6.43728 10.8194 6.75178L7.81944 10.2518C7.68349 10.4104 7.48754 10.5051 7.27878 10.5131C7.07003 10.5212 6.86739 10.4417 6.71967 10.294L5.21967 8.79402C4.92678 8.50112 4.92678 8.02625 5.21967 7.73336C5.51256 7.44046 5.98744 7.44046 6.28033 7.73336L7.20764 8.66066L9.68056 5.77559C9.95012 5.4611 10.4236 5.42468 10.7381 5.69424Z"
        })]
    })
});
function kV(t) {
    const e = Pt();
    return c.jsx("svg", {
        width: "16",
        height: "16",
        viewBox: "1 1 14 14",
        fill: e.color.labelMuted,
        className: t.className,
        children: c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M12.5 5.36133L8 2.73633L3.5 5.36133L3.5 10.6382L8 13.2632L12.5 10.6382L12.5 5.36133ZM8.75581 1.44066C8.28876 1.16822 7.71124 1.16822 7.24419 1.44066L2.74419 4.06566C2.28337 4.33448 2 4.82783 2 5.36133V10.6382C2 11.1717 2.28337 11.6651 2.74419 11.9339L7.24419 14.5589C7.71124 14.8313 8.28876 14.8313 8.75581 14.5589L13.2558 11.9339C13.7166 11.6651 14 11.1717 14 10.6382V5.36133C14 4.82783 13.7166 4.33448 13.2558 4.06566L8.75581 1.44066Z"
        })
    })
}
const xV = y.memo(t=>{
    const {progress: e=.5, ...n} = t
      , r = e * 6
      , s = parseInt(r.toFixed(0), 10) / 6
      , i = Math.max(s, 1 / 6)
      , a = y.useId();
    return c.jsx(x, {
        ...n,
        viewBox: "1 1 14 14",
        className: gl("color-override", t.className),
        children: c.jsxs(DV, {
            children: [c.jsx("path", {
                d: "M8.3779 4.74233C8.14438 4.60607 7.85562 4.60607 7.6221 4.74233L5.37209 6.05513C5.14168 6.18957 5 6.4363 5 6.70311V9.34216C5 9.60897 5.14168 9.85573 5.37209 9.99016L7.6221 11.303C7.85562 11.4392 8.14438 11.4392 8.3779 11.303L10.6279 9.99016C10.8583 9.85573 11 9.60897 11 9.34216V6.70311C11 6.4363 10.8583 6.18957 10.6279 6.05513L8.3779 4.74233Z",
                mask: `url(#${a}-hole-${i * 100})`
            }), c.jsxs("mask", {
                id: `${a}-hole-${i * 100}`,
                children: [c.jsx("rect", {
                    width: "100%",
                    height: "100%",
                    fill: "white"
                }), c.jsx("circle", {
                    r: "4",
                    cx: "7.5",
                    cy: "8",
                    fill: "black",
                    stroke: "white",
                    strokeWidth: "8",
                    strokeDasharray: `calc(${i * 25.12}) 25.12`,
                    transform: "rotate(-90) translate(-16)"
                })]
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.24419 1.44066C7.71124 1.16822 8.28876 1.16822 8.75581 1.44066L13.2558 4.06566C13.7166 4.33448 14 4.82783 14 5.36133V10.6382C14 11.1717 13.7166 11.6651 13.2558 11.9339L8.75581 14.5589C8.28876 14.8313 7.71124 14.8313 7.24419 14.5589L2.74419 11.9339C2.28337 11.6651 2 11.1717 2 10.6382V5.36133C2 4.82783 2.28337 4.33448 2.74419 4.06566L7.24419 1.44066ZM8 2.73633L12.5 5.36133V10.6382L8 13.2632L3.5 10.6382V5.36133L8 2.73633Z"
            })]
        })
    })
}
)
  , DV = ae.svg`
  & circle,
  path {
    transition-property: stroke-dasharray;
    transition-duration: ${pn("slowTransition")};
  }
`;
function SV({fill: t, stroke: e, ...n}) {
    return c.jsx("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: "none",
        ...n,
        children: c.jsx("path", {
            d: "M7.3406 2.32C7.68741 1.89333 8.31259 1.89333 8.6594 2.32L12.7903 7.402C13.0699 7.74597 13.0699 8.25403 12.7903 8.598L8.6594 13.68C8.31259 14.1067 7.68741 14.1067 7.3406 13.68L3.2097 8.598C2.9301 8.25403 2.9301 7.74597 3.2097 7.402L7.3406 2.32Z",
            fill: t,
            stroke: e,
            strokeWidth: "2",
            strokeLinejoin: "round"
        })
    })
}
function _V(t) {
    const {progress: e, stroke: n, fill: r, className: s, ...i} = t;
    return c.jsx("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: "none",
        ...i,
        className: `color-override ${s ?? ""}`,
        children: c.jsx(IV, {
            progress: e,
            stroke: n,
            fill: r
        })
    })
}
function IV(t) {
    const {progress: e, stroke: n, fill: r} = t
      , s = 8
      , i = e * s
      , a = Math.floor(i) / s
      , o = (e === 0 ? 0 : Math.max(a, 1 / s)) * s
      , l = 31
      , d = EV[`${o}`] ?? 0;
    if (o === 0)
        return c.jsx(Y5, {
            fill: "none",
            stroke: n,
            style: {
                opacity: .4
            },
            strokeWidth: "2",
            strokeLinejoin: "round"
        });
    if (o < 8) {
        const u = l - d;
        return c.jsxs(c.Fragment, {
            children: [c.jsx(Y5, {
                fill: "none",
                stroke: n,
                style: {
                    opacity: .3
                },
                strokeWidth: "2",
                strokeLinejoin: "round"
            }), c.jsx(Y5, {
                fill: "none",
                stroke: n,
                strokeWidth: "2",
                strokeLinecap: "round",
                strokeDashoffset: "-1.1",
                strokeDasharray: `${d} ${u}`
            })]
        })
    }
    return c.jsx(Y5, {
        fill: r,
        stroke: n,
        strokeLinejoin: "round",
        strokeWidth: "2"
    })
}
const EV = {
    7: 26,
    6: 22.8,
    5: 18.7,
    4: 14.6,
    3: 11.3,
    2: 7.2,
    1: 2.5
};
function Y5(t) {
    return c.jsx("path", {
        d: "M7.3406 2.32C7.68741 1.89333 8.31259 1.89333 8.6594 2.32L12.7903 7.402C13.0699 7.74597 13.0699 8.25403 12.7903 8.598L8.6594 13.68C8.31259 14.1067 7.68741 14.1067 7.3406 13.68L3.2097 8.598C2.9301 8.25403 2.9301 7.74597 3.2097 7.402L7.3406 2.32Z",
        ...t
    })
}
const B8 = 3.5
  , AV = ae(jV)`
  ${t=>t.noTargetDate && !t.selected ? `
    transform: scale(0.66);
  ` : ""}
  ${t=>t.selected ? `
        --milestone-icon-dotted-path-opacity: 1;
      ` : ""}
`;
function jV(t) {
    const {status: e, progress: n, stroke: r, fill: s, className: i, selected: a, behind: o, noTargetDate: l, desaturatedDone: d=!0, ...u} = t
      , h = y.useId()
      , f = Pt()
      , p = f.baseTheme ?? f;
    let m = p.color.labelFaint;
    p.isDark || (m = Tn.mixCss(p.color.labelFaint, p.color.bgBase, .2));
    let g = p.color.labelMuted;
    switch (e) {
    case "done":
        (!d || a) && (m = Tn.mixCss(p.color.controlPrimary, p.color.bgBase, .5),
        g = p.color.controlPrimary);
        break;
    case "next":
        m = p.color.yellowBg,
        g = p.color.yellowBase;
        break;
    case "overdue":
        m = p.color.redBg,
        g = p.color.redBase;
        break
    }
    return c.jsx(x, {
        ...u,
        color: "none",
        overflow: "visible",
        className: `color-override ${i ?? ""}`,
        children: c.jsxs("svg", {
            children: [c.jsxs("defs", {
                children: [c.jsx("clipPath", {
                    id: `${h}diamond-bounds`,
                    children: c.jsx(go, {})
                }), c.jsxs("mask", {
                    id: `${h}stack-behind-left`,
                    children: [c.jsx("rect", {
                        width: "16",
                        height: "16",
                        fill: "white"
                    }), c.jsx("g", {
                        transform: "translate(2.3 0)",
                        children: c.jsx(go, {
                            fill: "black"
                        })
                    })]
                }), c.jsxs("mask", {
                    id: `${h}stack-behind-right`,
                    children: [c.jsx("rect", {
                        width: "16",
                        height: "16",
                        fill: "white"
                    }), c.jsx("g", {
                        transform: "translate(-2.3 0)",
                        children: c.jsx(go, {
                            fill: "black"
                        })
                    })]
                }), c.jsx("mask", {
                    id: `${h}diamond-stroke`,
                    children: c.jsx(go, {
                        fill: "none",
                        stroke: "white",
                        strokeWidth: B8
                    })
                }), c.jsxs("mask", {
                    id: `${h}selected-knockout`,
                    children: [c.jsx("rect", {
                        x: "-2",
                        y: "-2",
                        width: "20",
                        height: "20",
                        fill: "white"
                    }), c.jsx(CC, {
                        fill: "black"
                    })]
                })]
            }), c.jsx(OV, {
                strokeLinejoin: "round"
            }), a && c.jsx(CC, {
                mask: `url(#${h}selected-knockout)`,
                stroke: p.color.controlPrimary,
                strokeWidth: 2
            }), c.jsx("g", {
                clipPath: `url(#${h}diamond-bounds)`,
                children: c.jsxs("g", {
                    mask: o ? `url(#${h}stack-behind-${o})` : void 0,
                    children: [n > 0 && c.jsx(go, {
                        fill: m,
                        style: {
                            opacity: l ? .6 : 1
                        },
                        strokeWidth: "4",
                        strokeLinejoin: "round"
                    }), c.jsx(MV, {
                        id: h,
                        progress: n,
                        fill: m,
                        stroke: g,
                        noTargetDate: l,
                        behind: o
                    })]
                })
            })]
        })
    })
}
function MV(t) {
    const {progress: e, noTargetDate: n, fill: r, stroke: s, behind: i, id: a} = t
      , o = 8
      , l = e * o
      , d = Math.floor(l) / o
      , u = (e === 0 ? 0 : Math.max(d, 1 / o)) * o;
    if (u === 0)
        return c.jsx(go, {
            strokeWidth: B8,
            stroke: r
        });
    if (u < 8) {
        const h = yC(8, i === "left" ? 90 : i === "right" ? -10 : 0)
          , f = yC(8, e * 360);
        return c.jsx(c.Fragment, {
            children: c.jsx("path", {
                mask: i ? void 0 : `url(#${a}diamond-stroke)`,
                d: `M${h.x} ${h.y} A8 8 0 1 1 ${f.x} ${f.y} L8 8 L${h.x} ${h.y} Z`,
                fill: s
            })
        })
    }
    return c.jsxs(c.Fragment, {
        children: [c.jsx(go, {
            fill: n ? r : s
        }), n ? c.jsx(TV, {
            fill: s
        }) : c.jsx(go, {
            strokeWidth: B8,
            stroke: s
        })]
    })
}
function yC(t, e) {
    const n = (e - 90) * Math.PI / 180;
    return {
        x: t * Math.cos(n) + t,
        y: t * Math.sin(n) + t
    }
}
function go(t) {
    return c.jsx("path", {
        d: "M7.18245 2.397C7.60792 1.86766 8.39209 1.86767 8.81755 2.39701L12.7533 7.29365C13.0822 7.70282 13.0822 8.29718 12.7533 8.70635L8.81755 13.603C8.39208 14.1323 7.60792 14.1323 7.18245 13.603L3.24666 8.70635C2.91778 8.29718 2.91778 7.70282 3.24666 7.29365L7.18245 2.397Z",
        ...t
    })
}
function CC(t) {
    return c.jsx("path", {
        d: "M6.98008 1.22273C7.51035 0.586403 8.48769 0.586402 9.01797 1.22273L13.9233 7.10908C14.3332 7.60096 14.3332 8.31544 13.9233 8.80732L9.01797 14.6937C8.48769 15.33 7.51036 15.33 6.98008 14.6937L2.07479 8.80732C1.66489 8.31545 1.66489 7.60096 2.07479 7.10908L6.98008 1.22273Z",
        ...t
    })
}
const TV = ae(LV)`
  opacity: var(--milestone-icon-dotted-path-opacity, 0);
`;
function LV(t) {
    return c.jsx("path", {
        d: "M3.90263 9.52246L3.24666 8.70635C2.91778 8.29718 2.91778 7.70282 3.24666 7.29365L3.90263 6.47754L5.26663 7.57389L4.92414 8L5.26663 8.42611L3.90263 9.52246ZM4.55859 5.66143L5.9226 6.75778L7.23453 5.12557L5.87052 4.02922L4.55859 5.66143ZM6.52648 3.21311L7.89049 4.30946L8 4.17322L8.10951 4.30946L9.47352 3.21311L8.81755 2.39701C8.39209 1.86767 7.60792 1.86766 7.18245 2.397L6.52648 3.21311ZM10.1295 4.02922L8.76548 5.12557L10.0774 6.75778L11.4414 5.66143L10.1295 4.02922ZM12.0974 6.47754L10.7334 7.57389L11.0759 8L10.7334 8.42611L12.0974 9.52246L12.7533 8.70635C13.0822 8.29718 13.0822 7.70282 12.7533 7.29365L12.0974 6.47754ZM11.4414 10.3386L10.0774 9.24222L8.76547 10.8744L10.1295 11.9708L11.4414 10.3386ZM9.47352 12.7869L8.10951 11.6905L8 11.8268L7.89049 11.6905L6.52648 12.7869L7.18245 13.603C7.60791 14.1323 8.39208 14.1323 8.81755 13.603L9.47352 12.7869ZM5.87052 11.9708L7.23453 10.8744L5.9226 9.24222L4.55859 10.3386L5.87052 11.9708Z",
        ...t
    })
}
const OV = ae(go)`
  stroke-width: 2px;
  stroke: var(--timeline-bar-background-color);
  fill: none;
`
  , RV = t=>c.jsx(x, {
    ...t,
    viewBox: "1 1 14 14",
    className: gl("color-override", t.className),
    children: c.jsxs("svg", {
        children: [c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M8.75581 1.21148C8.28876 0.929507 7.71124 0.929507 7.24419 1.21148L2.74419 3.92829C2.28337 4.20651 2 4.71711 2 5.26927V10.7307C2 11.2829 2.28337 11.7935 2.74419 12.0717L7.24419 14.7885C7.71124 15.0705 8.28876 15.0705 8.75581 14.7885L13.2558 12.0717C13.7166 11.7935 14 11.2829 14 10.7307V5.26927C14 4.71711 13.7166 4.20651 13.2558 3.92829L8.75581 1.21148ZM12.5 5.26928L8 2.55246L3.5 5.26927L3.5 10.7307L8 13.4475L12.5 10.7307L12.5 5.26928Z"
        }), c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6.5 5.75C6.91421 5.75 7.25 6.08579 7.25 6.5V9.5C7.25 9.91421 6.91421 10.25 6.5 10.25C6.08579 10.25 5.75 9.91421 5.75 9.5V6.5C5.75 6.08579 6.08579 5.75 6.5 5.75Z"
        }), c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M9.5 5.75C9.91421 5.75 10.25 6.08579 10.25 6.5V9.5C10.25 9.91421 9.91421 10.25 9.5 10.25C9.08579 10.25 8.75 9.91421 8.75 9.5V6.5C8.75 6.08579 9.08579 5.75 9.5 5.75Z"
        })]
    })
})
  , AD = t=>c.jsx(x, {
    ...t,
    viewBox: "1 1 14 14",
    className: gl("color-override", t.className),
    children: c.jsx("svg", {
        children: c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M12.5 5.36133L8 2.73633L3.5 5.36133L3.5 10.6382L8 13.2632L12.5 10.6382L12.5 5.36133ZM8.75581 1.44066C8.28876 1.16822 7.71124 1.16822 7.24419 1.44066L2.74419 4.06566C2.28337 4.33448 2 4.82783 2 5.36133V10.6382C2 11.1717 2.28337 11.6651 2.74419 11.9339L7.24419 14.5589C7.71124 14.8313 8.28876 14.8313 8.75581 14.5589L13.2558 11.9339C13.7166 11.6651 14 11.1717 14 10.6382V5.36133C14 4.82783 13.7166 4.33448 13.2558 4.06566L8.75581 1.44066Z"
        })
    })
});
var Fn;
(function(t) {
    t.onTrack = "onTrack",
    t.atRisk = "atRisk",
    t.offTrack = "offTrack"
}
)(Fn || (Fn = {}));
var Xi;
(function(t) {
    t.outdated = "outdated",
    t.noUpdate = "noUpdate"
}
)(Xi || (Xi = {}));
const w3 = class w3 {
    static emojiForProjectUpdateHealth(e) {
        switch (e) {
        case "onTrack":
            return "🟢";
        case "atRisk":
            return "🟡";
        case "offTrack":
            return "🔴";
        default:
            throw void 0
        }
    }
    static labelForProjectUpdateHealth(e) {
        switch (e) {
        case "onTrack":
            return "On track";
        case "atRisk":
            return "At risk";
        case "offTrack":
            return "Off track";
        case "outdated":
            return "Outdated";
        case "noUpdate":
            return "No updates";
        default:
            throw void 0
        }
    }
}
;
w3.all = Object.values(Fn).filter(e=>typeof e == "string"),
w3.allWithAged = [...Object.values(Fn), ...Object.values(Xi)].filter(e=>typeof e == "string");
let Ad = w3;
const PV = rn(function(e) {
    const n = Pt()
      , {dashedOutline: r, health: s, color: i=n.color.labelFaint, bgColor: a, borderColor: o, ...l} = e;
    return c.jsx(x, {
        color: i,
        ...l,
        children: c.jsx(VV, {
            fill: "none",
            color: i,
            $bgColor: a,
            $borderColor: o,
            $borderStyle: r ? "dashed" : void 0,
            children: s === Fn.onTrack ? $V : s === Fn.offTrack ? NV : s === Xi.noUpdate ? null : FV
        })
    })
})
  , $V = c.jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.6807 5.7029C12.9925 5.97566 13.0241 6.44948 12.7513 6.76121L9.71942 10.2263C9.56569 10.402 9.33892 10.4961 9.10596 10.4808C8.873 10.4656 8.66044 10.3427 8.53094 10.1485L6.76432 7.49855L4.37742 10.2263C4.10466 10.5381 3.63083 10.5696 3.31911 10.2969C3.00739 10.0241 2.97581 9.55028 3.24857 9.23856L6.28056 5.77356C6.43429 5.59788 6.66106 5.50379 6.89401 5.51905C7.12696 5.53432 7.33952 5.65718 7.46902 5.85142L9.23562 8.50133L11.6224 5.77347C11.8952 5.46174 12.369 5.43015 12.6807 5.7029Z"
})
  , FV = c.jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.62562 3.8314C9.85957 3.7977 10.0957 3.87627 10.2628 4.04341L12.5728 6.35341C12.8657 6.6463 12.8657 7.12117 12.5728 7.41407C12.28 7.70696 11.8051 7.70696 11.5122 7.41407L9.91096 5.81284L6.92594 11.2854C6.81276 11.4929 6.60838 11.6349 6.37442 11.6686C6.14047 11.7023 5.90433 11.6237 5.73719 11.4566L3.42719 9.14657C3.1343 8.85367 3.1343 8.3788 3.42719 8.08591C3.72008 7.79301 4.19496 7.79301 4.48785 8.08591L6.08908 9.68714L9.0741 4.2146C9.18728 4.00709 9.39166 3.86509 9.62562 3.8314Z"
})
  , NV = c.jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.6807 10.297C12.9925 10.0242 13.0241 9.5504 12.7513 9.23866L9.71942 5.77356C9.56569 5.59786 9.33892 5.50377 9.10596 5.51903C8.873 5.53429 8.66044 5.65716 8.53094 5.8514L6.76432 8.50133L4.37742 5.77354C4.10466 5.46182 3.63083 5.43024 3.31911 5.703C3.00739 5.97577 2.97581 6.44959 3.24857 6.76132L6.28056 10.2263C6.43429 10.402 6.66106 10.4961 6.89401 10.4808C7.12696 10.4656 7.33952 10.3427 7.46902 10.1485L9.23562 7.49855L11.6224 10.2264C11.8952 10.5381 12.369 10.5697 12.6807 10.297Z"
})
  , VV = ae.svg`
  border-radius: 50%;
  ${({$borderStyle: t, $borderColor: e, $bgColor: n})=>t ? `border: 1px ${t} ${e};` : `background-color: ${n};`}
  path {
    fill: ${({color: t})=>t};
  }
`;
function np(t) {
    const e = Pt();
    return c.jsx("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: e.color.labelMuted,
        style: t.style,
        className: t.className,
        children: c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M8 1C11.866 1 15 4.13401 15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1ZM8.96983 3.75061C8.64638 3.76363 8.36779 3.98271 8.27886 4.29396L6.80855 9.44005L6.17082 8.16459C6.04378 7.91051 5.78408 7.75 5.5 7.75H3.5C3.08579 7.75 2.75 8.08579 2.75 8.5C2.75 8.91422 3.08579 9.25 3.5 9.25H5.03647L6.32918 11.8354C6.4675 12.1121 6.76145 12.2754 7.06941 12.2468C7.37737 12.2182 7.63618 12.0034 7.72114 11.706L9.09633 6.89289L9.79775 8.76335C9.90753 9.05608 10.1874 9.25 10.5 9.25H12.5C12.9142 9.25 13.25 8.91422 13.25 8.5C13.25 8.08579 12.9142 7.75 12.5 7.75H11.0198L9.70225 4.23666C9.58858 3.93356 9.29328 3.73759 8.96983 3.75061Z"
        })
    })
}
function BV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M11.9746 13.9429C10.5728 14.8076 8.93899 15.1566 7.32926 14.9351C5.71953 14.7137 4.22485 13.9342 3.07946 12.719C2.14332 11.7258 1.48375 10.4874 1.16333 9.1391C1.04844 8.65566 1.43724 8.22003 1.93437 8.22003C2.34387 8.22003 2.68633 8.52067 2.79369 8.91566C3.05809 9.88836 3.55163 10.7802 4.23422 11.5044C5.1251 12.4496 6.28767 13.0558 7.53972 13.2281C8.79177 13.4004 10.0625 13.1289 11.1529 12.4563C11.3402 12.3408 11.5204 12.2145 11.6927 12.0783L10.4444 10.7522C10.094 10.3799 10.358 9.76914 10.8694 9.76914L14.4164 9.76914C14.7387 9.76914 15 10.0303 15 10.3525V14.0248C15 14.5424 14.3757 14.8036 14.0068 14.4404L12.8542 13.3054C12.5774 13.5391 12.2835 13.7523 11.9746 13.9429Z"
            }), c.jsx("path", {
                d: "M4.02678 2.09145C5.42926 1.19864 7.06381 0.838337 8.67428 1.067C10.2848 1.29567 11.7801 2.10038 12.926 3.35502C13.8697 4.38819 14.5324 5.67838 14.8503 7.08261C14.9597 7.56632 14.5712 8 14.0751 8C13.6639 8 13.3202 7.6973 13.2166 7.29958C12.9532 6.28841 12.4577 5.36118 11.7708 4.60907C10.8795 3.63321 9.71635 3.0073 8.46372 2.82944C7.21109 2.65158 5.93973 2.93183 4.84889 3.62626C4.66149 3.74556 4.48124 3.87592 4.30881 4.01649L5.5577 5.38566C5.90831 5.77003 5.64411 6.40062 5.13246 6.40062L1.58387 6.40062C1.26141 6.40062 1 6.13098 1 5.79836L1 2.00685C1 1.47246 1.62458 1.20278 1.99364 1.57782L3.14675 2.74964C3.42376 2.50837 3.71771 2.2882 4.02678 2.09145Z"
            })]
        })
    })
}
function rp(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.097 1.16105C5.6592 0.830341 6.35867 0.839742 6.91178 1.18544L9.86812 3.03314C9.94911 3.08376 10.0519 3.08382 10.1329 3.03328L13.0886 1.1903C13.9212 0.671145 15 1.2698 15 2.251V12.1827C15 12.6669 14.7204 13.1075 14.2822 13.3137L10.8127 14.9464C10.2745 15.1997 9.64451 15.1623 9.14009 14.847L6.13188 12.9669C6.05089 12.9162 5.94814 12.9162 5.8671 12.9667L2.91138 14.8097C2.07877 15.3289 1 14.7302 1 13.749V4.28598C1 3.84302 1.23443 3.43314 1.61623 3.20856L5.097 1.16105ZM2.5 4.42896L5.25 2.81132V11.5974C5.1898 11.6259 5.13085 11.6581 5.07345 11.6939L2.5 13.2985V4.42896ZM6.92688 11.6949C6.86938 11.6589 6.81031 11.6266 6.75 11.598V2.85319L9.07313 4.30514C9.13062 4.34108 9.18969 4.37337 9.25 4.40203V13.1468L6.92688 11.6949ZM10.75 13.3182L13.5 12.024V2.7015L10.9266 4.30612C10.8692 4.34191 10.8102 4.37408 10.75 4.40262V13.3182Z"
            })
        })
    })
}
function UV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M9.82264 10.8833C8.89957 11.5841 7.74835 12 6.5 12C3.46243 12 1 9.53757 1 6.5C1 3.46243 3.46243 1 6.5 1C9.53757 1 12 3.46243 12 6.5C12 7.74835 11.5841 8.89957 10.8833 9.82264L14.7803 13.7197C15.0732 14.0126 15.0732 14.4874 14.7803 14.7803C14.4874 15.0732 14.0126 15.0732 13.7197 14.7803L9.82264 10.8833ZM10.5 6.5C10.5 8.70914 8.70914 10.5 6.5 10.5C4.29086 10.5 2.5 8.70914 2.5 6.5C2.5 4.29086 4.29086 2.5 6.5 2.5C8.70914 2.5 10.5 4.29086 10.5 6.5Z"
            })
        })
    })
}
function HV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M14.9532 2.06864C14.9124 2.03407 14.8631 2.0115 14.8105 2.00337C14.758 1.99524 14.7042 2.00188 14.6551 2.02255L1.262 7.63652C1.20847 7.65917 1.16282 7.69754 1.13092 7.74669C1.09901 7.79585 1.0823 7.85355 1.08293 7.91241C1.08356 7.97127 1.10149 8.02859 1.13443 8.07704C1.16737 8.12549 1.21382 8.16284 1.26782 8.18432L4.955 9.63745C4.99961 9.6551 5.04781 9.66131 5.09535 9.65554C5.14288 9.64977 5.18828 9.63219 5.22752 9.60436L10.1189 6.07406C10.1788 6.03014 10.2529 6.01095 10.3261 6.02038C10.3994 6.02982 10.4664 6.06717 10.5136 6.12487C10.5608 6.18258 10.5846 6.25632 10.5801 6.33115C10.5757 6.40599 10.5435 6.47632 10.4898 6.52791L6.41369 10.5138C6.38551 10.5414 6.3631 10.5744 6.34779 10.611C6.33248 10.6475 6.32459 10.6868 6.32459 10.7266V14.7054C6.32478 14.7702 6.34593 14.8331 6.38479 14.8844C6.42365 14.9358 6.47807 14.9728 6.53968 14.9897C6.60128 15.0067 6.66666 15.0026 6.72575 14.9781C6.78484 14.9536 6.83437 14.9101 6.86672 14.8543L8.7109 11.6484C8.73015 11.6152 8.7614 11.5908 8.79804 11.5806C8.83467 11.5703 8.8738 11.5749 8.90713 11.5935L12.2997 13.4845C12.3394 13.5067 12.3837 13.5192 12.429 13.521C12.4743 13.5227 12.5194 13.5137 12.5607 13.4947C12.602 13.4756 12.6384 13.447 12.6668 13.4112C12.6953 13.3754 12.7151 13.3333 12.7247 13.2883L15.054 2.35584C15.064 2.3032 15.0599 2.24881 15.0422 2.1983C15.0245 2.1478 14.9938 2.10303 14.9532 2.06864V2.06864Z"
            })
        })
    })
}
const i4 = t=>{
    const {color: e, ...n} = t
      , r = Pt();
    return c.jsx("svg", {
        width: "14",
        height: "14",
        viewBox: "0 0 14 14",
        "aria-label": "Backlog",
        fill: e || r.color.labelMuted,
        ...n,
        children: c.jsx("path", {
            d: "M13.9408 7.91426L11.9576 7.65557C11.9855 7.4419 12 7.22314 12 7C12 6.77686 11.9855 6.5581 11.9576 6.34443L13.9408 6.08573C13.9799 6.38496 14 6.69013 14 7C14 7.30987 13.9799 7.61504 13.9408 7.91426ZM13.4688 4.32049C13.2328 3.7514 12.9239 3.22019 12.5538 2.73851L10.968 3.95716C11.2328 4.30185 11.4533 4.68119 11.6214 5.08659L13.4688 4.32049ZM11.2615 1.4462L10.0428 3.03204C9.69815 2.76716 9.31881 2.54673 8.91341 2.37862L9.67951 0.531163C10.2486 0.767153 10.7798 1.07605 11.2615 1.4462ZM7.91426 0.0591659L7.65557 2.04237C7.4419 2.01449 7.22314 2 7 2C6.77686 2 6.5581 2.01449 6.34443 2.04237L6.08574 0.059166C6.38496 0.0201343 6.69013 0 7 0C7.30987 0 7.61504 0.0201343 7.91426 0.0591659ZM4.32049 0.531164L5.08659 2.37862C4.68119 2.54673 4.30185 2.76716 3.95716 3.03204L2.73851 1.4462C3.22019 1.07605 3.7514 0.767153 4.32049 0.531164ZM1.4462 2.73851L3.03204 3.95716C2.76716 4.30185 2.54673 4.68119 2.37862 5.08659L0.531164 4.32049C0.767153 3.7514 1.07605 3.22019 1.4462 2.73851ZM0.0591659 6.08574C0.0201343 6.38496 0 6.69013 0 7C0 7.30987 0.0201343 7.61504 0.059166 7.91426L2.04237 7.65557C2.01449 7.4419 2 7.22314 2 7C2 6.77686 2.01449 6.5581 2.04237 6.34443L0.0591659 6.08574ZM0.531164 9.67951L2.37862 8.91341C2.54673 9.31881 2.76716 9.69815 3.03204 10.0428L1.4462 11.2615C1.07605 10.7798 0.767153 10.2486 0.531164 9.67951ZM2.73851 12.5538L3.95716 10.968C4.30185 11.2328 4.68119 11.4533 5.08659 11.6214L4.32049 13.4688C3.7514 13.2328 3.22019 12.9239 2.73851 12.5538ZM6.08574 13.9408L6.34443 11.9576C6.5581 11.9855 6.77686 12 7 12C7.22314 12 7.4419 11.9855 7.65557 11.9576L7.91427 13.9408C7.61504 13.9799 7.30987 14 7 14C6.69013 14 6.38496 13.9799 6.08574 13.9408ZM9.67951 13.4688L8.91341 11.6214C9.31881 11.4533 9.69815 11.2328 10.0428 10.968L11.2615 12.5538C10.7798 12.9239 10.2486 13.2328 9.67951 13.4688ZM12.5538 11.2615L10.968 10.0428C11.2328 9.69815 11.4533 9.31881 11.6214 8.91341L13.4688 9.67951C13.2328 10.2486 12.924 10.7798 12.5538 11.2615Z",
            stroke: "none"
        })
    })
}
  , sp = t=>{
    const {color: e, ...n} = t
      , r = Pt();
    return c.jsx("svg", {
        width: "14",
        height: "14",
        viewBox: "0 0 14 14",
        "aria-label": "Canceled",
        fill: e || r.color.labelMuted,
        ...n,
        children: c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14ZM5.03033 3.96967C4.73744 3.67678 4.26256 3.67678 3.96967 3.96967C3.67678 4.26256 3.67678 4.73744 3.96967 5.03033L5.93934 7L3.96967 8.96967C3.67678 9.26256 3.67678 9.73744 3.96967 10.0303C4.26256 10.3232 4.73744 10.3232 5.03033 10.0303L7 8.06066L8.96967 10.0303C9.26256 10.3232 9.73744 10.3232 10.0303 10.0303C10.3232 9.73744 10.3232 9.26256 10.0303 8.96967L8.06066 7L10.0303 5.03033C10.3232 4.73744 10.3232 4.26256 10.0303 3.96967C9.73744 3.67678 9.26256 3.67678 8.96967 3.96967L7 5.93934L5.03033 3.96967Z",
            stroke: "none"
        })
    })
}
  , jD = t=>{
    const {color: e, ...n} = t
      , r = Pt();
    return c.jsx("svg", {
        width: "14",
        height: "14",
        viewBox: "0 0 14 14",
        "aria-label": "Done",
        fill: e || (r.baseTheme ?? r).color.labelMuted,
        ...n,
        children: c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M7 0C3.13401 0 0 3.13401 0 7C0 10.866 3.13401 14 7 14C10.866 14 14 10.866 14 7C14 3.13401 10.866 0 7 0ZM11.101 5.10104C11.433 4.76909 11.433 4.23091 11.101 3.89896C10.7691 3.56701 10.2309 3.56701 9.89896 3.89896L5.5 8.29792L4.10104 6.89896C3.7691 6.56701 3.2309 6.56701 2.89896 6.89896C2.56701 7.2309 2.56701 7.7691 2.89896 8.10104L4.89896 10.101C5.2309 10.433 5.7691 10.433 6.10104 10.101L11.101 5.10104Z"
        })
    })
}
  , a4 = t=>{
    const {percentage: e, color: n, ...r} = t
      , s = 3.5
      , i = 360 * t.percentage
      , a = i > 180 ? 360 - i : i
      , o = a * Math.PI / 180
      , l = Math.sqrt(2 * s * s - 2 * s * s * Math.cos(o))
      , d = a <= 90 ? s * Math.sin(o) : s * Math.sin((180 - a) * Math.PI / 180)
      , u = Math.sqrt(l * l - d * d);
    let h, f;
    return i <= 180 ? (h = s + d,
    f = 0) : (h = s - d,
    f = 1),
    c.jsxs("svg", {
        width: "14",
        height: "14",
        viewBox: "0 0 14 14",
        fill: "none",
        ...r,
        children: [c.jsx("rect", {
            x: "1",
            y: "1",
            width: "12",
            height: "12",
            rx: "6",
            stroke: t.color,
            strokeWidth: "2",
            fill: "none"
        }), c.jsx("path", {
            fill: t.color,
            stroke: "none",
            d: `M ${s},${s} L${s},0 A${s},${s} 0 ${f},1 ${h}, ${u} z`,
            transform: `translate(${s},${s})`
        })]
    })
}
  , MD = t=>{
    const {color: e, ...n} = t
      , r = Pt();
    return c.jsx("svg", {
        width: "14",
        height: "14",
        viewBox: "0 0 14 14",
        "aria-label": "Triage",
        ...n,
        children: c.jsx("path", {
            fill: e || r.color.labelMuted,
            d: "M7 14C10.866 14 14 10.866 14 7C14 3.13403 10.866 0 7 0C3.134 0 0 3.13403 0 7C0 10.866 3.134 14 7 14ZM8.0126 9.50781V7.98224H5.9874V9.50787C5.9874 9.92908 5.4767 10.1549 5.14897 9.8786L2.17419 7.37073C1.94194 7.17493 1.94194 6.82513 2.17419 6.62933L5.14897 4.12146C5.4767 3.84515 5.9874 4.07098 5.9874 4.49219V6.01764H8.0126V4.49213C8.0126 4.07092 8.5233 3.84509 8.85103 4.1214L11.8258 6.62927C12.0581 6.82507 12.0581 7.17487 11.8258 7.37067L8.85103 9.87854C8.5233 10.1548 8.0126 9.92902 8.0126 9.50781Z"
        })
    })
}
;
function zV(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M10.25 8a.75.75 0 0 0 .75-.75v-1.5a.75.75 0 0 0-.75-.75h-1.5a.75.75 0 1 0 0 1.5h.75v.75c0 .414.336.75.75.75ZM5 8.75a.75.75 0 1 1 1.5 0v.75h.75a.75.75 0 1 1 0 1.5h-1.5a.75.75 0 0 1-.75-.75v-1.5Z"
            }), c.jsx("path", {
                d: "M12 1a3 3 0 0 1 3 3v4a3 3 0 0 1-3 3h-1v1a3 3 0 0 1-3 3H4a3 3 0 0 1-3-3V8a3 3 0 0 1 3-3h1V4a3 3 0 0 1 3-3h4Zm-2.5 9a.5.5 0 0 1 .5-.5h2A1.5 1.5 0 0 0 13.5 8V4A1.5 1.5 0 0 0 12 2.5H8A1.5 1.5 0 0 0 6.5 4v2a.5.5 0 0 1-.5.5H4A1.5 1.5 0 0 0 2.5 8v4A1.5 1.5 0 0 0 4 13.5h4A1.5 1.5 0 0 0 9.5 12v-2Z"
            })]
        })
    })
}
function TD(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M6 13h4a2 2 0 0 1-3.995.15L6 13h4-4ZM8 1a4 4 0 0 1 4 4v3.03l1.684 1.578a1 1 0 0 1 .316.73V11a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-.662a1 1 0 0 1 .316-.73L4 8.03V5a4 4 0 0 1 4-4Z"
            })
        })
    })
}
function ip(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M10.5 6.5a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0ZM8 10c2.338 0 3.6.475 3.972 1.424a.43.43 0 0 1 .028.157.419.419 0 0 1-.419.419H4.419A.419.419 0 0 1 4 11.581a.43.43 0 0 1 .028-.157C4.399 10.474 5.662 10 8 10Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1 5.8c0-1.68 0-2.52.327-3.162a3 3 0 0 1 1.311-1.311C3.28 1 4.12 1 5.8 1h4.4c1.68 0 2.52 0 3.162.327a3 3 0 0 1 1.311 1.311C15 3.28 15 4.12 15 5.8v4.4c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311C12.72 15 11.88 15 10.2 15H5.8c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.311-1.311C1 12.72 1 11.88 1 10.2V5.8Zm4.8-3.3h4.4c.865 0 1.423.001 1.848.036.408.033.559.09.633.127a1.5 1.5 0 0 1 .655.656c.038.074.095.225.128.633.035.425.036.983.036 1.848v4.4c0 .865-.001 1.423-.036 1.848-.033.408-.09.559-.128.633a1.5 1.5 0 0 1-.655.655c-.074.038-.225.095-.633.128-.425.035-.983.036-1.848.036H5.8c-.865 0-1.423-.001-1.848-.036-.408-.033-.559-.09-.633-.128a1.5 1.5 0 0 1-.656-.655c-.037-.074-.094-.225-.127-.633-.035-.425-.036-.983-.036-1.848V5.8c0-.865.001-1.423.036-1.848.033-.408.09-.559.127-.633a1.5 1.5 0 0 1 .656-.656c.074-.037.225-.094.633-.127C4.377 2.5 4.935 2.5 5.8 2.5Z"
            })]
        })
    })
}
function LD(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M11.25 1A3.75 3.75 0 0 1 15 4.75v4.855c0 .466-.186.912-.516 1.24l-3.665 3.646A1.75 1.75 0 0 1 9.585 15H4.75A3.75 3.75 0 0 1 1 11.25v-6.5A3.75 3.75 0 0 1 4.75 1h6.5Zm0 1.5h-6.5A2.25 2.25 0 0 0 2.5 4.75v6.5a2.25 2.25 0 0 0 2.25 2.25h3.249L8 10.75a2.75 2.75 0 0 1 2.582-2.745L10.75 8h2.75V4.75a2.25 2.25 0 0 0-2.25-2.25Zm2.25 7h-2.75c-.69 0-1.25.56-1.25 1.25l-.001 2.75h.086a.25.25 0 0 0 .176-.073l3.665-3.645a.25.25 0 0 0 .074-.177V9.5Z"
            })
        })
    })
}
function $o(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8 4C6.89545 4 6 4.89545 6 6V6.5C6 7.60455 6.89545 8.5 8 8.5C9.10455 8.5 10 7.60455 10 6.5V6C10 4.89545 9.10455 4 8 4Z"
            }), c.jsx("path", {
                d: "M5.15493 12.8571C4.48326 12.3982 4.54607 11.4539 5.12128 10.8787V10.8787C5.6839 10.316 6.44696 10 7.24255 10H8.75732C9.55292 10 10.316 10.3161 10.8786 10.8787V10.8787C11.4538 11.4539 11.5167 12.3982 10.845 12.8571C10.478 13.1079 10.0762 13.3079 9.65017 13.4499L9.59096 13.4697C8.55825 13.8139 7.44175 13.8139 6.40904 13.4697L6.3499 13.45C5.92382 13.3079 5.52198 13.1079 5.15493 12.8571Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14.9878 8.41658C14.9716 8.69225 14.7189 8.88531 14.445 8.84959L13.9492 8.78492C13.6754 8.7492 13.4847 8.49813 13.4956 8.2222C13.4985 8.14856 13.5 8.07449 13.5 8C13.5 7.92551 13.4985 7.85144 13.4956 7.7778C13.4847 7.50187 13.6754 7.2508 13.9492 7.21508L14.445 7.15041C14.7189 7.11469 14.9716 7.30775 14.9878 7.58342C14.9959 7.72124 15 7.86014 15 8C15 8.13986 14.9959 8.27876 14.9878 8.41658ZM14.2609 4.86589C14.3847 5.11273 14.2621 5.40623 14.007 5.51201L13.5451 5.70354C13.29 5.80932 12.9995 5.68696 12.8709 5.4426C12.8025 5.3127 12.729 5.18581 12.6507 5.0622C12.503 4.82892 12.5419 4.5161 12.7609 4.34784L13.1573 4.04317C13.3763 3.87491 13.6918 3.9151 13.8441 4.14548C13.9967 4.3764 14.136 4.61691 14.2609 4.86589ZM11.8545 2.1559C12.0849 2.30816 12.1251 2.62371 11.9568 2.84266L11.6522 3.23912C11.4839 3.45808 11.1711 3.49703 10.9378 3.34927C10.8142 3.27098 10.6873 3.19752 10.5574 3.12914C10.313 3.0005 10.1907 2.70997 10.2965 2.45489L10.488 1.99303C10.5938 1.73795 10.8873 1.61531 11.1341 1.73911C11.3831 1.86399 11.6236 2.00329 11.8545 2.1559ZM8.41658 1.01219C8.69225 1.02837 8.88531 1.28114 8.84959 1.55497L8.78492 2.05077C8.7492 2.32459 8.49813 2.5153 8.2222 2.50438C8.14856 2.50147 8.07449 2.5 8 2.5C7.92551 2.5 7.85144 2.50147 7.7778 2.50438C7.50187 2.5153 7.2508 2.32459 7.21508 2.05077L7.15041 1.55497C7.11469 1.28114 7.30775 1.02837 7.58342 1.01219C7.72124 1.0041 7.86014 1 8 1C8.13986 1 8.27876 1.0041 8.41658 1.01219ZM4.86589 1.73911C5.11273 1.61531 5.40623 1.73795 5.51201 1.99303L5.70354 2.45489C5.80932 2.70997 5.68696 3.0005 5.4426 3.12914C5.3127 3.19752 5.18581 3.27098 5.0622 3.34927C4.82892 3.49703 4.5161 3.45808 4.34784 3.23912L4.04317 2.84266C3.87491 2.62371 3.9151 2.30816 4.14548 2.1559C4.3764 2.00329 4.61691 1.86399 4.86589 1.73911ZM2.1559 4.14548C2.30816 3.9151 2.62371 3.87491 2.84266 4.04317L3.23912 4.34784C3.45808 4.5161 3.49703 4.82892 3.34927 5.0622C3.27098 5.18581 3.19752 5.3127 3.12914 5.44261C3.0005 5.68696 2.70997 5.80932 2.45489 5.70354L1.99303 5.51201C1.73795 5.40624 1.61531 5.11273 1.73911 4.86589C1.86399 4.61691 2.00329 4.3764 2.1559 4.14548ZM1.55497 7.15041C1.28114 7.11469 1.02837 7.30775 1.01219 7.58342C1.0041 7.72124 1 7.86014 1 8C1 8.13986 1.0041 8.27876 1.01219 8.41658C1.02837 8.69225 1.28114 8.88531 1.55497 8.84959L2.05077 8.78492C2.32459 8.7492 2.5153 8.49813 2.50438 8.2222C2.50147 8.14856 2.5 8.07449 2.5 8C2.5 7.92551 2.50147 7.85144 2.50438 7.7778C2.5153 7.50187 2.32459 7.2508 2.05077 7.21508L1.55497 7.15041ZM1.73911 11.1341C1.61531 10.8873 1.73795 10.5938 1.99303 10.488L2.45489 10.2965C2.70997 10.1907 3.0005 10.313 3.12914 10.5574C3.19752 10.6873 3.27098 10.8142 3.34927 10.9378C3.49703 11.1711 3.45808 11.4839 3.23912 11.6522L2.84266 11.9568C2.62371 12.1251 2.30816 12.0849 2.1559 11.8545C2.00329 11.6236 1.86399 11.3831 1.73911 11.1341ZM4.14548 13.8441C3.9151 13.6918 3.87491 13.3763 4.04317 13.1573L4.34784 12.7609C4.5161 12.5419 4.82892 12.503 5.0622 12.6507C5.18582 12.729 5.3127 12.8025 5.4426 12.8709C5.68696 12.9995 5.80932 13.29 5.70354 13.5451L5.51201 14.007C5.40624 14.2621 5.11273 14.3847 4.86589 14.2609C4.61691 14.136 4.3764 13.9967 4.14548 13.8441ZM7.58342 14.9878C7.30775 14.9716 7.11469 14.7189 7.15041 14.445L7.21508 13.9492C7.2508 13.6754 7.50187 13.4847 7.7778 13.4956C7.85144 13.4985 7.92551 13.5 8 13.5C8.07449 13.5 8.14856 13.4985 8.2222 13.4956C8.49813 13.4847 8.7492 13.6754 8.78492 13.9492L8.84959 14.445C8.88531 14.7189 8.69225 14.9716 8.41658 14.9878C8.27876 14.9959 8.13986 15 8 15C7.86014 15 7.72124 14.9959 7.58342 14.9878ZM11.1341 14.2609C10.8873 14.3847 10.5938 14.2621 10.488 14.007L10.2965 13.5451C10.1907 13.29 10.313 12.9995 10.5574 12.8709C10.6873 12.8025 10.8142 12.729 10.9378 12.6507C11.1711 12.503 11.4839 12.5419 11.6522 12.7609L11.9568 13.1573C12.1251 13.3763 12.0849 13.6918 11.8545 13.8441C11.6236 13.9967 11.3831 14.136 11.1341 14.2609ZM13.1573 11.9568C13.3763 12.1251 13.6918 12.0849 13.8441 11.8545C13.9967 11.6236 14.136 11.3831 14.2609 11.1341C14.3847 10.8873 14.2621 10.5938 14.007 10.488L13.5451 10.2965C13.29 10.1907 12.9995 10.313 12.8709 10.5574C12.8025 10.6873 12.729 10.8142 12.6507 10.9378C12.503 11.1711 12.5419 11.4839 12.7609 11.6522L13.1573 11.9568Z"
            })]
        })
    })
}
const OD = t=>c.jsx(x, {
    ...t,
    children: c.jsx("svg", {
        children: c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M15 5C15 2.79086 13.2091 1 11 1H5C2.79086 1 1 2.79086 1 5V11C1 13.2091 2.79086 15 5 15H6.25C6.66421 15 7 14.6642 7 14.25C7 13.8358 6.66421 13.5 6.25 13.5H5C3.61929 13.5 2.5 12.3807 2.5 11V6H13.5V6.25C13.5 6.66421 13.8358 7 14.25 7C14.6642 7 15 6.66421 15 6.25V5ZM11 7.25C10.5858 7.25 10.25 7.58579 10.25 8C10.25 8.41421 10.5858 8.75 11 8.75C12.2426 8.75 13.25 9.75736 13.25 11H12.6403C12.2622 11 12.0952 11.4761 12.3904 11.7123L13.7501 12.8001C13.8962 12.917 14.1038 12.917 14.2499 12.8001L15.6095 11.7123C15.9048 11.4761 15.7378 11 15.3597 11H14.75C14.75 8.92893 13.071 7.25 11 7.25ZM6.64029 11H7.24998C7.24998 13.0711 8.92891 14.75 11 14.75C11.4142 14.75 11.75 14.4142 11.75 14C11.75 13.5858 11.4142 13.25 11 13.25C9.75734 13.25 8.74998 12.2426 8.74998 11H9.35967C9.73778 11 9.9048 10.5239 9.60955 10.2877L8.24986 9.1999C8.10377 9.08303 7.89619 9.08303 7.7501 9.1999L6.39041 10.2877C6.09516 10.5239 6.26218 11 6.64029 11Z"
        })
    })
})
  , ZV = ()=>t=>{
    const {theme: e} = t;
    if (e.isDark)
        return "rgba(255, 255, 255, 0.075)";
    const n = Tn.fromCss(e.color.controlPrimary);
    return Tn.toCss("RGB", [20, 50, n[2], .05])
}
  , qV = Qt`
  background-color: ${ZV()};
  border: ${d0("bgBorderSolid")};
`
  , WV = ae.span`
  text-align: center;
  vertical-align: baseline;
  color: inherit;
  font-family: var(--font-monospace);
  font-size: 0.9em;
  padding: 0 0.25em;
  line-height: 1.3em;
  border-radius: 0.2em;
  ${qV}
`;
function GV(t) {
    for (var e = [], n = 0; n < t.length; ) {
        var r = t[n];
        if (r === "*" || r === "+" || r === "?") {
            e.push({
                type: "MODIFIER",
                index: n,
                value: t[n++]
            });
            continue
        }
        if (r === "\\") {
            e.push({
                type: "ESCAPED_CHAR",
                index: n++,
                value: t[n++]
            });
            continue
        }
        if (r === "{") {
            e.push({
                type: "OPEN",
                index: n,
                value: t[n++]
            });
            continue
        }
        if (r === "}") {
            e.push({
                type: "CLOSE",
                index: n,
                value: t[n++]
            });
            continue
        }
        if (r === ":") {
            for (var s = "", i = n + 1; i < t.length; ) {
                var a = t.charCodeAt(i);
                if (a >= 48 && a <= 57 || a >= 65 && a <= 90 || a >= 97 && a <= 122 || a === 95) {
                    s += t[i++];
                    continue
                }
                break
            }
            if (!s)
                throw new TypeError("Missing parameter name at ".concat(n));
            e.push({
                type: "NAME",
                index: n,
                value: s
            }),
            n = i;
            continue
        }
        if (r === "(") {
            var o = 1
              , l = ""
              , i = n + 1;
            if (t[i] === "?")
                throw new TypeError('Pattern cannot start with "?" at '.concat(i));
            for (; i < t.length; ) {
                if (t[i] === "\\") {
                    l += t[i++] + t[i++];
                    continue
                }
                if (t[i] === ")") {
                    if (o--,
                    o === 0) {
                        i++;
                        break
                    }
                } else if (t[i] === "(" && (o++,
                t[i + 1] !== "?"))
                    throw new TypeError("Capturing groups are not allowed at ".concat(i));
                l += t[i++]
            }
            if (o)
                throw new TypeError("Unbalanced pattern at ".concat(n));
            if (!l)
                throw new TypeError("Missing pattern at ".concat(n));
            e.push({
                type: "PATTERN",
                index: n,
                value: l
            }),
            n = i;
            continue
        }
        e.push({
            type: "CHAR",
            index: n,
            value: t[n++]
        })
    }
    return e.push({
        type: "END",
        index: n,
        value: ""
    }),
    e
}
function KV(t, e) {
    e === void 0 && (e = {});
    for (var n = GV(t), r = e.prefixes, s = r === void 0 ? "./" : r, i = "[^".concat(Gl(e.delimiter || "/#?"), "]+?"), a = [], o = 0, l = 0, d = "", u = function(T) {
        if (l < n.length && n[l].type === T)
            return n[l++].value
    }, h = function(T) {
        var B = u(T);
        if (B !== void 0)
            return B;
        var z = n[l]
          , W = z.type
          , fe = z.index;
        throw new TypeError("Unexpected ".concat(W, " at ").concat(fe, ", expected ").concat(T))
    }, f = function() {
        for (var T = "", B; B = u("CHAR") || u("ESCAPED_CHAR"); )
            T += B;
        return T
    }; l < n.length; ) {
        var p = u("CHAR")
          , m = u("NAME")
          , g = u("PATTERN");
        if (m || g) {
            var C = p || "";
            s.indexOf(C) === -1 && (d += C,
            C = ""),
            d && (a.push(d),
            d = ""),
            a.push({
                name: m || o++,
                prefix: C,
                suffix: "",
                pattern: g || i,
                modifier: u("MODIFIER") || ""
            });
            continue
        }
        var b = p || u("ESCAPED_CHAR");
        if (b) {
            d += b;
            continue
        }
        d && (a.push(d),
        d = "");
        var k = u("OPEN");
        if (k) {
            var C = f()
              , S = u("NAME") || ""
              , D = u("PATTERN") || ""
              , R = f();
            h("CLOSE"),
            a.push({
                name: S || (D ? o++ : ""),
                pattern: S && !D ? i : D,
                prefix: C,
                suffix: R,
                modifier: u("MODIFIER") || ""
            });
            continue
        }
        h("END")
    }
    return a
}
function Gl(t) {
    return t.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1")
}
function RD(t) {
    return t && t.sensitive ? "" : "i"
}
function YV(t, e) {
    if (!e)
        return t;
    for (var n = /\((?:\?<(.*?)>)?(?!\?)/g, r = 0, s = n.exec(t.source); s; )
        e.push({
            name: s[1] || r++,
            prefix: "",
            suffix: "",
            modifier: "",
            pattern: ""
        }),
        s = n.exec(t.source);
    return t
}
function QV(t, e, n) {
    var r = t.map(function(s) {
        return PD(s, e, n).source
    });
    return new RegExp("(?:".concat(r.join("|"), ")"),RD(n))
}
function XV(t, e, n) {
    return JV(KV(t, n), e, n)
}
function JV(t, e, n) {
    n === void 0 && (n = {});
    for (var r = n.strict, s = r === void 0 ? !1 : r, i = n.start, a = i === void 0 ? !0 : i, o = n.end, l = o === void 0 ? !0 : o, d = n.encode, u = d === void 0 ? function(fe) {
        return fe
    }
    : d, h = n.delimiter, f = h === void 0 ? "/#?" : h, p = n.endsWith, m = p === void 0 ? "" : p, g = "[".concat(Gl(m), "]|$"), C = "[".concat(Gl(f), "]"), b = a ? "^" : "", k = 0, S = t; k < S.length; k++) {
        var D = S[k];
        if (typeof D == "string")
            b += Gl(u(D));
        else {
            var R = Gl(u(D.prefix))
              , T = Gl(u(D.suffix));
            if (D.pattern)
                if (e && e.push(D),
                R || T)
                    if (D.modifier === "+" || D.modifier === "*") {
                        var B = D.modifier === "*" ? "?" : "";
                        b += "(?:".concat(R, "((?:").concat(D.pattern, ")(?:").concat(T).concat(R, "(?:").concat(D.pattern, "))*)").concat(T, ")").concat(B)
                    } else
                        b += "(?:".concat(R, "(").concat(D.pattern, ")").concat(T, ")").concat(D.modifier);
                else
                    D.modifier === "+" || D.modifier === "*" ? b += "((?:".concat(D.pattern, ")").concat(D.modifier, ")") : b += "(".concat(D.pattern, ")").concat(D.modifier);
            else
                b += "(?:".concat(R).concat(T, ")").concat(D.modifier)
        }
    }
    if (l)
        s || (b += "".concat(C, "?")),
        b += n.endsWith ? "(?=".concat(g, ")") : "$";
    else {
        var z = t[t.length - 1]
          , W = typeof z == "string" ? C.indexOf(z[z.length - 1]) > -1 : z === void 0;
        s || (b += "(?:".concat(C, "(?=").concat(g, "))?")),
        W || (b += "(?=".concat(C, "|").concat(g, ")"))
    }
    return new RegExp(b,RD(n))
}
function PD(t, e, n) {
    return t instanceof RegExp ? YV(t, e) : Array.isArray(t) ? QV(t, e, n) : XV(t, e, n)
}
const bC = {}
  , eB = 1e4;
let vC = 0;
function tB(t, e) {
    const n = `${e.end}${e.strict}${e.sensitive}`
      , r = bC[n] || (bC[n] = {});
    if (r[t])
        return r[t];
    const s = []
      , a = {
        regexp: PD(t, s, e),
        keys: s
    };
    return vC < eB && (r[t] = a,
    vC++),
    a
}
function nB(t, e) {
    (typeof e == "string" || Array.isArray(e)) && (e = {
        path: e
    });
    const {path: n, exact: r=!1, strict: s=!1, sensitive: i=!1} = e;
    return (n ? [].concat(n) : []).reduce((o,l)=>{
        if (!l && l !== "")
            return null;
        if (o)
            return o;
        const {regexp: d, keys: u} = tB(l, {
            end: r,
            strict: s,
            sensitive: i
        })
          , h = d.exec(t);
        if (!h)
            return null;
        const [f,...p] = h
          , m = t === f;
        return r && !m ? null : {
            path: l,
            url: l === "/" && f === "" ? "/" : f,
            isExact: m,
            params: u.reduce((g,C,b)=>(g[C.name] = p[b],
            g), {})
        }
    }
    , null)
}
var o4;
(function(t) {
    t.issue = "/:orgKey/issue/:issueId/:slug?",
    t.project = "/:orgKey/project/:projectId/:teamKey?",
    t.customView = "/:orgKey/view/:customViewId",
    t.allProjectsRoot = "/:orgKey/projects",
    t.allProjectsAllTab = "/:orgKey/projects/all",
    t.allProjectsFacet = "/:orgKey/projects/view/:customViewId",
    t.allProjectsTeamRoot = "/:orgKey/team/:teamKey/projects",
    t.allProjectsTeamAllTab = "/:orgKey/team/:teamKey/projects/all",
    t.allProjectsTeamFacet = "/:orgKey/team/:teamKey/projects/view/:customViewId",
    t.projectFacet = "/:orgKey/project/:projectId/view/:customViewId",
    t.document = "/:orgKey/document/:documentId",
    t.roadmap = "/:orgKey/roadmap/:viewType",
    t.customRoadmap = "/:orgKey/roadmap/:roadmapId/:viewType?",
    t.initiative = "/:orgKey/initiative/:initiativeId/:tab?",
    t.initiativeRoot = "/:orgKey/initiative/:initiativeId?",
    t.initiativeFacet = "/:orgKey/initiative/:initiativeId/view/:customViewId",
    t.initiatives = "/:orgKey/initiatives/:viewType?",
    t.team = "/:orgKey/team/:teamKey/(all|active|backlog)",
    t.teamProjects = "/:orgKey/team/:teamKey/projects/:viewType?",
    t.inviteAccept = "/invite/:inviteId/accept",
    t.inviteLink = "/:orgKey/join/:inviteHash",
    t.diaryLink = "/:orgKey/diary"
}
)(o4 || (o4 = {}));
function Qde(t, e) {
    let n = t;
    if (e && t.startsWith(e)) {
        const {pathname: r} = new URL(t);
        n = r
    }
    for (const r of rB) {
        const s = nB(n, {
            path: r
        });
        if (s)
            return [r, s.params]
    }
    return [sB, {}]
}
function Xde(t) {
    if (K3(t))
        return t;
    {
        const e = t.split("-");
        return e[e.length - 1]
    }
}
const rB = ["/:orgKey/team/:teamKey/projects/view/:customViewId", "/:orgKey/projects/view/:customViewId", "/:orgKey/initiative/:initiativeId/view/:customViewId", "/:orgKey/project/:projectId/view/:customViewId", "/:orgKey/view/:customViewId", "/:orgKey/issue/:issueId/:slug?", "/:orgKey/project/:projectId/:teamKey?", "/:orgKey/document/:documentId", "/:orgKey/roadmap/:roadmapId/:viewType?", "/:orgKey/roadmap/:viewType", "/:orgKey/initiative/:initiativeId/:tab?", "/:orgKey/initiatives/:viewType?", "/:orgKey/team/:teamKey/projects/:viewType?", "/:orgKey/team/:teamKey/(all|active|backlog)", "/invite/:inviteId/accept", "/:orgKey/join/:inviteHash", "/:orgKey/diary"]
  , sB = "NO_MATCHING_ROUTE"
  , vi = ()=>new Map
  , U8 = t=>{
    const e = vi();
    return t.forEach((n,r)=>{
        e.set(r, n)
    }
    ),
    e
}
  , e1 = (t,e,n)=>{
    let r = t.get(e);
    return r === void 0 && t.set(e, r = n()),
    r
}
  , iB = (t,e)=>{
    const n = [];
    for (const [r,s] of t)
        n.push(e(s, r));
    return n
}
  , aB = (t,e)=>{
    for (const [n,r] of t)
        if (e(r, n))
            return !0;
    return !1
}
  , tl = ()=>new Set
  , g6 = t=>t[t.length - 1]
  , oB = (t,e)=>{
    for (let n = 0; n < e.length; n++)
        t.push(e[n])
}
  , N1 = Array.from
  , cB = (t,e)=>{
    for (let n = 0; n < t.length; n++)
        if (e(t[n], n, t))
            return !0;
    return !1
}
  , H8 = Array.isArray;
let $D = class {
    constructor() {
        this._observers = vi()
    }
    on(e, n) {
        e1(this._observers, e, tl).add(n)
    }
    once(e, n) {
        const r = (...s)=>{
            this.off(e, r),
            n(...s)
        }
        ;
        this.on(e, r)
    }
    off(e, n) {
        const r = this._observers.get(e);
        r !== void 0 && (r.delete(n),
        r.size === 0 && this._observers.delete(e))
    }
    emit(e, n) {
        return N1((this._observers.get(e) || vi()).values()).forEach(r=>r(...n))
    }
    destroy() {
        this._observers = vi()
    }
}
;
const Fo = Math.floor
  , y2 = Math.abs
  , Q3 = (t,e)=>t < e ? t : e
  , yl = (t,e)=>t > e ? t : e
  , FD = t=>t !== 0 ? t < 0 : 1 / t < 0
  , lB = t=>t.toLowerCase()
  , dB = /^\s*/g
  , uB = t=>t.replace(dB, "")
  , hB = /([A-Z])/g
  , wC = (t,e)=>uB(t.replace(hB, n=>`${e}${lB(n)}`))
  , fB = t=>{
    const e = unescape(encodeURIComponent(t))
      , n = e.length
      , r = new Uint8Array(n);
    for (let s = 0; s < n; s++)
        r[s] = e.codePointAt(s);
    return r
}
  , p0 = typeof TextEncoder < "u" ? new TextEncoder : null
  , pB = t=>p0.encode(t)
  , mB = p0 ? pB : fB;
let Ou = typeof TextDecoder > "u" ? null : new TextDecoder("utf-8",{
    fatal: !0,
    ignoreBOM: !0
});
Ou && Ou.decode(new Uint8Array).length === 1 && (Ou = null);
const kC = t=>t === void 0 ? null : t;
class gB {
    constructor() {
        this.map = new Map
    }
    setItem(e, n) {
        this.map.set(e, n)
    }
    getItem(e) {
        return this.map.get(e)
    }
}
let ND = new gB
  , yB = !0;
try {
    typeof localStorage < "u" && (ND = localStorage,
    yB = !1)
} catch {}
const CB = ND
  , bB = Object.assign
  , vB = Object.keys
  , VD = (t,e)=>{
    for (const n in t)
        e(t[n], n)
}
  , c4 = t=>vB(t).length
  , wB = t=>{
    for (const e in t)
        return !1;
    return !0
}
  , kB = (t,e)=>{
    for (const n in t)
        if (!e(t[n], n))
            return !1;
    return !0
}
  , BD = (t,e)=>Object.prototype.hasOwnProperty.call(t, e)
  , xB = (t,e)=>t === e || c4(t) === c4(e) && kB(t, (n,r)=>(n !== void 0 || BD(e, r)) && e[r] === n)
  , ap = (t,e,n=0)=>{
    try {
        for (; n < t.length; n++)
            t[n](...e)
    } finally {
        n < t.length && ap(t, e, n + 1)
    }
}
  , DB = t=>t
  , SB = (t,e)=>t === e
  , y6 = (t,e)=>{
    if (t == null || e == null)
        return SB(t, e);
    if (t.constructor !== e.constructor)
        return !1;
    if (t === e)
        return !0;
    switch (t.constructor) {
    case ArrayBuffer:
        t = new Uint8Array(t),
        e = new Uint8Array(e);
    case Uint8Array:
        {
            if (t.byteLength !== e.byteLength)
                return !1;
            for (let n = 0; n < t.length; n++)
                if (t[n] !== e[n])
                    return !1;
            break
        }
    case Set:
        {
            if (t.size !== e.size)
                return !1;
            for (const n of t)
                if (!e.has(n))
                    return !1;
            break
        }
    case Map:
        {
            if (t.size !== e.size)
                return !1;
            for (const n of t.keys())
                if (!e.has(n) || !y6(t.get(n), e.get(n)))
                    return !1;
            break
        }
    case Object:
        if (c4(t) !== c4(e))
            return !1;
        for (const n in t)
            if (!BD(t, n) || !y6(t[n], e[n]))
                return !1;
        break;
    case Array:
        if (t.length !== e.length)
            return !1;
        for (let n = 0; n < t.length; n++)
            if (!y6(t[n], e[n]))
                return !1;
        break;
    default:
        return !1
    }
    return !0
}
  , _B = (t,e)=>e.includes(t);
var UD = {};
const jd = typeof process < "u" && process.release && /node|io\.js/.test(process.release.name)
  , IB = typeof window < "u" && typeof document < "u" && !jd;
let fa;
const EB = ()=>{
    if (fa === void 0)
        if (jd) {
            fa = vi();
            const t = process.argv;
            let e = null;
            for (let n = 0; n < t.length; n++) {
                const r = t[n];
                r[0] === "-" ? (e !== null && fa.set(e, ""),
                e = r) : e !== null && (fa.set(e, r),
                e = null)
            }
            e !== null && fa.set(e, "")
        } else
            typeof location == "object" ? (fa = vi(),
            (location.search || "?").slice(1).split("&").forEach(t=>{
                if (t.length !== 0) {
                    const [e,n] = t.split("=");
                    fa.set(`--${wC(e, "-")}`, n),
                    fa.set(`-${wC(e, "-")}`, n)
                }
            }
            )) : fa = vi();
    return fa
}
  , z8 = t=>EB().has(t)
  , Z8 = t=>kC(jd ? UD[t.toUpperCase()] : CB.getItem(t))
  , AB = t=>z8("--" + t) || Z8(t) !== null;
AB("production");
const xC = jd && _B(UD.FORCE_COLOR, ["true", "1", "2"])
  , jB = !z8("no-colors") && (!jd || process.stdout.isTTY || xC) && (!jd || z8("color") || xC || Z8("COLORTERM") !== null || (Z8("TERM") || "").includes("color"))
  , DC = 1
  , SC = 2
  , C6 = 4
  , b6 = 8
  , m0 = 32
  , _o = 64
  , Xs = 128
  , X3 = 31
  , q8 = 63
  , Nc = 127
  , MB = 2147483647
  , HD = Number.MAX_SAFE_INTEGER
  , TB = Number.isInteger || (t=>typeof t == "number" && isFinite(t) && Fo(t) === t)
  , V1 = t=>new Error(t)
  , Zi = ()=>{
    throw V1("Method unimplemented")
}
  , xi = ()=>{
    throw V1("Unexpected case")
}
  , zD = V1("Unexpected end of array")
  , ZD = V1("Integer out of Range");
class J3 {
    constructor(e) {
        this.arr = e,
        this.pos = 0
    }
}
const Cl = t=>new J3(t)
  , LB = t=>t.pos !== t.arr.length
  , OB = (t,e)=>{
    const n = lp(t.arr.buffer, t.pos + t.arr.byteOffset, e);
    return t.pos += e,
    n
}
  , Us = t=>OB(t, Ft(t))
  , Md = t=>t.arr[t.pos++]
  , Ft = t=>{
    let e = 0
      , n = 1;
    const r = t.arr.length;
    for (; t.pos < r; ) {
        const s = t.arr[t.pos++];
        if (e = e + (s & Nc) * n,
        n *= 128,
        s < Xs)
            return e;
        if (e > HD)
            throw ZD
    }
    throw zD
}
  , op = t=>{
    let e = t.arr[t.pos++]
      , n = e & q8
      , r = 64;
    const s = (e & _o) > 0 ? -1 : 1;
    if (!(e & Xs))
        return s * n;
    const i = t.arr.length;
    for (; t.pos < i; ) {
        if (e = t.arr[t.pos++],
        n = n + (e & Nc) * r,
        r *= 128,
        e < Xs)
            return s * n;
        if (n > HD)
            throw ZD
    }
    throw zD
}
  , RB = t=>{
    let e = Ft(t);
    if (e === 0)
        return "";
    {
        let n = String.fromCodePoint(Md(t));
        if (--e < 100)
            for (; e--; )
                n += String.fromCodePoint(Md(t));
        else
            for (; e > 0; ) {
                const r = e < 1e4 ? e : 1e4
                  , s = t.arr.subarray(t.pos, t.pos + r);
                t.pos += r,
                n += String.fromCodePoint.apply(null, s),
                e -= r
            }
        return decodeURIComponent(escape(n))
    }
}
  , PB = t=>Ou.decode(Us(t))
  , md = Ou ? PB : RB
  , cp = (t,e)=>{
    const n = new DataView(t.arr.buffer,t.arr.byteOffset + t.pos,e);
    return t.pos += e,
    n
}
  , $B = t=>cp(t, 4).getFloat32(0, !1)
  , FB = t=>cp(t, 8).getFloat64(0, !1)
  , NB = t=>cp(t, 8).getBigInt64(0, !1)
  , VB = [t=>{}
, t=>null, op, $B, FB, NB, t=>!1, t=>!0, md, t=>{
    const e = Ft(t)
      , n = {};
    for (let r = 0; r < e; r++) {
        const s = md(t);
        n[s] = g0(t)
    }
    return n
}
, t=>{
    const e = Ft(t)
      , n = [];
    for (let r = 0; r < e; r++)
        n.push(g0(t));
    return n
}
, Us]
  , g0 = t=>VB[127 - Md(t)](t);
class _C extends J3 {
    constructor(e, n) {
        super(e),
        this.reader = n,
        this.s = null,
        this.count = 0
    }
    read() {
        return this.count === 0 && (this.s = this.reader(this),
        LB(this) ? this.count = Ft(this) + 1 : this.count = -1),
        this.count--,
        this.s
    }
}
class C2 extends J3 {
    constructor(e) {
        super(e),
        this.s = 0,
        this.count = 0
    }
    read() {
        if (this.count === 0) {
            this.s = op(this);
            const e = FD(this.s);
            this.count = 1,
            e && (this.s = -this.s,
            this.count = Ft(this) + 2)
        }
        return this.count--,
        this.s
    }
}
class v6 extends J3 {
    constructor(e) {
        super(e),
        this.s = 0,
        this.count = 0,
        this.diff = 0
    }
    read() {
        if (this.count === 0) {
            const e = op(this)
              , n = e & 1;
            this.diff = Fo(e / 2),
            this.count = 1,
            n && (this.count = Ft(this) + 2)
        }
        return this.s += this.diff,
        this.count--,
        this.s
    }
}
class BB {
    constructor(e) {
        this.decoder = new C2(e),
        this.str = md(this.decoder),
        this.spos = 0
    }
    read() {
        const e = this.spos + this.decoder.read()
          , n = this.str.slice(this.spos, e);
        return this.spos = e,
        n
    }
}
const UB = t=>new Uint8Array(t)
  , lp = (t,e,n)=>new Uint8Array(t,e,n)
  , HB = t=>{
    const e = UB(t.byteLength);
    return e.set(t),
    e
}
;
class l5 {
    constructor() {
        this.cpos = 0,
        this.cbuf = new Uint8Array(100),
        this.bufs = []
    }
}
const eh = ()=>new l5
  , zB = t=>{
    let e = t.cpos;
    for (let n = 0; n < t.bufs.length; n++)
        e += t.bufs[n].length;
    return e
}
  , Ta = t=>{
    const e = new Uint8Array(zB(t));
    let n = 0;
    for (let r = 0; r < t.bufs.length; r++) {
        const s = t.bufs[r];
        e.set(s, n),
        n += s.length
    }
    return e.set(lp(t.cbuf.buffer, 0, t.cpos), n),
    e
}
  , ZB = (t,e)=>{
    const n = t.cbuf.length;
    n - t.cpos < e && (t.bufs.push(lp(t.cbuf.buffer, 0, t.cpos)),
    t.cbuf = new Uint8Array(yl(n, e) * 2),
    t.cpos = 0)
}
  , Sr = (t,e)=>{
    const n = t.cbuf.length;
    t.cpos === n && (t.bufs.push(t.cbuf),
    t.cbuf = new Uint8Array(n * 2),
    t.cpos = 0),
    t.cbuf[t.cpos++] = e
}
  , W8 = Sr
  , Bt = (t,e)=>{
    for (; e > Nc; )
        Sr(t, Xs | Nc & e),
        e = Fo(e / 128);
    Sr(t, Nc & e)
}
  , dp = (t,e)=>{
    const n = FD(e);
    for (n && (e = -e),
    Sr(t, (e > q8 ? Xs : 0) | (n ? _o : 0) | q8 & e),
    e = Fo(e / 64); e > 0; )
        Sr(t, (e > Nc ? Xs : 0) | Nc & e),
        e = Fo(e / 128)
}
  , G8 = new Uint8Array(3e4)
  , qB = G8.length / 3
  , WB = (t,e)=>{
    if (e.length < qB) {
        const n = p0.encodeInto(e, G8).written || 0;
        Bt(t, n);
        for (let r = 0; r < n; r++)
            Sr(t, G8[r])
    } else
        Hs(t, mB(e))
}
  , GB = (t,e)=>{
    const n = unescape(encodeURIComponent(e))
      , r = n.length;
    Bt(t, r);
    for (let s = 0; s < r; s++)
        Sr(t, n.codePointAt(s))
}
  , gd = p0 && p0.encodeInto ? WB : GB
  , th = (t,e)=>{
    const n = t.cbuf.length
      , r = t.cpos
      , s = Q3(n - r, e.length)
      , i = e.length - s;
    t.cbuf.set(e.subarray(0, s), r),
    t.cpos += s,
    i > 0 && (t.bufs.push(t.cbuf),
    t.cbuf = new Uint8Array(yl(n * 2, i)),
    t.cbuf.set(e.subarray(s)),
    t.cpos = i)
}
  , Hs = (t,e)=>{
    Bt(t, e.byteLength),
    th(t, e)
}
  , up = (t,e)=>{
    ZB(t, e);
    const n = new DataView(t.cbuf.buffer,t.cpos,e);
    return t.cpos += e,
    n
}
  , KB = (t,e)=>up(t, 4).setFloat32(0, e, !1)
  , YB = (t,e)=>up(t, 8).setFloat64(0, e, !1)
  , QB = (t,e)=>up(t, 8).setBigInt64(0, e, !1)
  , IC = new DataView(new ArrayBuffer(4))
  , XB = t=>(IC.setFloat32(0, t),
IC.getFloat32(0) === t)
  , y0 = (t,e)=>{
    switch (typeof e) {
    case "string":
        Sr(t, 119),
        gd(t, e);
        break;
    case "number":
        TB(e) && y2(e) <= MB ? (Sr(t, 125),
        dp(t, e)) : XB(e) ? (Sr(t, 124),
        KB(t, e)) : (Sr(t, 123),
        YB(t, e));
        break;
    case "bigint":
        Sr(t, 122),
        QB(t, e);
        break;
    case "object":
        if (e === null)
            Sr(t, 126);
        else if (H8(e)) {
            Sr(t, 117),
            Bt(t, e.length);
            for (let n = 0; n < e.length; n++)
                y0(t, e[n])
        } else if (e instanceof Uint8Array)
            Sr(t, 116),
            Hs(t, e);
        else {
            Sr(t, 118);
            const n = Object.keys(e);
            Bt(t, n.length);
            for (let r = 0; r < n.length; r++) {
                const s = n[r];
                gd(t, s),
                y0(t, e[s])
            }
        }
        break;
    case "boolean":
        Sr(t, e ? 120 : 121);
        break;
    default:
        Sr(t, 127)
    }
}
;
class EC extends l5 {
    constructor(e) {
        super(),
        this.w = e,
        this.s = null,
        this.count = 0
    }
    write(e) {
        this.s === e ? this.count++ : (this.count > 0 && Bt(this, this.count - 1),
        this.count = 1,
        this.w(this, e),
        this.s = e)
    }
}
const AC = t=>{
    t.count > 0 && (dp(t.encoder, t.count === 1 ? t.s : -t.s),
    t.count > 1 && Bt(t.encoder, t.count - 2))
}
;
class b2 {
    constructor() {
        this.encoder = new l5,
        this.s = 0,
        this.count = 0
    }
    write(e) {
        this.s === e ? this.count++ : (AC(this),
        this.count = 1,
        this.s = e)
    }
    toUint8Array() {
        return AC(this),
        Ta(this.encoder)
    }
}
const jC = t=>{
    if (t.count > 0) {
        const e = t.diff * 2 + (t.count === 1 ? 0 : 1);
        dp(t.encoder, e),
        t.count > 1 && Bt(t.encoder, t.count - 2)
    }
}
;
class w6 {
    constructor() {
        this.encoder = new l5,
        this.s = 0,
        this.count = 0,
        this.diff = 0
    }
    write(e) {
        this.diff === e - this.s ? (this.s = e,
        this.count++) : (jC(this),
        this.count = 1,
        this.diff = e - this.s,
        this.s = e)
    }
    toUint8Array() {
        return jC(this),
        Ta(this.encoder)
    }
}
class JB {
    constructor() {
        this.sarr = [],
        this.s = "",
        this.lensE = new b2
    }
    write(e) {
        this.s += e,
        this.s.length > 19 && (this.sarr.push(this.s),
        this.s = ""),
        this.lensE.write(e.length)
    }
    toUint8Array() {
        const e = new l5;
        return this.sarr.push(this.s),
        this.s = "",
        gd(e, this.sarr.join("")),
        th(e, this.lensE.toUint8Array()),
        Ta(e)
    }
}
const eU = crypto.getRandomValues.bind(crypto)
  , tU = Math.random
  , qD = ()=>eU(new Uint32Array(1))[0]
  , nU = t=>t[Fo(tU() * t.length)]
  , rU = "10000000-1000-4000-8000" + -1e11
  , sU = ()=>rU.replace(/[018]/g, t=>(t ^ qD() & 15 >> t / 4).toString(16))
  , iU = Date.now
  , K8 = t=>new Promise(t);
Promise.all.bind(Promise);
const aU = t=>K8((e,n)=>setTimeout(e, t))
  , eue = t=>t instanceof Promise || t && t.then && t.catch && t.finally;
class oU {
    constructor(e, n) {
        this.left = e,
        this.right = n
    }
}
const eo = (t,e)=>new oU(t,e)
  , cU = typeof document < "u" ? document : {};
typeof DOMParser < "u" && new DOMParser;
const lU = t=>iB(t, (e,n)=>`${n}:${e};`).join("")
  , dU = t=>class {
    constructor(n) {
        this._ = n
    }
    destroy() {
        t(this._)
    }
}
  , uU = dU(clearTimeout)
  , l4 = (t,e)=>new uU(setTimeout(e, t))
  , t1 = Symbol
  , WD = t1()
  , GD = t1()
  , hU = t1()
  , fU = t1()
  , pU = t1()
  , KD = t1()
  , mU = t1()
  , YD = t1()
  , gU = t1()
  , yU = t=>{
    const e = [];
    let n = 0;
    for (; n < t.length; n++) {
        const r = t[n];
        r.constructor === String || r.constructor === Number || r.constructor === Object && e.push(JSON.stringify(r))
    }
    return e
}
  , CU = {
    [WD]: eo("font-weight", "bold"),
    [GD]: eo("font-weight", "normal"),
    [hU]: eo("color", "blue"),
    [pU]: eo("color", "green"),
    [fU]: eo("color", "grey"),
    [KD]: eo("color", "red"),
    [mU]: eo("color", "purple"),
    [YD]: eo("color", "orange"),
    [gU]: eo("color", "black")
}
  , bU = t=>{
    const e = []
      , n = []
      , r = vi();
    let s = []
      , i = 0;
    for (; i < t.length; i++) {
        const a = t[i]
          , o = CU[a];
        if (o !== void 0)
            r.set(o.left, o.right);
        else if (a.constructor === String || a.constructor === Number) {
            const l = lU(r);
            i > 0 || l.length > 0 ? (e.push("%c" + a),
            n.push(l)) : e.push(a)
        } else
            break
    }
    for (i > 0 && (s = n,
    s.unshift(e.join(""))); i < t.length; i++) {
        const a = t[i];
        a instanceof Symbol || s.push(a)
    }
    return s
}
  , vU = jB ? bU : yU
  , wU = (...t)=>{
    console.log(...vU(t)),
    kU.forEach(e=>e.print(t))
}
  , kU = tl()
  , QD = t=>({
    [Symbol.iterator]() {
        return this
    },
    next: t
})
  , xU = (t,e)=>QD(()=>{
    let n;
    do
        n = t.next();
    while (!n.done && !e(n.value));
    return n
}
)
  , k6 = (t,e)=>QD(()=>{
    const {done: n, value: r} = t.next();
    return {
        done: n,
        value: n ? void 0 : e(r)
    }
}
);
class hp {
    constructor(e, n) {
        this.clock = e,
        this.len = n
    }
}
class Xd {
    constructor() {
        this.clients = new Map
    }
}
const B1 = (t,e,n)=>e.clients.forEach((r,s)=>{
    const i = t.doc.store.clients.get(s);
    for (let a = 0; a < r.length; a++) {
        const o = r[a];
        uS(t, i, o.clock, o.len, n)
    }
}
)
  , DU = (t,e)=>{
    let n = 0
      , r = t.length - 1;
    for (; n <= r; ) {
        const s = Fo((n + r) / 2)
          , i = t[s]
          , a = i.clock;
        if (a <= e) {
            if (e < a + i.len)
                return s;
            n = s + 1
        } else
            r = s - 1
    }
    return null
}
  , Jd = (t,e)=>{
    const n = t.clients.get(e.client);
    return n !== void 0 && DU(n, e.clock) !== null
}
  , fp = t=>{
    t.clients.forEach(e=>{
        e.sort((s,i)=>s.clock - i.clock);
        let n, r;
        for (n = 1,
        r = 1; n < e.length; n++) {
            const s = e[r - 1]
              , i = e[n];
            s.clock + s.len >= i.clock ? s.len = yl(s.len, i.clock + i.len - s.clock) : (r < n && (e[r] = i),
            r++)
        }
        e.length = r
    }
    )
}
  , Y8 = t=>{
    const e = new Xd;
    for (let n = 0; n < t.length; n++)
        t[n].clients.forEach((r,s)=>{
            if (!e.clients.has(s)) {
                const i = r.slice();
                for (let a = n + 1; a < t.length; a++)
                    oB(i, t[a].clients.get(s) || []);
                e.clients.set(s, i)
            }
        }
        );
    return fp(e),
    e
}
  , C0 = (t,e,n,r)=>{
    e1(t.clients, e, ()=>[]).push(new hp(n,r))
}
  , XD = ()=>new Xd
  , JD = t=>{
    const e = XD();
    return t.clients.forEach((n,r)=>{
        const s = [];
        for (let i = 0; i < n.length; i++) {
            const a = n[i];
            if (a.deleted) {
                const o = a.id.clock;
                let l = a.length;
                if (i + 1 < n.length)
                    for (let d = n[i + 1]; i + 1 < n.length && d.deleted; d = n[++i + 1])
                        l += d.length;
                s.push(new hp(o,l))
            }
        }
        s.length > 0 && e.clients.set(r, s)
    }
    ),
    e
}
  , eu = (t,e)=>{
    Bt(t.restEncoder, e.clients.size),
    N1(e.clients.entries()).sort((n,r)=>r[0] - n[0]).forEach(([n,r])=>{
        t.resetDsCurVal(),
        Bt(t.restEncoder, n);
        const s = r.length;
        Bt(t.restEncoder, s);
        for (let i = 0; i < s; i++) {
            const a = r[i];
            t.writeDsClock(a.clock),
            t.writeDsLen(a.len)
        }
    }
    )
}
  , nh = t=>{
    const e = new Xd
      , n = Ft(t.restDecoder);
    for (let r = 0; r < n; r++) {
        t.resetDsCurVal();
        const s = Ft(t.restDecoder)
          , i = Ft(t.restDecoder);
        if (i > 0) {
            const a = e1(e.clients, s, ()=>[]);
            for (let o = 0; o < i; o++)
                a.push(new hp(t.readDsClock(),t.readDsLen()))
        }
    }
    return e
}
  , MC = (t,e,n)=>{
    const r = new Xd
      , s = Ft(t.restDecoder);
    for (let i = 0; i < s; i++) {
        t.resetDsCurVal();
        const a = Ft(t.restDecoder)
          , o = Ft(t.restDecoder)
          , l = n.clients.get(a) || []
          , d = or(n, a);
        for (let u = 0; u < o; u++) {
            const h = t.readDsClock()
              , f = h + t.readDsLen();
            if (h < d) {
                d < f && C0(r, a, d, f - d);
                let p = Va(l, h)
                  , m = l[p];
                for (!m.deleted && m.id.clock < h && (l.splice(p + 1, 0, m4(e, m, h - m.id.clock)),
                p++); p < l.length && (m = l[p++],
                m.id.clock < f); )
                    m.deleted || (f < m.id.clock + m.length && l.splice(p, 0, m4(e, m, f - m.id.clock)),
                    m.delete(e))
            } else
                C0(r, a, h, f - h)
        }
    }
    if (r.clients.size > 0) {
        const i = new rl;
        return Bt(i.restEncoder, 0),
        eu(i, r),
        i.toUint8Array()
    }
    return null
}
  , eS = qD;
class bl extends $D {
    constructor({guid: e=sU(), collectionid: n=null, gc: r=!0, gcFilter: s=()=>!0, meta: i=null, autoLoad: a=!1, shouldLoad: o=!0}={}) {
        super(),
        this.gc = r,
        this.gcFilter = s,
        this.clientID = eS(),
        this.guid = e,
        this.collectionid = n,
        this.share = new Map,
        this.store = new lS,
        this._transaction = null,
        this._transactionCleanups = [],
        this.subdocs = new Set,
        this._item = null,
        this.shouldLoad = o,
        this.autoLoad = a,
        this.meta = i,
        this.isLoaded = !1,
        this.isSynced = !1,
        this.whenLoaded = K8(d=>{
            this.on("load", ()=>{
                this.isLoaded = !0,
                d(this)
            }
            )
        }
        );
        const l = ()=>K8(d=>{
            const u = h=>{
                (h === void 0 || h === !0) && (this.off("sync", u),
                d())
            }
            ;
            this.on("sync", u)
        }
        );
        this.on("sync", d=>{
            d === !1 && this.isSynced && (this.whenSynced = l()),
            this.isSynced = d === void 0 || d === !0,
            this.isLoaded || this.emit("load", [])
        }
        ),
        this.whenSynced = l()
    }
    load() {
        const e = this._item;
        e !== null && !this.shouldLoad && wn(e.parent.doc, n=>{
            n.subdocsLoaded.add(this)
        }
        , null, !0),
        this.shouldLoad = !0
    }
    getSubdocs() {
        return this.subdocs
    }
    getSubdocGuids() {
        return new Set(N1(this.subdocs).map(e=>e.guid))
    }
    transact(e, n=null) {
        return wn(this, e, n)
    }
    get(e, n=Vr) {
        const r = e1(this.share, e, ()=>{
            const i = new n;
            return i._integrate(this, null),
            i
        }
        )
          , s = r.constructor;
        if (n !== Vr && s !== n)
            if (s === Vr) {
                const i = new n;
                i._map = r._map,
                r._map.forEach(a=>{
                    for (; a !== null; a = a.left)
                        a.parent = i
                }
                ),
                i._start = r._start;
                for (let a = i._start; a !== null; a = a.right)
                    a.parent = i;
                return i._length = r._length,
                this.share.set(e, i),
                i._integrate(this, null),
                i
            } else
                throw new Error(`Type with the name ${e} has already been defined with a different constructor`);
        return r
    }
    getArray(e="") {
        return this.get(e, Cd)
    }
    getText(e="") {
        return this.get(e, Ld)
    }
    getMap(e="") {
        return this.get(e, Td)
    }
    getXmlFragment(e="") {
        return this.get(e, No)
    }
    toJSON() {
        const e = {};
        return this.share.forEach((n,r)=>{
            e[r] = n.toJSON()
        }
        ),
        e
    }
    destroy() {
        N1(this.subdocs).forEach(n=>n.destroy());
        const e = this._item;
        if (e !== null) {
            this._item = null;
            const n = e.content;
            n.doc = new bl({
                guid: this.guid,
                ...n.opts,
                shouldLoad: !1
            }),
            n.doc._item = e,
            wn(e.parent.doc, r=>{
                const s = n.doc;
                e.deleted || r.subdocsAdded.add(s),
                r.subdocsRemoved.add(this)
            }
            , null, !0)
        }
        this.emit("destroyed", [!0]),
        this.emit("destroy", [this]),
        super.destroy()
    }
    on(e, n) {
        super.on(e, n)
    }
    off(e, n) {
        super.off(e, n)
    }
}
class tS {
    constructor(e) {
        this.restDecoder = e
    }
    resetDsCurVal() {}
    readDsClock() {
        return Ft(this.restDecoder)
    }
    readDsLen() {
        return Ft(this.restDecoder)
    }
}
class pp extends tS {
    readLeftID() {
        return kt(Ft(this.restDecoder), Ft(this.restDecoder))
    }
    readRightID() {
        return kt(Ft(this.restDecoder), Ft(this.restDecoder))
    }
    readClient() {
        return Ft(this.restDecoder)
    }
    readInfo() {
        return Md(this.restDecoder)
    }
    readString() {
        return md(this.restDecoder)
    }
    readParentInfo() {
        return Ft(this.restDecoder) === 1
    }
    readTypeRef() {
        return Ft(this.restDecoder)
    }
    readLen() {
        return Ft(this.restDecoder)
    }
    readAny() {
        return g0(this.restDecoder)
    }
    readBuf() {
        return HB(Us(this.restDecoder))
    }
    readJSON() {
        return JSON.parse(md(this.restDecoder))
    }
    readKey() {
        return md(this.restDecoder)
    }
}
class SU {
    constructor(e) {
        this.dsCurrVal = 0,
        this.restDecoder = e
    }
    resetDsCurVal() {
        this.dsCurrVal = 0
    }
    readDsClock() {
        return this.dsCurrVal += Ft(this.restDecoder),
        this.dsCurrVal
    }
    readDsLen() {
        const e = Ft(this.restDecoder) + 1;
        return this.dsCurrVal += e,
        e
    }
}
class nl extends SU {
    constructor(e) {
        super(e),
        this.keys = [],
        Ft(e),
        this.keyClockDecoder = new v6(Us(e)),
        this.clientDecoder = new C2(Us(e)),
        this.leftClockDecoder = new v6(Us(e)),
        this.rightClockDecoder = new v6(Us(e)),
        this.infoDecoder = new _C(Us(e),Md),
        this.stringDecoder = new BB(Us(e)),
        this.parentInfoDecoder = new _C(Us(e),Md),
        this.typeRefDecoder = new C2(Us(e)),
        this.lenDecoder = new C2(Us(e))
    }
    readLeftID() {
        return new yd(this.clientDecoder.read(),this.leftClockDecoder.read())
    }
    readRightID() {
        return new yd(this.clientDecoder.read(),this.rightClockDecoder.read())
    }
    readClient() {
        return this.clientDecoder.read()
    }
    readInfo() {
        return this.infoDecoder.read()
    }
    readString() {
        return this.stringDecoder.read()
    }
    readParentInfo() {
        return this.parentInfoDecoder.read() === 1
    }
    readTypeRef() {
        return this.typeRefDecoder.read()
    }
    readLen() {
        return this.lenDecoder.read()
    }
    readAny() {
        return g0(this.restDecoder)
    }
    readBuf() {
        return Us(this.restDecoder)
    }
    readJSON() {
        return g0(this.restDecoder)
    }
    readKey() {
        const e = this.keyClockDecoder.read();
        if (e < this.keys.length)
            return this.keys[e];
        {
            const n = this.stringDecoder.read();
            return this.keys.push(n),
            n
        }
    }
}
class nS {
    constructor() {
        this.restEncoder = eh()
    }
    toUint8Array() {
        return Ta(this.restEncoder)
    }
    resetDsCurVal() {}
    writeDsClock(e) {
        Bt(this.restEncoder, e)
    }
    writeDsLen(e) {
        Bt(this.restEncoder, e)
    }
}
class d5 extends nS {
    writeLeftID(e) {
        Bt(this.restEncoder, e.client),
        Bt(this.restEncoder, e.clock)
    }
    writeRightID(e) {
        Bt(this.restEncoder, e.client),
        Bt(this.restEncoder, e.clock)
    }
    writeClient(e) {
        Bt(this.restEncoder, e)
    }
    writeInfo(e) {
        W8(this.restEncoder, e)
    }
    writeString(e) {
        gd(this.restEncoder, e)
    }
    writeParentInfo(e) {
        Bt(this.restEncoder, e ? 1 : 0)
    }
    writeTypeRef(e) {
        Bt(this.restEncoder, e)
    }
    writeLen(e) {
        Bt(this.restEncoder, e)
    }
    writeAny(e) {
        y0(this.restEncoder, e)
    }
    writeBuf(e) {
        Hs(this.restEncoder, e)
    }
    writeJSON(e) {
        gd(this.restEncoder, JSON.stringify(e))
    }
    writeKey(e) {
        gd(this.restEncoder, e)
    }
}
class rS {
    constructor() {
        this.restEncoder = eh(),
        this.dsCurrVal = 0
    }
    toUint8Array() {
        return Ta(this.restEncoder)
    }
    resetDsCurVal() {
        this.dsCurrVal = 0
    }
    writeDsClock(e) {
        const n = e - this.dsCurrVal;
        this.dsCurrVal = e,
        Bt(this.restEncoder, n)
    }
    writeDsLen(e) {
        e === 0 && xi(),
        Bt(this.restEncoder, e - 1),
        this.dsCurrVal += e
    }
}
class rl extends rS {
    constructor() {
        super(),
        this.keyMap = new Map,
        this.keyClock = 0,
        this.keyClockEncoder = new w6,
        this.clientEncoder = new b2,
        this.leftClockEncoder = new w6,
        this.rightClockEncoder = new w6,
        this.infoEncoder = new EC(W8),
        this.stringEncoder = new JB,
        this.parentInfoEncoder = new EC(W8),
        this.typeRefEncoder = new b2,
        this.lenEncoder = new b2
    }
    toUint8Array() {
        const e = eh();
        return Bt(e, 0),
        Hs(e, this.keyClockEncoder.toUint8Array()),
        Hs(e, this.clientEncoder.toUint8Array()),
        Hs(e, this.leftClockEncoder.toUint8Array()),
        Hs(e, this.rightClockEncoder.toUint8Array()),
        Hs(e, Ta(this.infoEncoder)),
        Hs(e, this.stringEncoder.toUint8Array()),
        Hs(e, Ta(this.parentInfoEncoder)),
        Hs(e, this.typeRefEncoder.toUint8Array()),
        Hs(e, this.lenEncoder.toUint8Array()),
        th(e, Ta(this.restEncoder)),
        Ta(e)
    }
    writeLeftID(e) {
        this.clientEncoder.write(e.client),
        this.leftClockEncoder.write(e.clock)
    }
    writeRightID(e) {
        this.clientEncoder.write(e.client),
        this.rightClockEncoder.write(e.clock)
    }
    writeClient(e) {
        this.clientEncoder.write(e)
    }
    writeInfo(e) {
        this.infoEncoder.write(e)
    }
    writeString(e) {
        this.stringEncoder.write(e)
    }
    writeParentInfo(e) {
        this.parentInfoEncoder.write(e ? 1 : 0)
    }
    writeTypeRef(e) {
        this.typeRefEncoder.write(e)
    }
    writeLen(e) {
        this.lenEncoder.write(e)
    }
    writeAny(e) {
        y0(this.restEncoder, e)
    }
    writeBuf(e) {
        Hs(this.restEncoder, e)
    }
    writeJSON(e) {
        y0(this.restEncoder, e)
    }
    writeKey(e) {
        const n = this.keyMap.get(e);
        n === void 0 ? (this.keyClockEncoder.write(this.keyClock++),
        this.stringEncoder.write(e)) : this.keyClockEncoder.write(n)
    }
}
const _U = (t,e,n,r)=>{
    r = yl(r, e[0].id.clock);
    const s = Va(e, r);
    Bt(t.restEncoder, e.length - s),
    t.writeClient(n),
    Bt(t.restEncoder, r);
    const i = e[s];
    i.write(t, r - i.id.clock);
    for (let a = s + 1; a < e.length; a++)
        e[a].write(t, 0)
}
  , mp = (t,e,n)=>{
    const r = new Map;
    n.forEach((s,i)=>{
        or(e, i) > s && r.set(i, s)
    }
    ),
    u5(e).forEach((s,i)=>{
        n.has(i) || r.set(i, 0)
    }
    ),
    Bt(t.restEncoder, r.size),
    N1(r.entries()).sort((s,i)=>i[0] - s[0]).forEach(([s,i])=>{
        _U(t, e.clients.get(s), s, i)
    }
    )
}
  , IU = (t,e)=>{
    const n = vi()
      , r = Ft(t.restDecoder);
    for (let s = 0; s < r; s++) {
        const i = Ft(t.restDecoder)
          , a = new Array(i)
          , o = t.readClient();
        let l = Ft(t.restDecoder);
        n.set(o, {
            i: 0,
            refs: a
        });
        for (let d = 0; d < i; d++) {
            const u = t.readInfo();
            switch (X3 & u) {
            case 0:
                {
                    const h = t.readLen();
                    a[d] = new gi(kt(o, l),h),
                    l += h;
                    break
                }
            case 10:
                {
                    const h = Ft(t.restDecoder);
                    a[d] = new yi(kt(o, l),h),
                    l += h;
                    break
                }
            default:
                {
                    const h = (u & (_o | Xs)) === 0
                      , f = new yn(kt(o, l),null,(u & Xs) === Xs ? t.readLeftID() : null,null,(u & _o) === _o ? t.readRightID() : null,h ? t.readParentInfo() ? e.get(t.readString()) : t.readLeftID() : null,h && (u & m0) === m0 ? t.readString() : null,TS(t, u));
                    a[d] = f,
                    l += f.length
                }
            }
        }
    }
    return n
}
  , EU = (t,e,n)=>{
    const r = [];
    let s = N1(n.keys()).sort((p,m)=>p - m);
    if (s.length === 0)
        return null;
    const i = ()=>{
        if (s.length === 0)
            return null;
        let p = n.get(s[s.length - 1]);
        for (; p.refs.length === p.i; )
            if (s.pop(),
            s.length > 0)
                p = n.get(s[s.length - 1]);
            else
                return null;
        return p
    }
    ;
    let a = i();
    if (a === null && r.length === 0)
        return null;
    const o = new lS
      , l = new Map
      , d = (p,m)=>{
        const g = l.get(p);
        (g == null || g > m) && l.set(p, m)
    }
    ;
    let u = a.refs[a.i++];
    const h = new Map
      , f = ()=>{
        for (const p of r) {
            const m = p.id.client
              , g = n.get(m);
            g ? (g.i--,
            o.clients.set(m, g.refs.slice(g.i)),
            n.delete(m),
            g.i = 0,
            g.refs = []) : o.clients.set(m, [p]),
            s = s.filter(C=>C !== m)
        }
        r.length = 0
    }
    ;
    for (; ; ) {
        if (u.constructor !== yi) {
            const m = e1(h, u.id.client, ()=>or(e, u.id.client)) - u.id.clock;
            if (m < 0)
                r.push(u),
                d(u.id.client, u.id.clock - 1),
                f();
            else {
                const g = u.getMissing(t, e);
                if (g !== null) {
                    r.push(u);
                    const C = n.get(g) || {
                        refs: [],
                        i: 0
                    };
                    if (C.refs.length === C.i)
                        d(g, or(e, g)),
                        f();
                    else {
                        u = C.refs[C.i++];
                        continue
                    }
                } else
                    (m === 0 || m < u.length) && (u.integrate(t, m),
                    h.set(u.id.client, u.id.clock + u.length))
            }
        }
        if (r.length > 0)
            u = r.pop();
        else if (a !== null && a.i < a.refs.length)
            u = a.refs[a.i++];
        else {
            if (a = i(),
            a === null)
                break;
            u = a.refs[a.i++]
        }
    }
    if (o.clients.size > 0) {
        const p = new rl;
        return mp(p, o, new Map),
        Bt(p.restEncoder, 0),
        {
            missing: l,
            update: p.toUint8Array()
        }
    }
    return null
}
  , AU = (t,e)=>mp(t, e.doc.store, e.beforeState)
  , jU = (t,e,n,r=new nl(t))=>wn(e, s=>{
    s.local = !1;
    let i = !1;
    const a = s.doc
      , o = a.store
      , l = IU(r, a)
      , d = EU(s, o, l)
      , u = o.pendingStructs;
    if (u) {
        for (const [f,p] of u.missing)
            if (p < or(o, f)) {
                i = !0;
                break
            }
        if (d) {
            for (const [f,p] of d.missing) {
                const m = u.missing.get(f);
                (m == null || m > p) && u.missing.set(f, p)
            }
            u.update = d4([u.update, d.update])
        }
    } else
        o.pendingStructs = d;
    const h = MC(r, s, o);
    if (o.pendingDs) {
        const f = new nl(Cl(o.pendingDs));
        Ft(f.restDecoder);
        const p = MC(f, s, o);
        h && p ? o.pendingDs = d4([h, p]) : o.pendingDs = h || p
    } else
        o.pendingDs = h;
    if (i) {
        const f = o.pendingStructs.update;
        o.pendingStructs = null,
        sS(s.doc, f)
    }
}
, n, !1)
  , sS = (t,e,n,r=nl)=>{
    const s = Cl(e);
    jU(s, t, n, new r(s))
}
  , MU = (t,e,n)=>sS(t, e, n, pp)
  , TU = (t,e,n=new Map)=>{
    mp(t, e.store, n),
    eu(t, JD(e.store))
}
  , LU = (t,e=new Uint8Array([0]),n=new rl)=>{
    const r = iS(e);
    TU(n, t, r);
    const s = [n.toUint8Array()];
    if (t.store.pendingDs && s.push(t.store.pendingDs),
    t.store.pendingStructs && s.push(eH(t.store.pendingStructs.update, e)),
    s.length > 1) {
        if (n.constructor === d5)
            return XU(s.map((i,a)=>a === 0 ? i : nH(i)));
        if (n.constructor === rl)
            return d4(s)
    }
    return s[0]
}
  , x6 = (t,e)=>LU(t, e, new d5)
  , OU = t=>{
    const e = new Map
      , n = Ft(t.restDecoder);
    for (let r = 0; r < n; r++) {
        const s = Ft(t.restDecoder)
          , i = Ft(t.restDecoder);
        e.set(s, i)
    }
    return e
}
  , iS = t=>OU(new tS(Cl(t)))
  , aS = (t,e)=>(Bt(t.restEncoder, e.size),
N1(e.entries()).sort((n,r)=>r[0] - n[0]).forEach(([n,r])=>{
    Bt(t.restEncoder, n),
    Bt(t.restEncoder, r)
}
),
t)
  , RU = (t,e)=>aS(t, u5(e.store))
  , PU = (t,e=new rS)=>(t instanceof Map ? aS(e, t) : RU(e, t),
e.toUint8Array())
  , $U = t=>PU(t, new nS);
class FU {
    constructor() {
        this.l = []
    }
}
const TC = ()=>new FU
  , LC = (t,e)=>t.l.push(e)
  , OC = (t,e)=>{
    const n = t.l
      , r = n.length;
    t.l = n.filter(s=>e !== s),
    r === t.l.length && console.error("[yjs] Tried to remove event handler that doesn't exist.")
}
  , oS = (t,e,n)=>ap(t.l, [e, n]);
class yd {
    constructor(e, n) {
        this.client = e,
        this.clock = n
    }
}
const Xl = (t,e)=>t === e || t !== null && e !== null && t.client === e.client && t.clock === e.clock
  , kt = (t,e)=>new yd(t,e)
  , b0 = t=>{
    for (const [e,n] of t.doc.share.entries())
        if (n === t)
            return e;
    throw xi()
}
  , v0 = (t,e)=>{
    for (; e !== null; ) {
        if (e.parent === t)
            return !0;
        e = e.parent._item
    }
    return !1
}
;
class w0 {
    constructor(e, n, r, s=0) {
        this.type = e,
        this.tname = n,
        this.item = r,
        this.assoc = s
    }
}
const nue = t=>new w0(t.type == null ? null : kt(t.type.client, t.type.clock),t.tname || null,t.item == null ? null : kt(t.item.client, t.item.clock),t.assoc == null ? 0 : t.assoc);
class NU {
    constructor(e, n, r=0) {
        this.type = e,
        this.index = n,
        this.assoc = r
    }
}
const VU = (t,e,n=0)=>new NU(t,e,n)
  , Q5 = (t,e,n)=>{
    let r = null
      , s = null;
    return t._item === null ? s = b0(t) : r = kt(t._item.id.client, t._item.id.clock),
    new w0(r,s,e,n)
}
  , D6 = (t,e,n=0)=>{
    let r = t._start;
    if (n < 0) {
        if (e === 0)
            return Q5(t, null, n);
        e--
    }
    for (; r !== null; ) {
        if (!r.deleted && r.countable) {
            if (r.length > e)
                return Q5(t, kt(r.id.client, r.id.clock + e), n);
            e -= r.length
        }
        if (r.right === null && n < 0)
            return Q5(t, r.lastId, n);
        r = r.right
    }
    return Q5(t, null, n)
}
  , BU = (t,e)=>{
    const n = e.store
      , r = t.item
      , s = t.type
      , i = t.tname
      , a = t.assoc;
    let o = null
      , l = 0;
    if (r !== null) {
        if (or(n, r.client) <= r.clock)
            return null;
        const d = e9(n, r)
          , u = d.item;
        if (!(u instanceof yn))
            return null;
        if (o = u.parent,
        o._item === null || !o._item.deleted) {
            l = u.deleted || !u.countable ? 0 : d.diff + (a >= 0 ? 0 : 1);
            let h = u.left;
            for (; h !== null; )
                !h.deleted && h.countable && (l += h.length),
                h = h.left
        }
    } else {
        if (i !== null)
            o = e.get(i);
        else if (s !== null) {
            if (or(n, s.client) <= s.clock)
                return null;
            const {item: d} = e9(n, s);
            if (d instanceof yn && d.content instanceof Ga)
                o = d.content.type;
            else
                return null
        } else
            throw xi();
        a >= 0 ? l = o._length : l = 0
    }
    return VU(o, l, t.assoc)
}
  , rue = (t,e)=>t === e || t !== null && e !== null && t.tname === e.tname && Xl(t.item, e.item) && Xl(t.type, e.type) && t.assoc === e.assoc;
class gp {
    constructor(e, n) {
        this.ds = e,
        this.sv = n
    }
}
const cS = (t,e)=>new gp(t,e)
  , UU = t=>cS(JD(t.store), u5(t.store))
  , Kl = (t,e)=>e === void 0 ? !t.deleted : e.sv.has(t.id.client) && (e.sv.get(t.id.client) || 0) > t.id.clock && !Jd(e.ds, t.id)
  , Q8 = (t,e)=>{
    const n = e1(t.meta, Q8, tl)
      , r = t.doc.store;
    n.has(e) || (e.sv.forEach((s,i)=>{
        s < or(r, i) && Ms(t, kt(i, s))
    }
    ),
    B1(t, e.ds, s=>{}
    ),
    n.add(e))
}
;
class lS {
    constructor() {
        this.clients = new Map,
        this.pendingStructs = null,
        this.pendingDs = null
    }
}
const u5 = t=>{
    const e = new Map;
    return t.clients.forEach((n,r)=>{
        const s = n[n.length - 1];
        e.set(r, s.id.clock + s.length)
    }
    ),
    e
}
  , or = (t,e)=>{
    const n = t.clients.get(e);
    if (n === void 0)
        return 0;
    const r = n[n.length - 1];
    return r.id.clock + r.length
}
  , dS = (t,e)=>{
    let n = t.clients.get(e.id.client);
    if (n === void 0)
        n = [],
        t.clients.set(e.id.client, n);
    else {
        const r = n[n.length - 1];
        if (r.id.clock + r.length !== e.id.clock)
            throw xi()
    }
    n.push(e)
}
  , Va = (t,e)=>{
    let n = 0
      , r = t.length - 1
      , s = t[r]
      , i = s.id.clock;
    if (i === e)
        return r;
    let a = Fo(e / (i + s.length - 1) * r);
    for (; n <= r; ) {
        if (s = t[a],
        i = s.id.clock,
        i <= e) {
            if (e < i + s.length)
                return a;
            n = a + 1
        } else
            r = a - 1;
        a = Fo((n + r) / 2)
    }
    throw xi()
}
  , HU = (t,e)=>{
    const n = t.clients.get(e.client);
    return n[Va(n, e.clock)]
}
  , v2 = HU
  , X8 = (t,e,n)=>{
    const r = Va(e, n)
      , s = e[r];
    return s.id.clock < n && s instanceof yn ? (e.splice(r + 1, 0, m4(t, s, n - s.id.clock)),
    r + 1) : r
}
  , Ms = (t,e)=>{
    const n = t.doc.store.clients.get(e.client);
    return n[X8(t, n, e.clock)]
}
  , RC = (t,e,n)=>{
    const r = e.clients.get(n.client)
      , s = Va(r, n.clock)
      , i = r[s];
    return n.clock !== i.id.clock + i.length - 1 && i.constructor !== gi && r.splice(s + 1, 0, m4(t, i, n.clock - i.id.clock + 1)),
    i
}
  , zU = (t,e,n)=>{
    const r = t.clients.get(e.id.client);
    r[Va(r, e.id.clock)] = n
}
  , uS = (t,e,n,r,s)=>{
    if (r === 0)
        return;
    const i = n + r;
    let a = X8(t, e, n), o;
    do
        o = e[a++],
        i < o.id.clock + o.length && X8(t, e, i),
        s(o);
    while (a < e.length && e[a].id.clock < i)
}
;
let ZU = class {
    constructor(e, n, r) {
        this.doc = e,
        this.deleteSet = new Xd,
        this.beforeState = u5(e.store),
        this.afterState = new Map,
        this.changed = new Map,
        this.changedParentTypes = new Map,
        this._mergeStructs = [],
        this.origin = n,
        this.meta = new Map,
        this.local = r,
        this.subdocsAdded = new Set,
        this.subdocsRemoved = new Set,
        this.subdocsLoaded = new Set,
        this._needFormattingCleanup = !1
    }
}
;
const PC = (t,e)=>e.deleteSet.clients.size === 0 && !aB(e.afterState, (n,r)=>e.beforeState.get(r) !== n) ? !1 : (fp(e.deleteSet),
AU(t, e),
eu(t, e.deleteSet),
!0)
  , $C = (t,e,n)=>{
    const r = e._item;
    (r === null || r.id.clock < (t.beforeState.get(r.id.client) || 0) && !r.deleted) && e1(t.changed, e, tl).add(n)
}
  , w2 = (t,e)=>{
    let n = t[e]
      , r = t[e - 1]
      , s = e;
    for (; s > 0; n = r,
    r = t[--s - 1]) {
        if (r.deleted === n.deleted && r.constructor === n.constructor && r.mergeWith(n)) {
            n instanceof yn && n.parentSub !== null && n.parent._map.get(n.parentSub) === n && n.parent._map.set(n.parentSub, r);
            continue
        }
        break
    }
    const i = e - s;
    return i && t.splice(e + 1 - i, i),
    i
}
  , qU = (t,e,n)=>{
    for (const [r,s] of t.clients.entries()) {
        const i = e.clients.get(r);
        for (let a = s.length - 1; a >= 0; a--) {
            const o = s[a]
              , l = o.clock + o.len;
            for (let d = Va(i, o.clock), u = i[d]; d < i.length && u.id.clock < l; u = i[++d]) {
                const h = i[d];
                if (o.clock + o.len <= h.id.clock)
                    break;
                h instanceof yn && h.deleted && !h.keep && n(h) && h.gc(e, !1)
            }
        }
    }
}
  , WU = (t,e)=>{
    t.clients.forEach((n,r)=>{
        const s = e.clients.get(r);
        for (let i = n.length - 1; i >= 0; i--) {
            const a = n[i]
              , o = Q3(s.length - 1, 1 + Va(s, a.clock + a.len - 1));
            for (let l = o, d = s[l]; l > 0 && d.id.clock >= a.clock; d = s[l])
                l -= 1 + w2(s, l)
        }
    }
    )
}
  , hS = (t,e)=>{
    if (e < t.length) {
        const n = t[e]
          , r = n.doc
          , s = r.store
          , i = n.deleteSet
          , a = n._mergeStructs;
        try {
            fp(i),
            n.afterState = u5(n.doc.store),
            r.emit("beforeObserverCalls", [n, r]);
            const o = [];
            n.changed.forEach((l,d)=>o.push(()=>{
                (d._item === null || !d._item.deleted) && d._callObserver(n, l)
            }
            )),
            o.push(()=>{
                n.changedParentTypes.forEach((l,d)=>{
                    d._dEH.l.length > 0 && (d._item === null || !d._item.deleted) && (l = l.filter(u=>u.target._item === null || !u.target._item.deleted),
                    l.forEach(u=>{
                        u.currentTarget = d,
                        u._path = null
                    }
                    ),
                    l.sort((u,h)=>u.path.length - h.path.length),
                    oS(d._dEH, l, n))
                }
                )
            }
            ),
            o.push(()=>r.emit("afterTransaction", [n, r])),
            ap(o, []),
            n._needFormattingCleanup && mH(n)
        } finally {
            r.gc && qU(i, s, r.gcFilter),
            WU(i, s),
            n.afterState.forEach((u,h)=>{
                const f = n.beforeState.get(h) || 0;
                if (f !== u) {
                    const p = s.clients.get(h)
                      , m = yl(Va(p, f), 1);
                    for (let g = p.length - 1; g >= m; )
                        g -= 1 + w2(p, g)
                }
            }
            );
            for (let u = a.length - 1; u >= 0; u--) {
                const {client: h, clock: f} = a[u].id
                  , p = s.clients.get(h)
                  , m = Va(p, f);
                m + 1 < p.length && w2(p, m + 1) > 1 || m > 0 && w2(p, m)
            }
            if (!n.local && n.afterState.get(r.clientID) !== n.beforeState.get(r.clientID) && (wU(YD, WD, "[yjs] ", GD, KD, "Changed the client-id because another client seems to be using it."),
            r.clientID = eS()),
            r.emit("afterTransactionCleanup", [n, r]),
            r._observers.has("update")) {
                const u = new d5;
                PC(u, n) && r.emit("update", [u.toUint8Array(), n.origin, r, n])
            }
            if (r._observers.has("updateV2")) {
                const u = new rl;
                PC(u, n) && r.emit("updateV2", [u.toUint8Array(), n.origin, r, n])
            }
            const {subdocsAdded: o, subdocsLoaded: l, subdocsRemoved: d} = n;
            (o.size > 0 || d.size > 0 || l.size > 0) && (o.forEach(u=>{
                u.clientID = r.clientID,
                u.collectionid == null && (u.collectionid = r.collectionid),
                r.subdocs.add(u)
            }
            ),
            d.forEach(u=>r.subdocs.delete(u)),
            r.emit("subdocs", [{
                loaded: l,
                added: o,
                removed: d
            }, r, n]),
            d.forEach(u=>u.destroy())),
            t.length <= e + 1 ? (r._transactionCleanups = [],
            r.emit("afterAllTransactions", [r, t])) : hS(t, e + 1)
        }
    }
}
  , wn = (t,e,n=null,r=!0)=>{
    const s = t._transactionCleanups;
    let i = !1
      , a = null;
    t._transaction === null && (i = !0,
    t._transaction = new ZU(t,n,r),
    s.push(t._transaction),
    s.length === 1 && t.emit("beforeAllTransactions", [t]),
    t.emit("beforeTransaction", [t._transaction, t]));
    try {
        a = e(t._transaction)
    } finally {
        if (i) {
            const o = t._transaction === s[0];
            t._transaction = null,
            o && hS(s, 0)
        }
    }
    return a
}
;
class GU {
    constructor(e, n) {
        this.insertions = n,
        this.deletions = e,
        this.meta = new Map
    }
}
const FC = (t,e,n)=>{
    B1(t, n.deletions, r=>{
        r instanceof yn && e.scope.some(s=>v0(s, r)) && xp(r, !1)
    }
    )
}
  , NC = (t,e,n)=>{
    let r = null
      , s = null;
    const i = t.doc
      , a = t.scope;
    if (wn(i, o=>{
        for (; e.length > 0 && r === null; ) {
            const l = i.store
              , d = e.pop()
              , u = new Set
              , h = [];
            let f = !1;
            B1(o, d.insertions, p=>{
                if (p instanceof yn) {
                    if (p.redone !== null) {
                        let {item: m, diff: g} = e9(l, p.id);
                        g > 0 && (m = Ms(o, kt(m.id.client, m.id.clock + g))),
                        p = m
                    }
                    !p.deleted && a.some(m=>v0(m, p)) && h.push(p)
                }
            }
            ),
            B1(o, d.deletions, p=>{
                p instanceof yn && a.some(m=>v0(m, p)) && !Jd(d.insertions, p.id) && u.add(p)
            }
            ),
            u.forEach(p=>{
                f = MS(o, p, u, d.insertions, t.ignoreRemoteMapChanges, t) !== null || f
            }
            );
            for (let p = h.length - 1; p >= 0; p--) {
                const m = h[p];
                t.deleteFilter(m) && (m.delete(o),
                f = !0)
            }
            r = f ? d : null
        }
        o.changed.forEach((l,d)=>{
            l.has(null) && d._searchMarker && (d._searchMarker.length = 0)
        }
        ),
        s = o
    }
    , t),
    r != null) {
        const o = s.changedParentTypes;
        t.emit("stack-item-popped", [{
            stackItem: r,
            type: n,
            changedParentTypes: o
        }, t])
    }
    return r
}
;
class KU extends $D {
    constructor(e, {captureTimeout: n=500, captureTransaction: r=l=>!0, deleteFilter: s=()=>!0, trackedOrigins: i=new Set([null]), ignoreRemoteMapChanges: a=!1, doc: o=H8(e) ? e[0].doc : e.doc}={}) {
        super(),
        this.scope = [],
        this.addToScope(e),
        this.deleteFilter = s,
        i.add(this),
        this.trackedOrigins = i,
        this.captureTransaction = r,
        this.undoStack = [],
        this.redoStack = [],
        this.undoing = !1,
        this.redoing = !1,
        this.doc = o,
        this.lastChange = 0,
        this.ignoreRemoteMapChanges = a,
        this.captureTimeout = n,
        this.afterTransactionHandler = l=>{
            if (!this.captureTransaction(l) || !this.scope.some(C=>l.changedParentTypes.has(C)) || !this.trackedOrigins.has(l.origin) && (!l.origin || !this.trackedOrigins.has(l.origin.constructor)))
                return;
            const d = this.undoing
              , u = this.redoing
              , h = d ? this.redoStack : this.undoStack;
            d ? this.stopCapturing() : u || this.clear(!1, !0);
            const f = new Xd;
            l.afterState.forEach((C,b)=>{
                const k = l.beforeState.get(b) || 0
                  , S = C - k;
                S > 0 && C0(f, b, k, S)
            }
            );
            const p = iU();
            let m = !1;
            if (this.lastChange > 0 && p - this.lastChange < this.captureTimeout && h.length > 0 && !d && !u) {
                const C = h[h.length - 1];
                C.deletions = Y8([C.deletions, l.deleteSet]),
                C.insertions = Y8([C.insertions, f])
            } else
                h.push(new GU(l.deleteSet,f)),
                m = !0;
            !d && !u && (this.lastChange = p),
            B1(l, l.deleteSet, C=>{
                C instanceof yn && this.scope.some(b=>v0(b, C)) && xp(C, !0)
            }
            );
            const g = [{
                stackItem: h[h.length - 1],
                origin: l.origin,
                type: d ? "redo" : "undo",
                changedParentTypes: l.changedParentTypes
            }, this];
            m ? this.emit("stack-item-added", g) : this.emit("stack-item-updated", g)
        }
        ,
        this.doc.on("afterTransaction", this.afterTransactionHandler),
        this.doc.on("destroy", ()=>{
            this.destroy()
        }
        )
    }
    addToScope(e) {
        e = H8(e) ? e : [e],
        e.forEach(n=>{
            this.scope.every(r=>r !== n) && this.scope.push(n)
        }
        )
    }
    addTrackedOrigin(e) {
        this.trackedOrigins.add(e)
    }
    removeTrackedOrigin(e) {
        this.trackedOrigins.delete(e)
    }
    clear(e=!0, n=!0) {
        (e && this.canUndo() || n && this.canRedo()) && this.doc.transact(r=>{
            e && (this.undoStack.forEach(s=>FC(r, this, s)),
            this.undoStack = []),
            n && (this.redoStack.forEach(s=>FC(r, this, s)),
            this.redoStack = []),
            this.emit("stack-cleared", [{
                undoStackCleared: e,
                redoStackCleared: n
            }])
        }
        )
    }
    stopCapturing() {
        this.lastChange = 0
    }
    undo() {
        this.undoing = !0;
        let e;
        try {
            e = NC(this, this.undoStack, "undo")
        } finally {
            this.undoing = !1
        }
        return e
    }
    redo() {
        this.redoing = !0;
        let e;
        try {
            e = NC(this, this.redoStack, "redo")
        } finally {
            this.redoing = !1
        }
        return e
    }
    canUndo() {
        return this.undoStack.length > 0
    }
    canRedo() {
        return this.redoStack.length > 0
    }
    destroy() {
        this.trackedOrigins.delete(this),
        this.doc.off("afterTransaction", this.afterTransactionHandler),
        super.destroy()
    }
}
function *YU(t) {
    const e = Ft(t.restDecoder);
    for (let n = 0; n < e; n++) {
        const r = Ft(t.restDecoder)
          , s = t.readClient();
        let i = Ft(t.restDecoder);
        for (let a = 0; a < r; a++) {
            const o = t.readInfo();
            if (o === 10) {
                const l = Ft(t.restDecoder);
                yield new yi(kt(s, i),l),
                i += l
            } else if (X3 & o) {
                const l = (o & (_o | Xs)) === 0
                  , d = new yn(kt(s, i),null,(o & Xs) === Xs ? t.readLeftID() : null,null,(o & _o) === _o ? t.readRightID() : null,l ? t.readParentInfo() ? t.readString() : t.readLeftID() : null,l && (o & m0) === m0 ? t.readString() : null,TS(t, o));
                yield d,
                i += d.length
            } else {
                const l = t.readLen();
                yield new gi(kt(s, i),l),
                i += l
            }
        }
    }
}
class rh {
    constructor(e, n) {
        this.gen = YU(e),
        this.curr = null,
        this.done = !1,
        this.filterSkips = n,
        this.next()
    }
    next() {
        do
            this.curr = this.gen.next().value || null;
        while (this.filterSkips && this.curr !== null && this.curr.constructor === yi);
        return this.curr
    }
}
const iue = t=>QU(t, pp)
  , QU = (t,e=nl)=>{
    const n = []
      , r = new e(Cl(t))
      , s = new rh(r,!1);
    for (let i = s.curr; i !== null; i = s.next())
        n.push(i);
    return {
        structs: n,
        ds: nh(r)
    }
}
;
class yp {
    constructor(e) {
        this.currClient = 0,
        this.startClock = 0,
        this.written = 0,
        this.encoder = e,
        this.clientStructs = []
    }
}
const XU = t=>d4(t, pp, d5)
  , JU = (t,e)=>{
    if (t.constructor === gi) {
        const {client: n, clock: r} = t.id;
        return new gi(kt(n, r + e),t.length - e)
    } else if (t.constructor === yi) {
        const {client: n, clock: r} = t.id;
        return new yi(kt(n, r + e),t.length - e)
    } else {
        const n = t
          , {client: r, clock: s} = n.id;
        return new yn(kt(r, s + e),null,kt(r, s + e - 1),null,n.rightOrigin,n.parent,n.parentSub,n.content.splice(e))
    }
}
  , d4 = (t,e=nl,n=rl)=>{
    if (t.length === 1)
        return t[0];
    const r = t.map(u=>new e(Cl(u)));
    let s = r.map(u=>new rh(u,!0))
      , i = null;
    const a = new n
      , o = new yp(a);
    for (; s = s.filter(f=>f.curr !== null),
    s.sort((f,p)=>{
        if (f.curr.id.client === p.curr.id.client) {
            const m = f.curr.id.clock - p.curr.id.clock;
            return m === 0 ? f.curr.constructor === p.curr.constructor ? 0 : f.curr.constructor === yi ? 1 : -1 : m
        } else
            return p.curr.id.client - f.curr.id.client
    }
    ),
    s.length !== 0; ) {
        const u = s[0]
          , h = u.curr.id.client;
        if (i !== null) {
            let f = u.curr
              , p = !1;
            for (; f !== null && f.id.clock + f.length <= i.struct.id.clock + i.struct.length && f.id.client >= i.struct.id.client; )
                f = u.next(),
                p = !0;
            if (f === null || f.id.client !== h || p && f.id.clock > i.struct.id.clock + i.struct.length)
                continue;
            if (h !== i.struct.id.client)
                C1(o, i.struct, i.offset),
                i = {
                    struct: f,
                    offset: 0
                },
                u.next();
            else if (i.struct.id.clock + i.struct.length < f.id.clock)
                if (i.struct.constructor === yi)
                    i.struct.length = f.id.clock + f.length - i.struct.id.clock;
                else {
                    C1(o, i.struct, i.offset);
                    const m = f.id.clock - i.struct.id.clock - i.struct.length;
                    i = {
                        struct: new yi(kt(h, i.struct.id.clock + i.struct.length),m),
                        offset: 0
                    }
                }
            else {
                const m = i.struct.id.clock + i.struct.length - f.id.clock;
                m > 0 && (i.struct.constructor === yi ? i.struct.length -= m : f = JU(f, m)),
                i.struct.mergeWith(f) || (C1(o, i.struct, i.offset),
                i = {
                    struct: f,
                    offset: 0
                },
                u.next())
            }
        } else
            i = {
                struct: u.curr,
                offset: 0
            },
            u.next();
        for (let f = u.curr; f !== null && f.id.client === h && f.id.clock === i.struct.id.clock + i.struct.length && f.constructor !== yi; f = u.next())
            C1(o, i.struct, i.offset),
            i = {
                struct: f,
                offset: 0
            }
    }
    i !== null && (C1(o, i.struct, i.offset),
    i = null),
    Cp(o);
    const l = r.map(u=>nh(u))
      , d = Y8(l);
    return eu(a, d),
    a.toUint8Array()
}
  , eH = (t,e,n=nl,r=rl)=>{
    const s = iS(e)
      , i = new r
      , a = new yp(i)
      , o = new n(Cl(t))
      , l = new rh(o,!1);
    for (; l.curr; ) {
        const u = l.curr
          , h = u.id.client
          , f = s.get(h) || 0;
        if (l.curr.constructor === yi) {
            l.next();
            continue
        }
        if (u.id.clock + u.length > f)
            for (C1(a, u, yl(f - u.id.clock, 0)),
            l.next(); l.curr && l.curr.id.client === h; )
                C1(a, l.curr, 0),
                l.next();
        else
            for (; l.curr && l.curr.id.client === h && l.curr.id.clock + l.curr.length <= f; )
                l.next()
    }
    Cp(a);
    const d = nh(o);
    return eu(i, d),
    i.toUint8Array()
}
  , fS = t=>{
    t.written > 0 && (t.clientStructs.push({
        written: t.written,
        restEncoder: Ta(t.encoder.restEncoder)
    }),
    t.encoder.restEncoder = eh(),
    t.written = 0)
}
  , C1 = (t,e,n)=>{
    t.written > 0 && t.currClient !== e.id.client && fS(t),
    t.written === 0 && (t.currClient = e.id.client,
    t.encoder.writeClient(e.id.client),
    Bt(t.encoder.restEncoder, e.id.clock + n)),
    e.write(t.encoder, n),
    t.written++
}
  , Cp = t=>{
    fS(t);
    const e = t.encoder.restEncoder;
    Bt(e, t.clientStructs.length);
    for (let n = 0; n < t.clientStructs.length; n++) {
        const r = t.clientStructs[n];
        Bt(e, r.written),
        th(e, r.restEncoder)
    }
}
  , tH = (t,e,n,r)=>{
    const s = new n(Cl(t))
      , i = new rh(s,!1)
      , a = new r
      , o = new yp(a);
    for (let d = i.curr; d !== null; d = i.next())
        C1(o, e(d), 0);
    Cp(o);
    const l = nh(s);
    return eu(a, l),
    a.toUint8Array()
}
  , nH = t=>tH(t, DB, nl, d5)
  , VC = "You must not compute changes after the event-handler fired.";
class sh {
    constructor(e, n) {
        this.target = e,
        this.currentTarget = e,
        this.transaction = n,
        this._changes = null,
        this._keys = null,
        this._delta = null,
        this._path = null
    }
    get path() {
        return this._path || (this._path = rH(this.currentTarget, this.target))
    }
    deletes(e) {
        return Jd(this.transaction.deleteSet, e.id)
    }
    get keys() {
        if (this._keys === null) {
            if (this.transaction.doc._transactionCleanups.length === 0)
                throw V1(VC);
            const e = new Map
              , n = this.target;
            this.transaction.changed.get(n).forEach(s=>{
                if (s !== null) {
                    const i = n._map.get(s);
                    let a, o;
                    if (this.adds(i)) {
                        let l = i.left;
                        for (; l !== null && this.adds(l); )
                            l = l.left;
                        if (this.deletes(i))
                            if (l !== null && this.deletes(l))
                                a = "delete",
                                o = g6(l.content.getContent());
                            else
                                return;
                        else
                            l !== null && this.deletes(l) ? (a = "update",
                            o = g6(l.content.getContent())) : (a = "add",
                            o = void 0)
                    } else if (this.deletes(i))
                        a = "delete",
                        o = g6(i.content.getContent());
                    else
                        return;
                    e.set(s, {
                        action: a,
                        oldValue: o
                    })
                }
            }
            ),
            this._keys = e
        }
        return this._keys
    }
    get delta() {
        return this.changes.delta
    }
    adds(e) {
        return e.id.clock >= (this.transaction.beforeState.get(e.id.client) || 0)
    }
    get changes() {
        let e = this._changes;
        if (e === null) {
            if (this.transaction.doc._transactionCleanups.length === 0)
                throw V1(VC);
            const n = this.target
              , r = tl()
              , s = tl()
              , i = [];
            if (e = {
                added: r,
                deleted: s,
                delta: i,
                keys: this.keys
            },
            this.transaction.changed.get(n).has(null)) {
                let o = null;
                const l = ()=>{
                    o && i.push(o)
                }
                ;
                for (let d = n._start; d !== null; d = d.right)
                    d.deleted ? this.deletes(d) && !this.adds(d) && ((o === null || o.delete === void 0) && (l(),
                    o = {
                        delete: 0
                    }),
                    o.delete += d.length,
                    s.add(d)) : this.adds(d) ? ((o === null || o.insert === void 0) && (l(),
                    o = {
                        insert: []
                    }),
                    o.insert = o.insert.concat(d.content.getContent()),
                    r.add(d)) : ((o === null || o.retain === void 0) && (l(),
                    o = {
                        retain: 0
                    }),
                    o.retain += d.length);
                o !== null && o.retain === void 0 && l()
            }
            this._changes = e
        }
        return e
    }
}
const rH = (t,e)=>{
    const n = [];
    for (; e._item !== null && e !== t; ) {
        if (e._item.parentSub !== null)
            n.unshift(e._item.parentSub);
        else {
            let r = 0
              , s = e._item.parent._start;
            for (; s !== e._item && s !== null; )
                s.deleted || r++,
                s = s.right;
            n.unshift(r)
        }
        e = e._item.parent
    }
    return n
}
  , pS = 80;
let bp = 0;
class sH {
    constructor(e, n) {
        e.marker = !0,
        this.p = e,
        this.index = n,
        this.timestamp = bp++
    }
}
const iH = t=>{
    t.timestamp = bp++
}
  , mS = (t,e,n)=>{
    t.p.marker = !1,
    t.p = e,
    e.marker = !0,
    t.index = n,
    t.timestamp = bp++
}
  , aH = (t,e,n)=>{
    if (t.length >= pS) {
        const r = t.reduce((s,i)=>s.timestamp < i.timestamp ? s : i);
        return mS(r, e, n),
        r
    } else {
        const r = new sH(e,n);
        return t.push(r),
        r
    }
}
  , ih = (t,e)=>{
    if (t._start === null || e === 0 || t._searchMarker === null)
        return null;
    const n = t._searchMarker.length === 0 ? null : t._searchMarker.reduce((i,a)=>y2(e - i.index) < y2(e - a.index) ? i : a);
    let r = t._start
      , s = 0;
    for (n !== null && (r = n.p,
    s = n.index,
    iH(n)); r.right !== null && s < e; ) {
        if (!r.deleted && r.countable) {
            if (e < s + r.length)
                break;
            s += r.length
        }
        r = r.right
    }
    for (; r.left !== null && s > e; )
        r = r.left,
        !r.deleted && r.countable && (s -= r.length);
    for (; r.left !== null && r.left.id.client === r.id.client && r.left.id.clock + r.left.length === r.id.clock; )
        r = r.left,
        !r.deleted && r.countable && (s -= r.length);
    return n !== null && y2(n.index - s) < r.parent.length / pS ? (mS(n, r, s),
    n) : aH(t._searchMarker, r, s)
}
  , k0 = (t,e,n)=>{
    for (let r = t.length - 1; r >= 0; r--) {
        const s = t[r];
        if (n > 0) {
            let i = s.p;
            for (i.marker = !1; i && (i.deleted || !i.countable); )
                i = i.left,
                i && !i.deleted && i.countable && (s.index -= i.length);
            if (i === null || i.marker === !0) {
                t.splice(r, 1);
                continue
            }
            s.p = i,
            i.marker = !0
        }
        (e < s.index || n > 0 && e === s.index) && (s.index = yl(e, s.index + n))
    }
}
  , ah = (t,e,n)=>{
    const r = t
      , s = e.changedParentTypes;
    for (; e1(s, t, ()=>[]).push(n),
    t._item !== null; )
        t = t._item.parent;
    oS(r._eH, n, e)
}
;
class Vr {
    constructor() {
        this._item = null,
        this._map = new Map,
        this._start = null,
        this.doc = null,
        this._length = 0,
        this._eH = TC(),
        this._dEH = TC(),
        this._searchMarker = null
    }
    get parent() {
        return this._item ? this._item.parent : null
    }
    _integrate(e, n) {
        this.doc = e,
        this._item = n
    }
    _copy() {
        throw Zi()
    }
    clone() {
        throw Zi()
    }
    _write(e) {}
    get _first() {
        let e = this._start;
        for (; e !== null && e.deleted; )
            e = e.right;
        return e
    }
    _callObserver(e, n) {
        !e.local && this._searchMarker && (this._searchMarker.length = 0)
    }
    observe(e) {
        LC(this._eH, e)
    }
    observeDeep(e) {
        LC(this._dEH, e)
    }
    unobserve(e) {
        OC(this._eH, e)
    }
    unobserveDeep(e) {
        OC(this._dEH, e)
    }
    toJSON() {}
}
const gS = (t,e,n)=>{
    e < 0 && (e = t._length + e),
    n < 0 && (n = t._length + n);
    let r = n - e;
    const s = [];
    let i = t._start;
    for (; i !== null && r > 0; ) {
        if (i.countable && !i.deleted) {
            const a = i.content.getContent();
            if (a.length <= e)
                e -= a.length;
            else {
                for (let o = e; o < a.length && r > 0; o++)
                    s.push(a[o]),
                    r--;
                e = 0
            }
        }
        i = i.right
    }
    return s
}
  , yS = t=>{
    const e = [];
    let n = t._start;
    for (; n !== null; ) {
        if (n.countable && !n.deleted) {
            const r = n.content.getContent();
            for (let s = 0; s < r.length; s++)
                e.push(r[s])
        }
        n = n.right
    }
    return e
}
  , CS = (t,e)=>{
    const n = [];
    let r = t._start;
    for (; r !== null; ) {
        if (r.countable && Kl(r, e)) {
            const s = r.content.getContent();
            for (let i = 0; i < s.length; i++)
                n.push(s[i])
        }
        r = r.right
    }
    return n
}
  , x0 = (t,e)=>{
    let n = 0
      , r = t._start;
    for (; r !== null; ) {
        if (r.countable && !r.deleted) {
            const s = r.content.getContent();
            for (let i = 0; i < s.length; i++)
                e(s[i], n++, t)
        }
        r = r.right
    }
}
  , bS = (t,e)=>{
    const n = [];
    return x0(t, (r,s)=>{
        n.push(e(r, s, t))
    }
    ),
    n
}
  , oH = t=>{
    let e = t._start
      , n = null
      , r = 0;
    return {
        [Symbol.iterator]() {
            return this
        },
        next: ()=>{
            if (n === null) {
                for (; e !== null && e.deleted; )
                    e = e.right;
                if (e === null)
                    return {
                        done: !0,
                        value: void 0
                    };
                n = e.content.getContent(),
                r = 0,
                e = e.right
            }
            const s = n[r++];
            return n.length <= r && (n = null),
            {
                done: !1,
                value: s
            }
        }
    }
}
  , vS = (t,e)=>{
    const n = ih(t, e);
    let r = t._start;
    for (n !== null && (r = n.p,
    e -= n.index); r !== null; r = r.right)
        if (!r.deleted && r.countable) {
            if (e < r.length)
                return r.content.getContent()[e];
            e -= r.length
        }
}
  , u4 = (t,e,n,r)=>{
    let s = n;
    const i = t.doc
      , a = i.clientID
      , o = i.store
      , l = n === null ? e._start : n.right;
    let d = [];
    const u = ()=>{
        d.length > 0 && (s = new yn(kt(a, or(o, a)),s,s && s.lastId,l,l && l.id,e,null,new sl(d)),
        s.integrate(t, 0),
        d = [])
    }
    ;
    r.forEach(h=>{
        if (h === null)
            d.push(h);
        else
            switch (h.constructor) {
            case Number:
            case Object:
            case Boolean:
            case Array:
            case String:
                d.push(h);
                break;
            default:
                switch (u(),
                h.constructor) {
                case Uint8Array:
                case ArrayBuffer:
                    s = new yn(kt(a, or(o, a)),s,s && s.lastId,l,l && l.id,e,null,new h5(new Uint8Array(h))),
                    s.integrate(t, 0);
                    break;
                case bl:
                    s = new yn(kt(a, or(o, a)),s,s && s.lastId,l,l && l.id,e,null,new f5(h)),
                    s.integrate(t, 0);
                    break;
                default:
                    if (h instanceof Vr)
                        s = new yn(kt(a, or(o, a)),s,s && s.lastId,l,l && l.id,e,null,new Ga(h)),
                        s.integrate(t, 0);
                    else
                        throw new Error("Unexpected content type in insert operation")
                }
            }
    }
    ),
    u()
}
  , wS = V1("Length exceeded!")
  , kS = (t,e,n,r)=>{
    if (n > e._length)
        throw wS;
    if (n === 0)
        return e._searchMarker && k0(e._searchMarker, n, r.length),
        u4(t, e, null, r);
    const s = n
      , i = ih(e, n);
    let a = e._start;
    for (i !== null && (a = i.p,
    n -= i.index,
    n === 0 && (a = a.prev,
    n += a && a.countable && !a.deleted ? a.length : 0)); a !== null; a = a.right)
        if (!a.deleted && a.countable) {
            if (n <= a.length) {
                n < a.length && Ms(t, kt(a.id.client, a.id.clock + n));
                break
            }
            n -= a.length
        }
    return e._searchMarker && k0(e._searchMarker, s, r.length),
    u4(t, e, a, r)
}
  , cH = (t,e,n)=>{
    let s = (e._searchMarker || []).reduce((i,a)=>a.index > i.index ? a : i, {
        index: 0,
        p: e._start
    }).p;
    if (s)
        for (; s.right; )
            s = s.right;
    return u4(t, e, s, n)
}
  , xS = (t,e,n,r)=>{
    if (r === 0)
        return;
    const s = n
      , i = r
      , a = ih(e, n);
    let o = e._start;
    for (a !== null && (o = a.p,
    n -= a.index); o !== null && n > 0; o = o.right)
        !o.deleted && o.countable && (n < o.length && Ms(t, kt(o.id.client, o.id.clock + n)),
        n -= o.length);
    for (; r > 0 && o !== null; )
        o.deleted || (r < o.length && Ms(t, kt(o.id.client, o.id.clock + r)),
        o.delete(t),
        r -= o.length),
        o = o.right;
    if (r > 0)
        throw wS;
    e._searchMarker && k0(e._searchMarker, s, -i + r)
}
  , h4 = (t,e,n)=>{
    const r = e._map.get(n);
    r !== void 0 && r.delete(t)
}
  , vp = (t,e,n,r)=>{
    const s = e._map.get(n) || null
      , i = t.doc
      , a = i.clientID;
    let o;
    if (r == null)
        o = new sl([r]);
    else
        switch (r.constructor) {
        case Number:
        case Object:
        case Boolean:
        case Array:
        case String:
            o = new sl([r]);
            break;
        case Uint8Array:
            o = new h5(r);
            break;
        case bl:
            o = new f5(r);
            break;
        default:
            if (r instanceof Vr)
                o = new Ga(r);
            else
                throw new Error("Unexpected content type")
        }
    new yn(kt(a, or(i.store, a)),s,s && s.lastId,null,null,e,n,o).integrate(t, 0)
}
  , wp = (t,e)=>{
    const n = t._map.get(e);
    return n !== void 0 && !n.deleted ? n.content.getContent()[n.length - 1] : void 0
}
  , DS = t=>{
    const e = {};
    return t._map.forEach((n,r)=>{
        n.deleted || (e[r] = n.content.getContent()[n.length - 1])
    }
    ),
    e
}
  , SS = (t,e)=>{
    const n = t._map.get(e);
    return n !== void 0 && !n.deleted
}
  , X5 = t=>xU(t.entries(), e=>!e[1].deleted);
class lH extends sh {
    constructor(e, n) {
        super(e, n),
        this._transaction = n
    }
}
class Cd extends Vr {
    constructor() {
        super(),
        this._prelimContent = [],
        this._searchMarker = []
    }
    static from(e) {
        const n = new Cd;
        return n.push(e),
        n
    }
    _integrate(e, n) {
        super._integrate(e, n),
        this.insert(0, this._prelimContent),
        this._prelimContent = null
    }
    _copy() {
        return new Cd
    }
    clone() {
        const e = new Cd;
        return e.insert(0, this.toArray().map(n=>n instanceof Vr ? n.clone() : n)),
        e
    }
    get length() {
        return this._prelimContent === null ? this._length : this._prelimContent.length
    }
    _callObserver(e, n) {
        super._callObserver(e, n),
        ah(this, e, new lH(this,e))
    }
    insert(e, n) {
        this.doc !== null ? wn(this.doc, r=>{
            kS(r, this, e, n)
        }
        ) : this._prelimContent.splice(e, 0, ...n)
    }
    push(e) {
        this.doc !== null ? wn(this.doc, n=>{
            cH(n, this, e)
        }
        ) : this._prelimContent.push(...e)
    }
    unshift(e) {
        this.insert(0, e)
    }
    delete(e, n=1) {
        this.doc !== null ? wn(this.doc, r=>{
            xS(r, this, e, n)
        }
        ) : this._prelimContent.splice(e, n)
    }
    get(e) {
        return vS(this, e)
    }
    toArray() {
        return yS(this)
    }
    slice(e=0, n=this.length) {
        return gS(this, e, n)
    }
    toJSON() {
        return this.map(e=>e instanceof Vr ? e.toJSON() : e)
    }
    map(e) {
        return bS(this, e)
    }
    forEach(e) {
        x0(this, e)
    }
    [Symbol.iterator]() {
        return oH(this)
    }
    _write(e) {
        e.writeTypeRef(LH)
    }
}
const dH = t=>new Cd;
class uH extends sh {
    constructor(e, n, r) {
        super(e, n),
        this.keysChanged = r
    }
}
class Td extends Vr {
    constructor(e) {
        super(),
        this._prelimContent = null,
        e === void 0 ? this._prelimContent = new Map : this._prelimContent = new Map(e)
    }
    _integrate(e, n) {
        super._integrate(e, n),
        this._prelimContent.forEach((r,s)=>{
            this.set(s, r)
        }
        ),
        this._prelimContent = null
    }
    _copy() {
        return new Td
    }
    clone() {
        const e = new Td;
        return this.forEach((n,r)=>{
            e.set(r, n instanceof Vr ? n.clone() : n)
        }
        ),
        e
    }
    _callObserver(e, n) {
        ah(this, e, new uH(this,e,n))
    }
    toJSON() {
        const e = {};
        return this._map.forEach((n,r)=>{
            if (!n.deleted) {
                const s = n.content.getContent()[n.length - 1];
                e[r] = s instanceof Vr ? s.toJSON() : s
            }
        }
        ),
        e
    }
    get size() {
        return [...X5(this._map)].length
    }
    keys() {
        return k6(X5(this._map), e=>e[0])
    }
    values() {
        return k6(X5(this._map), e=>e[1].content.getContent()[e[1].length - 1])
    }
    entries() {
        return k6(X5(this._map), e=>[e[0], e[1].content.getContent()[e[1].length - 1]])
    }
    forEach(e) {
        this._map.forEach((n,r)=>{
            n.deleted || e(n.content.getContent()[n.length - 1], r, this)
        }
        )
    }
    [Symbol.iterator]() {
        return this.entries()
    }
    delete(e) {
        this.doc !== null ? wn(this.doc, n=>{
            h4(n, this, e)
        }
        ) : this._prelimContent.delete(e)
    }
    set(e, n) {
        return this.doc !== null ? wn(this.doc, r=>{
            vp(r, this, e, n)
        }
        ) : this._prelimContent.set(e, n),
        n
    }
    get(e) {
        return wp(this, e)
    }
    has(e) {
        return SS(this, e)
    }
    clear() {
        this.doc !== null ? wn(this.doc, e=>{
            this.forEach(function(n, r, s) {
                h4(e, s, r)
            })
        }
        ) : this._prelimContent.clear()
    }
    _write(e) {
        e.writeTypeRef(OH)
    }
}
const hH = t=>new Td
  , k1 = (t,e)=>t === e || typeof t == "object" && typeof e == "object" && t && e && xB(t, e);
class J8 {
    constructor(e, n, r, s) {
        this.left = e,
        this.right = n,
        this.index = r,
        this.currentAttributes = s
    }
    forward() {
        switch (this.right === null && xi(),
        this.right.content.constructor) {
        case pr:
            this.right.deleted || tu(this.currentAttributes, this.right.content);
            break;
        default:
            this.right.deleted || (this.index += this.right.length);
            break
        }
        this.left = this.right,
        this.right = this.right.right
    }
}
const BC = (t,e,n)=>{
    for (; e.right !== null && n > 0; ) {
        switch (e.right.content.constructor) {
        case pr:
            e.right.deleted || tu(e.currentAttributes, e.right.content);
            break;
        default:
            e.right.deleted || (n < e.right.length && Ms(t, kt(e.right.id.client, e.right.id.clock + n)),
            e.index += e.right.length,
            n -= e.right.length);
            break
        }
        e.left = e.right,
        e.right = e.right.right
    }
    return e
}
  , J5 = (t,e,n)=>{
    const r = new Map
      , s = ih(e, n);
    if (s) {
        const i = new J8(s.p.left,s.p,s.index,r);
        return BC(t, i, n - s.index)
    } else {
        const i = new J8(null,e._start,0,r);
        return BC(t, i, n)
    }
}
  , _S = (t,e,n,r)=>{
    for (; n.right !== null && (n.right.deleted === !0 || n.right.content.constructor === pr && k1(r.get(n.right.content.key), n.right.content.value)); )
        n.right.deleted || r.delete(n.right.content.key),
        n.forward();
    const s = t.doc
      , i = s.clientID;
    r.forEach((a,o)=>{
        const l = n.left
          , d = n.right
          , u = new yn(kt(i, or(s.store, i)),l,l && l.lastId,d,d && d.id,e,null,new pr(o,a));
        u.integrate(t, 0),
        n.right = u,
        n.forward()
    }
    )
}
  , tu = (t,e)=>{
    const {key: n, value: r} = e;
    r === null ? t.delete(n) : t.set(n, r)
}
  , IS = (t,e)=>{
    for (; t.right !== null; ) {
        if (!(t.right.deleted || t.right.content.constructor === pr && k1(e[t.right.content.key] || null, t.right.content.value)))
            break;
        t.forward()
    }
}
  , ES = (t,e,n,r)=>{
    const s = t.doc
      , i = s.clientID
      , a = new Map;
    for (const o in r) {
        const l = r[o]
          , d = n.currentAttributes.get(o) || null;
        if (!k1(d, l)) {
            a.set(o, d);
            const {left: u, right: h} = n;
            n.right = new yn(kt(i, or(s.store, i)),u,u && u.lastId,h,h && h.id,e,null,new pr(o,l)),
            n.right.integrate(t, 0),
            n.forward()
        }
    }
    return a
}
  , S6 = (t,e,n,r,s)=>{
    n.currentAttributes.forEach((f,p)=>{
        s[p] === void 0 && (s[p] = null)
    }
    );
    const i = t.doc
      , a = i.clientID;
    IS(n, s);
    const o = ES(t, e, n, s)
      , l = r.constructor === String ? new Ji(r) : r instanceof Vr ? new Ga(r) : new vl(r);
    let {left: d, right: u, index: h} = n;
    e._searchMarker && k0(e._searchMarker, n.index, l.getLength()),
    u = new yn(kt(a, or(i.store, a)),d,d && d.lastId,u,u && u.id,e,null,l),
    u.integrate(t, 0),
    n.right = u,
    n.index = h,
    n.forward(),
    _S(t, e, n, o)
}
  , UC = (t,e,n,r,s)=>{
    const i = t.doc
      , a = i.clientID;
    IS(n, s);
    const o = ES(t, e, n, s);
    e: for (; n.right !== null && (r > 0 || o.size > 0 && (n.right.deleted || n.right.content.constructor === pr)); ) {
        if (!n.right.deleted)
            switch (n.right.content.constructor) {
            case pr:
                {
                    const {key: l, value: d} = n.right.content
                      , u = s[l];
                    if (u !== void 0) {
                        if (k1(u, d))
                            o.delete(l);
                        else {
                            if (r === 0)
                                break e;
                            o.set(l, d)
                        }
                        n.right.delete(t)
                    } else
                        n.currentAttributes.set(l, d);
                    break
                }
            default:
                r < n.right.length && Ms(t, kt(n.right.id.client, n.right.id.clock + r)),
                r -= n.right.length;
                break
            }
        n.forward()
    }
    if (r > 0) {
        let l = "";
        for (; r > 0; r--)
            l += `
`;
        n.right = new yn(kt(a, or(i.store, a)),n.left,n.left && n.left.lastId,n.right,n.right && n.right.id,e,null,new Ji(l)),
        n.right.integrate(t, 0),
        n.forward()
    }
    _S(t, e, n, o)
}
  , AS = (t,e,n,r,s)=>{
    let i = e;
    const a = vi();
    for (; i && (!i.countable || i.deleted); ) {
        if (!i.deleted && i.content.constructor === pr) {
            const d = i.content;
            a.set(d.key, d)
        }
        i = i.right
    }
    let o = 0
      , l = !1;
    for (; e !== i; ) {
        if (n === e && (l = !0),
        !e.deleted) {
            const d = e.content;
            switch (d.constructor) {
            case pr:
                {
                    const {key: u, value: h} = d
                      , f = r.get(u) || null;
                    (a.get(u) !== d || f === h) && (e.delete(t),
                    o++,
                    !l && (s.get(u) || null) === h && f !== h && (f === null ? s.delete(u) : s.set(u, f))),
                    !l && !e.deleted && tu(s, d);
                    break
                }
            }
        }
        e = e.right
    }
    return o
}
  , fH = (t,e)=>{
    for (; e && e.right && (e.right.deleted || !e.right.countable); )
        e = e.right;
    const n = new Set;
    for (; e && (e.deleted || !e.countable); ) {
        if (!e.deleted && e.content.constructor === pr) {
            const r = e.content.key;
            n.has(r) ? e.delete(t) : n.add(r)
        }
        e = e.left
    }
}
  , pH = t=>{
    let e = 0;
    return wn(t.doc, n=>{
        let r = t._start
          , s = t._start
          , i = vi();
        const a = U8(i);
        for (; s; ) {
            if (s.deleted === !1)
                switch (s.content.constructor) {
                case pr:
                    tu(a, s.content);
                    break;
                default:
                    e += AS(n, r, s, i, a),
                    i = U8(a),
                    r = s;
                    break
                }
            s = s.right
        }
    }
    ),
    e
}
  , mH = t=>{
    const e = new Set
      , n = t.doc;
    for (const [r,s] of t.afterState.entries()) {
        const i = t.beforeState.get(r) || 0;
        s !== i && uS(t, n.store.clients.get(r), i, s, a=>{
            !a.deleted && a.content.constructor === pr && a.constructor !== gi && e.add(a.parent)
        }
        )
    }
    wn(n, r=>{
        B1(t, t.deleteSet, s=>{
            if (s instanceof gi || !s.parent._hasFormatting || e.has(s.parent))
                return;
            const i = s.parent;
            s.content.constructor === pr ? e.add(i) : fH(r, s)
        }
        );
        for (const s of e)
            pH(s)
    }
    )
}
  , HC = (t,e,n)=>{
    const r = n
      , s = U8(e.currentAttributes)
      , i = e.right;
    for (; n > 0 && e.right !== null; ) {
        if (e.right.deleted === !1)
            switch (e.right.content.constructor) {
            case Ga:
            case vl:
            case Ji:
                n < e.right.length && Ms(t, kt(e.right.id.client, e.right.id.clock + n)),
                n -= e.right.length,
                e.right.delete(t);
                break
            }
        e.forward()
    }
    i && AS(t, i, e.right, s, e.currentAttributes);
    const a = (e.left || e.right).parent;
    return a._searchMarker && k0(a._searchMarker, e.index, -r + n),
    e
}
;
class gH extends sh {
    constructor(e, n, r) {
        super(e, n),
        this.childListChanged = !1,
        this.keysChanged = new Set,
        r.forEach(s=>{
            s === null ? this.childListChanged = !0 : this.keysChanged.add(s)
        }
        )
    }
    get changes() {
        if (this._changes === null) {
            const e = {
                keys: this.keys,
                delta: this.delta,
                added: new Set,
                deleted: new Set
            };
            this._changes = e
        }
        return this._changes
    }
    get delta() {
        if (this._delta === null) {
            const e = this.target.doc
              , n = [];
            wn(e, r=>{
                const s = new Map
                  , i = new Map;
                let a = this.target._start
                  , o = null;
                const l = {};
                let d = ""
                  , u = 0
                  , h = 0;
                const f = ()=>{
                    if (o !== null) {
                        let p = null;
                        switch (o) {
                        case "delete":
                            h > 0 && (p = {
                                delete: h
                            }),
                            h = 0;
                            break;
                        case "insert":
                            (typeof d == "object" || d.length > 0) && (p = {
                                insert: d
                            },
                            s.size > 0 && (p.attributes = {},
                            s.forEach((m,g)=>{
                                m !== null && (p.attributes[g] = m)
                            }
                            ))),
                            d = "";
                            break;
                        case "retain":
                            u > 0 && (p = {
                                retain: u
                            },
                            wB(l) || (p.attributes = bB({}, l))),
                            u = 0;
                            break
                        }
                        p && n.push(p),
                        o = null
                    }
                }
                ;
                for (; a !== null; ) {
                    switch (a.content.constructor) {
                    case Ga:
                    case vl:
                        this.adds(a) ? this.deletes(a) || (f(),
                        o = "insert",
                        d = a.content.getContent()[0],
                        f()) : this.deletes(a) ? (o !== "delete" && (f(),
                        o = "delete"),
                        h += 1) : a.deleted || (o !== "retain" && (f(),
                        o = "retain"),
                        u += 1);
                        break;
                    case Ji:
                        this.adds(a) ? this.deletes(a) || (o !== "insert" && (f(),
                        o = "insert"),
                        d += a.content.str) : this.deletes(a) ? (o !== "delete" && (f(),
                        o = "delete"),
                        h += a.length) : a.deleted || (o !== "retain" && (f(),
                        o = "retain"),
                        u += a.length);
                        break;
                    case pr:
                        {
                            const {key: p, value: m} = a.content;
                            if (this.adds(a)) {
                                if (!this.deletes(a)) {
                                    const g = s.get(p) || null;
                                    k1(g, m) ? m !== null && a.delete(r) : (o === "retain" && f(),
                                    k1(m, i.get(p) || null) ? delete l[p] : l[p] = m)
                                }
                            } else if (this.deletes(a)) {
                                i.set(p, m);
                                const g = s.get(p) || null;
                                k1(g, m) || (o === "retain" && f(),
                                l[p] = g)
                            } else if (!a.deleted) {
                                i.set(p, m);
                                const g = l[p];
                                g !== void 0 && (k1(g, m) ? g !== null && a.delete(r) : (o === "retain" && f(),
                                m === null ? delete l[p] : l[p] = m))
                            }
                            a.deleted || (o === "insert" && f(),
                            tu(s, a.content));
                            break
                        }
                    }
                    a = a.right
                }
                for (f(); n.length > 0; ) {
                    const p = n[n.length - 1];
                    if (p.retain !== void 0 && p.attributes === void 0)
                        n.pop();
                    else
                        break
                }
            }
            ),
            this._delta = n
        }
        return this._delta
    }
}
class Ld extends Vr {
    constructor(e) {
        super(),
        this._pending = e !== void 0 ? [()=>this.insert(0, e)] : [],
        this._searchMarker = [],
        this._hasFormatting = !1
    }
    get length() {
        return this._length
    }
    _integrate(e, n) {
        super._integrate(e, n);
        try {
            this._pending.forEach(r=>r())
        } catch (r) {
            console.error(r)
        }
        this._pending = null
    }
    _copy() {
        return new Ld
    }
    clone() {
        const e = new Ld;
        return e.applyDelta(this.toDelta()),
        e
    }
    _callObserver(e, n) {
        super._callObserver(e, n);
        const r = new gH(this,e,n);
        ah(this, e, r),
        !e.local && this._hasFormatting && (e._needFormattingCleanup = !0)
    }
    toString() {
        let e = ""
          , n = this._start;
        for (; n !== null; )
            !n.deleted && n.countable && n.content.constructor === Ji && (e += n.content.str),
            n = n.right;
        return e
    }
    toJSON() {
        return this.toString()
    }
    applyDelta(e, {sanitize: n=!0}={}) {
        this.doc !== null ? wn(this.doc, r=>{
            const s = new J8(null,this._start,0,new Map);
            for (let i = 0; i < e.length; i++) {
                const a = e[i];
                if (a.insert !== void 0) {
                    const o = !n && typeof a.insert == "string" && i === e.length - 1 && s.right === null && a.insert.slice(-1) === `
` ? a.insert.slice(0, -1) : a.insert;
                    (typeof o != "string" || o.length > 0) && S6(r, this, s, o, a.attributes || {})
                } else
                    a.retain !== void 0 ? UC(r, this, s, a.retain, a.attributes || {}) : a.delete !== void 0 && HC(r, s, a.delete)
            }
        }
        ) : this._pending.push(()=>this.applyDelta(e))
    }
    toDelta(e, n, r) {
        const s = []
          , i = new Map
          , a = this.doc;
        let o = ""
          , l = this._start;
        function d() {
            if (o.length > 0) {
                const h = {};
                let f = !1;
                i.forEach((m,g)=>{
                    f = !0,
                    h[g] = m
                }
                );
                const p = {
                    insert: o
                };
                f && (p.attributes = h),
                s.push(p),
                o = ""
            }
        }
        const u = ()=>{
            for (; l !== null; ) {
                if (Kl(l, e) || n !== void 0 && Kl(l, n))
                    switch (l.content.constructor) {
                    case Ji:
                        {
                            const h = i.get("ychange");
                            e !== void 0 && !Kl(l, e) ? (h === void 0 || h.user !== l.id.client || h.type !== "removed") && (d(),
                            i.set("ychange", r ? r("removed", l.id) : {
                                type: "removed"
                            })) : n !== void 0 && !Kl(l, n) ? (h === void 0 || h.user !== l.id.client || h.type !== "added") && (d(),
                            i.set("ychange", r ? r("added", l.id) : {
                                type: "added"
                            })) : h !== void 0 && (d(),
                            i.delete("ychange")),
                            o += l.content.str;
                            break
                        }
                    case Ga:
                    case vl:
                        {
                            d();
                            const h = {
                                insert: l.content.getContent()[0]
                            };
                            if (i.size > 0) {
                                const f = {};
                                h.attributes = f,
                                i.forEach((p,m)=>{
                                    f[m] = p
                                }
                                )
                            }
                            s.push(h);
                            break
                        }
                    case pr:
                        Kl(l, e) && (d(),
                        tu(i, l.content));
                        break
                    }
                l = l.right
            }
            d()
        }
        ;
        return e || n ? wn(a, h=>{
            e && Q8(h, e),
            n && Q8(h, n),
            u()
        }
        , "cleanup") : u(),
        s
    }
    insert(e, n, r) {
        if (n.length <= 0)
            return;
        const s = this.doc;
        s !== null ? wn(s, i=>{
            const a = J5(i, this, e);
            r || (r = {},
            a.currentAttributes.forEach((o,l)=>{
                r[l] = o
            }
            )),
            S6(i, this, a, n, r)
        }
        ) : this._pending.push(()=>this.insert(e, n, r))
    }
    insertEmbed(e, n, r={}) {
        const s = this.doc;
        s !== null ? wn(s, i=>{
            const a = J5(i, this, e);
            S6(i, this, a, n, r)
        }
        ) : this._pending.push(()=>this.insertEmbed(e, n, r))
    }
    delete(e, n) {
        if (n === 0)
            return;
        const r = this.doc;
        r !== null ? wn(r, s=>{
            HC(s, J5(s, this, e), n)
        }
        ) : this._pending.push(()=>this.delete(e, n))
    }
    format(e, n, r) {
        if (n === 0)
            return;
        const s = this.doc;
        s !== null ? wn(s, i=>{
            const a = J5(i, this, e);
            a.right !== null && UC(i, this, a, n, r)
        }
        ) : this._pending.push(()=>this.format(e, n, r))
    }
    removeAttribute(e) {
        this.doc !== null ? wn(this.doc, n=>{
            h4(n, this, e)
        }
        ) : this._pending.push(()=>this.removeAttribute(e))
    }
    setAttribute(e, n) {
        this.doc !== null ? wn(this.doc, r=>{
            vp(r, this, e, n)
        }
        ) : this._pending.push(()=>this.setAttribute(e, n))
    }
    getAttribute(e) {
        return wp(this, e)
    }
    getAttributes() {
        return DS(this)
    }
    _write(e) {
        e.writeTypeRef(RH)
    }
}
const yH = t=>new Ld;
class _6 {
    constructor(e, n=()=>!0) {
        this._filter = n,
        this._root = e,
        this._currentNode = e._start,
        this._firstCall = !0
    }
    [Symbol.iterator]() {
        return this
    }
    next() {
        let e = this._currentNode
          , n = e && e.content && e.content.type;
        if (e !== null && (!this._firstCall || e.deleted || !this._filter(n)))
            do
                if (n = e.content.type,
                !e.deleted && (n.constructor === Gs || n.constructor === No) && n._start !== null)
                    e = n._start;
                else
                    for (; e !== null; )
                        if (e.right !== null) {
                            e = e.right;
                            break
                        } else
                            e.parent === this._root ? e = null : e = e.parent._item;
            while (e !== null && (e.deleted || !this._filter(e.content.type)));
        return this._firstCall = !1,
        e === null ? {
            value: void 0,
            done: !0
        } : (this._currentNode = e,
        {
            value: e.content.type,
            done: !1
        })
    }
}
class No extends Vr {
    constructor() {
        super(),
        this._prelimContent = []
    }
    get firstChild() {
        const e = this._first;
        return e ? e.content.getContent()[0] : null
    }
    _integrate(e, n) {
        super._integrate(e, n),
        this.insert(0, this._prelimContent),
        this._prelimContent = null
    }
    _copy() {
        return new No
    }
    clone() {
        const e = new No;
        return e.insert(0, this.toArray().map(n=>n instanceof Vr ? n.clone() : n)),
        e
    }
    get length() {
        return this._prelimContent === null ? this._length : this._prelimContent.length
    }
    createTreeWalker(e) {
        return new _6(this,e)
    }
    querySelector(e) {
        e = e.toUpperCase();
        const r = new _6(this,s=>s.nodeName && s.nodeName.toUpperCase() === e).next();
        return r.done ? null : r.value
    }
    querySelectorAll(e) {
        return e = e.toUpperCase(),
        N1(new _6(this,n=>n.nodeName && n.nodeName.toUpperCase() === e))
    }
    _callObserver(e, n) {
        ah(this, e, new vH(this,n,e))
    }
    toString() {
        return bS(this, e=>e.toString()).join("")
    }
    toJSON() {
        return this.toString()
    }
    toDOM(e=document, n={}, r) {
        const s = e.createDocumentFragment();
        return r !== void 0 && r._createAssociation(s, this),
        x0(this, i=>{
            s.insertBefore(i.toDOM(e, n, r), null)
        }
        ),
        s
    }
    insert(e, n) {
        this.doc !== null ? wn(this.doc, r=>{
            kS(r, this, e, n)
        }
        ) : this._prelimContent.splice(e, 0, ...n)
    }
    insertAfter(e, n) {
        if (this.doc !== null)
            wn(this.doc, r=>{
                const s = e && e instanceof Vr ? e._item : e;
                u4(r, this, s, n)
            }
            );
        else {
            const r = this._prelimContent
              , s = e === null ? 0 : r.findIndex(i=>i === e) + 1;
            if (s === 0 && e !== null)
                throw V1("Reference item not found");
            r.splice(s, 0, ...n)
        }
    }
    delete(e, n=1) {
        this.doc !== null ? wn(this.doc, r=>{
            xS(r, this, e, n)
        }
        ) : this._prelimContent.splice(e, n)
    }
    toArray() {
        return yS(this)
    }
    push(e) {
        this.insert(this.length, e)
    }
    unshift(e) {
        this.insert(0, e)
    }
    get(e) {
        return vS(this, e)
    }
    slice(e=0, n=this.length) {
        return gS(this, e, n)
    }
    forEach(e) {
        x0(this, e)
    }
    _write(e) {
        e.writeTypeRef($H)
    }
}
const CH = t=>new No;
class Gs extends No {
    constructor(e="UNDEFINED") {
        super(),
        this.nodeName = e,
        this._prelimAttrs = new Map
    }
    get nextSibling() {
        const e = this._item ? this._item.next : null;
        return e ? e.content.type : null
    }
    get prevSibling() {
        const e = this._item ? this._item.prev : null;
        return e ? e.content.type : null
    }
    _integrate(e, n) {
        super._integrate(e, n),
        this._prelimAttrs.forEach((r,s)=>{
            this.setAttribute(s, r)
        }
        ),
        this._prelimAttrs = null
    }
    _copy() {
        return new Gs(this.nodeName)
    }
    clone() {
        const e = new Gs(this.nodeName)
          , n = this.getAttributes();
        return VD(n, (r,s)=>{
            typeof r == "string" && e.setAttribute(s, r)
        }
        ),
        e.insert(0, this.toArray().map(r=>r instanceof Vr ? r.clone() : r)),
        e
    }
    toString() {
        const e = this.getAttributes()
          , n = []
          , r = [];
        for (const o in e)
            r.push(o);
        r.sort();
        const s = r.length;
        for (let o = 0; o < s; o++) {
            const l = r[o];
            n.push(l + '="' + e[l] + '"')
        }
        const i = this.nodeName.toLocaleLowerCase()
          , a = n.length > 0 ? " " + n.join(" ") : "";
        return `<${i}${a}>${super.toString()}</${i}>`
    }
    removeAttribute(e) {
        this.doc !== null ? wn(this.doc, n=>{
            h4(n, this, e)
        }
        ) : this._prelimAttrs.delete(e)
    }
    setAttribute(e, n) {
        this.doc !== null ? wn(this.doc, r=>{
            vp(r, this, e, n)
        }
        ) : this._prelimAttrs.set(e, n)
    }
    getAttribute(e) {
        return wp(this, e)
    }
    hasAttribute(e) {
        return SS(this, e)
    }
    getAttributes() {
        return DS(this)
    }
    toDOM(e=document, n={}, r) {
        const s = e.createElement(this.nodeName)
          , i = this.getAttributes();
        for (const a in i) {
            const o = i[a];
            typeof o == "string" && s.setAttribute(a, o)
        }
        return x0(this, a=>{
            s.appendChild(a.toDOM(e, n, r))
        }
        ),
        r !== void 0 && r._createAssociation(s, this),
        s
    }
    _write(e) {
        e.writeTypeRef(PH),
        e.writeKey(this.nodeName)
    }
}
const bH = t=>new Gs(t.readKey());
class vH extends sh {
    constructor(e, n, r) {
        super(e, r),
        this.childListChanged = !1,
        this.attributesChanged = new Set,
        n.forEach(s=>{
            s === null ? this.childListChanged = !0 : this.attributesChanged.add(s)
        }
        )
    }
}
class f4 extends Td {
    constructor(e) {
        super(),
        this.hookName = e
    }
    _copy() {
        return new f4(this.hookName)
    }
    clone() {
        const e = new f4(this.hookName);
        return this.forEach((n,r)=>{
            e.set(r, n)
        }
        ),
        e
    }
    toDOM(e=document, n={}, r) {
        const s = n[this.hookName];
        let i;
        return s !== void 0 ? i = s.createDom(this) : i = document.createElement(this.hookName),
        i.setAttribute("data-yjs-hook", this.hookName),
        r !== void 0 && r._createAssociation(i, this),
        i
    }
    _write(e) {
        e.writeTypeRef(FH),
        e.writeKey(this.hookName)
    }
}
const wH = t=>new f4(t.readKey());
class Js extends Ld {
    get nextSibling() {
        const e = this._item ? this._item.next : null;
        return e ? e.content.type : null
    }
    get prevSibling() {
        const e = this._item ? this._item.prev : null;
        return e ? e.content.type : null
    }
    _copy() {
        return new Js
    }
    clone() {
        const e = new Js;
        return e.applyDelta(this.toDelta()),
        e
    }
    toDOM(e=document, n, r) {
        const s = e.createTextNode(this.toString());
        return r !== void 0 && r._createAssociation(s, this),
        s
    }
    toString() {
        return this.toDelta().map(e=>{
            const n = [];
            for (const s in e.attributes) {
                const i = [];
                for (const a in e.attributes[s])
                    i.push({
                        key: a,
                        value: e.attributes[s][a]
                    });
                i.sort((a,o)=>a.key < o.key ? -1 : 1),
                n.push({
                    nodeName: s,
                    attrs: i
                })
            }
            n.sort((s,i)=>s.nodeName < i.nodeName ? -1 : 1);
            let r = "";
            for (let s = 0; s < n.length; s++) {
                const i = n[s];
                r += `<${i.nodeName}`;
                for (let a = 0; a < i.attrs.length; a++) {
                    const o = i.attrs[a];
                    r += ` ${o.key}="${o.value}"`
                }
                r += ">"
            }
            r += e.insert;
            for (let s = n.length - 1; s >= 0; s--)
                r += `</${n[s].nodeName}>`;
            return r
        }
        ).join("")
    }
    toJSON() {
        return this.toString()
    }
    _write(e) {
        e.writeTypeRef(NH)
    }
}
const kH = t=>new Js;
class kp {
    constructor(e, n) {
        this.id = e,
        this.length = n
    }
    get deleted() {
        throw Zi()
    }
    mergeWith(e) {
        return !1
    }
    write(e, n, r) {
        throw Zi()
    }
    integrate(e, n) {
        throw Zi()
    }
}
const xH = 0;
class gi extends kp {
    get deleted() {
        return !0
    }
    delete() {}
    mergeWith(e) {
        return this.constructor !== e.constructor ? !1 : (this.length += e.length,
        !0)
    }
    integrate(e, n) {
        n > 0 && (this.id.clock += n,
        this.length -= n),
        dS(e.doc.store, this)
    }
    write(e, n) {
        e.writeInfo(xH),
        e.writeLen(this.length - n)
    }
    getMissing(e, n) {
        return null
    }
}
class h5 {
    constructor(e) {
        this.content = e
    }
    getLength() {
        return 1
    }
    getContent() {
        return [this.content]
    }
    isCountable() {
        return !0
    }
    copy() {
        return new h5(this.content)
    }
    splice(e) {
        throw Zi()
    }
    mergeWith(e) {
        return !1
    }
    integrate(e, n) {}
    delete(e) {}
    gc(e) {}
    write(e, n) {
        e.writeBuf(this.content)
    }
    getRef() {
        return 3
    }
}
const DH = t=>new h5(t.readBuf());
class D0 {
    constructor(e) {
        this.len = e
    }
    getLength() {
        return this.len
    }
    getContent() {
        return []
    }
    isCountable() {
        return !1
    }
    copy() {
        return new D0(this.len)
    }
    splice(e) {
        const n = new D0(this.len - e);
        return this.len = e,
        n
    }
    mergeWith(e) {
        return this.len += e.len,
        !0
    }
    integrate(e, n) {
        C0(e.deleteSet, n.id.client, n.id.clock, this.len),
        n.markDeleted()
    }
    delete(e) {}
    gc(e) {}
    write(e, n) {
        e.writeLen(this.len - n)
    }
    getRef() {
        return 1
    }
}
const SH = t=>new D0(t.readLen())
  , jS = (t,e)=>new bl({
    guid: t,
    ...e,
    shouldLoad: e.shouldLoad || e.autoLoad || !1
});
class f5 {
    constructor(e) {
        e._item && console.error("This document was already integrated as a sub-document. You should create a second instance instead with the same guid."),
        this.doc = e;
        const n = {};
        this.opts = n,
        e.gc || (n.gc = !1),
        e.autoLoad && (n.autoLoad = !0),
        e.meta !== null && (n.meta = e.meta)
    }
    getLength() {
        return 1
    }
    getContent() {
        return [this.doc]
    }
    isCountable() {
        return !0
    }
    copy() {
        return new f5(jS(this.doc.guid, this.opts))
    }
    splice(e) {
        throw Zi()
    }
    mergeWith(e) {
        return !1
    }
    integrate(e, n) {
        this.doc._item = n,
        e.subdocsAdded.add(this.doc),
        this.doc.shouldLoad && e.subdocsLoaded.add(this.doc)
    }
    delete(e) {
        e.subdocsAdded.has(this.doc) ? e.subdocsAdded.delete(this.doc) : e.subdocsRemoved.add(this.doc)
    }
    gc(e) {}
    write(e, n) {
        e.writeString(this.doc.guid),
        e.writeAny(this.opts)
    }
    getRef() {
        return 9
    }
}
const _H = t=>new f5(jS(t.readString(), t.readAny()));
class vl {
    constructor(e) {
        this.embed = e
    }
    getLength() {
        return 1
    }
    getContent() {
        return [this.embed]
    }
    isCountable() {
        return !0
    }
    copy() {
        return new vl(this.embed)
    }
    splice(e) {
        throw Zi()
    }
    mergeWith(e) {
        return !1
    }
    integrate(e, n) {}
    delete(e) {}
    gc(e) {}
    write(e, n) {
        e.writeJSON(this.embed)
    }
    getRef() {
        return 5
    }
}
const IH = t=>new vl(t.readJSON());
class pr {
    constructor(e, n) {
        this.key = e,
        this.value = n
    }
    getLength() {
        return 1
    }
    getContent() {
        return []
    }
    isCountable() {
        return !1
    }
    copy() {
        return new pr(this.key,this.value)
    }
    splice(e) {
        throw Zi()
    }
    mergeWith(e) {
        return !1
    }
    integrate(e, n) {
        const r = n.parent;
        r._searchMarker = null,
        r._hasFormatting = !0
    }
    delete(e) {}
    gc(e) {}
    write(e, n) {
        e.writeKey(this.key),
        e.writeJSON(this.value)
    }
    getRef() {
        return 6
    }
}
const EH = t=>new pr(t.readKey(),t.readJSON());
class p4 {
    constructor(e) {
        this.arr = e
    }
    getLength() {
        return this.arr.length
    }
    getContent() {
        return this.arr
    }
    isCountable() {
        return !0
    }
    copy() {
        return new p4(this.arr)
    }
    splice(e) {
        const n = new p4(this.arr.slice(e));
        return this.arr = this.arr.slice(0, e),
        n
    }
    mergeWith(e) {
        return this.arr = this.arr.concat(e.arr),
        !0
    }
    integrate(e, n) {}
    delete(e) {}
    gc(e) {}
    write(e, n) {
        const r = this.arr.length;
        e.writeLen(r - n);
        for (let s = n; s < r; s++) {
            const i = this.arr[s];
            e.writeString(i === void 0 ? "undefined" : JSON.stringify(i))
        }
    }
    getRef() {
        return 2
    }
}
const AH = t=>{
    const e = t.readLen()
      , n = [];
    for (let r = 0; r < e; r++) {
        const s = t.readString();
        s === "undefined" ? n.push(void 0) : n.push(JSON.parse(s))
    }
    return new p4(n)
}
;
class sl {
    constructor(e) {
        this.arr = e
    }
    getLength() {
        return this.arr.length
    }
    getContent() {
        return this.arr
    }
    isCountable() {
        return !0
    }
    copy() {
        return new sl(this.arr)
    }
    splice(e) {
        const n = new sl(this.arr.slice(e));
        return this.arr = this.arr.slice(0, e),
        n
    }
    mergeWith(e) {
        return this.arr = this.arr.concat(e.arr),
        !0
    }
    integrate(e, n) {}
    delete(e) {}
    gc(e) {}
    write(e, n) {
        const r = this.arr.length;
        e.writeLen(r - n);
        for (let s = n; s < r; s++) {
            const i = this.arr[s];
            e.writeAny(i)
        }
    }
    getRef() {
        return 8
    }
}
const jH = t=>{
    const e = t.readLen()
      , n = [];
    for (let r = 0; r < e; r++)
        n.push(t.readAny());
    return new sl(n)
}
;
class Ji {
    constructor(e) {
        this.str = e
    }
    getLength() {
        return this.str.length
    }
    getContent() {
        return this.str.split("")
    }
    isCountable() {
        return !0
    }
    copy() {
        return new Ji(this.str)
    }
    splice(e) {
        const n = new Ji(this.str.slice(e));
        this.str = this.str.slice(0, e);
        const r = this.str.charCodeAt(e - 1);
        return r >= 55296 && r <= 56319 && (this.str = this.str.slice(0, e - 1) + "�",
        n.str = "�" + n.str.slice(1)),
        n
    }
    mergeWith(e) {
        return this.str += e.str,
        !0
    }
    integrate(e, n) {}
    delete(e) {}
    gc(e) {}
    write(e, n) {
        e.writeString(n === 0 ? this.str : this.str.slice(n))
    }
    getRef() {
        return 4
    }
}
const MH = t=>new Ji(t.readString())
  , TH = [dH, hH, yH, bH, CH, wH, kH]
  , LH = 0
  , OH = 1
  , RH = 2
  , PH = 3
  , $H = 4
  , FH = 5
  , NH = 6;
class Ga {
    constructor(e) {
        this.type = e
    }
    getLength() {
        return 1
    }
    getContent() {
        return [this.type]
    }
    isCountable() {
        return !0
    }
    copy() {
        return new Ga(this.type._copy())
    }
    splice(e) {
        throw Zi()
    }
    mergeWith(e) {
        return !1
    }
    integrate(e, n) {
        this.type._integrate(e.doc, n)
    }
    delete(e) {
        let n = this.type._start;
        for (; n !== null; )
            n.deleted ? n.id.clock < (e.beforeState.get(n.id.client) || 0) && e._mergeStructs.push(n) : n.delete(e),
            n = n.right;
        this.type._map.forEach(r=>{
            r.deleted ? r.id.clock < (e.beforeState.get(r.id.client) || 0) && e._mergeStructs.push(r) : r.delete(e)
        }
        ),
        e.changed.delete(this.type)
    }
    gc(e) {
        let n = this.type._start;
        for (; n !== null; )
            n.gc(e, !0),
            n = n.right;
        this.type._start = null,
        this.type._map.forEach(r=>{
            for (; r !== null; )
                r.gc(e, !0),
                r = r.left
        }
        ),
        this.type._map = new Map
    }
    write(e, n) {
        this.type._write(e)
    }
    getRef() {
        return 7
    }
}
const VH = t=>new Ga(TH[t.readTypeRef()](t))
  , e9 = (t,e)=>{
    let n = e, r = 0, s;
    do
        r > 0 && (n = kt(n.client, n.clock + r)),
        s = v2(t, n),
        r = n.clock - s.id.clock,
        n = s.redone;
    while (n !== null && s instanceof yn);
    return {
        item: s,
        diff: r
    }
}
  , xp = (t,e)=>{
    for (; t !== null && t.keep !== e; )
        t.keep = e,
        t = t.parent._item
}
  , m4 = (t,e,n)=>{
    const {client: r, clock: s} = e.id
      , i = new yn(kt(r, s + n),e,kt(r, s + n - 1),e.right,e.rightOrigin,e.parent,e.parentSub,e.content.splice(n));
    return e.deleted && i.markDeleted(),
    e.keep && (i.keep = !0),
    e.redone !== null && (i.redone = kt(e.redone.client, e.redone.clock + n)),
    e.right = i,
    i.right !== null && (i.right.left = i),
    t._mergeStructs.push(i),
    i.parentSub !== null && i.right === null && i.parent._map.set(i.parentSub, i),
    e.length = n,
    i
}
  , zC = (t,e)=>cB(t, n=>Jd(n.deletions, e))
  , MS = (t,e,n,r,s,i)=>{
    const a = t.doc
      , o = a.store
      , l = a.clientID
      , d = e.redone;
    if (d !== null)
        return Ms(t, d);
    let u = e.parent._item, h = null, f;
    if (u !== null && u.deleted === !0) {
        if (u.redone === null && (!n.has(u) || MS(t, u, n, r, s, i) === null))
            return null;
        for (; u.redone !== null; )
            u = Ms(t, u.redone)
    }
    const p = u === null ? e.parent : u.content.type;
    if (e.parentSub === null) {
        for (h = e.left,
        f = e; h !== null; ) {
            let b = h;
            for (; b !== null && b.parent._item !== u; )
                b = b.redone === null ? null : Ms(t, b.redone);
            if (b !== null && b.parent._item === u) {
                h = b;
                break
            }
            h = h.left
        }
        for (; f !== null; ) {
            let b = f;
            for (; b !== null && b.parent._item !== u; )
                b = b.redone === null ? null : Ms(t, b.redone);
            if (b !== null && b.parent._item === u) {
                f = b;
                break
            }
            f = f.right
        }
    } else if (f = null,
    e.right && !s) {
        for (h = e; h !== null && h.right !== null && (h.right.redone || Jd(r, h.right.id) || zC(i.undoStack, h.right.id) || zC(i.redoStack, h.right.id)); )
            for (h = h.right; h.redone; )
                h = Ms(t, h.redone);
        if (h && h.right !== null)
            return null
    } else
        h = p._map.get(e.parentSub) || null;
    const m = or(o, l)
      , g = kt(l, m)
      , C = new yn(g,h,h && h.lastId,f,f && f.id,p,e.parentSub,e.content.copy());
    return e.redone = g,
    xp(C, !0),
    C.integrate(t, 0),
    C
}
;
class yn extends kp {
    constructor(e, n, r, s, i, a, o, l) {
        super(e, l.getLength()),
        this.origin = r,
        this.left = n,
        this.right = s,
        this.rightOrigin = i,
        this.parent = a,
        this.parentSub = o,
        this.redone = null,
        this.content = l,
        this.info = this.content.isCountable() ? SC : 0
    }
    set marker(e) {
        (this.info & b6) > 0 !== e && (this.info ^= b6)
    }
    get marker() {
        return (this.info & b6) > 0
    }
    get keep() {
        return (this.info & DC) > 0
    }
    set keep(e) {
        this.keep !== e && (this.info ^= DC)
    }
    get countable() {
        return (this.info & SC) > 0
    }
    get deleted() {
        return (this.info & C6) > 0
    }
    set deleted(e) {
        this.deleted !== e && (this.info ^= C6)
    }
    markDeleted() {
        this.info |= C6
    }
    getMissing(e, n) {
        if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= or(n, this.origin.client))
            return this.origin.client;
        if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= or(n, this.rightOrigin.client))
            return this.rightOrigin.client;
        if (this.parent && this.parent.constructor === yd && this.id.client !== this.parent.client && this.parent.clock >= or(n, this.parent.client))
            return this.parent.client;
        if (this.origin && (this.left = RC(e, n, this.origin),
        this.origin = this.left.lastId),
        this.rightOrigin && (this.right = Ms(e, this.rightOrigin),
        this.rightOrigin = this.right.id),
        (this.left && this.left.constructor === gi || this.right && this.right.constructor === gi) && (this.parent = null),
        !this.parent)
            this.left && this.left.constructor === yn && (this.parent = this.left.parent,
            this.parentSub = this.left.parentSub),
            this.right && this.right.constructor === yn && (this.parent = this.right.parent,
            this.parentSub = this.right.parentSub);
        else if (this.parent.constructor === yd) {
            const r = v2(n, this.parent);
            r.constructor === gi ? this.parent = null : this.parent = r.content.type
        }
        return null
    }
    integrate(e, n) {
        if (n > 0 && (this.id.clock += n,
        this.left = RC(e, e.doc.store, kt(this.id.client, this.id.clock - 1)),
        this.origin = this.left.lastId,
        this.content = this.content.splice(n),
        this.length -= n),
        this.parent) {
            if (!this.left && (!this.right || this.right.left !== null) || this.left && this.left.right !== this.right) {
                let r = this.left, s;
                if (r !== null)
                    s = r.right;
                else if (this.parentSub !== null)
                    for (s = this.parent._map.get(this.parentSub) || null; s !== null && s.left !== null; )
                        s = s.left;
                else
                    s = this.parent._start;
                const i = new Set
                  , a = new Set;
                for (; s !== null && s !== this.right; ) {
                    if (a.add(s),
                    i.add(s),
                    Xl(this.origin, s.origin)) {
                        if (s.id.client < this.id.client)
                            r = s,
                            i.clear();
                        else if (Xl(this.rightOrigin, s.rightOrigin))
                            break
                    } else if (s.origin !== null && a.has(v2(e.doc.store, s.origin)))
                        i.has(v2(e.doc.store, s.origin)) || (r = s,
                        i.clear());
                    else
                        break;
                    s = s.right
                }
                this.left = r
            }
            if (this.left !== null) {
                const r = this.left.right;
                this.right = r,
                this.left.right = this
            } else {
                let r;
                if (this.parentSub !== null)
                    for (r = this.parent._map.get(this.parentSub) || null; r !== null && r.left !== null; )
                        r = r.left;
                else
                    r = this.parent._start,
                    this.parent._start = this;
                this.right = r
            }
            this.right !== null ? this.right.left = this : this.parentSub !== null && (this.parent._map.set(this.parentSub, this),
            this.left !== null && this.left.delete(e)),
            this.parentSub === null && this.countable && !this.deleted && (this.parent._length += this.length),
            dS(e.doc.store, this),
            this.content.integrate(e, this),
            $C(e, this.parent, this.parentSub),
            (this.parent._item !== null && this.parent._item.deleted || this.parentSub !== null && this.right !== null) && this.delete(e)
        } else
            new gi(this.id,this.length).integrate(e, 0)
    }
    get next() {
        let e = this.right;
        for (; e !== null && e.deleted; )
            e = e.right;
        return e
    }
    get prev() {
        let e = this.left;
        for (; e !== null && e.deleted; )
            e = e.left;
        return e
    }
    get lastId() {
        return this.length === 1 ? this.id : kt(this.id.client, this.id.clock + this.length - 1)
    }
    mergeWith(e) {
        if (this.constructor === e.constructor && Xl(e.origin, this.lastId) && this.right === e && Xl(this.rightOrigin, e.rightOrigin) && this.id.client === e.id.client && this.id.clock + this.length === e.id.clock && this.deleted === e.deleted && this.redone === null && e.redone === null && this.content.constructor === e.content.constructor && this.content.mergeWith(e.content)) {
            const n = this.parent._searchMarker;
            return n && n.forEach(r=>{
                r.p === e && (r.p = this,
                !this.deleted && this.countable && (r.index -= this.length))
            }
            ),
            e.keep && (this.keep = !0),
            this.right = e.right,
            this.right !== null && (this.right.left = this),
            this.length += e.length,
            !0
        }
        return !1
    }
    delete(e) {
        if (!this.deleted) {
            const n = this.parent;
            this.countable && this.parentSub === null && (n._length -= this.length),
            this.markDeleted(),
            C0(e.deleteSet, this.id.client, this.id.clock, this.length),
            $C(e, n, this.parentSub),
            this.content.delete(e)
        }
    }
    gc(e, n) {
        if (!this.deleted)
            throw xi();
        this.content.gc(e),
        n ? zU(e, this, new gi(this.id,this.length)) : this.content = new D0(this.length)
    }
    write(e, n) {
        const r = n > 0 ? kt(this.id.client, this.id.clock + n - 1) : this.origin
          , s = this.rightOrigin
          , i = this.parentSub
          , a = this.content.getRef() & X3 | (r === null ? 0 : Xs) | (s === null ? 0 : _o) | (i === null ? 0 : m0);
        if (e.writeInfo(a),
        r !== null && e.writeLeftID(r),
        s !== null && e.writeRightID(s),
        r === null && s === null) {
            const o = this.parent;
            if (o._item !== void 0) {
                const l = o._item;
                if (l === null) {
                    const d = b0(o);
                    e.writeParentInfo(!0),
                    e.writeString(d)
                } else
                    e.writeParentInfo(!1),
                    e.writeLeftID(l.id)
            } else
                o.constructor === String ? (e.writeParentInfo(!0),
                e.writeString(o)) : o.constructor === yd ? (e.writeParentInfo(!1),
                e.writeLeftID(o)) : xi();
            i !== null && e.writeString(i)
        }
        this.content.write(e, n)
    }
}
const TS = (t,e)=>BH[e & X3](t)
  , BH = [()=>{
    xi()
}
, SH, AH, DH, MH, IH, EH, VH, jH, _H, ()=>{
    xi()
}
]
  , UH = 10;
class yi extends kp {
    get deleted() {
        return !0
    }
    delete() {}
    mergeWith(e) {
        return this.constructor !== e.constructor ? !1 : (this.length += e.length,
        !0)
    }
    integrate(e, n) {
        xi()
    }
    write(e, n) {
        e.writeInfo(UH),
        Bt(e.restEncoder, this.length - n)
    }
    getMissing(e, n) {
        return null
    }
}
const LS = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : {}
  , OS = "__ $YJS$ __";
LS[OS] === !0 && console.error("Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438");
LS[OS] = !0;
const HH = ()=>{
    let t = !0;
    return (e,n)=>{
        if (t) {
            t = !1;
            try {
                e()
            } finally {
                t = !0
            }
        } else
            n !== void 0 && n()
    }
}
  , zH = /[\uD800-\uDBFF]/
  , ZH = /[\uDC00-\uDFFF]/
  , qH = (t,e)=>{
    let n = 0
      , r = 0;
    for (; n < t.length && n < e.length && t[n] === e[n]; )
        n++;
    for (n > 0 && zH.test(t[n - 1]) && n--; r + n < t.length && r + n < e.length && t[t.length - r - 1] === e[e.length - r - 1]; )
        r++;
    return r > 0 && ZH.test(t[t.length - r]) && r--,
    {
        index: n,
        remove: t.length - n - r,
        insert: e.slice(n, e.length - r)
    }
}
  , WH = qH
  , $r = new Lf("y-sync")
  , GH = new Lf("y-undo")
  , aue = new Lf("yjs-cursor")
  , g4 = (t,e)=>e === void 0 ? !t.deleted : e.sv.has(t.id.client) && e.sv.get(t.id.client) > t.id.clock && !Jd(e.ds, t.id)
  , KH = [{
    light: "#ecd44433",
    dark: "#ecd444"
}]
  , YH = (t,e,n)=>{
    if (!t.has(n)) {
        if (t.size < e.length) {
            const r = tl();
            t.forEach(s=>r.add(s)),
            e = e.filter(s=>!r.has(s))
        }
        t.set(n, nU(e))
    }
    return t.get(n)
}
  , oue = (t,{colors: e=KH, colorMapping: n=new Map, permanentUserData: r=null, onFirstRender: s=()=>{}
}={})=>{
    let i = !1, a;
    const o = new kj({
        props: {
            editable: l=>{
                const d = $r.getState(l);
                return d.snapshot == null && d.prevSnapshot == null
            }
        },
        key: $r,
        state: {
            init: (l,d)=>({
                type: t,
                doc: t.doc,
                binding: null,
                snapshot: null,
                prevSnapshot: null,
                isChangeOrigin: !1,
                isUndoRedoOperation: !1,
                addToHistory: !0,
                colors: e,
                colorMapping: n,
                permanentUserData: r
            }),
            apply: (l,d)=>{
                const u = l.getMeta($r);
                if (u !== void 0) {
                    d = Object.assign({}, d);
                    for (const h in u)
                        d[h] = u[h]
                }
                return d.addToHistory = l.getMeta("addToHistory") !== !1,
                d.isChangeOrigin = u !== void 0 && !!u.isChangeOrigin,
                d.isUndoRedoOperation = u !== void 0 && !!u.isChangeOrigin && !!u.isUndoRedoOperation,
                d.binding !== null && u !== void 0 && (u.snapshot != null || u.prevSnapshot != null) && l4(0, ()=>{
                    d.binding == null || d.binding.isDestroyed || (u.restore == null ? d.binding._renderSnapshot(u.snapshot, u.prevSnapshot, d) : (d.binding._renderSnapshot(u.snapshot, u.snapshot, d),
                    delete d.restore,
                    delete d.snapshot,
                    delete d.prevSnapshot,
                    d.binding.mux(()=>{
                        d.binding._prosemirrorChanged(d.binding.prosemirrorView.state.doc)
                    }
                    )))
                }
                ),
                d
            }
        },
        view: l=>{
            const d = new XH(t,l);
            return a != null && a.destroy(),
            a = l4(0, ()=>{
                d._forceRerender(),
                l.dispatch(l.state.tr.setMeta($r, {
                    binding: d
                })),
                s()
            }
            ),
            {
                update: ()=>{
                    const u = o.getState(l.state);
                    if (u.snapshot == null && u.prevSnapshot == null && (i || l.state.doc.content.findDiffStart(l.state.doc.type.createAndFill().content) !== null)) {
                        if (i = !0,
                        u.addToHistory === !1 && !u.isChangeOrigin) {
                            const h = GH.getState(l.state)
                              , f = h && h.undoManager;
                            f && f.stopCapturing()
                        }
                        d.mux(()=>{
                            u.doc.transact(h=>{
                                h.meta.set("addToHistory", u.addToHistory),
                                d._prosemirrorChanged(l.state.doc)
                            }
                            , $r)
                        }
                        )
                    }
                }
                ,
                destroy: ()=>{
                    a.destroy(),
                    d.destroy()
                }
            }
        }
    });
    return o
}
  , QH = (t,e,n)=>{
    if (e !== null && e.anchor !== null && e.head !== null) {
        const r = KC(n.doc, n.type, e.anchor, n.mapping)
          , s = KC(n.doc, n.type, e.head, n.mapping);
        r !== null && s !== null && (t = t.setSelection(xj.create(t.doc, r, s)))
    }
}
  , ZC = (t,e)=>({
    anchor: GC(e.selection.anchor, t.type, t.mapping),
    head: GC(e.selection.head, t.type, t.mapping)
});
class XH {
    constructor(e, n) {
        this.type = e,
        this.prosemirrorView = n,
        this.mux = HH(),
        this.isDestroyed = !1,
        this.mapping = new Map,
        this._observeFunction = this._typeChanged.bind(this),
        this.doc = e.doc,
        this.beforeTransactionSelection = null,
        this.beforeAllTransactions = ()=>{
            this.beforeTransactionSelection === null && (this.beforeTransactionSelection = ZC(this, n.state))
        }
        ,
        this.afterAllTransactions = ()=>{
            this.beforeTransactionSelection = null
        }
        ,
        this.doc.on("beforeAllTransactions", this.beforeAllTransactions),
        this.doc.on("afterAllTransactions", this.afterAllTransactions),
        e.observeDeep(this._observeFunction),
        this._domSelectionInView = null
    }
    get _tr() {
        return this.prosemirrorView.state.tr.setMeta("addToHistory", !1)
    }
    _isLocalCursorInView() {
        return this.prosemirrorView.hasFocus() ? (IB && this._domSelectionInView === null && (l4(0, ()=>{
            this._domSelectionInView = null
        }
        ),
        this._domSelectionInView = this._isDomSelectionInView()),
        this._domSelectionInView) : !1
    }
    _isDomSelectionInView() {
        const e = this.prosemirrorView._root.getSelection()
          , n = this.prosemirrorView._root.createRange();
        n.setStart(e.anchorNode, e.anchorOffset),
        n.setEnd(e.focusNode, e.focusOffset),
        n.getClientRects().length === 0 && n.startContainer && n.collapsed && n.selectNodeContents(n.startContainer);
        const s = n.getBoundingClientRect()
          , i = cU.documentElement;
        return s.bottom >= 0 && s.right >= 0 && s.left <= (window.innerWidth || i.clientWidth || 0) && s.top <= (window.innerHeight || i.clientHeight || 0)
    }
    renderSnapshot(e, n) {
        n || (n = cS(XD(), new Map)),
        this.prosemirrorView.dispatch(this._tr.setMeta($r, {
            snapshot: e,
            prevSnapshot: n
        }))
    }
    unrenderSnapshot() {
        this.mapping = new Map,
        this.mux(()=>{
            const e = this.type.toArray().map(r=>k2(r, this.prosemirrorView.state.schema, this.mapping)).filter(r=>r !== null)
              , n = this._tr.replace(0, this.prosemirrorView.state.doc.content.size, new O5(R5.from(e),0,0));
            n.setMeta($r, {
                snapshot: null,
                prevSnapshot: null
            }),
            this.prosemirrorView.dispatch(n)
        }
        )
    }
    _forceRerender() {
        this.mapping = new Map,
        this.mux(()=>{
            const e = this.type.toArray().map(r=>k2(r, this.prosemirrorView.state.schema, this.mapping)).filter(r=>r !== null)
              , n = this._tr.replace(0, this.prosemirrorView.state.doc.content.size, new O5(R5.from(e),0,0));
            this.prosemirrorView.dispatch(n.setMeta($r, {
                isChangeOrigin: !0
            }))
        }
        )
    }
    _renderSnapshot(e, n, r) {
        e || (e = UU(this.doc)),
        this.mapping = new Map,
        this.mux(()=>{
            this.doc.transact(s=>{
                const i = r.permanentUserData;
                i && i.dss.forEach(d=>{
                    B1(s, d, u=>{}
                    )
                }
                );
                const a = (d,u)=>{
                    const h = d === "added" ? i.getUserByClientId(u.client) : i.getUserByDeletedId(u);
                    return {
                        user: h,
                        type: d,
                        color: YH(r.colorMapping, r.colors, h)
                    }
                }
                  , o = CS(this.type, new gp(n.ds,e.sv)).map(d=>!d._item.deleted || g4(d._item, e) || g4(d._item, n) ? k2(d, this.prosemirrorView.state.schema, new Map, e, n, a) : null).filter(d=>d !== null)
                  , l = this._tr.replace(0, this.prosemirrorView.state.doc.content.size, new O5(R5.from(o),0,0));
                this.prosemirrorView.dispatch(l.setMeta($r, {
                    isChangeOrigin: !0
                }))
            }
            , $r)
        }
        )
    }
    _typeChanged(e, n) {
        const r = $r.getState(this.prosemirrorView.state);
        if (e.length === 0 || r.snapshot != null || r.prevSnapshot != null) {
            this.renderSnapshot(r.snapshot, r.prevSnapshot);
            return
        }
        this.mux(()=>{
            const s = (o,l)=>this.mapping.delete(l);
            B1(n, n.deleteSet, o=>{
                if (o.constructor === yn) {
                    const l = o.content.type;
                    l && this.mapping.delete(l)
                }
            }
            ),
            n.changed.forEach(s),
            n.changedParentTypes.forEach(s);
            const i = this.type.toArray().map(o=>RS(o, this.prosemirrorView.state.schema, this.mapping)).filter(o=>o !== null);
            let a = this._tr.replace(0, this.prosemirrorView.state.doc.content.size, new O5(R5.from(i),0,0));
            QH(a, this.beforeTransactionSelection, this),
            a = a.setMeta($r, {
                isChangeOrigin: !0,
                isUndoRedoOperation: n.origin instanceof KU
            }),
            this.beforeTransactionSelection !== null && this._isLocalCursorInView() && a.scrollIntoView(),
            this.prosemirrorView.dispatch(a)
        }
        )
    }
    _prosemirrorChanged(e) {
        this.doc.transact(()=>{
            I0(this.doc, this.type, e, this.mapping),
            this.beforeTransactionSelection = ZC(this, this.prosemirrorView.state)
        }
        , $r)
    }
    destroy() {
        this.isDestroyed = !0,
        this.type.unobserveDeep(this._observeFunction),
        this.doc.off("beforeAllTransactions", this.beforeAllTransactions),
        this.doc.off("afterAllTransactions", this.afterAllTransactions)
    }
}
const RS = (t,e,n,r,s,i)=>{
    const a = n.get(t);
    if (a === void 0) {
        if (t instanceof Gs)
            return k2(t, e, n, r, s, i);
        throw Zi()
    }
    return a
}
  , k2 = (t,e,n,r,s,i)=>{
    const a = []
      , o = l=>{
        if (l.constructor === Gs) {
            const d = RS(l, e, n, r, s, i);
            d !== null && a.push(d)
        } else {
            const d = JH(l, e, n, r, s, i);
            d !== null && d.forEach(u=>{
                u !== null && a.push(u)
            }
            )
        }
    }
    ;
    r === void 0 || s === void 0 ? t.toArray().forEach(o) : CS(t, new gp(s.ds,r.sv)).forEach(o);
    try {
        const l = t.getAttributes(r);
        r !== void 0 && (g4(t._item, r) ? g4(t._item, s) || (l.ychange = i ? i("added", t._item.id) : {
            type: "added"
        }) : l.ychange = i ? i("removed", t._item.id) : {
            type: "removed"
        });
        const d = [];
        if (l.___marks) {
            const h = JSON.parse(l.___marks);
            delete l.___marks,
            h.forEach(f=>{
                const p = e.marks[f.type];
                p && d.push(p.create(f.attrs))
            }
            )
        }
        const u = e.node(t.nodeName, l, a, d);
        return n.set(t, u),
        u
    } catch {
        return t.doc.transact(d=>{
            t._item.delete(d)
        }
        , $r),
        n.delete(t),
        null
    }
}
  , JH = (t,e,n,r,s,i)=>{
    const a = []
      , o = t.toDelta(r, s, i);
    try {
        for (let l = 0; l < o.length; l++) {
            const d = o[l]
              , u = [];
            for (const h in d.attributes)
                Array.isArray(d.attributes[h]) ? d.attributes[h].forEach(f=>{
                    u.push(e.mark(h, f))
                }
                ) : u.push(e.mark(h, d.attributes[h]));
            a.push(e.text(d.insert, u))
        }
    } catch {
        return t.doc.transact(d=>{
            t._item.delete(d)
        }
        , $r),
        null
    }
    return a
}
  , ez = (t,e)=>{
    const n = new Js
      , r = t.map(s=>({
        insert: s.text,
        attributes: $S(s.marks)
    }));
    return n.applyDelta(r),
    e.set(n, t),
    n
}
  , tz = (t,e)=>{
    const n = new Gs(t.type.name);
    for (const r in t.attrs) {
        const s = t.attrs[r];
        s !== void 0 && r !== "ychange" && n.setAttribute(r, s)
    }
    return Array.isArray(t.marks) && t.marks.length > 0 && n.setAttribute("___marks", JSON.stringify(t.marks)),
    n.insert(0, oh(t).map(r=>t9(r, e))),
    e.set(n, t),
    n
}
  , t9 = (t,e)=>t instanceof Array ? ez(t, e) : tz(t, e)
  , qC = t=>typeof t == "object" && t !== null
  , S0 = (t,e)=>{
    const n = Object.keys(t).filter(s=>t[s] !== null);
    let r = n.length === Object.keys(e).filter(s=>e[s] !== null).length;
    for (let s = 0; s < n.length && r; s++) {
        const i = n[s]
          , a = t[i]
          , o = e[i];
        r = i === "ychange" || i === "___marks" || a === o || qC(a) && qC(o) && S0(a, o)
    }
    return r
}
  , nz = (t,e)=>Array.isArray(e) ? !!e.find(n=>S0(t, n)) : S0(t, e)
  , oh = t=>{
    const e = t.content.content
      , n = [];
    for (let r = 0; r < e.length; r++) {
        const s = e[r];
        if (s.isText) {
            const i = [];
            for (let a = e[r]; r < e.length && a.isText; a = e[++r])
                i.push(a);
            r--,
            n.push(i)
        } else
            n.push(s)
    }
    return n
}
  , rz = t=>{
    let e = 0;
    return VD(t, n=>{
        Array.isArray(n) ? e += n.length : e++
    }
    ),
    e
}
  , PS = (t,e)=>{
    const n = t.toDelta();
    return n.length === e.length && n.every((r,s)=>r.insert === e[s].text && rz(r.attributes || {}) === e[s].marks.length && e[s].marks.every(i=>nz(i.attrs, r.attributes[i.type.name] || {})))
}
  , _0 = (t,e)=>{
    if (t instanceof Gs && !(e instanceof Array) && n9(t, e)) {
        const n = oh(e);
        return t._length === n.length && S0(t.getAttributes(), e.attrs) && t.toArray().every((r,s)=>_0(r, n[s])) && sz(t, e)
    }
    return t instanceof Js && e instanceof Array && PS(t, e)
}
  , sz = (t,e)=>{
    const n = t.getAttribute("___marks");
    if (n) {
        const r = JSON.parse(n);
        return e.marks.length === r.length && e.marks.every(s=>{
            const i = r.find(a=>a.type === s.type.name);
            return i && S0(s.attrs, i.attrs)
        }
        )
    }
    return !n && e.marks.length === 0
}
  , y4 = (t,e)=>t === e || t instanceof Array && e instanceof Array && t.length === e.length && t.every((n,r)=>e[r] === n)
  , WC = (t,e,n)=>{
    const r = t.toArray()
      , s = oh(e)
      , i = s.length
      , a = r.length
      , o = Q3(a, i);
    let l = 0
      , d = 0
      , u = !1;
    for (; l < o; l++) {
        const h = r[l]
          , f = s[l];
        if (y4(n.get(h), f))
            u = !0;
        else if (!_0(h, f))
            break
    }
    for (; l + d < o; d++) {
        const h = r[a - d - 1]
          , f = s[i - d - 1];
        if (y4(n.get(h), f))
            u = !0;
        else if (!_0(h, f))
            break
    }
    return {
        equalityFactor: l + d,
        foundMappedChild: u
    }
}
  , iz = t=>{
    let e = ""
      , n = t._start;
    const r = {};
    for (; n !== null; )
        n.deleted || (n.countable && n.content instanceof Ji ? e += n.content.str : n.content instanceof pr && (r[n.content.key] = null)),
        n = n.right;
    return {
        str: e,
        nAttrs: r
    }
}
  , az = (t,e,n)=>{
    n.set(t, e);
    const {nAttrs: r, str: s} = iz(t)
      , i = e.map(d=>({
        insert: d.text,
        attributes: Object.assign({}, r, $S(d.marks))
    }))
      , {insert: a, remove: o, index: l} = WH(s, i.map(d=>d.insert).join(""));
    t.delete(l, o),
    t.insert(l, a),
    t.applyDelta(i.map(d=>({
        retain: d.insert.length,
        attributes: d.attributes
    })))
}
  , $S = t=>{
    const e = {};
    return t.forEach(n=>{
        n.type.name !== "ychange" && (e[n.type.name] && Array.isArray(e[n.type.name]) ? e[n.type.name].push(n.attrs) : e[n.type.name] ? e[n.type.name] = [e[n.type.name], n.attrs] : e[n.type.name] = n.attrs)
    }
    ),
    e
}
  , I0 = (t,e,n,r)=>{
    if (e instanceof Gs && e.nodeName !== n.type.name)
        throw new Error("node name mismatch!");
    if (r.set(e, n),
    e instanceof Gs) {
        const h = e.getAttributes()
          , f = n.attrs
          , p = n.marks;
        for (const m in f)
            f[m] !== void 0 ? h[m] !== f[m] && m !== "ychange" && e.setAttribute(m, f[m]) : e.removeAttribute(m);
        for (const m in h)
            f[m] === void 0 && e.removeAttribute(m);
        p.length > 0 && e.setAttribute("___marks", JSON.stringify(p))
    }
    const s = oh(n)
      , i = s.length
      , a = e.toArray()
      , o = a.length
      , l = Q3(i, o);
    let d = 0
      , u = 0;
    for (; d < l; d++) {
        const h = a[d]
          , f = s[d];
        if (!y4(r.get(h), f))
            if (_0(h, f))
                r.set(h, f);
            else
                break
    }
    for (; u + d + 1 < l; u++) {
        const h = a[o - u - 1]
          , f = s[i - u - 1];
        if (!y4(r.get(h), f))
            if (_0(h, f))
                r.set(h, f);
            else
                break
    }
    t.transact(()=>{
        for (; o - d - u > 0 && i - d - u > 0; ) {
            const f = a[d]
              , p = s[d]
              , m = a[o - u - 1]
              , g = s[i - u - 1];
            if (f instanceof Js && p instanceof Array)
                PS(f, p) || az(f, p, r),
                d += 1;
            else {
                let C = f instanceof Gs && n9(f, p)
                  , b = m instanceof Gs && n9(m, g);
                if (C && b) {
                    const k = WC(f, p, r)
                      , S = WC(m, g, r);
                    k.foundMappedChild && !S.foundMappedChild ? b = !1 : !k.foundMappedChild && S.foundMappedChild || k.equalityFactor < S.equalityFactor ? C = !1 : b = !1
                }
                C ? (I0(t, f, p, r),
                d += 1) : b ? (I0(t, m, g, r),
                u += 1) : (r.delete(e.get(d)),
                e.delete(d, 1),
                e.insert(d, [t9(p, r)]),
                d += 1)
            }
        }
        const h = o - d - u;
        if (o === 1 && i === 0 && a[0]instanceof Js ? (r.delete(a[0]),
        a[0].delete(0, a[0].length)) : h > 0 && (e.slice(d, d + h).forEach(f=>r.delete(f)),
        e.delete(d, h)),
        d + u < i) {
            const f = [];
            for (let p = d; p < i - u; p++)
                f.push(t9(s[p], r));
            e.insert(d, f)
        }
    }
    , $r)
}
  , n9 = (t,e)=>!(e instanceof Array) && t.nodeName === e.type.name;
let Ru = null;
const oz = ()=>{
    const t = Ru;
    Ru = null,
    t.forEach((e,n)=>{
        const r = n.state.tr
          , s = $r.getState(n.state);
        s && s.binding && !s.binding.isDestroyed && (e.forEach((i,a)=>{
            r.setMeta(a, i)
        }
        ),
        n.dispatch(r))
    }
    )
}
  , cue = (t,e,n)=>{
    Ru || (Ru = new Map,
    l4(0, oz)),
    e1(Ru, t, vi).set(e, n)
}
  , GC = (t,e,n)=>{
    if (t === 0)
        return D6(e, 0);
    let r = e._first === null ? null : e._first.content.type;
    for (; r !== null && e !== r; ) {
        if (r instanceof Js) {
            if (r._length >= t)
                return D6(r, t);
            if (t -= r._length,
            r._item !== null && r._item.next !== null)
                r = r._item.next.content.type;
            else {
                do
                    r = r._item === null ? null : r._item.parent,
                    t--;
                while (r !== e && r !== null && r._item !== null && r._item.next === null);
                r !== null && r !== e && (r = r._item === null ? null : r._item.next.content.type)
            }
        } else {
            const s = (n.get(r) || {
                nodeSize: 0
            }).nodeSize;
            if (r._first !== null && t < s)
                r = r._first.content.type,
                t--;
            else {
                if (t === 1 && r._length === 0 && s > 1)
                    return new w0(r._item === null ? null : r._item.id,r._item === null ? b0(r) : null,null);
                if (t -= s,
                r._item !== null && r._item.next !== null)
                    r = r._item.next.content.type;
                else {
                    if (t === 0)
                        return r = r._item === null ? r : r._item.parent,
                        new w0(r._item === null ? null : r._item.id,r._item === null ? b0(r) : null,null);
                    do
                        r = r._item.parent,
                        t--;
                    while (r !== e && r._item.next === null);
                    r !== e && (r = r._item.next.content.type)
                }
            }
        }
        if (r === null)
            throw xi();
        if (t === 0 && r.constructor !== Js && r !== e)
            return cz(r._item.parent, r._item)
    }
    return D6(e, e._length)
}
  , cz = (t,e)=>{
    let n = null
      , r = null;
    return t._item === null ? r = b0(t) : n = kt(t._item.id.client, t._item.id.clock),
    new w0(n,r,e.id)
}
  , KC = (t,e,n,r)=>{
    const s = BU(n, t);
    if (s === null || s.type !== e && !v0(e, s.type._item))
        return null;
    let i = s.type
      , a = 0;
    if (i.constructor === Js)
        a = s.index;
    else if (i._item === null || !i._item.deleted) {
        let o = i._first
          , l = 0;
        for (; l < i._length && l < s.index && o !== null; ) {
            if (!o.deleted) {
                const d = o.content.type;
                l++,
                d instanceof Js ? a += d._length : a += r.get(d).nodeSize
            }
            o = o.right
        }
        a += 1
    }
    for (; i !== e && i._item !== null; ) {
        const o = i._item.parent;
        if (o._item === null || !o._item.deleted) {
            a += 1;
            let l = o._first;
            for (; l !== null; ) {
                const d = l.content.type;
                if (d === i)
                    break;
                l.deleted || (d instanceof Js ? a += d._length : a += r.get(d).nodeSize),
                l = l.right
            }
        }
        i = o
    }
    return a - 1
}
;
function YC(t, e="prosemirror") {
    const n = new bl
      , r = n.get(e, No);
    return r.doc ? (lz(t, r),
    r.doc) : n
}
function lz(t, e) {
    const n = e || new No
      , r = n.doc ? n.doc : {
        transact: s=>s(void 0)
    };
    return I0(r, n, t, new Map),
    n
}
function QC(t, e) {
    const n = FS(e);
    return Nk.fromJSON(t, n)
}
function FS(t, e="prosemirror") {
    return dz(t.getXmlFragment(e))
}
function dz(t) {
    const e = t.toArray();
    function n(r) {
        let s;
        if (!r.nodeName)
            s = r.toDelta().map(a=>{
                const o = {
                    type: "text",
                    text: a.insert
                };
                if (a.attributes) {
                    let l = [];
                    Object.keys(a.attributes).forEach(d=>{
                        let u = a.attributes[d];
                        if (Array.isArray(u))
                            u.forEach(h=>{
                                const f = {
                                    type: d
                                };
                                Object.keys(h) && (f.attrs = h),
                                l.push(f)
                            }
                            );
                        else {
                            const h = {
                                type: d
                            };
                            Object.keys(u) && (h.attrs = u),
                            l.push(h)
                        }
                    }
                    ),
                    o.marks = l
                }
                return o
            }
            );
        else {
            s = {
                type: r.nodeName
            };
            const i = r.getAttributes();
            Object.keys(i).length > 0 && (s.attrs = {},
            Object.entries(i).forEach(([o,l])=>{
                if (o === "___marks")
                    try {
                        const d = JSON.parse(l);
                        s.marks = Array.isArray(d) ? d : []
                    } catch {}
                else
                    s.attrs[o] = l
            }
            ));
            const a = r.toArray();
            a.length && (s.content = a.map(n).flat())
        }
        return s
    }
    return {
        type: "doc",
        content: e.map(n)
    }
}
function uz(t, e, n, r) {
    const s = `

`;
    let i = ""
      , a = !0;
    return t.nodesBetween(e, n, (o,l)=>{
        var u;
        const d = r[o.type.name];
        d ? (o.isBlock && !a && (i += s,
        a = !0),
        i += d(o)) : o.isText ? (i += (u = o.text) == null ? void 0 : u.slice(Math.max(e, l) - l, n - l),
        a = !1) : o.isBlock && !a && (i += s,
        a = !0)
    }
    ),
    i
}
/*!
* tabbable 5.3.3
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/
var NS = ["input", "select", "textarea", "a[href]", "button", "[tabindex]:not(slot)", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])', "details>summary:first-of-type", "details"]
  , r9 = NS.join(",")
  , VS = typeof Element > "u"
  , Od = VS ? function() {}
: Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector
  , s9 = !VS && Element.prototype.getRootNode ? function(t) {
    return t.getRootNode()
}
: function(t) {
    return t.ownerDocument
}
  , hz = function(e, n, r) {
    var s = Array.prototype.slice.apply(e.querySelectorAll(r9));
    return n && Od.call(e, r9) && s.unshift(e),
    s = s.filter(r),
    s
}
  , fz = function t(e, n, r) {
    for (var s = [], i = Array.from(e); i.length; ) {
        var a = i.shift();
        if (a.tagName === "SLOT") {
            var o = a.assignedElements()
              , l = o.length ? o : a.children
              , d = t(l, !0, r);
            r.flatten ? s.push.apply(s, d) : s.push({
                scope: a,
                candidates: d
            })
        } else {
            var u = Od.call(a, r9);
            u && r.filter(a) && (n || !e.includes(a)) && s.push(a);
            var h = a.shadowRoot || typeof r.getShadowRoot == "function" && r.getShadowRoot(a)
              , f = !r.shadowRootFilter || r.shadowRootFilter(a);
            if (h && f) {
                var p = t(h === !0 ? a.children : h.children, !0, r);
                r.flatten ? s.push.apply(s, p) : s.push({
                    scope: a,
                    candidates: p
                })
            } else
                i.unshift.apply(i, a.children)
        }
    }
    return s
}
  , BS = function(e, n) {
    return e.tabIndex < 0 && (n || /^(AUDIO|VIDEO|DETAILS)$/.test(e.tagName) || e.isContentEditable) && isNaN(parseInt(e.getAttribute("tabindex"), 10)) ? 0 : e.tabIndex
}
  , pz = function(e, n) {
    return e.tabIndex === n.tabIndex ? e.documentOrder - n.documentOrder : e.tabIndex - n.tabIndex
}
  , US = function(e) {
    return e.tagName === "INPUT"
}
  , mz = function(e) {
    return US(e) && e.type === "hidden"
}
  , gz = function(e) {
    var n = e.tagName === "DETAILS" && Array.prototype.slice.apply(e.children).some(function(r) {
        return r.tagName === "SUMMARY"
    });
    return n
}
  , yz = function(e, n) {
    for (var r = 0; r < e.length; r++)
        if (e[r].checked && e[r].form === n)
            return e[r]
}
  , Cz = function(e) {
    if (!e.name)
        return !0;
    var n = e.form || s9(e), r = function(o) {
        return n.querySelectorAll('input[type="radio"][name="' + o + '"]')
    }, s;
    if (typeof window < "u" && typeof window.CSS < "u" && typeof window.CSS.escape == "function")
        s = r(window.CSS.escape(e.name));
    else
        try {
            s = r(e.name)
        } catch (a) {
            return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", a.message),
            !1
        }
    var i = yz(s, e.form);
    return !i || i === e
}
  , bz = function(e) {
    return US(e) && e.type === "radio"
}
  , vz = function(e) {
    return bz(e) && !Cz(e)
}
  , XC = function(e) {
    var n = e.getBoundingClientRect()
      , r = n.width
      , s = n.height;
    return r === 0 && s === 0
}
  , wz = function(e, n) {
    var r = n.displayCheck
      , s = n.getShadowRoot;
    if (getComputedStyle(e).visibility === "hidden")
        return !0;
    var i = Od.call(e, "details>summary:first-of-type")
      , a = i ? e.parentElement : e;
    if (Od.call(a, "details:not([open]) *"))
        return !0;
    var o = s9(e).host
      , l = (o == null ? void 0 : o.ownerDocument.contains(o)) || e.ownerDocument.contains(e);
    if (!r || r === "full") {
        if (typeof s == "function") {
            for (var d = e; e; ) {
                var u = e.parentElement
                  , h = s9(e);
                if (u && !u.shadowRoot && s(u) === !0)
                    return XC(e);
                e.assignedSlot ? e = e.assignedSlot : !u && h !== e.ownerDocument ? e = h.host : e = u
            }
            e = d
        }
        if (l)
            return !e.getClientRects().length
    } else if (r === "non-zero-area")
        return XC(e);
    return !1
}
  , kz = function(e) {
    if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(e.tagName))
        for (var n = e.parentElement; n; ) {
            if (n.tagName === "FIELDSET" && n.disabled) {
                for (var r = 0; r < n.children.length; r++) {
                    var s = n.children.item(r);
                    if (s.tagName === "LEGEND")
                        return Od.call(n, "fieldset[disabled] *") ? !0 : !s.contains(e)
                }
                return !0
            }
            n = n.parentElement
        }
    return !1
}
  , HS = function(e, n) {
    return !(n.disabled || mz(n) || wz(n, e) || gz(n) || kz(n))
}
  , JC = function(e, n) {
    return !(vz(n) || BS(n) < 0 || !HS(e, n))
}
  , xz = function(e) {
    var n = parseInt(e.getAttribute("tabindex"), 10);
    return !!(isNaN(n) || n >= 0)
}
  , Dz = function t(e) {
    var n = []
      , r = [];
    return e.forEach(function(s, i) {
        var a = !!s.scope
          , o = a ? s.scope : s
          , l = BS(o, a)
          , d = a ? t(s.candidates) : o;
        l === 0 ? a ? n.push.apply(n, d) : n.push(o) : r.push({
            documentOrder: i,
            tabIndex: l,
            item: s,
            isScope: a,
            content: d
        })
    }),
    r.sort(pz).reduce(function(s, i) {
        return i.isScope ? s.push.apply(s, i.content) : s.push(i.content),
        s
    }, []).concat(n)
}
  , Sz = function(e, n) {
    n = n || {};
    var r;
    return n.getShadowRoot ? r = fz([e], n.includeContainer, {
        filter: JC.bind(null, n),
        flatten: !1,
        getShadowRoot: n.getShadowRoot,
        shadowRootFilter: xz
    }) : r = hz(e, n.includeContainer, JC.bind(null, n)),
    Dz(r)
}
  , _z = NS.concat("iframe").join(",")
  , Iz = function(e, n) {
    if (n = n || {},
    !e)
        throw new Error("No node provided");
    return Od.call(e, _z) === !1 ? !1 : HS(n, e)
};
/*!
* focus-trap 6.5.1
* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE
*/
function eb(t, e) {
    var n = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
        var r = Object.getOwnPropertySymbols(t);
        e && (r = r.filter(function(s) {
            return Object.getOwnPropertyDescriptor(t, s).enumerable
        })),
        n.push.apply(n, r)
    }
    return n
}
function Ez(t) {
    for (var e = 1; e < arguments.length; e++) {
        var n = arguments[e] != null ? arguments[e] : {};
        e % 2 ? eb(Object(n), !0).forEach(function(r) {
            Az(t, r, n[r])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : eb(Object(n)).forEach(function(r) {
            Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r))
        })
    }
    return t
}
function Az(t, e, n) {
    return e in t ? Object.defineProperty(t, e, {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : t[e] = n,
    t
}
var tb, nb = function() {
    var t = [];
    return {
        activateTrap: function(n) {
            if (t.length > 0) {
                var r = t[t.length - 1];
                r !== n && r.pause()
            }
            var s = t.indexOf(n);
            s === -1 || t.splice(s, 1),
            t.push(n)
        },
        deactivateTrap: function(n) {
            var r = t.indexOf(n);
            r !== -1 && t.splice(r, 1),
            t.length > 0 && t[t.length - 1].unpause()
        }
    }
}(), jz = function(e) {
    return e.tagName && e.tagName.toLowerCase() === "input" && typeof e.select == "function"
}, Mz = function(e) {
    return e.key === "Escape" || e.key === "Esc" || e.keyCode === 27
}, Tz = function(e) {
    return e.key === "Tab" || e.keyCode === 9
}, rb = function(e) {
    return setTimeout(e, 0)
}, I6 = function(e, n) {
    var r = -1;
    return e.every(function(s, i) {
        return n(s) ? (r = i,
        !1) : !0
    }),
    r
}, e2 = function(e) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
        r[s - 1] = arguments[s];
    return typeof e == "function" ? e.apply(void 0, r) : e
}, Lz = function(e, n) {
    var r = document, s = Ez({
        returnFocusOnDeactivate: !0,
        escapeDeactivates: !0,
        delayInitialFocus: !0
    }, n), i = {
        containers: [],
        tabbableGroups: [],
        nodeFocusedBeforeActivation: null,
        mostRecentlyFocusedNode: null,
        active: !1,
        paused: !1
    }, a, o = function(T, B, z) {
        return T && T[B] !== void 0 ? T[B] : s[z || B]
    }, l = function(T) {
        return i.containers.some(function(B) {
            return B.contains(T)
        })
    }, d = function(T) {
        var B = s[T];
        if (!B)
            return null;
        var z = B;
        if (typeof B == "string" && (z = r.querySelector(B),
        !z))
            throw new Error("`".concat(T, "` refers to no known node"));
        if (typeof B == "function" && (z = B(),
        !z))
            throw new Error("`".concat(T, "` did not return a node"));
        return z
    }, u = function() {
        var T;
        if (d("initialFocus") !== null)
            T = d("initialFocus");
        else if (l(r.activeElement))
            T = r.activeElement;
        else {
            var B = i.tabbableGroups[0]
              , z = B && B.firstTabbableNode;
            T = z || d("fallbackFocus")
        }
        if (!T)
            throw new Error("Your focus-trap needs to have at least one focusable element");
        return T
    }, h = function() {
        if (i.tabbableGroups = i.containers.map(function(T) {
            var B = Sz(T);
            if (B.length > 0)
                return {
                    container: T,
                    firstTabbableNode: B[0],
                    lastTabbableNode: B[B.length - 1]
                }
        }).filter(function(T) {
            return !!T
        }),
        i.tabbableGroups.length <= 0 && !d("fallbackFocus"))
            throw new Error("Your focus-trap must have at least one container with at least one tabbable node in it at all times")
    }, f = function R(T) {
        if (T !== r.activeElement) {
            if (!T || !T.focus) {
                R(u());
                return
            }
            T.focus({
                preventScroll: !!s.preventScroll
            }),
            i.mostRecentlyFocusedNode = T,
            jz(T) && T.select()
        }
    }, p = function(T) {
        var B = d("setReturnFocus");
        return B || T
    }, m = function(T) {
        if (!l(T.target)) {
            if (e2(s.clickOutsideDeactivates, T)) {
                a.deactivate({
                    returnFocus: s.returnFocusOnDeactivate && !Iz(T.target)
                });
                return
            }
            e2(s.allowOutsideClick, T) || T.preventDefault()
        }
    }, g = function(T) {
        var B = l(T.target);
        B || T.target instanceof Document ? B && (i.mostRecentlyFocusedNode = T.target) : (T.stopImmediatePropagation(),
        f(i.mostRecentlyFocusedNode || u()))
    }, C = function(T) {
        h();
        var B = null;
        if (i.tabbableGroups.length > 0) {
            var z = I6(i.tabbableGroups, function(P) {
                var A = P.container;
                return A.contains(T.target)
            });
            if (z < 0)
                T.shiftKey ? B = i.tabbableGroups[i.tabbableGroups.length - 1].lastTabbableNode : B = i.tabbableGroups[0].firstTabbableNode;
            else if (T.shiftKey) {
                var W = I6(i.tabbableGroups, function(P) {
                    var A = P.firstTabbableNode;
                    return T.target === A
                });
                if (W < 0 && i.tabbableGroups[z].container === T.target && (W = z),
                W >= 0) {
                    var fe = W === 0 ? i.tabbableGroups.length - 1 : W - 1
                      , me = i.tabbableGroups[fe];
                    B = me.lastTabbableNode
                }
            } else {
                var _e = I6(i.tabbableGroups, function(P) {
                    var A = P.lastTabbableNode;
                    return T.target === A
                });
                if (_e < 0 && i.tabbableGroups[z].container === T.target && (_e = z),
                _e >= 0) {
                    var I = _e === i.tabbableGroups.length - 1 ? 0 : _e + 1
                      , Q = i.tabbableGroups[I];
                    B = Q.firstTabbableNode
                }
            }
        } else
            B = d("fallbackFocus");
        B && (T.preventDefault(),
        f(B))
    }, b = function(T) {
        if (s.escapeDeactivates !== !1 && Mz(T)) {
            T.preventDefault(),
            a.deactivate();
            return
        }
        if (Tz(T)) {
            C(T);
            return
        }
    }, k = function(T) {
        e2(s.clickOutsideDeactivates, T) || l(T.target) || e2(s.allowOutsideClick, T) || (T.preventDefault(),
        T.stopImmediatePropagation())
    }, S = function() {
        if (i.active)
            return nb.activateTrap(a),
            tb = s.delayInitialFocus ? rb(function() {
                f(u())
            }) : f(u()),
            r.addEventListener("focusin", g, !0),
            r.addEventListener("mousedown", m, {
                capture: !0,
                passive: !1
            }),
            r.addEventListener("touchstart", m, {
                capture: !0,
                passive: !1
            }),
            r.addEventListener("click", k, {
                capture: !0,
                passive: !1
            }),
            r.addEventListener("keydown", b, {
                capture: !0,
                passive: !1
            }),
            a
    }, D = function() {
        if (i.active)
            return r.removeEventListener("focusin", g, !0),
            r.removeEventListener("mousedown", m, !0),
            r.removeEventListener("touchstart", m, !0),
            r.removeEventListener("click", k, !0),
            r.removeEventListener("keydown", b, !0),
            a
    };
    return a = {
        activate: function(T) {
            if (i.active)
                return this;
            var B = o(T, "onActivate")
              , z = o(T, "onPostActivate")
              , W = o(T, "checkCanFocusTrap");
            W || h(),
            i.active = !0,
            i.paused = !1,
            i.nodeFocusedBeforeActivation = r.activeElement,
            B && B();
            var fe = function() {
                W && h(),
                S(),
                z && z()
            };
            return W ? (W(i.containers.concat()).then(fe, fe),
            this) : (fe(),
            this)
        },
        deactivate: function(T) {
            if (!i.active)
                return this;
            clearTimeout(tb),
            D(),
            i.active = !1,
            i.paused = !1,
            nb.deactivateTrap(a);
            var B = o(T, "onDeactivate")
              , z = o(T, "onPostDeactivate")
              , W = o(T, "checkCanReturnFocus");
            B && B();
            var fe = o(T, "returnFocus", "returnFocusOnDeactivate")
              , me = function() {
                rb(function() {
                    fe && f(p(i.nodeFocusedBeforeActivation)),
                    z && z()
                })
            };
            return fe && W ? (W(p(i.nodeFocusedBeforeActivation)).then(me, me),
            this) : (me(),
            this)
        },
        pause: function() {
            return i.paused || !i.active ? this : (i.paused = !0,
            D(),
            this)
        },
        unpause: function() {
            return !i.paused || !i.active ? this : (i.paused = !1,
            h(),
            S(),
            this)
        },
        updateContainerElements: function(T) {
            var B = [].concat(T).filter(Boolean);
            return i.containers = B.map(function(z) {
                return typeof z == "string" ? r.querySelector(z) : z
            }),
            i.active && h(),
            this
        }
    },
    a.updateContainerElements(e),
    a
};
const lue = y.forwardRef((t,e)=>c.jsx("div", {
    ...t,
    ref: e,
    tabIndex: 0,
    "aria-hidden": !0,
    style: {
        position: "absolute",
        top: 9999,
        right: 9999,
        width: 0,
        height: 0
    }
}));
function Oz(t) {
    const {active: e=!0, paused: n=!1, focusTrapOptions: r={}, children: s} = t
      , i = y.Children.only(s)
      , a = y.useRef()
      , o = y.useRef(document == null ? void 0 : document.activeElement)
      , l = y.useRef()
      , d = y.useRef((r == null ? void 0 : r.returnFocusOnDeactivate) ?? !0)
      , u = y.useRef({})
      , h = y.useRef(!1);
    function f() {
        var k;
        !h.current && ((k = o.current) != null && k.focus) && o.current.focus({
            preventScroll: !0
        })
    }
    function p() {
        var k;
        typeof document < "u" && !((k = l.current) != null && k.contains(self.document.activeElement)) && (o.current = self.document.activeElement)
    }
    function m() {
        var k;
        (k = l.current) == null || k.setAttribute("data-focus-trap-active", "true")
    }
    function g() {
        var k;
        (k = l.current) == null || k.setAttribute("data-focus-trap-active", "false")
    }
    y.useLayoutEffect(()=>{
        u.current = {
            returnFocusOnDeactivate: !1
        };
        for (const k in r)
            Object.prototype.hasOwnProperty.call(r, k) && (u.current[k] = r[k]);
        return p(),
        ()=>{
            var k;
            h.current || ((k = a.current) == null || k.deactivate({
                returnFocus: !1
            }),
            g(),
            d.current && f())
        }
    }
    , []),
    y.useEffect(()=>{
        var k, S, D;
        if (!e)
            (k = a.current) == null || k.deactivate({
                returnFocus: !1
            }),
            g(),
            d.current && f(),
            h.current = !0;
        else if (a.current)
            (D = a.current) == null || D.activate(),
            m(),
            p();
        else {
            const R = Kd.findDOMNode(l.current);
            try {
                a.current = R ? Lz(R, u.current) : void 0,
                (S = a.current) == null || S.activate(),
                m(),
                p()
            } catch (T) {
                console.error(T)
            }
        }
    }
    , [e]),
    y.useEffect(()=>{
        var k, S;
        n ? ((S = a.current) == null || S.pause(),
        g()) : ((k = a.current) == null || k.unpause(),
        m())
    }
    , [n]);
    const C = k=>{
        l.current = k;
        const S = i.ref;
        typeof S == "function" ? S(k) : S && (S.current = k)
    }
    ;
    return y.cloneElement(i, {
        ref: C
    })
}
const due = ae("input").attrs({
    type: "button",
    value: ""
})`
  opacity: 0;
  width: 0;
  height: 0;
  position: fixed;
`;
function Rz(t, e, n) {
    return t === t && (n !== void 0 && (t = t <= n ? t : n),
    e !== void 0 && (t = t >= e ? t : e)),
    t
}
var Pz = Rz
  , $z = Pz
  , E6 = q3;
function Fz(t, e, n) {
    return n === void 0 && (n = e,
    e = void 0),
    n !== void 0 && (n = E6(n),
    n = n === n ? n : 0),
    e !== void 0 && (e = E6(e),
    e = e === e ? e : 0),
    $z(E6(t), e, n)
}
var Nz = Fz;
const zS = Cn(Nz)
  , wl = (t,e=70)=>{
    const n = Wl(t, {
        replacement: "-",
        remove: /[*+~%\<\>–\\/;.(){}?,'"`!:@#^|Ьь、。「」＿]/g,
        lower: !0
    }).toLowerCase();
    Wl.extend({
        "<": ""
    }),
    Wl.extend({
        ">": ""
    }),
    Wl.extend({
        "—": "-"
    }),
    Wl.extend({
        _: "-"
    });
    const r = n.split("-");
    if (r.length > 0 && r[0].length > e)
        return r[0].slice(0, e);
    const s = [];
    for (const a of r)
        if ([...s, a].join("-").length <= e)
            s.push(a);
        else
            break;
    const i = s.join("-");
    return i ? i === "edit" ? "edt" : i : "untitled"
}
  , uue = /^([a-z0-9+.-]+):(?:\/\/(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()+,;=]|%[0-9A-F]{2})*)(?::(\d*))?(\/(?:[a-z0-9-._~!$&'()*+,;=:@\/]|%[0-9A-F]{2})*)?|(\/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@\/]|%[0-9A-F]{2})*)?)(?:\?((?:[a-z0-9-._~!$&'()*+,;=:\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\/?@]|%[0-9A-F]{2})*))?$/i
  , ZS = (t,e)=>`${e}${t}`
  , hue = "https://linear.app/join-slack"
  , fue = "https://linear.app/download"
  , pue = "https://desktop.linear.app"
  , Vz = "https://linearstatus.com"
  , mue = t=>{
    const e = t.handler ? `/auth/${t.handler}-${t.service}/${t.email}/${t.token}${t.clientAuthCode ? "/" + t.clientAuthCode : ""}` : `/auth/${t.service}/${t.email}/${t.token}${t.clientAuthCode ? "/" + t.clientAuthCode : ""}`;
    return t.state ? `${e}?state=${t.state}` : t.csrfToken ? `${e}?csrfToken=${t.csrfToken}` : e
}
  , gue = ()=>"https://auth.linear.app/sso"
  , yue = t=>`/auth/sso/${t}/metadata.xml`
  , Bz = (t,e)=>`/auth/sso/${t}${e ? "/" + e : ""}`
  , Cue = t=>`/auth/sso/${t}/acs`
  , Uz = t=>`/auth/scim/${t}`
  , bue = ()=>"/add-account"
  , vue = ()=>"/signup"
  , wue = ()=>"/join"
  , kue = t=>`/invite/${t}/accept`
  , Yn = (t,e)=>`/${t}/settings${e ? "/" + e : ""}`
  , Hz = (t,e)=>`${t}/settings/import-export/migration-assistant${e ? "/" + e : ""}`
  , zz = (t,e,n)=>{
    const {urlKey: r} = e;
    switch (t) {
    case G.airbyte:
        return Yn(r, "integrations/airbyte");
    case G.discord:
        return Yn(r, "integrations/airbyte");
    case G.figma:
    case G.figmaPlugin:
        return Yn(r, "integrations/figma");
    case G.front:
        return Yn(r, "integrations/front");
    case G.github:
    case G.githubCommit:
    case G.githubPersonal:
        return Yn(r, "integrations/github");
    case G.githubEnterpriseServer:
        return Yn(r, "integrations/github-enterprise-server");
    case G.githubImport:
        return Hz(r);
    case G.gitlab:
        return Yn(r, "integrations/gitlab");
    case G.googleCalendarPersonal:
        return Yn(r, "account/profile");
    case G.googleSheets:
        return Yn(r, "integrations/google-sheets");
    case G.intercom:
        return Yn(r, "integrations/intercom");
    case G.jira:
    case G.jiraPersonal:
        return Yn(r, "integrations/jira");
    case G.launchDarkly:
        return Yn(r, "integrations/launch-darkly");
    case G.loom:
        return Yn(r, "integrations");
    case G.notion:
        return Yn(r, "integrations/notion");
    case G.opsgenie:
        return Yn(r, "integrations/opsgenie-triage");
    case G.pagerDuty:
        return Yn(r, "integrations/pagerduty-triage");
    case G.slackAsks:
        return Yn(r, `asks${n != null && n.integrationId ? `/${n.integrationId}` : ""}`);
    case G.slack:
    case G.slackOrgProjectUpdatesPost:
    case G.slackPersonal:
    case G.slackPost:
    case G.slackProjectPost:
    case G.slackProjectUpdatesPost:
    case G.slackCustomViewNotifications:
        return Yn(r, "integrations/slack");
    case G.sentry:
        return Yn(r, "integrations/sentry");
    case G.zendesk:
        return Yn(r, "integrations/zendesk");
    case G.email:
        return Yn(r);
    case j8.zapier:
        return Yn(r, "integrations/zapier");
    default:
        throw new zt(t)
    }
}
  , Zz = "applicationApproval"
  , qz = t=>`${Zz}-${t.split("-")[0]}`
  , Wz = "comment-"
  , ch = t=>`${Wz}${t.split("-")[0]}`
  , Gz = "projectUpdate-"
  , qS = t=>`${Gz}${t.split("-")[0]}`
  , xue = (t,e)=>`${qS(t)}&${ch(e)}`
  , Kz = t=>`update-${t.split("-")[0]}`
  , Yz = ({organizationUrlKey: t, commentId: e, teamKey: n, issueNumber: r, isTeamPrivate: s, title: i, notificationId: a})=>WS({
    baseUrl: YS({
        organizationUrlKey: t,
        teamKey: n,
        issueNumber: r,
        isTeamPrivate: s,
        title: i,
        notificationId: a
    }),
    commentId: e
})
  , WS = ({baseUrl: t, commentId: e})=>`${t}#${ch(e)}`
  , GS = t=>{
    const {organizationUrlKey: e, projectUpdateId: n, projectName: r, projectSlugId: s, notificationId: i} = t;
    return `${Xz(e, r, s, {
        notificationId: i
    })}#${qS(n)}`
}
  , Qz = t=>{
    const {commentId: e, ...n} = t;
    return `${GS(n)}&${ch(e)}`
}
  , KS = (t,e,n)=>`/${t}/team/${e}/${n || "all"}`
  , Dp = (t,e,n)=>KS(t, n, `cycle/${e}`)
  , YS = ({organizationUrlKey: t, teamKey: e, issueNumber: n, title: r, notificationId: s, isTeamPrivate: i})=>{
    const a = `/${t}/issue/${e}-${n}`;
    return s ? `${a}/notification/${s}` : r && !i ? `${a}/${wl(r)}` : a
}
  , Xz = (t,e,n,r)=>{
    let s = `/${t}/project/${wl(e)}-${n}`;
    return r != null && r.notificationId && (s += `/notification/${r.notificationId}`),
    s
}
  , Jz = t=>`/${t}/diary`
  , eZ = (t,e)=>`/${t}/diary#${e}`
  , Due = (t,e)=>`/${t}/profiles/${e}`
  , tZ = ({labelName: t, organizationUrlKey: e, teamKey: n})=>n ? `/${e}/team/${n}/label/${encodeURIComponent(t.toLowerCase())}` : `/${e}/label/${encodeURIComponent(t.toLowerCase())}`
  , nZ = t=>t.split("-")[0]
  , sb = (t,e)=>`/${t}/inbox/notification/${nZ(e)}`
  , Xu = class Xu {
    static encodeObject(e) {
        return Xu.encodeBase64SearchParam(JSON.stringify(e, (n,r)=>typeof r == "string" ? encodeURIComponent(r) : r))
    }
    static decodeObject(e) {
        return JSON.parse(Xu.decodeBase64SearchParam(e), (n,r)=>typeof r == "string" ? decodeURIComponent(r) : r)
    }
    static encodeBase64SearchParam(e) {
        return btoa(e).replace(/[+/]/g, n=>n === "+" ? "-" : "_").replace(/[=]{1,2}$/, "")
    }
    static decodeBase64SearchParam(e) {
        const n = e.replace(/[_-]/g, s=>s === "-" ? "+" : "/")
          , r = n.length % 4;
        return atob(r === 0 ? n : n.padEnd(n.length + (4 - r), "="))
    }
}
;
Xu.BASE64_SEARCH_PARAMS = ["insights", "filter"];
let i9 = Xu;
var rZ = T3
  , QS = /[\\^$.*+?()[\]{}|]/g
  , sZ = RegExp(QS.source);
function iZ(t) {
    return t = rZ(t),
    t && sZ.test(t) ? t.replace(QS, "\\$&") : t
}
var aZ = iZ;
const Sp = Cn(aZ)
  , C4 = y.memo(t=>{
    const {title: e="", highlight: n=""} = t
      , r = lZ(e)
      , s = (typeof n == "string" ? n.split(" ") : n).filter(a=>a.length > 0)
      , i = r.flatMap(({content: a, type: o},l)=>{
        const d = cZ(a, s);
        return o === "code" ? c.jsx(WV, {
            children: d
        }, l) : d
    }
    );
    return c.jsx(c.Fragment, {
        children: i
    })
}
, (t,e)=>Yo(t, e))
  , oZ = ae.span`
  background-color: ${ze("textHighlight")};
  color: ${ze("labelTitle")};
`
  , cZ = (t,e)=>{
    let n = [];
    const r = [];
    for (const i of e) {
        const a = [...t.matchAll(new RegExp(`\\b${Sp(i)}\\b`,"mgi"))];
        a.filter(o=>o.index !== void 0),
        n.push(...a)
    }
    n = n5(Gi(n, [i=>i.index || 0, i=>i[0].length]), "index");
    const s = n.map(i=>i.index).filter(i=>i !== null);
    if (s.length === 0)
        return [t];
    s[0] !== 0 && r.push(t.slice(0, s[0]));
    for (const [i,a] of s.entries()) {
        const l = n[i][0];
        if (r.push(c.jsx(oZ, {
            children: t.slice(a, a + l.length)
        }, i)),
        a !== t.length - 1) {
            const d = i === s.length - 1 ? t.length : s[i + 1];
            r.push(t.slice(a + l.length, d))
        }
    }
    return r
}
  , lZ = t=>{
    const e = [];
    let n;
    const r = (a,o)=>{
        a && ((n == null ? void 0 : n.type) === "text" && !o ? n.content += a : (n = {
            content: a,
            type: o ? "code" : "text"
        },
        e.push(n)))
    }
    ;
    let s = ""
      , i = !1;
    for (let a = 0; a < t.length; a++) {
        const o = t[a];
        o === "`" ? (!s && i && (s = "``"),
        r(s, i && s !== "``"),
        s = "",
        i = !i) : s += o
    }
    return i && (s = "`" + s),
    r(s, !1),
    e
}
;
var j;
(function(t) {
    t.Accessibility = "Accessibility",
    t.Africa = "Africa",
    t.Airplane = "Airplane",
    t.Alert = "Alert",
    t.Anchor = "Anchor",
    t.Android = "Android",
    t.Apple = "Apple",
    t.Asia = "Asia",
    t.Australia = "Australia",
    t.Bank = "Bank",
    t.BarChart = "BarChart",
    t.Basket = "Basket",
    t.Battery = "Battery",
    t.Bike = "Bike",
    t.Bitcoin = "Bitcoin",
    t.Bolt = "Bolt",
    t.Book = "Book",
    t.Bookmark = "Bookmark",
    t.Briefcase = "Briefcase",
    t.Brush = "Brush",
    t.Bucket = "Bucket",
    t.Bug = "Bug",
    t.Burger = "Burger",
    t.Calendar = "Calendar",
    t.Camera = "Camera",
    t.Car = "Car",
    t.Cart = "Cart",
    t.Chart = "Chart",
    t.Chat = "Chat",
    t.Chip = "Chip",
    t.Clock = "Clock",
    t.ClockOutline = "ClockOutline",
    t.Cloud = "Cloud",
    t.Coffee = "Coffee",
    t.Compass = "Compass",
    t.Computer = "Computer",
    t.Cone = "Cone",
    t.CreditCard = "CreditCard",
    t.Cross = "Cross",
    t.Crown = "Crown",
    t.Cube = "Cube",
    t.CustomView = "CustomView",
    t.Dashboard = "Dashboard",
    t.Database = "Database",
    t.DesignTools = "DesignTools",
    t.Dna = "Dna",
    t.Dollar = "Dollar",
    t.Education = "Education",
    t.Etherum = "Etherum",
    t.Euro = "Euro",
    t.Europe = "Europe",
    t.FaceFlatSmile = "FaceFlatSmile",
    t.FaceHeartEyes = "FaceHeartEyes",
    t.Face = "Face",
    t.FaceId = "FaceId",
    t.FaceMask = "FaceMask",
    t.FaceMonocle = "FaceMonocle",
    t.FaceStarEyes = "FaceStarEyes",
    t.FaceSunglasses = "FaceSunglasses",
    t.FaceSurprise = "FaceSurprise",
    t.FaceTired = "FaceTired",
    t.FaceTongue = "FaceTongue",
    t.Feather = "Feather",
    t.Fire = "Fire",
    t.Flower = "Flower",
    t.Folder = "Folder",
    t.FootPrint = "FootPrint",
    t.Gears = "Gears",
    t.GitHub = "GitHub",
    t.GitLab = "GitLab",
    t.Heart = "Heart",
    t.Home = "Home",
    t.Image = "Image",
    t.Inbox = "Inbox",
    t.Initiative = "Initiative",
    t.Joystick = "Joystick",
    t.Jersey = "Jersey",
    t.Label = "Label",
    t.Leaf = "Leaf",
    t.LightBulb = "LightBulb",
    t.Link = "Link",
    t.Lock = "Lock",
    t.Mac = "Mac",
    t.Mic = "Mic",
    t.Megaphone = "Megaphone",
    t.MobilePhone = "MobilePhone",
    t.Modem = "Modem",
    t.Moon = "Moon",
    t.Mountain = "Mountain",
    t.MusicKey = "MusicKey",
    t.NorthAmerica = "NorthAmerica",
    t.Page = "Page",
    t.Paint = "Paint",
    t.Phone = "Phone",
    t.PieChart = "PieChart",
    t.Pin = "Pin",
    t.Pizza = "Pizza",
    t.Present = "Present",
    t.Project = "Project",
    t.Radar = "Radar",
    t.Ramen = "Ramen",
    t.Recycle = "Recycle",
    t.Robot = "Robot",
    t.Rocket = "Rocket",
    t.Scissors = "Scissors",
    t.Search = "Search",
    t.Send = "Send",
    t.Server = "Server",
    t.Shield = "Shield",
    t.Ship = "Ship",
    t.Shop = "Shop",
    t.Sign = "Sign",
    t.Skull = "Skull",
    t.Sound = "Sound",
    t.SouthAmerica = "SouthAmerica",
    t.Favorite = "Favorite",
    t.Subscribe = "Subscribe",
    t.Sun = "Sun",
    t.Tablet = "Tablet",
    t.TeeShirt = "TeeShirt",
    t.Terminal = "Terminal",
    t.Team = "Team",
    t.ThumbsUp = "ThumbsUp",
    t.ThumbsDown = "ThumbsDown",
    t.Trash = "Trash",
    t.Tree = "Tree",
    t.Umbrella = "Umbrella",
    t.UnhappyFace = "UnhappyFace",
    t.Users = "Users",
    t.Video = "Video",
    t.Watch = "Watch",
    t.WindTurbine = "WindTurbine",
    t.World = "World",
    t.AirTag = "AirTag",
    t.AlarmClock = "AlarmClock",
    t.AmericanFootBall = "AmericanFootBall",
    t.Asterisk = "Asterisk",
    t.Bandage = "Bandage",
    t.Basketball = "Basketball",
    t.Bed = "Bed",
    t.Boombox = "Boombox",
    t.Bones = "Bones",
    t.BookOpen = "BookOpen",
    t.BowlingBall = "BowlingBall",
    t.Box = "Box",
    t.BoxOpen = "BoxOpen",
    t.Bus = "Bus",
    t.Calculator = "Calculator",
    t.CarPool = "CarPool",
    t.Chemist = "Chemist",
    t.ClickButton = "ClickButton",
    t.ClothHanger = "ClothHanger",
    t.Comodore = "Comodore",
    t.Connected = "Connected",
    t.ConstructionBarrier = "ConstructionBarrier",
    t.Conversation = "Conversation",
    t.Cookie = "Cookie",
    t.Crane = "Crane",
    t.CrystalBall = "CrystalBall",
    t.DesktopWindow = "DesktopWindow",
    t.Dice = "Dice",
    t.Dino = "Dino",
    t.DollarBill = "DollarBill",
    t.Dumbbell = "Dumbbell",
    t.ElectricPlug = "ElectricPlug",
    t.Eraser = "Eraser",
    t.Extinguisher = "Extinguisher",
    t.Factory = "Factory",
    t.Flashlight = "Flashlight",
    t.FloppyDisk = "FloppyDisk",
    t.Garage = "Garage",
    t.Golf = "Golf",
    t.Hack = "Hack",
    t.Health = "Health",
    t.Hear = "Hear",
    t.Hourglass = "Hourglass",
    t.Judge = "Judge",
    t.Ladder = "Ladder",
    t.LockerRoom = "LockerRoom",
    t.MacOS = "MacOS",
    t.MagicWand = "MagicWand",
    t.Magnet = "Magnet",
    t.Mask = "Mask",
    t.MilitaryTruck = "MilitaryTruck",
    t.MoneyStack = "MoneyStack",
    t.MovingStaircase = "MovingStaircase",
    t.MusicTape = "MusicTape",
    t.NotePad = "NotePad",
    t.Notified = "Notified",
    t.PalmTree = "PalmTree",
    t.Pills = "Pills",
    t.PingPong = "PingPong",
    t.Pointer = "Pointer",
    t.PokerCard = "PokerCard",
    t.Process = "Process",
    t.Rank = "Rank",
    t.Runner = "Runner",
    t.SafetyKit = "SafetyKit",
    t.Shrug = "Shrug",
    t.Signature = "Signature",
    t.SoccerBall = "SoccerBall",
    t.Spaces = "Spaces",
    t.Speaker = "Speaker",
    t.Spreadsheet = "Spreadsheet",
    t.Stadium = "Stadium",
    t.Storm = "Storm",
    t.Subgroup = "Subgroup",
    t.Surfer = "Surfer",
    t.Taxi = "Taxi",
    t.TennisBall = "TennisBall",
    t.TextBlock = "TextBlock",
    t.TextParagraph = "TextParagraph",
    t.Tower = "Tower",
    t.TrafficLight = "TrafficLight",
    t.Train = "Train",
    t.Tram = "Tram",
    t.Union = "Union",
    t.ViewFinder = "ViewFinder",
    t.VisionPro = "VisionPro",
    t.Wall = "Wall",
    t.Wrench = "Wrench",
    t.Write = "Write",
    t.WritingAI = "WritingAI",
    t.Refresh = "Refresh",
    t.Comment = "Comment",
    t.Attachment = "Attachment",
    t.Blockquote = "Blockquote",
    t.CodeBlock = "CodeBlock",
    t.Brick = "Brick",
    t.Meta = "Meta",
    t.OpenAI = "OpenAI"
}
)(j || (j = {}));
const uo = class uo {
    static getIconTypes(e) {
        return uo.burnerIconTypes.includes(e) ? [e, ...uo.customIconTypes] : [e, uo.burnerIconTypes[0], ...uo.customIconTypes.filter(n=>n !== e)]
    }
    static isDecorativeIconType(e) {
        return this.allIconTypes.includes(e)
    }
    static async keywords() {
        return await H2(()=>import("./decorativeIconKeywords.hash-mfjRQ0eJ.js"), __vite__mapDeps([]), import.meta.url)
    }
}
;
uo.customIconTypes = ["Radar", "Chip", "Joystick", "Battery", "Sound", "Cone", "Database", "Terminal", "Watch", "Clock", "Lock", "Compass", "Server", "Calendar", "Apple", "Android", "Page", "Robot", "Chat", "LightBulb", "Alert", "Mac", "MobilePhone", "Computer", "Tablet", "Cube", "Bookmark", "Video", "Sign", "Inbox", "Subscribe", "Bucket", "Label", "Brush", "Home", "Camera", "Trash", "GitHub", "GitLab", "Book", "Megaphone", "Education", "Present", "Umbrella", "Feather", "Cross", "Gears", "Phone", "Image", "Basket", "DesignTools", "TeeShirt", "Link", "Dashboard", "CreditCard", "Briefcase", "Bank", "Dollar", "Euro", "Bitcoin", "Etherum", "Cart", "Shop", "Shield", "PieChart", "BarChart", "Chart", "Crown", "Airplane", "Bike", "Car", "Ship", "Rocket", "Anchor", "World", "Asia", "Australia", "Europe", "Africa", "SouthAmerica", "NorthAmerica", "Pin", "Face", "UnhappyFace", "ThumbsUp", "ThumbsDown", "Skull", "FaceHeartEyes", "FaceFlatSmile", "FaceMask", "FaceSurprise", "FaceMonocle", "FaceSunglasses", "FaceStarEyes", "FaceTongue", "FaceTired", "Cloud", "Leaf", "Tree", "Mountain", "Sun", "Flower", "Heart", "Fire", "Users", "Bug", "Recycle", "Dna", "Bolt", "Favorite", "Coffee", "Accessibility", "Burger", "FaceId", "FootPrint", "Mic", "MusicKey", "Paint", "Pizza", "Ramen", "WindTurbine", "Modem", "Jersey", "Moon", "Scissors", "AirTag", "AlarmClock", "AmericanFootBall", "Asterisk", "Bandage", "Basketball", "Bed", "Boombox", "Bones", "BookOpen", "BowlingBall", "Box", "BoxOpen", "Bus", "Calculator", "CarPool", "Chemist", "ClickButton", "ClothHanger", "Comodore", "Connected", "ConstructionBarrier", "Conversation", "Cookie", "Crane", "CrystalBall", "DesktopWindow", "Dice", "Dino", "DollarBill", "Dumbbell", "ElectricPlug", "Eraser", "Extinguisher", "Factory", "Flashlight", "FloppyDisk", "Garage", "Golf", "Hack", "Health", "Hear", "Hourglass", "Judge", "Ladder", "LockerRoom", "MacOS", "MagicWand", "Magnet", "Mask", "MilitaryTruck", "MoneyStack", "MovingStaircase", "MusicTape", "NotePad", "Notified", "PalmTree", "Pills", "PingPong", "Pointer", "PokerCard", "Process", "Rank", "Runner", "SafetyKit", "Shrug", "Signature", "SoccerBall", "Spaces", "Speaker", "Spreadsheet", "Stadium", "Storm", "Subgroup", "Surfer", "Taxi", "TennisBall", "TextBlock", "TextParagraph", "Tower", "TrafficLight", "Train", "Tram", "Union", "ViewFinder", "VisionPro", "Wall", "Wrench", "Write", "WritingAI", "Refresh", "Comment", "Attachment", "Blockquote", "CodeBlock", "Brick", "Meta", "OpenAI"],
uo.burnerIconTypes = ["CustomView", "Project", "Initiative", "Team"],
uo.allIconTypes = Object.keys(j);
let ib = uo;
function dZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8.75 5C8.75 4.58579 8.41421 4.25 8 4.25C7.58579 4.25 7.25 4.58579 7.25 5V8C7.25 8.41421 7.58579 8.75 8 8.75H11C11.4142 8.75 11.75 8.41421 11.75 8C11.75 7.58579 11.4142 7.25 11 7.25H8.75V5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8ZM13.5 8C13.5 11.0376 11.0376 13.5 8 13.5C4.96243 13.5 2.5 11.0376 2.5 8C2.5 4.96243 4.96243 2.5 8 2.5C11.0376 2.5 13.5 4.96243 13.5 8Z"
            })]
        })
    })
}
function uZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fill: "var(--icon-color, #615EFF)",
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.84678 2.69858C7.34446 1.01589 9.82458 0.522268 11.8636 1.49354C14.5726 2.78416 15.5609 6.07184 14.086 8.60788L10.768 14.3066C10.5826 14.6251 10.2775 14.8574 9.91966 14.9527C9.56186 15.0479 9.18062 14.9982 8.85966 14.8146L12.8767 7.91388C13.9468 6.07328 13.2311 3.68747 11.267 2.7481C9.7933 2.04332 7.99178 2.3954 6.9031 3.60748C6.30258 4.27287 5.96542 5.13196 5.95418 6.0254C5.94294 6.91888 6.25838 7.78604 6.84194 8.46616C6.94682 8.5882 7.0597 8.70324 7.17982 8.81056L4.83468 12.8463C4.74298 13.0041 4.62088 13.1424 4.47535 13.2533C4.32982 13.3642 4.16372 13.4456 3.98654 13.4927C3.80935 13.5399 3.62454 13.5519 3.44266 13.5282C3.26079 13.5044 3.08541 13.4453 2.92653 13.3542L5.47242 8.9728C5.10672 8.44928 4.8441 7.86172 4.69842 7.2412L3.13834 9.93144C2.95289 10.2499 2.64777 10.4822 2.28997 10.5775C1.93217 10.6727 1.55094 10.623 1.22998 10.4394L5.26434 3.49993C5.43226 3.21495 5.6273 2.94661 5.84678 2.69858ZM10.5032 4.90742C11.4748 5.46464 11.8104 6.70388 11.2482 7.66832L7.3795 14.3058C7.19406 14.6243 6.88894 14.8566 6.53114 14.9518C6.17334 15.0471 5.7921 14.9974 5.47114 14.8138L9.06334 8.6342C8.7751 8.57396 8.5035 8.45232 8.26722 8.27768C8.03094 8.103 7.83566 7.87952 7.69486 7.62264C7.55402 7.36572 7.47102 7.08156 7.45158 6.78968C7.43214 6.49784 7.4767 6.20528 7.58222 5.9322C7.68774 5.65912 7.85166 5.412 8.0627 5.20796C8.27374 5.00392 8.52686 4.84781 8.80458 4.75038C9.0823 4.65295 9.37798 4.61654 9.67126 4.64365C9.96454 4.67076 10.2484 4.76075 10.5032 4.90742ZM9.09602 6.15484C9.02954 6.20552 8.97374 6.26872 8.93186 6.3408H8.93166C8.86854 6.4494 8.8393 6.57412 8.84754 6.69924C8.85582 6.82432 8.90126 6.9442 8.97814 7.04364C9.05502 7.14308 9.15982 7.21768 9.27938 7.25796C9.39894 7.29828 9.52782 7.30244 9.64978 7.27C9.77174 7.23752 9.88126 7.16992 9.96446 7.07564C10.0477 6.98136 10.1009 6.86472 10.1174 6.74044C10.1339 6.61612 10.1129 6.48976 10.0571 6.37732C10.0012 6.26488 9.91306 6.1714 9.80374 6.10872C9.73114 6.06708 9.65102 6.04008 9.5679 6.0292C9.48478 6.01836 9.40034 6.02384 9.31938 6.0454C9.23842 6.06696 9.16254 6.10412 9.09602 6.15484Z"
            })
        })
    })
}
function hZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M11.379 4.556a3.556 3.556 0 11-7.111 0 3.556 3.556 0 017.11 0zm-4.268 7.822a3.556 3.556 0 11-7.111 0 3.556 3.556 0 017.111 0zm5.333 3.555a3.556 3.556 0 100-7.11 3.556 3.556 0 000 7.11z"
            })
        })
    })
}
function fZ(t) {
    const e = Pt();
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fill: `var(--icon-color, ${e.color.controlPrimary})`,
                d: "M6.44179 8.00397C6.25955 8.49376 6.16846 9.13456 6.16846 9.92639C6.16846 10.2645 6.43349 10.5386 6.76043 10.5386H9.17679C9.37295 10.5386 9.53197 10.3742 9.53197 10.1713C9.53197 9.71415 9.62704 9.32232 9.81721 8.99579C10.0074 8.66927 10.2768 8.36723 10.6254 8.08968C10.9819 7.80397 11.4019 7.49377 11.8852 7.15909C12.0743 7.03123 12.334 7.09685 12.4309 7.30784L14.8375 12.5479C15.3604 13.6864 14.5576 15 13.3389 15H10.4354C10.1899 15 9.99093 14.801 9.99093 14.5556V14.3136C9.99093 13.1764 9.09956 12.2545 8 12.2545C6.90044 12.2545 6.00907 13.1764 6.00907 14.3136V14.5556C6.00907 14.801 5.81009 15 5.56463 15H2.66113C1.44238 15 0.639582 13.6864 1.16249 12.5479L5.88322 2.28569C6.075 1.86937 6.39824 1.55101 6.78649 1.33061C7.18266 1.1102 7.64615 1 8.17703 1C8.66036 1 9.08032 1.08979 9.43687 1.26938C9.79343 1.44081 10.0708 1.68978 10.2688 2.01631C10.4669 2.33467 10.566 2.71018 10.566 3.14282C10.566 3.60812 10.4313 4.05301 10.1619 4.4775C9.9004 4.90198 9.47648 5.29381 8.89015 5.65299C8.25627 6.02033 7.73728 6.37951 7.33318 6.73052C6.92908 7.08154 6.63195 7.50602 6.44179 8.00397Z"
            })
        })
    })
}
function XS(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fill: "var(--icon-color, #5865F2)",
                d: "M13.2064 3.005C12.2355 2.5355 11.1972 2.19429 10.1118 2C9.97851 2.24907 9.82277 2.58408 9.7154 2.85057C8.56156 2.67124 7.41834 2.67124 6.28572 2.85057C6.17837 2.58408 6.0191 2.24907 5.8846 2C4.798 2.19429 3.7586 2.53675 2.78762 3.00748C0.829152 6.06602 0.298243 9.04858 0.563698 11.9888C1.86266 12.9913 3.12151 13.6003 4.35911 13.9988C4.66468 13.5641 4.93721 13.1021 5.17199 12.6152C4.72485 12.4396 4.29658 12.2229 3.89192 11.9714C3.99928 11.8892 4.10429 11.8032 4.20574 11.7148C6.67387 12.9079 9.35556 12.9079 11.7942 11.7148C11.8969 11.8032 12.0018 11.8892 12.108 11.9714C11.7022 12.2242 11.2727 12.4408 10.8256 12.6165C11.0604 13.1021 11.3317 13.5654 11.6385 14C12.8773 13.6015 14.1373 12.9925 15.4362 11.9888C15.7477 8.58034 14.9042 5.62516 13.2064 3.005ZM5.50824 10.1806C4.76733 10.1806 4.15972 9.46576 4.15972 8.59528C4.15972 7.72479 4.75435 7.00873 5.50824 7.00873C6.26214 7.00873 6.86972 7.72354 6.85675 8.59528C6.85792 9.46576 6.26214 10.1806 5.50824 10.1806ZM10.4917 10.1806C9.7508 10.1806 9.1432 9.46576 9.1432 8.59528C9.1432 7.72479 9.73781 7.00873 10.4917 7.00873C11.2456 7.00873 11.8532 7.72354 11.8402 8.59528C11.8402 9.46576 11.2456 10.1806 10.4917 10.1806Z"
            })
        })
    })
}
function JS(t) {
    return t.color === "brand" ? c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5.33334 15C5.95218 15 6.54567 14.7541 6.98326 14.3166C7.42085 13.879 7.66668 13.2855 7.66668 12.6666V10.3333H5.33334C4.7145 10.3333 4.12101 10.5791 3.68342 11.0167C3.24583 11.4543 3 12.0478 3 12.6666C3 13.2855 3.24583 13.879 3.68342 14.3166C4.12101 14.7541 4.7145 15 5.33334 15Z",
                fill: "#0ACF83"
            }), c.jsx("path", {
                d: "M3 8.00004C3 7.3812 3.24583 6.78771 3.68342 6.35012C4.12101 5.91254 4.7145 5.6667 5.33334 5.6667H7.66668V10.3333H5.33334C4.7145 10.3333 4.12101 10.0875 3.68342 9.64996C3.24583 9.21238 3 8.61888 3 8.00004Z",
                fill: "#A259FF"
            }), c.jsx("path", {
                d: "M3 3.33334C3 2.71481 3.24558 2.1216 3.68277 1.68406C4.11997 1.24653 4.71299 1.00048 5.33152 1H7.66486V5.66668L5.33334 5.6667C4.7145 5.6667 4.12101 5.42085 3.68342 4.98326C3.24583 4.54567 3 3.95218 3 3.33334Z",
                fill: "#F24E1E"
            }), c.jsx("path", {
                d: "M7.66681 1H10.0001C10.619 1 11.2125 1.24583 11.6501 1.68342C12.0877 2.12101 12.3335 2.7145 12.3335 3.33334C12.3335 3.95218 12.0877 4.54567 11.6501 4.98326C11.2125 5.42085 10.619 5.66668 10.0001 5.66668L7.66668 5.6667L7.66681 1Z",
                fill: "#FF7262"
            }), c.jsx("path", {
                d: "M12.3335 8.00004C12.3335 8.61888 12.0877 9.21238 11.6501 9.64996C11.2125 10.0875 10.619 10.3334 10.0001 10.3334C9.38131 10.3334 8.78781 10.0875 8.35023 9.64996C7.91264 9.21238 7.66681 8.61888 7.66681 8.00004C7.66681 7.3812 7.91264 6.78771 8.35023 6.35012C8.78781 5.91254 9.38131 5.66668 10.0001 5.66668C10.619 5.66668 11.2125 5.91254 11.6501 6.35012C12.0877 6.78771 12.3335 7.3812 12.3335 8.00004Z",
                fill: "#1ABCFE"
            })]
        })
    }) : c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M3.12988 3.61932C3.12988 2.17271 4.3026 1 5.74921 1H10.2437C11.6903 1 12.863 2.17271 12.863 3.61932C12.863 4.53532 12.3928 5.34149 11.6806 5.80966C12.3928 6.27783 12.863 7.084 12.863 7.99999C12.863 9.44661 11.6903 10.6193 10.2437 10.6193H10.1868C9.5086 10.6193 8.89061 10.3616 8.42543 9.93872V12.3522C8.42543 13.8181 7.22207 15 5.76334 15C4.32032 15 3.12988 13.8309 3.12988 12.3807C3.12988 11.4647 3.60007 10.6585 4.31225 10.1903C3.60007 9.72216 3.12988 8.91598 3.12988 7.99999C3.12988 7.084 3.60006 6.27783 4.31225 5.80966C3.60006 5.34149 3.12988 4.53532 3.12988 3.61932ZM5.74921 5.38067H7.56745V1.85799H5.74921C4.77645 1.85799 3.98787 2.64657 3.98787 3.61932C3.98787 4.59209 4.77645 5.38067 5.74921 5.38067ZM7.56745 6.23865H5.74921C4.77645 6.23865 3.98787 7.02723 3.98787 7.99999C3.98787 8.97276 4.77645 9.76134 5.74921 9.76134H7.56745V6.23865ZM7.56745 10.6193H5.74921C4.77645 10.6193 3.98787 11.4079 3.98787 12.3807C3.98787 13.3499 4.78698 14.142 5.76334 14.142C6.75541 14.142 7.56745 13.3371 7.56745 12.3522V10.6193ZM10.1868 6.23865C9.21401 6.23865 8.42543 7.02723 8.42543 7.99999C8.42543 8.97276 9.21401 9.76134 10.1868 9.76134H10.2437C11.2164 9.76134 12.005 8.97276 12.005 7.99999C12.005 7.02723 11.2164 6.23865 10.2437 6.23865H10.1868ZM10.2437 5.38067C11.2164 5.38067 12.005 4.59209 12.005 3.61932C12.005 2.64657 11.2164 1.85799 10.2437 1.85799H8.42543V5.38067H10.2437Z"
            })
        })
    })
}
function e_(t) {
    return t.color === "brand" ? c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("circle", {
                cx: "8",
                cy: "8",
                r: "7",
                fill: "#fff"
            }), c.jsx("path", {
                fill: "#001B38",
                d: "M5.187 5.19c0-.774.628-1.4 1.402-1.4h4.493v1.993a.7.7 0 0 1-.7.7H8.556a.674.674 0 0 0-.674.674v4.352a.7.7 0 0 1-.7.701H5.186V5.19Z"
            }), c.jsx("path", {
                fill: "url(#front-a)",
                d: "M6.754 7.174a1.819 1.819 0 1 0 3.638 0 1.819 1.819 0 0 0-3.638 0Z"
            }), c.jsx("path", {
                fill: "url(#front-b)",
                d: "M6.754 7.174a1.819 1.819 0 1 0 3.638 0 1.819 1.819 0 0 0-3.638 0Z",
                opacity: ".5"
            }), c.jsxs("defs", {
                children: [c.jsxs("linearGradient", {
                    id: "front-a",
                    x1: "7.292",
                    x2: "10.027",
                    y1: "5.811",
                    y2: "8.565",
                    gradientUnits: "userSpaceOnUse",
                    children: [c.jsx("stop", {
                        stopColor: "#FF0057",
                        stopOpacity: ".16"
                    }), c.jsx("stop", {
                        offset: ".861",
                        stopColor: "#FF0057"
                    })]
                }), c.jsxs("linearGradient", {
                    id: "front-b",
                    x1: "7.292",
                    x2: "10.027",
                    y1: "5.811",
                    y2: "8.565",
                    gradientUnits: "userSpaceOnUse",
                    children: [c.jsx("stop", {
                        stopColor: "#FF0057",
                        stopOpacity: ".16"
                    }), c.jsx("stop", {
                        offset: ".861",
                        stopColor: "#FF0057"
                    })]
                })]
            })]
        })
    }) : c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5.3646 1C4.05866 1 3 2.04216 3 3.32775V14.9889H6.36501C7.018 14.9889 7.54731 14.4678 7.54731 13.825V9.41986C6.42984 8.96822 5.64289 7.88634 5.64289 6.62352C5.64289 4.95474 7.01712 3.60193 8.71231 3.60193C9.99504 3.60193 11.094 4.37651 11.5528 5.47644H11.765C12.4179 5.47644 12.9473 4.95534 12.9473 4.31257V1H5.3646Z"
            }), c.jsx("path", {
                d: "M6.5 6.75C6.5 7.99264 7.50736 9 8.75 9C9.99264 9 11 7.99264 11 6.75C11 5.50736 9.99264 4.5 8.75 4.5C7.50736 4.5 6.5 5.50736 6.5 6.75Z"
            })]
        })
    })
}
function p5(t) {
    const e = Pt();
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fill: `var(--icon-color, ${e.color.githubLogo})`,
                d: "M11.5127 1.96272C10.4401 1.32091 9.27013 1 7.99946 1C6.72987 1 5.5588 1.32091 4.48573 1.96272C3.41428 2.60397 2.56465 3.47445 1.939 4.57358C1.31228 5.67383 1 6.87359 1 8.17567C1 9.73883 1.44527 11.1443 2.33528 12.3933C3.22529 13.64 4.37482 14.5066 5.78494 14.9846C5.94862 15.0159 6.0703 14.9941 6.14891 14.9192C6.22806 14.8437 6.26736 14.7515 6.26736 14.6396L6.26306 14.1337C6.25983 13.8161 6.25767 13.5394 6.25767 13.3023L6.04877 13.3392C5.91524 13.3644 5.74617 13.375 5.54265 13.3717C5.33967 13.3689 5.12807 13.3471 4.90947 13.3063C4.69249 13.266 4.4895 13.1732 4.30105 13.0267C4.11261 12.8802 3.97908 12.6885 3.89993 12.452L3.8084 12.2362C3.7481 12.0931 3.65226 11.9343 3.52196 11.761C3.39112 11.5854 3.25921 11.4669 3.12568 11.4049L3.06107 11.3585C3.01908 11.3271 2.98031 11.2902 2.94262 11.2466C2.90655 11.203 2.87962 11.1594 2.86186 11.1158C2.84355 11.0711 2.85809 11.0359 2.90655 11.0079C2.955 10.9788 3.0433 10.966 3.17037 10.966L3.35343 10.9939C3.47404 11.0185 3.6248 11.0935 3.80409 11.2176C3.98339 11.3428 4.13091 11.5044 4.2456 11.704C4.38559 11.9589 4.55411 12.1535 4.75171 12.2876C4.94931 12.4218 5.14853 12.4889 5.34936 12.4889C5.54857 12.4889 5.72248 12.4721 5.86839 12.4419C6.01377 12.4106 6.15107 12.3637 6.27759 12.3022C6.33359 11.884 6.48219 11.5631 6.72448 11.3389C6.37882 11.3009 6.06761 11.245 5.7914 11.17C5.51465 11.0957 5.22929 10.9744 4.93531 10.8055C4.63918 10.6378 4.39528 10.4298 4.20091 10.1794C4.00708 9.93227 3.84717 9.60353 3.72333 9.201C3.59949 8.79456 3.5365 8.32885 3.5365 7.79885C3.5365 7.04579 3.77556 6.40397 4.25583 5.87397C4.03077 5.30708 4.05123 4.67197 4.32044 3.96755C4.49542 3.91164 4.75656 3.95357 5.1033 4.09334C5.4495 4.2331 5.70256 4.3533 5.86355 4.45226C6.02507 4.55289 6.1543 4.63675 6.25121 4.70496C6.81494 4.54618 7.39751 4.46624 7.99946 4.46624C8.60142 4.46624 9.18399 4.5473 9.74933 4.70887L10.0955 4.48413C10.3324 4.33485 10.6124 4.199 10.9344 4.07321C11.2574 3.9491 11.504 3.91499 11.6742 3.9709C11.9472 4.67533 11.9719 5.30987 11.7469 5.87733C12.2261 6.40621 12.4662 7.04802 12.4662 7.80165C12.4662 8.33053 12.4037 8.79959 12.2794 9.20771C12.1555 9.61583 11.994 9.94457 11.7959 10.19C11.5988 10.436 11.3533 10.6428 11.0582 10.8117C10.7637 10.9794 10.4767 11.1007 10.2021 11.1751C9.92539 11.25 9.61526 11.3059 9.26744 11.3428C9.58349 11.6223 9.74125 12.064 9.74125 12.6695V14.6413C9.74125 14.7531 9.77894 14.8459 9.8554 14.9208C9.93077 14.9952 10.0508 15.0176 10.2151 14.9863C11.6257 14.5055 12.7747 13.6423 13.6647 12.3922C14.5547 11.1454 15 9.73827 15 8.17567C15 6.87415 14.6866 5.67383 14.061 4.57414C13.4348 3.475 12.5857 2.60453 11.5143 1.96328L11.5127 1.96272Z"
            })
        })
    })
}
const _p = t=>c.jsx(x, {
    ...t,
    children: c.jsxs("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        className: t.className,
        style: t.style,
        children: [c.jsx("path", {
            d: "m14.767 6.54-.02-.051-1.905-5.163a.496.496 0 0 0-.948.054l-1.287 4.086h-5.21L4.11 1.38a.5.5 0 0 0-.752-.3.516.516 0 0 0-.196.246l-1.91 5.16-.018.053a3.806 3.806 0 0 0-.097 2.326 3.68 3.68 0 0 0 1.27 1.92l.007.005.017.013 2.903 2.257 1.436 1.128.875.686a.575.575 0 0 0 .712 0l.874-.686 1.436-1.128 2.92-2.27.008-.007a3.681 3.681 0 0 0 1.267-1.918 3.807 3.807 0 0 0-.095-2.323Z",
            fill: "var(--icon-color, #E24329)"
        }), c.jsx("path", {
            d: "m14.767 6.54-.02-.051a6.326 6.326 0 0 0-2.562 1.195L8 10.97c1.425 1.12 2.666 2.092 2.666 2.092l2.92-2.27.008-.007a3.68 3.68 0 0 0 1.269-1.919 3.808 3.808 0 0 0-.096-2.325Z",
            fill: "var(--icon-color, #FC6D26)"
        }), c.jsx("path", {
            d: "M5.334 13.062 6.77 14.19l.875.686a.575.575 0 0 0 .712 0l.874-.686 1.436-1.128S9.425 12.086 8 10.97c-1.425 1.116-2.666 2.092-2.666 2.092Z",
            fill: "var(--icon-color, #FCA326)"
        }), c.jsx("path", {
            d: "M3.814 7.684c-.758-.59-1.633-1-2.561-1.198l-.02.052a3.806 3.806 0 0 0-.096 2.326 3.68 3.68 0 0 0 1.27 1.92l.007.005.017.013 2.903 2.257L8 10.967 3.814 7.684Z",
            fill: "var(--icon-color, #FC6D26)"
        })]
    })
});
function pZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fill: "#fff",
                d: "M11.684 4.316 8.37 3.947l-4.053.369L3.947 8l.369 3.684 3.684.46 3.684-.46.369-3.776-.369-3.592Z"
            }), c.jsx("path", {
                fill: "#1A73E8",
                d: "M5.827 10.033c-.275-.186-.466-.458-.57-.817l.64-.264a.97.97 0 0 0 .303.514.783.783 0 0 0 .524.182c.209 0 .388-.064.538-.191a.61.61 0 0 0 .226-.485c0-.201-.08-.365-.238-.492a.922.922 0 0 0-.595-.191h-.369v-.633h.332a.808.808 0 0 0 .516-.165c.14-.111.21-.262.21-.455a.502.502 0 0 0-.188-.41.728.728 0 0 0-.476-.153c-.188 0-.337.05-.447.15a.88.88 0 0 0-.242.37l-.632-.264c.083-.238.237-.448.463-.63.226-.18.514-.272.864-.272.259 0 .492.05.698.15.206.1.368.24.485.417.117.177.175.376.175.597a.979.979 0 0 1-.163.573 1.124 1.124 0 0 1-.4.36v.038c.209.088.38.221.514.4.133.18.2.395.2.646 0 .25-.063.474-.19.67a1.32 1.32 0 0 1-.526.463c-.224.113-.476.17-.755.17-.323 0-.621-.092-.897-.278ZM9.75 6.86l-.698.507-.351-.532 1.259-.908h.483v4.284H9.75V6.86Z"
            }), c.jsx("path", {
                fill: "#EA4335",
                d: "M11.684 15 15 11.684l-1.658-.737-1.658.737-.737 1.658.737 1.658Z"
            }), c.jsx("path", {
                fill: "#34A853",
                d: "M3.579 13.342 4.316 15h7.368v-3.315H4.316l-.737 1.657Z"
            }), c.jsx("path", {
                fill: "#4285F4",
                d: "M2.105 1C1.495 1 1 1.495 1 2.105v9.58l1.658.736 1.658-.737V4.316h7.368l.737-1.658L11.684 1H2.105Z"
            }), c.jsx("path", {
                fill: "#188038",
                d: "M1 11.685v2.21C1 14.505 1.495 15 2.105 15h2.21v-3.315H1Z"
            }), c.jsx("path", {
                fill: "#FBBC04",
                d: "M11.684 4.316v7.368H15V4.316l-1.658-.737-1.658.737Z"
            }), c.jsx("path", {
                fill: "#1967D2",
                d: "M15 4.316v-2.21C15 1.494 14.505 1 13.895 1h-2.21v3.316H15Z"
            })]
        })
    })
}
function mZ(t) {
    return t.color === "brand" ? c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M13 4.5L9.5625 1V4.5H13Z",
                fill: "#00832D"
            }), c.jsx("path", {
                d: "M3.9375 15H12.0625C12.5781 15 13 14.5705 13 14.0455V5.5H8.5V1H3.9375C3.42188 1 3 1.42955 3 1.95455V14.0455C3 14.5705 3.42188 15 3.9375 15Z",
                fill: "#00AC47"
            }), c.jsx("path", {
                d: "M4.875 6.48828V10.9428H11.125V6.48828H4.875ZM7.60938 7.28374V8.31783H5.65625V7.28374H7.60938ZM7.60938 9.11328V10.1474H5.65625V9.11328H7.60938ZM8.39062 10.1474V9.11328H10.3438V10.1474H8.39062ZM8.39062 8.31783V7.28374H10.3438V8.31783H8.39062Z",
                fill: "white"
            })]
        })
    }) : c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5.656 7.284H7.61v1.034H5.656V7.284ZM5.656 9.114H7.61v1.034H5.656V9.114ZM10.344 10.148H8.39V9.114h1.953v1.034ZM10.344 8.318H8.39V7.284h1.953v1.034Z"
            }), c.jsx("path", {
                d: "M3.938 15h8.124c.516 0 .938-.43.938-.954V5.5H8.5V1H3.937A.949.949 0 0 0 3 1.955v12.09c0 .525.422.955.938.955Zm.937-8.511h6.25v4.454h-6.25V6.49Z"
            }), c.jsx("path", {
                d: "M13 4.5 9.562 1v3.5H13Z"
            })]
        })
    })
}
function t_(t) {
    const e = Pt();
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fill: `var(--icon-color, ${e.color.labelTitle})`,
                d: "M13.133 8.697a.467.467 0 0 1-.933 0V4.5a.466.466 0 0 1 .933 0v4.197Zm-.162 2.921c-.073.062-1.801 1.513-4.971 1.513s-4.898-1.451-4.97-1.513a.466.466 0 0 1 .606-.71c.027.024 1.571 1.29 4.364 1.29 2.828 0 4.348-1.276 4.363-1.289a.467.467 0 0 1 .607.71ZM2.867 4.5a.467.467 0 0 1 .933 0v4.197a.467.467 0 0 1-.933 0V4.5ZM5.2 3.567a.467.467 0 0 1 .933 0V9.8a.467.467 0 0 1-.933 0V3.567Zm2.333-.236a.467.467 0 1 1 .934 0v6.766a.467.467 0 0 1-.934 0V3.331Zm2.334.236a.467.467 0 0 1 .933 0V9.8a.467.467 0 0 1-.933 0V3.567ZM13.25 1H2.75A1.75 1.75 0 0 0 1 2.75v10.5c0 .966.784 1.75 1.75 1.75h10.5A1.75 1.75 0 0 0 15 13.25V2.75A1.75 1.75 0 0 0 13.25 1Z"
            })
        })
    })
}
function Ip(t) {
    return c.jsx(x, {
        ...t,
        children: t.color === "brand" ? c.jsxs("svg", {
            children: [c.jsx("path", {
                fill: "#2684FF",
                d: "M14.825 7.631 8.587 1.585l-.6-.582-4.672 4.526L1.18 7.6c-.233.226-.233.582 0 .776l4.304 4.17 2.535 2.458 4.705-4.559.066-.065 2.069-2.004c.2-.194.2-.55-.034-.744Zm-6.839 2.457L5.851 8.02l2.135-2.07 2.135 2.07-2.135 2.07Z"
            }), c.jsx("path", {
                fill: "url(#jira-a)",
                d: "M7.986 5.917a3.398 3.398 0 0 1 0-4.914l-4.67 4.526L5.85 7.987l2.135-2.07Z"
            }), c.jsx("path", {
                fill: "url(#jira-b)",
                d: "m10.155 7.986-2.135 2.07a3.436 3.436 0 0 1 0 4.947l4.704-4.56-2.57-2.457Z"
            }), c.jsxs("defs", {
                children: [c.jsxs("linearGradient", {
                    id: "jira-a",
                    x1: "7.619",
                    x2: "4.721",
                    y1: "3.832",
                    y2: "6.822",
                    gradientUnits: "userSpaceOnUse",
                    children: [c.jsx("stop", {
                        offset: ".176",
                        stopColor: "#0052CC"
                    }), c.jsx("stop", {
                        offset: "1",
                        stopColor: "#2684FF"
                    })]
                }), c.jsxs("linearGradient", {
                    id: "jira-b",
                    x1: "8.411",
                    x2: "11.303",
                    y1: "12.159",
                    y2: "9.176",
                    gradientUnits: "userSpaceOnUse",
                    children: [c.jsx("stop", {
                        offset: ".176",
                        stopColor: "#0052CC"
                    }), c.jsx("stop", {
                        offset: "1",
                        stopColor: "#2684FF"
                    })]
                })]
            })]
        }) : c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M15.305 7.552L7.753 0 .201 7.552a.634.634 0 000 .896L7.753 16l7.552-7.552a.633.633 0 000-.896zm-7.552 2.813L5.388 8l2.365-2.365L10.118 8l-2.365 2.365z"
            }), c.jsx("path", {
                d: "M7.753 5.635A3.983 3.983 0 017.736.019L2.56 5.193l2.817 2.818 2.376-2.376zm2.372 2.359l-2.372 2.371a3.982 3.982 0 010 5.635l5.189-5.189-2.817-2.817z"
            })]
        })
    })
}
const gZ = t=>c.jsx(x, {
    ...t,
    children: c.jsx("svg", {
        children: c.jsx("path", {
            fill: "var(--icon-color)",
            d: "M8.089 15.95a.352.352 0 0 1-.35-.376.333.333 0 0 1 .065-.171l3.736-5.144L5 12.931a.35.35 0 0 1-.47-.44.337.337 0 0 1 .137-.167l5.753-3.397L.29 8.344a.351.351 0 0 1 0-.692l10.135-.58-5.754-3.398a.337.337 0 0 1-.144-.384.351.351 0 0 1 .333-.253c.049 0 .097.01.14.032l6.544 2.675L7.808.602a.334.334 0 0 1-.032-.351.351.351 0 0 1 .315-.202.34.34 0 0 1 .244.105l7.445 7.444a.565.565 0 0 1 0 .799L8.33 15.849a.338.338 0 0 1-.242.102Z"
        })
    })
});
function yZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M15 7.22153H10.9062L14.4516 5.17458L13.673 3.82562L10.1276 5.87257L12.1741 2.32742L10.8251 1.54836L8.77863 5.0935V1H7.22135V5.09389L5.17408 1.54836L3.82554 2.32703L5.87243 5.87218L2.32699 3.82562L1.54834 5.17419L5.09378 7.22114H1V8.77848H5.09339L1.54834 10.8254L2.32699 12.1744L5.87204 10.1278L3.82515 13.673L5.17408 14.4516L7.22096 10.9061V15H8.77826V10.9065L10.8248 14.4516L12.1737 13.673L10.1268 10.1275L13.6722 12.1744L14.4509 10.8254L10.9058 8.77885H14.9992V7.22153H15ZM8 10.118C6.82577 10.118 5.87399 9.16627 5.87399 7.99197C5.87399 6.8177 6.82577 5.86591 8 5.86591C9.17424 5.86591 10.126 6.8177 10.126 7.99197C10.126 9.16627 9.17424 10.118 8 10.118Z"
            })
        })
    })
}
function CZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M11.2654 3.00195C10.0354 3.00195 9.07393 3.93131 8.20357 5.11188C7.00753 3.58411 6.00728 3.00195 4.81027 3.00195C2.36984 3.00195 0.5 6.18816 0.5 9.56057C0.5 11.6709 1.51768 13.002 3.22227 13.002C4.44913 13.002 5.33149 12.4217 6.90009 9.67092C6.90009 9.67092 7.55396 8.51251 8.00379 7.71453C8.16142 7.96985 8.32743 8.24497 8.50183 8.53988L9.2374 9.78126C10.6703 12.1867 11.4686 13.002 12.9152 13.002C14.5758 13.002 15.5 11.6527 15.5 9.4985C15.5 5.96747 13.588 3.00195 11.2654 3.00195ZM5.70394 8.92609C4.43217 10.9261 3.99221 11.3744 3.28414 11.3744C2.55545 11.3744 2.12236 10.7326 2.12236 9.58816C2.12236 7.13988 3.33914 4.63644 4.78964 4.63644C5.57513 4.63644 6.23154 5.09154 7.23699 6.53557C6.28227 8.00468 5.70394 8.92609 5.70394 8.92609ZM10.5038 8.67431L9.62431 7.20283C9.38631 6.81451 9.15758 6.45708 8.93813 6.13053C9.73078 4.90318 10.3846 4.29161 11.1622 4.29161C12.7777 4.29161 14.0701 6.67782 14.0701 9.60885C14.0701 10.7261 13.7054 11.3744 12.9496 11.3744C12.2252 11.3744 11.8792 10.8944 10.5038 8.67431Z"
            })
        })
    })
}
const n_ = t=>c.jsx(x, {
    ...t,
    children: t.color === "brand" ? c.jsxs("svg", {
        children: [c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6.25677 1.86838C4.19674 2.02419 2.44521 2.16054 2.3656 2.17027C2.1367 2.21897 1.92771 2.36505 1.8282 2.56956L1.73863 2.74485L1.74858 6.9714L1.75853 11.198L1.88791 11.4609C1.96752 11.607 2.46511 12.2887 3.01247 12.9801C4.09722 14.363 4.17683 14.4312 4.58486 14.4799C4.70428 14.4896 5.6099 14.4506 6.57523 14.3922C7.55052 14.3338 9.12291 14.2364 10.0584 14.1877C14.069 13.9442 13.86 13.9637 14.0988 13.7689C14.3874 13.5352 14.3576 13.9248 14.3775 8.78278C14.3874 4.42963 14.3775 4.13747 14.3078 4.01087C14.2382 3.85505 14.0988 3.75767 12.2677 2.50139C11.0436 1.65413 10.9541 1.61517 10.4067 1.60543C10.1778 1.5957 8.30686 1.7223 6.25677 1.86838Z",
            fill: "white"
        }), c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6.0037 1.28646C3.72205 1.45587 1.78209 1.60411 1.69391 1.6147C1.44039 1.66764 1.20892 1.82646 1.09869 2.04882C1.03349 2.17408 0.999665 2.31272 1 2.4533L1.02077 11.1117C1.02127 11.3212 1.07054 11.5279 1.16483 11.716C1.25301 11.8748 1.80413 12.616 2.41037 13.3678C3.61182 14.8713 3.7 14.9454 4.15192 14.9984C4.28419 15.009 5.28724 14.9666 6.35642 14.9031C7.43662 14.8396 9.17818 14.7337 10.2143 14.6807C14.6564 14.416 14.4249 14.4372 14.6894 14.2254C15.0091 13.9713 14.976 14.3948 14.9981 8.80419C15.0091 4.0712 14.9981 3.75355 14.9209 3.6159C14.8437 3.44648 14.6894 3.3406 12.6613 1.9747C11.3055 1.05351 11.2063 1.01116 10.6001 1.00057C10.3466 0.989985 8.27433 1.12763 6.0037 1.28646ZM11.1292 1.89C11.3276 1.9747 12.7274 2.90648 12.9258 3.08648C12.999 3.15675 12.9242 3.22294 12.8222 3.23227C11.6735 3.33738 4.22129 3.76099 3.98658 3.72178C3.87636 3.71119 3.71102 3.64766 3.61182 3.58413C3.21501 3.31942 2.23401 2.54647 2.23401 2.49353C2.23401 2.34529 2.20094 2.34529 6.05881 2.07C6.79732 2.02764 8.02082 1.94294 8.75932 1.87941C10.3576 1.76293 10.8316 1.76293 11.1292 1.89ZM13.8848 4.28296C13.9509 4.34649 14.006 4.46297 14.0281 4.57944C14.0391 4.68532 14.0501 6.65475 14.0391 8.94184C14.0281 12.8595 14.0171 13.1137 13.9399 13.2195C13.8958 13.2937 13.8076 13.3678 13.7305 13.3889C13.5431 13.4631 4.46055 13.9607 4.27317 13.9078C4.18499 13.8866 4.06374 13.8125 4.00863 13.749C3.93811 13.6812 3.89826 13.5886 3.89801 13.4919L3.88738 9.40773C3.87636 6.4324 3.88738 5.11944 3.92045 5.00297C3.94249 4.91826 4.01965 4.81238 4.07476 4.77003C4.15192 4.71709 4.69202 4.67473 6.5438 4.56885C7.84446 4.50532 9.86157 4.38885 11.0079 4.31473C13.7635 4.1559 13.7525 4.1559 13.8848 4.28296Z",
            fill: "white"
        }), c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6.25677 1.86838C4.19674 2.02419 2.44521 2.16054 2.3656 2.17027C2.1367 2.21897 1.92771 2.36505 1.8282 2.56956C1.7693 2.68482 1.73879 2.81197 1.73909 2.94084L1.74858 6.9714L1.75785 10.9061C1.7583 11.0982 1.80274 11.2878 1.88791 11.4609C1.96752 11.607 2.46511 12.2887 3.01247 12.9801C4.09722 14.363 4.17683 14.4312 4.58486 14.4799C4.70428 14.4896 5.6099 14.4506 6.57523 14.3922C7.55052 14.3338 9.12291 14.2364 10.0584 14.1877C14.069 13.9442 13.86 13.9637 14.0988 13.7689C14.3874 13.5352 14.3576 13.9248 14.3775 8.78278C14.3874 4.42963 14.3775 4.13747 14.3078 4.01087C14.2382 3.85505 14.0988 3.75767 12.2677 2.50139C11.0436 1.65413 10.9541 1.61517 10.4067 1.60543C10.1778 1.5957 8.30686 1.7223 6.25677 1.86838ZM10.8844 2.42348C11.0635 2.50139 12.3274 3.35838 12.5065 3.52394C12.5729 3.58885 12.5046 3.64952 12.4112 3.6582C11.3683 3.75514 4.64737 4.1443 4.43558 4.10826C4.33606 4.09852 4.18679 4.04008 4.09722 3.98165C3.73895 3.73819 2.85324 3.02727 2.85324 2.97858C2.85324 2.84224 2.82338 2.84224 6.30653 2.58903C6.97331 2.55008 8.07796 2.47217 8.74474 2.41374C10.1878 2.30661 10.6157 2.30661 10.8844 2.42348ZM13.3724 4.6244C13.4321 4.68283 13.4818 4.78996 13.5017 4.89708C13.5117 4.99447 13.5216 6.80585 13.5117 8.90938C13.5017 12.5127 13.4918 12.7464 13.4221 12.8438C13.3823 12.9119 13.3027 12.9801 13.233 12.9996C13.0638 13.0678 4.86351 13.5255 4.69433 13.4768C4.61472 13.4573 4.50525 13.3891 4.45549 13.3307C4.39175 13.2683 4.35584 13.1838 4.35562 13.0956L4.34602 9.33788C4.33606 6.60134 4.34602 5.39375 4.37587 5.28663C4.39578 5.20872 4.46544 5.11133 4.5152 5.07238C4.58486 5.02368 5.0725 4.98473 6.74441 4.88734C7.91873 4.82891 9.73992 4.72179 10.7749 4.65362C13.2629 4.50754 13.2529 4.50754 13.3724 4.6244Z",
            fill: "black"
        }), c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M11.173 5.95861C10.7252 5.98782 10.3271 6.02678 10.2873 6.05599C10.148 6.12416 10.0684 6.24103 10.0485 6.36763C10.0385 6.49423 10.0783 6.51371 10.5262 6.57214L10.7152 6.59162V8.31535C10.7152 9.3379 10.7053 10.0099 10.6754 9.99039C10.6555 9.97091 10.0783 9.09444 9.38169 8.06214C8.68506 7.01038 8.10785 6.15338 8.0979 6.15338C8.08795 6.14364 7.64012 6.16312 7.09276 6.20207C6.42599 6.24103 6.05777 6.28972 5.98811 6.32867C5.86868 6.38711 5.72936 6.60135 5.72936 6.7377C5.72936 6.82534 5.88859 6.87404 6.217 6.87404H6.39613V11.8212L6.10753 11.9089C5.89854 11.9673 5.81893 12.0063 5.77912 12.0939C5.71941 12.2303 5.71941 12.3471 5.78907 12.3471C5.80897 12.3471 6.27671 12.3277 6.81411 12.2887C7.86901 12.2303 7.98843 12.2011 8.0979 11.9868C8.13771 11.9284 8.16756 11.8602 8.16756 11.831C8.16756 11.8212 8.01829 11.7726 7.8491 11.7336C7.66997 11.6946 7.49084 11.6459 7.45103 11.6459C7.38137 11.6265 7.38137 11.4999 7.38137 9.7664V7.90633L8.6353 9.82483C9.94895 11.8407 10.1082 12.0744 10.3172 12.1718C10.566 12.2984 11.2029 12.2108 11.5213 12.0063L11.6209 11.9478L11.6408 6.44554L11.8597 6.40658C12.1185 6.35789 12.2379 6.24103 12.2379 6.03652C12.2379 5.90991 12.2279 5.90018 12.1085 5.90991C12.0388 5.90991 11.6109 5.93913 11.173 5.95861Z",
            fill: "black"
        })]
    }) : c.jsxs("svg", {
        children: [c.jsx("path", {
            d: "M6.003 1.286c-2.28.17-4.22.318-4.309.329a.859.859 0 0 0-.595.434L1 2.239l.022 9.191.143.286c.088.159.64.9 1.246 1.652 1.2 1.503 1.29 1.577 1.74 1.63.133.011 1.136-.031 2.205-.095 1.08-.063 2.821-.17 3.857-.222 4.442-.265 4.21-.244 4.475-.456.32-.254.286.17.308-5.42.011-4.734 0-5.051-.077-5.19-.077-.169-.231-.274-2.259-1.64-1.356-.921-1.455-.964-2.06-.974-.254-.011-2.326.127-4.597.285Zm5.125.604c.198.085 1.598 1.016 1.796 1.196.056.053.078.106.045.128-.055.052-8.729.55-8.982.508a1.003 1.003 0 0 1-.375-.138c-.397-.265-1.378-1.038-1.378-1.09 0-.149-.033-.149 3.825-.424.738-.042 1.961-.127 2.7-.19 1.598-.117 2.072-.117 2.37.01Zm2.755 2.393c.066.063.122.18.144.296.01.106.022 2.076.01 4.363-.01 3.918-.022 4.172-.099 4.277a.401.401 0 0 1-.209.17c-.187.074-9.268.572-9.456.519a.605.605 0 0 1-.264-.159l-.11-.106-.012-4.235c-.01-2.976 0-4.289.034-4.405a.52.52 0 0 1 .154-.233c.077-.053.617-.095 2.468-.201 1.3-.064 3.318-.18 4.464-.254 2.755-.16 2.744-.16 2.876-.032Z"
        }), c.jsx("path", {
            d: "M11.448 5.734c-.496.031-.937.074-.981.105a.455.455 0 0 0-.265.34c-.01.137.033.158.53.222l.209.02v1.875c0 1.112-.011 1.842-.044 1.821-.022-.021-.662-.974-1.433-2.096-.771-1.144-1.41-2.076-1.422-2.076-.01-.01-.507.01-1.113.053-.738.043-1.146.096-1.223.138-.132.063-.287.296-.287.445 0 .095.177.148.54.148h.199v5.379l-.32.095c-.231.064-.32.106-.364.201-.066.149-.066.276.011.276.023 0 .54-.022 1.136-.064 1.168-.063 1.3-.095 1.421-.328a.419.419 0 0 0 .077-.17c0-.01-.165-.063-.352-.106-.199-.042-.397-.095-.441-.095-.077-.021-.077-.159-.077-2.043V7.85l1.388 2.086c1.455 2.192 1.631 2.446 1.863 2.552.275.138.98.042 1.334-.18l.11-.064.022-5.982.242-.042c.287-.053.419-.18.419-.403 0-.137-.011-.148-.143-.137-.078 0-.551.031-1.036.053Z"
        })]
    })
})
  , bZ = t=>c.jsx(x, {
    ...t,
    children: c.jsx("svg", {
        width: "16",
        height: "16",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: c.jsx("path", {
            d: "M7.056 0a4.048 4.048 0 0 0-3.847 2.79A4 4 0 0 0 .543 4.725a4.03 4.03 0 0 0 .499 4.724 3.97 3.97 0 0 0 .341 3.268 4.04 4.04 0 0 0 4.346 1.94A3.989 3.989 0 0 0 8.73 16a4.048 4.048 0 0 0 3.847-2.79 3.978 3.978 0 0 0 2.66-1.935 4.022 4.022 0 0 0-.492-4.724v-.006a3.987 3.987 0 0 0-.342-3.272 4.041 4.041 0 0 0-4.34-1.935A4.005 4.005 0 0 0 7.056 0Zm0 1.04-.005.006c.704 0 1.381.244 1.923.693-.022.011-.065.038-.097.055L5.69 3.63a.519.519 0 0 0-.26.456v4.312l-1.371-.79V4.041A3 3 0 0 1 7.056 1.04Zm3.838 1.256a2.999 2.999 0 0 1 2.962 3.507c-.022-.016-.065-.038-.092-.054l-3.186-1.842a.533.533 0 0 0-.526 0L6.32 6.063V4.481l3.083-1.783a2.984 2.984 0 0 1 1.492-.402Zm-7.88 1.638V7.72c0 .19.098.358.26.455l3.728 2.151-1.377.797-3.077-1.778a3 3 0 0 1 .466-5.412Zm7.141.937 3.083 1.777a2.995 2.995 0 0 1 1.095 4.097l.005.005a2.99 2.99 0 0 1-1.56 1.311V8.274a.518.518 0 0 0-.26-.455L8.783 5.662l1.371-.791ZM7.89 6.177l1.572.91v1.815l-1.572.91-1.57-.91V7.087l1.57-.91Zm2.471 1.43 1.37.791v3.56a3 3 0 0 1-2.995 3.002v-.005a2.99 2.99 0 0 1-1.919-.694c.022-.01.07-.038.098-.054l3.186-1.837a.507.507 0 0 0 .26-.455V7.607Zm-.894 2.33v1.582l-3.083 1.777a3.005 3.005 0 0 1-4.096-1.094h.005a2.975 2.975 0 0 1-.358-2.005c.022.016.065.038.093.054l3.185 1.843a.534.534 0 0 0 .526 0l3.728-2.157Z"
        })
    })
})
  , vZ = t=>c.jsx(x, {
    ...t,
    children: c.jsx("svg", {
        children: c.jsx("path", {
            fill: "var(--icon-color)",
            d: "M8.016 0a3.992 3.992 0 1 1 .103 7.984A3.992 3.992 0 0 1 8.016 0Zm6.482 8.684h-.02L11.46 7.19a.448.448 0 0 0-.584.178 14.94 14.94 0 0 1-2.87 3.478A14.938 14.938 0 0 1 5.147 7.38a.447.447 0 0 0-.584-.18L1.541 8.684h-.02a.447.447 0 0 0-.166.602A19.23 19.23 0 0 0 4.39 13.24h-.002l.05.049c.224.223.451.442.685.654.054.049.11.095.165.144.21.186.421.37.64.547.096.078.196.151.294.227.184.144.368.29.558.426.293.212.592.417.897.611a.642.642 0 0 0 .671.012c.324-.208.642-.426.952-.653.046-.034.088-.07.134-.102.238-.178.475-.359.706-.547.156-.127.307-.26.459-.392.113-.098.227-.194.337-.295.197-.179.387-.363.576-.55.041-.04.085-.079.126-.12h-.003a19.237 19.237 0 0 0 3.043-3.966.447.447 0 0 0-.18-.602Z"
        })
    })
})
  , wZ = t=>c.jsx(x, {
    ...t,
    children: c.jsx("svg", {
        children: c.jsx("path", {
            fill: "var(--icon-color, #06AC38)",
            d: "M5.344 11.723v4.254H3v-4.254h2.344ZM7.686 0c2.008.002 2.879.116 4.116.785C13.16 1.515 14 2.967 14 4.775c0 1.68-.684 3.132-1.998 3.999-1.204.803-2.572.913-4.396.913H3V0h4.686Zm.303 2.054-2.645.019V7.66h2.8c1.961 0 3.457-.785 3.457-2.858 0-1.926-1.204-2.766-3.612-2.748Z"
        })
    })
});
function r_(t) {
    const e = Pt();
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fill: `var(--icon-color, ${e.color.labelTitle})`,
                d: "M9.11386 2.61576C8.99741 2.42789 8.83299 2.27247 8.63655 2.16458C8.44011 2.05669 8.21832 2 7.99269 2C7.76707 2 7.54527 2.05669 7.34883 2.16458C7.15239 2.27247 6.98797 2.42789 6.87152 2.61576L5.0272 5.68661C6.43619 6.37045 7.63666 7.40068 8.50942 8.67501C9.38218 9.94934 9.89687 11.4234 10.0024 12.9509H8.70743C8.60212 11.6416 8.14692 10.3817 7.38689 9.29585C6.62686 8.21005 5.58835 7.33599 4.37412 6.76018L2.66714 9.62939C3.34975 9.927 3.94443 10.3867 4.3965 10.9661C4.84857 11.5456 5.14353 12.2262 5.25424 12.9455H2.28034C2.24507 12.9431 2.21098 12.9321 2.18113 12.9137C2.15129 12.8953 2.12664 12.8699 2.10939 12.8399C2.09215 12.8099 2.08287 12.7762 2.08237 12.7418C2.08188 12.7074 2.09019 12.6735 2.10656 12.643L2.93062 11.2806C2.65143 11.0542 2.33235 10.8788 1.98884 10.7629L1.17319 12.1253C1.08827 12.2669 1.03315 12.4235 1.01102 12.586C0.988881 12.7484 1.00018 12.9136 1.04425 13.0718C1.08832 13.2299 1.16429 13.3781 1.26775 13.5075C1.3712 13.6369 1.50007 13.745 1.64688 13.8256C1.84031 13.9315 2.05833 13.9878 2.28034 13.9891H6.35298C6.42862 13.0817 6.26194 12.1708 5.8691 11.3444C5.47625 10.5181 4.87054 9.8044 4.11065 9.27245L4.75812 8.18253C5.71712 8.82283 6.48779 9.69517 6.99408 10.7134C7.50037 11.7317 7.72476 12.8607 7.64513 13.9891H11.0955C11.1759 12.2798 10.7934 10.58 9.98621 9.05943C9.17906 7.53889 7.97554 6.25092 6.49593 5.32421L7.80489 3.14437C7.83406 3.09686 7.88135 3.06248 7.93647 3.0487C7.99159 3.03492 8.05008 3.04286 8.0992 3.0708C8.24776 3.14982 13.7863 12.5449 13.89 12.6539C13.9083 12.6858 13.9176 12.7217 13.917 12.7582C13.9164 12.7947 13.9059 12.8303 13.8865 12.8616C13.8672 12.8928 13.8397 12.9185 13.8068 12.9361C13.774 12.9537 13.7369 12.9626 13.6994 12.9618H12.3652C12.3821 13.3088 12.3821 13.6548 12.3652 14H13.705C13.8752 14.0011 14.0438 13.9693 14.2013 13.9066C14.3587 13.8439 14.5018 13.7515 14.6222 13.6346C14.7426 13.5178 14.838 13.3789 14.9029 13.226C14.9677 13.0731 15.0007 12.9092 15 12.7438C15.0002 12.5254 14.9402 12.3109 14.8262 12.1226L9.11386 2.61576Z"
            })
        })
    })
}
function kZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M16 4.00004C16 1.79095 14.2092 3.69058e-06 12.0001 3.69058e-06H4.00042C3.47505 -0.000711085 2.95471 0.102407 2.46931 0.303434C1.98391 0.504466 1.54302 0.799442 1.17198 1.17141C-0.389958 2.73361 -0.389957 5.26711 1.17198 6.82852L2.59648 8.25308C1.07971 8.82163 0 10.2846 0 12C0 14.209 1.79083 16 3.99992 16H12.0001C12.5255 16.0007 13.0458 15.8975 13.5312 15.6965C14.0166 15.4954 14.4574 15.2004 14.8284 14.8284C16.3905 13.2662 16.3905 10.7327 14.8284 9.1713L13.4039 7.74673C14.9204 7.17833 16 5.71523 16 4.00004ZM2.26933 13.7313C1.93324 13.3951 1.70231 12.9683 1.60474 12.503C1.50716 12.0377 1.54716 11.5541 1.71986 11.1112C1.89255 10.6683 2.19046 10.2852 2.57722 10.0088C2.96398 9.73242 3.42283 9.5746 3.89779 9.55465L8.79128 14.4486H3.99978C3.67824 14.4494 3.35977 14.3864 3.06274 14.2633C2.76571 14.1401 2.49604 13.9593 2.26933 13.7313ZM13.7311 10.2692C14.1901 10.7283 14.4481 11.351 14.4481 12.0003C14.4481 12.6495 14.1901 13.2722 13.7311 13.7313C13.272 14.1904 12.6494 14.4483 12.0001 14.4483C11.3509 14.4483 10.7283 14.1904 10.2692 13.7313L2.26933 5.7311C1.81309 5.27136 1.55761 4.64959 1.55882 4.00186C1.56005 3.35417 1.81787 2.73334 2.27584 2.27534C2.7338 1.81735 3.35459 1.55951 4.00224 1.55828C4.6499 1.55707 5.27167 1.81257 5.73134 2.26883L13.7311 10.2692ZM13.7311 5.7311C13.298 6.16635 12.7163 6.42158 12.1028 6.44549L7.2091 1.55185H12.0006C12.4847 1.55198 12.9579 1.69565 13.3604 1.9647C13.7629 2.23375 14.0765 2.6161 14.2617 3.06341C14.447 3.5107 14.4954 4.0029 14.4009 4.47772C14.3065 4.95257 14.0734 5.38872 13.7311 5.7311Z"
            })
        })
    })
}
function s_(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M3.95144 9.85024C3.95144 10.6639 3.29432 11.3216 2.48128 11.3216C1.66823 11.3216 1.01111 10.6639 1.01111 9.85024C1.01111 9.03655 1.66823 8.37891 2.48128 8.37891H3.95144V9.85024ZM4.68653 9.85024C4.68653 9.03655 5.34365 8.37891 6.15669 8.37891C6.96974 8.37891 7.62686 9.03655 7.62686 9.85024V13.5286C7.62686 14.3423 6.96974 14.9999 6.15669 14.9999C5.34365 14.9999 4.68653 14.3423 4.68653 13.5286V9.85024Z",
                fill: "var(--icon-color, #E01E5A)"
            }), c.jsx("path", {
                d: "M9.84333 12.0573C10.6564 12.0573 11.3135 12.7149 11.3135 13.5286C11.3135 14.3423 10.6564 14.9999 9.84333 14.9999C9.03029 14.9999 8.37317 14.3423 8.37317 13.5286V12.0573H9.84333ZM9.84333 11.3216C9.03029 11.3216 8.37317 10.6639 8.37317 9.85024C8.37317 9.03655 9.03029 8.37891 9.84333 8.37891H13.5299C14.3429 8.37891 15.0001 9.03655 15.0001 9.85024C15.0001 10.6639 14.3429 11.3216 13.5299 11.3216H9.84333Z",
                fill: "var(--icon-color, #ECB22E)"
            }), c.jsx("path", {
                d: "M12.0486 6.16083C12.0486 5.34713 12.7057 4.68949 13.5188 4.68949C14.3318 4.68949 14.9889 5.34713 14.9889 6.16083C14.9889 6.97452 14.3318 7.63217 13.5188 7.63217H12.0486V6.16083ZM11.3135 6.16083C11.3135 6.97452 10.6564 7.63217 9.84334 7.63217C9.03029 7.63217 8.37317 6.97452 8.37317 6.16083V2.47134C8.37317 1.65764 9.03029 1 9.84334 1C10.6564 1 11.3135 1.65764 11.3135 2.47134V6.16083Z",
                fill: "var(--icon-color, #2EB67D)"
            }), c.jsx("path", {
                d: "M6.15672 3.94268C5.34368 3.94268 4.68655 3.28503 4.68655 2.47134C4.68655 1.65764 5.34368 1 6.15672 1C6.96977 1 7.62689 1.65764 7.62689 2.47134V3.94268H6.15672ZM6.15672 4.68949C6.96977 4.68949 7.62689 5.34713 7.62689 6.16083C7.62689 6.97452 6.96977 7.63217 6.15672 7.63217H2.47017C1.65712 7.63217 1 6.97452 1 6.16083C1 5.34713 1.65712 4.68949 2.47017 4.68949H6.15672Z",
                fill: "var(--icon-color, #36C5F0)"
            })]
        })
    })
}
function xZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fill: "var(--icon-color, #1da1f2)",
                d: "M16 3.92083C15.4484 4.16143 14.8558 4.32399 14.2328 4.39747C14.8684 4.02292 15.3559 3.42858 15.5858 2.72109C14.9912 3.06833 14.3326 3.32064 13.6317 3.45589C13.0702 2.86805 12.2708 2.5 11.3856 2.5C9.68647 2.5 8.30842 3.85645 8.30842 5.53024C8.30842 5.76693 8.33617 5.99713 8.38769 6.21952C5.82912 6.09272 3.56254 4.88647 2.04444 3.05403C1.78019 3.50271 1.62825 4.02292 1.62825 4.57695C1.62825 5.62778 2.17194 6.55571 2.99705 7.09868C2.49234 7.08242 2.01801 6.94652 1.60314 6.71957V6.75859C1.60314 8.22624 2.66344 9.45069 4.07188 9.729C3.81291 9.79793 3.5414 9.83435 3.2613 9.83435C3.06311 9.83435 2.86955 9.81614 2.68193 9.78102C3.07368 10.984 4.20994 11.8606 5.55695 11.884C4.50326 12.6968 3.17608 13.1813 1.73461 13.1813C1.48622 13.1813 1.24113 13.167 1 13.139C2.3622 13.9993 3.97939 14.5 5.71681 14.5C11.3783 14.5 14.4733 9.88442 14.4733 5.88138C14.4733 5.75133 14.47 5.61997 14.4641 5.48992C15.0652 5.06205 15.5871 4.52948 15.9987 3.92278L16 3.92083Z"
            })
        })
    })
}
function i_(t) {
    const e = Pt();
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fill: `var(--icon-color, ${e.color.labelTitle})`,
                d: "M7.467 5.801v7.81H1L7.467 5.8ZM7.468 3a3.23 3.23 0 1 1-6.46 0h6.46ZM8.533 13.61a3.23 3.23 0 1 1 6.46 0h-6.46ZM8.533 10.81V3H15l-6.467 7.81Z"
            })
        })
    })
}
function DZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14ZM9 4a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM4.55 6a.55.55 0 0 0-.108 1.088l1.952.39-.355 4.97a.515.515 0 0 0 1.024.11l.227-1.591c.067-.463.243-.967.71-.967.467 0 .643.504.71.967l.227 1.59a.515.515 0 0 0 1.024-.109l-.355-4.97 1.952-.39A.55.55 0 0 0 11.451 6H4.55Z"
            })
        })
    })
}
function SZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15ZM6.72727 3C6.63747 3 6.54882 3.01945 6.46786 3.05691L5.04969 3.71305C4.90549 3.77976 4.79487 3.89926 4.74236 4.045L4.03328 6.01344C3.95627 6.22723 4.01543 6.46472 4.18473 6.62138L5.6029 7.93365C5.71461 8.03703 5.8634 8.09474 6.01818 8.09474H7.19516L8.25453 9.075V13.421C8.25453 13.653 8.39801 13.8626 8.61912 13.9536C8.84024 14.0446 9.0963 13.9994 9.2698 13.8389L9.97889 13.1828C10.0385 13.1277 10.0856 13.0613 10.1174 12.9878L10.8858 11.2102L11.973 10.6513C12.1363 10.5674 12.2503 10.4154 12.282 10.2395L12.9911 6.30265C13.0416 6.02225 12.8734 5.74802 12.5944 5.6558L10.7808 5.05646L9.33113 3.22727C9.21761 3.08402 9.0414 3 8.85452 3H6.72727Z"
            })
        })
    })
}
function _Z(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M9 1C9.55228 1 10 1.44772 10 2V4.76168C10 5.15915 10.2405 5.51121 10.5808 5.71666C12.0306 6.59209 13 8.18284 13 10C13 12.7614 10.7614 15 8 15C5.23858 15 3 12.7614 3 10C3 8.18284 3.96938 6.59209 5.41922 5.71666C5.75948 5.51121 6 5.15915 6 4.76168V2C6 1.44771 6.44772 1 7 1H9ZM8 13.5C9.933 13.5 11.5 11.933 11.5 10C11.5 8.067 9.933 6.5 8 6.5C6.067 6.5 4.5 8.067 4.5 10C4.5 11.933 6.067 13.5 8 13.5Z"
            })
        })
    })
}
function IZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.84792 10.6438L4.52413 12.9859C4.51048 13.0847 4.45681 13.1713 4.37826 13.2212L3.98544 13.4711L3.00981 10.2939L1 7.77444L1.39283 7.52459C1.47137 7.47463 1.56627 7.46671 1.65074 7.50307L3.65375 8.36519L6.54946 6.52338L2.77024 1.7859C2.6614 1.64945 2.67356 1.44164 2.79741 1.32173C2.81218 1.30744 2.82819 1.29478 2.84522 1.28395L3.04694 1.15565C3.36774 0.951604 3.7622 0.947949 4.08607 1.14602L9.65202 4.55001L12.6412 2.64876C13.0615 2.38143 13.5457 2.26151 14.0294 2.30495L14.333 2.33222C14.7326 2.36811 15.0301 2.75406 14.9976 3.19427C14.9904 3.29042 14.9676 3.38436 14.9301 3.47154L14.7998 3.77483C14.5921 4.25804 14.2557 4.66008 13.8354 4.92741L10.8462 6.82866L10.7391 13.841C10.7329 14.249 10.5328 14.6235 10.212 14.8275L10.0103 14.9558C9.99324 14.9667 9.97528 14.9756 9.95666 14.9826C9.80048 15.0408 9.63103 14.9485 9.57819 14.7764L7.74364 8.80203L4.84792 10.6438Z"
            })
        })
    })
}
function EZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M4.43431 1.43431L4.057 1.057C4.0205 1.02051 3.971 1 3.91938 1C2.30706 1 1.00001 2.30706 1 3.91938C1 3.971 1.0205 4.02051 1.057 4.057L1.43431 4.43431C1.63232 4.63232 1.73133 4.73133 1.84549 4.76842C1.94591 4.80105 2.05409 4.80105 2.15451 4.76842C2.26867 4.73133 2.36768 4.63232 2.56569 4.43431L4.43431 2.56569C4.63232 2.36768 4.73133 2.26867 4.76842 2.15451C4.80105 2.05409 4.80105 1.94591 4.76842 1.84549C4.73133 1.73133 4.63232 1.63232 4.43431 1.43431Z"
            }), c.jsx("path", {
                d: "M3.50043 12.5C3.50043 12.5 3.1447 13.5672 3.03335 14.5014C3.00066 14.7756 3.22429 15 3.50043 15H4.29333C4.42594 15 4.55311 14.9473 4.64688 14.8536L5.50043 14L3.50043 12.5Z"
            }), c.jsx("path", {
                d: "M12.5004 12.5C12.5004 12.5 12.8562 13.5672 12.9675 14.5014C13.0002 14.7756 12.7766 15 12.5004 15H11.7075C11.5749 15 11.4478 14.9473 11.354 14.8536L10.5004 14L12.5004 12.5Z"
            }), c.jsx("path", {
                d: "M11.5657 1.43431L11.943 1.057C11.9795 1.02051 12.029 1 12.0806 1C13.6929 1 15 2.30706 15 3.91938C15 3.971 14.9795 4.02051 14.943 4.057L14.5657 4.43431C14.3677 4.63232 14.2687 4.73133 14.1545 4.76842C14.0541 4.80105 13.9459 4.80105 13.8455 4.76842C13.7313 4.73133 13.6323 4.63232 13.4343 4.43431L11.5657 2.56569C11.3677 2.36768 11.2687 2.26867 11.2316 2.15451C11.1989 2.05409 11.1989 1.94591 11.2316 1.84549C11.2687 1.73133 11.3677 1.63232 11.5657 1.43431Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 13.5C11.0376 13.5 13.5 11.0376 13.5 8C13.5 4.96243 11.0376 2.5 8 2.5C4.96243 2.5 2.5 4.96243 2.5 8C2.5 11.0376 4.96243 13.5 8 13.5ZM10.6464 6.38292C10.8416 6.18765 10.8416 5.87107 10.6464 5.67581L10.324 5.35348C10.1288 5.15822 9.8122 5.15822 9.61693 5.35348L7.35348 7.61693C7.15822 7.8122 7.15822 8.12878 7.35348 8.32404L7.67581 8.64637C7.87107 8.84163 8.18765 8.84163 8.38292 8.64637L10.6464 6.38292Z"
            })]
        })
    })
}
function AZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15ZM7.02625 4.52497C7.01197 4.23938 7.23968 4 7.52562 4H8.47438C8.76032 4 8.98803 4.23938 8.97375 4.52497L8.77375 8.52497C8.76045 8.79107 8.54081 9 8.27438 9H7.72562C7.45919 9 7.23955 8.79107 7.22625 8.52497L7.02625 4.52497ZM7 11C7 10.4477 7.44772 10 8 10C8.55228 10 9 10.4477 9 11C9 11.5523 8.55228 12 8 12C7.44772 12 7 11.5523 7 11Z"
            })
        })
    })
}
function jZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.23541 4.23541C0.596936 7.87388 0.659046 13.8351 1.41196 14.588C2.16488 15.341 8.12612 15.4031 11.7646 11.7646C15.4031 8.12612 15.341 2.16488 14.588 1.41196C13.8351 0.659046 7.87388 0.596936 4.23541 4.23541ZM11.3536 4.64645C11.1583 4.45118 10.8417 4.45118 10.6464 4.64645L10.0703 5.22254L9.27746 4.42965C9.0822 4.23439 8.76561 4.23439 8.57035 4.42965L8.42893 4.57107C8.23367 4.76633 8.23367 5.08292 8.42893 5.27818L9.22182 6.07107L8.07027 7.22262L7.27738 6.42973C7.08212 6.23446 6.76554 6.23446 6.57027 6.42973L6.42885 6.57115C6.23359 6.76641 6.23359 7.08299 6.42885 7.27825L7.22175 8.07115L6.07027 9.22262L5.27738 8.42973C5.08212 8.23446 4.76554 8.23446 4.57027 8.42973L4.42885 8.57115C4.23359 8.76641 4.23359 9.08299 4.42885 9.27825L5.22175 10.0711L4.64645 10.6464C4.45118 10.8417 4.45118 11.1583 4.64645 11.3536C4.84171 11.5488 5.15829 11.5488 5.35355 11.3536L5.92885 10.7783L6.72175 11.5711C6.91701 11.7664 7.23359 11.7664 7.42885 11.5711L7.57027 11.4297C7.76554 11.2345 7.76554 10.9179 7.57027 10.7226L6.77738 9.92973L7.92885 8.77825L8.72175 9.57115C8.91701 9.76641 9.23359 9.76641 9.42885 9.57115L9.57027 9.42973C9.76554 9.23446 9.76554 8.91788 9.57027 8.72262L8.77738 7.92973L9.92893 6.77818L10.7218 7.57107C10.9171 7.76633 11.2337 7.76633 11.4289 7.57107L11.5703 7.42965C11.7656 7.23439 11.7656 6.91781 11.5703 6.72254L10.7775 5.92965L11.3536 5.35355C11.5488 5.15829 11.5488 4.84171 11.3536 4.64645Z"
            })
        })
    })
}
function MZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.75006 4.85462C9.48302 4.55793 10.0001 3.83934 10.0001 3C10.0001 1.89543 9.10463 1 8.00006 1C6.89549 1 6.00006 1.89543 6.00006 3C6.00006 3.83934 6.5171 4.55793 7.25006 4.85462V6.05C7.25006 6.16046 7.16052 6.25 7.05006 6.25H6.00006C5.58585 6.25 5.25006 6.58579 5.25006 7C5.25006 7.41421 5.58585 7.75 6.00006 7.75H7.05006C7.16052 7.75 7.25006 7.83954 7.25006 7.95V11.9204C7.25006 12.0478 7.13243 12.1428 7.00976 12.1085C6.41202 11.9409 5.84078 11.6372 5.32256 11.2655C4.52588 10.6942 3.91832 10.0074 3.61609 9.57221C3.37983 9.23199 2.91249 9.14771 2.57227 9.38398C2.23205 9.62024 2.14777 10.0876 2.38404 10.4278C2.77626 10.9926 3.50203 11.8058 4.44841 12.4845C5.17705 13.007 6.07468 13.4767 7.08058 13.664C7.17775 13.682 7.25006 13.7657 7.25006 13.8645V14.25C7.25006 14.5594 7.66844 14.825 7.88023 14.9396C7.95539 14.9803 8.04474 14.9803 8.11989 14.9396C8.33169 14.825 8.75006 14.5594 8.75006 14.25V13.8645C8.75006 13.7657 8.82238 13.682 8.91954 13.664C9.92545 13.4767 10.8231 13.007 11.5517 12.4845C12.4981 11.8058 13.2239 10.9926 13.6161 10.4278C13.8523 10.0876 13.7681 9.62024 13.4279 9.38398C13.0876 9.14771 12.6203 9.23199 12.384 9.57221C12.0818 10.0074 11.4742 10.6942 10.6776 11.2655C10.1593 11.6372 9.58811 11.9409 8.99036 12.1085C8.86769 12.1428 8.75006 12.0478 8.75006 11.9204V7.95C8.75006 7.83954 8.8396 7.75 8.95006 7.75H10.0001C10.4143 7.75 10.7501 7.41421 10.7501 7C10.7501 6.58579 10.4143 6.25 10.0001 6.25H8.95006C8.8396 6.25 8.75006 6.16046 8.75006 6.05V4.85462ZM9.00006 3C9.00006 3.5 8.75006 4 8.00006 4C7.25006 4 7.00006 3.5 7.00006 3C7.00006 2.5 7.25006 2 8.00006 2C8.75006 2 9.00006 2.5 9.00006 3Z"
            })
        })
    })
}
function TZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M2.86597 5.54467C2.38372 5.54467 2 5.9284 2 6.41064V10.0177C2 10.5 2.38372 10.8837 2.86597 10.8837C3.34821 10.8837 3.73193 10.5 3.73193 10.0177V6.41064C3.73193 5.9284 3.34821 5.54467 2.86597 5.54467ZM11.7776 5.6932V11.2908C11.7776 11.7735 11.4148 12.1684 10.946 12.219L10.844 12.2244L10.2238 12.2243L10.2247 14.134C10.2247 14.6163 9.84093 15 9.35869 15C8.91089 15 8.54805 14.6691 8.49849 14.2358L8.49272 14.134L8.49189 12.2243H7.33877L7.33899 14.134C7.33899 14.6163 6.95526 15 6.47302 15C6.02523 15 5.66238 14.6691 5.61283 14.2358L5.60706 14.134L5.60681 12.2243L4.98775 12.2244C4.50502 12.2244 4.11012 11.8617 4.05961 11.3928L4.05415 11.2908V5.6932H11.7776ZM12.9658 5.54467C13.4136 5.54467 13.7764 5.87554 13.826 6.30891L13.8318 6.41064V10.0177C13.8318 10.5 13.448 10.8837 12.9658 10.8837C12.518 10.8837 12.1552 10.5528 12.1056 10.1195L12.0998 10.0177V6.41064C12.0998 5.9284 12.4836 5.54467 12.9658 5.54467ZM10.3135 1.00001C10.334 1.00021 10.3531 1.0055 10.3719 1.01593C10.4213 1.04331 10.4441 1.0942 10.4337 1.14515L10.4196 1.18302L9.80958 2.28503C10.9245 2.86519 11.6957 3.94159 11.7714 5.18973L11.7776 5.38819H4.05415C4.05566 4.12286 4.77119 3.01221 5.849 2.38072L6.02214 2.28504L5.41211 1.18302C5.3778 1.12111 5.39811 1.05016 5.45986 1.01593C5.47866 1.0055 5.49774 1.00022 5.51821 1.00001C5.54742 0.999731 5.57562 1.00937 5.5981 1.02832L5.62695 1.06367L6.24493 2.17762C6.75046 1.95338 7.31749 1.82752 7.91586 1.82752C8.42874 1.82752 8.91861 1.91999 9.36645 2.08762L9.58679 2.17762L10.2048 1.06366C10.2281 1.02148 10.2697 0.999588 10.3135 1.00001ZM6.13352 3.33003C5.95721 3.33003 5.81127 3.47597 5.81127 3.65228C5.81127 3.82859 5.95721 3.97453 6.13352 3.97453C6.30983 3.97453 6.45577 3.82859 6.45577 3.65228C6.45577 3.47597 6.30983 3.33003 6.13352 3.33003ZM9.69817 3.33003C9.52186 3.33003 9.37592 3.47597 9.37592 3.65228C9.37592 3.82859 9.52186 3.97453 9.69817 3.97453C9.87448 3.97453 10.0204 3.82859 10.0204 3.65228C10.0204 3.47597 9.87448 3.33003 9.69817 3.33003Z"
            })
        })
    })
}
function LZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M14.0055 11.9103C13.7853 12.3994 13.5247 12.8496 13.2228 13.2635C12.8112 13.8278 12.4742 14.2185 12.2145 14.4354C11.812 14.7914 11.3806 14.9737 10.9187 14.9841C10.5871 14.9841 10.1873 14.8934 9.72178 14.7093C9.25477 14.5261 8.8256 14.4354 8.43317 14.4354C8.02161 14.4354 7.58021 14.5261 7.10808 14.7093C6.63523 14.8934 6.2543 14.9893 5.96306 14.9988C5.52014 15.0169 5.07865 14.8294 4.63797 14.4354C4.3567 14.1994 4.0049 13.795 3.58345 13.2221C3.13126 12.6102 2.75951 11.9007 2.46827 11.0919C2.15636 10.2182 2 9.37218 2 8.55312C2 7.61489 2.21081 6.80568 2.63307 6.12756C2.96493 5.58287 3.40642 5.15321 3.95898 4.83779C4.51153 4.52236 5.10857 4.36163 5.75153 4.35134C6.10334 4.35134 6.56468 4.45599 7.138 4.66167C7.7097 4.86803 8.07678 4.97268 8.23772 4.97268C8.35805 4.97268 8.76584 4.85032 9.45714 4.60636C10.1109 4.38012 10.6626 4.28644 11.1146 4.32334C12.3394 4.4184 13.2596 4.88272 13.8716 5.71924C12.7762 6.35752 12.2343 7.2515 12.2451 8.39834C12.255 9.29164 12.592 10.035 13.2542 10.6252C13.5544 10.8992 13.8896 11.1109 14.2625 11.2613C14.1816 11.4868 14.0962 11.7029 14.0055 11.9103ZM11.1964 1.28008C11.1964 1.98024 10.9304 2.63398 10.4002 3.23907C9.76042 3.9584 8.98654 4.37407 8.14732 4.30848C8.13663 4.22448 8.13043 4.13608 8.13043 4.04318C8.13043 3.37103 8.4347 2.65169 8.97504 2.06354C9.2448 1.76574 9.58789 1.51813 10.0039 1.32061C10.4191 1.12603 10.8118 1.01842 11.1811 1C11.1919 1.0936 11.1964 1.18721 11.1964 1.28007V1.28008Z"
            })
        })
    })
}
function OZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.97946 10.6156C2.05606 10.6562 2.14412 10.6741 2.23289 10.6653L2.41955 10.6469C2.66303 10.6229 2.84066 10.4085 2.81632 10.1681L2.78925 9.90076C2.77789 9.7884 2.72295 9.68468 2.63593 9.61141L2.62022 9.59822C2.32323 9.34807 2.47523 8.86832 2.86364 8.82998L2.92143 8.82426C3.04149 8.81246 3.16122 8.84942 3.253 8.92675L3.97342 9.53349C4.0248 9.57675 4.06549 9.63107 4.09237 9.69227L5.04272 11.8554C5.11938 12.0299 5.3015 12.1355 5.49322 12.1166L5.58391 12.1076C5.82736 12.0836 6.00502 11.8692 5.98068 11.6288L5.95894 11.414C5.9445 11.2714 6.00172 11.1308 6.11213 11.0378L7.02148 10.2711C7.09019 10.2132 7.17518 10.1775 7.26506 10.1685L7.5395 10.1415C7.78295 10.1174 8.00006 10.2929 8.0244 10.5333L8.15284 11.802C8.15484 11.8218 8.15819 11.8414 8.1629 11.8608C8.16633 11.8748 8.17047 11.8887 8.17528 11.9024L8.64755 13.2412C8.71494 13.4322 8.90614 13.5527 9.11 13.5326L9.17493 13.5262C9.41837 13.5022 9.59603 13.2878 9.57169 13.0473L9.53692 12.704C9.53251 12.6606 9.52159 12.6181 9.50455 12.5781C9.49601 12.558 9.48595 12.5386 9.47443 12.5199L9.37768 12.363C9.20797 12.0879 9.38736 11.7322 9.71196 11.7001L9.85051 11.6864C10.094 11.6624 10.2716 11.448 10.2473 11.2076L10.2202 10.9403C10.2089 10.8279 10.1539 10.7242 10.0669 10.6509L9.71025 10.3505C9.48538 10.1611 9.50777 9.81158 9.755 9.65168L10.5194 9.1573C10.7194 9.02801 10.7794 8.7653 10.655 8.5637L10.1053 7.67262C9.96765 7.44949 10.0574 7.15784 10.2974 7.04799L10.7966 6.81963C10.9678 6.74128 11.07 6.56451 11.0513 6.37914L10.9316 5.19737C10.9152 5.03507 10.8087 4.89526 10.6553 4.83469L10.2567 4.6772C10.1033 4.61658 9.99683 4.47682 9.98039 4.31452L9.88177 3.34051C9.85443 3.07027 9.58703 2.88971 9.32211 2.96255L7.45816 3.47498C7.36457 3.50072 7.26501 3.49538 7.1748 3.45971L6.59353 3.23012C6.48029 3.18536 6.35339 3.18873 6.24273 3.23936L5.18057 3.7253L3.66813 4.27789C3.5988 4.30325 3.53744 4.34512 3.4892 4.39928L2.90356 3.86533C1.98688 4.99386 1.4375 6.43277 1.4375 8C1.4375 8.92969 1.63082 9.81422 1.97946 10.6156ZM7.95598 1.00014C7.94112 1.00005 7.92626 1 7.91139 1C7.65384 1 7.40291 1.0172 7.15848 1.05006C3.68927 1.46572 1 4.4188 1 8C1 11.2831 3.26026 14.0384 6.3096 14.7945C6.81395 14.9284 7.34893 15 7.91139 15C7.92626 15 7.94112 15 7.95598 14.9999C7.97064 15 7.98531 15 8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C7.98531 1 7.97064 1.00005 7.95598 1.00014ZM13.2278 5.8125C13.2278 5.57089 13.0295 5.375 12.7848 5.375C12.5401 5.375 12.3418 5.57089 12.3418 5.8125V7.02171L11.9455 7.80432C11.8361 8.02045 11.9248 8.28326 12.1436 8.3913C12.3625 8.49934 12.6286 8.41176 12.738 8.19568L13.2278 7.22829V5.8125ZM12.212 11.6281C12.385 11.799 12.385 12.076 12.212 12.2469L11.3259 13.1219C11.1529 13.2927 10.8724 13.2927 10.6994 13.1219C10.5263 12.951 10.5263 12.674 10.6994 12.5031L11.5854 11.6281C11.7585 11.4573 12.039 11.4573 12.212 11.6281Z"
            })
        })
    })
}
function RZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M7.25 1.5C7.25 1.22386 7.47386 1 7.75 1H8.25C8.52614 1 8.75 1.22386 8.75 1.5V6.18942L12.0659 2.87356C12.2611 2.67829 12.5777 2.67829 12.773 2.87356L13.1265 3.22711C13.3218 3.42237 13.3218 3.73895 13.1265 3.93422L9.81074 7.25H14.5C14.7761 7.25 15 7.47386 15 7.75V8.25C15 8.52614 14.7761 8.75 14.5 8.75H9.81058L13.1265 12.0659C13.3218 12.2612 13.3218 12.5778 13.1265 12.7731L12.773 13.1266C12.5777 13.3219 12.2611 13.3219 12.0659 13.1266L8.75 9.81074V14.5C8.75 14.7761 8.52614 15 8.25 15H7.75C7.47386 15 7.25 14.7761 7.25 14.5V9.81074L3.93414 13.1266C3.73887 13.3219 3.42229 13.3219 3.22703 13.1266L2.87348 12.7731C2.67821 12.5778 2.67821 12.2612 2.87348 12.0659L6.18942 8.75H1.5C1.22386 8.75 1 8.52614 1 8.25V7.75C1 7.47386 1.22386 7.25 1.5 7.25H6.18926L2.87348 3.93422C2.67821 3.73895 2.67821 3.42237 2.87348 3.22711L3.22703 2.87356C3.42229 2.67829 3.73887 2.67829 3.93414 2.87356L7.25 6.18942V1.5Z"
            })
        })
    })
}
function PZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15ZM11.0817 4.40702C11.0112 4.19544 10.8283 4.04104 10.6079 4.00699C10.3875 3.97294 10.1665 4.06497 10.0354 4.2454L9.36571 5.1673L9.18307 5.33789L8.85435 5.18437V4.59525C8.85435 4.26651 8.58785 4.00001 8.25911 4.00001H7.37076C7.17486 4.00001 6.99149 4.09641 6.88043 4.25779L6.39157 4.96809H5.66808C5.47577 4.96809 5.29531 5.061 5.18359 5.21753L4.1818 6.62114L3.18895 7.54853C3.0057 7.71969 2.94937 7.98734 3.04808 8.21784L4.0845 10.638C4.14795 10.7862 4.2688 10.9023 4.41941 10.9598C4.57001 11.0173 4.73749 11.0112 4.88355 10.943L6.83664 10.0309H7.95265L8.81103 11.2335C8.92275 11.3901 9.10322 11.483 9.29553 11.483H10.8501C11.001 11.483 11.1462 11.4257 11.2565 11.3227L12.2929 10.3547C12.3623 10.2898 12.4152 10.2092 12.4472 10.1197L12.9654 8.66762C13.027 8.49498 13.0056 8.30359 12.9074 8.14879L11.6879 6.22571L11.0817 4.40702ZM9.68323 12.1462C9.41774 12.1462 9.24506 12.4256 9.36379 12.663L9.6359 13.2073C9.6964 13.3282 9.82006 13.4047 9.95534 13.4047H10.1431C10.2784 13.4047 10.4021 13.3282 10.4626 13.2073L10.7347 12.663C10.8534 12.4256 10.6807 12.1462 10.4152 12.1462H9.68323Z"
            })
        })
    })
}
function $Z(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 2.20101C9.60135 0.599663 12.1976 0.599663 13.799 2.20101C15.4003 3.80236 15.4003 6.39865 13.799 8L8 13.799C6.39865 15.4003 3.80236 15.4003 2.20101 13.799C0.599663 12.1976 0.599663 9.60135 2.20101 8L8 2.20101ZM9.44975 5.72183C9.1066 6.06497 8.55025 6.06497 8.20711 5.72183C7.86396 5.37868 7.86396 4.82233 8.20711 4.47918C8.55025 4.13604 9.1066 4.13604 9.44975 4.47918C9.79289 4.82233 9.79289 5.37868 9.44975 5.72183ZM10.2782 7.79289C10.6213 8.13604 11.1777 8.13604 11.5208 7.79289C11.864 7.44975 11.864 6.8934 11.5208 6.55025C11.1777 6.20711 10.6213 6.20711 10.2782 6.55025C9.93503 6.8934 9.93503 7.44975 10.2782 7.79289ZM6.13604 9.03553C5.79289 9.37868 5.23654 9.37868 4.8934 9.03553C4.55025 8.69239 4.55025 8.13604 4.8934 7.79289C5.23654 7.44975 5.79289 7.44975 6.13604 7.79289C6.47919 8.13604 6.47918 8.69239 6.13604 9.03553ZM6.96447 11.1066C7.30761 11.4497 7.86396 11.4497 8.20711 11.1066C8.55025 10.7635 8.55025 10.2071 8.20711 9.86396C7.86396 9.52082 7.30761 9.52082 6.96447 9.86396C6.62132 10.2071 6.62132 10.7635 6.96447 11.1066Z"
            })
        })
    })
}
function FZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M7.69518 1.10369C7.8749 0.965437 8.12516 0.965437 8.30489 1.10369L14.8049 6.10369C14.9746 6.23422 15.0423 6.45831 14.9734 6.661C14.9045 6.86369 14.7141 7 14.5 7H1.50003C1.28594 7 1.0956 6.86369 1.02666 6.661C0.957722 6.45831 1.02548 6.23422 1.19518 6.10369L7.69518 1.10369Z"
            }), c.jsx("path", {
                d: "M1.00003 14.5385C1.00003 14.0364 1.00003 13.7853 1.08813 13.5896C1.18841 13.3668 1.3668 13.1884 1.58962 13.0881C1.78537 13 2.03641 13 2.53849 13H2.68003C2.79204 13 2.84805 13 2.89083 12.9782C2.92846 12.959 2.95906 12.9284 2.97823 12.8908C3.00003 12.848 3.00003 12.792 3.00003 12.68V8.48C3.00003 8.31198 3.00003 8.22798 3.03273 8.1638C3.06149 8.10735 3.10738 8.06146 3.16383 8.0327C3.22801 8 3.31201 8 3.48003 8H4.52003C4.68805 8 4.77205 8 4.83623 8.0327C4.89268 8.06146 4.93857 8.10735 4.96733 8.1638C5.00003 8.22798 5.00003 8.31198 5.00003 8.48V12.68C5.00003 12.792 5.00003 12.848 5.02183 12.8908C5.041 12.9284 5.0716 12.959 5.10923 12.9782C5.15201 13 5.20802 13 5.32003 13H6.68003C6.79204 13 6.84805 13 6.89083 12.9782C6.92846 12.959 6.95906 12.9284 6.97823 12.8908C7.00003 12.848 7.00003 12.792 7.00003 12.68V8.48C7.00003 8.31198 7.00003 8.22798 7.03273 8.1638C7.06149 8.10735 7.10738 8.06146 7.16383 8.0327C7.22801 8 7.31201 8 7.48003 8H8.52003C8.68805 8 8.77205 8 8.83623 8.0327C8.89268 8.06146 8.93857 8.10735 8.96733 8.1638C9.00003 8.22798 9.00003 8.31198 9.00003 8.48V12.68C9.00003 12.792 9.00003 12.848 9.02183 12.8908C9.041 12.9284 9.0716 12.959 9.10923 12.9782C9.15201 13 9.20802 13 9.32003 13H10.68C10.792 13 10.848 13 10.8908 12.9782C10.9285 12.959 10.9591 12.9284 10.9782 12.8908C11 12.848 11 12.792 11 12.68V8.48C11 8.31198 11 8.22798 11.0327 8.1638C11.0615 8.10735 11.1074 8.06146 11.1638 8.0327C11.228 8 11.312 8 11.48 8H12.52C12.688 8 12.7721 8 12.8362 8.0327C12.8927 8.06146 12.9386 8.10735 12.9673 8.1638C13 8.22798 13 8.31198 13 8.48V12.68C13 12.792 13 12.848 13.0218 12.8908C13.041 12.9284 13.0716 12.959 13.1092 12.9782C13.152 13 13.208 13 13.32 13H13.4616C13.9637 13 14.2147 13 14.4104 13.0881C14.6333 13.1884 14.8116 13.3668 14.9119 13.5896C15 13.7853 15 14.0364 15 14.5385C15 14.6891 15 14.7644 14.9736 14.8231C14.9435 14.89 14.89 14.9435 14.8232 14.9736C14.7644 15 14.6891 15 14.5385 15H1.46157C1.31094 15 1.23563 15 1.17691 14.9736C1.11006 14.9435 1.05654 14.89 1.02646 14.8231C1.00003 14.7644 1.00003 14.6891 1.00003 14.5385Z"
            })]
        })
    })
}
function NZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3 10C3.55228 10 4 10.4477 4 11V14C4 14.5523 3.55228 15 3 15H2C1.44772 15 1 14.5523 1 14V11C1 10.4477 1.44772 10 2 10H3ZM14 1C14.5523 1 15 1.44772 15 2V14C15 14.5523 14.5523 15 14 15H13C12.4477 15 12 14.5523 12 14V2C12 1.44772 12.4477 1 13 1H14ZM8.5 5C9.05229 5 9.5 5.44772 9.5 6V14C9.5 14.5523 9.05229 15 8.5 15H7.5C6.94772 15 6.5 14.5523 6.5 14V6C6.5 5.44772 6.94772 5 7.5 5H8.5Z"
            })
        })
    })
}
function VZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5 6V3.75C5 2.23122 6.23122 1 7.75 1H8.25C9.76878 1 11 2.23122 11 3.75V6H12.5525C12.8073 6 13.0213 6.19157 13.0495 6.44478L13.8767 13.8896C13.9425 14.4819 13.4788 15 12.8828 15H3.11731C2.52129 15 2.0576 14.4819 2.12342 13.8896L2.95062 6.44478C2.97876 6.19157 3.19279 6 3.44756 6H5ZM6.5 3.75C6.5 3.05964 7.05964 2.5 7.75 2.5H8.25C8.94036 2.5 9.5 3.05964 9.5 3.75V6H6.5V3.75ZM5 7.24994V8C5 8.41421 5.33579 8.75 5.75 8.75C6.16421 8.75 6.5 8.41421 6.5 8V7.24988C6.80364 7.47793 7.00004 7.84103 7.00004 8.25C7.00004 8.94036 6.4404 9.5 5.75004 9.5C5.05969 9.5 4.50004 8.94036 4.50004 8.25C4.50004 7.84106 4.69641 7.47799 5 7.24994ZM9.5 7.24994V8C9.5 8.41421 9.83579 8.75 10.25 8.75C10.6642 8.75 11 8.41421 11 8V7.24988C11.3036 7.47793 11.5 7.84103 11.5 8.25C11.5 8.94036 10.9404 9.5 10.25 9.5C9.55969 9.5 9.00004 8.94036 9.00004 8.25C9.00004 7.84106 9.19641 7.47799 9.5 7.24994Z"
            })
        })
    })
}
function BZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8.75 7.25037H11.0391C11.2274 5.46122 12.0793 3.98248 13.2253 3.34196C12.0996 2.08028 10.5238 1.22889 8.75 1.04004V7.25037Z"
            }), c.jsx("path", {
                d: "M8.75 8.75037H11.0392C11.2276 10.5394 12.0796 12.018 13.2257 12.6583C12.1 13.9202 10.524 14.7718 8.75 14.9607V8.75037Z"
            }), c.jsx("path", {
                d: "M13.254 10.6753C13.5424 11.0874 13.8411 11.3137 14.1093 11.4207C14.561 10.6155 14.8582 9.71205 14.9606 8.75037H12.5497C12.6552 9.534 12.9197 10.1979 13.254 10.6753Z"
            }), c.jsx("path", {
                d: "M14.9606 7.25037C14.8582 6.28844 14.5609 5.38474 14.1089 4.57948C13.8409 4.68648 13.5423 4.91276 13.254 5.32466C12.9196 5.80229 12.6551 6.46641 12.5496 7.25037H14.9606Z"
            }), c.jsx("path", {
                d: "M7.25 7.25037V1.04011C5.47637 1.22912 3.90069 2.08054 2.77515 3.34221C3.92095 3.98286 4.77266 5.46145 4.96093 7.25037H7.25Z"
            }), c.jsx("path", {
                d: "M3.45043 7.25037C3.34495 6.46641 3.08037 5.80229 2.74603 5.32466C2.45789 4.91304 2.15951 4.68678 1.89161 4.5797C1.43975 5.3849 1.14249 6.28853 1.04004 7.25037H3.45043Z"
            }), c.jsx("path", {
                d: "M1.89127 11.4204C1.43961 10.6154 1.14247 9.71197 1.04004 8.75037H3.45033C3.34478 9.534 3.08026 10.1979 2.74603 10.6753C2.45777 11.0871 2.15926 11.3134 1.89127 11.4204Z"
            }), c.jsx("path", {
                d: "M2.77471 12.658C3.92058 12.0176 4.7724 10.5392 4.96085 8.75037H7.25V14.9606C5.47614 14.7716 3.90028 13.92 2.77471 12.658Z"
            })]
        })
    })
}
function UZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M3.61261 6.03903C3.5 6.25577 3.5 6.54051 3.5 7.11V8.89C3.5 9.45949 3.5 9.74423 3.61261 9.96097C3.70746 10.1436 3.85638 10.2925 4.039 10.3874C4.25574 10.5 4.54053 10.5 5.10999 10.5H5.5V5.5H5.10999C4.54053 5.5 4.25574 5.5 4.039 5.61258C3.85638 5.70746 3.70746 5.85638 3.61261 6.03903Z"
            }), c.jsx("path", {
                d: "M11.5 8.89C11.5 9.45949 11.5 9.74423 11.3874 9.96097C11.2925 10.1436 11.1436 10.2925 10.961 10.3874C10.7443 10.5 10.4595 10.5 9.89001 10.5H9.5V8V5.5H9.89001C10.4595 5.5 10.7443 5.5 10.961 5.61258C11.1436 5.70746 11.2925 5.85638 11.3874 6.03903C11.5 6.25577 11.5 6.54051 11.5 7.11V8.89Z"
            }), c.jsx("path", {
                d: "M8.5 5.5H6.5V10.5H8.5V5.5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.32697 4.63803C1 5.27977 1 6.11984 1 7.8V8.2C1 9.88016 1 10.7202 1.32697 11.362C1.61462 11.9265 2.07355 12.3854 2.638 12.673C3.27979 13 4.11987 13 5.79999 13H9.20001C10.8801 13 11.7202 13 12.362 12.673C12.9265 12.3854 13.3854 11.9265 13.673 11.362C13.8546 11.0057 13.9352 10.5883 13.9712 10H14C14.5523 10 15 9.55229 15 9V7C15 6.44771 14.5523 6 14 6H13.9712C13.9352 5.41168 13.8546 4.99429 13.673 4.63803C13.3854 4.07355 12.9265 3.61459 12.362 3.32698C11.7202 3 10.8801 3 9.20001 3H5.79999C4.11987 3 3.27979 3 2.638 3.32698C2.07355 3.61459 1.61462 4.07355 1.32697 4.63803ZM9.20001 4.5H5.79999C4.93518 4.5 4.37677 4.50116 3.95178 4.53589C3.54425 4.56918 3.39319 4.6257 3.31903 4.66348C3.03674 4.8073 2.80731 5.03677 2.66351 5.31902C2.62567 5.39317 2.56921 5.54427 2.53589 5.95175C2.50116 6.37675 2.5 6.93517 2.5 7.8V8.2C2.5 9.06483 2.50116 9.62325 2.53589 10.0482C2.56921 10.4557 2.62567 10.6068 2.66351 10.681C2.80731 10.9632 3.03674 11.1927 3.31903 11.3365C3.39319 11.3743 3.54425 11.4308 3.95178 11.4641C4.37677 11.4988 4.93518 11.5 5.79999 11.5H9.20001C10.0648 11.5 10.6232 11.4988 11.0482 11.4641C11.4557 11.4308 11.6068 11.3743 11.681 11.3365C11.9633 11.1927 12.1927 10.9632 12.3365 10.681C12.3743 10.6068 12.4308 10.4557 12.4641 10.0482C12.4988 9.62325 12.5 9.06483 12.5 8.2V7.8C12.5 6.93517 12.4988 6.37675 12.4641 5.95175C12.4308 5.54427 12.3743 5.39317 12.3365 5.31902C12.1927 5.03677 11.9633 4.8073 11.681 4.66348C11.6068 4.6257 11.4557 4.56918 11.0482 4.53589C10.6232 4.50116 10.0648 4.5 9.20001 4.5Z"
            })]
        })
    })
}
function HZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5 1C3.89543 1 3 1.89543 3 3V5.5C3 5.77614 3.22386 6 3.5 6H4C4.27614 6 4.5 5.77614 4.5 5.5V3.5C4.5 3.22386 4.72386 3 5 3H7C7.27614 3 7.5 3.22386 7.5 3.5V5.5C7.5 5.77614 7.72386 6 8 6C8.27614 6 8.5 5.77614 8.5 5.5V3.5C8.5 3.22386 8.72386 3 9 3H11C11.2761 3 11.5 3.22386 11.5 3.5V5.5C11.5 5.77614 11.7239 6 12 6H12.5C12.7761 6 13 5.77614 13 5.5V3C13 1.89543 12.1046 1 11 1H5Z"
            }), c.jsx("path", {
                d: "M2.5 7C1.67157 7 1 7.67157 1 8.5V14.5C1 14.7761 1.22386 15 1.5 15H2.63962C2.85484 15 3.04591 14.8623 3.11396 14.6581L3.65811 13.0257C3.86229 12.4131 4.43549 12 5.08114 12H10.9189C11.5645 12 12.1377 12.4131 12.3419 13.0257L12.886 14.6581C12.9541 14.8623 13.1452 15 13.3604 15H14.5C14.7761 15 15 14.7761 15 14.5V8.5C15 7.67157 14.3284 7 13.5 7H2.5Z"
            })]
        })
    })
}
function zZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4 11.5C4.82843 11.5 5.5 10.8284 5.5 10C5.5 9.17157 4.82843 8.5 4 8.5C3.17157 8.5 2.5 9.17157 2.5 10C2.5 10.8284 3.17157 11.5 4 11.5ZM4 13C5.65685 13 7 11.6569 7 10C7 8.34315 5.65685 7 4 7C2.34315 7 1 8.34315 1 10C1 11.6569 2.34315 13 4 13Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M12 11.5C12.8284 11.5 13.5 10.8284 13.5 10C13.5 9.17157 12.8284 8.5 12 8.5C11.1716 8.5 10.5 9.17157 10.5 10C10.5 10.8284 11.1716 11.5 12 11.5ZM12 13C13.6569 13 15 11.6569 15 10C15 8.34315 13.6569 7 12 7C10.3431 7 9 8.34315 9 10C9 11.6569 10.3431 13 12 13Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.32138 5.43065C5.44508 5.16778 5.70947 5 5.99999 5H11C11.4142 5 11.75 5.33579 11.75 5.75C11.75 6.21314 11.7973 7.03071 11.9382 7.81778C12.0086 8.21083 12.0992 8.5776 12.2104 8.88078C12.326 9.19598 12.4422 9.38157 12.5303 9.46967C12.8232 9.76256 12.8232 10.2374 12.5303 10.5303C12.2374 10.8232 11.7626 10.8232 11.4697 10.5303C11.1578 10.2184 10.949 9.79777 10.8021 9.39734C10.6508 8.9849 10.5413 8.52667 10.4617 8.08222C10.3631 7.53126 10.3053 6.97279 10.2757 6.5H6.47595L4.67861 10.3193C4.50224 10.6941 4.05543 10.855 3.68065 10.6786C3.30586 10.5022 3.14501 10.0554 3.32138 9.68065L5.32138 5.43065Z"
            }), c.jsx("path", {
                d: "M4 3.75C4 3.33579 4.33579 3 4.75 3H5.125C6.16053 3 7 3.83947 7 4.875V5H5.25C4.55964 5 4 4.44036 4 3.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.75 2.75C8.75 2.33579 9.08579 2 9.5 2H10.3344C11.4069 2 12.2271 2.95602 12.064 4.0161L11.7413 6.11404C11.6783 6.52344 11.2954 6.80426 10.886 6.74128C10.4766 6.67829 10.1957 6.29535 10.2587 5.88596L10.5815 3.78801C10.6048 3.63657 10.4876 3.5 10.3344 3.5H9.5C9.08579 3.5 8.75 3.16421 8.75 2.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11.6431 5.61413C11.8562 5.96932 11.741 6.43002 11.3859 6.64313L6.38586 9.64313C6.03068 9.85624 5.56998 9.74106 5.35687 9.38588C5.14376 9.03069 5.25893 8.57 5.61412 8.35689L10.6141 5.35689C10.9693 5.14378 11.43 5.25895 11.6431 5.61413Z"
            })]
        })
    })
}
function ZZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M12.2227 5.28499C12.0695 3.75895 10.7662 3.25441 9.12347 3.11785L9.11463 1.50014C9.11313 1.22394 8.88796 1.00129 8.61177 1.00288L8.33972 1.00444C8.06363 1.00603 7.84108 1.23109 7.8426 1.50719L7.85121 3.06938C7.51677 3.07123 7.17502 3.07986 6.8354 3.08862L6.82696 1.51298C6.82548 1.23679 6.60035 1.01412 6.32417 1.01567L6.05279 1.01719C5.77672 1.01873 5.55414 1.24374 5.5556 1.51981L5.5641 3.13726C5.28879 3.14452 5.0183 3.15128 4.75462 3.15288L4.75442 3.14626L3.50023 3.15283C3.224 3.15427 3.00128 3.37944 3.00285 3.65567L3.00495 4.02264C3.00654 4.30252 3.23757 4.52624 3.51743 4.52218C3.73529 4.51902 3.93888 4.51823 3.93159 4.52646C4.44676 4.5237 4.61616 4.82596 4.66647 5.08726L4.67971 7.49997C4.71523 7.49993 4.76161 7.50116 4.81424 7.50825C4.77181 7.50853 4.72659 7.50855 4.67984 7.50926L4.69794 10.8892C4.67631 11.0537 4.58243 11.3163 4.22242 11.3189C4.23107 11.3265 3.97423 11.3275 3.72911 11.3267C3.48128 11.3259 3.26904 11.5051 3.23022 11.7499L3.14563 12.2833C3.0973 12.588 3.33376 12.8633 3.64228 12.8616L4.70881 12.8556C5.01688 12.8543 5.32001 12.8579 5.61766 12.858L5.62706 14.5001C5.62864 14.7762 5.8537 14.9988 6.12979 14.9973L6.40058 14.9958C6.67673 14.9943 6.89936 14.7692 6.89784 14.493L6.88892 12.8737C7.23789 12.879 7.57546 12.88 7.90518 12.8778V14.5078C7.90518 14.784 8.12904 15.0078 8.40518 15.0078H8.67688C8.95303 15.0078 9.17688 14.784 9.17688 14.5078V12.8419C11.3148 12.7055 12.8086 12.1512 12.9833 10.1148C13.1244 8.47514 12.3598 7.7482 11.1442 7.45956C11.8797 7.0748 12.3367 6.40161 12.2227 5.28499ZM10.468 9.87504C10.4774 11.4758 7.77195 11.3089 6.90985 11.3145L6.89469 8.47649C7.75702 8.47193 10.459 8.20543 10.468 9.87504ZM9.85449 5.87427C9.86208 7.33055 7.60567 7.17329 6.88758 7.17736L6.87363 4.60346C7.59172 4.5994 9.846 4.35541 9.85449 5.87427Z"
            })
        })
    })
}
function qZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M9.64409 1.74899L9.66238 6.999L12.1653 6.99998C12.8375 6.99998 13.233 7.67956 12.8503 8.17697L7.85106 14.675C7.38603 15.2795 6.33285 14.9832 6.33285 14.248L6.33174 9.004L3.83465 9.00439C3.16343 9.00439 2.76771 8.32653 3.14846 7.82896L8.12469 1.32594C8.58786 0.720669 9.64148 1.01403 9.64409 1.74899Z"
            })
        })
    })
}
function WZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5.5 2.56348V4.9999H4V2.01348C4 1.48881 4.42533 1.06348 4.95 1.06348H11.131C11.6557 1.06348 12.081 1.48881 12.081 2.01348V4.9999H10.581V2.56348H5.5Z"
            }), c.jsx("path", {
                d: "M4.75 11C4.75 11.4142 4.41421 11.75 4 11.75C3.58579 11.75 3.25 11.4142 3.25 11C3.25 10.5858 3.58579 10.25 4 10.25C4.41421 10.25 4.75 10.5858 4.75 11Z"
            }), c.jsx("path", {
                d: "M12 11.75C12.4142 11.75 12.75 11.4142 12.75 11C12.75 10.5858 12.4142 10.25 12 10.25C11.5858 10.25 11.25 10.5858 11.25 11C11.25 11.4142 11.5858 11.75 12 11.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1 5.95C1 5.42533 1.42533 5 1.95 5H14.05C14.5747 5 15 5.42533 15 5.95V14.05C15 14.5747 14.5747 15 14.05 15H1.95C1.42533 15 1 14.5747 1 14.05V5.95ZM4 13C5.10457 13 6 12.1046 6 11C6 9.89543 5.10457 9 4 9C2.89543 9 2 9.89543 2 11C2 12.1046 2.89543 13 4 13ZM14 11C14 12.1046 13.1046 13 12 13C10.8954 13 10 12.1046 10 11C10 9.89543 10.8954 9 12 9C13.1046 9 14 9.89543 14 11ZM4.75 6C4.33579 6 4 6.33579 4 6.75C4 7.16421 4.33579 7.5 4.75 7.5H11.25C11.6642 7.5 12 7.16421 12 6.75C12 6.33579 11.6642 6 11.25 6H4.75Z"
            })]
        })
    })
}
function GZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M12.0597 5.56418C11.953 5.45747 11.7763 5.44157 11.6696 5.54827L5.54827 11.6696C5.44157 11.7763 5.45747 11.953 5.56418 12.0597C6.23681 12.7323 6.23681 13.8229 5.56418 14.4955C4.89155 15.1682 3.80099 15.1682 3.12836 14.4955C2.81643 14.1836 2.64915 13.7818 2.62653 13.3735C2.21821 13.3508 1.8164 13.1836 1.50448 12.8716C0.831842 12.199 0.831842 11.1085 1.50448 10.4358C2.17711 9.76319 3.26766 9.76319 3.9403 10.4358C4.047 10.5425 4.22366 10.5584 4.33036 10.4517L10.4517 4.33036C10.5584 4.22366 10.5425 4.047 10.4358 3.9403C9.76319 3.26766 9.76319 2.17711 10.4358 1.50448C11.1085 0.831842 12.199 0.831841 12.8716 1.50448C13.1836 1.8164 13.3508 2.21821 13.3735 2.62653C13.7818 2.64915 14.1836 2.81643 14.4955 3.12836C15.1682 3.80099 15.1682 4.89155 14.4955 5.56418C13.8229 6.23681 12.7323 6.23681 12.0597 5.56418Z"
            }), c.jsx("path", {
                d: "M6.93934 5.72143L5.54827 4.33036C5.44157 4.22366 5.45748 4.047 5.56418 3.9403C6.23681 3.26766 6.23681 2.17711 5.56418 1.50448C4.89155 0.831842 3.80099 0.831841 3.12836 1.50448C2.81643 1.8164 2.64915 2.21821 2.62653 2.62653C2.21821 2.64915 1.8164 2.81643 1.50448 3.12836C0.831842 3.80099 0.831842 4.89154 1.50448 5.56418C2.17711 6.23681 3.26766 6.23681 3.9403 5.56418C4.047 5.45747 4.22366 5.44157 4.33036 5.54827L5.72143 6.93934L6.93934 5.72143Z"
            }), c.jsx("path", {
                d: "M10.2786 9.06066L9.06066 10.2786L10.4517 11.6696C10.5584 11.7763 10.5425 11.953 10.4358 12.0597C9.76319 12.7323 9.76319 13.8229 10.4358 14.4955C11.1085 15.1682 12.199 15.1682 12.8716 14.4955C13.1836 14.1836 13.3508 13.7818 13.3735 13.3735C13.7818 13.3508 14.1836 13.1836 14.4955 12.8716C15.1682 12.199 15.1682 11.1085 14.4955 10.4358C13.8229 9.76319 12.7323 9.76319 12.0597 10.4358C11.953 10.5425 11.7763 10.5584 11.6696 10.4517L10.2786 9.06066Z"
            })]
        })
    })
}
function KZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3.44964 2.7921C3.60721 2.03925 4.27101 1.5 5.04016 1.5H11.7143C11.9211 1.5 12.1172 1.5919 12.2495 1.75081C12.3818 1.90973 12.4367 2.11923 12.3992 2.32259L10.7742 11.144C10.7052 11.5188 10.3481 11.7678 9.97357 11.7046C9.93569 11.711 9.89676 11.7143 9.85706 11.7143H3.58927C3.20464 11.7143 2.89284 12.0261 2.89284 12.4107C2.89284 12.7953 3.20464 13.1071 3.58927 13.1071H10.4096C10.9668 13.1071 11.4455 12.7111 11.5498 12.1636L13.1193 3.92327C13.1913 3.54544 13.5559 3.29749 13.9338 3.36945C14.3116 3.44142 14.5595 3.80606 14.4876 4.18389L12.918 12.4242C12.6886 13.6286 11.6356 14.5 10.4096 14.5H3.58927C2.4354 14.5 1.5 13.5646 1.5 12.4107C1.5 12.3611 1.50173 12.312 1.50512 12.2633C1.49608 12.1894 1.49881 12.1128 1.51491 12.0359L3.44964 2.7921ZM5.54811 3.35714C5.34826 3.35714 5.17084 3.48502 5.10765 3.67461L4.95289 4.13889C4.85268 4.43953 5.07645 4.75 5.39334 4.75H9.05737C9.25721 4.75 9.43463 4.62212 9.49782 4.43253L9.65258 3.96825C9.75279 3.66761 9.52902 3.35714 9.21213 3.35714H5.54811Z"
            })
        })
    })
}
function YZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14.3454 2.12747C12.4571 0.674881 9.8437 0.666801 7.95141 2.075C6.06829 0.948146 3.67748 0.933515 1.78885 2.09575L1.4624 2.29664C1.17505 2.47348 1 2.78673 1 3.12414V14.1091C1 14.7979 1.77709 15.1999 2.33934 14.802L2.46632 14.7122C3.96246 13.6534 5.97363 13.6918 7.42823 14.807C7.76555 15.0656 8.23445 15.0656 8.57177 14.807C10.0264 13.6918 12.0375 13.6534 13.5337 14.7122L13.6607 14.802C14.2229 15.1999 15 14.7979 15 14.1091V3.09503C15 2.80244 14.8641 2.52646 14.6322 2.34807L14.3454 2.12747ZM8.75 3.35292C10.1133 2.26943 12.0445 2.25002 13.4309 3.31641L13.5 3.3696V12.9669C11.9924 12.2701 10.2532 12.2706 8.75 12.9595V3.35292ZM7.25 3.40418C5.82666 2.51695 4.0001 2.49625 2.575 3.37324L2.5 3.41939V12.9669C4.0076 12.2701 5.7468 12.2706 7.25 12.9595V3.40418Z"
            })
        })
    })
}
function QZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M7.99857 11.7426L4.22496 14.8304C3.73496 15.2314 2.99928 14.8823 3 14.2491L3.012 3.74686C3.01373 2.2293 4.24444 1 5.762 1H10.2471C11.7659 1 12.9971 2.23122 12.9971 3.75V14.25C12.9971 14.8827 12.2619 15.2311 11.7722 14.8304L7.99857 11.7426Z"
            })
        })
    })
}
function XZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15ZM9 5C9.55229 5 10 4.55228 10 4C10 3.44772 9.55229 3 9 3C8.44771 3 8 3.44772 8 4C8 4.55228 8.44771 5 9 5ZM13 7C13 7.55228 12.5523 8 12 8C11.4477 8 11 7.55228 11 7C11 6.44772 11.4477 6 12 6C12.5523 6 13 6.44772 13 7ZM8 9C8.55229 9 9 8.55229 9 8C9 7.44772 8.55229 7 8 7C7.44772 7 7 7.44772 7 8C7 8.55229 7.44772 9 8 9Z"
            })
        })
    })
}
function JZ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8.61237 1.11615C8.22372 0.961284 7.77561 0.961282 7.38696 1.11615L1.9946 3.26485L4.11084 4.06757L10.1375 1.72388L8.61237 1.11615Z"
            }), c.jsx("path", {
                d: "M12.3953 2.6236L6.42506 4.94537L7.37064 5.30404C8.05045 5.5619 8.5 6.21322 8.5 6.94029V14.9663C8.79341 14.9264 9.08191 14.8513 9.35676 14.7409L14.1584 12.8124C14.6718 12.6062 15 12.1627 15 11.675V4.50263H14.9985C15.0152 4.03251 14.7335 3.55531 14.1535 3.32421L12.3953 2.6236Z"
            }), c.jsx("path", {
                d: "M3 5.25049V7.25235C3 7.40386 3.0856 7.54236 3.22111 7.61012L4.71056 8.35484C4.84354 8.42133 5 8.32463 5 8.17595V6.00911L6.83866 6.70654C6.93578 6.74337 7 6.83642 7 6.94029V14.8625C6.87907 14.8283 6.75993 14.7878 6.64324 14.7409L1.84163 12.8124C1.32818 12.6062 1 12.1627 1 11.675V4.49187L3 5.25049Z"
            })]
        })
    })
}
function eq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.04804 2.09127C5.48186 1.91338 5.98962 2.00036 6.32531 2.31007L7.95469 3.81336L9.17824 2.40227C9.49403 2.03809 10.0309 1.9075 10.5003 2.08071L14.2784 3.47501C15.0432 3.75725 15.246 4.66899 14.6636 5.20636L13.2275 6.53137L14.0853 7.44107C14.5708 7.95591 14.4092 8.75381 13.7549 9.07217L12.7909 9.5413V12.0304C12.7909 12.2196 12.67 12.3894 12.4865 12.4581L8.70507 13.8745C8.25826 14.0418 7.76228 14.0418 7.31547 13.8745L3.53405 12.4581C3.35052 12.3894 3.22969 12.2196 3.22969 12.0304V9.54449L2.25867 9.07298C1.6026 8.7544 1.44137 7.95397 1.92958 7.43919L2.79166 6.53021L1.33632 5.18749C0.766967 4.6622 0.945848 3.77337 1.68163 3.47167L5.04804 2.09127ZM5.47167 3.26901L2.4797 4.49587L3.8196 5.73208L6.81157 4.50522L5.47167 3.26901ZM9.10569 4.46287L12.2008 5.73203L13.512 4.52229L10.1349 3.27596L9.10569 4.46287ZM12.1805 7.30264L8.9255 8.8042L9.63719 9.67969L12.917 8.08369L12.1805 7.30264ZM7.09492 8.80415L3.83843 7.3019L3.09648 8.08423L6.38289 9.68006L7.09492 8.80415ZM8.01027 7.74704L5.38752 6.53714L8.01027 5.46168L10.633 6.53714L8.01027 7.74704Z"
            })
        })
    })
}
function tq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14.0008 10.3548L14 13.5C14 14.3284 13.3284 15 12.5 15H3.5C2.67157 15 2 14.3284 2 13.5L1.99977 10.355C2.23746 10.4258 2.48574 10.4719 2.74165 10.4906L3 10.5L5.99995 10.4999C6.55217 10.4998 6.99987 10.9478 7 11.5C7 11.7455 7.17688 11.9496 7.41012 11.9919L7.5 12H8.5C8.74546 12 8.94961 11.8231 8.99194 11.5899L9 11.5C8.99987 10.9477 9.44761 10.4998 9.99996 10.4999L13 10.5C13.3478 10.5 13.6837 10.4493 14.0008 10.3548ZM9.25 1C10.2165 1 11 1.7835 11 2.75V4H14C14.5523 4 15 4.44772 15 5V7C15 8.10457 14.1046 9 13 9H3C1.89543 9 1 8.10457 1 7V5C1 4.44772 1.44772 4 2 4H5V2.75C5 1.7835 5.7835 1 6.75 1H9.25ZM9.25 2.5H6.75C6.61193 2.5 6.5 2.61193 6.5 2.75V4H9.5V2.75C9.5 2.61193 9.38807 2.5 9.25 2.5Z"
            })
        })
    })
}
function nq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M7.13438 2.14148C7.04561 1.53894 7.52983 1 8.15731 1H9.90859C10.5361 1 11.0203 1.53894 10.9315 2.14148L10.066 8H10.5744C11.1393 8 11.6639 8.22278 12.0432 8.59326C12.2813 8.82666 12.4629 9.11865 12.5597 9.45056L12.7211 10H5.34477L5.50618 9.45056C5.75838 8.59192 6.56945 8 7.4915 8H7.99993L7.13438 2.14148Z"
            }), c.jsx("path", {
                d: "M5.03356 11L3.00789 14.3627C2.91508 14.682 3.66482 15 4.00781 15H4.54927C4.84039 15 5.11706 14.8731 5.30703 14.6525L6.76092 12.9642C6.83019 12.7966 7.0753 12.7966 7.14457 12.9642L6.91397 13.7015C6.71254 14.3455 7.19362 15 7.86837 15H8.58015C8.85971 15 9.1265 14.883 9.31585 14.6773L10.893 12.9642C10.9622 12.7966 11.2074 12.7966 11.2766 12.9642L10.8747 14.1058C10.7209 14.5424 11.0449 15 11.5078 15C11.8508 15 12.5078 15 12.4377 14.3627L13.0031 11H5.03356Z"
            })]
        })
    })
}
function rq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 1C11.3137 1 14 2.55863 14 4.4813C14 4.65001 13.9793 4.81592 13.9393 4.97822L13.9403 4.97863L11.9789 12.8369C11.9623 12.9034 11.9321 12.9657 11.8903 13.0201C10.8709 14.34 9.57414 15 8 15C6.42568 15 5.13233 14.3399 4.11994 13.0196C4.09241 12.9837 4.06998 12.9443 4.0532 12.9026L4.03232 12.8384L2.07769 5.04301C2.02657 4.86016 2 4.67253 2 4.4813C2 2.55863 4.68629 1 8 1ZM8 1.99466C5.37665 1.99466 3.25 3.10797 3.25 4.4813C3.25 5.85464 5.37665 6.96795 8 6.96795C10.6234 6.96795 12.75 5.85464 12.75 4.4813C12.75 3.10797 10.6234 1.99466 8 1.99466Z"
            })
        })
    })
}
function sq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M7.99993 1C8.77574 1 9.43631 1.27835 9.98166 1.83484C10.5271 2.39143 10.7997 3.06561 10.7997 3.85716H5.20008C5.20008 3.0655 5.47275 2.39143 6.01809 1.83484C6.56354 1.27835 7.22401 1 7.99993 1Z"
            }), c.jsx("path", {
                d: "M14.4395 8.42837C14.5912 8.42837 14.7226 8.48503 14.8332 8.59812C14.9443 8.71122 15 8.84535 15 9.00009C15 9.15483 14.9444 9.28885 14.8335 9.40184C14.7229 9.51493 14.5915 9.57159 14.4398 9.57159H12.4799C12.4799 10.5893 12.2846 11.4524 11.8936 12.1608L13.7136 14.0268C13.8243 14.1397 13.8798 14.2738 13.8798 14.4285C13.8798 14.5832 13.8243 14.7173 13.7136 14.8304C13.6085 14.9435 13.4774 15 13.3198 15C13.1623 15 13.0313 14.9435 12.9261 14.8304L11.1936 13.0715C11.1644 13.1012 11.1207 13.1398 11.0622 13.1875C11.0039 13.2352 10.8814 13.32 10.6947 13.442C10.5083 13.5641 10.3185 13.6726 10.1261 13.7679C9.93351 13.8631 9.69434 13.9495 9.40846 14.0268C9.12269 14.1042 8.83981 14.1429 8.55984 14.1429V6.14304H7.43984V14.1429C7.14236 14.1429 6.84638 14.1027 6.55169 14.0223C6.25722 13.9419 6.00345 13.8437 5.79049 13.7277C5.57764 13.6114 5.38519 13.4954 5.21304 13.3793C5.04089 13.2633 4.91405 13.1667 4.83244 13.0892L4.70109 12.9641L3.09997 14.8123C2.98323 14.9374 2.8433 14.9998 2.67995 14.9998C2.53991 14.9998 2.41458 14.9521 2.30375 14.8569C2.19292 14.7496 2.13311 14.6171 2.12441 14.4595C2.1156 14.3019 2.16081 14.1635 2.26004 14.0444L4.02742 12.0177C3.68913 11.3392 3.51988 10.5236 3.51988 9.57148H1.55995C1.40831 9.57148 1.27707 9.51471 1.16624 9.40162C1.05541 9.28874 1 9.15461 1 8.99987C1 8.84524 1.05541 8.71111 1.16624 8.59812C1.27707 8.48503 1.40831 8.42837 1.55995 8.42837H3.51988V5.80343L2.00617 4.2588C1.89534 4.1457 1.83992 4.01179 1.83992 3.85694C1.83992 3.7022 1.89534 3.56829 2.00617 3.45519C2.117 3.3421 2.24823 3.28555 2.39998 3.28555C2.55162 3.28555 2.68285 3.3421 2.79368 3.45519L4.30739 4.99983H11.6922L13.2059 3.45519C13.3167 3.3421 13.448 3.28555 13.5996 3.28555C13.7512 3.28555 13.8826 3.3421 13.9933 3.45519C14.1041 3.56829 14.1596 3.7022 14.1596 3.85694C14.1596 4.01179 14.1041 4.1457 13.9933 4.2588L12.4796 5.80343V8.42837H14.4395Z"
            })]
        })
    })
}
function iq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M2 6.75A4.75 4.75 0 0 1 6.75 2h2.5A4.75 4.75 0 0 1 14 6.75a.25.25 0 0 1-.25.25H2.25A.25.25 0 0 1 2 6.75ZM2.5 8.5A.5.5 0 0 0 2 9v1a.5.5 0 0 0 .5.5h4.586a1 1 0 0 1 .707.293l1.566 1.566a.2.2 0 0 0 .282 0l1.566-1.566a1 1 0 0 1 .707-.293H13.5a.5.5 0 0 0 .5-.5V9a.5.5 0 0 0-.5-.5h-11Z"
            }), c.jsx("path", {
                d: "M7.674 12.088A.3.3 0 0 0 7.462 12h-4.89a.571.571 0 0 0-.572.571C2 13.361 2.64 14 3.429 14h9.142c.79 0 1.429-.64 1.429-1.429a.571.571 0 0 0-.571-.571h-1.89a.3.3 0 0 0-.213.088l-.978.978a1.2 1.2 0 0 1-1.697 0l-.977-.978Z"
            })]
        })
    })
}
function aq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14 11.3144C14 11.6896 13.9102 12.0455 13.75 12.3606V14.2C13.75 14.48 13.75 14.62 13.6955 14.727C13.6476 14.8211 13.5711 14.8976 13.477 14.9455C13.37 15 13.23 15 12.95 15H12.05C11.77 15 11.63 15 11.523 14.9455C11.4289 14.8976 11.3524 14.8211 11.3045 14.727C11.25 14.62 11.25 14.48 11.25 14.2V13.6743C9.08693 13.8509 6.91307 13.8509 4.75 13.6743V14.2C4.75 14.48 4.75 14.62 4.6955 14.727C4.64757 14.8211 4.57108 14.8976 4.477 14.9455C4.37004 15 4.23003 15 3.95 15H3.05C2.76997 15 2.62996 15 2.523 14.9455C2.42892 14.8976 2.35243 14.8211 2.3045 14.727C2.25 14.62 2.25 14.48 2.25 14.2V12.3606C2.08984 12.0455 2 11.6896 2 11.3144L2 8H1.5C1.22386 8 1 7.77614 1 7.5V5.5C1 5.22386 1.22386 5 1.5 5H2L2 3.4C2 2.55992 2 2.13988 2.16349 1.81901C2.3073 1.53677 2.53677 1.3073 2.81902 1.16349C3.13988 1 3.55992 1 4.4 1H11.6C12.4401 1 12.8601 1 13.181 1.16349C13.4632 1.3073 13.6927 1.53677 13.8365 1.81901C14 2.13988 14 2.55992 14 3.4L14 5H14.5C14.7761 5 15 5.22386 15 5.5V7.5C15 7.77614 14.7761 8 14.5 8H14V11.3144ZM3.5 2.68672C3.5 2.58798 3.58696 2.51185 3.68483 2.5249C4.12242 2.58324 4.5609 2.63267 5 2.67319V3.8C5 3.91046 5.08954 4 5.2 4H6.3C6.41046 4 6.5 3.91046 6.5 3.8V2.77683C8.44015 2.86606 10.3863 2.78208 12.3152 2.5249C12.413 2.51185 12.5 2.58798 12.5 2.68672V7.00025C12.5 7.82868 11.8284 8.50025 11 8.50025H5C4.17157 8.50025 3.5 7.82868 3.5 7.00025V2.68672ZM12.5 10.25C12.5 10.6642 12.1642 11 11.75 11C11.3358 11 11 10.6642 11 10.25C11 9.83579 11.3358 9.5 11.75 9.5C12.1642 9.5 12.5 9.83579 12.5 10.25ZM4.25 11C4.66421 11 5 10.6642 5 10.25C5 9.83579 4.66421 9.5 4.25 9.5C3.83579 9.5 3.5 9.83579 3.5 10.25C3.5 10.6642 3.83579 11 4.25 11Z"
            })
        })
    })
}
function oq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3 2.6C3 2.03995 3 1.75992 3.10899 1.54601C3.20487 1.35785 3.35785 1.20487 3.54601 1.10899C3.75992 1 4.03995 1 4.6 1H11.4C11.9601 1 12.2401 1 12.454 1.10899C12.6422 1.20487 12.7951 1.35785 12.891 1.54601C13 1.75992 13 2.03995 13 2.6V11.8C13 12.9201 13 13.4802 12.782 13.908C12.5903 14.2843 12.2843 14.5903 11.908 14.782C11.4802 15 10.9201 15 9.8 15H6.2C5.07989 15 4.51984 15 4.09202 14.782C3.71569 14.5903 3.40973 14.2843 3.21799 13.908C3 13.4802 3 12.9201 3 11.8V2.6ZM5 8.5C5.41421 8.5 5.75 8.16421 5.75 7.75C5.75 7.33579 5.41421 7 5 7C4.58579 7 4.25 7.33579 4.25 7.75C4.25 8.16421 4.58579 8.5 5 8.5ZM8.75 7.75C8.75 8.16421 8.41421 8.5 8 8.5C7.58579 8.5 7.25 8.16421 7.25 7.75C7.25 7.33579 7.58579 7 8 7C8.41421 7 8.75 7.33579 8.75 7.75ZM11.75 7.75C11.75 8.16421 11.4142 8.5 11 8.5C10.5858 8.5 10.25 8.16421 10.25 7.75C10.25 7.33579 10.5858 7 11 7C11.4142 7 11.75 7.33579 11.75 7.75ZM5.75 12.75C5.75 13.1642 5.41421 13.5 5 13.5C4.58579 13.5 4.25 13.1642 4.25 12.75C4.25 12.3358 4.58579 12 5 12C5.41421 12 5.75 12.3358 5.75 12.75ZM8.75 12.75C8.75 13.1642 8.41421 13.5 8 13.5C7.58579 13.5 7.25 13.1642 7.25 12.75C7.25 12.3358 7.58579 12 8 12C8.41421 12 8.75 12.3358 8.75 12.75ZM11.75 12.75C11.75 13.1642 11.4142 13.5 11 13.5C10.5858 13.5 10.25 13.1642 10.25 12.75C10.25 12.3358 10.5858 12 11 12C11.4142 12 11.75 12.3358 11.75 12.75ZM5.75 10.25C5.75 10.6642 5.41421 11 5 11C4.58579 11 4.25 10.6642 4.25 10.25C4.25 9.83579 4.58579 9.5 5 9.5C5.41421 9.5 5.75 9.83579 5.75 10.25ZM8.75 10.25C8.75 10.6642 8.41421 11 8 11C7.58579 11 7.25 10.6642 7.25 10.25C7.25 9.83579 7.58579 9.5 8 9.5C8.41421 9.5 8.75 9.83579 8.75 10.25ZM11.75 10.25C11.75 10.6642 11.4142 11 11 11C10.5858 11 10.25 10.6642 10.25 10.25C10.25 9.83579 10.5858 9.5 11 9.5C11.4142 9.5 11.75 9.83579 11.75 10.25ZM4.55629 3.26951C4.5 3.37788 4.5 3.52025 4.5 3.805V4.195C4.5 4.47975 4.5 4.62212 4.55629 4.73049C4.60373 4.82181 4.67819 4.89627 4.76951 4.94371C4.87788 5 5.02025 5 5.305 5H10.695C10.9797 5 11.1221 5 11.2305 4.94371C11.3218 4.89627 11.3963 4.82181 11.4437 4.73049C11.5 4.62212 11.5 4.47975 11.5 4.195V3.805C11.5 3.52025 11.5 3.37788 11.4437 3.26951C11.3963 3.17819 11.3218 3.10373 11.2305 3.05629C11.1221 3 10.9797 3 10.695 3H5.305C5.02025 3 4.87788 3 4.76951 3.05629C4.67819 3.10373 4.60373 3.17819 4.55629 3.26951Z"
            })
        })
    })
}
function cq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8 11.5C9.38071 11.5 10.5 10.3807 10.5 9C10.5 7.61929 9.38071 6.5 8 6.5C6.61929 6.5 5.5 7.61929 5.5 9C5.5 10.3807 6.61929 11.5 8 11.5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.8 2C9.16931 2 9.50856 2.20355 9.68235 2.52941L10.1843 3.47059C10.3581 3.79645 10.6974 4 11.0667 4H13.5C14.3284 4 15 4.67157 15 5.5V12.5C15 13.3284 14.3284 14 13.5 14H2.5C1.67157 14 1 13.3284 1 12.5V5.5C1 4.67157 1.67157 4 2.5 4H4.93333C5.30264 4 5.64189 3.79645 5.81569 3.47059L6.31765 2.52941C6.49144 2.20355 6.83069 2 7.2 2H8.8ZM8 13C10.2091 13 12 11.2091 12 9C12 6.79086 10.2091 5 8 5C5.79086 5 4 6.79086 4 9C4 11.2091 5.79086 13 8 13ZM12.5 5.5C12.5 5.22386 12.7239 5 13 5H13.5C13.7761 5 14 5.22386 14 5.5V6C14 6.27614 13.7761 6.5 13.5 6.5H13C12.7239 6.5 12.5 6.27614 12.5 6V5.5Z"
            })]
        })
    })
}
function lq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3 4.66667C2.69377 5.07498 2.45391 5.52495 2.28595 6H1.5C1.22386 6 1 6.22386 1 6.5C1 7.05228 1.44772 7.5 2 7.5H2.00278C2.00093 7.55546 2 7.61103 2 7.66667V10.1597C2 10.4718 2.07175 10.7682 2.2002 11.0326V13.2C2.2002 13.48 2.2002 13.62 2.25469 13.727C2.30263 13.8211 2.37912 13.8976 2.4732 13.9455C2.58016 14 2.72017 14 3.0002 14H3.4002C3.68022 14 3.82023 14 3.92719 13.9455C4.02127 13.8976 4.09776 13.8211 4.1457 13.727C4.2002 13.62 4.2002 13.48 4.2002 13.2V12.1833L4.84427 12.237C6.94445 12.412 9.05555 12.412 11.1557 12.237L11.7998 12.1833V13.2C11.7998 13.48 11.7998 13.62 11.8543 13.727C11.9022 13.8211 11.9787 13.8976 12.0728 13.9455C12.1798 14 12.3198 14 12.5998 14H12.9998C13.2798 14 13.4198 14 13.5268 13.9455C13.6209 13.8976 13.6974 13.8211 13.7453 13.727C13.7998 13.62 13.7998 13.48 13.7998 13.2V11.0326C13.9282 10.7682 14 10.4718 14 10.1597V7.66667C14 7.61103 13.9991 7.55546 13.9972 7.5H14C14.5523 7.5 15 7.05228 15 6.5C15 6.22386 14.7761 6 14.5 6H13.714C13.5461 5.52495 13.3062 5.07498 13 4.66667L11.6 2.8C11.2223 2.29639 10.6295 2 10 2H6C5.37049 2 4.77771 2.29639 4.4 2.8L3 4.66667ZM13 8.21935V8.90509C13 9.50979 12.4712 10 11.8188 10H10.2367C10.0029 10 9.91115 9.719 10.1056 9.59881L12.6327 8.03715C12.7897 7.94013 13 8.04445 13 8.21935ZM3 8.90509V8.21935C3 8.04445 3.21029 7.94013 3.36728 8.03715L5.89437 9.59881C6.08885 9.719 5.99706 10 5.76333 10H4.18119C3.52884 10 3 9.50979 3 8.90509ZM5.11062 3.21988L3.59215 5.75725C3.36562 6.13577 3.57952 6.64711 3.98539 6.69735L4.87067 6.80692C6.95049 7.06436 9.04951 7.06436 11.1293 6.80692L12.0146 6.69735C12.4205 6.64711 12.6344 6.13577 12.4079 5.75725L10.8894 3.21988C10.7898 3.05341 10.6098 2.97037 10.4337 3.00961C8.82714 3.36755 7.17286 3.36755 5.5663 3.00961C5.3902 2.97037 5.21024 3.05341 5.11062 3.21988Z"
            })
        })
    })
}
function dq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M12.75 2.5C12.75 3.32843 12.1904 4.5 11.5 4.5C10.8096 4.5 10.25 3.32843 10.25 2.5C10.25 1.67157 10.8096 1 11.5 1C12.1904 1 12.75 1.67157 12.75 2.5Z"
            }), c.jsx("path", {
                d: "M9.29123 6.41829C9.1022 6.79635 9.0378 7.22458 9.10729 7.64152L9.46267 9.77381C9.48443 9.90433 9.59736 10 9.72968 10C9.87918 10 10.0004 10.1212 10.0004 10.2707V14.6C10.0004 14.8209 10.1795 15 10.4004 15H10.6246C10.8358 15 11.0106 14.8358 11.0238 14.625L11.2348 11.2495C11.2435 11.1093 11.3598 11 11.5004 11C11.6409 11 11.7572 11.1093 11.766 11.2495L11.9769 14.625C11.9901 14.8358 12.1649 15 12.3762 15H12.6004C12.8213 15 13.0004 14.8209 13.0004 14.6V10.2707C13.0004 10.1212 13.1216 10 13.2711 10C13.4034 10 13.5163 9.90433 13.5381 9.77381L13.8935 7.64152C13.9629 7.22458 13.8986 6.79635 13.7095 6.41829L13.2768 5.55279C13.1074 5.214 12.7611 5 12.3823 5H10.6184C10.2396 5 9.89337 5.214 9.72398 5.55279L9.29123 6.41829Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.49998 13.5002C1.22387 13.5047 1 13.2804 1 13.0043V9.08333C1 8.80719 1.22389 8.58397 1.49995 8.5772C2.22864 8.55933 2.95682 8.50238 3.68228 8.40635L4.44109 8.3059C4.78898 8.25985 4.97232 7.79112 4.77816 7.44414L3.47661 5.11822C3.39122 4.96563 3.23697 4.88951 3.08603 4.92548C2.56169 5.05041 2.03142 5.12777 1.49974 5.15757C1.22403 5.17302 1 4.9477 1 4.67156V4.5C1 4.22386 1.22386 4 1.5 4H2.71429C3.25387 4 3.76196 4.27169 4.08571 4.73333L5.28571 6.44444C5.5482 6.81873 5.75379 7.23121 5.89775 7.66667H6.57143C6.80812 7.66667 7 7.87187 7 8.125C7 8.63126 6.61624 9.04167 6.14286 9.04167H6.14048C6.14206 9.09251 6.14286 9.14344 6.14286 9.19444V11.4798C6.14286 11.7658 6.08135 12.0375 5.97126 12.2799V14.2667C5.97126 14.5234 5.97126 14.6517 5.92455 14.7497C5.88346 14.836 5.8179 14.9061 5.73726 14.95C5.64558 15 5.52557 15 5.28555 15H4.94269C4.70267 15 4.58266 15 4.49098 14.95C4.41034 14.9061 4.34478 14.836 4.30369 14.7497C4.25698 14.6517 4.25698 14.5234 4.25698 14.2667V13.3347L3.70491 13.3839C2.97107 13.4493 2.23567 13.4881 1.49998 13.5002ZM5.28571 9.70107V10.3297C5.28571 10.884 4.83243 11.3333 4.27327 11.3333H2.91715C2.7168 11.3333 2.63813 11.0757 2.80483 10.9656L4.9709 9.53405C5.10547 9.44512 5.28571 9.54075 5.28571 9.70107Z"
            })]
        })
    })
}
function uq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M7.5 13.75C7.5 14.4404 6.94036 15 6.25 15C5.55964 15 5 14.4404 5 13.75C5 13.0596 5.55964 12.5 6.25 12.5C6.94036 12.5 7.5 13.0596 7.5 13.75Z"
            }), c.jsx("path", {
                d: "M13.5 13.75C13.5 14.4404 12.9404 15 12.25 15C11.5596 15 11 14.4404 11 13.75C11 13.0596 11.5596 12.5 12.25 12.5C12.9404 12.5 13.5 13.0596 13.5 13.75Z"
            }), c.jsx("path", {
                d: "M1.75012 0.994995C1.33314 0.994995 0.995117 1.33302 0.995117 1.75C0.995117 2.16697 1.33314 2.505 1.75012 2.505H2.61993C3.21076 2.505 3.72022 2.92025 3.83936 3.49894L5.26063 11.4022C5.33288 11.7532 5.64183 12.005 6.00012 12.005H12.5001C12.5297 12.005 12.5588 12.0033 12.5874 12H12.6916C13.1631 12 13.5706 11.6706 13.6694 11.2095L14.9778 6.20953C15.1112 5.58702 14.6366 5 14 5H5.48419L5.31834 3.19444C5.0547 1.91389 3.92734 0.994995 2.61993 0.994995H1.75012Z"
            })]
        })
    })
}
function hq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1 2C1 1.44772 1.44772 1 2 1H14C14.5523 1 15 1.44772 15 2V10C15 10.5523 14.5523 11 14 11H2C1.44772 11 1 10.5523 1 10V2ZM10.9656 3C10.6092 3 10.4308 3.43086 10.6827 3.68284L10.9696 3.96968L9.08285 5.8564C8.99488 5.94437 8.85561 5.95427 8.75608 5.87962L8.08747 5.37817C7.43463 4.88854 6.53004 4.91512 5.90707 5.44224L3.26546 7.67746C2.94925 7.94502 2.90982 8.41825 3.17737 8.73446C3.44493 9.05066 3.91816 9.0901 4.23437 8.82254L6.87599 6.58732C6.96498 6.51202 7.09421 6.50822 7.18747 6.57817L7.85608 7.07962C8.55279 7.60216 9.5277 7.53287 10.1435 6.91706L12.0302 5.03034L12.3171 5.31716C12.569 5.56914 12.9999 5.39068 12.9999 5.03431V3.4C12.9999 3.17909 12.8208 3 12.5999 3H10.9656Z"
            }), c.jsx("path", {
                d: "M7 12V13.5854C6.4174 13.7913 6 14.3469 6 15H10C10 14.3469 9.5826 13.7913 9 13.5854V12H7Z"
            })]
        })
    })
}
function fq(t) {
    const {outline: e, ...n} = t;
    return c.jsx(x, {
        ...n,
        children: c.jsx("svg", {
            children: e ? c.jsx("path", {
                d: "M6.66073 2.50001C5.88619 2.50001 5.58432 2.50224 5.34331 2.53957C3.89769 2.76347 2.76347 3.89769 2.53957 5.34331C2.50224 5.58432 2.50001 5.88619 2.50001 6.66073C2.50001 7.43526 2.50224 7.73713 2.53957 7.97814C2.74167 9.28298 3.68564 10.3345 4.93065 10.6912C5.28594 10.793 5.5141 11.1385 5.46825 11.5052L5.286 12.9633L7.20819 11.0411C7.34884 10.9005 7.5396 10.8214 7.73852 10.8214H9.3393C10.1138 10.8214 10.4157 10.8192 10.6567 10.7819C12.1023 10.558 13.2365 9.42376 13.4605 7.97814C13.4978 7.73713 13.5 7.43526 13.5 6.66073C13.5 5.88619 13.4978 5.58432 13.4605 5.34331C13.2365 3.89769 12.1023 2.76347 10.6567 2.53957C10.4157 2.50224 10.1138 2.50001 9.3393 2.50001H6.66073ZM6.58562 1.00001C6.61032 1.00001 6.63535 1.00001 6.66073 1.00001H9.3393C9.36467 1.00001 9.3897 1.00001 9.4144 1.00001C10.0891 0.99993 10.516 0.999883 10.8863 1.05724C12.9778 1.38119 14.6188 3.02218 14.9428 5.11372C15.0001 5.48406 15.0001 5.91092 15 6.58562C15 6.61032 15 6.63535 15 6.66073C15 6.6861 15 6.71113 15 6.73583C15.0001 7.41053 15.0001 7.8374 14.9428 8.20774C14.6188 10.2993 12.9778 11.9403 10.8863 12.2642C10.516 12.3216 10.0891 12.3215 9.4144 12.3214C9.3897 12.3214 9.36467 12.3214 9.3393 12.3214H8.04918L5.72103 14.6496L5.1907 14.1193L5.72103 14.6496C5.35961 15.011 4.80852 15.1029 4.34937 14.8784C3.89023 14.6538 3.62444 14.1624 3.68784 13.6552L3.90567 11.9125C2.41151 11.257 1.31561 9.87581 1.05724 8.20774C0.999883 7.83739 0.99993 7.41053 1.00001 6.73583C1.00001 6.71113 1.00001 6.6861 1.00001 6.66073C1.00001 6.63535 1.00001 6.61032 1.00001 6.58562C0.99993 5.91092 0.999883 5.48406 1.05724 5.11372C1.38119 3.02218 3.02218 1.38119 5.11372 1.05724C5.48406 0.999883 5.91092 0.99993 6.58562 1.00001Z"
            }) : c.jsx("path", {
                d: "M1.0542 4.89592C1 5.24587 1 5.66392 1 6.5C1 7.33608 1 7.75413 1.0542 8.10408C1.33117 9.89227 2.62465 11.3327 4.33092 11.8217L4.00388 14.438C3.97739 14.6499 4.08846 14.8553 4.28034 14.9492C4.47222 15.043 4.70253 15.0046 4.85357 14.8536L7.70713 12H9.5C10.3361 12 10.7541 12 11.1041 11.9458C13.0849 11.639 14.639 10.0849 14.9458 8.10408C15 7.75413 15 7.33608 15 6.5C15 5.66392 15 5.24587 14.9458 4.89592C14.639 2.91511 13.0849 1.361 11.1041 1.0542C10.7541 1 10.3361 1 9.5 1L6.5 1C5.66392 1 5.24587 1 4.89592 1.0542C2.91511 1.361 1.361 2.91511 1.0542 4.89592Z"
            })
        })
    })
}
function pq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M6 2.5V6.87834C6 6.92334 6 6.94585 5.99527 6.96721C5.99107 6.98617 5.98413 7.00441 5.97468 7.02136C5.96402 7.04047 5.94907 7.05729 5.91917 7.09093L2.64054 10.7794C2.22792 11.2436 2 11.8431 2 12.4641C2 13.8647 3.13535 15 4.53587 15H11.4641C12.8647 15 14 13.8647 14 12.4641C14 11.8431 13.7721 11.2436 13.3595 10.7794L10.0808 7.09093C10.0509 7.05729 10.036 7.04047 10.0253 7.02136C10.0159 7.00441 10.0089 6.98617 10.0047 6.96721C10 6.94585 10 6.92334 10 6.87834V2.5H10.5C10.7761 2.5 11 2.27614 11 2V1.5C11 1.22386 10.7761 1 10.5 1H5.5C5.22386 1 5 1.22386 5 1.5V2C5 2.27614 5.22386 2.5 5.5 2.5H6ZM8.5 2.5H7.5V7L4.80018 10.5998C5.52997 10.2356 6.69163 10 8 10C9.30837 10 10.47 10.2356 11.1998 10.5998L8.5 7V2.5Z"
            })
        })
    })
}
function mq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.76 5.5H7.24C6.63546 5.5 6.27529 5.50124 6.00865 5.52375C5.88006 5.5346 5.81066 5.54816 5.77825 5.55626C5.76601 5.55933 5.75438 5.56431 5.74354 5.57078C5.67256 5.61319 5.61319 5.67256 5.57078 5.74354C5.56431 5.75438 5.55933 5.76601 5.55626 5.77825C5.54816 5.81066 5.5346 5.88006 5.52375 6.00865C5.50124 6.27529 5.5 6.63546 5.5 7.24V8.76C5.5 9.36454 5.50124 9.72471 5.52375 9.99135C5.5346 10.1199 5.54816 10.1893 5.55626 10.2217C5.55933 10.234 5.56431 10.2456 5.57078 10.2565C5.61319 10.3274 5.67256 10.3868 5.74354 10.4292C5.75438 10.4357 5.76601 10.4407 5.77825 10.4437C5.81066 10.4518 5.88006 10.4654 6.00865 10.4763C6.27529 10.4988 6.63546 10.5 7.24 10.5H8.76C9.36454 10.5 9.72471 10.4988 9.99135 10.4763C10.1199 10.4654 10.1893 10.4518 10.2218 10.4437C10.234 10.4407 10.2456 10.4357 10.2565 10.4292C10.3274 10.3868 10.3868 10.3274 10.4292 10.2565C10.4357 10.2456 10.4407 10.234 10.4437 10.2217C10.4518 10.1893 10.4654 10.1199 10.4763 9.99135C10.4988 9.72471 10.5 9.36454 10.5 8.76V7.24C10.5 6.63546 10.4988 6.27529 10.4763 6.00865C10.4654 5.88006 10.4518 5.81066 10.4437 5.77825C10.4407 5.76601 10.4357 5.75438 10.4292 5.74354C10.3868 5.67256 10.3274 5.61319 10.2565 5.57078C10.2456 5.5643 10.234 5.55933 10.2217 5.55626C10.1893 5.54816 10.1199 5.5346 9.99135 5.52375C9.72471 5.50124 9.36454 5.5 8.76 5.5ZM4.23247 5.06414C4 5.5032 4 6.08213 4 7.24V8.76C4 9.91787 4 10.4968 4.23247 10.9359C4.42007 11.2902 4.70983 11.5799 5.06414 11.7675C5.5032 12 6.08213 12 7.24 12H8.76C9.91787 12 10.4968 12 10.9359 11.7675C11.2902 11.5799 11.5799 11.2902 11.7675 10.9359C12 10.4968 12 9.91787 12 8.76V7.24C12 6.08213 12 5.5032 11.7675 5.06414C11.5799 4.70983 11.2902 4.42007 10.9359 4.23247C10.4968 4 9.91787 4 8.76 4H7.24C6.08213 4 5.5032 4 5.06414 4.23247C4.70983 4.42007 4.42007 4.70983 4.23247 5.06414Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14.25 5.75H11.2C11.0895 5.75 11 5.66046 11 5.55V4.45C11 4.33954 11.0895 4.25 11.2 4.25H14.25C14.6642 4.25 15 4.58579 15 5C15 5.41421 14.6642 5.75 14.25 5.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14.25 11.75H11.2C11.0895 11.75 11 11.6605 11 11.55V10.45C11 10.3395 11.0895 10.25 11.2 10.25H14.25C14.6642 10.25 15 10.5858 15 11C15 11.4142 14.6642 11.75 14.25 11.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14.25 8.75H11.2C11.0895 8.75 11 8.66046 11 8.55V7.45C11 7.33954 11.0895 7.25 11.2 7.25H14.25C14.6642 7.25 15 7.58579 15 8C15 8.41421 14.6642 8.75 14.25 8.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M10.25 14.25V11.2C10.25 11.0895 10.3395 11 10.45 11H11.55C11.6605 11 11.75 11.0895 11.75 11.2V14.25C11.75 14.6642 11.4142 15 11 15C10.5858 15 10.25 14.6642 10.25 14.25Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.25 14.25L4.25 11.2C4.25 11.0895 4.33954 11 4.45 11H5.55C5.66046 11 5.75 11.0895 5.75 11.2V14.25C5.75 14.6642 5.41421 15 5 15C4.58579 15 4.25 14.6642 4.25 14.25Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.25 14.25V11.2C7.25 11.0895 7.33954 11 7.45 11H8.55C8.66046 11 8.75 11.0895 8.75 11.2V14.25C8.75 14.6642 8.41421 15 8 15C7.58579 15 7.25 14.6642 7.25 14.25Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.75 1.75L5.75 4.8C5.75 4.91046 5.66046 5 5.55 5H4.45C4.33954 5 4.25 4.91046 4.25 4.8L4.25 1.75C4.25 1.33579 4.58579 1 5 1C5.41421 1 5.75 1.33579 5.75 1.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11.75 1.75L11.75 4.8C11.75 4.91046 11.6605 5 11.55 5H10.45C10.3395 5 10.25 4.91046 10.25 4.8L10.25 1.75C10.25 1.33579 10.5858 1 11 1C11.4142 1 11.75 1.33579 11.75 1.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.75 1.75L8.75 4.8C8.75 4.91046 8.66046 5 8.55 5H7.45C7.33954 5 7.25 4.91046 7.25 4.8L7.25 1.75C7.25 1.33579 7.58579 1 8 1C8.41421 1 8.75 1.33579 8.75 1.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.75 10.25H4.8C4.91046 10.25 5 10.3395 5 10.45V11.55C5 11.6605 4.91046 11.75 4.8 11.75H1.75C1.33579 11.75 1 11.4142 1 11C1 10.5858 1.33579 10.25 1.75 10.25Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.75 4.25L4.8 4.25C4.91046 4.25 5 4.33954 5 4.45V5.55C5 5.66046 4.91046 5.75 4.8 5.75L1.75 5.75C1.33579 5.75 1 5.41421 1 5C1 4.58579 1.33579 4.25 1.75 4.25Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.75 7.25L4.8 7.25C4.91046 7.25 5 7.33954 5 7.45V8.55C5 8.66046 4.91046 8.75 4.8 8.75L1.75 8.75C1.33579 8.75 1 8.41421 1 8C1 7.58579 1.33579 7.25 1.75 7.25Z"
            }), c.jsx("path", {
                d: "M7 7.5C7 7.22386 7.22386 7 7.5 7H8.5C8.77614 7 9 7.22386 9 7.5V8.5C9 8.77614 8.77614 9 8.5 9H7.5C7.22386 9 7 8.77614 7 8.5V7.5Z"
            })]
        })
    })
}
function gq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1 3.25C1 2.00736 2.00736 1 3.25 1H12.75C13.9926 1 15 2.00736 15 3.25V5.75C15 6.50713 14.626 7.17692 14.0527 7.58473C13.9484 7.45926 13.8256 7.34379 13.6842 7.24186L7.62627 2.87427C6.27009 1.89651 4.32816 2.95255 4.51218 4.67664L4.86688 8H3.25C2.00736 8 1 6.99264 1 5.75V3.25Z"
            }), c.jsx("path", {
                d: "M12.8061 8.45806L6.74814 4.09047C6.41819 3.85259 5.95989 4.11479 6.00281 4.5169L6.79077 11.8996C6.82662 12.2354 7.1994 12.4235 7.49452 12.2547L9.32536 11.234L11.6197 14.824C11.7649 15.0047 12.0217 15.0529 12.2235 14.9375L12.7446 14.6393C12.9465 14.5239 13.0327 14.2794 12.9474 14.0644L10.9571 10.3004L12.7645 9.23954C13.0597 9.07069 13.0817 8.65673 12.8061 8.45806Z"
            })]
        })
    })
}
function lh(t) {
    const {outline: e, ...n} = t;
    return c.jsx(x, {
        ...n,
        children: c.jsx("svg", {
            children: e ? c.jsxs(c.Fragment, {
                children: [c.jsx("path", {
                    d: "M8.75 5C8.75 4.58579 8.41421 4.25 8 4.25C7.58579 4.25 7.25 4.58579 7.25 5V8C7.25 8.41421 7.58579 8.75 8 8.75H11C11.4142 8.75 11.75 8.41421 11.75 8C11.75 7.58579 11.4142 7.25 11 7.25H8.75V5Z"
                }), c.jsx("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8ZM13.5 8C13.5 11.0376 11.0376 13.5 8 13.5C4.96243 13.5 2.5 11.0376 2.5 8C2.5 4.96243 4.96243 2.5 8 2.5C11.0376 2.5 13.5 4.96243 13.5 8Z"
                })]
            }) : c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 1C11.866 1 15 4.13401 15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1ZM8 4C7.55786 4 7.25 5.58579 7.25 6V8C7.25 8.41421 7.58579 8.75 8 8.75L8.97545 8.74938C10.0284 8.74341 13 8.67969 13 8C13 7.25 9.16421 7.25 8.75 7.25V6C8.75 5.58579 8.44214 4 8 4Z"
            })
        })
    })
}
function yq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M6.5 3.625C6.5 3.00368 7.00368 2.5 7.625 2.5H8.10389C8.61826 2.5 9.03524 2.91698 9.03524 3.43135V3.5C9.03524 3.91421 9.37103 4.25 9.78524 4.25C10.1995 4.25 10.5352 3.91421 10.5352 3.5V3.43135C10.5352 2.08855 9.44669 1 8.10389 1H7.625C6.17525 1 5 2.17525 5 3.625V3.74979C5 5.04626 5.98679 6.11226 7.25027 6.23766V7.19881C7.12985 7.25594 7.0145 7.32758 6.90678 7.41375L1.72506 11.5591C1.26678 11.9258 1 12.4808 1 13.0677C1 14.1347 1.86496 14.9996 2.93193 14.9996H13.0681C14.135 14.9996 15 14.1347 15 13.0677C15 12.4808 14.7332 11.9258 14.2749 11.5591L9.09322 7.41375C8.98566 7.32771 8.87049 7.25615 8.75027 7.19906V6.00006C8.75027 5.30967 8.1906 4.75 7.50021 4.75C6.94781 4.75 6.5 4.30219 6.5 3.74979V3.625ZM7.84383 8.58506C7.93513 8.51201 8.06487 8.51201 8.15617 8.58506L13.3379 12.7304C13.4404 12.8124 13.5 12.9365 13.5 13.0677C13.5 13.3063 13.3066 13.4996 13.0681 13.4996H2.93193C2.69338 13.4996 2.5 13.3063 2.5 13.0677C2.5 12.9365 2.55965 12.8124 2.66211 12.7304L7.84383 8.58506Z"
            })
        })
    })
}
function Cq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.5 13H4L4.00005 12.9646C2.30388 12.722 1 11.2633 1 9.5C1 7.69485 2.36658 6.20888 4.12162 6.02022C4.55776 4.28481 6.12884 3 8 3C10.1422 3 11.8911 4.68397 11.9951 6.80036L12 7C13.6569 7 15 8.34315 15 10C15 11.6569 13.6569 13 12 13H4.5Z"
            })
        })
    })
}
function bq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M11.5 1a.5.5 0 0 1 .5.5.5.5 0 0 0 .5.5h.5a1 1 0 0 1 1 1v.5a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5V3a1 1 0 0 1 1-1h.5a.5.5 0 0 0 .5-.5.5.5 0 0 1 .5-.5h7Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3.12 5.598A.5.5 0 0 1 3.61 5h8.78a.5.5 0 0 1 .49.598l-1.72 8.598a1 1 0 0 1-.98.804H5.82a1 1 0 0 1-.98-.804L3.12 5.598ZM10 9a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z"
            })]
        })
    })
}
function vq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3.3 7C3.08593 7 2.94074 6.78222 3.02308 6.58462L5.72308 1.18462C5.76966 1.07282 5.87889 1 6 1H10C10.1136 1 10.2175 1.0642 10.2683 1.16584L12.9683 6.56584C13.0681 6.76531 12.923 7 12.7 7H11V8H12.7C12.8657 8 13 8.13431 13 8.3V9.92918C13 9.97575 13.0108 10.0217 13.0317 10.0633L14.9683 13.9367C14.9892 13.9783 15 14.0242 15 14.0708V14.7C15 14.8657 14.8657 15 14.7 15H1.3C1.13431 15 1 14.8657 1 14.7V14.0708C1 14.0242 1.01084 13.9783 1.03167 13.9367L2.96833 10.0633C2.98916 10.0217 3 9.97575 3 9.92918V8.3C3 8.13431 3.13431 8 3.3 8H5V7H3.3ZM4.5 9C4.22386 9 4 9.22386 4 9.5V10C4 10.2761 4.22386 10.5 4.5 10.5H11.5C11.7761 10.5 12 10.2761 12 10V9.5C12 9.22386 11.7761 9 11.5 9H4.5ZM3.14472 13.2106L3.94472 11.6106C3.9786 11.5428 4.04785 11.5 4.12361 11.5H11.8764C11.9521 11.5 12.0214 11.5428 12.0553 11.6106L12.8553 13.2106C12.9218 13.3435 12.8251 13.5 12.6764 13.5H3.32361C3.17493 13.5 3.07823 13.3435 3.14472 13.2106ZM7.25 2.5C6.69772 2.5 6.25 2.94772 6.25 3.5V5C6.25 5.55228 6.69772 6 7.25 6H8.75C9.30228 6 9.75 5.55228 9.75 5V3.5C9.75 2.94772 9.30229 2.5 8.75 2.5H7.25Z"
            })
        })
    })
}
function wq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 1C11.866 1 15 4.13401 15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1ZM6.58579 6.58579C4.91122 9.62527 4.20412 11.2752 4.46447 11.5355C4.85499 11.9261 9.41421 9.41421 9.41421 9.41421C9.41421 9.41421 11.9261 4.85499 11.5355 4.46447C11.2752 4.20412 9.62527 4.91122 6.58579 6.58579ZM8 7.25C8.41421 7.25 8.75 7.58579 8.75 8C8.75 8.41421 8.41421 8.75 8 8.75C7.58579 8.75 7.25 8.41421 7.25 8C7.25 7.58579 7.58579 7.25 8 7.25Z"
            })
        })
    })
}
function kq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3 2.5H13C13.2761 2.5 13.5 2.72386 13.5 3V9C13.5 9.27614 13.2761 9.5 13 9.5H3C2.72386 9.5 2.5 9.27614 2.5 9V3C2.5 2.72386 2.72386 2.5 3 2.5ZM1 3C1 1.89543 1.89543 1 3 1H13C14.1046 1 15 1.89543 15 3V9C15 10.1046 14.1046 11 13 11H3C1.89543 11 1 10.1046 1 9V3ZM7 12H9V13C9 13.2761 9.22386 13.5 9.5 13.5C10.3284 13.5 11 14.1716 11 15H5C5 14.1716 5.67157 13.5 6.5 13.5C6.77614 13.5 7 13.2761 7 13V12Z"
            })
        })
    })
}
function xq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M11.8746 10.6086C11.9366 10.8022 11.7921 11 11.5888 11H4.41086C4.20761 11 4.06314 10.8021 4.12509 10.6086L4.93756 8.06952C4.95082 8.0281 4.98932 8 5.0328 8H10.9669C11.0104 8 11.0489 8.0281 11.0621 8.06952L11.8746 10.6086Z"
            }), c.jsx("path", {
                d: "M9.94287 5C10.0106 5 10.0588 4.93405 10.0381 4.86952L8.86661 1.20857C8.82681 1.08432 8.71133 1 8.58084 1H7.41885C7.28836 1 7.17288 1.08432 7.13309 1.20857L5.96158 4.86952C5.94094 4.93405 5.98908 5 6.05683 5H9.94287Z"
            }), c.jsx("path", {
                d: "M3.99985 12C3.44754 12 2.99985 12.4477 2.99985 13C1.96268 13 1.10989 13.7895 1.00967 14.8003C0.99881 14.9102 1.08939 15 1.19986 15H14.7998C14.9103 15 15.0009 14.9102 14.99 14.8003C14.8898 13.7895 14.037 13 12.9998 13C12.9998 12.4477 12.5522 12 11.9998 12H3.99985Z"
            })]
        })
    })
}
function Dq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M7 2C7 1.44772 7.44772 1 8 1H14C14.5523 1 15 1.44772 15 2V3C15 3.55228 14.5523 4 14 4H8C7.44772 4 7 3.55228 7 3V2Z"
            }), c.jsx("path", {
                d: "M10.25 5H11.75V6.5C11.75 7.74264 10.7426 8.75 9.5 8.75H6.5C6.08579 8.75 5.75 9.08579 5.75 9.5V11H4.25V9.5C4.25 8.25736 5.25736 7.25 6.5 7.25H9.5C9.91421 7.25 10.25 6.91421 10.25 6.5V5Z"
            }), c.jsx("path", {
                d: "M2 12C1.44772 12 1 12.4477 1 13V14C1 14.5523 1.44772 15 2 15H8C8.55229 15 9 14.5523 9 14V13C9 12.4477 8.55229 12 8 12H2Z"
            })]
        })
    })
}
function Sq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1 6.5C1 7.32843 1.67157 8 2.5 8H13.5C14.3284 8 15 7.32843 15 6.5V2.5C15 1.67157 14.3284 1 13.5 1H2.5C1.67157 1 1 1.67157 1 2.5V6.5ZM3.56089 2.5C3.63114 2.5 3.69625 2.53686 3.73239 2.5971L5.89239 6.1971C5.97237 6.33041 5.87635 6.5 5.72089 6.5H4.43808C4.36783 6.5 4.30273 6.46314 4.26658 6.4029L2.5285 3.50609C2.50985 3.47501 2.5 3.43944 2.5 3.4032V2.7C2.5 2.58954 2.58954 2.5 2.7 2.5H3.56089ZM9.72089 6.5C9.87635 6.5 9.97237 6.33041 9.89239 6.1971L7.73239 2.5971C7.69625 2.53686 7.63115 2.5 7.56089 2.5H6.27808C6.12262 2.5 6.0266 2.66959 6.10658 2.8029L8.26658 6.4029C8.30273 6.46314 8.36783 6.5 8.43808 6.5H9.72089ZM13.5 5.59851C13.5 5.56226 13.4901 5.5267 13.4715 5.49561L11.7324 2.5971C11.6962 2.53686 11.6311 2.5 11.5609 2.5H10.2781C10.1226 2.5 10.0266 2.66959 10.1066 2.8029L12.2666 6.4029C12.3027 6.46314 12.3678 6.5 12.4381 6.5H13.3C13.4105 6.5 13.5 6.41046 13.5 6.3V5.59851Z"
            }), c.jsx("path", {
                d: "M4.5 9.5C4.5 9.22386 4.27614 9 4 9H3.5C3.22386 9 3 9.22386 3 9.5V13C3 13.2761 2.76274 13.4896 2.52051 13.6222C2.21034 13.792 2 14.1215 2 14.5C2 14.7761 2.22386 15 2.5 15H5C5.27614 15 5.5 14.7761 5.5 14.5C5.5 14.1215 5.28966 13.792 4.97949 13.6222C4.73726 13.4896 4.5 13.2761 4.5 13V9.5Z"
            }), c.jsx("path", {
                d: "M13 9.5C13 9.22386 12.7761 9 12.5 9H12C11.7239 9 11.5 9.22386 11.5 9.5V13C11.5 13.2761 11.2627 13.4896 11.0205 13.6222C10.7103 13.792 10.5 14.1215 10.5 14.5C10.5 14.7761 10.7239 15 11 15H13.5C13.7761 15 14 14.7761 14 14.5C14 14.1215 13.7897 13.792 13.4795 13.6222C13.2373 13.4896 13 13.2761 13 13V9.5Z"
            })]
        })
    })
}
function _q(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5 7.7083C5 8.79202 5.87944 9.67054 6.96429 9.67054H9.12566L11.8019 11.8766C12.1513 12.1646 12.6786 11.9163 12.6786 11.4638V9.67054H13.0357C14.1206 9.67054 15 8.79202 15 7.7083V3.96223C15 2.87852 14.1206 2 13.0357 2H6.96429C5.87944 2 5 2.87852 5 3.96223V7.7083Z"
            }), c.jsx("path", {
                d: "M8.76663 10.6705H6.96429C5.32814 10.6705 4 9.34529 4 7.7083V4H2.96429C1.87944 4 1 4.87852 1 5.96223V9.7083C1 10.792 1.87944 11.6705 2.96429 11.6705H3.32143V13.4638C3.32143 13.9163 3.84871 14.1646 4.19811 13.8766L6.87434 11.6705H9.03571C9.30499 11.6705 9.56161 11.6164 9.79526 11.5185L8.76663 10.6705Z"
            })]
        })
    })
}
function Iq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.00822 1.92022C8.00822 1.40421 7.6784 0.931464 7.17064 1.00822C5.19418 1.30701 1 2.5751 1 7.95704C1 11.8468 4.13769 15 8.00822 15C11.7104 15 14.7421 12.1151 14.9988 8.46025C15.0183 8.18311 14.7923 7.95711 14.5159 7.95711C13.1335 7.95711 12.0129 6.83089 12.0129 5.4417C12.0129 5.11703 11.7345 4.83738 11.4164 4.89421C11.2711 4.92018 11.1272 4.93863 11.0117 4.93863C9.35294 4.93863 8.00822 3.58724 8.00822 1.92022ZM5 5.75C5 6.16421 4.66421 6.5 4.25 6.5C3.83579 6.5 3.5 6.16421 3.5 5.75C3.5 5.33579 3.83579 5 4.25 5C4.66421 5 5 5.33579 5 5.75ZM11.75 11.5C12.1642 11.5 12.5 11.1642 12.5 10.75C12.5 10.3358 12.1642 10 11.75 10C11.3358 10 11 10.3358 11 10.75C11 11.1642 11.3358 11.5 11.75 11.5ZM9 7.75C9 8.16421 8.66421 8.5 8.25 8.5C7.83579 8.5 7.5 8.16421 7.5 7.75C7.5 7.33579 7.83579 7 8.25 7C8.66421 7 9 7.33579 9 7.75ZM5.75 11.5C6.16421 11.5 6.5 11.1642 6.5 10.75C6.5 10.3358 6.16421 10 5.75 10C5.33579 10 5 10.3358 5 10.75C5 11.1642 5.33579 11.5 5.75 11.5Z"
            })
        })
    })
}
function Eq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15 5.00004V5.50004C15 5.77619 14.7761 6.00004 14.5 6.00004H14V10H13V6.00004H6.85714L7.35714 13H4.64286L5.14286 6.00004H3V6.5C3 6.77614 2.77614 7 2.5 7H1.5C1.22386 7 1 6.77614 1 6.5V4.00004L5.57255 1.03834C5.78432 0.900183 6.05454 0.880558 6.28483 0.986611L15 5.00004ZM11.6547 4.58188L6.58922 2.24918L6.71429 4.00004H7L11.6547 4.58188ZM2.78967 4.00004H5.28571L5.40318 2.35553L2.78967 4.00004Z"
            }), c.jsx("path", {
                d: "M5.03021 15H3V14.5C3 14.2239 3.22386 14 3.5 14H8.5C8.77614 14 9 14.2239 9 14.5V15H6.96979L6.96301 15H5.03699L5.03021 15Z"
            }), c.jsx("path", {
                d: "M13.9172 11H13.0828C13.0298 11 12.9789 11.0211 12.9414 11.0586L12.0586 11.9414C12.0211 11.9789 12 12.0298 12 12.0828V12.8C12 12.9105 12.0895 13 12.2 13H14.8C14.9105 13 15 12.9105 15 12.8V12.0828C15 12.0298 14.9789 11.9789 14.9414 11.9414L14.0586 11.0586C14.0211 11.0211 13.9702 11 13.9172 11Z"
            })]
        })
    })
}
function Aq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M10 3.58C10 3.03881 10 2.76821 9.89803 2.56006C9.80039 2.36076 9.63924 2.19961 9.43994 2.10197C9.23179 2 8.96119 2 8.42 2H7.58C7.03881 2 6.76821 2 6.56006 2.10197C6.36076 2.19961 6.19961 2.36076 6.10197 2.56006C6 2.76821 6 3.03881 6 3.58V5.21C6 5.4806 6 5.61589 5.94901 5.71997C5.9002 5.81962 5.81962 5.9002 5.71997 5.94901C5.61589 6 5.4806 6 5.21 6H3.58C3.03881 6 2.76821 6 2.56006 6.10197C2.36076 6.19961 2.19961 6.36076 2.10197 6.56006C2 6.76821 2 7.03881 2 7.58V8.42C2 8.96119 2 9.23179 2.10197 9.43994C2.19961 9.63924 2.36076 9.80039 2.56006 9.89803C2.76821 10 3.03881 10 3.58 10H5.21C5.4806 10 5.61589 10 5.71997 10.051C5.81962 10.0998 5.9002 10.1804 5.94901 10.28C6 10.3841 6 10.5194 6 10.79V12.42C6 12.9612 6 13.2318 6.10197 13.4399C6.19961 13.6392 6.36076 13.8004 6.56006 13.898C6.76821 14 7.03881 14 7.58 14H8.42C8.96119 14 9.23179 14 9.43994 13.898C9.63924 13.8004 9.80039 13.6392 9.89803 13.4399C10 13.2318 10 12.9612 10 12.42V10.79C10 10.5194 10 10.3841 10.051 10.28C10.0998 10.1804 10.1804 10.0998 10.28 10.051C10.3841 10 10.5194 10 10.79 10H12.42C12.9612 10 13.2318 10 13.4399 9.89803C13.6392 9.80039 13.8004 9.63924 13.898 9.43994C14 9.23179 14 8.96119 14 8.42V7.58C14 7.03881 14 6.76821 13.898 6.56006C13.8004 6.36076 13.6392 6.19961 13.4399 6.10197C13.2318 6 12.9612 6 12.42 6L10.79 6C10.5194 6 10.3841 6 10.28 5.94901C10.1804 5.9002 10.0998 5.81962 10.051 5.71997C10 5.61589 10 5.4806 10 5.21V3.58Z"
            })
        })
    })
}
function jq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M2 14C2 13.4477 2.44772 13 3 13H13C13.5523 13 14 13.4477 14 14C14 14.5523 13.5523 15 13 15H3C2.44772 15 2 14.5523 2 14Z"
            }), c.jsx("path", {
                d: "M8.51114 3.06338C8.47487 2.9675 8.51855 2.86133 8.60048 2.79971C8.8431 2.61725 9 2.32695 9 2C9 1.44772 8.55228 1 8 1C7.44772 1 7 1.44772 7 2C7 2.32695 7.1569 2.61725 7.39952 2.79971C7.48145 2.86133 7.52513 2.9675 7.48886 3.06338L6.11568 6.69414C6.05347 6.85863 5.86375 6.93457 5.70522 6.85845L3.06223 5.5893C2.95752 5.53902 2.91959 5.41041 2.95435 5.29958C2.98401 5.205 3 5.10437 3 5C3 4.44772 2.55228 4 2 4C1.44772 4 1 4.44772 1 5C1 5.55228 1.44772 6 2 6C2.10906 6 2.21348 6.0674 2.23487 6.17435L3 10V11.5C3 11.7761 3.22386 12 3.5 12H12.5C12.7761 12 13 11.7761 13 11.5V10L13.7651 6.17435C13.7865 6.0674 13.8909 6 14 6C14.5523 6 15 5.55228 15 5C15 4.44772 14.5523 4 14 4C13.4477 4 13 4.44772 13 5C13 5.10437 13.016 5.205 13.0456 5.29958C13.0804 5.41041 13.0425 5.53902 12.9378 5.5893L10.2948 6.85845C10.1362 6.93457 9.94653 6.85863 9.88432 6.69414L8.51114 3.06338Z"
            })]
        })
    })
}
function Mq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M13.75 6.75C13.75 8.66518 12.8137 10.3617 11.3738 11.4067C10.8091 11.8165 10.167 12.1261 9.47357 12.3094C9.0949 12.4095 8.70093 12.472 8.29589 12.4925C8.1979 12.4975 8.09923 12.5 8 12.5C7.60305 12.5 7.21549 12.4598 6.84117 12.3832C4.221 11.847 2.25 9.52868 2.25 6.75C2.25 3.57436 4.82436 1 8 1C11.1756 1 13.75 3.57436 13.75 6.75ZM9.00486 3.20097C9.02823 3.08412 9.13083 3 9.25 3C9.36917 3 9.47177 3.08412 9.49515 3.20097L9.96412 5.54584L11.8106 6.00746C11.9219 6.03529 12 6.13528 12 6.25C12 6.36472 11.9219 6.46471 11.8106 6.49254L9.96412 6.95416L9.49515 9.29903C9.47177 9.41588 9.36917 9.5 9.25 9.5C9.13083 9.5 9.02823 9.41588 9.00486 9.29903L8.53588 6.95416L6.68937 6.49254C6.57807 6.46471 6.5 6.36472 6.5 6.25C6.5 6.13528 6.57807 6.03529 6.68937 6.00746L8.53588 5.54584L9.00486 3.20097ZM6.01283 7.67094C6.04686 7.56886 6.14239 7.5 6.25 7.5C6.35761 7.5 6.45314 7.56886 6.48717 7.67094L6.69764 8.30236L7.32905 8.51282C7.43114 8.54684 7.5 8.64238 7.5 8.74998C7.5 8.85759 7.43115 8.95313 7.32906 8.98716L6.69764 9.19764L6.48717 9.82906C6.45314 9.93114 6.35761 10 6.25 10C6.14239 10 6.04686 9.93114 6.01283 9.82906L5.80236 9.19764L5.17094 8.98716C5.06885 8.95313 5 8.85759 5 8.74998C5 8.64238 5.06886 8.54684 5.17095 8.51282L5.80236 8.30236L6.01283 7.67094Z"
            }), c.jsx("path", {
                d: "M4.16974 13.081L4.07054 13.4318C4.02632 13.5882 4.05875 13.7594 4.18304 13.8641C4.30395 13.9659 4.44715 14.0603 4.59281 14.1442C4.83616 14.2844 5.13806 14.4248 5.48243 14.5499C6.16967 14.7995 7.06078 15.0004 8.04098 15.0004C9.03899 15.0004 9.93675 14.7618 10.614 14.4995C11.0836 14.3176 11.4735 14.1139 11.7376 13.9479C11.9033 13.8437 11.9678 13.6421 11.9176 13.453L11.8224 13.095C11.7353 12.7672 11.3533 12.6193 11.0509 12.7728C10.1346 13.2379 9.09791 13.5 8.00003 13.5C6.89794 13.5 5.85753 13.2359 4.93867 12.7675C4.63942 12.6149 4.26113 12.7577 4.16974 13.081Z"
            })]
        })
    })
}
function Tq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.4234 1.07451C8.14973 0.975164 7.85027 0.975165 7.5766 1.07451L1.49596 3.28179C1.19839 3.3898 1 3.67443 1 3.99334V11.2269C1 11.7267 1.29288 12.1793 1.74658 12.3806L7.31364 14.8505C7.74381 15.0413 8.23202 15.0497 8.66837 14.8737L14.2142 12.6369C14.6888 12.4455 15 11.982 15 11.4666V3.99334C15 3.67443 14.8016 3.3898 14.504 3.28179L8.4234 1.07451ZM3.8617 4.03055L8 2.52834L12.1383 4.03055L8 5.69967L3.8617 4.03055ZM8.75 7.02618L13.5 5.11034V11.2959L8.75 13.2118V7.02618ZM7.25 7.02618L2.5 5.11034V11.0624L7.25 13.1698V7.02618Z"
            })
        })
    })
}
function Lq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 3C8.79895 3 9.5979 3.11724 10.3968 3.35173C13.1256 4.15257 15 6.65616 15 9.5V12C15 12.5523 14.5523 13 14 13H2C1.44772 13 1 12.5523 1 12V9.5C1 6.65616 2.8744 4.15257 5.60315 3.35173C6.4021 3.11724 7.20105 3 8 3ZM7.05132 10.6838C6.87667 11.2077 7.15983 11.774 7.68377 11.9487C8.20772 12.1233 8.77404 11.8402 8.94868 11.3162C9.87634 7.58939 10.1655 5.66775 9.81623 5.55132C9.46693 5.43488 8.5453 7.1457 7.05132 10.6838ZM2.75 10C2.33579 10 2 10.3358 2 10.75C2 11.1642 2.33579 11.5 2.75 11.5C3.16421 11.5 3.5 11.1642 3.5 10.75C3.5 10.3358 3.16421 10 2.75 10ZM13.25 10C12.8358 10 12.5 10.3358 12.5 10.75C12.5 11.1642 12.8358 11.5 13.25 11.5C13.6642 11.5 14 11.1642 14 10.75C14 10.3358 13.6642 10 13.25 10ZM3.75 6C3.33579 6 3 6.33579 3 6.75C3 7.16421 3.33579 7.5 3.75 7.5C4.16421 7.5 4.5 7.16421 4.5 6.75C4.5 6.33579 4.16421 6 3.75 6ZM12.25 6C11.8358 6 11.5 6.33579 11.5 6.75C11.5 7.16421 11.8358 7.5 12.25 7.5C12.6642 7.5 13 7.16421 13 6.75C13 6.33579 12.6642 6 12.25 6ZM8 4C7.58579 4 7.25 4.33579 7.25 4.75C7.25 5.16421 7.58579 5.5 8 5.5C8.41421 5.5 8.75 5.16421 8.75 4.75C8.75 4.33579 8.41421 4 8 4Z"
            })
        })
    })
}
function Oq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2 4.5V3.5C2 2.11929 4.68629 1 8 1C11.3137 1 14 2.11929 14 3.5V4.5C14 5.88071 11.3137 7 8 7C4.68629 7 2 5.88071 2 4.5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2 3.5V4.5C2 5.0628 2.44633 5.58217 3.19956 6C3.25478 6.03063 3.31165 6.06072 3.37011 6.09023C4.4706 6.64585 6.13604 7 8 7C9.96298 7 11.7058 6.60722 12.8004 6C13.5537 5.58217 14 5.06281 14 4.5V3.5C14 2.11929 11.3137 1 8 1C4.68629 1 2 2.11929 2 3.5ZM2.0854 7.07731C2.02925 7.21471 2 7.35593 2 7.5V8.5C2 9.06281 2.44633 9.58217 3.19956 10C4.29421 10.6072 6.03702 11 8 11C9.86396 11 11.5294 10.6459 12.6299 10.0902C12.6884 10.0607 12.7452 10.0306 12.8004 10C13.5537 9.58217 14 9.0628 14 8.5V7.5C14 7.35593 13.9707 7.21472 13.9146 7.07732C13.5739 7.30345 13.2012 7.49336 12.8196 7.65238C11.5102 8.19793 9.8054 8.5 8 8.5C6.1946 8.5 4.48976 8.19793 3.18044 7.65238C2.79877 7.49336 2.42614 7.30345 2.0854 7.07731ZM2.0854 11.0773C2.02925 11.2147 2 11.3559 2 11.5V12.5C2 13.8807 4.68629 15 8 15C11.3137 15 14 13.8807 14 12.5V11.5C14 11.3559 13.9707 11.2147 13.9146 11.0773C13.5739 11.3035 13.2012 11.4934 12.8196 11.6524C11.5102 12.1979 9.8054 12.5 8 12.5C6.1946 12.5 4.48976 12.1979 3.18044 11.6524C2.79877 11.4934 2.42614 11.3035 2.0854 11.0773Z"
            })]
        })
    })
}
function Rq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M4.28504 1.3243L14.563 11.6023C14.7583 11.7975 14.7583 12.1141 14.563 12.3094L12.1315 14.7409C11.9363 14.9361 11.6197 14.9361 11.4244 14.7409L9.79971 13.116L10.9659 11.9501L11.0404 11.8648C11.2886 11.5386 11.2638 11.071 10.9659 10.7731C10.6409 10.4481 10.1139 10.4481 9.78891 10.7731L8.62271 11.939L7.57971 10.896L8.74656 9.73074L8.82104 9.64551C9.06931 9.31931 9.04449 8.85169 8.74656 8.55377C8.42155 8.22875 7.8946 8.22875 7.56958 8.55377L6.40271 9.719L5.36071 8.677L6.52723 7.51142L6.60172 7.42619C6.84999 7.09998 6.82516 6.63237 6.52723 6.33444C6.20222 6.00943 5.67527 6.00943 5.35026 6.33444L4.18371 7.5L3.14171 6.458L4.30791 5.29209L4.38239 5.20687C4.63067 4.88066 4.60584 4.41305 4.30791 4.11512C3.9829 3.79011 3.45595 3.79011 3.13094 4.11512L1.96471 5.281L1.14645 4.4629C0.951184 4.26764 0.951184 3.95105 1.14645 3.75579L3.57794 1.3243C3.7732 1.12904 4.08978 1.12904 4.28504 1.3243ZM4.09282 9.763L6.49782 12.168L5.19241 13.5121C4.5533 14.1511 1.94514 14.8739 1.48476 14.7499L1.43869 14.73C1.1636 14.5333 2.21596 11.8068 2.88876 11.0107L2.96461 10.9277L4.09282 9.763ZM14.5234 1.49924C15.15 2.12574 15.1868 3.11859 14.634 3.78819L14.5234 3.90978L11.9108 6.597L9.50182 4.189L12.1126 1.49924C12.7783 0.833587 13.8577 0.833587 14.5234 1.49924Z"
            })
        })
    })
}
function Pq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.12109 2H11.8789C12.2743 1.99999 12.6154 1.99998 12.8963 2.02293C13.1928 2.04715 13.4877 2.10064 13.7715 2.24524C14.1948 2.46095 14.5391 2.80516 14.7548 3.22852C14.8994 3.51231 14.9528 3.80722 14.9771 4.10373C15 4.38466 15 4.72572 15 5.12108V10.8789C15 11.2743 15 11.6153 14.9771 11.8963C14.9528 12.1928 14.8994 12.4877 14.7548 12.7715C14.5391 13.1948 14.1948 13.5391 13.7715 13.7548C13.4877 13.8994 13.1928 13.9528 12.8963 13.9771C12.6153 14 12.2743 14 11.8789 14H4.12108C3.72572 14 3.38466 14 3.10373 13.9771C2.80722 13.9528 2.51231 13.8994 2.22852 13.7548C1.80516 13.5391 1.46095 13.1948 1.24524 12.7715C1.10064 12.4877 1.04715 12.1928 1.02293 11.8963C0.999977 11.6154 0.999988 11.2743 1 10.8789V5.12106C0.999988 4.72572 0.999977 4.38465 1.02293 4.10373C1.04715 3.80722 1.10064 3.51231 1.24524 3.22852C1.46095 2.80516 1.80516 2.46095 2.22852 2.24524C2.51231 2.10064 2.80722 2.04715 3.10373 2.02293C3.38465 1.99998 3.72574 1.99999 4.12109 2ZM2.5 10.85V7H13.5V10.85C13.5 11.2824 13.4994 11.5616 13.4821 11.7741C13.4654 11.9779 13.4372 12.0534 13.4183 12.0905C13.3464 12.2316 13.2316 12.3464 13.0905 12.4183C13.0534 12.4372 12.9779 12.4654 12.7741 12.4821C12.5616 12.4994 12.2824 12.5 11.85 12.5H4.15C3.71759 12.5 3.43838 12.4994 3.22588 12.4821C3.02213 12.4654 2.94659 12.4372 2.90951 12.4183C2.76839 12.3464 2.65365 12.2316 2.58175 12.0905C2.56285 12.0534 2.53459 11.9779 2.51795 11.7741C2.50059 11.5616 2.5 11.2824 2.5 10.85ZM3.25 5C3.66421 5 4 4.66421 4 4.25C4 3.83579 3.66421 3.5 3.25 3.5C2.83579 3.5 2.5 3.83579 2.5 4.25C2.5 4.66421 2.83579 5 3.25 5ZM6.5 4.25C6.5 4.66421 6.16421 5 5.75 5C5.33579 5 5 4.66421 5 4.25C5 3.83579 5.33579 3.5 5.75 3.5C6.16421 3.5 6.5 3.83579 6.5 4.25ZM8.25 5C8.66421 5 9 4.66421 9 4.25C9 3.83579 8.66421 3.5 8.25 3.5C7.83579 3.5 7.5 3.83579 7.5 4.25C7.5 4.66421 7.83579 5 8.25 5Z"
            })
        })
    })
}
function $q(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1 4.2C1 3.0799 1 2.51984 1.21799 2.09202C1.40973 1.71569 1.71569 1.40973 2.09202 1.21799C2.51984 1 3.0799 1 4.2 1H11.8C12.9201 1 13.4802 1 13.908 1.21799C14.2843 1.40973 14.5903 1.71569 14.782 2.09202C15 2.51984 15 3.0799 15 4.2V11.8C15 12.9201 15 13.4802 14.782 13.908C14.5903 14.2843 14.2843 14.5903 13.908 14.782C13.4802 15 12.9201 15 11.8 15H4.2C3.0799 15 2.51984 15 2.09202 14.782C1.71569 14.5903 1.40973 14.2843 1.21799 13.908C1 13.4802 1 12.9201 1 11.8V4.2ZM6 4C6 4.55228 5.55228 5 5 5C4.44772 5 4 4.55228 4 4C4 3.44772 4.44772 3 5 3C5.55228 3 6 3.44772 6 4ZM5 9C5.55228 9 6 8.55228 6 8C6 7.44772 5.55228 7 5 7C4.44772 7 4 7.44772 4 8C4 8.55228 4.44772 9 5 9ZM6 12C6 12.5523 5.55228 13 5 13C4.44772 13 4 12.5523 4 12C4 11.4477 4.44772 11 5 11C5.55228 11 6 11.4477 6 12ZM11 5C11.5523 5 12 4.55228 12 4C12 3.44772 11.5523 3 11 3C10.4477 3 10 3.44772 10 4C10 4.55228 10.4477 5 11 5ZM12 8C12 8.55228 11.5523 9 11 9C10.4477 9 10 8.55228 10 8C10 7.44772 10.4477 7 11 7C11.5523 7 12 7.44772 12 8ZM11 13C11.5523 13 12 12.5523 12 12C12 11.4477 11.5523 11 11 11C10.4477 11 10 11.4477 10 12C10 12.5523 10.4477 13 11 13Z"
            })
        })
    })
}
function Fq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M11.5026 1.44888C11.5282 1.19675 11.7411 1 12 1H13C13.2761 1 13.5 1.22386 13.5 1.5V2.5H14.5C14.7761 2.5 15 2.72386 15 3V3.5C15 3.77614 14.7761 4 14.5 4H13V14.5C13 14.7761 12.7761 15 12.5 15H12C11.7239 15 11.5 14.7761 11.5 14.5V12.5H10.5V14.5C10.5 14.7761 10.2761 15 10 15H9.5C9.22386 15 9 14.7761 9 14.5V12.5H8V14.5C8 14.7761 7.77614 15 7.5 15H7C6.72386 15 6.5 14.7761 6.5 14.5V12.5H5.5V14.5C5.5 14.7761 5.27614 15 5 15H1.5C1.22386 15 1 14.7761 1 14.5V12.5C1 12.2239 1.22386 12 1.5 12H2C2.27614 12 2.5 12.2239 2.5 12.5V13.5H4V11.5C4 11.2239 4.22386 11 4.5 11H5.5V10C5.5 9.72386 5.72386 9.5 6 9.5H7V8.5C7 8.22386 7.22386 8 7.5 8H11.5V1.5C11.5 1.48274 11.5009 1.46569 11.5026 1.44888Z"
            })
        })
    })
}
function Nq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M12.75 1.73999C12.75 1.32578 12.4142 0.98999 12 0.98999C11.5858 0.98999 11.25 1.32578 11.25 1.73999C11.25 1.8144 11.2487 1.89111 11.2462 1.96984C11.2411 2.12764 11.1095 2.25 10.9516 2.25H5.04834C4.8961 2.25 4.76669 2.13601 4.75742 1.98405C4.7525 1.90334 4.75 1.8252 4.75 1.74999C4.75 1.33578 4.41421 0.99999 4 0.99999C3.58579 0.99999 3.25 1.33578 3.25 1.74999C3.25 3.24513 3.94997 5.37028 5.01686 6.85758C5.2583 7.19415 5.72687 7.27127 6.06344 7.02984C6.2441 6.90025 6.35 6.70522 6.37202 6.50029C6.38578 6.37225 6.48 6.25 6.60878 6.25H9.29034C9.54114 6.25 9.67362 6.53501 9.48237 6.69725C9.06275 7.0532 8.57147 7.24999 8 7.24999L7.99636 7.25C6.08605 7.25166 4.88426 8.5636 4.20016 9.97433C3.51518 11.3869 3.25 13.0689 3.25 14.26C3.25 14.6742 3.58579 15.01 4 15.01C4.41421 15.01 4.75 14.6742 4.75 14.26C4.75 14.2545 4.75449 14.25 4.76002 14.25L10.95 14.25C11.1157 14.25 11.2444 14.3895 11.309 14.5421C11.4229 14.8112 11.6894 15 12 15C12.4142 15 12.75 14.6642 12.75 14.25C12.75 12.7549 12.05 10.6297 10.9831 9.14242C10.7417 8.80585 10.2731 8.72873 9.93656 8.97016C9.59999 9.2116 9.52286 9.68017 9.7643 10.0167C9.83514 10.1155 9.76278 10.25 9.64124 10.25L6.27374 10.25C6.04216 10.25 5.9001 9.9993 6.0398 9.81461C6.55019 9.13984 7.19566 8.75 8 8.75L8.00364 8.74999C9.91395 8.74833 11.1157 7.4364 11.7998 6.02566C12.4848 4.61313 12.75 2.93107 12.75 1.73999ZM5.34798 11.75C5.21483 11.75 5.09711 11.8376 5.06291 11.9663C5.02456 12.1106 4.98999 12.2552 4.95907 12.3991C4.91987 12.5815 5.06148 12.75 5.24802 12.75L10.6304 12.75C10.8277 12.75 10.9712 12.5628 10.9117 12.3746C10.8662 12.2306 10.8164 12.0855 10.7626 11.9404C10.7198 11.825 10.6088 11.75 10.4857 11.75L5.34798 11.75ZM5.26822 4.14145C5.19529 3.9503 5.33968 3.75 5.54428 3.75H10.6301C10.8232 3.75 10.9662 3.92982 10.9148 4.11591C10.8744 4.26224 10.8301 4.40802 10.7817 4.55219C10.7416 4.67155 10.6286 4.75 10.5027 4.75H5.71656C5.59986 4.75 5.49336 4.6825 5.44637 4.57568C5.38314 4.43192 5.32368 4.28682 5.26822 4.14145Z"
            })
        })
    })
}
function Vq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M10 8C10 9.10457 9.10457 10 8 10C6.89543 10 6 9.10457 6 8C6 6.89543 6.89543 6 8 6C9.10457 6 10 6.89543 10 8Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1 4.25C1 3.55964 1.55964 3 2.25 3H13.75C14.4404 3 15 3.55964 15 4.25V11.75C15 12.4404 14.4404 13 13.75 13H2.25C1.55964 13 1 12.4404 1 11.75V4.25ZM2.5 9.03023V6.96977C3.35337 6.81302 4 6.06536 4 5.16667V4.5H12V5.16667C12 6.06536 12.6466 6.81302 13.5 6.96977V9.03023C12.6466 9.18698 12 9.93464 12 10.8333V11.5H4V10.8333C4 9.93464 3.35337 9.18698 2.5 9.03023Z"
            })]
        })
    })
}
function Bq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M11.7959 10.1476C11.7959 11.6563 10.7901 12.7165 9.526 13.1379V14C9.526 14.5523 9.07828 15 8.526 15H8.18813C7.63585 15 7.18813 14.5523 7.18813 14V13.1922C6.29104 12.9204 5.44833 12.3087 4.7959 11.2893L6.33182 9.86214C6.84833 10.7049 7.50075 11.1806 8.18036 11.1806C8.91434 11.1806 9.41726 10.8408 9.41726 10.1204C9.41726 8.65243 5.12211 9.4 5.12211 5.93398C5.12211 4.45243 6.03279 3.41942 7.18813 2.98447V2C7.18813 1.44772 7.63585 1 8.18813 1H8.526C9.07828 1 9.526 1.44772 9.526 2V2.9301C10.3551 3.20194 11.1299 3.81359 11.7415 4.81942L10.2056 6.2466C9.82502 5.40388 9.14541 4.90097 8.53376 4.90097C7.89493 4.90097 7.40561 5.22718 7.40561 5.92039C7.40561 7.36117 11.7959 6.74951 11.7959 10.1476Z"
            })
        })
    })
}
function Uq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M3 3C2.44771 3 2 3.44772 2 4V6C1.44771 6 1 6.44772 1 7V9C1 9.55228 1.44771 10 2 10V12C2 12.5523 2.44771 13 3 13H4C4.55229 13 5 12.5523 5 12V4C5 3.44772 4.55229 3 4 3H3Z"
            }), c.jsx("path", {
                d: "M12 3C11.4477 3 11 3.44772 11 4V12C11 12.5523 11.4477 13 12 13H13C13.5523 13 14 12.5523 14 12V10C14.5523 10 15 9.55228 15 9V7C15 6.44772 14.5523 6 14 6V4C14 3.44772 13.5523 3 13 3H12Z"
            }), c.jsx("path", {
                d: "M10 7H6V9H10V7Z"
            })]
        })
    })
}
function Hq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.73795 1.07417C7.89865 0.975276 8.10135 0.975276 8.26205 1.07417L14.762 5.07417C14.9099 5.16517 15 5.32637 15 5.5C15 5.52422 14.9982 5.54819 14.9948 5.57176C14.9982 5.60079 15 5.63033 15 5.66028V9.25C15 9.66421 14.6642 10 14.25 10C13.8358 10 13.5 9.66421 13.5 9.25V6.70247L8.26205 9.92583C8.10135 10.0247 7.89865 10.0247 7.73795 9.92583L1.23795 5.92583C1.09008 5.83483 1 5.67363 1 5.5C1 5.32637 1.09008 5.16517 1.23795 5.07417L7.73795 1.07417ZM4.21126 9.05243C4.34132 8.97532 4.49914 8.98377 4.62188 9.07441L7.5 11C7.63436 11.0992 8.36564 11.0992 8.5 11L11.3781 9.07441C11.5009 8.98377 11.6587 8.97532 11.7887 9.05243C11.9188 9.12953 12 9.27966 12 9.44306V11.8799C12 11.9374 11.9899 11.9944 11.9702 12.0477C10.5164 15.9841 5.48364 15.9841 4.02978 12.0477C4.01012 11.9944 4 11.9374 4 11.8799V9.44306C4 9.27966 4.08119 9.12953 4.21126 9.05243Z"
            })
        })
    })
}
function zq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5.75 1C5.33579 1 5 1.33579 5 1.75V5H3.5C3.22386 5 3 5.22386 3 5.5V6C3 6.27614 3.22386 6.5 3.5 6.5H4V9C4 10.1046 4.89543 11 6 11H10C11.1046 11 12 10.1046 12 9V6.5H12.5C12.7761 6.5 13 6.27614 13 6V5.5C13 5.22386 12.7761 5 12.5 5H11V1.75C11 1.33579 10.6642 1 10.25 1C9.83579 1 9.5 1.33579 9.5 1.75V5H6.5V1.75C6.5 1.33579 6.16421 1 5.75 1Z"
            }), c.jsx("path", {
                d: "M13.2321 13.4391C13.3986 13.0229 13.8017 12.75 14.25 12.75C14.6642 12.75 15 12.4142 15 12C15 11.5858 14.6642 11.25 14.25 11.25C13.1884 11.25 12.2337 11.8963 11.8394 12.8821L11.8036 12.9715C11.6156 13.4417 11.1601 13.75 10.6537 13.75H10.3852C9.48209 13.75 8.75 13.0179 8.75 12.1148V12H7.25V12.1148C7.25 13.8463 8.65366 15.25 10.3852 15.25H10.6537C11.7735 15.25 12.7805 14.5682 13.1964 13.5285L13.2321 13.4391Z"
            })]
        })
    })
}
function Zq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.80502 1.67663C8.48844 0.993208 9.59647 0.993208 10.2799 1.67663L13.1098 4.50651C13.7922 5.18893 13.7933 6.295 13.1123 6.97883L10.2896 9.81328L7.99771 12.0125C7.67183 12.3252 7.23768 12.4998 6.78604 12.4998L4.62305 12.4998C4.217 12.4998 3.82358 12.3586 3.5102 12.1004L1.63716 10.5571C0.839998 9.90023 0.782195 8.69945 1.51258 7.96906L7.80502 1.67663ZM9.21923 2.73729C9.1216 2.63965 8.96331 2.63965 8.86568 2.73729L6.30148 5.30148L9.49022 8.49022L12.0495 5.92036C12.1468 5.82267 12.1466 5.66466 12.0491 5.56717L9.21923 2.73729Z"
            }), c.jsx("path", {
                d: "M1.5 13.5C1.22386 13.5 1 13.7239 1 14V14.5C1 14.7761 1.22386 15 1.5 15H14.5C14.7761 15 15 14.7761 15 14.5V14C15 13.7239 14.7761 13.5 14.5 13.5H1.5Z"
            })]
        })
    })
}
function qq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M7.74826 11.353L3.02473 8.5976C2.82997 8.48399 2.62537 8.72932 2.7721 8.90051L7.92427 14.9114C7.96418 14.9579 8.03621 14.9579 8.07612 14.9114L13.2283 8.90051C13.375 8.72932 13.1704 8.48399 12.9757 8.5976L8.25213 11.353C8.09645 11.4438 7.90394 11.4438 7.74826 11.353Z"
            }), c.jsx("path", {
                d: "M3.10857 6.53766L7.85031 1.16964C7.92992 1.07952 8.07049 1.07952 8.1501 1.16964L12.8918 6.53765C13.1022 6.77582 13.04 7.14726 12.7634 7.3038L8.24651 9.86054C8.0937 9.94703 7.90671 9.94703 7.75391 9.86054L3.23701 7.3038C2.96045 7.14726 2.89818 6.77583 3.10857 6.53766Z"
            })]
        })
    })
}
function Wq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M7.00362 4.31206C6.8218 4.5848 6.65801 4.89436 6.51802 5.23475C6.46538 5.36276 6.56182 5.5 6.70023 5.5H8.5C8.77614 5.5 9 5.72386 9 6V7C9 7.27614 8.77614 7.5 8.5 7.5H6.20338C6.09772 7.5 6.01002 7.58219 6.00597 7.68777C6.00201 7.79087 6 7.89497 6 8C6 8.10503 6.00201 8.20913 6.00597 8.31223C6.01002 8.41781 6.09772 8.5 6.20338 8.5H8.5C8.77614 8.5 9 8.72386 9 9V10C9 10.2761 8.77614 10.5 8.5 10.5H6.70023C6.56182 10.5 6.46538 10.6372 6.51802 10.7652C6.65801 11.1056 6.8218 11.4152 7.00362 11.6879C7.60829 12.5949 8.33381 13 9 13C9.61676 13 10.2892 12.6493 10.8625 11.8788C11.0273 11.6572 11.3311 11.5751 11.5691 11.7152L12.4309 12.2223C12.6689 12.3623 12.75 12.6702 12.5924 12.8969C11.7455 14.1146 10.5023 15 9 15C7.45705 15 6.18257 14.0619 5.33952 12.7973C4.9228 12.1723 4.59209 11.4439 4.36352 10.6478C4.33855 10.5608 4.25956 10.5 4.16908 10.5H3.5C3.22386 10.5 3 10.2761 3 10V9C3 8.72386 3.22386 8.5 3.5 8.5H3.80219C3.91654 8.5 4.00742 8.40431 4.00414 8.29001C4.00139 8.19373 4 8.09705 4 8C4 7.90295 4.00139 7.80627 4.00414 7.70999C4.00742 7.59569 3.91654 7.5 3.80219 7.5H3.5C3.22386 7.5 3 7.27614 3 7V6C3 5.72386 3.22386 5.5 3.5 5.5H4.16908C4.25956 5.5 4.33855 5.43917 4.36352 5.35219C4.59209 4.55612 4.9228 3.82774 5.33952 3.20266C6.18257 1.93809 7.45705 1 9 1C10.5023 1 11.7455 1.88537 12.5924 3.10308C12.75 3.32979 12.6689 3.63766 12.4309 3.7777L11.5691 4.28483C11.3311 4.42487 11.0273 4.34276 10.8625 4.12121C10.2892 3.35073 9.61676 3 9 3C8.33381 3 7.60829 3.40506 7.00362 4.31206Z"
            })
        })
    })
}
function Gq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M13.2801 3.40409L11.6582 3.01623C11.4859 2.97502 11.3038 3.01338 11.1641 3.1203L8.72642 4.98581C8.50795 5.153 8.44136 5.4483 8.56765 5.6899L9.05518 6.62266C9.12793 6.76183 9.39513 6.72964 9.61797 6.70279C9.69835 6.69311 9.77296 6.68412 9.83059 6.68412L10.2105 6.3987L11.1641 5.47822L11.875 5.99844H11.9169V6.36475C11.9169 6.45442 11.9387 6.54282 11.9804 6.62266L12.1344 6.9174L10.9635 7.19743H9.0831C8.99498 7.19743 8.90801 7.21711 8.82884 7.25498L6.8787 8.18774C6.68001 8.28277 6.55402 8.48025 6.55402 8.69663V8.89452C6.55402 9.15264 6.87353 9.25237 7.12855 9.29234L7.17454 9.29955L6.77878 9.99569H6.15789C5.83815 9.99569 5.57895 10.2493 5.57895 10.5621V11.4335C5.57895 11.7464 5.83815 12 6.15789 12H7.23692C7.42836 12 7.60741 11.9074 7.71526 11.7527L9.04147 10.9278L9.19579 10.7802L10.779 11.5374C10.999 11.6426 11.2629 11.6011 11.438 11.4335L11.9255 10.9672C11.9535 10.9404 11.9784 10.9112 12 10.88L12.5786 11.4335C12.6868 11.537 12.8321 11.595 12.9834 11.595H14.0076C12.7843 13.6348 10.5516 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C10.1071 1 11.9968 1.931 13.2801 3.40409ZM5.57895 3C5.2592 3 5 3.25361 5 3.56645V4.45658C5 4.55688 5.02722 4.65537 5.07886 4.742L5.24296 5.01723L5.02316 5.75457C5.0078 5.80609 5 5.8595 5 5.91317V6.3987C5 6.71154 5.2592 6.96515 5.57895 6.96515H6.15789C6.36381 6.96515 6.55422 6.85814 6.65798 6.68412L7.23692 5.71306C7.34208 5.53669 7.34208 5.3186 7.23692 5.14222L6.6902 4.22521L6.42011 3.3947C6.34367 3.15964 6.12054 3 5.86842 3H5.57895Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 14.5C11.5899 14.5 14.5 11.5899 14.5 8C14.5 4.41015 11.5899 1.5 8 1.5C4.41015 1.5 1.5 4.41015 1.5 8C1.5 11.5899 4.41015 14.5 8 14.5ZM8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15Z"
            })]
        })
    })
}
function Kq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M6.5 3.50947C4.82189 3.63713 3.5 5.03919 3.5 6.75V12.75C3.5 13.1642 3.16421 13.5 2.75 13.5C2.33579 13.5 2 13.1642 2 12.75V6.75C2 4.18209 4.03771 2.09011 6.58435 2.00283C6.78947 1.41876 7.34583 1 8 1C8.80422 1 9.46062 1.6329 9.49829 2.4278L13.1746 1.04115C13.5699 0.892032 14 1.16659 14 1.5681V4.4319C14 4.83341 13.5699 5.10797 13.1746 4.95885L9.5 3.57284V4.40135C10.3967 4.92006 11 5.88958 11 7V10.5H5V7C5 5.88958 5.6033 4.92006 6.5 4.40135V3.50947Z"
            }), c.jsx("path", {
                d: "M5 14.5V13H11V14.5C11 14.7761 10.7761 15 10.5 15H5.5C5.22386 15 5 14.7761 5 14.5Z"
            })]
        })
    })
}
function Yq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13403 11.866 1 8 1C4.134 1 1 4.13403 1 8C1 11.866 4.134 15 8 15ZM10 5C9.44772 5 9 5.44769 9 6V6.5C9 6.77612 9.22385 7 9.5 7H10.5C10.7762 7 11 6.77612 11 6.5V6C11 5.44769 10.5523 5 10 5ZM5 6C5 5.44769 5.44772 5 6 5C6.55228 5 7 5.44769 7 6V6.5C7 6.77612 6.77615 7 6.5 7H5.5C5.22385 7 5 6.77612 5 6.5V6ZM4.75 9.25C4.33578 9.25 4 9.58582 4 10C4 10.4142 4.33578 10.75 4.75 10.75H11.25C11.6642 10.75 12 10.4142 12 10C12 9.58582 11.6642 9.25 11.25 9.25H4.75Z"
            })
        })
    })
}
function Qq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13403 11.866 1 8 1C4.134 1 1 4.13403 1 8C1 11.866 4.134 15 8 15ZM6.00616 10.4218C6 10.4606 6 10.5071 6 10.6V11C6 12.1046 6.89542 13 8 13C9.10458 13 10 12.1046 10 11V10.6C10 10.5457 10 10.5072 9.99878 10.4769C9.99789 10.4553 9.9964 10.4379 9.99384 10.4218C9.95996 10.2078 9.79218 10.04 9.57822 10.0062C9.53934 10 9.49289 10 9.39999 10H6.60001C6.50711 10 6.46066 10 6.42178 10.0062C6.20782 10.04 6.04004 10.2078 6.00616 10.4218ZM2.73361 5.22803C2.03061 5.61176 1.79114 6.46393 2.1987 7.13141C2.87939 8.24615 4.82321 8.78107 5.79538 8.98492C6.12732 9.0545 6.45087 8.87787 6.5531 8.57129C6.85251 7.67334 7.33447 5.81421 6.65378 4.69946C6.24619 4.03198 5.34589 3.802 4.64291 4.18573C4.35153 4.34479 4.29364 4.80981 4.24646 5.18866C4.23209 5.30414 4.21872 5.41162 4.20001 5.5C4.16946 5.49023 4.13693 5.479 4.10278 5.46674C4.0488 5.44727 3.99069 5.42523 3.92969 5.4021C3.54129 5.25464 3.03619 5.06287 2.73361 5.22803ZM13.8013 7.13141C14.2089 6.46393 13.9694 5.61176 13.2664 5.22803C12.9638 5.06287 12.4587 5.25464 12.0703 5.4021C11.9707 5.43988 11.8788 5.47479 11.8 5.5C11.7813 5.41162 11.7679 5.30414 11.7535 5.18866C11.7064 4.80981 11.6485 4.34479 11.3571 4.18573C10.6541 3.802 9.75381 4.03198 9.34622 4.69946C8.66553 5.81421 9.14749 7.67334 9.4469 8.57129C9.54913 8.87787 9.87268 9.0545 10.2046 8.98492C11.1768 8.78107 13.1206 8.24615 13.8013 7.13141Z"
            })
        })
    })
}
function Xq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15ZM5.67098 8.66451C5.48574 8.29403 5.03524 8.14386 4.66475 8.3291C4.29427 8.51434 4.1441 8.96485 4.32934 9.33533C4.59331 9.86326 5.65516 11.2499 8.00016 11.2499C10.3452 11.2499 11.407 9.86326 11.671 9.33533C11.8562 8.96485 11.7061 8.51434 11.3356 8.3291C10.9651 8.14386 10.5146 8.29403 10.3293 8.66451C10.26 8.80325 9.65516 9.74992 8.00016 9.74992C6.34516 9.74992 5.74035 8.80325 5.67098 8.66451ZM5 6C5 5.44772 5.44772 5 6 5C6.55228 5 7 5.44772 7 6V6.5C7 6.77614 6.77614 7 6.5 7H5.5C5.22386 7 5 6.77614 5 6.5V6ZM10 5C9.44771 5 9 5.44772 9 6V6.5C9 6.77614 9.22386 7 9.5 7H10.5C10.7761 7 11 6.77614 11 6.5V6C11 5.44772 10.5523 5 10 5Z"
            })
        })
    })
}
function Jq(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M4.729 9.086A1.687 1.687 0 0 1 6.306 8c.173 0 .341.053.483.152l.638.447a1 1 0 0 0 1.146 0l.638-.447c.142-.099.31-.152.483-.152.7 0 1.328.432 1.577 1.086l.212.558A1 1 0 0 1 10.55 11H5.45a1 1 0 0 1-.934-1.356l.212-.558ZM9 5.5C9 6.328 8.552 7 8 7s-1-.672-1-1.5S7.448 4 8 4s1 .672 1 1.5ZM5.5 1a.5.5 0 0 1 0 1h-2A1.5 1.5 0 0 0 2 3.5v2a.5.5 0 0 1-1 0v-2A2.5 2.5 0 0 1 3.5 1h2ZM10.5 1a.5.5 0 0 0 0 1h2A1.5 1.5 0 0 1 14 3.5v2a.5.5 0 0 0 1 0v-2A2.5 2.5 0 0 0 12.5 1h-2ZM3.5 14h2a.5.5 0 0 1 0 1h-2A2.5 2.5 0 0 1 1 12.5v-2a.5.5 0 0 1 1 0v2A1.5 1.5 0 0 0 3.5 14ZM10.5 15a.5.5 0 0 1 0-1h2a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 1 1 0v2a2.5 2.5 0 0 1-2.5 2.5h-2Z"
            })
        })
    })
}
function eW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M13.7453 12C12.4803 13.8135 10.3788 15 8 15C5.62125 15 3.51965 13.8135 2.2547 12H4V12.0961C4 12.2958 4.14722 12.4649 4.34497 12.4924L5.93646 12.7134C7.30557 12.9036 8.6944 12.9036 10.0635 12.7134L11.655 12.4924C11.8528 12.4649 12 12.2958 12 12.0961V12H13.7453Z"
            }), c.jsx("path", {
                d: "M4 11H1.67365C1.2417 10.0908 1 9.07361 1 8C1 7.96527 1.00024 7.9306 1.00076 7.896L4 8.98657V11Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 1C4.52048 1 1.63391 3.5387 1.09155 6.86487L4.37778 8.05988C4.38528 8.05951 4.39285 8.05927 4.40048 8.05933L4.40976 8.05945C4.42471 8.05988 4.43982 8.0611 4.45502 8.06317L5.93646 8.26898C7.3056 8.45911 8.69443 8.45911 10.0635 8.26898L11.545 8.06317C11.5711 8.05957 11.597 8.05853 11.6222 8.05988L14.9084 6.86487C14.3661 3.5387 11.4795 1 8 1ZM10 5C9.44772 5 9 5.44769 9 6V6.5C9 6.77612 9.22385 7 9.5 7H10.5C10.7762 7 11 6.77612 11 6.5V6C11 5.44769 10.5523 5 10 5ZM5 6C5 5.44769 5.44772 5 6 5C6.55228 5 7 5.44769 7 6V6.5C7 6.77612 6.77615 7 6.5 7H5.5C5.22385 7 5 6.77612 5 6.5V6Z"
            }), c.jsx("path", {
                d: "M14.3264 11C14.7583 10.0908 15 9.07361 15 8C15 7.96527 14.9998 7.9306 14.9992 7.896L12 8.98657V11H14.3264Z"
            }), c.jsx("path", {
                d: "M5.44418 9.04938C5.20721 9.02301 5 9.2085 5 9.4469V11.3087C5 11.5125 5.15326 11.6837 5.35583 11.7062L6.34354 11.8159C7.44446 11.9383 8.55554 11.9383 9.65646 11.8159L10.6442 11.7062C10.8467 11.6837 11 11.5125 11 11.3087V9.4469C11 9.2085 10.7928 9.02301 10.5558 9.04938L9.65646 9.14929C8.55554 9.27161 7.44446 9.27161 6.34354 9.14929L5.44418 9.04938Z"
            })]
        })
    })
}
function tW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.3428 15 14.1383 12.6569 14.8337 9.52344C14.4317 9.66907 14.031 9.69183 13.6572 9.63098C12.9941 9.52307 12.453 9.16016 12.1465 8.85358L11.7383 8.44537C11.2478 8.79462 10.6479 9 10 9C8.34314 9 7 7.65686 7 6C7 4.34314 8.34314 3 10 3C11.6569 3 13 4.34314 13 6C13 6.64789 12.7946 7.24786 12.4454 7.73828L12.8535 8.14642C13.047 8.33984 13.4059 8.57697 13.8178 8.64398C14.1587 8.69946 14.5652 8.64545 14.9943 8.28613C14.9981 8.19122 15 8.09583 15 8C15 4.13403 11.866 1 8 1C4.134 1 1 4.13403 1 8C1 11.866 4.134 15 8 15ZM5 5C4.44772 5 4 5.44769 4 6C4 6.55231 4.44772 7 5 7C5.55228 7 6 6.55231 6 6C6 5.44769 5.55228 5 5 5ZM9.10001 11.95C8.8515 12.2814 8.38138 12.3486 8.05002 12.1L7.49225 11.6817C7.08762 11.3782 6.58524 11.2659 6.10767 11.3482C5.69946 11.4185 5.22977 11.3447 5.00003 11C4.77026 10.6554 4.86218 10.1802 5.24976 10.034C6.28879 9.64203 7.47693 9.79517 8.39224 10.4817L8.95001 10.9C9.2814 11.1486 9.34854 11.6187 9.10001 11.95Z"
            }), c.jsx("path", {
                d: "M9 5C8.44772 5 8 5.44769 8 6C8 6.55231 8.44772 7 9 7C9.55228 7 10 6.55231 10 6C10 5.44769 9.55228 5 9 5Z"
            })]
        })
    })
}
function nW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13403 11.866 1 8 1C4.134 1 1 4.13403 1 8C1 11.866 4.134 15 8 15ZM7.15384 10C6.5166 10 6 10.5166 6 11.1539C6 12.1735 6.82654 13 7.84616 13H8.15384C9.17346 13 10 12.1735 10 11.1539C10 10.5166 9.4834 10 8.84616 10H7.15384ZM7.47803 5.98492C7.45279 5.91779 7.4075 5.8598 7.34821 5.81885C7.28891 5.77789 7.21841 5.7558 7.14612 5.75562H5.70923C5.68478 5.75562 5.66092 5.74811 5.64096 5.73407C5.621 5.72009 5.60593 5.70032 5.59784 5.67743L5.08203 4.22809C5.05676 4.16113 5.01144 4.10339 4.95218 4.06262C4.89291 4.02185 4.82251 4 4.75037 4C4.72293 4 4.69574 4.00317 4.66931 4.00934C4.62625 4.01935 4.58524 4.03735 4.54852 4.06262C4.51404 4.08636 4.48431 4.11578 4.46048 4.14941C4.44333 4.17365 4.42926 4.20007 4.4187 4.22809L4.41751 4.23187L3.90289 5.67743C3.89481 5.70026 3.87976 5.72003 3.85983 5.73401C3.8483 5.74213 3.83545 5.74805 3.82193 5.75165C3.81213 5.75427 3.80197 5.75562 3.79172 5.75562H2.35437C2.28162 5.75555 2.2106 5.77771 2.151 5.81903C2.1228 5.83862 2.09781 5.86206 2.07666 5.88849C2.05313 5.91791 2.03436 5.95105 2.02127 5.98676C2.01163 6.01306 2.00525 6.04028 2.00217 6.06781C1.99731 6.11121 2.00061 6.15533 2.01218 6.19794C2.0311 6.26758 2.0712 6.32971 2.12701 6.37598L3.35077 7.38232C3.36908 7.39734 3.38235 7.41754 3.38889 7.44025C3.39542 7.46289 3.39487 7.487 3.38736 7.5094L2.8732 9.03778C2.86017 9.0766 2.85413 9.11713 2.85513 9.15753C2.85596 9.19067 2.86154 9.22375 2.87189 9.25574C2.89478 9.32672 2.93982 9.38861 3.00055 9.4325C3.06125 9.47632 3.13449 9.5 3.20963 9.49982C3.28476 9.49976 3.35791 9.47595 3.41852 9.43195L4.68048 8.51453C4.70071 8.49982 4.72516 8.49188 4.75024 8.49188C4.77533 8.49188 4.79974 8.49982 4.82001 8.51453L6.08151 9.4317C6.14206 9.47589 6.21527 9.49982 6.29047 9.5C6.36566 9.50018 6.43896 9.47668 6.49979 9.4328C6.56058 9.38892 6.60571 9.32697 6.62866 9.25598C6.64056 9.21899 6.64615 9.18054 6.64542 9.14221C6.64474 9.10693 6.63867 9.07172 6.62726 9.03778L6.11313 7.50842C6.10559 7.48608 6.10507 7.46198 6.1116 7.43927C6.11426 7.43005 6.11801 7.42126 6.1228 7.41309C6.1257 7.40808 6.12897 7.40332 6.13257 7.3988C6.13763 7.39246 6.14337 7.3866 6.14969 7.38135L7.37582 6.37366C7.43091 6.32703 7.47028 6.26471 7.48853 6.19519C7.50684 6.12573 7.50317 6.05231 7.47803 5.98492ZM13.8482 5.81885C13.9075 5.8598 13.9528 5.91779 13.978 5.98492C14.0032 6.05231 14.0068 6.12573 13.9885 6.19519C13.9703 6.26471 13.9309 6.32703 13.8758 6.37366L12.6497 7.38135C12.6314 7.39642 12.6181 7.41663 12.6116 7.43927C12.6051 7.46198 12.6056 7.48608 12.6131 7.50842L13.1273 9.03778C13.1511 9.10852 13.1516 9.18494 13.1287 9.25598C13.1057 9.32697 13.0606 9.38892 12.9998 9.4328C12.9653 9.45764 12.9268 9.47595 12.8863 9.48712C12.8553 9.49567 12.8231 9.50006 12.7905 9.5C12.7153 9.49982 12.6421 9.47589 12.5815 9.4317L11.32 8.51453C11.2997 8.49982 11.2753 8.49188 11.2502 8.49188C11.2252 8.49188 11.2007 8.49982 11.1805 8.51453L9.91852 9.43195C9.85791 9.47595 9.78476 9.49976 9.70963 9.49982C9.63449 9.5 9.56125 9.47632 9.50055 9.4325C9.46307 9.4054 9.43155 9.37146 9.40756 9.33276C9.39267 9.30872 9.38065 9.2829 9.37189 9.25574C9.34897 9.18481 9.34946 9.10846 9.3732 9.03778L9.88736 7.5094C9.89191 7.49585 9.89389 7.48163 9.89331 7.46753C9.89291 7.45831 9.89145 7.44916 9.88889 7.44025C9.88235 7.41754 9.86908 7.39734 9.85077 7.38232L8.62701 6.37598C8.5712 6.32971 8.5311 6.26758 8.51218 6.19794C8.50345 6.16577 8.49942 6.13275 8.50006 6.09985C8.50079 6.06146 8.5079 6.02325 8.52127 5.98676C8.54611 5.91901 8.5914 5.86041 8.651 5.81903C8.7106 5.77771 8.78162 5.75555 8.85437 5.75562H10.2917C10.3161 5.75555 10.3399 5.74805 10.3598 5.73401C10.3798 5.72003 10.3948 5.70026 10.4029 5.67743L10.9175 4.23187L10.9187 4.22809C10.944 4.16113 10.9893 4.10339 11.0485 4.06262C11.1078 4.02185 11.1782 4 11.2504 4C11.3225 4 11.3929 4.02185 11.4522 4.06262C11.5114 4.10339 11.5568 4.16113 11.582 4.22809L12.0978 5.67743C12.1059 5.70032 12.121 5.72009 12.141 5.73407C12.1609 5.74811 12.1848 5.75562 12.2092 5.75562H13.6461C13.7184 5.7558 13.7889 5.77789 13.8482 5.81885Z"
            })
        })
    })
}
function rW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15 8C15 11.866 11.866 15 8 15C4.134 15 1 11.866 1 8C1 4.13403 4.134 1 8 1C11.866 1 15 4.13403 15 8ZM5.46967 9.96967C5.76257 9.67676 6.23743 9.67676 6.53033 9.96967C6.77881 10.2181 7.24222 10.5237 7.77051 10.6097C8.25229 10.6882 8.84253 10.5968 9.46967 9.96967C9.76257 9.67676 10.2374 9.67676 10.5303 9.96967C10.8232 10.2626 10.8232 10.7374 10.5303 11.0303C9.5575 12.0032 8.48105 12.2452 7.52948 12.0903C6.62445 11.9429 5.88788 11.4485 5.46967 11.0303C5.17679 10.7374 5.17679 10.2626 5.46967 9.96967ZM4.03387 4.78748L4.12833 4.76349C4.81168 4.58978 5.52377 4.56085 6.21893 4.67871C6.46057 4.7196 6.67825 4.81348 6.86319 4.94574C6.95663 5.01251 7.06903 5.05139 7.18341 5.04095C7.72665 4.99146 8.27328 4.99139 8.81653 5.04095C8.93091 5.05133 9.04333 5.01251 9.13675 4.94574C9.32172 4.81348 9.53937 4.7196 9.78101 4.67871C10.4762 4.56085 11.1883 4.58978 11.8716 4.76349L11.9661 4.78748C12.1008 4.82172 12.2308 4.87207 12.3499 4.9375C12.4189 4.97546 12.4952 5 12.5739 5H13.6C13.8209 5 14 5.17908 14 5.40002V5.60004C14 5.82092 13.8209 6 13.6 6H13.4126C13.1783 6 12.995 6.20093 12.9941 6.43524C12.9914 7.1236 12.8539 7.7442 12.7253 7.86346C11.775 8.74487 10.5935 8.54822 9.67007 8.19135C9.1944 8.00757 8.85574 7.59137 8.6969 7.10681L8.56262 6.69708C8.52917 6.59503 8.44189 6.51605 8.33463 6.51129C8.11163 6.50128 7.88831 6.50134 7.66531 6.51129C7.55804 6.51605 7.47076 6.59509 7.43732 6.69708L7.30304 7.10681C7.1442 7.59137 6.80554 8.00757 6.32986 8.19135C5.40646 8.54822 4.22491 8.74487 3.27466 7.86346C3.14603 7.7442 3.00858 7.1236 3.00583 6.43524C3.00491 6.20093 2.82169 6 2.58734 6H2.39999C2.17908 6 2 5.82092 2 5.60004V5.40002C2 5.17908 2.17908 5 2.39999 5H3.42603C3.50476 5 3.58105 4.97546 3.65009 4.9375C3.76913 4.87207 3.89917 4.82172 4.03387 4.78748Z"
            })
        })
    })
}
function sW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15ZM10 5C9.44771 5 9 5.44772 9 6V6.5C9 6.77614 9.22386 7 9.5 7H10.5C10.7761 7 11 6.77614 11 6.5V6C11 5.44772 10.5523 5 10 5ZM5 6C5 5.44772 5.44772 5 6 5C6.55228 5 7 5.44772 7 6V6.5C7 6.77614 6.77614 7 6.5 7H5.5C5.22386 7 5 6.77614 5 6.5V6ZM8 8C6.89543 8 6 8.89543 6 10C6 11.1046 6.89543 12 8 12C9.10457 12 10 11.1046 10 10C10 8.89543 9.10457 8 8 8Z"
            })
        })
    })
}
function iW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15ZM8.46154 13C9.31121 13 10 12.3112 10 11.4615V11C10 9.89543 9.10457 9 8 9C6.89543 9 6 9.89543 6 11V11.4615C6 12.3112 6.68879 13 7.53846 13H8.46154ZM6.83541 5.82916C7.20589 6.0144 7.35606 6.46491 7.17082 6.83539C6.86395 7.44913 6.35121 8.01893 5.64354 8.22112C4.88217 8.43866 4.11192 8.17256 3.46967 7.53031C3.17678 7.23742 3.17678 6.76254 3.46967 6.46965C3.76256 6.17676 4.23744 6.17676 4.53033 6.46965C4.88808 6.8274 5.11783 6.8113 5.23146 6.77884C5.39879 6.73103 5.63605 6.55083 5.82918 6.16457C6.01442 5.79409 6.46493 5.64392 6.83541 5.82916ZM9.32918 6.83539C9.14394 6.46491 9.29411 6.0144 9.66459 5.82916C10.0351 5.64392 10.4856 5.79409 10.6708 6.16457C10.864 6.55083 11.1012 6.73103 11.2685 6.77884C11.3822 6.8113 11.6119 6.8274 11.9697 6.46965C12.2626 6.17676 12.7374 6.17676 13.0303 6.46965C13.3232 6.76254 13.3232 7.23742 13.0303 7.53031C12.3881 8.17256 11.6178 8.43866 10.8565 8.22112C10.1488 8.01893 9.63605 7.44913 9.32918 6.83539Z"
            })
        })
    })
}
function aW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8ZM9 6C9 5.44772 9.44771 5 10 5C10.5523 5 11 5.44772 11 6V6.5C11 6.77614 10.7761 7 10.5 7H9.5C9.22386 7 9 6.77614 9 6.5V6ZM6 5C5.44772 5 5 5.44772 5 6V6.5C5 6.77614 5.22386 7 5.5 7H6.5C6.77614 7 7 6.77614 7 6.5V6C7 5.44772 6.55228 5 6 5ZM3.37604 8.58405C3.60581 8.23941 4.07146 8.14628 4.4161 8.37604C4.79311 8.62738 6.14839 9.25008 8.00008 9.25008C9.85177 9.25008 11.2071 8.62738 11.5841 8.37604C11.9287 8.14628 12.3944 8.23941 12.6241 8.58405C12.8539 8.9287 12.7608 9.39435 12.4161 9.62412C12.3161 9.69079 12.1898 9.76506 12.0393 9.84279L12.3332 10.4307C12.9072 11.5787 12.2705 12.963 11.0254 13.2743C10.1131 13.5023 9.1649 13.0662 8.74438 12.2252L8.00684 10.7501L8.00008 10.7501C5.85177 10.7501 4.20705 10.0394 3.58405 9.62412C3.23941 9.39435 3.14628 8.9287 3.37604 8.58405Z"
            }), c.jsx("path", {
                d: "M9.63881 11.7779L9 10.5L11 10L11.4388 10.8779C11.7267 11.4537 11.4074 12.148 10.7829 12.3041C10.3253 12.4185 9.84972 12.1998 9.63881 11.7779Z"
            })]
        })
    })
}
function oW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M2.4555 1C2.18824 1 1.96642 1.20272 1.94738 1.46438L1.83562 3H4.16438L4.05262 1.46438C4.03358 1.20272 3.81176 1 3.5445 1H2.4555Z"
            }), c.jsx("path", {
                d: "M4.23715 4H1.76285L1.00132 14.4644C0.980258 14.7538 1.21381 15 1.50944 15H4.49056C4.78619 15 5.01974 14.7538 4.99868 14.4644L4.23715 4Z"
            }), c.jsx("path", {
                d: "M6 8.42192V10H15V6.48516C15 6.05379 14.4614 5.83776 14.1464 6.14279L12 8.22136V6.48516C12 6.05379 11.4614 5.83776 11.1464 6.14279L9 8.22136V6.48516C9 6.05379 8.46143 5.83776 8.14645 6.14279L6.14645 8.07954C6.05268 8.17034 6 8.2935 6 8.42192Z"
            }), c.jsx("path", {
                d: "M6 14.5158V11H15V14.5158C15 14.7832 14.7761 15 14.5 15H6.5C6.22386 15 6 14.7832 6 14.5158Z"
            })]
        })
    })
}
function a_(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M6.00001 6.99814C6.00001 6.99814 5.40001 6.39814 7.00001 3.99814C8.54865 1.67518 12.7204 1.03851 14.8002 1.00003C14.9106 0.997991 15 1.08764 15.0056 1.19795C15.0118 1.32165 15.0227 1.45252 15.0342 1.59132C15.1153 2.5721 15.2293 3.94931 14.0001 5.99814C12.6368 8.02133 10.1022 8.95926 9.97406 9.00667C9.97071 9.00791 9.96901 9.00857 9.96901 9.00857L10.0001 8.99814C12.213 8.26049 13.0656 9.15523 13.5614 9.67546C13.7377 9.86049 13.8689 9.99814 14.0001 9.99814C11.3625 11.5496 8.46841 12.4462 6 11C6.30981 10.1812 9.5 6 12 3.99814C8.5 5 6 8.49814 5 9.99814C3.34806 7.97231 4.45842 4.03505 5.5 3C5.57274 2.92772 5.67565 3.00872 5.64272 3.10584C5.28548 4.15923 5 7 6.00001 6.99814Z"
            }), c.jsx("path", {
                d: "M1 14.9981H2L5.5 11.9981L5.13246 11.8144C4.71356 11.6049 4.33117 11.3293 4 10.9981L1 14.9981Z"
            })]
        })
    })
}
function cW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.19404 1.22063C6.3614 0.59953 5.21202 1.3863 5.49795 2.38164C5.78836 3.39253 5.61779 4.47926 5.03143 5.35404L3.85748 7.10542C3.29836 7.93955 3 8.91962 3 9.92212V10.0271C3 12.7736 5.23858 15 8 15C10.7614 15 13 12.7736 13 10.0271V7.11052C13 6.26728 12.0111 5.80663 11.3598 6.34646L10 7.4735V5.55149C10 4.14276 9.33313 2.81625 8.2 1.97101L7.19404 1.22063ZM8 14C6.75 14 5.5 13.5636 5.5 11.8182C5.5 10.4532 6.51931 9.1104 7.36222 8.41598C7.64036 8.18684 8 8.40335 8 8.76372V10.509C8 10.8694 8.36968 11.1114 8.69997 10.9673L9.80003 10.4873C10.1303 10.3431 10.5038 10.5854 10.4832 10.9452C10.4109 12.2052 10.0281 14 8 14Z"
            })
        })
    })
}
function lW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M6 1C5.44772 1 5 1.44772 5 2V2.5H11V2C11 1.44772 10.5523 1 10 1H6Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5 4.58579V3.5H11V4.58579C11 4.851 10.8946 5.10536 10.7071 5.29289L10.2929 5.70711C10.1054 5.89464 10 6.149 10 6.41421V14C10 14.5523 9.55229 15 9 15H7C6.44772 15 6 14.5523 6 14V6.41421C6 6.149 5.89464 5.89464 5.70711 5.70711L5.29289 5.29289C5.10536 5.10536 5 4.851 5 4.58579ZM8 7C7.58579 7 7.25 7.33579 7.25 7.75V9.25C7.25 9.66421 7.58579 10 8 10C8.41421 10 8.75 9.66421 8.75 9.25V7.75C8.75 7.33579 8.41421 7 8 7Z"
            })]
        })
    })
}
function dW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M13.5 1C14.3284 1 15 1.67157 15 2.5V13.5C15 14.3284 14.3284 15 13.5 15H2.5C1.67157 15 1 14.3284 1 13.5V4.62132C1 4.2235 1.15804 3.84196 1.43934 3.56066L3.56066 1.43934C3.84196 1.15804 4.2235 1 4.62132 1H5V6.5C5 6.77614 5.22386 7 5.5 7H12.5C12.7761 7 13 6.77614 13 6.5V1H13.5ZM6 11C6 12.1046 6.89543 13 8 13C9.10457 13 10 12.1046 10 11C10 9.89543 9.10457 9 8 9C6.89543 9 6 9.89543 6 11Z"
            }), c.jsx("path", {
                d: "M8 2C8.27614 2 8.5 2.22386 8.5 2.5V5.5C8.5 5.77614 8.27614 6 8 6H7C6.72386 6 6.5 5.77614 6.5 5.5V2.5C6.5 2.22386 6.72386 2 7 2H8Z"
            })]
        })
    })
}
function uW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.68933 1.14645C7.88459 0.951184 8.20117 0.951184 8.39644 1.14645L10.2929 3.04289H12.5429C12.819 3.04289 13.0429 3.26675 13.0429 3.54289V5.79291L14.9393 7.68936C15.1346 7.88462 15.1346 8.20121 14.9393 8.39647L13.0429 10.2929V12.5429C13.0429 12.819 12.819 13.0429 12.5429 13.0429H10.2929L8.39644 14.9393C8.20117 15.1346 7.88459 15.1346 7.68933 14.9393L5.79288 13.0429H3.54288C3.26674 13.0429 3.04288 12.819 3.04288 12.5429V10.2929L1.14645 8.39647C0.951185 8.20121 0.951184 7.88462 1.14645 7.68936L3.04288 5.79292V3.54289C3.04288 3.26675 3.26674 3.04289 3.54288 3.04289H5.79289L7.68933 1.14645ZM8.04297 11.043C9.69982 11.043 11.043 9.69982 11.043 8.04297C11.043 6.38611 9.69982 5.04297 8.04297 5.04297C6.38611 5.04297 5.04297 6.38611 5.04297 8.04297C5.04297 9.69982 6.38611 11.043 8.04297 11.043Z"
            })
        })
    })
}
function hW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M5.692 3.907c.304 1.456-.258 3.052-.585 3.842a.489.489 0 0 1-.377.294l-1.882.3a.461.461 0 0 1-.455-.183 8.486 8.486 0 0 1-1.297-3.144c-.38-2.041.379-3.772 2.037-3.994C4.792.8 5.351 2.274 5.692 3.907ZM3.207 9.635l1.921-.403a.497.497 0 0 1 .571.315c.35.97.68 2.243-.765 2.437-1.268.17-1.904-1.023-2.08-1.853-.05-.235.118-.446.353-.496ZM10.308 6.907c-.304 1.456.258 3.052.585 3.842a.489.489 0 0 0 .377.294l1.882.3a.462.462 0 0 0 .455-.183 8.488 8.488 0 0 0 1.297-3.144c.38-2.041-.379-3.772-2.037-3.994-1.659-.222-2.218 1.252-2.559 2.885ZM12.793 12.635l-1.921-.403a.497.497 0 0 0-.571.315c-.35.97-.68 2.243.765 2.437 1.268.17 1.904-1.023 2.08-1.853.05-.235-.118-.446-.354-.496Z"
            })
        })
    })
}
function fW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M14.5 1C14.7761 1 15 1.22386 15 1.5V14.5C15 14.7761 14.7761 15 14.5 15H14C13.7239 15 13.5 14.7761 13.5 14.5V5.5C13.5 5.22386 13.2761 5 13 5H3C2.72386 5 2.5 5.22386 2.5 5.5V14.5C2.5 14.7761 2.27614 15 2 15H1.5C1.22386 15 1 14.7761 1 14.5V1.5C1 1.22386 1.22386 1 1.5 1H14.5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4 10.5902V14.5C4 14.7761 4.22386 15 4.5 15H5C5.27614 15 5.5 14.7761 5.5 14.5V13.5H10.5V14.5C10.5 14.7761 10.7239 15 11 15H11.5C11.7761 15 12 14.7761 12 14.5V10.5902C12 10.2021 11.9096 9.81927 11.7361 9.47214L11.191 8.38197C10.7675 7.53501 9.90184 7 8.95492 7H7.04508C6.09816 7 5.2325 7.53501 4.80902 8.38197L4.26393 9.47214C4.09036 9.81927 4 10.2021 4 10.5902ZM5.3618 9.27639L5.8618 8.27639C5.9465 8.107 6.11963 8 6.30902 8H9.69098C9.88037 8 10.0535 8.107 10.1382 8.27639L10.6382 9.27639C10.8044 9.60884 10.5627 10 10.191 10H5.80902C5.43733 10 5.19558 9.60884 5.3618 9.27639ZM5.75 12.5C6.16421 12.5 6.5 12.1642 6.5 11.75C6.5 11.3358 6.16421 11 5.75 11C5.33579 11 5 11.3358 5 11.75C5 12.1642 5.33579 12.5 5.75 12.5ZM11 11.75C11 12.1642 10.6642 12.5 10.25 12.5C9.83579 12.5 9.5 12.1642 9.5 11.75C9.5 11.3358 9.83579 11 10.25 11C10.6642 11 11 11.3358 11 11.75Z"
            })]
        })
    })
}
function pW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M8.58 1C8.82391 1.00174 9.03098 1.17922 9.07 1.42L9.32 2.9C9.35158 3.0778 9.47838 3.22382 9.65 3.28C9.82917 3.3387 10.0031 3.41229 10.17 3.5C10.3266 3.59544 10.5234 3.59544 10.68 3.5L11.9 2.63C12.0854 2.47558 12.3546 2.47558 12.54 2.63L13.36 3.45C13.5295 3.62306 13.5506 3.89272 13.41 4.09L12.54 5.31C12.4446 5.4666 12.4446 5.6634 12.54 5.82C12.6277 5.98689 12.7013 6.16083 12.76 6.34C12.8162 6.51162 12.9622 6.63842 13.14 6.67L14.62 6.92C14.8608 6.95902 15.0383 7.16609 15.04 7.41V8.58C15.0383 8.82391 14.8608 9.03098 14.62 9.07L13.14 9.32C12.9622 9.35158 12.8162 9.47838 12.76 9.65C12.7013 9.82917 12.6277 10.0031 12.54 10.17C12.4446 10.3266 12.4446 10.5234 12.54 10.68L13.41 11.9C13.5506 12.0973 13.5295 12.3669 13.36 12.54L12.54 13.36C12.3669 13.5295 12.0973 13.5506 11.9 13.41L10.68 12.54C10.5234 12.4446 10.3266 12.4446 10.17 12.54C10.0031 12.6277 9.82917 12.7013 9.65 12.76C9.47838 12.8162 9.35158 12.9622 9.32 13.14L9.07 14.62C9.03098 14.8608 8.82391 15.0383 8.58 15.04H7.42C7.17609 15.0383 6.96902 14.8608 6.93 14.62L6.68 13.1C6.64842 12.9222 6.52162 12.7762 6.35 12.72C6.17083 12.6613 5.99689 12.5877 5.83 12.5C5.6734 12.4046 5.4766 12.4046 5.32 12.5L4.1 13.37C3.90272 13.5106 3.63306 13.4895 3.46 13.32L2.64 12.5C2.48558 12.3146 2.48558 12.0454 2.64 11.86L3.51 10.64C3.60544 10.4834 3.60544 10.2866 3.51 10.13C3.42229 9.96311 3.3487 9.78917 3.29 9.61C3.23382 9.43838 3.0878 9.31158 2.91 9.28L1.42 9.07C1.17922 9.03098 1.00174 8.82391 1 8.58V7.42C1.00174 7.17609 1.17922 6.96902 1.42 6.93L2.9 6.68C3.0778 6.64842 3.22382 6.52162 3.28 6.35C3.3387 6.17083 3.41229 5.99689 3.5 5.83C3.59544 5.6734 3.59544 5.4766 3.5 5.32L2.59 4.1C2.43558 3.91461 2.43558 3.64539 2.59 3.46L3.41 2.64C3.59539 2.48558 3.86461 2.48558 4.05 2.64L5.27 3.51C5.4266 3.60544 5.6234 3.60544 5.78 3.51C5.94689 3.42229 6.12083 3.3487 6.3 3.29C6.47162 3.23382 6.59842 3.0878 6.63 2.91L6.93 1.42C6.96902 1.17922 7.17609 1.00174 7.42 1H8.58ZM8 6C6.89543 6 6 6.89543 6 8C6 9.10457 6.89543 10 8 10C9.10457 10 10 9.10457 10 8C10 6.89543 9.10457 6 8 6Z"
            })
        })
    })
}
function mW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M7.5 1.7C7.5 1.3134 7.8134 1 8.2 1H8.3C8.6866 1 9 1.3134 9 1.7V11.0277C11.8377 11.1863 14 12.009 14 13C14 14.1046 11.3137 15 8 15C4.68629 15 2 14.1046 2 13C2 12.2579 3.21237 11.6103 5.01286 11.2651C5.5348 11.165 6 11.5808 6 12.1123V12.25C6 12.6642 6.33579 13 6.75 13C7.16421 13 7.5 12.6642 7.5 12.25V1.7Z"
            }), c.jsx("path", {
                d: "M10 5.79052V1.20948C10 1.0573 10.1153 0.956026 10.2168 1.019L13.9101 3.30952C14.03 3.38385 14.03 3.61615 13.9101 3.69048L10.2168 5.981C10.1153 6.04397 10 5.9427 10 5.79052Z"
            })]
        })
    })
}
function gW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4 1.5C4 1.22386 4.22386 1 4.5 1H5C5.27614 1 5.5 1.22386 5.5 1.5V2H6C6.27614 2 6.5 2.22386 6.5 2.5V4H9.5V2.5C9.5 2.22386 9.72386 2 10 2H10.5V1.5C10.5 1.22386 10.7239 1 11 1H11.5C11.7761 1 12 1.22386 12 1.5V2C12 2.27614 11.7761 2.5 11.5 2.5H11V4H12C12.2761 4 12.5 4.22386 12.5 4.5V6.5C12.5 6.22386 12.7239 6 13 6H13.5C13.7761 6 14 6.22386 14 6.5V8H14.5C14.7761 8 15 8.22386 15 8.5V11.5C15 11.7761 14.7761 12 14.5 12H14C13.7239 12 13.5 11.7761 13.5 11.5V10H13C12.7239 10 12.5 9.77614 12.5 9.5V10.5C12.5 10.7761 12.2761 11 12 11H4C3.72386 11 3.5 10.7761 3.5 10.5V9.5C3.5 9.77614 3.27614 10 3 10H2.5V11.5C2.5 11.7761 2.27614 12 2 12H1.5C1.22386 12 1 11.7761 1 11.5V8.5C1 8.22386 1.22386 8 1.5 8H2V6.5C2 6.22386 2.22386 6 2.5 6H3C3.27614 6 3.5 6.22386 3.5 6.5V4.5C3.5 4.22386 3.72386 4 4 4H5V2.5H4.5C4.22386 2.5 4 2.27614 4 2V1.5ZM5 6.5C5 6.22386 5.22386 6 5.5 6H6C6.27614 6 6.5 6.22386 6.5 6.5V7C6.5 7.27614 6.27614 7.5 6 7.5H5.5C5.22386 7.5 5 7.27614 5 7V6.5ZM10 6C9.72386 6 9.5 6.22386 9.5 6.5V7C9.5 7.27614 9.72386 7.5 10 7.5H10.5C10.7761 7.5 11 7.27614 11 7V6.5C11 6.22386 10.7761 6 10.5 6H10Z"
            }), c.jsx("path", {
                d: "M5.5 12C5.22386 12 5 12.2239 5 12.5V13.5H4.5C4.22386 13.5 4 13.7239 4 14V14.5C4 14.7761 4.22386 15 4.5 15H6C6.27614 15 6.5 14.7761 6.5 14.5V12.5C6.5 12.2239 6.27614 12 6 12H5.5Z"
            }), c.jsx("path", {
                d: "M10 12C9.72386 12 9.5 12.2239 9.5 12.5V14.5C9.5 14.7761 9.72386 15 10 15H11.5C11.7761 15 12 14.7761 12 14.5V14C12 13.7239 11.7761 13.5 11.5 13.5H11V12.5C11 12.2239 10.7761 12 10.5 12H10Z"
            })]
        })
    })
}
function yW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1 5.06749C1 2.82108 2.79086 1 5 1C6.19469 1 7.26706 1.53259 8 2.37703C8.73295 1.53259 9.80531 1 11 1C13.2091 1 15 2.82108 15 5.06749C15 5.82666 14.8439 6.59716 14.5784 7.35869H11.7112C11.4006 7.35869 11.1032 7.48594 10.8867 7.71149L9.17202 9.49764L6.99474 5.08757C6.58606 4.25977 5.43327 4.22215 4.97281 5.02158L3.62666 7.35869H1.5V7.57498C1.18705 6.74333 1 5.89862 1 5.06749Z"
            }), c.jsx("path", {
                d: "M1.98726 8.67526C3.15904 10.9874 6.1436 13.5064 7.66045 14.8693C7.85438 15.0436 8.14562 15.0436 8.33955 14.8693C9.8564 13.5064 12.841 10.9874 14.0127 8.67526H11.7746L9.95687 10.5688C9.40495 11.1437 8.45782 10.995 8.10373 10.2778L5.956 5.92754L4.70616 8.09744C4.50007 8.45524 4.12183 8.67526 3.71281 8.67526H1.98726Z"
            })]
        })
    })
}
function CW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.99902 12.3703V6.00098C2.99902 3.23955 5.2376 1.00098 7.99902 1.00098H8.40011C10.94 1.00098 12.999 3.05998 12.999 5.59989C12.999 7.41618 11.3226 8.58969 9.82571 9.63757C9.79056 9.66218 9.75551 9.68672 9.72058 9.71119C9.70199 9.72422 9.68369 9.73748 9.66569 9.75098C9.11281 10.1656 8.85338 10.8829 8.75355 11.6564C8.53448 13.3538 7.34115 15.001 5.62971 15.001C4.17682 15.001 2.99902 13.8232 2.99902 12.3703ZM11.3487 6.03049C11.48 3.40386 8.64446 1.67963 6.3728 3.00476L5.64248 3.43079C4.87273 3.8798 4.39941 4.70387 4.39941 5.595V6.63096C4.39941 7.44258 5.05736 8.10053 5.86898 8.10053H5.99941C6.22033 8.10053 6.39941 8.27961 6.39941 8.50053C6.39941 8.72144 6.22033 8.90053 5.99941 8.90053H5.86898C5.05736 8.90053 4.39941 9.55848 4.39941 10.3701V12.5005C4.39941 12.8319 4.66804 13.1005 4.99941 13.1005C5.33079 13.1005 5.59941 12.8319 5.59941 12.5005V10.3701C5.59941 10.2212 5.7201 10.1005 5.86898 10.1005H5.99941C6.88307 10.1005 7.59941 9.38418 7.59941 8.50053C7.59941 7.61687 6.88307 6.90053 5.99941 6.90053H5.86898C5.7201 6.90053 5.59941 6.77984 5.59941 6.63096V5.595C5.59941 5.13067 5.84604 4.70128 6.24712 4.46732L6.97745 4.0413C8.42591 3.19636 10.2339 4.29577 10.1502 5.97057C10.1336 6.30152 10.3885 6.58323 10.7195 6.59978C11.0504 6.61633 11.3321 6.36145 11.3487 6.03049Z"
            })
        })
    })
}
function bW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M5 1C2.79086 1 1 2.79815 1 5.01628C1 8.7208 4.81147 12.6987 6.80945 14.5294C7.49163 15.1545 8.50837 15.1545 9.19055 14.5294C11.1885 12.6987 15 8.7208 15 5.01628C15 2.79815 13.2091 1 11 1C9.80531 1 8.73295 1.52589 8 2.35969C7.26706 1.52589 6.19469 1 5 1Z"
            })
        })
    })
}
function vW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11.3067 5.67547C11.6945 5.2091 11.9318 4.63613 11.9874 4.03213C12 3.89504 12 3.7524 12 3.46712C12 3.03307 12 2.81604 11.9664 2.63518C11.8155 1.8213 11.1787 1.18455 10.3648 1.03356C10.184 1 9.96693 1 9.53288 1H6.46712C6.03307 1 5.81604 1 5.63518 1.03356C4.8213 1.18455 4.18455 1.8213 4.03356 2.63518C4 2.81604 4 3.03307 4 3.46712C4 3.7524 4 3.89504 4.01261 4.03213C4.06816 4.63613 4.3055 5.2091 4.6933 5.67547C4.76818 5.76552 4.85235 5.85196 5 5.99994L7 8L5.08391 9.91609C4.88219 10.1178 4.78133 10.2187 4.6933 10.3245C4.3055 10.7909 4.06816 11.3639 4.01261 11.9679C4 12.105 4 12.2476 4 12.5329C4 12.9669 4 13.184 4.03356 13.3648C4.18455 14.1787 4.8213 14.8154 5.63518 14.9664C5.81604 15 6.03307 15 6.46712 15H9.53288C9.96693 15 10.184 15 10.3648 14.9664C11.1787 14.8155 11.8155 14.1787 11.9664 13.3648C12 13.184 12 12.9669 12 12.5329C12 12.2476 12 12.105 11.9874 11.9679C11.9318 11.3639 11.6945 10.7909 11.3067 10.3245C11.2187 10.2187 11.1179 10.1179 10.9164 9.91644L9 8L10.9999 6C11.1476 5.85202 11.2318 5.76552 11.3067 5.67547ZM6.14456 5.02324L6.29777 5.17645C6.78141 5.06517 7.36787 5 8 5C8.63213 5 9.21859 5.06517 9.70223 5.17645L9.85543 5.02325C10.0765 4.80214 10.1196 4.75703 10.1533 4.71641C10.3472 4.48323 10.4659 4.19674 10.4937 3.89475C10.4985 3.84214 10.5 3.77982 10.5 3.46712C10.5 3.2406 10.4998 3.10575 10.4966 3.00417C10.4945 2.9398 10.4917 2.91188 10.4909 2.90513C10.4522 2.70464 10.2954 2.54781 10.0949 2.50908C10.0881 2.50831 10.0602 2.50549 9.99584 2.50343C9.89425 2.50018 9.7594 2.5 9.53288 2.5H6.46712C6.2406 2.5 6.10575 2.50018 6.00416 2.50343C5.93982 2.50549 5.9119 2.50831 5.90514 2.50908C5.70464 2.54781 5.54781 2.70464 5.50908 2.90514C5.50831 2.9119 5.50549 2.93982 5.50343 3.00416C5.50018 3.10575 5.5 3.2406 5.5 3.46712C5.5 3.77982 5.50147 3.84214 5.5063 3.89475C5.53408 4.19674 5.65275 4.48323 5.84665 4.71641C5.88043 4.75703 5.92346 4.80213 6.14456 5.02324ZM8.5 9.62132L9.85545 10.9768C10.0766 11.1979 10.1196 11.243 10.1533 11.2836C10.3472 11.5168 10.4659 11.8033 10.4937 12.1052C10.4981 12.1527 10.4997 12.2079 10.5 12.447C10.0502 12.2216 9.33337 12.0604 8.5 12.0138V9.62132ZM7.5 9.62132V12.0138C6.66663 12.0604 5.94976 12.2216 5.50005 12.447C5.50032 12.2079 5.50195 12.1527 5.50631 12.1053C5.53408 11.8033 5.65275 11.5168 5.84665 11.2836C5.88043 11.243 5.92346 11.1979 6.14457 10.9768L7.5 9.62132Z"
            })
        })
    })
}
function o_(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M10 6.5C10 7.05228 9.55229 7.5 9 7.5C8.44772 7.5 8 7.05228 8 6.5C8 5.94772 8.44772 5.5 9 5.5C9.55229 5.5 10 5.94772 10 6.5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.27248 3.36502C1 3.8998 1 4.59987 1 6V10C1 11.4001 1 12.1002 1.27248 12.635C1.51217 13.1054 1.89462 13.4878 2.36502 13.7275C2.8998 14 3.59987 14 5 14H11C12.4001 14 13.1002 14 13.635 13.7275C14.1054 13.4878 14.4878 13.1054 14.7275 12.635C15 12.1002 15 11.4001 15 10V6C15 4.59987 15 3.8998 14.7275 3.36502C14.4878 2.89462 14.1054 2.51217 13.635 2.27248C13.1002 2 12.4001 2 11 2H5C3.59987 2 2.8998 2 2.36502 2.27248C1.89462 2.51217 1.51217 2.89462 1.27248 3.36502ZM11 3.5H5C4.27518 3.5 3.82178 3.50117 3.48015 3.52908C3.15603 3.55556 3.0667 3.59845 3.04601 3.60899C2.85785 3.70487 2.70487 3.85785 2.60899 4.04601C2.59845 4.0667 2.55556 4.15603 2.52908 4.48015C2.50117 4.82178 2.5 5.27518 2.5 6V9.5719L4.79689 7.60306C5.19363 7.26299 5.78532 7.28571 6.15481 7.65521L9 10.5005L11.1464 8.35395C11.3417 8.15868 11.6583 8.15868 11.8536 8.35395L13.5 10.0005C13.5 10.0003 13.5 10.0006 13.5 10.0005V6C13.5 5.27518 13.4988 4.82178 13.4709 4.48015C13.4444 4.15603 13.4015 4.0667 13.391 4.04601C13.2951 3.85785 13.1422 3.70487 12.954 3.60899C12.9333 3.59845 12.844 3.55556 12.5198 3.52908C12.1782 3.50117 11.7248 3.5 11 3.5Z"
            })]
        })
    })
}
function wW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.4 1a.4.4 0 0 0-.4.4v3.772a2 2 0 0 1-.586 1.414l-.828.828A2 2 0 0 0 2 8.828V14a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V8.828a2 2 0 0 0-.586-1.414l-.828-.828A2 2 0 0 1 12 5.172V1.4a.4.4 0 0 0-.4-.4H11a1 1 0 0 0-1 1 2 2 0 1 1-4 0 1 1 0 0 0-1-1h-.6ZM7 6a1 1 0 0 0-1 1v.5a.5.5 0 0 0 .5.5H7v2h-.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5H9V6.5a.5.5 0 0 0-.5-.5H7Z"
            })
        })
    })
}
function kW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M9 4.73244C9.5978 4.38663 10 3.74028 10 3C10 1.89543 9.10457 1 8 1C6.89543 1 6 1.89543 6 3C6 3.74028 6.4022 4.38663 7 4.73244C7.01543 4.74136 7.03099 4.75009 7.04668 4.75861C7.33007 4.91256 7.65482 5 8 5C8.36429 5 8.70583 4.90261 9 4.73244Z"
            }), c.jsx("path", {
                d: "M7 5.29198V9.125C7 9.42097 9 9.42097 9 9.125V5.29198C8.69377 5.42578 8.35555 5.5 8 5.5C7.64445 5.5 7.30623 5.42578 7 5.29198Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M6 7L2.55279 8.72361C2.214 8.893 2 9.23926 2 9.61803V11.382C2 11.7607 2.214 12.107 2.55279 12.2764L7.55279 14.7764C7.83431 14.9172 8.16569 14.9172 8.44721 14.7764L13.4472 12.2764C13.786 12.107 14 11.7607 14 11.382V9.61803C14 9.23926 13.786 8.893 13.4472 8.72361L10 7V9.12499C10 9.7829 9.46177 10.0656 9.36653 10.1139C9.1912 10.2028 9.00867 10.2474 8.88108 10.2726C8.60766 10.3265 8.28763 10.347 8 10.347C7.71237 10.347 7.39234 10.3265 7.11892 10.2726C6.99133 10.2474 6.8088 10.2028 6.63347 10.1139C6.53823 10.0656 6 9.7829 6 9.12499V7ZM13 10.8528C13 11.0043 12.9144 11.1428 12.7789 11.2106L8.28944 13.4553C8.15646 13.5218 8 13.4251 8 13.2764V12.7472C8 12.5957 8.0856 12.4572 8.22111 12.3895L12.7106 10.1447C12.8435 10.0782 13 10.1749 13 10.3236V10.8528Z"
            })]
        })
    })
}
function xW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M3.19587 5.51233C2.93804 5.76844 2.93427 6.18185 3.18744 6.4357L6.16038 9.41663C6.41355 9.67048 6.8278 9.66865 7.08563 9.41254C7.20945 9.28955 7.27989 9.12317 7.28148 8.95001L7.28743 8.29708C7.28967 8.05219 7.3893 7.8169 7.56439 7.64296L9.65831 5.56301C9.83341 5.38907 10.0696 5.29075 10.315 5.28967L10.9693 5.28678C11.1428 5.28601 11.3098 5.21649 11.4337 5.0935C11.6915 4.83739 11.6953 4.42398 11.4421 4.17013L8.46915 1.1892C8.21597 0.935346 7.80172 0.937175 7.54389 1.19329C7.42008 1.31627 7.34963 1.48265 7.34805 1.65582L7.34209 2.30874C7.33986 2.55364 7.24023 2.78893 7.06513 2.96286L4.97122 5.04282C4.79612 5.21675 4.55989 5.31508 4.3145 5.31616L3.66024 5.31905C3.48672 5.31981 3.31968 5.38934 3.19587 5.51233Z"
            }), c.jsx("path", {
                d: "M8.91051 8.22037C8.79362 8.10317 8.79375 7.91343 8.91079 7.79639L9.80256 6.90462C9.91983 6.78735 10.11 6.78748 10.2271 6.90491L10.2969 6.97484C10.4767 7.15514 10.6848 7.30494 10.9133 7.41848L12.7723 8.3423C13.0379 8.47426 13.2798 8.64837 13.4888 8.85791L14.4698 9.84161C15.1859 10.5596 15.1753 11.7289 14.446 12.4533C13.7168 13.1777 12.5451 13.1829 11.829 12.4649L10.8481 11.4813C10.639 11.2717 10.4656 11.0293 10.3346 10.7635L9.41809 8.90394C9.30538 8.67527 9.1562 8.46672 8.97631 8.28634L8.91051 8.22037Z"
            }), c.jsx("path", {
                d: "M1.75 13.5C1.33579 13.5 1 13.8358 1 14.25C1 14.6642 1.33579 15 1.75 15H9.25C9.66421 15 10 14.6642 10 14.25C10 13.8358 9.66421 13.5 9.25 13.5H1.75Z"
            })]
        })
    })
}
function DW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.8618 1.27639C7.94649 1.107 8.11962 1 8.30901 1H9.19098C9.56267 1 9.80441 1.39116 9.63819 1.72361L8.99999 3H12L12.8618 1.27639C12.9465 1.107 13.1196 1 13.309 1H14.191C14.5627 1 14.8044 1.39116 14.6382 1.72361L8.13819 14.7236C8.05349 14.893 7.88036 15 7.69098 15H6.80901C6.43732 15 6.19557 14.6088 6.3618 14.2764L7.24999 12.5H4.24999L3.13819 14.7236C3.05349 14.893 2.88036 15 2.69098 15H1.80901C1.43732 15 1.19557 14.6088 1.3618 14.2764L7.8618 1.27639ZM4.99999 11H7.99999L9.24999 8.5H6.24999L4.99999 11ZM11.25 4.5L9.99999 7H6.99999L8.24999 4.5H11.25Z"
            })
        })
    })
}
function SW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M3.9558 14.653C3.89329 14.8106 3.98768 14.9868 4.15572 15.0093C6.37462 15.3065 9.37946 14.0947 12.1025 11.3717C15.545 7.92916 14.9998 0.999944 14.9998 0.999944C14.9998 0.999944 8.07474 0.458867 4.63217 3.90144C1.9578 6.57581 0.741126 9.52205 0.980109 11.7286C1.00031 11.9151 1.22561 11.9811 1.35471 11.8449C3.75627 9.31167 6.67803 7.32865 9.91905 6.03225L9.99982 5.99994C7.371 8.30015 5.32803 11.1936 4.04009 14.4405L3.9558 14.653Z"
            })
        })
    })
}
function _W(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M10.0009 13C10.0009 14.1046 9.10545 15 8.00088 15C6.89631 15 6.00088 14.1046 6.00088 13H10.0009ZM7.98818 1C10.7678 1 13.0211 3.25333 13.0211 6.03295C13.0211 7.27824 12.5595 8.4793 11.7254 9.40393L10.4746 10.7906C10.1754 11.1223 10.0097 11.5532 10.0097 12H6.01351C6.01351 11.5388 5.8448 11.0934 5.53918 10.748L4.25221 9.2932C2.42682 7.22989 2.61974 4.07748 4.68308 2.25212C5.59504 1.44535 6.77059 1 7.98818 1Z"
            })
        })
    })
}
function IW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11 7C12.1046 7 13 7.89543 13 9V13C13 14.1046 12.1046 15 11 15H5C3.89543 15 3 14.1046 3 13V9C3 7.89543 3.89543 7 5 7H6.5H11ZM8 9C7.17157 9 6.5 9.67157 6.5 10.5C6.5 11.3284 7.17157 12 8 12C8.82843 12 9.5 11.3284 9.5 10.5C9.5 9.67157 8.82843 9 8 9ZM8 1C9.65685 1 11 2.34315 11 4V6H9.5V4C9.5 3.17157 8.82843 2.5 8 2.5C7.17157 2.5 6.5 3.17157 6.5 4V6H5V4C5 2.34315 6.34315 1 8 1Z"
            })
        })
    })
}
function EW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1 1.5C1 1.22386 1.22386 1 1.5 1H4.5C4.77614 1 5 1.22386 5 1.5V3L1 3V1.5Z"
            }), c.jsx("path", {
                d: "M1 5V4H5V5L1 5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5 6H1V14.5C1 14.7761 1.22386 15 1.5 15H4.5C4.77614 15 5 14.7761 5 14.5V6ZM2 8C1.72386 8 1.5 8.22386 1.5 8.5V9.5C1.5 9.77614 1.72386 10 2 10C2.27614 10 2.5 9.77614 2.5 9.5V8.5C2.5 8.22386 2.27614 8 2 8Z"
            }), c.jsx("path", {
                d: "M6 1.5C6 1.22386 6.22386 1 6.5 1H9.5C9.77614 1 10 1.22386 10 1.5V3L6 3V1.5Z"
            }), c.jsx("path", {
                d: "M6 5V4H10V5L6 5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M10 6H6V14.5C6 14.7761 6.22386 15 6.5 15H9.5C9.77614 15 10 14.7761 10 14.5V6ZM7 8C6.72386 8 6.5 8.22386 6.5 8.5V9.5C6.5 9.77614 6.72386 10 7 10C7.27614 10 7.5 9.77614 7.5 9.5V8.5C7.5 8.22386 7.27614 8 7 8Z"
            }), c.jsx("path", {
                d: "M11.5 1C11.2239 1 11 1.22386 11 1.5V3L15 3V1.5C15 1.22386 14.7761 1 14.5 1H11.5Z"
            }), c.jsx("path", {
                d: "M11 4V5L15 5V4H11Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11 6H15V14.5C15 14.7761 14.7761 15 14.5 15H11.5C11.2239 15 11 14.7761 11 14.5V6ZM11.5 8.5C11.5 8.22386 11.7239 8 12 8C12.2761 8 12.5 8.22386 12.5 8.5V9.5C12.5 9.77614 12.2761 10 12 10C11.7239 10 11.5 9.77614 11.5 9.5V8.5Z"
            })]
        })
    })
}
function AW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M2 3C2 2.44772 2.44772 2 3 2H13C13.5523 2 14 2.44772 14 3V11H2V3Z"
            }), c.jsx("path", {
                d: "M1 12.2C1 12.0895 1.08954 12 1.2 12H6.29289C6.4255 12 6.55268 12.0527 6.64645 12.1464L6.91213 12.4121C6.96839 12.4684 7.0447 12.5 7.12426 12.5H8.87574C8.9553 12.5 9.03161 12.4684 9.08787 12.4121L9.35355 12.1464C9.44732 12.0527 9.5745 12 9.70711 12H14.8C14.9105 12 15 12.0895 15 12.2V13C15 13.5523 14.5523 14 14 14H2C1.44772 14 1 13.5523 1 13V12.2Z"
            })]
        })
    })
}
function jW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.927 5.07771C6.25103 3.64647 6.70814 2.14928 7.10185 1H5.8C4.11984 1 3.27976 1 2.63803 1.32698C2.07354 1.6146 1.6146 2.07354 1.32698 2.63803C1 3.27976 1 4.11984 1 5.8V10.2C1 11.8802 1 12.7202 1.32698 13.362C1.6146 13.9265 2.07354 14.3854 2.63803 14.673C3.27976 15 4.11984 15 5.8 15H8.23348C8.05797 14.4999 7.92895 13.9859 7.83649 13.4773C6.85272 13.385 5.86677 13.0177 4.45775 12.4511C4.09107 12.3036 3.90705 11.8703 4.04674 11.4832C4.18643 11.0961 4.59693 10.9019 4.96362 11.0493C6.21027 11.5507 6.98759 11.8324 7.65626 11.9437C7.61599 11.2498 7.63148 10.6094 7.67212 10.0822H6.45827C6.17904 10.0822 5.92293 9.92703 5.79359 9.67956C5.49851 9.115 5.46997 8.34079 5.51968 7.61261C5.57213 6.8443 5.72657 5.96298 5.927 5.07771ZM2.5 4.75C2.5 4.33579 2.83579 4 3.25 4C3.66421 4 4 4.33579 4 4.75V6.25C4 6.66421 3.66421 7 3.25 7C2.83579 7 2.5 6.66421 2.5 6.25V4.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M9.34991 13.4053C10.2134 13.2541 11.1907 12.9273 12.514 12.4617C12.8862 12.3307 13.0874 11.906 12.9633 11.513C12.8393 11.1201 12.4369 10.9077 12.0646 11.0387C10.7246 11.5102 9.85587 11.7919 9.1575 11.9191C9.09272 10.8946 9.1643 9.98584 9.25469 9.45896C9.29207 9.24106 9.2314 9.01776 9.0889 8.84873C8.94639 8.6797 8.73657 8.58215 8.51548 8.58215H7.02259C6.99784 8.36936 6.99105 8.08312 7.01619 7.71477C7.06125 7.05478 7.19793 6.25717 7.38997 5.40893C7.74744 3.82997 8.27961 2.14931 8.69105 1H10.2C11.8802 1 12.7202 1 13.362 1.32698C13.9265 1.6146 14.3854 2.07354 14.673 2.63803C15 3.27976 15 4.11984 15 5.8V10.2C15 11.8802 15 12.7202 14.673 13.362C14.3854 13.9265 13.9265 14.3854 13.362 14.673C12.7202 15 11.8802 15 10.2 15H9.84526C9.62058 14.4939 9.46059 13.9507 9.34991 13.4053ZM12.25 4C11.8358 4 11.5 4.33579 11.5 4.75V6.25C11.5 6.66421 11.8358 7 12.25 7C12.6642 7 13 6.66421 13 6.25V4.75C13 4.33579 12.6642 4 12.25 4Z"
            })]
        })
    })
}
function MW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M3.57143 1C3.26936 1 3.01683 1.2158 2.95991 1.50476L2.64685 3.09414L1.47068 3.39271C1.19001 3.46396 1 3.71721 1 4C1 4.28279 1.19001 4.53604 1.47068 4.60729L2.64685 4.90586L2.95991 6.49524C3.01683 6.7842 3.26935 7 3.57143 7C3.8735 7 4.12603 6.7842 4.18294 6.49524L4.496 4.90586L5.67217 4.60729C5.95285 4.53604 6.14286 4.28279 6.14286 4C6.14286 3.71721 5.95285 3.46396 5.67217 3.39271L4.496 3.09414L4.18294 1.50476C4.12603 1.2158 3.8735 1 3.57143 1Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11.2898 1.60365L1.60365 11.2898C0.798782 12.0947 0.798787 13.3996 1.60365 14.2045L1.79553 14.3964C2.60039 15.2012 3.90533 15.2012 4.71019 14.3964L14.3964 4.71019C15.2012 3.90533 15.2012 2.60039 14.3964 1.79553L14.2045 1.60365C13.3996 0.798785 12.0947 0.798784 11.2898 1.60365ZM13.3034 2.88853C13.5046 3.08974 13.5046 3.41598 13.3034 3.61719L12.4603 4.46027L11.5397 3.53973L12.3828 2.69664C12.584 2.49543 12.9103 2.49543 13.1115 2.69664L13.3034 2.88853ZM3.53973 11.5397L2.69664 12.3828C2.49543 12.584 2.49543 12.9103 2.69665 13.1115L2.88853 13.3034C3.08974 13.5046 3.41598 13.5046 3.61719 13.3034L4.46027 12.4603L3.53973 11.5397Z"
            }), c.jsx("path", {
                d: "M12.9743 10.3419C12.9063 10.1377 12.7152 10 12.5 10C12.2848 10 12.0937 10.1377 12.0257 10.3419L11.6047 11.6047L10.3419 12.0256C10.1377 12.0937 10 12.2848 10 12.5C10 12.7152 10.1377 12.9063 10.3419 12.9743L11.6047 13.3953L12.0257 14.6581C12.0937 14.8623 12.2848 15 12.5 15C12.7152 15 12.9063 14.8623 12.9743 14.6581L13.3953 13.3953L14.6581 12.9743C14.8623 12.9063 15 12.7152 15 12.5C15 12.2848 14.8623 12.0937 14.6581 12.0256L13.3953 11.6047L12.9743 10.3419Z"
            })]
        })
    })
}
function TW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M13.2098 3.60072L15 1L11.2458 2.2912C10.935 2.39784 10.9371 2.73456 11.2495 2.87508L12.4119 3.3977L9.99902 6.00023L14.3772 4.70929C14.6889 4.60311 14.6874 4.2658 14.3745 4.12508L13.2098 3.60072Z"
            }), c.jsx("path", {
                d: "M5.04749 4.4638L7.21039 6.62671L8.5622 5.27489C8.71152 5.12557 8.71152 4.88348 8.5622 4.73417L6.94003 3.11199C6.79071 2.96267 6.54862 2.96267 6.3993 3.11199L5.04749 4.4638Z"
            }), c.jsx("path", {
                d: "M4.2364 5.27489L2.34386 7.16743C0.552048 8.95924 0.552048 11.8643 2.34386 13.6561C4.13566 15.448 7.04076 15.448 8.83257 13.6561L10.7251 11.7636L8.5622 9.6007L6.66966 11.4932C6.07239 12.0905 5.10403 12.0905 4.50676 11.4932C3.90949 10.896 3.90949 9.92761 4.50676 9.33034L6.3993 7.4378L4.2364 5.27489Z"
            }), c.jsx("path", {
                d: "M11.5362 10.9525L9.37329 8.78961L10.7251 7.4378C10.8744 7.28848 11.1165 7.28848 11.2658 7.4378L12.888 9.05997C13.0373 9.20929 13.0373 9.45138 12.888 9.6007L11.5362 10.9525Z"
            })]
        })
    })
}
function LW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2 1.79852V8.10067C2 9.9564 3.28401 13.6529 5.31672 14.4828C7.00588 15.1724 8.99412 15.1724 10.6833 14.4828C12.716 13.6529 14 9.9564 14 8.10067V1.79852C14 1.17879 13.172 0.796002 12.5212 1.11485C9.73832 2.47829 6.26168 2.47829 3.47877 1.11485C2.82797 0.796002 2 1.17879 2 1.79852ZM4.00919 9.59233C4.3246 11.1072 5.37504 13 8 13C10.625 13 11.6754 11.1072 11.9908 9.59233C12.0818 9.15537 11.4789 8.87232 10.9829 9.05778C10.1449 9.37111 9.04472 9.67093 8 9.67093C6.95528 9.67093 5.85514 9.37111 5.01712 9.05778C4.52112 8.87232 3.91821 9.15537 4.00919 9.59233ZM5.27256 7C6.68028 7 6.94103 5.6357 6.98916 5.16072C6.99666 5.08669 6.92107 5.03686 6.85259 5.06594C6.54048 5.19848 5.77757 5.4858 5 5.5C4.40621 5.51084 3.80387 5.28638 3.38721 5.1311C3.30963 5.1022 3.23847 5.07568 3.17502 5.05353C3.10027 5.02744 3.03612 5.09781 3.06698 5.17072C3.32932 5.79056 4.03629 7 5.27256 7ZM12.9892 5.16072C12.941 5.6357 12.6803 7 11.2726 7C10.0363 7 9.32932 5.79056 9.06698 5.17072C9.03612 5.09781 9.10027 5.02744 9.17502 5.05353C9.23847 5.07568 9.30962 5.10219 9.38721 5.1311C9.80387 5.28638 10.4062 5.51084 11 5.5C11.7776 5.4858 12.5405 5.19848 12.8526 5.06594C12.9211 5.03686 12.9967 5.08669 12.9892 5.16072Z"
            })
        })
    })
}
function OW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.06887 3.97701L10.538 1.15395C10.8439 1.05198 11.1643 1 11.4867 1H11.4999C13.4329 1 14.9999 3.23858 14.9999 6C14.9999 8.76142 13.4329 11 11.4999 11H11.3292C11.1103 11 10.8921 10.976 10.6784 10.9286L2.0864 9.01922C2.02999 9.00669 1.97854 8.97776 1.93852 8.93607C0.631815 7.57486 0.642601 5.4139 1.9493 4.0527C1.98238 4.01824 2.02356 3.99211 2.06887 3.97701ZM11.5 9.5C12.6046 9.5 13.5 7.933 13.5 6C13.5 4.067 12.6046 2.5 11.5 2.5C10.3954 2.5 9.5 4.067 9.5 6C9.5 7.933 10.3954 9.5 11.5 9.5Z"
            }), c.jsx("path", {
                d: "M3 10.5L3.82598 14.2169C3.92766 14.6745 4.33347 15 4.80217 15H5C5.55228 15 6 14.5523 6 14V11L3 10.5Z"
            }), c.jsx("path", {
                d: "M12.25 6C12.25 6.69036 11.9142 7.25 11.5 7.25C11.0858 7.25 10.75 6.69036 10.75 6C10.75 5.30964 11.0858 4.75 11.5 4.75C11.9142 4.75 12.25 5.30964 12.25 6Z"
            })]
        })
    })
}
function RW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5 4a3 3 0 0 1 6 0v4a3 3 0 0 1-6 0V4Z"
            }), c.jsx("path", {
                d: "M3.5 5.5A.5.5 0 0 1 4 6v2.5A3.5 3.5 0 0 0 7.5 12h1A3.5 3.5 0 0 0 12 8.5V6a.5.5 0 0 1 1 0v2.5a4.5 4.5 0 0 1-4 4.473V14a1 1 0 0 1 1 1H6a1 1 0 0 1 1-1v-1.027A4.5 4.5 0 0 1 3 8.5V6a.5.5 0 0 1 .5-.5Z"
            })]
        })
    })
}
function PW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2 3.75982C2 2.50571 2.9563 1.45853 4.20526 1.34498C6.72988 1.11547 9.27012 1.11547 11.7947 1.34498C13.0437 1.45853 14 2.50571 14 3.75982V5.00001H14.5C14.7761 5.00001 15 5.22387 15 5.50001V7.50001C15 7.77615 14.7761 8.00001 14.5 8.00001H14V12.2C14 12.48 14 12.62 13.9455 12.727C13.9015 12.8133 13.8335 12.8848 13.75 12.933V14.2C13.75 14.48 13.75 14.62 13.6955 14.727C13.6476 14.8211 13.5711 14.8976 13.477 14.9455C13.37 15 13.23 15 12.95 15H12.05C11.77 15 11.63 15 11.523 14.9455C11.4289 14.8976 11.3524 14.8211 11.3045 14.727C11.25 14.62 11.25 14.48 11.25 14.2V13H4.75V14.2C4.75 14.48 4.75 14.62 4.6955 14.727C4.64757 14.8211 4.57108 14.8976 4.477 14.9455C4.37004 15 4.23003 15 3.95 15H3.05C2.76997 15 2.62996 15 2.523 14.9455C2.42892 14.8976 2.35243 14.8211 2.3045 14.727C2.25 14.62 2.25 14.48 2.25 14.2V12.933C2.16645 12.8848 2.09846 12.8133 2.0545 12.727C2 12.62 2 12.48 2 12.2V8.00001H1.5C1.22386 8.00001 1 7.77615 1 7.50001L1 5.50001C1 5.22387 1.22386 5.00001 1.5 5.00001H2L2 3.75982ZM4 6C4 5.44772 4.44772 5 5 5H11C11.5523 5 12 5.44772 12 6V7.5C12 7.77614 11.7761 8 11.5 8H4.5C4.22386 8 4 7.77614 4 7.5V6ZM3.75 11.5C4.16421 11.5 4.5 11.1642 4.5 10.75C4.5 10.3358 4.16421 10 3.75 10C3.33579 10 3 10.3358 3 10.75C3 11.1642 3.33579 11.5 3.75 11.5ZM13 10.75C13 11.1642 12.6642 11.5 12.25 11.5C11.8358 11.5 11.5 11.1642 11.5 10.75C11.5 10.3358 11.8358 10 12.25 10C12.6642 10 13 10.3358 13 10.75ZM6.25 10C6.11193 10 6 10.1119 6 10.25V10.75C6 10.8881 6.11193 11 6.25 11H9.75C9.88807 11 10 10.8881 10 10.75V10.25C10 10.1119 9.88807 10 9.75 10H6.25Z"
            })
        })
    })
}
function $W(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M10 2.5H10.5C11.0523 2.5 11.5 2.94772 11.5 3.5V12.5C11.5 13.0523 11.0523 13.5 10.5 13.5H5.5C4.94772 13.5 4.5 13.0523 4.5 12.5V3.5C4.5 2.94772 4.94772 2.5 5.5 2.5H6V3C6 3.55228 6.44772 4 7 4H9C9.55228 4 10 3.55228 10 3V2.5ZM3 3.5C3 2.11929 4.11929 1 5.5 1H10.5C11.8807 1 13 2.11929 13 3.5V12.5C13 13.8807 11.8807 15 10.5 15H5.5C4.11929 15 3 13.8807 3 12.5V3.5Z"
            })
        })
    })
}
function FW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M11 1.324c0-.116 0-.174.023-.218a.2.2 0 0 1 .083-.083C11.15 1 11.208 1 11.324 1h.352c.116 0 .174 0 .218.023a.2.2 0 0 1 .083.083c.023.044.023.102.023.218V7h-1V1.324Z"
            }), c.jsx("path", {
                d: "M11 1.324c0-.116 0-.174.023-.218a.2.2 0 0 1 .083-.083C11.15 1 11.208 1 11.324 1h.352c.116 0 .174 0 .218.023a.2.2 0 0 1 .083.083c.023.044.023.102.023.218V7h-1V1.324Z"
            }), c.jsx("path", {
                d: "M11 1.324c0-.116 0-.174.023-.218a.2.2 0 0 1 .083-.083C11.15 1 11.208 1 11.324 1h.352c.116 0 .174 0 .218.023a.2.2 0 0 1 .083.083c.023.044.023.102.023.218V7h-1V1.324Z"
            }), c.jsx("path", {
                d: "M11 1.324c0-.116 0-.174.023-.218a.2.2 0 0 1 .083-.083C11.15 1 11.208 1 11.324 1h.352c.116 0 .174 0 .218.023a.2.2 0 0 1 .083.083c.023.044.023.102.023.218V7h-1V1.324Z"
            }), c.jsx("path", {
                d: "M8 4.324V7H7V4.324c0-.116 0-.174.023-.218a.2.2 0 0 1 .083-.083C7.15 4 7.208 4 7.324 4h.352c.116 0 .174 0 .218.023a.2.2 0 0 1 .083.083C8 4.15 8 4.208 8 4.324Z"
            }), c.jsx("path", {
                d: "M8 4.324V7H7V4.324c0-.116 0-.174.023-.218a.2.2 0 0 1 .083-.083C7.15 4 7.208 4 7.324 4h.352c.116 0 .174 0 .218.023a.2.2 0 0 1 .083.083C8 4.15 8 4.208 8 4.324Z"
            }), c.jsx("path", {
                d: "M8 4.324V7H7V4.324c0-.116 0-.174.023-.218a.2.2 0 0 1 .083-.083C7.15 4 7.208 4 7.324 4h.352c.116 0 .174 0 .218.023a.2.2 0 0 1 .083.083C8 4.15 8 4.208 8 4.324Z"
            }), c.jsx("path", {
                d: "M8 4.324V7H7V4.324c0-.116 0-.174.023-.218a.2.2 0 0 1 .083-.083C7.15 4 7.208 4 7.324 4h.352c.116 0 .174 0 .218.023a.2.2 0 0 1 .083.083C8 4.15 8 4.208 8 4.324Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.174 8.798C1 9.128 1 9.562 1 10.43v1.14c0 .868 0 1.303.174 1.632a1.5 1.5 0 0 0 .624.624c.27.143.61.168 1.202.173v.191c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208C5 14.624 5 14.479 5 14.19V14h6v.19c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208c.058-.11.058-.255.058-.544v-.191c.592-.005.932-.03 1.202-.173a1.5 1.5 0 0 0 .624-.624c.174-.33.174-.764.174-1.632v-1.14c0-.868 0-1.303-.174-1.632a1.5 1.5 0 0 0-.624-.624C13.872 8 13.438 8 12.57 8H3.43c-.868 0-1.303 0-1.632.174a1.5 1.5 0 0 0-.624.624Zm5.884 1.468C7 10.376 7 10.521 7 10.81v.38c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h3.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208c.058-.11.058-.255.058-.544v-.38c0-.29 0-.434-.058-.544a.5.5 0 0 0-.208-.208C11.624 10 11.479 10 11.19 10H7.81c-.29 0-.434 0-.544.058a.5.5 0 0 0-.208.208ZM6 10.81c0-.29 0-.434-.058-.544a.5.5 0 0 0-.208-.208C5.624 10 5.479 10 5.19 10h-.38c-.29 0-.434 0-.544.058a.5.5 0 0 0-.208.208C4 10.376 4 10.521 4 10.81v.38c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208C6 11.624 6 11.479 6 11.19v-.38Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.174 8.798C1 9.128 1 9.562 1 10.43v1.14c0 .868 0 1.303.174 1.632a1.5 1.5 0 0 0 .624.624c.27.143.61.168 1.202.173v.191c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208C5 14.624 5 14.479 5 14.19V14h6v.19c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208c.058-.11.058-.255.058-.544v-.191c.592-.005.932-.03 1.202-.173a1.5 1.5 0 0 0 .624-.624c.174-.33.174-.764.174-1.632v-1.14c0-.868 0-1.303-.174-1.632a1.5 1.5 0 0 0-.624-.624C13.872 8 13.438 8 12.57 8H3.43c-.868 0-1.303 0-1.632.174a1.5 1.5 0 0 0-.624.624Zm5.884 1.468C7 10.376 7 10.521 7 10.81v.38c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h3.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208c.058-.11.058-.255.058-.544v-.38c0-.29 0-.434-.058-.544a.5.5 0 0 0-.208-.208C11.624 10 11.479 10 11.19 10H7.81c-.29 0-.434 0-.544.058a.5.5 0 0 0-.208.208ZM6 10.81c0-.29 0-.434-.058-.544a.5.5 0 0 0-.208-.208C5.624 10 5.479 10 5.19 10h-.38c-.29 0-.434 0-.544.058a.5.5 0 0 0-.208.208C4 10.376 4 10.521 4 10.81v.38c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208C6 11.624 6 11.479 6 11.19v-.38Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.174 8.798C1 9.128 1 9.562 1 10.43v1.14c0 .868 0 1.303.174 1.632a1.5 1.5 0 0 0 .624.624c.27.143.61.168 1.202.173v.191c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208C5 14.624 5 14.479 5 14.19V14h6v.19c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208c.058-.11.058-.255.058-.544v-.191c.592-.005.932-.03 1.202-.173a1.5 1.5 0 0 0 .624-.624c.174-.33.174-.764.174-1.632v-1.14c0-.868 0-1.303-.174-1.632a1.5 1.5 0 0 0-.624-.624C13.872 8 13.438 8 12.57 8H3.43c-.868 0-1.303 0-1.632.174a1.5 1.5 0 0 0-.624.624Zm5.884 1.468C7 10.376 7 10.521 7 10.81v.38c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h3.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208c.058-.11.058-.255.058-.544v-.38c0-.29 0-.434-.058-.544a.5.5 0 0 0-.208-.208C11.624 10 11.479 10 11.19 10H7.81c-.29 0-.434 0-.544.058a.5.5 0 0 0-.208.208ZM6 10.81c0-.29 0-.434-.058-.544a.5.5 0 0 0-.208-.208C5.624 10 5.479 10 5.19 10h-.38c-.29 0-.434 0-.544.058a.5.5 0 0 0-.208.208C4 10.376 4 10.521 4 10.81v.38c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208C6 11.624 6 11.479 6 11.19v-.38Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.174 8.798C1 9.128 1 9.562 1 10.43v1.14c0 .868 0 1.303.174 1.632a1.5 1.5 0 0 0 .624.624c.27.143.61.168 1.202.173v.191c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208C5 14.624 5 14.479 5 14.19V14h6v.19c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208c.058-.11.058-.255.058-.544v-.191c.592-.005.932-.03 1.202-.173a1.5 1.5 0 0 0 .624-.624c.174-.33.174-.764.174-1.632v-1.14c0-.868 0-1.303-.174-1.632a1.5 1.5 0 0 0-.624-.624C13.872 8 13.438 8 12.57 8H3.43c-.868 0-1.303 0-1.632.174a1.5 1.5 0 0 0-.624.624Zm5.884 1.468C7 10.376 7 10.521 7 10.81v.38c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h3.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208c.058-.11.058-.255.058-.544v-.38c0-.29 0-.434-.058-.544a.5.5 0 0 0-.208-.208C11.624 10 11.479 10 11.19 10H7.81c-.29 0-.434 0-.544.058a.5.5 0 0 0-.208.208ZM6 10.81c0-.29 0-.434-.058-.544a.5.5 0 0 0-.208-.208C5.624 10 5.479 10 5.19 10h-.38c-.29 0-.434 0-.544.058a.5.5 0 0 0-.208.208C4 10.376 4 10.521 4 10.81v.38c0 .29 0 .434.058.544a.5.5 0 0 0 .208.208c.11.058.255.058.544.058h.38c.29 0 .434 0 .544-.058a.5.5 0 0 0 .208-.208C6 11.624 6 11.479 6 11.19v-.38Z"
            })]
        })
    })
}
function NW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8 7C8.82843 7 9.5 6.32843 9.5 5.5C9.5 4.67157 8.82843 4 8 4C7.17157 4 6.5 4.67157 6.5 5.5C6.5 6.32843 7.17157 7 8 7Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.25 1C1.55964 1 1 1.55964 1 2.25V8.75C1 9.41246 1.51533 9.95456 2.16698 9.99729C2.17772 9.99907 2.18875 10 2.2 10H13.8C13.8112 10 13.8223 9.99907 13.833 9.99729C14.4847 9.95456 15 9.41246 15 8.75V2.25C15 1.55964 14.4404 1 13.75 1H2.25ZM2.5 7.03023C3.24528 7.16713 3.83287 7.75472 3.96977 8.5H12.0302C12.1671 7.75472 12.7547 7.16713 13.5 7.03023V3.96977C12.7547 3.83287 12.1671 3.24528 12.0302 2.5H3.96977C3.83287 3.24528 3.24528 3.83287 2.5 3.96977V7.03023Z"
            }), c.jsx("path", {
                d: "M1 11.5V11H15V11.5C15 12.0523 14.5523 12.5 14 12.5H2C1.44772 12.5 1 12.0523 1 11.5Z"
            }), c.jsx("path", {
                d: "M1 14V13.5H15V14C15 14.5523 14.5523 15 14 15H2C1.44772 15 1 14.5523 1 14Z"
            })]
        })
    })
}
function VW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M12.897 2.557c.268.208-.035.62-.373.552A5.458 5.458 0 0 0 11.434 3C8.555 3 6 5.239 6 8s2.553 5 5.435 5c.373 0 .738-.038 1.09-.11.337-.068.64.345.372.553A7.472 7.472 0 0 1 8.304 15C4.27 15 1 11.866 1 8s3.27-7 7.304-7c1.74 0 3.339.583 4.593 1.557Z"
            }), c.jsx("path", {
                d: "M9.12 8.195a.218.218 0 0 1 0-.39l.426-.212a4.577 4.577 0 0 0 2.046-2.047l.213-.426c.08-.16.31-.16.39 0l.213.426a4.577 4.577 0 0 0 2.046 2.047l.425.212c.161.08.161.31 0 .39l-.425.212a4.577 4.577 0 0 0-2.046 2.047l-.213.425c-.08.161-.31.161-.39 0l-.213-.425a4.577 4.577 0 0 0-2.046-2.047l-.426-.212Z"
            })]
        })
    })
}
function BW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("svg", {
                children: c.jsx("path", {
                    d: "M14.2994 14.0165C14.918 13.8192 15.1804 13.0923 14.8677 12.5151L8.9336 1.56073C8.52859 0.813089 7.47141 0.813091 7.0664 1.56073L1.1323 12.5151C0.819613 13.0923 1.08197 13.8192 1.70057 14.0165C1.8343 14.0592 1.9683 14.1004 2.10257 14.1403C5.96173 15.2866 10.0383 15.2866 13.8974 14.1403C14.0317 14.1004 14.1657 14.0592 14.2994 14.0165ZM10.467 7.80774C10.2381 8.15661 9.95257 8.54009 9.56836 8.81897C9.56836 8.81897 8.51122 7.81904 8.06836 7.81901C7.56836 7.81897 6.06836 8.81901 6.06836 8.81901C6.06836 8.81901 5.70485 8.36728 5.44099 7.97759L8 3.25367L10.467 7.80774Z"
                })
            })
        })
    })
}
function UW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M6 3C6.55228 3 7 2.55228 7 2C7 1.44772 6.55228 1 6 1C5.44772 1 5 1.44772 5 2C5 2.55228 5.44772 3 6 3Z"
            }), c.jsx("path", {
                d: "M12.3448 6.65217C12.2689 6.65217 12.1973 6.69083 12.1517 6.75652L7.51724 13.4348C6.83346 14.4201 5.76033 15 4.62069 15H2.68966C1.75648 15 1 14.1824 1 13.1739C1 12.1654 1.75648 11.3478 2.68966 11.3478H4.62069C4.69667 11.3478 4.76821 11.3092 4.81379 11.2435L9.44828 4.56522C10.1321 3.57989 11.2052 3 12.3448 3H13.3103C14.2435 3 15 3.81757 15 4.82609C15 5.83461 14.2435 6.65217 13.3103 6.65217H12.3448Z"
            }), c.jsx("path", {
                d: "M8 4.5L4.5 9V5C4.5 4.44772 4.94772 4 5.5 4H6.2918C6.75753 4 7.21687 4.10844 7.63344 4.31672L8 4.5Z"
            })]
        })
    })
}
function HW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15 3.18a2 2 0 0 0-2.329-1.972l-7 1.166A2 2 0 0 0 4 4.347V11.8a.2.2 0 0 1-.2.2H2.5c-1 0-1.5.566-1.5 1.351C1 14.261 1.738 15 2.649 15H3.5A2.5 2.5 0 0 0 6 12.5V7.51a.2.2 0 0 1 .167-.198l6.6-1.1A.2.2 0 0 1 13 6.41v4.39a.2.2 0 0 1-.2.2h-1.3c-1 0-1.5.566-1.5 1.351 0 .91.738 1.649 1.649 1.649h.851a2.5 2.5 0 0 0 2.5-2.5V3.18Zm-2.167 2.008A.2.2 0 0 0 13 4.99V3.417a.2.2 0 0 0-.233-.198l-6.6 1.1A.2.2 0 0 0 6 4.517V6.09a.2.2 0 0 0 .233.198l6.6-1.1Z"
            })
        })
    })
}
function zW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.5 5.5H10.5C11.3284 5.5 12 6.17157 12 7C12 7.82843 11.3284 8.5 10.5 8.5H5.5C4.67157 8.5 4 7.82843 4 7C4 6.17157 4.67157 5.5 5.5 5.5ZM6 7C6 7.41421 5.66421 7.75 5.25 7.75C4.83579 7.75 4.5 7.41421 4.5 7C4.5 6.58579 4.83579 6.25 5.25 6.25C5.66421 6.25 6 6.58579 6 7ZM10.75 7.75C11.1642 7.75 11.5 7.41421 11.5 7C11.5 6.58579 11.1642 6.25 10.75 6.25C10.3358 6.25 10 6.58579 10 7C10 7.41421 10.3358 7.75 10.75 7.75Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.10899 3.54601C1 3.75992 1 4.03995 1 4.6V11.4C1 11.9601 1 12.2401 1.10899 12.454C1.20487 12.6422 1.35785 12.7951 1.54601 12.891C1.75992 13 2.03995 13 2.6 13H3.88191C4.0713 13 4.24443 12.893 4.32913 12.7236L4.77634 11.8292C5.03043 11.321 5.54982 11 6.11798 11H9.88191C10.4501 11 10.9695 11.321 11.2236 11.8292L11.6708 12.7236C11.7555 12.893 11.9286 13 12.118 13H13.4C13.9601 13 14.2401 13 14.454 12.891C14.6422 12.7951 14.7951 12.6422 14.891 12.454C15 12.2401 15 11.9601 15 11.4V4.6C15 4.03995 15 3.75992 14.891 3.54601C14.7951 3.35785 14.6422 3.20487 14.454 3.10899C14.2401 3 13.9601 3 13.4 3H2.6C2.03995 3 1.75992 3 1.54601 3.10899C1.35785 3.20487 1.20487 3.35785 1.10899 3.54601ZM3 7C3 5.61929 4.11929 4.5 5.5 4.5H10.5C11.8807 4.5 13 5.61929 13 7C13 8.38071 11.8807 9.5 10.5 9.5H5.5C4.11929 9.5 3 8.38071 3 7Z"
            }), c.jsx("path", {
                d: "M10.3291 12.2764C10.4954 12.6088 10.2536 13 9.88192 13H6.11798C5.74629 13 5.50454 12.6088 5.67077 12.2764C5.75546 12.107 5.9286 12 6.11798 12H9.88191C10.0713 12 10.2444 12.107 10.3291 12.2764Z"
            })]
        })
    })
}
function ZW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M13.4884 12.3452C14.4348 11.1515 15 9.64173 15 8C15 4.13403 11.866 1 8 1C6.9264 1 5.90926 1.24169 5 1.67363C3.04433 2.60268 1.58778 4.41184 1.14221 6.58926C1.04897 7.04494 1 7.51675 1 8C1 11.866 4.134 15 8 15C8.38169 15 8.75624 14.9694 9.12135 14.9107C10.8839 14.6269 12.4263 13.685 13.4884 12.3452ZM8.79711 14.4516L8.78946 14.45L7.4072 13.9685C7.28131 13.9247 7.17816 13.8324 7.12064 13.7122L6.60712 12.6389C6.4762 12.3652 6.06897 12.4321 6.03241 12.7333C6.01392 12.8855 5.88467 13 5.73129 13H5.5C5.22385 13 5 12.7761 5 12.5V8.53674C5 8.51227 4.9982 8.48785 4.99463 8.46368L4.64203 6.0769C4.60577 5.83167 4.39529 5.65002 4.1474 5.65002H3.5C3.22385 5.65002 3 5.42615 3 5.15002V4.5C3 4.22388 3.22385 4 3.5 4H4.98251C5.06314 4 5.14258 4.01953 5.21405 4.05682L6.1579 4.54999L6.90256 4.94794C6.96674 4.98224 7.03766 5.00208 7.11032 5.00616L8.14481 5.06396C8.47122 5.08221 8.6926 5.40369 8.59326 5.71515L8.35342 6.46698C8.29779 6.64142 8.34195 6.83234 8.46854 6.9646L8.76297 7.27228C9.01834 7.53918 9.46503 7.44653 9.59317 7.10004L9.83209 6.45398C9.92569 6.20087 10.2032 6.06775 10.4592 6.15308L12.6581 6.88605C12.8623 6.9541 13 7.14514 13 7.36035V7.78534C13 7.92242 12.9437 8.05347 12.8444 8.14783L11.5767 9.35217C11.4773 9.44653 11.4211 9.57758 11.4211 9.71466V10.3751C11.4211 10.5181 11.4823 10.6543 11.5893 10.7492L12.4467 11.5094C12.7115 11.7443 12.6552 12.1724 12.3386 12.3307L12.2236 12.3882C12.0829 12.4586 11.9171 12.4586 11.7764 12.3882L11.0647 12.0323C11.0458 12.0229 11.0264 12.0147 11.0066 12.0078C10.9813 11.9989 10.9552 11.992 10.9288 11.9873L9.90347 11.8047C9.59708 11.7501 9.3158 11.9857 9.3158 12.2969V12.4971C9.3158 12.6833 9.41922 12.8541 9.58423 12.9402L11.0834 13.7236C10.3878 14.0991 9.61599 14.3515 8.79711 14.4516ZM9.71014 3.28986L9.35355 3.64642C9.15829 3.84174 9.15829 4.15826 9.35355 4.35358L10.7452 5.74518C10.8973 5.89734 11.1299 5.93506 11.3223 5.83881L12.2294 5.38531C12.5728 5.21362 12.6025 4.73505 12.2831 4.52209L10.3411 3.22736C10.1428 3.09515 9.87869 3.12134 9.71014 3.28986Z"
            })
        })
    })
}
function qW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5.12109 1H10.8789C11.2743 0.999987 11.6153 0.999976 11.8963 1.02293C12.1928 1.04715 12.4877 1.10064 12.7715 1.24524C13.1948 1.46095 13.5391 1.80516 13.7548 2.22852C13.8994 2.51231 13.9528 2.80722 13.9771 3.10373C14 3.38466 14 3.72572 14 4.12108V5.00027C13.4686 4.99165 12.9346 5.19007 12.5291 5.59553L12.5 5.62463V4.15C12.5 3.71759 12.4994 3.43838 12.4821 3.22588C12.4654 3.02213 12.4372 2.94659 12.4183 2.90951C12.3464 2.76839 12.2316 2.65365 12.0905 2.58175C12.0534 2.56285 11.9779 2.53459 11.7741 2.51795C11.5616 2.50058 11.2824 2.5 10.85 2.5H5.15C4.71759 2.5 4.43838 2.50058 4.22588 2.51795C4.02213 2.53459 3.94659 2.56285 3.90951 2.58175C3.76839 2.65365 3.65365 2.76839 3.58175 2.90951C3.56285 2.94659 3.53459 3.02213 3.51795 3.22588C3.50058 3.43838 3.5 3.71759 3.5 4.15V11.85C3.5 12.2824 3.50058 12.5616 3.51795 12.7741C3.53459 12.9779 3.56285 13.0534 3.58175 13.0905C3.65365 13.2316 3.76839 13.3464 3.90951 13.4183C3.94659 13.4372 4.02213 13.4654 4.22588 13.4821C4.43838 13.4994 4.71759 13.5 5.15 13.5H5.26017C5.11678 13.9039 5.02909 14.3288 5.00227 14.7633C4.99728 14.8441 5.00061 14.9232 5.01146 15C4.66238 14.9998 4.35835 14.9979 4.10373 14.9771C3.80722 14.9528 3.51231 14.8994 3.22852 14.7548C2.80516 14.5391 2.46095 14.1948 2.24524 13.7715C2.10064 13.4877 2.04715 13.1928 2.02293 12.8963C1.99998 12.6153 1.99999 12.2743 2 11.8789V4.12109C1.99999 3.72573 1.99998 3.38466 2.02293 3.10373C2.04715 2.80722 2.10064 2.51231 2.24524 2.22852C2.46095 1.80516 2.80516 1.46095 3.22852 1.24524C3.51231 1.10064 3.80722 1.04715 4.10373 1.02293C4.38466 0.999976 4.72573 0.999987 5.12109 1Z"
            }), c.jsx("path", {
                d: "M8.8336 15H10.8789C11.2743 15 11.6153 15 11.8963 14.9771C12.1928 14.9528 12.4877 14.8994 12.7715 14.7548C13.1948 14.5391 13.5391 14.1948 13.7548 13.7715C13.8994 13.4877 13.9528 13.1928 13.9771 12.8963C14 12.6153 14 12.2743 14 11.8789V9.87548L12.5 11.3755V11.85C12.5 12.2824 12.4994 12.5616 12.4821 12.7741C12.4654 12.9779 12.4372 13.0534 12.4183 13.0905C12.3464 13.2316 12.2316 13.3464 12.0905 13.4183C12.0534 13.4372 11.9779 13.4654 11.7741 13.4821C11.5616 13.4994 11.2824 13.5 10.85 13.5H10.3755L9.22461 14.6509C9.10042 14.7751 8.96983 14.8916 8.8336 15Z"
            }), c.jsx("path", {
                d: "M12.5 9.96128L14 8.46126V6.00053C13.7246 5.99174 13.4464 6.09244 13.2362 6.30263L12.5 7.03886V9.96128Z"
            }), c.jsx("path", {
                d: "M10.9778 7.14686L9.62468 8.5H5.25C5.11193 8.5 5 8.38807 5 8.25V7.25C5 7.11193 5.11193 7 5.25 7H10.75C10.8513 7 10.9385 7.06024 10.9778 7.14686Z"
            }), c.jsx("path", {
                d: "M8.1247 10L6.62472 11.5H5.25C5.11193 11.5 5 11.3881 5 11.25V10.25C5 10.1119 5.11193 10 5.25 10H8.1247Z"
            }), c.jsx("path", {
                d: "M8.03892 11.5L9.5389 10H10.75C10.8881 10 11 10.1119 11 10.25V11.25C11 11.3881 10.8881 11.5 10.75 11.5H8.03892Z"
            }), c.jsx("path", {
                d: "M6.34047 13.5H8.96133L8.5175 13.9438C8.09147 14.3699 7.56943 14.6799 7.00085 14.8516C6.96777 14.8616 6.93357 14.8714 6.90017 14.8805C6.66469 14.9442 6.42187 14.9845 6.17512 14.9997C6.07618 15.0058 5.99426 14.9238 6.00037 14.8249C6.0156 14.5782 6.05588 14.3353 6.11966 14.0998C6.1287 14.0665 6.13822 14.0332 6.1482 14.0001C6.19988 13.8291 6.26436 13.6613 6.34047 13.5Z"
            }), c.jsx("path", {
                d: "M5 4.25C5 4.11193 5.11193 4 5.25 4H10.75C10.8881 4 11 4.11193 11 4.25V5.25C11 5.38807 10.8881 5.5 10.75 5.5H5.25C5.11193 5.5 5 5.38807 5 5.25V4.25Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14.6974 6.30263C15.1009 6.70613 15.1009 7.36032 14.6974 7.76382L8.5175 13.9438C7.89163 14.5697 7.05856 14.9452 6.17512 14.9997C6.07618 15.0058 5.99426 14.9238 6.00037 14.8249C6.0549 13.9415 6.43036 13.1085 7.05618 12.4827L13.2362 6.30263C13.6397 5.89912 14.2939 5.89912 14.6974 6.30263Z"
            })]
        })
    })
}
function WW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8 1C8.65232 1 9.26816 1.15615 9.8122 1.4331C8.73184 2.02892 8 3.17899 8 4.5C8 6.433 9.567 8 11.5 8C11.6698 8 11.8367 7.98791 12 7.96456V8.03028L13.6838 9.60844C13.8856 9.7975 14 10.0616 14 10.3381V11C14 11.5523 13.5523 12 13 12H3C2.44772 12 2 11.5523 2 11V10.3381C2 10.0616 2.11445 9.7975 2.31616 9.60844L4 8.03028V5C4 2.79086 5.79086 1 8 1Z"
            }), c.jsx("path", {
                d: "M10 13C10 14.1046 9.10457 15 8 15C6.94564 15 6.08183 14.1841 6.00549 13.1493L6 13H10Z"
            }), c.jsx("path", {
                d: "M11.5 7C12.8807 7 14 5.88071 14 4.5C14 3.11929 12.8807 2 11.5 2C10.1193 2 9 3.11929 9 4.5C9 5.88071 10.1193 7 11.5 7Z"
            })]
        })
    })
}
function GW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M6.75 1V6.75C6.75 7.5297 7.34489 8.17045 8.10554 8.24313L8.25 8.25H14V13C14 14.1046 13.1046 15 12 15H4C2.89543 15 2 14.1046 2 13V3C2 1.89543 2.89543 1 4 1H6.75ZM8 1L14 7.03022H9C8.44772 7.03022 8 6.5825 8 6.03022V1Z"
            })
        })
    })
}
function KW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M2 2a1 1 0 0 1 1-1h8a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V2ZM5.5 10.5A.5.5 0 0 1 6 10h1a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H6a.5.5 0 0 1-.5-.5v-4Z"
            }), c.jsx("path", {
                d: "M13 4V2.586A1.5 1.5 0 0 1 14 4v2.569a1.5 1.5 0 0 1-1.393 1.496l-5.143.367a.5.5 0 0 0-.464.5V9H6v-.069a1.5 1.5 0 0 1 1.393-1.496l5.143-.367a.5.5 0 0 0 .464-.5V4Z"
            })]
        })
    })
}
function YW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3 3C3 2.72386 3.22386 2.5 3.5 2.5H6.5C6.77614 2.5 7 2.72386 7 3V4H9V3C9 2.72386 9.22386 2.5 9.5 2.5H12.5C12.7761 2.5 13 2.72386 13 3V4H13.75C14.4404 4 15 4.55964 15 5.25V12.75C15 13.4404 14.4404 14 13.75 14H2.25C1.55964 14 1 13.4404 1 12.75V5.25C1 4.55964 1.55964 4 2.25 4H3V3ZM2.5 5.5V12.5H13.5V5.5H2.5Z"
            })
        })
    })
}
function QW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M1 2.416C1.90415 0.946683 4.1182 0.557873 5.94523 1.54757C7.01067 2.12471 7.78206 3.04318 8 4L7.99903 3.99574C8.21697 3.03892 8.98934 2.12471 10.0548 1.54757C11.8818 0.557873 14.0959 0.946683 15 2.416L10.0004 5.12428C12.8917 5.49314 15 6.64105 15 8H10.1435C9.83683 8 9.60341 8.2737 9.63071 8.57919C9.75262 9.94349 9.56191 11.3231 9.06653 12.6111L8.27099 14.6795C8.19672 14.8726 8.0112 15 7.80431 15H6.7329C6.38201 15 6.14026 14.648 6.26623 14.3205L7.19984 11.8931C7.62801 10.7799 7.76354 9.57867 7.59795 8.40356C7.56472 8.16775 7.35768 8 7.11955 8H1C1 6.64105 3.10833 5.49314 5.99964 5.12428L1 2.416Z"
            })
        })
    })
}
function XW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M6.81079 1.13748C7.30621 1.86467 7.66652 2.8191 7.84667 3.86442C7.93675 4.27346 7.62148 4.59161 7.35125 4.81885L6.3604 5.45514C5.63979 5.95508 8.97263 11.3635 9.73828 10.9545L10.7742 10.3182C11.0444 10.1364 11.4948 10 11.81 10.2727C12.6658 10.909 13.3413 11.6362 13.7917 12.4088C14.0019 12.7421 13.3113 13.5451 11.72 14.8176C8.20698 16.6356 0.5955 4.31891 3.74818 1.95557C5.57974 1.07688 6.60061 0.804191 6.81079 1.13748Z"
            })
        })
    })
}
function JW(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M9.49634 1.07594C8.95044 0.991953 8.5 1.44776 8.5 2.00007V6.50007C8.5 7.05238 8.94775 7.50007 9.5 7.50007H14C14.5522 7.50007 15.0081 7.04963 14.9241 6.50379C14.4946 3.71168 12.2883 1.50544 9.49634 1.07594Z"
            }), c.jsx("path", {
                d: "M14.6721 10.1232C14.8567 9.54316 14.3845 9.00001 13.7759 9.00001H8C7.44775 9.00001 7 8.55226 7 8.00001V2.22407C7 1.61549 6.45679 1.14338 5.87671 1.32777C3.04883 2.22688 1 4.87416 1 8.00001C1 11.866 4.13403 15 8 15C11.1257 15 13.7732 12.9512 14.6721 10.1232Z"
            })]
        })
    })
}
function eG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.10393 2.18318C9.6815 0.605607 12.2393 0.605607 13.8168 2.18318C15.3944 3.76075 15.3944 6.3185 13.8168 7.89607L7.89607 13.8168C6.3185 15.3944 3.76075 15.3944 2.18318 13.8168C0.605607 12.2393 0.605607 9.6815 2.18318 8.10393L8.10393 2.18318ZM6.40512 6.00331C7.31209 6.04087 8.2078 6.39845 8.90029 7.07604C9.61228 7.77271 9.97855 8.67957 9.99909 9.59249L12.7562 6.83541C13.7479 5.84363 13.7479 4.23562 12.7562 3.24384C11.7644 2.25205 10.1564 2.25205 9.16459 3.24384L6.40512 6.00331Z"
            })
        })
    })
}
function tG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M8 1C10.7614 1 13 3.23858 13 6C13 6.98229 12.4873 8.32397 11.5783 10.0457C11.3598 10.4596 11.121 10.8889 10.865 11.3302C10.4183 12.1002 9.94095 12.8704 9.46365 13.6053C9.29659 13.8626 9.14132 14.0972 9.00171 14.3049L8.82279 14.5683C8.42524 15.1439 7.57476 15.1439 7.17721 14.5683L6.8536 14.0884L6.53635 13.6053C6.05905 12.8704 5.58169 12.1002 5.135 11.3302C4.87903 10.8889 4.6402 10.4596 4.42166 10.0457C3.51272 8.32397 3 6.98229 3 6C3 3.23858 5.23858 1 8 1ZM8 4C6.89543 4 6 4.89543 6 6C6 7.10457 6.89543 8 8 8C9.10457 8 10 7.10457 10 6C10 4.89543 9.10457 4 8 4Z"
            })
        })
    })
}
function nG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M12.6927 5.77485C12.728 5.95704 12.6642 6.1427 12.533 6.27391L6.82342 11.9835C6.40697 10.8269 5.30006 10 4 10C3.35363 10 2.75501 10.2044 2.26525 10.5521C0.435957 8.23635 0.590251 4.86602 2.72813 2.72814C5.03232 0.423955 8.76813 0.423955 11.0723 2.72814C11.9368 3.5926 12.4769 4.65857 12.6927 5.77485Z"
            }), c.jsx("path", {
                d: "M2.95945 11.2917C3.2626 11.1066 3.61885 11 4 11C5.00004 11 5.82864 11.734 5.97652 12.6926C5.99198 12.7928 6 12.8955 6 13C6 14.1046 5.10457 15 4 15C2.89543 15 2 14.1046 2 13C2 12.2766 2.38408 11.6429 2.95945 11.2917Z"
            }), c.jsx("path", {
                d: "M12.2876 9.31005C12.0586 9.82241 12.1085 10.4396 12.5053 10.8365L14.8272 13.1584C15.0576 13.3888 15.0576 13.7624 14.8272 13.9928L13.9928 14.8272C13.7624 15.0576 13.3888 15.0576 13.1584 14.8272L10.8365 12.5053C10.4396 12.1085 9.82241 12.0586 9.31005 12.2876C8.82845 12.5029 8.52456 11.9512 8.89758 11.5782L11.5782 8.89759C11.9512 8.52456 12.5029 8.82845 12.2876 9.31005Z"
            })]
        })
    })
}
function rG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "m1.232 12.634-.016-.016.002.002.004.004.01.01a2.257 2.257 0 0 0 .126.12c.08.072.195.17.342.284a8.39 8.39 0 0 0 1.284.813C4.112 14.434 5.773 15 7.957 15c2.14 0 3.67-.416 4.76-.942a6.606 6.606 0 0 0 1.982-1.441l.213-.222a.32.32 0 0 0 0-.44l-.995-1.03a.295.295 0 0 0-.428.002l-.216.224c-.219.227-.624.646-1.406 1.023-.794.384-2.029.747-3.91.747-1.837 0-3.192-.473-4.074-.93a6.39 6.39 0 0 1-.977-.616 3.875 3.875 0 0 1-.27-.228l-.004-.004-.026-.04a.295.295 0 0 0-.426-.071l-1.057.806a.318.318 0 0 0-.093.387l.185.392.017.017Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3.095 9.966a7.025 7.025 0 0 0 4.862 1.916 7.025 7.025 0 0 0 4.862-1.916.308.308 0 0 0 .054-.368l-4.477-8.33a.495.495 0 0 0-.878 0L3.04 9.597a.308.308 0 0 0 .054.368Zm2.852-.163c.555 0 1.005-.465 1.005-1.039 0-.574-.45-1.04-1.005-1.04-.556 0-1.006.466-1.006 1.04 0 .574.45 1.04 1.006 1.04Zm5.026-1.039c0 .574-.45 1.04-1.005 1.04-.556 0-1.006-.466-1.006-1.04 0-.574.45-1.04 1.006-1.04.555 0 1.005.466 1.005 1.04ZM7.957 6.685c.555 0 1.005-.465 1.005-1.039 0-.574-.45-1.04-1.005-1.04-.555 0-1.005.466-1.005 1.04 0 .574.45 1.04 1.005 1.04Z"
            })]
        })
    })
}
function sG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M2.82486 2.04183L11.8217 5.50217C12.231 5.65957 12.3427 6.18609 12.0327 6.49613L10.1429 8.42857L13.8813 12.4865C14.0596 12.7277 14.0346 13.0631 13.8225 13.2751L13.2751 13.8225C13.0631 14.0346 12.7277 14.0596 12.4865 13.8813L8.42857 10.1429L6.49613 12.0327C6.18609 12.3427 5.65957 12.231 5.50217 11.8217L2.04183 2.82486C1.85336 2.33484 2.33484 1.85336 2.82486 2.04183Z"
            })
        })
    })
}
function iG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.35307 1.00796C7.8194 0.940782 7.33067 1.30622 7.26145 1.82418L6.0082 11.2027C5.93899 11.7207 6.3155 12.195 6.84917 12.2622L12.6469 12.992C13.1806 13.0592 13.6693 12.6938 13.7385 12.1758L14.9918 2.79727C15.061 2.27931 14.6845 1.80496 14.1508 1.73778L8.35307 1.00796ZM8.94746 6.46028L10.8413 4.52422C10.888 4.47657 10.9673 4.48701 11 4.5451L12.3283 6.90532C12.3501 6.94405 12.3437 6.99252 12.3126 7.02429L10.4188 8.96035C10.3721 9.00801 10.2928 8.99756 10.2601 8.93947L8.9318 6.57925C8.91 6.54052 8.91638 6.49205 8.94746 6.46028Z"
            }), c.jsx("path", {
                d: "M4.72462 12.1824L5.78251 3L1.56112 4.79638C1.11286 4.98712 0.886844 5.55083 1.05629 6.05545L3.84758 14.3683C4.01703 14.8729 4.51777 15.1274 4.96602 14.9366L8 13.6456L5.4735 13.2767C4.99827 13.2073 4.66299 12.7173 4.72462 12.1824Z"
            })]
        })
    })
}
function aG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.25 9.05V6H8.75V9.05C8.75 9.16046 8.83954 9.25 8.95 9.25H13.8C13.9105 9.25 14 9.16046 14 9.05V7H15V6C15 5.44772 14.5523 5 14 5H12H11.5002C11.814 4.58217 12 4.0628 12 3.5V3.375C12 2.06332 10.9367 1 9.625 1C8.99639 1 8.42483 1.24421 8 1.64294C7.57517 1.24421 7.00361 1 6.375 1C5.06332 1 4 2.06332 4 3.375V3.5C4 4.0628 4.18597 4.58217 4.49982 5H4H2C1.44772 5 1 5.44772 1 6V7H2V9.05C2 9.16046 2.08954 9.25 2.2 9.25H7.05C7.16046 9.25 7.25 9.16046 7.25 9.05ZM5.5 3.375C5.5 2.89175 5.89175 2.5 6.375 2.5C6.85825 2.5 7.25 2.89175 7.25 3.375V4.5H6.5C5.94772 4.5 5.5 4.05228 5.5 3.5V3.375ZM8.75 4.5H9.5C10.0523 4.5 10.5 4.05228 10.5 3.5V3.375C10.5 2.89175 10.1082 2.5 9.625 2.5C9.14175 2.5 8.75 2.89175 8.75 3.375V4.5ZM13.8 10.75C13.9105 10.75 14 10.8395 14 10.95V13C14 14.1046 13.1046 15 12 15H8.75V10.95C8.75 10.8395 8.83954 10.75 8.95 10.75H13.8ZM7.25 10.95V15H4C2.89543 15 2 14.1046 2 13V10.95C2 10.8395 2.08954 10.75 2.2 10.75H7.05C7.16046 10.75 7.25 10.8395 7.25 10.95Z"
            })
        })
    })
}
function oG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M3 5C4.10457 5 5 4.10457 5 3C5 1.89543 4.10457 1 3 1C1.89543 1 1 1.89543 1 3C1 4.10457 1.89543 5 3 5Z"
            }), c.jsx("path", {
                d: "M13 15C14.1046 15 15 14.1046 15 13C15 11.8954 14.1046 11 13 11C11.8954 11 11 11.8954 11 13C11 14.1046 11.8954 15 13 15Z"
            }), c.jsx("path", {
                d: "M11.7497 3.75H6.74973C6.33552 3.75 5.99973 3.41421 5.99973 3C5.99973 2.58579 6.33552 2.25 6.74973 2.25H11.7497C13.5446 2.25 14.9997 3.70507 14.9997 5.5C14.9997 7.21071 13.678 8.61272 12 8.74051V7.23224C12.8479 7.11081 13.4997 6.38152 13.4997 5.5C13.4997 4.5335 12.7162 3.75 11.7497 3.75Z"
            }), c.jsx("path", {
                d: "M4 7.25947C2.32189 7.38713 1 8.78919 1 10.5C1 12.2949 2.45507 13.75 4.25 13.75H9.24973C9.66395 13.75 9.99973 13.4142 9.99973 13C9.99973 12.5858 9.66395 12.25 9.24973 12.25H4.25C3.2835 12.25 2.5 11.4665 2.5 10.5C2.5 9.61838 3.15193 8.88903 4 8.76772V7.25947Z"
            }), c.jsx("path", {
                d: "M7.62023 5.15731L5.15731 7.62023C4.94756 7.82997 4.94756 8.17003 5.15731 8.37977L7.62023 10.8427C7.82997 11.0524 8.17003 11.0524 8.37977 10.8427L10.8427 8.37977C11.0524 8.17003 11.0524 7.82997 10.8427 7.62023L8.37977 5.15731C8.17003 4.94756 7.82997 4.94756 7.62023 5.15731Z"
            })]
        })
    })
}
function cG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5.93794 1.5402C5.64436 1.0042 4.98536 0.813524 4.53835 1.21483C2.44513 3.09399 1.85548 6.33674 3.27947 8.9365C4.70347 11.5363 7.66257 12.6194 10.2531 11.6482C10.8063 11.4408 10.9792 10.7439 10.6856 10.2079L5.93794 1.5402Z"
            }), c.jsx("path", {
                d: "M13.3441 2.81158L6.29885 7.09904L4.55561 3.91643C6.07606 4.40564 9.96239 4.86957 13.3441 2.81158Z"
            }), c.jsx("path", {
                d: "M13.3441 2.81158L6.29885 7.09904L8.0421 10.2817C8.40039 8.64914 9.96239 4.86957 13.3441 2.81158Z"
            }), c.jsx("path", {
                d: "M12.9187 4.48496C12.3629 4.82323 11.6521 4.62248 11.3312 4.03658C11.0103 3.45068 11.2007 2.70148 11.7566 2.36321C12.3124 2.02494 13.0232 2.22568 13.3441 2.81158C13.665 3.39749 13.4746 4.14668 12.9187 4.48496Z"
            }), c.jsx("path", {
                d: "M3 15C3 13.8954 3.89543 13 5 13H11C12.1046 13 13 13.8954 13 15H3Z"
            })]
        })
    })
}
function lG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "m2.507 2.247.074-.037a.5.5 0 0 1 .655.195L5.333 6h-1L2.314 2.971a.5.5 0 0 1 .193-.724ZM6.523 6h.935L6.192 2.527a.5.5 0 0 0-.693-.276l-.075.037a.5.5 0 0 0-.235.647L6.523 6ZM1 8a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v1H1V8ZM1.083 10h13.834A6.002 6.002 0 0 1 9 15H7a6.002 6.002 0 0 1-5.917-5Z"
            })
        })
    })
}
function dG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1.25193 4.97805L7.75193 1.14417C7.90565 1.05351 8.09435 1.05351 8.24807 1.14417L14.7481 4.97805C14.9039 5.06994 15 5.24095 15 5.42615V6.30172C15 6.69799 14.5853 6.94642 14.2519 6.74982L8.24807 3.20857C8.09435 3.1179 7.90565 3.1179 7.75193 3.20857L1.74807 6.74982C1.41474 6.94642 1 6.69799 1 6.30172V5.42615C1 5.24095 1.09614 5.06994 1.25193 4.97805Z"
            }), c.jsx("path", {
                d: "M1.25193 9.10685L7.75193 5.27297C7.90565 5.1823 8.09435 5.1823 8.24807 5.27297L14.7481 9.10685C14.9039 9.19874 15 9.36975 15 9.55495V10.4305C15 10.8268 14.5853 11.0752 14.2519 10.8786L8.24807 7.33737C8.09435 7.2467 7.90565 7.2467 7.75193 7.33737L1.74807 10.8786C1.41474 11.0752 1 10.8268 1 10.4305V9.55495C1 9.36975 1.09614 9.19874 1.25193 9.10685Z"
            }), c.jsx("path", {
                d: "M7.74315 9.40694L1.25193 13.2356C1.09614 13.3275 1 13.4985 1 13.6837V14.5593C1 14.9556 1.41474 15.204 1.74807 15.0074L7.75193 11.4662C7.90565 11.3755 8.09435 11.3755 8.24807 11.4662L14.2519 15.0074C14.5853 15.204 15 14.9556 15 14.5593V13.5C15 13.3204 14.9095 13.1536 14.7611 13.0598L8.2523 9.41489C8.0967 9.31656 7.90156 9.31351 7.74315 9.40694Z"
            })]
        })
    })
}
function uG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M6.17651 2.04996C6.95681 0.651792 9.01151 0.649555 9.79501 2.04601L10.997 4.18828L11.4779 3.87522C11.6685 3.75118 11.9154 3.74624 12.111 3.86255C12.3066 3.97887 12.4154 4.19536 12.3901 4.41765L12.0949 7.00667C12.0748 7.18304 11.9724 7.34047 11.8176 7.43331C11.6627 7.52615 11.4727 7.544 11.3025 7.48169L8.94618 6.61866C8.73918 6.54284 8.59307 6.36022 8.5678 6.14572C8.54254 5.93121 8.64236 5.72095 8.82633 5.60121L9.52086 5.14912L8.24517 2.87544C8.13324 2.67594 7.83971 2.67627 7.72824 2.876L6.25747 5.51137L4.67432 4.74164L6.17651 2.04996Z"
            }), c.jsx("path", {
                d: "M3.77525 9.95911L4.44834 10.323C4.6423 10.4278 4.88011 10.4175 5.06373 10.2962C5.24734 10.1748 5.34567 9.9631 5.31818 9.74826L5.02363 7.44692C5.00125 7.27204 4.89803 7.11683 4.74355 7.02574C4.58907 6.93466 4.40036 6.91775 4.23148 6.97986L1.87336 7.84714C1.65841 7.92619 1.51011 8.12005 1.49343 8.34377C1.47675 8.5675 1.59472 8.78029 1.79567 8.88893L2.22902 9.1232L1.25437 10.8696C0.505496 12.2115 1.49996 13.847 3.06472 13.847H4.4375V12.121H3.06472C2.84119 12.121 2.69912 11.8873 2.8061 11.6956L3.77525 9.95911Z"
            }), c.jsx("path", {
                d: "M9.15231 13.847H12.9353C14.5021 13.847 15.4963 12.2076 14.7434 10.8657L13.3892 8.45198L11.8795 9.35295L13.1936 11.6951C13.3011 11.8868 13.1591 12.121 12.9353 12.121H9.15253L9.1526 11.5475C9.15263 11.3243 9.02045 11.1212 8.8135 11.0265C8.60654 10.9318 8.36216 10.9625 8.18654 11.1054L6.41819 12.5436C6.28382 12.6529 6.2061 12.8149 6.20607 12.9856C6.20604 13.1564 6.2837 13.3184 6.41803 13.4277L8.18602 14.8667C8.36161 15.0096 8.60599 15.0404 8.81298 14.9457C9.01998 14.8511 9.15221 14.648 9.15224 14.4248L9.15231 13.847Z"
            })]
        })
    })
}
function hG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M9 2C9 2.37014 8.7989 2.69331 8.5 2.86622V3.5C8.5 3.77614 8.72386 4 9 4H9.5C10.8978 4 11.5967 4 12.1481 4.22836C12.8831 4.53284 13.4672 5.11687 13.7716 5.85195C14 6.40326 14 7.10218 14 8.5C14 9.89782 14 10.5967 13.7716 11.1481C13.4672 11.8831 12.8831 12.4672 12.1481 12.7716C11.7135 12.9516 11.1872 12.9898 10.2992 12.9978C10.1339 12.9993 10 13.1333 10 13.2986V13.7C10 13.8657 10.1343 14 10.3 14H10.5C10.7761 14 11 14.2239 11 14.5V14.8C11 14.9105 10.9105 15 10.8 15H5.2C5.08954 15 5 14.9105 5 14.8V14.5C5 14.2239 5.22386 14 5.5 14H5.7C5.86569 14 6 13.8657 6 13.7V13.2986C6 13.1333 5.86611 12.9993 5.70078 12.9978C4.81279 12.9898 4.28652 12.9516 3.85195 12.7716C3.11687 12.4672 2.53284 11.8831 2.22836 11.1481C2 10.5967 2 9.89782 2 8.5C2 7.10218 2 6.40326 2.22836 5.85195C2.53284 5.11687 3.11687 4.53284 3.85195 4.22836C4.40326 4 5.10218 4 6.5 4H7C7.27614 4 7.5 3.77614 7.5 3.5V2.86622C7.2011 2.69331 7 2.37014 7 2C7 1.44772 7.44772 1 8 1C8.55228 1 9 1.44772 9 2ZM5 8C5.55228 8 6 7.55228 6 7C6 6.44772 5.55228 6 5 6C4.44772 6 4 6.44772 4 7C4 7.55228 4.44772 8 5 8ZM12 7C12 7.55228 11.5523 8 11 8C10.4477 8 10 7.55228 10 7C10 6.44772 10.4477 6 11 6C11.5523 6 12 6.44772 12 7ZM6.4 9C6.17909 9 6 9.17909 6 9.4V10.1C6 10.3209 6.17909 10.5 6.4 10.5H9.6C9.82091 10.5 10 10.3209 10 10.1V9.4C10 9.17909 9.82091 9 9.6 9H6.4Z"
            })
        })
    })
}
function fG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M6.69274 4.18919C8.36389 2.6294 10.8876 1 14.1451 1C14.6124 1 14.9912 1.37885 14.9912 1.84618C14.9912 4.69767 13.342 7.22214 11.8203 8.96126C11.4703 9.36129 10.8756 9.96395 10.2759 10.5498L10.8628 11.7236C10.9475 11.893 10.9292 12.0957 10.8156 12.2472L8.90097 14.8C8.61267 15.1844 8.00097 14.9805 8.00097 14.5V12.6287C7.92539 12.6892 7.85733 12.7427 7.79777 12.7889C7.71193 12.8555 7.64364 12.9069 7.59582 12.9425L7.59382 12.944L7.52359 12.9955L7.51959 12.9983L7.51726 13C7.18099 13.2402 6.71916 13.2031 6.4264 12.9103L3.04179 9.52559C2.77198 9.25576 2.71613 8.83873 2.90544 8.50743L2.91648 8.48866L3.08529 8.21512C3.12575 8.15217 3.17301 8.0801 3.22699 8H1.50097C1.02046 8 0.816565 7.3883 1.20097 7.1L3.75376 5.18541C3.90526 5.07178 4.10797 5.0535 4.27736 5.1382L5.25877 5.6289C5.79413 5.06851 6.33441 4.52364 6.69274 4.18919ZM2.91648 8.48866L2.90642 8.50573L2.90716 8.50443L2.91015 8.49925L2.91648 8.48866ZM5.00097 13L3.00097 11C2.00097 11 1.00097 15 1.00097 15C1.00097 15 5.00097 14 5.00097 13ZM11.75 5.5C12.4403 5.5 13 4.94036 13 4.25C13 3.55964 12.4403 3 11.75 3C11.0596 3 10.5 3.55964 10.5 4.25C10.5 4.94036 11.0596 5.5 11.75 5.5Z"
            })
        })
    })
}
function pG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M10.25 3.5C10.9404 3.5 11.5 2.94036 11.5 2.25C11.5 1.55964 10.9404 1 10.25 1C9.55964 1 9 1.55964 9 2.25C9 2.94036 9.55964 3.5 10.25 3.5Z"
            }), c.jsx("path", {
                d: "M9.5 4L10.1408 3.91018C10.2282 3.9606 10.308 4.02694 10.377 4.10666L11.6364 5.55971L12.3776 5.27461C12.6838 5.15685 13 5.4198 13 5.79219C13 5.97461 12.921 6.14496 12.7894 6.24614L12.0753 6.79546C11.8039 7.00426 11.4563 7.02923 11.1645 6.86089L9.81818 6.08418V7.15344C9.81818 7.47209 9.94372 7.77346 10.1594 7.97252L11.7497 9.44053C11.9654 9.63959 12.0909 9.94096 12.0909 10.2596V14.4466C12.0909 14.7523 11.8761 15.0002 11.6112 15.0002C11.3667 15.0002 11.1614 14.7881 11.1344 14.5078L10.7915 10.947C10.7523 10.5403 10.5119 10.1971 10.1755 10.0677L9.36339 9.75537C8.76472 9.75537 8.09679 9.42394 7.53654 8.99162C7.51274 8.97325 7.48926 8.9548 7.46609 8.93627C7.23639 8.00161 7.20213 7.01594 7.36771 6.06069L7.52549 5.1504C7.53582 5.09082 7.49633 5.03524 7.44367 5.03524H6.80459C6.69451 5.03524 6.5865 5.06976 6.49211 5.13511L4.84317 6.27666C4.5845 6.45574 4.24845 6.34283 4.11354 6.03151C3.99674 5.76198 4.07217 5.43427 4.28947 5.26711L6.50534 3.56262C6.59204 3.49592 6.68804 3.44693 6.78913 3.41777L8.37296 3.33822C8.526 3.29407 8.94954 3.60465 9.244 3.82057C9.35461 3.90168 9.447 3.96943 9.5 4Z"
            }), c.jsx("path", {
                d: "M7.1348 9.94174C7.58084 10.2708 8.12363 10.5749 8.69615 10.7182L7.8184 11.9841C7.64588 12.233 7.38469 12.3778 7.10852 12.3778H3.48284C3.21618 12.3778 3 12.1284 3 11.8207C3 11.5397 3.18133 11.3027 3.42295 11.2679L6.22351 10.8639C6.48567 10.8261 6.7206 10.6586 6.86716 10.405L7.1348 9.94174Z"
            })]
        })
    })
}
function mG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M6.75013 2.5C6.61206 2.5 6.50013 2.61193 6.50013 2.75V4H5.00013V2.75C5.00013 1.7835 5.78363 1 6.75013 1H9.25C10.2165 1 11 1.7835 11 2.75V4H9.5V2.75C9.5 2.61193 9.38807 2.5 9.25 2.5H6.75013Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1 7.25C1 6.00736 2.00736 5 3.25 5H12.75C13.9926 5 15 6.00736 15 7.25V12.75C15 13.9926 13.9926 15 12.75 15H3.25C2.00736 15 1 13.9926 1 12.75V7.25ZM7 7.8C7 7.51997 7 7.37996 7.0545 7.273C7.10243 7.17892 7.17892 7.10243 7.273 7.0545C7.37996 7 7.51997 7 7.8 7H8.2C8.48003 7 8.62004 7 8.727 7.0545C8.82108 7.10243 8.89757 7.17892 8.9455 7.273C9 7.37996 9 7.51997 9 7.8V9H10.2C10.48 9 10.62 9 10.727 9.0545C10.8211 9.10243 10.8976 9.17892 10.9455 9.273C11 9.37996 11 9.51997 11 9.8V10.2C11 10.48 11 10.62 10.9455 10.727C10.8976 10.8211 10.8211 10.8976 10.727 10.9455C10.62 11 10.48 11 10.2 11H9V12.2C9 12.48 9 12.62 8.9455 12.727C8.89757 12.8211 8.82108 12.8976 8.727 12.9455C8.62004 13 8.48003 13 8.2 13H7.8C7.51997 13 7.37996 13 7.273 12.9455C7.17892 12.8976 7.10243 12.8211 7.0545 12.727C7 12.62 7 12.48 7 12.2V11H5.8C5.51997 11 5.37996 11 5.273 10.9455C5.17892 10.8976 5.10243 10.8211 5.0545 10.727C5 10.62 5 10.48 5 10.2V9.8C5 9.51997 5 9.37996 5.0545 9.273C5.10243 9.17892 5.17892 9.10243 5.273 9.0545C5.37996 9 5.51997 9 5.8 9H7V7.8Z"
            })]
        })
    })
}
function gG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "m6.005 8.223-.237.818-.879.668a2.078 2.078 0 0 0-2.781-.721 2.166 2.166 0 0 0-.856 2.903 2.08 2.08 0 0 0 2.853.845 2.167 2.167 0 0 0 1.053-2.377L15 4.261a6.155 6.155 0 0 0-5.776 1.22l-3.22 2.742Zm-2.146 2.221a.838.838 0 0 0-1.152-.332.873.873 0 0 0-.353 1.167.838.838 0 0 0 1.152.332.873.873 0 0 0 .353-1.167Z"
            }), c.jsx("path", {
                d: "m8.203 9.65 1.02.868A6.154 6.154 0 0 0 15 11.739l-5.085-3.15L8.203 9.65Z",
                fill: "#D2D3E0"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M6.51 6.479 5.159 5.64a2.167 2.167 0 0 0-1.053-2.377 2.08 2.08 0 0 0-2.853.845 2.166 2.166 0 0 0 .856 2.903c.982.545 2.197.22 2.781-.72l.879.667.035.122.708-.602Zm-3.803-.591a.838.838 0 0 0 1.152-.332.873.873 0 0 0-.353-1.167.838.838 0 0 0-1.152.332.873.873 0 0 0 .353 1.167Z"
            })]
        })
    })
}
function yG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M13 11C13.5523 11 14 11.4477 14 12V14C14 14.5523 13.5523 15 13 15H3C2.44772 15 2 14.5523 2 14V12C2 11.4477 2.44772 11 3 11H13ZM4 12.25C3.58579 12.25 3.25 12.5858 3.25 13C3.25 13.4142 3.58579 13.75 4 13.75C4.41421 13.75 4.75 13.4142 4.75 13C4.75 12.5858 4.41421 12.25 4 12.25ZM13 6C13.5523 6 14 6.44772 14 7V9C14 9.55229 13.5523 10 13 10H3C2.44772 10 2 9.55229 2 9V7C2 6.44772 2.44772 6 3 6H13ZM4 7.25C3.58579 7.25 3.25 7.58579 3.25 8C3.25 8.41421 3.58579 8.75 4 8.75C4.41421 8.75 4.75 8.41421 4.75 8C4.75 7.58579 4.41421 7.25 4 7.25ZM13 1C13.5523 1 14 1.44772 14 2V4C14 4.55228 13.5523 5 13 5H3C2.44772 5 2 4.55228 2 4V2C2 1.44772 2.44772 1 3 1H13ZM4 2.25C3.58579 2.25 3.25 2.58579 3.25 3C3.25 3.41421 3.58579 3.75 4 3.75C4.41421 3.75 4.75 3.41421 4.75 3C4.75 2.58579 4.41421 2.25 4 2.25Z"
            })
        })
    })
}
function CG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8.44869 1.27638C8.36068 1.10028 8.17755 0.992248 7.98092 1.00043C7.78429 1.00862 7.61077 1.1315 7.53768 1.31431C7.2327 2.07713 6.54725 3.09209 5.57612 3.62391C5.10002 3.88463 4.55692 4.02914 3.94474 3.97828C3.33048 3.92725 2.6131 3.67659 1.7965 3.09311C1.64721 2.98644 1.45149 2.97018 1.28666 3.05076C1.12182 3.13134 1.01436 3.2958 1.00672 3.47919C0.918702 5.5927 1.70207 8.43182 2.93867 10.7365C3.55955 11.8936 4.30954 12.9446 5.14971 13.7128C5.98669 14.4782 6.95563 15 8.0017 15C9.04921 15 10.0088 14.4769 10.8338 13.7101C11.6613 12.9409 12.3954 11.8894 13.0054 10.7334C14.2216 8.42818 14.9999 5.59836 15 3.50003C15 3.31272 14.8954 3.14113 14.7289 3.05542C14.5625 2.96971 14.3621 2.98427 14.2097 3.09314C13.3843 3.68306 12.6807 3.95398 12.0883 4.02721C11.502 4.09971 10.9951 3.98242 10.5478 3.74557C9.62824 3.25872 8.93677 2.25291 8.44869 1.27638ZM10.8366 6.98419C10.9012 7.0289 10.9506 7.0921 10.9781 7.16538C11.0055 7.23888 11.0095 7.31894 10.9896 7.39478C10.9697 7.47061 10.9268 7.53855 10.8667 7.58943L9.52973 8.68876C9.50978 8.70518 9.49532 8.72721 9.4882 8.75195C9.48107 8.77669 9.48163 8.80298 9.48987 8.82739L10.0505 10.4958C10.0764 10.5729 10.0769 10.6563 10.052 10.7338C10.027 10.8112 9.97774 10.8788 9.91145 10.9267C9.84515 10.9745 9.76522 11.0002 9.68322 11C9.60122 10.9998 9.52141 10.9737 9.45537 10.9255L8.07984 9.92492C8.05777 9.90889 8.03113 9.90023 8.00377 9.90023C7.97642 9.90023 7.94978 9.90889 7.92771 9.92492L6.55167 10.9257C6.4856 10.9738 6.40583 10.9997 6.3239 10.9998C6.24196 11 6.16212 10.9742 6.09592 10.9263C6.02972 10.8784 5.98058 10.8109 5.95562 10.7335C5.93066 10.6561 5.93117 10.5729 5.95708 10.4958L6.51769 8.82841C6.5259 8.804 6.52648 8.77771 6.51936 8.75297C6.51224 8.72823 6.49775 8.70621 6.47779 8.68978L5.14345 7.59198C5.08258 7.54153 5.03886 7.47371 5.01822 7.39773C4.99759 7.32176 5.00105 7.24133 5.02814 7.16738C5.05522 7.09343 5.10461 7.02954 5.1696 6.98442C5.23458 6.9393 5.312 6.91512 5.39132 6.91518H6.95861C6.98523 6.91515 7.01118 6.90693 7.03289 6.89166C7.05461 6.87639 7.07101 6.85481 7.07984 6.82991L7.64097 5.25291L7.64226 5.24883C7.66981 5.17575 7.7192 5.11276 7.78383 5.06829C7.84846 5.02382 7.92524 4.99999 8.0039 4.99999C8.08256 4.99999 8.15934 5.02382 8.22397 5.06829C8.2886 5.11276 8.338 5.17575 8.36554 5.24883L8.92797 6.82991C8.93681 6.85485 8.95325 6.87645 8.975 6.89173C8.99676 6.907 9.0228 6.9152 9.04945 6.91518H10.6162C10.6951 6.91541 10.7719 6.93949 10.8366 6.98419Z"
            })
        })
    })
}
function bG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7 2.80305L6 3.00305C6 2.34378 6.1389 1.69191 6.40765 1.08991L6.4265 1.04768C6.45488 0.984106 6.54512 0.984106 6.5735 1.04768L6.67388 1.27253C6.88888 1.75414 7 2.27563 7 2.80305ZM5 7.00305C5 5.80305 3.66667 4.50305 3 4.00305L10 3.00305L10.0259 3.01165C10.537 3.18146 11.6068 3.53687 12 5.50305C12.3 7.00305 11.5 8.83638 11 9.00305L3 10.503C3.66667 10.003 5 8.50305 5 7.00305ZM1.4178 11.9334C1.17671 11.9736 1 12.1822 1 12.4266V13.003C1 14.1076 1.89543 15.003 3 15.003H9C12.3137 15.003 15 12.3168 15 9.00305V8.00305L14.5 7.00305C14.7761 7.00305 15 6.77919 15 6.50305C15 6.2269 14.7761 6.00305 14.5 6.00305H14.4384C14.1808 6.00305 13.9562 6.17842 13.8937 6.4284L13.6361 7.45876C13.2498 9.00372 11.9839 10.1724 10.4131 10.4342L1.4178 11.9334Z"
            })
        })
    })
}
function vG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M4.92886 7.49494C4.99698 7.22733 5.21443 7 5.49057 7C5.76671 7 5.98416 7.22733 6.05228 7.49494C6.27254 8.36012 7.05683 9 7.99057 9C8.92431 9 9.7086 8.36012 9.92886 7.49494C9.99698 7.22733 10.2144 7 10.4906 7C10.7667 7 10.9842 7.22733 11.0523 7.49494C11.2725 8.36012 12.0568 9 12.9906 9C14.0154 9 14.8602 8.22917 14.9768 7.23566C14.9949 7.08147 14.9544 6.92771 14.885 6.78885L12.267 1.55279C12.0976 1.214 11.7513 1 11.3725 1H4.6086C4.22983 1 3.88357 1.214 3.71418 1.55279L1.09614 6.78885C1.02672 6.92771 0.98621 7.08147 1.00431 7.23566C1.12092 8.22917 1.96573 9 2.99057 9C3.92431 9 4.7086 8.36012 4.92886 7.49494Z"
            }), c.jsx("path", {
                d: "M3.01079 10C4.05518 10 4.97364 9.46684 5.51079 8.65844C6.04793 9.46684 6.9664 10 8.01079 10C9.05518 10 9.97365 9.46684 10.5108 8.65844C11.0479 9.46684 11.9664 10 13.0108 10C13.3538 10 13.6833 9.94247 13.9902 9.83653V13.5C13.9902 14.3284 13.3187 15 12.4902 15H10.5C10.2239 15 10 14.7761 10 14.5V13C10 12.4477 9.55229 12 9 12H7C6.44772 12 6 12.4477 6 13V14.5C6 14.7761 5.77614 15 5.5 15H3.49023C2.66181 15 1.99023 14.3284 1.99023 13.5V9.82201C2.30876 9.9372 2.6524 10 3.01079 10Z"
            })]
        })
    })
}
function wG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8 6C9.10457 6 10 4.60457 10 3.5C10 2.39543 9.10457 1 8 1C6.89543 1 6 2.39543 6 3.5C6 4.60457 6.89543 6 8 6Z"
            }), c.jsx("path", {
                d: "M6.89451 6.52756C7.16992 6.70498 7.53595 6.85125 8 6.89003C8.46405 6.85125 8.83008 6.70498 9.10549 6.52756L9.19414 6.47024C9.62744 6.18957 10.0936 5.88763 10.5992 5.88763C10.9774 5.88763 11.3402 6.04264 11.6077 6.31856L12.6622 7.40636L13.4719 5.31834C13.5684 5.06947 13.8362 4.94133 14.0827 5.02609L14.6643 5.22607C14.916 5.3126 15.0554 5.58973 14.9792 5.85181L14.0064 9.19662C13.8225 9.82913 13.1103 10.1136 12.5613 9.77388L11.1899 8.92508L11.6364 14.4517C11.6602 14.7469 11.4345 15 11.1473 15H4.85266C4.56555 15 4.33975 14.7469 4.3636 14.4517L4.81006 8.92508L3.43867 9.77388C2.88974 10.1136 2.17751 9.82913 1.99356 9.19662L1.02081 5.85181C0.944594 5.58973 1.08404 5.3126 1.33568 5.22607L1.91728 5.02609C2.16379 4.94133 2.43163 5.06947 2.52813 5.31834L3.33779 7.40636L4.39231 6.31856C4.65979 6.04264 5.02257 5.88763 5.40084 5.88763C5.90642 5.88763 6.37256 6.18957 6.80586 6.47024L6.89451 6.52756Z"
            })]
        })
    })
}
function kG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M7 12.7C7 12.5895 7.08954 12.5 7.2 12.5H8.8C8.91046 12.5 9 12.5895 9 12.7V14.5C9 15.0523 8.55229 15 8 15C7.44772 15 7 15.0523 7 14.5V12.7Z"
            }), c.jsx("path", {
                d: "M6.99999 1.5C6.99999 0.992531 7.37799 0.995479 7.86778 0.9993C7.91104 0.999637 7.95517 0.999981 7.99999 0.999981C8.0448 0.999981 8.08893 0.999637 8.13219 0.9993C8.62199 0.995479 8.99999 0.992531 8.99999 1.5V2.3C8.99999 2.41046 8.91044 2.5 8.79999 2.5H7.19999C7.08953 2.5 6.99999 2.41046 6.99999 2.3V1.5Z"
            }), c.jsx("path", {
                d: "M13 11.36C13 11.584 13 11.696 12.9564 11.7816C12.918 11.8569 12.8568 11.9181 12.7816 11.9564C12.696 12 12.584 12 12.36 12L3.24741 12C3.15592 12 3.11018 12 3.06681 11.9902C3.02835 11.9816 2.99138 11.9673 2.9571 11.9478C2.91845 11.9259 2.8846 11.8951 2.8169 11.8336L1.3209 10.4736C1.14031 10.3094 1.05002 10.2273 1.01663 10.1308C0.987296 10.0461 0.987296 9.95393 1.01663 9.86917C1.05002 9.7727 1.14031 9.69061 1.3209 9.52644L2.8169 8.16644C2.8846 8.10489 2.91845 8.07412 2.9571 8.05217C2.99138 8.03271 3.02835 8.01841 3.06681 8.00976C3.11018 8 3.15592 8 3.24741 8L12.36 8C12.584 8 12.696 8 12.7816 8.0436C12.8568 8.08195 12.918 8.14314 12.9564 8.2184C13 8.30397 13 8.41598 13 8.64V11.36Z"
            }), c.jsx("path", {
                d: "M3.04358 3.2184C2.99999 3.30397 2.99999 3.41598 2.99999 3.64V6.36C2.99999 6.58402 2.99999 6.69603 3.04358 6.7816C3.08193 6.85686 3.14312 6.91805 3.21839 6.9564C3.30395 7 3.41596 7 3.63999 7H12.7526C12.844 7 12.8898 7 12.9332 6.99024C12.9716 6.98159 13.0086 6.96729 13.0429 6.94783C13.0815 6.92588 13.1154 6.89511 13.1831 6.83357L14.6791 5.47356C14.8597 5.30939 14.95 5.2273 14.9833 5.13082C15.0127 5.04607 15.0127 4.95392 14.9833 4.86917C14.95 4.7727 14.8597 4.69061 14.6791 4.52644L13.1831 3.16644C13.1154 3.1049 13.0815 3.07412 13.0429 3.05217C13.0086 3.03271 12.9716 3.01841 12.9332 3.00976C12.8898 3 12.844 3 12.7526 3H3.63999C3.41596 3 3.30395 3 3.21839 3.0436C3.14312 3.08195 3.08193 3.14314 3.04358 3.2184Z"
            })]
        })
    })
}
function xG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M2.35047 13H1.75C1.33579 13 1 13.3358 1 13.75C1 14.1642 1.33579 14.5 1.75 14.5H1.98322C2.03459 14.0479 2.15686 13.574 2.31529 13.1021C2.32669 13.0681 2.33842 13.0341 2.35047 13Z"
            }), c.jsx("path", {
                d: "M7.0815 14.5H14.25C14.6642 14.5 15 14.1642 15 13.75C15 13.3358 14.6642 13 14.25 13H7.86679C7.85074 13.0378 7.83437 13.0755 7.81766 13.1131C7.59352 13.6181 7.34491 14.0821 7.0815 14.5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3.52415 2.7989C3.38635 2.88148 3.13365 3.13178 2.86908 3.82317C2.6409 4.41948 2.93762 5.09574 3.58586 5.78866C3.88666 6.1102 4.21502 6.38044 4.47244 6.57217C4.6 6.66717 4.70735 6.74084 4.78131 6.78983C4.81823 6.81428 4.84663 6.83246 4.86486 6.84396L4.88428 6.85609L4.8874 6.858C4.8874 6.858 4.88706 6.8578 4.49966 7.5C4.11227 8.1422 4.11186 8.14195 4.11186 8.14195L4.11019 8.14095L4.10697 8.13899L4.09719 8.13299L4.06477 8.11276C4.03767 8.09567 3.99981 8.0714 3.95295 8.04035C3.85934 7.97835 3.72909 7.88885 3.57645 7.77516C3.27347 7.54951 2.87109 7.22027 2.49047 6.81341C1.77586 6.04955 0.907061 4.75337 1.46815 3.28709C1.78555 2.45763 2.19935 1.84409 2.75309 1.51225C3.34909 1.15508 3.96431 1.20582 4.46576 1.40929C4.94131 1.60225 5.34868 1.94132 5.6555 2.24754C5.9701 2.56155 6.22527 2.88839 6.38843 3.10848C6.78149 3.63868 7.42098 5.05096 7.77334 6.72202C7.78484 6.77659 7.79608 6.83159 7.80702 6.88702C8.31086 6.71915 8.82618 6.82368 9.2354 7.0862C9.74053 7.41025 10.0956 7.9685 10.2171 8.57308C10.2529 8.75134 10.2959 8.90727 10.3424 9.03463C10.7333 8.58562 10.9392 8.15368 11.1264 7.76101L11.1307 7.75188C11.1346 7.74378 11.1385 7.73557 11.1425 7.72725C11.2392 7.52402 11.3654 7.25908 11.5319 7.04899C11.7365 6.79086 12.0391 6.56491 12.4719 6.52996C13.1915 6.47187 13.6272 7.03463 13.8301 7.36917C14.0669 7.7596 14.2405 8.24964 14.3666 8.68731C14.4958 9.13593 14.5895 9.58124 14.6505 9.91041C14.6812 10.076 14.7041 10.2147 14.7195 10.3128C14.7271 10.3619 14.7329 10.4009 14.7369 10.4283L14.7415 10.4603L14.7427 10.4693L14.7432 10.4733C14.7432 10.4733 14.7433 10.4735 14 10.5737C13.2567 10.6738 13.2567 10.674 13.2567 10.674L13.2559 10.6677L13.2524 10.6433C13.2524 10.6433 13.2442 10.5877 13.2375 10.5446C13.224 10.4583 13.2034 10.3337 13.1756 10.1839C13.1197 9.88227 13.0363 9.48822 12.9252 9.10258C12.8201 8.73787 12.7017 8.42177 12.5796 8.20226C12.553 8.25524 12.522 8.31931 12.4847 8.39735C12.4797 8.40802 12.4745 8.41881 12.4693 8.42972C12.2481 8.89415 11.9187 9.58582 11.2257 10.2867C11.0055 10.5094 10.6978 10.7197 10.3075 10.7354C9.89707 10.752 9.58585 10.5476 9.3875 10.3367C9.03076 9.95732 8.84633 9.3655 8.74648 8.8686C8.69629 8.61888 8.55267 8.43034 8.42547 8.34874C8.36728 8.31141 8.32868 8.30589 8.31181 8.30575C8.30098 8.30566 8.27161 8.30632 8.21741 8.34548C8.15036 8.39393 8.08297 8.44407 8.01531 8.49581C8.08932 9.7642 7.94325 11.1242 7.36374 12.3751C6.95144 13.265 6.45423 14.0041 5.94696 14.5588C5.45575 15.0958 4.89822 15.5217 4.34698 15.6814C4.0644 15.7632 3.71552 15.7935 3.37613 15.6484C3.01516 15.4941 2.789 15.1951 2.67794 14.8644C2.48 14.2751 2.60856 13.4964 2.90889 12.6391C3.24904 11.6682 3.92034 10.6123 4.70145 9.65762C5.23223 9.00886 5.83152 8.38514 6.44636 7.84495C6.40937 7.56951 6.3617 7.29751 6.30561 7.0315C5.97938 5.48435 5.40368 4.29887 5.18344 4.00179C5.03994 3.80822 4.83512 3.54803 4.59585 3.30921C4.34878 3.06262 4.1084 2.88307 3.90177 2.79923C3.72105 2.7259 3.61968 2.74165 3.52415 2.7989ZM6.49346 9.8873C6.27571 10.1197 6.06404 10.361 5.86239 10.6075C5.14002 11.4904 4.58485 12.392 4.32452 13.1351C4.14542 13.6463 4.0918 13.9791 4.08376 14.1755C4.26776 14.0786 4.53188 13.8834 4.84009 13.5464C5.2335 13.1163 5.64847 12.5091 6.00271 11.7445C6.27279 11.1615 6.42691 10.5318 6.49346 9.8873ZM3.88485 14.2502L3.88741 14.25L3.88485 14.2502ZM12.4269 7.98831C12.4269 7.98831 12.4305 7.99002 12.4376 7.99675C12.4304 7.99223 12.4269 7.98831 12.4269 7.98831Z"
            })]
        })
    })
}
function DG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.32228 5.49614C2.0107 3.10873 3.95431 1 6.46638 1H9.53363C12.0457 1 13.9893 3.10873 13.6777 5.49614L13.2945 8.43271C13.2478 8.79065 13.3762 9.14919 13.6425 9.40425C14.014 9.76003 14.1061 10.3035 13.8711 10.7536L13.8272 10.8377C13.4921 11.4796 12.6771 11.7398 12.0069 11.4189L11.3124 11.0863C11.2146 11.0394 11.1086 11.0111 11 11.0027V14.5C11 14.7761 10.7761 15 10.5 15H10.4135C10.1735 15 9.96741 14.8296 9.92236 14.5939L9.73704 13.6245C9.7061 13.4627 9.5505 13.3566 9.3876 13.3813C9.23561 13.4043 9.08389 13.4236 8.93235 13.4391C8.788 13.4539 8.67175 13.5662 8.65668 13.7105L8.56883 14.5519C8.54224 14.8066 8.32758 15 8.07153 15H7.92848C7.67243 15 7.45777 14.8066 7.43118 14.5519L7.34333 13.7105C7.32826 13.5662 7.21201 13.4539 7.06766 13.4391C6.89614 13.4216 6.7244 13.3992 6.55229 13.372C6.39083 13.3465 6.23554 13.4498 6.20213 13.6098L5.9949 14.6022C5.94651 14.834 5.73976 15 5.50301 15C5.22687 15 5 14.7761 5 14.5V11.0027C4.89145 11.0111 4.78537 11.0394 4.68758 11.0863L3.99309 11.4189C3.32288 11.7398 2.50792 11.4796 2.17281 10.8377L2.12888 10.7536C1.89395 10.3035 1.98604 9.76003 2.3575 9.40425C2.62381 9.14919 2.75225 8.79065 2.70554 8.43271L2.32228 5.49614ZM8.60064 11C8.84555 11 9.04409 10.8015 9.04409 10.5566C9.04409 10.1942 8.93313 9.84059 8.72613 9.54321L8.55726 9.3006C8.4262 9.11231 8.36066 9.01815 8.28975 8.96773C8.11628 8.84438 7.88372 8.84438 7.71024 8.96773C7.63933 9.01816 7.5738 9.1123 7.44274 9.3006L7.27386 9.54321C7.06687 9.84059 6.95591 10.1942 6.95591 10.5566C6.95591 10.8015 7.15445 11 7.39936 11H8.60064ZM6.95592 7.6C6.95592 7.82091 6.77683 8 6.55592 8H4.61403C4.45598 8 4.31785 7.8933 4.27793 7.74037L4.26997 7.70987C4.0442 6.84492 4.69689 5 5.59082 5C6.34474 5 6.95592 6.61118 6.95592 7.3651V7.6ZM11.386 8C11.544 8 11.6822 7.8933 11.7221 7.74037L11.73 7.70987C11.9558 6.84492 11.3031 5 10.4092 5C9.65527 5 9.04409 6.61118 9.04409 7.3651V7.6C9.04409 7.82091 9.22318 8 9.44409 8H11.386Z"
            })
        })
    })
}
function SG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M11.6625 6.60528C11.515 6.64247 11.3586 6.60991 11.2377 6.51682L8.94647 4.75228C8.82265 4.65692 8.75 4.50882 8.75 4.35173V1.59971C8.75 1.3002 9.00817 1.06529 9.30016 1.12058C11.6411 1.56382 13.571 3.18178 14.4645 5.34402C14.5762 5.61425 14.4121 5.91233 14.1303 5.98333L11.6625 6.60528Z"
            }), c.jsx("path", {
                d: "M14.9986 7.91286C14.9925 7.60587 14.699 7.39871 14.4035 7.47318L11.9494 8.09168C11.7797 8.13443 11.6446 8.26343 11.5929 8.43186L10.9021 10.6854C10.8548 10.8397 10.8837 11.0075 10.9798 11.1367L12.3025 12.9145C12.4775 13.1498 12.8157 13.1856 13.019 12.9748C14.245 11.7038 15 9.96866 15 8.05578C15 8.00803 14.9995 7.96039 14.9986 7.91286Z"
            }), c.jsx("path", {
                d: "M10.891 14.4844C11.1668 14.3582 11.2403 14.007 11.0585 13.7627L9.96274 12.2898C9.86832 12.1629 9.72012 12.0882 9.56274 12.0882H6.43726C6.27988 12.0882 6.13168 12.1629 6.03726 12.2898L4.94148 13.7627C4.75973 14.007 4.83316 14.3582 5.10898 14.4844C5.99024 14.8878 6.96909 15.1125 8 15.1125C9.03091 15.1125 10.0098 14.8878 10.891 14.4844Z"
            }), c.jsx("path", {
                d: "M2.98097 12.9748C3.18433 13.1856 3.52247 13.1498 3.69749 12.9145L5.02016 11.1367C5.11627 11.0075 5.14516 10.8397 5.09787 10.6854L4.40708 8.43186C4.35545 8.26343 4.22028 8.13443 4.05063 8.09168L1.59654 7.47318C1.30105 7.39871 1.00746 7.60587 1.00141 7.91286C1.00047 7.96039 1 8.00803 1 8.05578C1 9.96866 1.755 11.7038 2.98097 12.9748Z"
            }), c.jsx("path", {
                d: "M1.53551 5.34402C1.42384 5.61425 1.58795 5.91233 1.86966 5.98333L4.33747 6.60528C4.48504 6.64247 4.64139 6.60992 4.76227 6.51682L7.05353 4.75228C7.17736 4.65692 7.25 4.50882 7.25 4.35173V1.59971C7.25 1.3002 6.99183 1.06529 6.69984 1.12058C4.35895 1.56382 2.42905 3.18178 1.53551 5.34402Z"
            }), c.jsx("path", {
                d: "M8.30353 6.16004C8.12433 6.02203 7.87567 6.02203 7.69647 6.16004L6.0192 7.45174C5.85269 7.57997 5.78315 7.79927 5.84502 8.0011L6.52543 10.2208C6.59017 10.432 6.78387 10.576 7.00314 10.576H8.99686C9.21614 10.576 9.40983 10.432 9.47457 10.2208L10.155 8.0011C10.2168 7.79927 10.1473 7.57997 9.9808 7.45174L8.30353 6.16004Z"
            })]
        })
    })
}
function _G(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M11.4453 1.16963L7 5.00168H4C3.44772 5.00168 3 5.44939 3 6.00168V10C3 10.5523 3.44772 11 4 11H7L11.4453 14.8337C12.1099 15.2768 13 14.8004 13 14.0017V2.00168C13 1.20299 12.1099 0.726595 11.4453 1.16963Z"
            })
        })
    })
}
function IG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M4.06912 2.20709C4.47582 1.93058 4.91316 1.69577 5.375 1.50883C6.18563 1.18069 7.07171 1 8 1C11.866 1 15 4.13401 15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 5.59117 2.21672 3.46651 4.06912 2.20709ZM5.43223 1.95888C5.03952 2.12601 4.66643 2.33032 4.31739 2.56739L5.09477 3.34477L4.55215 5.24396C4.51888 5.36039 4.53536 5.4854 4.59766 5.58924L5.47597 7.05308C5.49437 7.08375 5.51647 7.11205 5.54176 7.13735L6.00723 7.60282C6.11067 7.70625 6.15556 7.85454 6.12687 7.99798L5.51217 11.0715C5.50652 11.0997 5.50368 11.1285 5.50368 11.1573V12.8501C5.50368 13.1284 5.79656 13.3094 6.04548 13.185C6.12749 13.144 6.1916 13.0743 6.22566 12.9892L6.78014 11.603C6.81993 11.5035 6.89485 11.4221 6.99069 11.3741L7.84076 10.9491C8.0355 10.8517 8.12901 10.626 8.06016 10.4194L7.95126 10.0927C7.88887 9.90558 7.95947 9.69981 8.12363 9.59038L8.77646 9.15515C8.82452 9.12311 8.86576 9.08187 8.8978 9.03381L9.45394 8.19961C9.49617 8.13626 9.5542 8.08503 9.6223 8.05098L10.0836 7.82034C10.1517 7.78629 10.2097 7.73506 10.2519 7.67171L11.208 6.23763C11.368 5.9976 11.256 5.67112 10.9823 5.5799L10.5221 5.42647L9.12428 4.86736C8.95818 4.80092 8.84926 4.64005 8.84926 4.46115V4.09527C8.84926 3.89451 8.71263 3.71952 8.51787 3.67083L7.58455 3.4375C7.5359 3.42533 7.4897 3.4049 7.44798 3.37708L6.66838 2.85735C6.56582 2.78898 6.43918 2.76704 6.31959 2.79694L6.02336 2.871C6.01156 2.83798 5.99553 2.80579 5.9751 2.77514L5.44848 1.98522C5.44274 1.97661 5.43732 1.96782 5.43223 1.95888ZM7.39756 14.015L6.73091 13.5706C6.58685 13.4746 6.65484 13.25 6.82799 13.25H7.71684C7.84694 13.25 7.93155 13.3869 7.87337 13.5033L7.65115 13.9477C7.60408 14.0418 7.48514 14.0734 7.39756 14.015Z"
            })
        })
    })
}
function EG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1 3.42701C1 3.25744 1.19777 3.16481 1.32804 3.27336L2.82009 4.51674C2.93409 4.61174 3 4.75246 3 4.90085V11.0991C3 11.2475 2.93409 11.3883 2.82009 11.4833L1.32804 12.7266C1.19777 12.8352 1 12.7426 1 12.573V3.42701Z"
            }), c.jsx("path", {
                d: "M15 3.42701C15 3.25744 14.8022 3.16481 14.672 3.27336L13.1799 4.51674C13.0659 4.61174 13 4.75246 13 4.90085V11.0991C13 11.2475 13.0659 11.3883 13.1799 11.4833L14.672 12.7266C14.8022 12.8352 15 12.7426 15 12.573V3.42701Z"
            }), c.jsx("path", {
                d: "M4 4C4 3.44772 4.44772 3 5 3H11C11.5523 3 12 3.44772 12 4V12C12 12.5523 11.5523 13 11 13H5C4.44772 13 4 12.5523 4 12V4Z"
            })]
        })
    })
}
function AG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8 11.5C8.55229 11.5 9 11.0523 9 10.5C9 9.94771 8.55229 9.5 8 9.5C7.44772 9.5 7 9.94771 7 10.5C7 11.0523 7.44772 11.5 8 11.5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3.16349 1.81901C3 2.13988 3 2.55992 3 3.4V12.6C3 13.4401 3 13.8601 3.16349 14.181C3.3073 14.4632 3.53677 14.6927 3.81901 14.8365C4.13988 15 4.55992 15 5.4 15H10.6C11.4401 15 11.8601 15 12.181 14.8365C12.4632 14.6927 12.6927 14.4632 12.8365 14.181C13 13.8601 13 13.4401 13 12.6V3.4C13 2.55992 13 2.13988 12.8365 1.81901C12.6927 1.53677 12.4632 1.3073 12.181 1.16349C11.8601 1 11.4401 1 10.6 1H5.4C4.55992 1 4.13988 1 3.81901 1.16349C3.53677 1.3073 3.3073 1.53677 3.16349 1.81901ZM8 13.5C9.65685 13.5 11 12.1569 11 10.5C11 8.84315 9.65685 7.5 8 7.5C6.34315 7.5 5 8.84315 5 10.5C5 12.1569 6.34315 13.5 8 13.5ZM9.5 4C9.5 4.82843 8.82843 5.5 8 5.5C7.17157 5.5 6.5 4.82843 6.5 4C6.5 3.17157 7.17157 2.5 8 2.5C8.82843 2.5 9.5 3.17157 9.5 4Z"
            })]
        })
    })
}
function jG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M13 2C14.1046 2 15 2.89543 15 4V12C15 13.1046 14.1046 14 13 14H3C1.89543 14 1 13.1046 1 12V4C1 2.89543 1.89543 2 3 2H13ZM5.5 6L5.5 8.5H8.5L8.5 6H5.5ZM10 12.5H13C13.2761 12.5 13.5 12.2761 13.5 12V10H10V12.5ZM8.5 10V12.5H5.5V10H8.5ZM10 8.5H13.5V6H10L10 8.5ZM2.5 8.5H4V6H2.5V8.5ZM3 12.5H4L4 10H2.5V12C2.5 12.2761 2.72386 12.5 3 12.5Z"
            })
        })
    })
}
function MG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M4.5 4.5753V1.28243C4.5 1.12645 4.62645 1 4.78243 1C4.92616 1 5.06856 1.02742 5.20201 1.0808L7.5 2L5 3V4.42037C6.80435 3.90712 8.68311 3.86386 10.5 4.29059V1.28243C10.5 1.12645 10.6264 1 10.7824 1C10.9262 1 11.0686 1.02742 11.202 1.0808L13.5 2L11 3V4.42037C11.6664 4.60992 12.3226 4.86358 12.9618 5.18134C12.985 5.19285 13 5.21926 13 5.24849V6.99935C13 7.32745 12.6893 7.5665 12.3695 7.49325C9.49823 6.83558 6.50177 6.83558 3.63053 7.49325C3.31072 7.5665 3 7.32745 3 6.99935V5.24849C3 5.21926 3.01501 5.19285 3.03817 5.18134C3.51687 4.94337 4.0051 4.74136 4.5 4.5753Z"
            }), c.jsx("path", {
                d: "M1 9.42684V14.5266C1 14.788 1.22386 15 1.5 15H5.5C5.77614 15 6 14.7761 6 14.5V13.6525C6 12.5658 6.26149 11.3373 7.31711 11.0792C7.5203 11.0295 7.74761 11 8 11C8.25238 11 8.4797 11.0295 8.68288 11.0792C9.73851 11.3373 10 12.5658 10 13.6525V14.5C10 14.7761 10.2239 15 10.5 15H14.5C14.7761 15 15 14.788 15 14.5266V9.42684C15 9.39345 14.979 9.36326 14.9466 9.3501C10.5106 7.54996 5.48937 7.54996 1.05344 9.3501C1.02102 9.36326 1 9.39345 1 9.42684Z"
            })]
        })
    })
}
function TG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M14.9441 6.05256C14.8798 5.88159 14.7646 5.73411 14.6136 5.6298C14.4626 5.52549 14.2832 5.46931 14.0992 5.46877H10.4417C10.3795 5.46881 10.3187 5.44969 10.2679 5.41405C10.2171 5.37841 10.1787 5.32801 10.1581 5.2698L8.84514 1.58061C8.78083 1.4101 8.66552 1.26313 8.51465 1.15936C8.36377 1.0556 8.18453 1 8.00091 1C7.81728 1 7.63804 1.0556 7.48717 1.15936C7.33629 1.26313 7.22098 1.4101 7.15667 1.58061L7.15367 1.59014L5.84375 5.2698C5.82313 5.32791 5.78483 5.37825 5.73415 5.41388C5.68346 5.44951 5.62288 5.46869 5.56075 5.46877H1.902C1.71682 5.46863 1.53608 5.52504 1.38439 5.63033C1.23269 5.73562 1.11739 5.88468 1.05416 6.05724C0.990937 6.22979 0.982856 6.41746 1.03102 6.59473C1.07919 6.772 1.18126 6.93025 1.32335 7.04798L4.4383 9.6095C4.4849 9.64784 4.51872 9.69923 4.53534 9.75695C4.55196 9.81467 4.5506 9.87603 4.53143 9.93297L3.22272 13.8235C3.16224 14.0034 3.16105 14.1977 3.21932 14.3783C3.27758 14.5589 3.39229 14.7164 3.54684 14.8281C3.70139 14.9398 3.88777 15 4.07903 14.9996C4.27029 14.9994 4.45652 14.9388 4.61076 14.8267L7.82305 12.4915C7.87456 12.4541 7.93675 12.4339 8.00061 12.4339C8.06446 12.4339 8.12665 12.4541 8.17817 12.4915L11.3893 14.8261C11.5434 14.9386 11.7297 14.9995 11.9212 15C12.1126 15.0005 12.2992 14.9406 12.454 14.8289C12.6087 14.7172 12.7236 14.5595 12.782 14.3788C12.8403 14.198 12.8391 14.0035 12.7785 13.8235L11.4698 9.93059C11.4506 9.87364 11.4493 9.81229 11.4659 9.75457C11.4825 9.69685 11.5163 9.64545 11.5629 9.60712L14.6839 7.04202C14.8242 6.9233 14.9243 6.76477 14.9708 6.58783C15.0174 6.41089 15.0081 6.22406 14.9441 6.05256Z"
            })
        })
    })
}
function LG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M3.44042 10.3823C3.28377 10.5981 3.20783 10.8383 3.1991 11.0749C1.91028 10.5414 1 9.23872 1 7.7164C1 5.85115 2.36658 4.31571 4.12162 4.12076C4.55776 2.32759 6.12884 1 8 1C10.1422 1 11.8911 2.74003 11.9951 4.92688L12 5.13317C13.6569 5.13317 15 6.52103 15 8.23305C15 9.94506 13.6569 11.3329 12 11.3329H11.4122C12.0992 10.5462 11.5641 9.26634 10.5176 9.26634H9.86894L10.6252 8.09421C11.1568 7.2702 10.5852 6.16646 9.62672 6.16646H7.25042C6.77828 6.16646 6.3337 6.39615 6.05042 6.78644L3.44042 10.3823Z"
            }), c.jsx("path", {
                d: "M6.74343 11.3329H4.40042C4.23561 11.3329 4.1407 11.1385 4.23958 11.0023L6.84958 7.40641C6.94401 7.27632 7.0922 7.19975 7.24958 7.19975H9.62588C9.78562 7.19975 9.88173 7.38371 9.79313 7.52104L8.00042 10.2996H10.5167C10.6949 10.2996 10.785 10.5222 10.659 10.6524L6.51016 14.9385C6.36672 15.0867 6.12551 14.9456 6.17471 14.7423L6.93746 11.5897C6.96901 11.4593 6.87354 11.3329 6.74343 11.3329Z"
            })]
        })
    })
}
function OG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5 1C4.44772 1 4 1.44772 4 2V3C4 3.55228 4.44772 4 5 4H11C11.5523 4 12 3.55228 12 3V2C12 1.44772 11.5523 1 11 1H5Z"
            }), c.jsx("path", {
                d: "M2 12C1.44772 12 1 12.4477 1 13V14C1 14.5523 1.44772 15 2 15H6C6.55228 15 7 14.5523 7 14V13C7 12.4477 6.55228 12 6 12H2Z"
            }), c.jsx("path", {
                d: "M3.25 11H4.75V9.5C4.75 9.08579 5.08579 8.75 5.5 8.75H6.5C7.07627 8.75 7.60193 8.53336 8 8.17708C8.39807 8.53336 8.92373 8.75 9.5 8.75H10.5C10.9142 8.75 11.25 9.08579 11.25 9.5V11H12.75V9.5C12.75 8.25736 11.7426 7.25 10.5 7.25H9.5C9.08579 7.25 8.75 6.91421 8.75 6.5V5H7.25V6.5C7.25 6.91421 6.91421 7.25 6.5 7.25H5.5C4.25736 7.25 3.25 8.25736 3.25 9.5V11Z"
            }), c.jsx("path", {
                d: "M14 12H10C9.44772 12 9 12.4477 9 13V14C9 14.5523 9.44772 15 10 15H14C14.5523 15 15 14.5523 15 14V13C15 12.4477 14.5523 12 14 12Z"
            })]
        })
    })
}
function RG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8.75881 14.2396C8.75881 14.6593 8.41855 14.9996 7.99882 14.9996C7.57908 14.9996 7.23881 14.6593 7.23881 14.2396V12.7596C7.23881 12.3398 7.57908 11.9996 7.99882 11.9996C8.41855 11.9996 8.75881 12.3398 8.75881 12.7596V14.2396Z"
            }), c.jsx("path", {
                d: "M5.17157 10.8267C4.87477 10.5299 4.39357 10.5299 4.09677 10.8267L3.05025 11.8733C2.75345 12.1701 2.75345 12.6513 3.05025 12.9481C3.34705 13.2449 3.82825 13.2449 4.12505 12.9481L5.17157 11.9015C5.46837 11.6047 5.46837 11.1235 5.17157 10.8267Z"
            }), c.jsx("path", {
                d: "M10.8286 10.8266C10.5318 11.1234 10.5318 11.6046 10.8286 11.9014L11.8751 12.9479C12.1719 13.2447 12.6531 13.2447 12.9499 12.9479C13.2467 12.6511 13.2467 12.1699 12.9499 11.8731L11.9034 10.8266C11.6066 10.5298 11.1254 10.5298 10.8286 10.8266Z"
            }), c.jsx("path", {
                d: "M10.1144 5.8839C11.286 7.05547 11.286 8.95497 10.1144 10.1265C8.94285 11.2981 7.04335 11.2981 5.87178 10.1265C4.70021 8.95497 4.70021 7.05547 5.87178 5.8839C7.04335 4.71233 8.94285 4.71233 10.1144 5.8839Z"
            }), c.jsx("path", {
                d: "M3.05042 4.1232C2.75362 3.8264 2.75362 3.3452 3.05042 3.0484C3.34722 2.7516 3.82843 2.7516 4.12523 3.0484L5.17174 4.09492C5.46854 4.39172 5.46854 4.87292 5.17174 5.16972C4.87495 5.46652 4.39374 5.46652 4.09694 5.16972L3.05042 4.1232Z"
            }), c.jsx("path", {
                d: "M11.8749 3.04856C12.1717 2.75176 12.6529 2.75176 12.9497 3.04856C13.2465 3.34536 13.2465 3.82656 12.9497 4.12336L11.9032 5.16988C11.6064 5.46668 11.1252 5.46668 10.8284 5.16988C10.5316 4.87308 10.5316 4.39188 10.8284 4.09508L11.8749 3.04856Z"
            }), c.jsx("path", {
                d: "M14.2394 7.2389C14.6592 7.2389 14.9994 7.57916 14.9994 7.9989C14.9994 8.41864 14.6592 8.7589 14.2394 8.7589H12.7594C12.3397 8.7589 11.9994 8.41864 11.9994 7.9989C11.9994 7.57916 12.3397 7.2389 12.7594 7.2389H14.2394Z"
            }), c.jsx("path", {
                d: "M4 7.9983C4 7.57856 3.65974 7.2383 3.24 7.2383H1.76C1.34026 7.2383 1 7.57856 1 7.99829C1 8.41803 1.34026 8.7583 1.76 8.7583H3.24C3.65974 8.7583 4 8.41803 4 7.9983Z"
            }), c.jsx("path", {
                d: "M7.99821 4.00012C8.41795 4.00012 8.75821 3.65986 8.75821 3.24012V1.76012C8.75821 1.34039 8.41795 1.00012 7.99821 1.00012C7.57847 1.00012 7.23821 1.34039 7.23821 1.76012V3.24012C7.23821 3.65986 7.57847 4.00012 7.99821 4.00012Z"
            })]
        })
    })
}
function PG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M7.25 3.5C7.94036 3.5 8.5 2.94036 8.5 2.25C8.5 1.55964 7.94036 1 7.25 1C6.55964 1 6 1.55964 6 2.25C6 2.94036 6.55964 3.5 7.25 3.5Z"
            }), c.jsx("path", {
                d: "M3.57895 6.54404H5.86564C6.62566 6.54404 7.35455 6.24366 7.89196 5.70899L8.21053 5.39205L8.95904 6.13675C9.18514 6.36169 9.18514 6.72639 8.95904 6.95133C8.85047 7.05935 8.70321 7.12003 8.54967 7.12003H6.49426C5.70914 7.12003 5.30849 8.03027 4.98824 8.75784L4.56011 9.72922C4.4739 9.92482 4.39835 10.1277 4.34478 10.3238C4.85696 10.0952 5.43357 9.86773 6.08201 9.64753C6.12658 9.55955 6.17198 9.47195 6.21736 9.38437C6.26326 9.29581 6.30921 9.20715 6.3542 9.11828C6.38777 9.05199 6.41943 8.98745 6.44981 8.92552C6.63335 8.5514 6.77041 8.27202 7 8.27202L7.72333 9.07162C7.74276 9.0931 7.76201 9.11473 7.78108 9.1365C8.26869 9.00797 8.73163 8.90192 9.17037 8.81574L8.78947 8.27202H10.2791C11.0551 8.27202 11.6842 7.64613 11.6842 6.87405C11.6842 6.65703 11.6334 6.44298 11.5359 6.24886L10.5263 4.24006L10.9519 4.3812C11.7774 4.65495 12.4251 5.29938 12.7002 6.12063L12.791 6.39145C12.8248 6.49252 12.8421 6.59835 12.8421 6.70488V7.12003C12.8421 7.43815 13.1013 7.69603 13.4211 7.69603C13.7408 7.69603 14 7.43815 14 7.12003V6.67031C14 6.58645 13.9897 6.5029 13.9692 6.42154L13.7732 5.64132C13.5477 4.74411 12.9732 3.97275 12.1762 3.49693C11.1486 2.88354 9.87725 2.83496 8.80542 3.36814L8.73891 3.40122C8.38894 3.57532 8.06947 3.8044 7.7928 4.07966L7.19311 4.6763C6.73247 5.13459 6.10771 5.39205 5.45627 5.39205H3.57895C3.2592 5.39205 3 5.64993 3 5.96804C3 6.28616 3.2592 6.54404 3.57895 6.54404Z"
            }), c.jsx("path", {
                d: "M1 13.342C1.24316 12.9234 2.61125 11.1593 7.25944 9.80039C11.9076 8.44152 14.3566 9.11562 15 9.62252C14.8763 10.5275 13.3699 12.7053 8.33441 14.1775C3.29887 15.6496 1.39868 14.815 1.07803 14.2138L1 13.342Z"
            })]
        })
    })
}
function $G(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M14.5 2C14.7761 2 15 2.22386 15 2.5V13.5C15 13.7761 14.7761 14 14.5 14H1.5C1.22386 14 1 13.7761 1 13.5V2.5C1 2.22386 1.22386 2 1.5 2H14.5ZM12 3.5H2.5V12.5H12V3.5ZM13.25 7.25C12.8358 7.25 12.5 7.58579 12.5 8C12.5 8.41421 12.8358 8.75 13.25 8.75C13.6642 8.75 14 8.41421 14 8C14 7.58579 13.6642 7.25 13.25 7.25Z"
            })
        })
    })
}
function FG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M6 2.5H10L9.11875 1.17812C9.04456 1.06684 8.91967 1 8.78593 1H7.21407C7.08033 1 6.95544 1.06684 6.88125 1.17812L6 2.5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.52786 5.94427C2.35917 6.28167 2.22977 6.63589 2.14132 7H1.5C1.22386 7 1 7.22386 1 7.5C1 8.05228 1.44772 8.5 2 8.5V11.1597C2 11.4718 2.07175 11.7682 2.2002 12.0326V14.2C2.2002 14.48 2.2002 14.62 2.25469 14.727C2.30263 14.8211 2.37912 14.8976 2.4732 14.9455C2.58016 15 2.72017 15 3.0002 15H3.4002C3.68022 15 3.82023 15 3.92719 14.9455C4.02127 14.8976 4.09776 14.8211 4.1457 14.727C4.2002 14.62 4.2002 14.48 4.2002 14.2V13.1833L4.84427 13.237C6.94445 13.412 9.05555 13.412 11.1557 13.237L11.7998 13.1833V14.2C11.7998 14.48 11.7998 14.62 11.8543 14.727C11.9022 14.8211 11.9787 14.8976 12.0728 14.9455C12.1798 15 12.3198 15 12.5998 15H12.9998C13.2798 15 13.4198 15 13.5268 14.9455C13.6209 14.8976 13.6974 14.8211 13.7453 14.727C13.7998 14.62 13.7998 14.48 13.7998 14.2V12.0326C13.9282 11.7682 14 11.4718 14 11.1597V8.5C14.5523 8.5 15 8.05228 15 7.5C15 7.22386 14.7761 7 14.5 7H13.8587C13.7702 6.63589 13.6408 6.28167 13.4721 5.94427L12.5528 4.10557C12.214 3.428 11.5215 3 10.7639 3H5.23607C4.47852 3 3.786 3.428 3.44721 4.10557L2.52786 5.94427ZM3.0823 6.83555L4.4448 4.11056C4.47868 4.0428 4.54793 4 4.62368 4H11.3765C11.4522 4 11.5215 4.0428 11.5554 4.11056L12.9179 6.83555C12.9593 6.91837 12.9106 7.0179 12.8198 7.03606C9.63815 7.67239 6.362 7.67239 3.18037 7.03606C3.08957 7.0179 3.04089 6.91837 3.0823 6.83555ZM3.3 9C3.13431 9 3 9.13431 3 9.3V10.2C3 10.3657 3.13431 10.5 3.3 10.5H3.98665C4.69637 10.5 5.35913 10.1658 5.75282 9.6094L5.96399 9.31094C6.05803 9.17803 5.95691 9 5.78738 9H3.3ZM12.6816 9C12.8574 9 13 9.13431 13 9.3V10.2C13 10.3657 12.8574 10.5 12.6816 10.5H12.0134C11.3036 10.5 10.6409 10.1658 10.2472 9.6094L10.036 9.31094C9.94197 9.17803 10.0431 9 10.2126 9H12.6816Z"
            })]
        })
    })
}
function NG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M1.10204 3.89805L2.53564 2.46445C3.38454 1.61555 4.50726 1.10342 5.69621 1.01405C5.86306 1.00151 5.99782 1.13817 6.02301 1.30359C6.16928 2.26408 6.99876 2.99998 8.00011 2.99998C9.00147 2.99998 9.83094 2.26408 9.97721 1.30359C10.0024 1.13817 10.1372 1.00151 10.304 1.01405C11.493 1.10342 12.6157 1.61555 13.4646 2.46445L14.8982 3.89805C14.9591 3.95893 14.9741 4.05192 14.9356 4.12892L13.6242 6.75179C13.5632 6.87389 13.4004 6.9003 13.3039 6.80377L12.1708 5.67069C12.1078 5.6077 12.0001 5.65231 12.0001 5.74141V14.2893C12.0001 14.4131 11.9158 14.5211 11.7957 14.5511C9.30366 15.1741 6.69656 15.1741 4.20449 14.5511C4.08438 14.5211 4.00011 14.4131 4.00011 14.2893V5.74141C4.00011 5.65232 3.8924 5.6077 3.8294 5.67069L2.69632 6.80377C2.59979 6.9003 2.43707 6.87389 2.37602 6.75179L1.06458 4.12892C1.02608 4.05192 1.04117 3.95893 1.10204 3.89805Z"
            })
        })
    })
}
function VG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1 8C1 6.38938 1.54396 4.9058 2.45818 3.72297C3.70371 4.73129 4.5 6.27265 4.5 8C4.5 9.72735 3.70371 11.2687 2.45818 12.277C1.54396 11.0942 1 9.61062 1 8Z"
            }), c.jsx("path", {
                d: "M6 8C6 5.84752 5.02847 3.92196 3.5 2.63789C4.71677 1.61568 6.28648 1 8 1C9.71352 1 11.2832 1.61568 12.5 2.63789C10.9715 3.92196 10 5.84752 10 8C10 10.1525 10.9715 12.078 12.5 13.3621C11.2832 14.3843 9.71352 15 8 15C6.28648 15 4.71677 14.3843 3.5 13.3621C5.02847 12.078 6 10.1525 6 8Z"
            }), c.jsx("path", {
                d: "M13.5418 3.72297C14.456 4.90581 15 6.38938 15 8C15 9.61062 14.456 11.0942 13.5418 12.277C12.2963 11.2687 11.5 9.72735 11.5 8C11.5 6.27265 12.2963 4.73129 13.5418 3.72297Z"
            })]
        })
    })
}
function BG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M1.32698 2.63803C1 3.27976 1 4.11984 1 5.8V10.2C1 11.8802 1 12.7202 1.32698 13.362C1.6146 13.9265 2.07354 14.3854 2.63803 14.673C3.27976 15 4.11984 15 5.8 15H10.2C11.8802 15 12.7202 15 13.362 14.673C13.9265 14.3854 14.3854 13.9265 14.673 13.362C15 12.7202 15 11.8802 15 10.2V5.8C15 4.11984 15 3.27976 14.673 2.63803C14.3854 2.07354 13.9265 1.6146 13.362 1.32698C12.7202 1 11.8802 1 10.2 1H5.8C4.11984 1 3.27976 1 2.63803 1.32698C2.07354 1.6146 1.6146 2.07354 1.32698 2.63803ZM4.15148 7.11652C3.80161 6.89478 3.33824 6.99864 3.11649 7.3485C2.89475 7.69836 2.99861 8.16174 3.34847 8.38348L5.89898 10L3.34847 11.6165C2.99861 11.8383 2.89475 12.3016 3.11649 12.6515C3.33824 13.0014 3.80161 13.1052 4.15148 12.8835L7.70148 10.6335C7.91847 10.496 8.04997 10.2569 8.04997 10C8.04997 9.74309 7.91847 9.50406 7.70148 9.36652L4.15148 7.11652Z"
            })
        })
    })
}
function UG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1 2.25C1 1.55964 1.55964 1 2.25 1H13.75C14.4404 1 15 1.55964 15 2.25V5.5H13.5V2.5H2.5V5.5H1V2.25Z"
            }), c.jsx("path", {
                d: "M13.5 10V13.5H2.5V10H1V13.75C1 14.4404 1.55964 15 2.25 15H13.75C14.4404 15 15 14.4404 15 13.75V10H13.5Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.94437 12C6.12497 12 6.28317 11.879 6.33043 11.7047L6.78607 10.0242H9.21692L9.67377 11.7049C9.72112 11.8791 9.87926 12 10.0598 12H10.4704C10.7359 12 10.9278 11.746 10.8551 11.4906L8.80767 4.29059C8.75877 4.11863 8.6017 4 8.42293 4H7.58126C7.40256 4 7.24553 4.11853 7.19657 4.2904L5.14519 11.4904C5.07241 11.7459 5.26426 12 5.52988 12H5.94437ZM8.90169 8.86443L8.02605 5.64295H7.97395L7.10051 8.86443H8.90169Z"
            }), c.jsx("path", {
                d: "M15 7H13V8.5H15V7Z"
            }), c.jsx("path", {
                d: "M3 7H1V8.5H3V7Z"
            })]
        })
    })
}
function HG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1 2.5C1 2.22386 1.22386 2 1.5 2H5.5C5.77614 2 6 2.22386 6 2.5V3C6 3.27614 5.77614 3.5 5.5 3.5H4.25V6.75C4.25 7.02614 4.02614 7.25 3.75 7.25H3.25C2.97386 7.25 2.75 7.02614 2.75 6.75L2.75 3.5H1.5C1.22386 3.5 1 3.27614 1 3V2.5Z"
            }), c.jsx("path", {
                d: "M8 2.5C8 2.22386 8.22386 2 8.5 2H14.5C14.7761 2 15 2.22386 15 2.5V3C15 3.27614 14.7761 3.5 14.5 3.5H8.5C8.22386 3.5 8 3.27614 8 3V2.5Z"
            }), c.jsx("path", {
                d: "M8 6C8 5.72386 8.22386 5.5 8.5 5.5H14.5C14.7761 5.5 15 5.72386 15 6V6.5C15 6.77614 14.7761 7 14.5 7H8.5C8.22386 7 8 6.77614 8 6.5V6Z"
            }), c.jsx("path", {
                d: "M1.5 9C1.22386 9 1 9.22386 1 9.5V10C1 10.2761 1.22386 10.5 1.5 10.5H14.5C14.7761 10.5 15 10.2761 15 10V9.5C15 9.22386 14.7761 9 14.5 9H1.5Z"
            }), c.jsx("path", {
                d: "M1 13C1 12.7239 1.22386 12.5 1.5 12.5H14.5C14.7761 12.5 15 12.7239 15 13V13.5C15 13.7761 14.7761 14 14.5 14H1.5C1.22386 14 1 13.7761 1 13.5V13Z"
            })]
        })
    })
}
function zG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M7.00206 12C6.6619 10.9795 4.0079 9.52514 1.99083 9.11282C1.45054 9.00238 1.00071 8.55482 1.00059 8.00336L1.0003 7.11238C0.999992 6.28154 0.999718 5.54547 1.00057 4.74807C1.00116 4.19629 1.45126 3.70835 1.96219 3.5C2.21214 3.39808 2.48656 3.27184 2.7858 3.13419C3.13266 2.97463 3.51303 2.74436 3.92734 2.49355C5.0388 1.8207 6.39448 1 8.00251 1H11.6706C12.1518 1 12.5648 1.34274 12.6535 1.81571C12.7285 2.02761 12.5714 2.25 12.3466 2.25H10.3731C10.166 2.25 9.99813 2.41789 9.99813 2.625C9.99813 2.83211 10.166 3 10.3731 3H12.6313C12.896 3 13.132 3.16679 13.2204 3.41635C13.3645 3.8231 13.0628 4.25 12.6313 4.25H11.3731C11.166 4.25 10.9981 4.41789 10.9981 4.625C10.9981 4.83211 11.166 5 11.3731 5H12.498C12.5266 5 12.9559 5.00575 13.3481 5.00786C13.681 5.00964 14.0545 5.31243 14.1137 5.63996C14.1712 5.95773 13.927 6.25 13.6041 6.25H12.3731C12.166 6.25 11.9981 6.41789 11.9981 6.625C11.9981 6.83211 12.166 7 12.3731 7H13.6242C14.1429 7 14.6053 7.32679 14.7785 7.81571C14.8939 8.43113 14.4218 9 13.7956 9H11.0025L10.9969 8.99998H10.0021C9.44978 8.99998 9.00207 9.4472 9.00207 9.99949V13C9.00207 14.2 8.50206 15 7.50206 15C6.92092 15 6.98145 14.3921 7.05562 13.6473C7.10907 13.1105 7.1696 12.5026 7.00206 12Z"
            })
        })
    })
}
function ZG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M7.00206 4C6.6619 5.02048 4.0079 6.47486 1.99083 6.88718C1.45054 6.99762 1.00071 7.44518 1.00059 7.99664L1.0003 8.88762C0.999992 9.71846 0.999718 10.4545 1.00057 11.2519C1.00116 11.8037 1.45126 12.2916 1.96219 12.5C2.21214 12.6019 2.48656 12.7282 2.7858 12.8658C3.13266 13.0254 3.51303 13.2556 3.92734 13.5065C5.0388 14.1793 6.39448 15 8.00251 15H11.6706C12.1518 15 12.5648 14.6573 12.6535 14.1843C12.7285 13.9724 12.5714 13.75 12.3466 13.75H10.3731C10.166 13.75 9.99813 13.5821 9.99813 13.375C9.99813 13.1679 10.166 13 10.3731 13H12.6313C12.896 13 13.132 12.8332 13.2204 12.5837C13.3645 12.1769 13.0628 11.75 12.6313 11.75H11.3731C11.166 11.75 10.9981 11.5821 10.9981 11.375C10.9981 11.1679 11.166 11 11.3731 11H12.498C12.5266 11 12.9559 10.9942 13.3481 10.9921C13.681 10.9904 14.0545 10.6876 14.1137 10.36C14.1712 10.0423 13.927 9.75 13.6041 9.75H12.3731C12.166 9.75 11.9981 9.58211 11.9981 9.375C11.9981 9.16789 12.166 9 12.3731 9H13.6242C14.1429 9 14.6053 8.67321 14.7785 8.18429C14.8939 7.56887 14.4218 7 13.7956 7H11.0025L10.9969 7.00002H10.0021C9.44978 7.00002 9.00207 6.5528 9.00207 6.00051V3C9.00207 1.80001 8.50206 1.00002 7.50206 1C6.92092 1 6.98145 1.6079 7.05562 2.35267C7.10907 2.88947 7.1696 3.49737 7.00206 4Z"
            })
        })
    })
}
function qG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M4 1.5C4 1.22386 4.22386 1 4.5 1H5C5.27614 1 5.5 1.22386 5.5 1.5V2.5C5.5 2.77614 5.72386 3 6 3H6.5C6.77614 3 7 2.77614 7 2.5V1.5C7 1.22386 7.22386 1 7.5 1H8.5C8.77614 1 9 1.22386 9 1.5V2.5C9 2.77614 9.22386 3 9.5 3H10C10.2761 3 10.5 2.77614 10.5 2.5V1.5C10.5 1.22386 10.7239 1 11 1H11.5C11.7761 1 12 1.22386 12 1.5V4C12 5.23223 11.2571 6.29094 10.1947 6.75267L10.7778 12H5.22222L5.80526 6.75267C4.74291 6.29094 4 5.23223 4 4V1.5Z"
            }), c.jsx("path", {
                d: "M4 13C3.44772 13 3 13.4477 3 14V14.5C3 14.7761 3.22386 15 3.5 15H12.5C12.7761 15 13 14.7761 13 14.5V14C13 13.4477 12.5523 13 12 13H4Z"
            })]
        })
    })
}
function WG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M11 1.5C11 1.22386 10.7761 1 10.5 1H5.5C5.22386 1 5 1.22386 5 1.5V3H2.5C2.22386 3 2 3.22386 2 3.5V3.79289C2 3.9255 2.05268 4.05268 2.14645 4.14645L5 7V9H2.5C2.22386 9 2 9.22386 2 9.5V9.79289C2 9.9255 2.05268 10.0527 2.14645 10.1464L5 13V14.5C5 14.7761 5.22386 15 5.5 15H10.5C10.7761 15 11 14.7761 11 14.5V13L13.8536 10.1464C13.9473 10.0527 14 9.9255 14 9.79289V9.5C14 9.22386 13.7761 9 13.5 9H11V7L13.8536 4.14645C13.9473 4.05268 14 3.9255 14 3.79289V3.5C14 3.22386 13.7761 3 13.5 3H11V1.5ZM9.5 5C9.5 5.82843 8.82843 6.5 8 6.5C7.17157 6.5 6.5 5.82843 6.5 5C6.5 4.17157 7.17157 3.5 8 3.5C8.82843 3.5 9.5 4.17157 9.5 5ZM8 12.5C8.82843 12.5 9.5 11.8284 9.5 11C9.5 10.1716 8.82843 9.5 8 9.5C7.17157 9.5 6.5 10.1716 6.5 11C6.5 11.8284 7.17157 12.5 8 12.5Z"
            })
        })
    })
}
function GG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.32843 2C4.9306 2 4.54907 2.15804 4.26777 2.43934L3.85355 2.85355C3.65829 3.04882 3.34171 3.04882 3.14645 2.85355C2.95118 2.65829 2.95118 2.34171 3.14645 2.14645L3.56066 1.73223C4.0295 1.26339 4.66539 1 5.32843 1H10.6716C11.3346 1 11.9705 1.26339 12.4393 1.73223L12.8536 2.14645C13.0488 2.34171 13.0488 2.65829 12.8536 2.85355C12.6583 3.04882 12.3417 3.04882 12.1464 2.85355L11.7322 2.43934C11.4509 2.15804 11.0694 2 10.6716 2H9V3.00169C10.1649 3.00979 10.8313 3.05658 11.362 3.32698C11.9265 3.6146 12.3854 4.07354 12.673 4.63803C13 5.27976 13 6.11984 13 7.8V13.4342C13 13.4966 12.9557 13.5502 12.8945 13.5619C12.5534 13.6273 12.2114 13.6857 11.8687 13.7373L12.5 15H11L10.4553 13.9105C8.98183 14.0503 7.49942 14.064 6.02423 13.9515L5.5 15H4L4.59838 13.8032C4.09911 13.7374 3.60128 13.6569 3.10553 13.5619C3.04428 13.5502 3 13.4966 3 13.4342V7.8C3 6.11984 3 5.27976 3.32698 4.63803C3.6146 4.07354 4.07354 3.6146 4.63803 3.32698C5.24038 3.02007 6.01747 3.00123 7.5 3.00008V2H5.32843ZM9 11C9 11.5523 8.55228 12 8 12C7.44772 12 7 11.5523 7 11C7 10.4477 7.44772 10 8 10C8.55228 10 9 10.4477 9 11ZM5.5 4C4.67157 4 4 4.67157 4 5.5V9H5.5V4ZM12 5.5C12 4.67157 11.3284 4 10.5 4V9H12V5.5ZM9.5 4H6.5V9H9.5V4Z"
            })
        })
    })
}
function KG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M6.36333 1C4.72221 1 3.33256 2.2105 3.10747 3.83611L2.15072 10.746C2.05836 11.413 2.3487 12.0754 2.90181 12.4595C3.49315 12.8701 4.1217 13.2016 4.7731 13.4538L4 15H5.5L6.07649 13.847C7.49209 14.1586 8.96688 14.122 10.3685 13.7371L11 15H12.5L11.6408 13.2816C12.1451 13.0566 12.6333 12.7825 13.0985 12.4595C13.6516 12.0754 13.942 11.413 13.8496 10.746L12.8929 3.8361C12.6678 2.2105 11.2781 1 9.637 1H6.36333ZM4.91259 4.21391C4.44986 4.25061 4.07197 4.60566 3.99832 5.07292L3.50217 8.22083C3.48835 8.30852 3.54187 8.39266 3.62603 8.41554C6.49194 9.19482 9.50806 9.19482 12.374 8.41554C12.4581 8.39266 12.5117 8.30852 12.4978 8.22083L12.0017 5.07292C11.928 4.60566 11.5501 4.25061 11.0874 4.21391L8.77926 4.03085C8.26054 3.98972 7.73946 3.98972 7.22074 4.03085L4.91259 4.21391ZM6.44317 11.763C6.21807 12.12 5.38947 12.0678 4.59243 11.6464C3.79539 11.225 3.33174 10.594 3.55683 10.237C3.78193 9.88004 4.61053 9.93221 5.40757 10.3536C6.20461 10.775 6.66826 11.406 6.44317 11.763ZM11.4076 11.6464C10.6105 12.0678 9.78193 12.12 9.55683 11.763C9.33174 11.406 9.79539 10.775 10.5924 10.3536C11.3895 9.93221 12.2181 9.88004 12.4432 10.237C12.6683 10.594 12.2046 11.225 11.4076 11.6464ZM6 2.88889C6 2.39797 6.39797 2 6.88889 2H9.11111C9.60203 2 10 2.39797 10 2.88889C10 2.95025 9.95025 3 9.88889 3H6.11111C6.04975 3 6 2.95025 6 2.88889Z"
            })
        })
    })
}
function YG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M12.3687 6.5C12.6448 6.5 12.8687 6.72386 12.8687 7C12.8687 7.03856 12.8642 7.07699 12.8554 7.11452L11.3628 13.4581C11.1502 14.3615 10.3441 15 9.41597 15H6.58403C5.65593 15 4.84977 14.3615 4.6372 13.4581L3.14459 7.11452C3.08135 6.84572 3.24798 6.57654 3.51678 6.51329C3.55431 6.50446 3.59274 6.5 3.6313 6.5H12.3687ZM8.5 1C9.88071 1 11 2.11929 11 3.5H13C13.5523 3.5 14 3.94772 14 4.5V5C14 5.27614 13.7761 5.5 13.5 5.5H2.5C2.22386 5.5 2 5.27614 2 5V4.5C2 3.94772 2.44772 3.5 3 3.5H5C5 2.11929 6.11929 1 7.5 1H8.5ZM8.5 2.5H7.5C6.94772 2.5 6.5 2.94772 6.5 3.5H9.5C9.5 2.94772 9.05228 2.5 8.5 2.5Z"
            })
        })
    })
}
function QG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M12.5002 8C12.0441 8.60722 11.3179 9 10.5 9C9.65447 9 8.90699 8.58025 8.45455 7.93776C7.91162 8.58025 7.01463 9 6 9C5.01749 9 4.1453 8.60641 3.59808 7.99811C3.56554 7.99937 3.53285 8 3.5 8C2.11929 8 1 6.88071 1 5.5C1 4.11929 2.11929 3 3.5 3C3.67145 3 3.83887 3.01726 4.00062 3.05013C4.00021 3.03347 4 3.01676 4 3C4 1.89543 4.89543 1 6 1C6.58262 1 7.10705 1.24912 7.47259 1.64666C8.04463 1.23947 8.74435 1 9.5 1C10.8983 1 12.1051 1.82002 12.6657 3.00541C13.9692 3.09072 15 4.17498 15 5.5C15 6.88065 13.8808 7.9999 12.5002 8Z"
            }), c.jsx("path", {
                d: "M6.5 10C6.5 10 6.57058 10.3486 6.51278 10.6682C6.24708 12.1376 5.65716 13.8428 5 14.5C4.91086 14.5891 4.93776 14.7093 4.97125 14.8589C4.98121 14.9033 4.99175 14.9504 4.99999 15H11C11.0083 14.9504 11.0188 14.9033 11.0287 14.8588C11.0622 14.7093 11.0891 14.5891 11 14.5C10.3454 13.8454 9.77968 12.1621 9.52568 10.6986C9.45987 10.3194 9.5 10 9.5 10C9.15076 9.8695 8.78026 9.73501 8.5 9.5C8.00188 9.86223 7.15243 9.89997 6.5 10Z"
            })]
        })
    })
}
function XG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M8 1C7.86256 1 7.72512 1.44561 7.62922 2.01019C5.04762 2.14941 1.3385 3.72742 1.02174 7.4768C1.0063 7.65958 1.23374 7.75446 1.37347 7.63561C1.91041 7.17891 2.66534 6.8 3.69231 6.8C4.476 6.8 5.10128 7.24131 5.47207 7.58868C5.67177 7.77577 6.02054 7.77577 6.22024 7.58868C6.59103 7.24131 7.2163 6.8 8 6.8C8.88278 6.8 9.39704 7.17331 9.74875 7.53741C9.94979 7.74552 10.3366 7.7278 10.56 7.54393C11.005 7.17778 11.7157 6.8 12.3077 6.8C12.9721 6.8 13.8927 7.15683 14.5261 7.59531C14.6862 7.70608 14.9441 7.57138 14.9092 7.37991C14.1648 3.29767 10.9018 2.11049 8.37033 2.00754C8.27445 1.44422 8.13723 1 8 1Z"
            }), c.jsx("path", {
                d: "M8.75 8.65358C8.75 8.23937 8.41421 8 8 8C7.58579 8 7.25 8.23937 7.25 8.65358V12.75C7.25 13.1642 6.91421 13.5 6.5 13.5C6.08579 13.5 5.75 13.1642 5.75 12.75V12C5.75 11.5858 5.41421 11.5 5 11.5C4.58579 11.5 4.25 11.5858 4.25 12V12.75C4.25 13.9926 5.25736 15 6.5 15C7.74264 15 8.75 13.9926 8.75 12.75V8.65358Z"
            })]
        })
    })
}
function JG(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15ZM5.84164 11.1708C5.6564 11.5413 5.20589 11.6915 4.83541 11.5062C4.46493 11.321 4.31476 10.8705 4.5 10.5C4.76397 9.97207 5.82582 8.58541 8.17082 8.58541C10.5158 8.58541 11.5777 9.97207 11.8416 10.5C12.0269 10.8705 11.8767 11.321 11.5062 11.5062C11.1357 11.6915 10.6852 11.5413 10.5 11.1708C10.4306 11.0321 9.82582 10.0854 8.17082 10.0854C6.51582 10.0854 5.91101 11.0321 5.84164 11.1708ZM5 6C5 5.44772 5.44772 5 6 5C6.55228 5 7 5.44772 7 6V6.5C7 6.77614 6.77614 7 6.5 7H5.5C5.22386 7 5 6.77614 5 6.5V6ZM10 5C9.44771 5 9 5.44772 9 6V6.5C9 6.77614 9.22386 7 9.5 7H10.5C10.7761 7 11 6.77614 11 6.5V6C11 5.44772 10.5523 5 10 5Z"
            })
        })
    })
}
function eK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M9.80278 3.86708C9.92917 3.60478 10 3.31066 10 3C10 2.75308 9.95525 2.51662 9.87343 2.29827C9.58922 1.53984 8.85765 1 8 1C7.14235 1 6.41078 1.53984 6.12657 2.29827L6.12136 2.31233C6.04285 2.52676 6 2.75838 6 3C6 3.31346 6.07211 3.61007 6.20065 3.87416C6.52505 4.54067 7.20889 5 8 5C8.79111 5 9.47495 4.54067 9.79935 3.87416L9.80278 3.86708Z"
            }), c.jsx("path", {
                d: "M10.2458 4.09961C10.9322 4.49569 11.5043 5.06777 11.9004 5.75419C12.2322 5.5914 12.6054 5.5 13 5.5C13.163 5.5 13.3223 5.51559 13.4765 5.54537C12.8748 4.20478 11.7952 3.12524 10.4546 2.52345C10.4844 2.67772 10.5 2.83704 10.5 3C10.5 3.39456 10.4086 3.76777 10.2458 4.09961Z"
            }), c.jsx("path", {
                d: "M13 10C13.2469 10 13.4834 9.95525 13.7017 9.87343C14.4602 9.58922 15 8.85765 15 8C15 7.14235 14.4602 6.41078 13.7017 6.12657C13.4834 6.04475 13.2469 6 13 6C12.6865 6 12.3899 6.07211 12.1258 6.20065C11.4593 6.52506 11 7.20889 11 8C11 8.79111 11.4593 9.47495 12.1258 9.79935C12.3899 9.92789 12.6865 10 13 10Z"
            }), c.jsx("path", {
                d: "M11.9004 10.2458C12.2322 10.4086 12.6054 10.5 13 10.5C13.163 10.5 13.3223 10.4844 13.4765 10.4546C12.8748 11.7952 11.7952 12.8748 10.4546 13.4765C10.4844 13.3223 10.5 13.163 10.5 13C10.5 12.6054 10.4086 12.2322 10.2458 11.9004C10.9322 11.5043 11.5043 10.9322 11.9004 10.2458Z"
            }), c.jsx("path", {
                d: "M6.20065 12.1258C6.52506 11.4593 7.20889 11 8 11C8.79111 11 9.47495 11.4593 9.79935 12.1258C9.92789 12.3899 10 12.6865 10 13C10 13.2469 9.95525 13.4834 9.87343 13.7017C9.58922 14.4602 8.85765 15 8 15C7.14235 15 6.41078 14.4602 6.12657 13.7017C6.04475 13.4834 6 13.2469 6 13C6 12.6865 6.07211 12.3899 6.20065 12.1258Z"
            }), c.jsx("path", {
                d: "M5.75419 11.9004C5.06777 11.5043 4.49569 10.9322 4.09961 10.2458C3.76777 10.4086 3.39456 10.5 3 10.5C2.83704 10.5 2.67772 10.4844 2.52345 10.4546C3.12524 11.7952 4.20478 12.8748 5.54537 13.4765C5.51559 13.3223 5.5 13.163 5.5 13C5.5 12.6054 5.5914 12.2322 5.75419 11.9004Z"
            }), c.jsx("path", {
                d: "M1 8C1 7.14235 1.53984 6.41078 2.29827 6.12657C2.51662 6.04475 2.75308 6 3 6C3.31346 6 3.61007 6.07211 3.87416 6.20065C4.54067 6.52506 5 7.20889 5 8C5 8.79111 4.54067 9.47495 3.87416 9.79935C3.61007 9.92789 3.31346 10 3 10C2.75308 10 2.51662 9.95525 2.29827 9.87343C1.53984 9.58922 1 8.85765 1 8Z"
            }), c.jsx("path", {
                d: "M4.0996 5.75418C3.76776 5.5914 3.39455 5.5 3 5.5C2.83704 5.5 2.67772 5.51559 2.52345 5.54537C3.12523 4.20479 4.20479 3.12523 5.54537 2.52345C5.51559 2.67772 5.5 2.83704 5.5 3C5.5 3.39455 5.5914 3.76776 5.75418 4.0996C5.06777 4.49569 4.49569 5.06777 4.0996 5.75418Z"
            })]
        })
    })
}
function tK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M12.5627 9.57636L12.75 9.69796L13.7032 10.3553C14.461 10.8779 14.9339 11.7171 14.9936 12.6286L15 12.825V13.1248C15 14.1111 14.2385 14.9196 13.2714 14.9944L13.1248 15H7.87519C6.88887 15 6.0804 14.2385 6.00564 13.2714L6 13.1248V12.825C6 11.9044 6.42236 11.0386 7.13885 10.472L7.29684 10.3553L8.25 9.69796C9.54299 8.80627 11.2335 8.76574 12.5627 9.57636ZM7.56266 7.57636L7.75 7.69796L8.67249 8.33269C8.35326 8.45808 8.04396 8.61758 7.75 8.81119L6.34989 9.73331C5.50723 10.2883 5 11.2297 5 12.2387V12.8112C5 12.8747 5.00271 12.9377 5.00802 12.9998L2.87519 13C1.88887 13 1.0804 12.2385 1.00564 11.2714L1 11.1248V10.825C1 9.90435 1.42236 9.03865 2.13885 8.47203L2.29684 8.35528L3.25 7.69796C4.54299 6.80627 6.23353 6.76574 7.56266 7.57636ZM10.5 3C11.8807 3 13 4.11929 13 5.5C13 6.88071 11.8807 8 10.5 8C9.11929 8 8 6.88071 8 5.5C8 4.11929 9.11929 3 10.5 3ZM5.5 1C6.88071 1 8 2.11929 8 3.5C8 4.88071 6.88071 6 5.5 6C4.11929 6 3 4.88071 3 3.5C3 2.11929 4.11929 1 5.5 1Z"
            })
        })
    })
}
function nK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M3 2C1.89543 2 1 2.89543 1 4V12C1 13.1046 1.89543 14 3 14H13C14.1046 14 15 13.1046 15 12V4C15 2.89543 14.1046 2 13 2H3ZM6.93536 4.99059C6.53684 4.72197 6 5.00751 6 5.48812V10.5121C6 10.9927 6.53685 11.2782 6.93537 11.0096L10.6619 8.49753C11.0148 8.25969 11.0148 7.74033 10.6619 7.50249L6.93536 4.99059Z"
            })
        })
    })
}
function rK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 1C11.866 1 15 4.13401 15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1ZM8.75 2.55071C11.1875 2.88307 13.1169 4.81246 13.4493 7.25H10.5C10.2239 7.25 10 7.47386 10 7.75V8.25C10 8.52614 10.2239 8.75 10.5 8.75H13.4493C13.1169 11.1875 11.1875 13.1169 8.75 13.4493V10.5C8.75 10.2239 8.52614 10 8.25 10H7.75C7.47386 10 7.25 10.2239 7.25 10.5V13.4493C4.81246 13.1169 2.88307 11.1875 2.55071 8.75H5.5C5.77614 8.75 6 8.52614 6 8.25V7.75C6 7.47386 5.77614 7.25 5.5 7.25H2.55071C2.88307 4.81246 4.81246 2.88307 7.25 2.55071V5.5C7.25 5.77614 7.47386 6 7.75 6H8.25C8.52614 6 8.75 5.77614 8.75 5.5V2.55071Z"
            })
        })
    })
}
function sK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M2.45001 5.00361C2.47031 4.99013 2.49096 4.97684 2.51195 4.96372C2.56133 4.64722 2.76067 4.36966 3.05279 4.22361C3.33431 4.08284 3.66569 4.08284 3.94721 4.22361L4.19313 4.34657C5.89916 3.96929 7.89175 3.99916 8.00794 4.00143H8.21989L8.23137 4.00146C8.84559 4.00329 10.0382 4.00686 11.2238 4.20395C12.0763 4.34569 12.9254 4.58754 13.5529 5.00075L13.557 5.00346L13.5596 5.00515L13.5549 5.00675L13.5575 5.00841L13.5616 5.01108C13.6546 5.07186 14.208 5.45328 14.6006 6.2389C14.9151 6.86848 15.1264 7.75767 14.9145 8.9494C14.7748 9.73919 14.431 10.444 13.9223 10.9852C13.5486 11.3833 13.1231 11.6633 12.6568 11.8191C12.6097 11.8364 12.3993 11.9119 12.0853 11.9607C11.1637 12.1023 10.1966 11.8568 9.43196 11.2889L9.01119 10.9758C8.83064 10.8421 8.6391 10.7225 8.43813 10.6202C8.16181 10.4786 7.83838 10.4786 7.56833 10.6171C7.36265 10.7225 7.16954 10.8421 6.98899 10.9758L6.56822 11.2889C5.94648 11.7514 5.18815 12 4.43139 12C4.25869 12 4.08599 11.9874 3.91485 11.9607C3.60084 11.9119 3.39046 11.8364 3.34336 11.8191C2.87706 11.6633 2.45158 11.3833 2.07791 10.9852C1.56922 10.444 1.22695 9.73919 1.08565 8.9494C0.594223 6.18829 2.37465 5.05081 2.45001 5.00361ZM2.56231 8.68585C2.6572 9.21559 2.87904 9.6474 3.1709 9.95792C3.393 10.1945 3.6125 10.3275 3.81858 10.3963L3.83975 10.4034L3.86069 10.4111C3.86069 10.4111 3.86666 10.4133 3.87687 10.4167C3.88781 10.4203 3.90589 10.426 3.93035 10.4328C3.97975 10.4465 4.05338 10.4642 4.14507 10.4784L4.14647 10.4787C4.23643 10.4927 4.3315 10.5 4.43139 10.5C4.86497 10.5 5.3094 10.3558 5.67278 10.0855L6.09621 9.77041C6.34445 9.58654 6.60751 9.424 6.884 9.28229M2.56231 8.68585C2.38456 7.68623 2.62279 7.08436 2.83091 6.74795C3.02224 6.43868 3.2344 6.2842 3.25692 6.26814L3.26302 6.26432L3.27956 6.25334C3.28808 6.24769 3.29713 6.24186 3.30673 6.23586L3.99787 5.92599L4.51702 5.81118C6.03558 5.47536 7.87392 5.4991 7.97876 5.50114L7.99335 5.50143H8.21989L8.22688 5.50145C8.84463 5.5033 9.92611 5.50879 10.978 5.68367C11.675 5.79956 12.2329 5.97102 12.6058 6.17952L12.7398 6.26596C12.7536 6.27565 13.0443 6.48024 13.2587 6.90935C13.4303 7.25272 13.5927 7.81494 13.4377 8.68686L13.4375 8.68807C13.3444 9.214 13.1225 9.64592 12.8293 9.95792C12.6072 10.1945 12.3877 10.3275 12.1816 10.3963L12.1604 10.4034L12.1395 10.4111C12.1395 10.4111 12.1377 10.4118 12.1355 10.4125C12.1328 10.4135 12.1288 10.4149 12.1233 10.4167C12.1124 10.4203 12.0943 10.426 12.0698 10.4328C12.0206 10.4464 11.9474 10.4641 11.8562 10.4783C11.3418 10.5569 10.7778 10.4198 10.327 10.0851L9.90663 9.77238L9.90397 9.77041C9.66003 9.58973 9.3983 9.42592 9.1203 9.28432C8.42035 8.92641 7.58838 8.92123 6.884 9.28229"
            })
        })
    })
}
function iK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5 2.48C5 2.31198 5 2.22798 5.0327 2.1638C5.06146 2.10735 5.10735 2.06146 5.1638 2.0327C5.22798 2 5.31198 2 5.48 2H9.52C9.68802 2 9.77202 2 9.8362 2.0327C9.89265 2.06146 9.93854 2.10735 9.9673 2.1638C10 2.22798 10 2.31198 10 2.48V3.52C10 3.68802 10 3.77202 9.9673 3.8362C9.93854 3.89265 9.89265 3.93854 9.8362 3.9673C9.77202 4 9.68802 4 9.52 4H5.48C5.31198 4 5.22798 4 5.1638 3.9673C5.10735 3.93854 5.06146 3.89265 5.0327 3.8362C5 3.77202 5 3.68802 5 3.52V2.48Z"
            }), c.jsx("path", {
                d: "M13 5.48C13 5.31198 13 5.22798 13.0327 5.1638C13.0615 5.10735 13.1074 5.06146 13.1638 5.0327C13.228 5 13.312 5 13.48 5H14.52C14.688 5 14.772 5 14.8362 5.0327C14.8926 5.06146 14.9385 5.10735 14.9673 5.1638C15 5.22798 15 5.31198 15 5.48V6.52C15 6.68802 15 6.77202 14.9673 6.8362C14.9385 6.89265 14.8926 6.93854 14.8362 6.9673C14.772 7 14.688 7 14.52 7H13.48C13.312 7 13.228 7 13.1638 6.9673C13.1074 6.93854 13.0615 6.89265 13.0327 6.8362C13 6.77202 13 6.68802 13 6.52V5.48Z"
            }), c.jsx("path", {
                d: "M1 5.48C1 5.31198 1 5.22798 1.0327 5.1638C1.06146 5.10735 1.10735 5.06146 1.1638 5.0327C1.22798 5 1.31198 5 1.48 5H2.52C2.68802 5 2.77202 5 2.8362 5.0327C2.89265 5.06146 2.93854 5.10735 2.9673 5.1638C3 5.22798 3 5.31198 3 5.48V6.52C3 6.68802 3 6.77202 2.9673 6.8362C2.93854 6.89265 2.89265 6.93854 2.8362 6.9673C2.77202 7 2.68802 7 2.52 7H1.48C1.31198 7 1.22798 7 1.1638 6.9673C1.10735 6.93854 1.06146 6.89265 1.0327 6.8362C1 6.77202 1 6.68802 1 6.52V5.48Z"
            }), c.jsx("path", {
                d: "M4 5.48C4 5.31198 4 5.22798 4.0327 5.1638C4.06146 5.10735 4.10735 5.06146 4.1638 5.0327C4.22798 5 4.31198 5 4.48 5H11.52C11.688 5 11.772 5 11.8362 5.0327C11.8926 5.06146 11.9385 5.10735 11.9673 5.1638C12 5.22798 12 5.31198 12 5.48V6.52C12 6.68802 12 6.77202 11.9673 6.8362C11.9385 6.89265 11.8926 6.93854 11.8362 6.9673C11.772 7 11.688 7 11.52 7H4.48C4.31198 7 4.22798 7 4.1638 6.9673C4.10735 6.93854 4.06146 6.89265 4.0327 6.8362C4 6.77202 4 6.68802 4 6.52V5.48Z"
            }), c.jsx("path", {
                d: "M11 2.48C11 2.31198 11 2.22798 11.0327 2.1638C11.0615 2.10735 11.1074 2.06146 11.1638 2.0327C11.228 2 11.312 2 11.48 2H14.52C14.688 2 14.772 2 14.8362 2.0327C14.8926 2.06146 14.9385 2.10735 14.9673 2.1638C15 2.22798 15 2.31198 15 2.48V3.52C15 3.68802 15 3.77202 14.9673 3.8362C14.9385 3.89265 14.8926 3.93854 14.8362 3.9673C14.772 4 14.688 4 14.52 4H11.48C11.312 4 11.228 4 11.1638 3.9673C11.1074 3.93854 11.0615 3.89265 11.0327 3.8362C11 3.77202 11 3.68802 11 3.52V2.48Z"
            }), c.jsx("path", {
                d: "M1 2.48C1 2.31198 1 2.22798 1.0327 2.1638C1.06146 2.10735 1.10735 2.06146 1.1638 2.0327C1.22798 2 1.31198 2 1.48 2H3.52C3.68802 2 3.77202 2 3.8362 2.0327C3.89265 2.06146 3.93854 2.10735 3.9673 2.1638C4 2.22798 4 2.31198 4 2.48V3.52C4 3.68802 4 3.77202 3.9673 3.8362C3.93854 3.89265 3.89265 3.93854 3.8362 3.9673C3.77202 4 3.68802 4 3.52 4H1.48C1.31198 4 1.22798 4 1.1638 3.9673C1.10735 3.93854 1.06146 3.89265 1.0327 3.8362C1 3.77202 1 3.68802 1 3.52V2.48Z"
            }), c.jsx("path", {
                d: "M6 8.48C6 8.31198 6 8.22798 6.0327 8.1638C6.06146 8.10735 6.10735 8.06146 6.1638 8.0327C6.22798 8 6.31198 8 6.48 8H10.52C10.688 8 10.772 8 10.8362 8.0327C10.8926 8.06146 10.9385 8.10735 10.9673 8.1638C11 8.22798 11 8.31198 11 8.48V9.52C11 9.68802 11 9.77202 10.9673 9.8362C10.9385 9.89265 10.8926 9.93854 10.8362 9.9673C10.772 10 10.688 10 10.52 10H6.48C6.31198 10 6.22798 10 6.1638 9.9673C6.10735 9.93854 6.06146 9.89265 6.0327 9.8362C6 9.77202 6 9.68802 6 9.52V8.48Z"
            }), c.jsx("path", {
                d: "M12 8.48C12 8.31198 12 8.22798 12.0327 8.1638C12.0615 8.10735 12.1074 8.06146 12.1638 8.0327C12.228 8 12.312 8 12.48 8H14.52C14.688 8 14.772 8 14.8362 8.0327C14.8926 8.06146 14.9385 8.10735 14.9673 8.1638C15 8.22798 15 8.31198 15 8.48V9.52C15 9.68802 15 9.77202 14.9673 9.8362C14.9385 9.89265 14.8926 9.93854 14.8362 9.9673C14.772 10 14.688 10 14.52 10H12.48C12.312 10 12.228 10 12.1638 9.9673C12.1074 9.93854 12.0615 9.89265 12.0327 9.8362C12 9.77202 12 9.68802 12 9.52V8.48Z"
            }), c.jsx("path", {
                d: "M1 8.48C1 8.31198 1 8.22798 1.0327 8.1638C1.06146 8.10735 1.10735 8.06146 1.1638 8.0327C1.22798 8 1.31198 8 1.48 8H4.52C4.68802 8 4.77202 8 4.8362 8.0327C4.89265 8.06146 4.93854 8.10735 4.9673 8.1638C5 8.22798 5 8.31198 5 8.48V9.52C5 9.68802 5 9.77202 4.9673 9.8362C4.93854 9.89265 4.89265 9.93854 4.8362 9.9673C4.77202 10 4.68802 10 4.52 10C3.33281 10 2.66719 10 1.48 10C1.31198 10 1.22798 10 1.1638 9.9673C1.10735 9.93854 1.06146 9.89265 1.0327 9.8362C1 9.77202 1 9.68802 1 9.52V8.48Z"
            }), c.jsx("path", {
                d: "M7 11.48C7 11.312 7 11.228 7.0327 11.1638C7.06146 11.1074 7.10735 11.0615 7.1638 11.0327C7.22798 11 7.31198 11 7.48 11H9.52C9.68802 11 9.77202 11 9.8362 11.0327C9.89265 11.0615 9.93854 11.1074 9.9673 11.1638C10 11.228 10 11.312 10 11.48V12.52C10 12.688 10 12.772 9.9673 12.8362C9.93854 12.8926 9.89265 12.9385 9.8362 12.9673C9.77202 13 9.68802 13 9.52 13H7.48C7.31198 13 7.22798 13 7.1638 12.9673C7.10735 12.9385 7.06146 12.8926 7.0327 12.8362C7 12.772 7 12.688 7 12.52V11.48Z"
            }), c.jsx("path", {
                d: "M11 11.48C11 11.312 11 11.228 11.0327 11.1638C11.0615 11.1074 11.1074 11.0615 11.1638 11.0327C11.228 11 11.312 11 11.48 11H14.52C14.688 11 14.772 11 14.8362 11.0327C14.8926 11.0615 14.9385 11.1074 14.9673 11.1638C15 11.228 15 11.312 15 11.48V12.52C15 12.688 15 12.772 14.9673 12.8362C14.9385 12.8926 14.8926 12.9385 14.8362 12.9673C14.772 13 14.688 13 14.52 13H11.48C11.312 13 11.228 13 11.1638 12.9673C11.1074 12.9385 11.0615 12.8926 11.0327 12.8362C11 12.772 11 12.688 11 12.52V11.48Z"
            }), c.jsx("path", {
                d: "M1 11.48C1 11.312 1 11.228 1.0327 11.1638C1.06146 11.1074 1.10735 11.0615 1.1638 11.0327C1.22798 11 1.31198 11 1.48 11H5.52C5.68802 11 5.77202 11 5.8362 11.0327C5.89265 11.0615 5.93854 11.1074 5.9673 11.1638C6 11.228 6 11.312 6 11.48V12.52C6 12.688 6 12.772 5.9673 12.8362C5.93854 12.8926 5.89265 12.9385 5.8362 12.9673C5.77202 13 5.68802 13 5.52 13H1.48C1.31198 13 1.22798 13 1.1638 12.9673C1.10735 12.9385 1.06146 12.8926 1.0327 12.8362C1 12.772 1 12.688 1 12.52V11.48Z"
            })]
        })
    })
}
function aK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M6.27703 1C5.86813 1 5.50042 1.24895 5.34856 1.62861L5 2.5H11L10.6514 1.62861C10.4996 1.24895 10.1319 1 9.72297 1H6.27703Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M13 8.86622V9.8C13 10.9201 13 11.4802 12.782 11.908C12.5903 12.2843 12.2843 12.5903 11.908 12.782C11.4802 13 10.9201 13 9.8 13H6.2C5.0799 13 4.51984 13 4.09202 12.782C3.71569 12.5903 3.40973 12.2843 3.21799 11.908C3 11.4802 3 10.9201 3 9.8V6.2C3 5.0799 3 4.51984 3.21799 4.09202C3.40973 3.71569 3.71569 3.40973 4.09202 3.21799C4.51984 3 5.0799 3 6.2 3H9.8C10.9201 3 11.4802 3 11.908 3.21799C12.2843 3.40973 12.5903 3.71569 12.782 4.09202C12.9157 4.35431 12.9674 4.66631 12.9874 5.1266C13.2932 5.29764 13.5 5.62467 13.5 6V8C13.5 8.37014 13.2989 8.69331 13 8.86622ZM6.2 4.5H9.8C10.3848 4.5 10.7332 4.50117 10.9914 4.52227C11.1491 4.53514 11.2153 4.55214 11.2331 4.55765C11.3224 4.60469 11.3953 4.67765 11.4424 4.76693C11.4479 4.78469 11.4649 4.85094 11.4777 5.00855C11.4988 5.26681 11.5 5.6152 11.5 6.2V9.8C11.5 10.3848 11.4988 10.7332 11.4777 10.9914C11.4649 11.1491 11.4479 11.2153 11.4424 11.2331C11.3953 11.3224 11.3224 11.3953 11.2331 11.4424C11.2153 11.4479 11.1491 11.4649 10.9914 11.4777C10.7332 11.4988 10.3848 11.5 9.8 11.5H6.2C5.6152 11.5 5.26681 11.4988 5.00855 11.4777C4.85093 11.4649 4.78468 11.4479 4.76692 11.4424C4.67765 11.3953 4.60469 11.3224 4.55765 11.2331C4.55214 11.2153 4.53514 11.1491 4.52227 10.9914C4.50117 10.7332 4.5 10.3848 4.5 9.8V6.2C4.5 5.6152 4.50117 5.26681 4.52227 5.00855C4.53514 4.85093 4.55214 4.78468 4.55765 4.76693C4.60469 4.67765 4.67765 4.60469 4.76692 4.55765C4.78468 4.55214 4.85093 4.53514 5.00855 4.52227C5.26681 4.50117 5.6152 4.5 6.2 4.5ZM11.2383 4.55945L11.2352 4.55833C11.2374 4.55904 11.2383 4.55945 11.2383 4.55945ZM11.4405 4.76175C11.4405 4.76175 11.441 4.76264 11.4417 4.76478L11.4405 4.76175ZM11.4405 11.2382L11.4417 11.2353C11.441 11.2374 11.4405 11.2382 11.4405 11.2382ZM11.2383 11.4405C11.2383 11.4405 11.2374 11.441 11.2352 11.4417L11.2383 11.4405ZM4.76175 11.4405L4.76477 11.4417C4.76264 11.441 4.76175 11.4405 4.76175 11.4405ZM4.55945 11.2383C4.55945 11.2383 4.55904 11.2374 4.55833 11.2352L4.55945 11.2383ZM4.55945 4.76175L4.55833 4.76478C4.55904 4.76264 4.55945 4.76175 4.55945 4.76175ZM4.76175 4.55945C4.76175 4.55945 4.76264 4.55904 4.76478 4.55833L4.76175 4.55945Z"
            }), c.jsx("path", {
                d: "M10.6514 14.3714C10.4996 14.751 10.1319 15 9.72297 15H6.27703C5.86813 15 5.50042 14.751 5.34856 14.3714L5 13.5L11 13.5L10.6514 14.3714Z"
            })]
        })
    })
}
function oK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M7.02 5c0-1.657.486-4 1.085-4 .6 0 1.085 2.343 1.085 4 0 .277-.03.518-.08.726A2.31 2.31 0 0 0 8.105 5.5a2.31 2.31 0 0 0-1.004.226A3.068 3.068 0 0 1 7.02 5ZM6.082 6.777a4.12 4.12 0 0 0-.487.157c-1.657.643-3.81 1.966-3.578 2.475.233.509 2.762.012 4.419-.632a1.9 1.9 0 0 1-.5-1.277c0-.255.051-.499.146-.723ZM8.016 8.497l.09.003ZM8.016 8.497c-.557-.042-.995-.472-.995-.997 0-.552.485-1 1.085-1 .194 0 .376.047.534.13.05.025.096.054.14.086.25.184.41.466.41.784a.98.98 0 0 1-.468.823 1.138 1.138 0 0 1-.617.177M10.156 6.846c.077.205.12.425.12.654 0 .514-.21.982-.556 1.336 1.654.614 4.037 1.066 4.263.573.232-.51-1.921-1.832-3.578-2.475a4.387 4.387 0 0 0-.248-.088ZM7.512 9.424a2.344 2.344 0 0 0 1.187 0l.429 3.556c.039.324.254.608.57.754a.957.957 0 0 1 .577.86V15h-4.34v-.405c0-.365.224-.698.578-.86a.968.968 0 0 0 .57-.755l.429-3.556Z"
            })
        })
    })
}
function cK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M8 1C11.866 1 15 4.13401 15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1ZM7.41189 13.4689C7.52699 13.4812 7.625 13.3892 7.625 13.2735V11.1019C7.625 10.986 7.52684 10.8941 7.41169 10.9065C6.86713 10.9653 6.36508 11.1031 5.93222 11.2936C5.84072 11.3339 5.79715 11.4379 5.83032 11.5322C5.96714 11.9212 6.12298 12.2792 6.29211 12.6C6.4321 12.8655 6.57839 13.1002 6.72659 13.3033C6.75438 13.3414 6.79526 13.3679 6.84136 13.3777C7.02819 13.4178 7.21855 13.4484 7.41189 13.4689ZM8.58831 10.9065C8.47316 10.8941 8.375 10.986 8.375 11.1019V13.2735C8.375 13.3892 8.47301 13.4812 8.58811 13.4689C8.78145 13.4484 8.97181 13.4178 9.15864 13.3777C9.20474 13.3679 9.24562 13.3414 9.27341 13.3033C9.42161 13.1002 9.5679 12.8655 9.70789 12.6C9.87702 12.2792 10.0329 11.9212 10.1697 11.5322C10.2028 11.4379 10.1593 11.3339 10.0678 11.2936C9.63492 11.1031 9.13287 10.9653 8.58831 10.9065ZM8.56285 10.1504C8.45748 10.1408 8.375 10.0537 8.375 9.94787V8.575C8.375 8.46454 8.46454 8.375 8.575 8.375H10.5372C10.6502 8.375 10.7409 8.46864 10.7352 8.58153C10.7024 9.22171 10.6169 9.83286 10.4908 10.4016C10.4636 10.524 10.3303 10.5883 10.2139 10.5415C9.7168 10.3416 9.15763 10.2042 8.56285 10.1504ZM7.425 7.625C7.53546 7.625 7.625 7.53546 7.625 7.425V6.05213C7.625 5.94633 7.54252 5.85918 7.43715 5.84964C6.84237 5.79581 6.2832 5.65843 5.78606 5.45852C5.66973 5.41173 5.53635 5.47596 5.50922 5.59838C5.38314 6.16714 5.29755 6.77829 5.26484 7.41847C5.25907 7.53136 5.34982 7.625 5.46285 7.625H7.425ZM8.56285 5.84964C8.45748 5.85918 8.375 5.94633 8.375 6.05213V7.425C8.375 7.53546 8.46454 7.625 8.575 7.625H10.5372C10.6502 7.625 10.7409 7.53136 10.7352 7.41847C10.7024 6.77829 10.6169 6.16714 10.4908 5.59838C10.4636 5.47596 10.3303 5.41173 10.2139 5.45851C9.7168 5.65842 9.15763 5.7958 8.56285 5.84964ZM8.58831 5.09348C8.47316 5.1059 8.375 5.01396 8.375 4.89814V2.7265C8.375 2.61076 8.47301 2.51884 8.58811 2.53107C8.78145 2.55163 8.97181 2.5822 9.15864 2.62226C9.20474 2.63214 9.24562 2.65858 9.27341 2.69667C9.42161 2.8998 9.5679 3.13454 9.70789 3.40005C9.87702 3.72083 10.0329 4.07879 10.1697 4.46775C10.2028 4.56206 10.1593 4.6661 10.0678 4.70638C9.63492 4.89694 9.13287 5.03473 8.58831 5.09348ZM7.41169 5.09348C7.52684 5.10591 7.625 5.01396 7.625 4.89814V2.7265C7.625 2.61076 7.52699 2.51884 7.41189 2.53107C7.21854 2.55163 7.02819 2.5822 6.84135 2.62226C6.79525 2.63214 6.75438 2.65858 6.72659 2.69667C6.57838 2.8998 6.4321 3.13454 6.29211 3.40005C6.12298 3.72083 5.96714 4.07879 5.83032 4.46775C5.79715 4.56206 5.84072 4.6661 5.93222 4.70639C6.36508 4.89694 6.86713 5.03473 7.41169 5.09348ZM7.43715 10.1504C7.54252 10.1408 7.625 10.0537 7.625 9.94787V8.575C7.625 8.46454 7.53546 8.375 7.425 8.375H5.46285C5.34982 8.375 5.25907 8.46864 5.26484 8.58153C5.29755 9.22171 5.38314 9.83286 5.50922 10.4016C5.53635 10.524 5.66973 10.5883 5.78606 10.5415C6.2832 10.3416 6.84237 10.2042 7.43715 10.1504ZM11.0911 11.9564C10.9923 11.8613 10.8327 11.9077 10.7836 12.0357C10.6555 12.3695 10.5137 12.6817 10.3613 12.9688C10.7322 12.7922 11.0803 12.5753 11.3997 12.3237C11.3189 12.2001 11.2161 12.0767 11.0911 11.9564ZM12.1226 11.6407C12.0402 11.734 11.8936 11.7234 11.8123 11.6291C11.6452 11.4354 11.4477 11.2569 11.2291 11.0971C11.1604 11.0469 11.1278 10.9603 11.1486 10.8779C11.3289 10.1639 11.4484 9.38616 11.4867 8.56879C11.4917 8.46086 11.5801 8.375 11.6881 8.375H13.2735C13.3892 8.375 13.4812 8.47307 13.4689 8.58816C13.3451 9.75278 12.8578 10.8088 12.1226 11.6407ZM4.77094 11.0971C4.83959 11.0469 4.87219 10.9603 4.85137 10.8779C4.67113 10.1639 4.55165 9.38616 4.51332 8.56879C4.50826 8.46086 4.41992 8.375 4.31186 8.375H2.7265C2.61076 8.375 2.51884 8.47307 2.53108 8.58816C2.65489 9.75278 3.14219 10.8088 3.87737 11.6407C3.95984 11.734 4.10639 11.7234 4.18773 11.6291C4.35478 11.4354 4.55231 11.2569 4.77094 11.0971ZM4.60026 12.3237C4.91975 12.5753 5.26779 12.7922 5.63874 12.9688C5.48631 12.6817 5.34454 12.3695 5.21641 12.0357C5.16725 11.9077 5.00769 11.8613 4.90888 11.9564C4.78391 12.0767 4.68112 12.2001 4.60026 12.3237ZM5.63874 3.03124C5.48631 3.31834 5.34454 3.63054 5.21641 3.96429C5.16725 4.09233 5.00769 4.13867 4.90888 4.04356C4.78391 3.92327 4.68112 3.79993 4.60026 3.67631C4.91975 3.42475 5.26779 3.20784 5.63874 3.03124ZM4.85137 5.12213C4.87219 5.03968 4.83959 4.95312 4.77094 4.90294C4.55231 4.7431 4.35478 4.56457 4.18773 4.37093C4.10639 4.27663 3.95984 4.26599 3.87737 4.35931C3.14219 5.19117 2.65489 6.24722 2.53108 7.41184C2.51884 7.52693 2.61076 7.625 2.7265 7.625H4.31186C4.41992 7.625 4.50826 7.53914 4.51332 7.43121C4.55165 6.61384 4.67113 5.8361 4.85137 5.12213ZM11.6881 7.625C11.5801 7.625 11.4917 7.53914 11.4867 7.43121C11.4484 6.61384 11.3289 5.8361 11.1486 5.12213C11.1278 5.03968 11.1604 4.95312 11.2291 4.90294C11.4477 4.7431 11.6452 4.56457 11.8123 4.37093C11.8936 4.27663 12.0402 4.26599 12.1226 4.35931C12.8578 5.19117 13.3451 6.24722 13.4689 7.41184C13.4812 7.52693 13.3892 7.625 13.2735 7.625H11.6881ZM11.3997 3.67631C11.3189 3.79993 11.2161 3.92327 11.0911 4.04356C10.9923 4.13867 10.8327 4.09233 10.7836 3.96429C10.6555 3.63054 10.5137 3.31834 10.3613 3.03124C10.7322 3.20783 11.0803 3.42474 11.3997 3.67631Z"
            })
        })
    })
}
function lK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M5.20089 3.86139C5.26782 3.91044 5.29478 3.99621 5.26999 4.07276C5.08048 4.63234 4.7001 5.15507 4.22649 5.50497C4.15939 5.55379 4.06884 5.5535 4.00235 5.50476L2.50928 4.4105C1.84155 3.92116 0.899117 4.46596 1.00877 5.30008C1.15157 6.38617 1.72978 7.41478 2.6995 8.098C3.45504 8.63033 4.33634 8.86419 5.19777 8.8266C5.76241 8.80199 6.31265 9.01803 6.71424 9.42062L11.9271 14.6462C12.3909 15.1111 13.1404 15.1188 13.6136 14.6636L14.6293 13.6867C15.1164 13.2181 15.1247 12.4396 14.6471 11.9608L9.45375 6.75488C9.05391 6.35404 8.83817 5.80605 8.86099 5.24387C8.91308 3.96071 8.36456 2.66376 7.27075 1.83027C6.32715 1.11124 5.17401 0.870974 4.09833 1.064C3.27206 1.21225 3.04022 2.27782 3.70786 2.76716L5.20089 3.86139ZM12.75 13.5C13.1642 13.5 13.5 13.1642 13.5 12.75C13.5 12.3358 13.1642 12 12.75 12C12.3358 12 12 12.3358 12 12.75C12 13.1642 12.3358 13.5 12.75 13.5Z"
            })
        })
    })
}
function dK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M1 13.25C1 12.8358 1.33579 12.5 1.75 12.5H14.25C14.6642 12.5 15 12.8358 15 13.25C15 13.6642 14.6642 14 14.25 14H1.75C1.33579 14 1 13.6642 1 13.25Z"
            }), c.jsx("path", {
                d: "M13.6974 3.76382C14.1009 3.36032 14.1009 2.70613 13.6974 2.30263C13.2939 1.89912 12.6397 1.89912 12.2362 2.30263L11.2997 3.23908L12.7609 4.70028L13.6974 3.76382Z"
            }), c.jsx("path", {
                d: "M11.7003 5.76095L10.2391 4.29974L6.05618 8.48271C5.43036 9.10854 5.05485 9.94154 5.00032 10.8249C4.99421 10.9238 5.07614 11.0058 5.17507 10.9997C6.05852 10.9452 6.89159 10.5697 7.51745 9.94384L11.7003 5.76095Z"
            })]
        })
    })
}
function uK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M5.07071 1.49497L5.39994 3.7996C5.4599 4.21932 5.77803 4.55561 6.19378 4.63876L7.50971 4.90194C7.79479 4.95896 8 5.20927 8 5.5C8 5.79073 7.79479 6.04104 7.50971 6.09806L6.19378 6.36124C5.77803 6.44439 5.4599 6.78068 5.39994 7.2004L5.07071 9.50503C5.03014 9.78904 4.7869 10 4.5 10C4.2131 10 3.96986 9.78904 3.92929 9.50502L3.60006 7.2004C3.5401 6.78068 3.22197 6.44439 2.80622 6.36124L1.51453 6.10291C1.21535 6.04307 1 5.78038 1 5.47528C1 5.16435 1.22345 4.8984 1.52973 4.8448L2.78507 4.62511C3.21146 4.55049 3.54143 4.21002 3.60264 3.7815L3.92929 1.49497C3.96986 1.21096 4.2131 1 4.5 1C4.7869 1 5.03014 1.21096 5.07071 1.49497Z"
            }), c.jsx("path", {
                d: "M14.6301 4.36988C15.1233 4.86305 15.1233 5.66261 14.6301 6.15578L14.0268 6.75908C13.8316 6.95434 13.515 6.95434 13.3197 6.75908L12.2409 5.68027C12.0457 5.48501 12.0457 5.16843 12.2409 4.97317L12.8442 4.36988C13.3374 3.87671 14.137 3.87671 14.6301 4.36988Z"
            }), c.jsx("path", {
                d: "M12.2591 7.81975C12.4544 8.01501 12.4544 8.33159 12.2591 8.52686L7.07689 13.7091C6.31194 14.4741 5.29374 14.9331 4.21398 14.9996C4.09306 15.0071 3.99293 14.9069 4.00039 14.786C4.06704 13.7063 4.526 12.6882 5.29089 11.9233L10.4732 6.74095C10.6684 6.54568 10.985 6.54568 11.1803 6.74094L12.2591 7.81975Z"
            })]
        })
    })
}
const hK = y.createContext(!1);
function fK(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M5.948 2H2.623A.623.623 0 0 0 2 2.623v3.325c0 .344.28.623.623.623h3.325c.344 0 .623-.279.623-.623V2.623A.623.623 0 0 0 5.948 2ZM13.377 2h-3.325a.623.623 0 0 0-.623.623v3.325c0 .344.279.623.623.623h3.325c.344 0 .623-.279.623-.623V2.623A.623.623 0 0 0 13.377 2ZM5.948 9.429H2.623a.623.623 0 0 0-.623.623v3.325c0 .344.28.623.623.623h3.325c.344 0 .623-.28.623-.623v-3.325a.623.623 0 0 0-.623-.623ZM13.377 9.429h-3.325a.623.623 0 0 0-.623.623v3.325c0 .344.279.623.623.623h3.325c.344 0 .623-.28.623-.623v-3.325a.623.623 0 0 0-.623-.623Z"
            })
        })
    })
}
function pK(t) {
    return y.useContext(hK) ? c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                d: "m11.927 13.232-1.354.78c-.937.54-1.406.811-1.904.917a3.22 3.22 0 0 1-1.338 0c-.498-.106-.967-.376-1.904-.917l-1.354-.78c-.937-.541-1.406-.811-1.747-1.19a3.212 3.212 0 0 1-.669-1.157C1.5 10.401 1.5 9.861 1.5 8.78V7.22c0-1.082 0-1.622.157-2.106.14-.429.368-.823.67-1.157.34-.379.809-.649 1.746-1.19l1.354-.78c.937-.54 1.406-.811 1.904-.917a3.22 3.22 0 0 1 1.338 0c.498.106.967.376 1.904.917l1.354.78c.937.541 1.406.811 1.747 1.19.301.334.53.728.669 1.157.157.484.157 1.024.157 2.106v1.56c0 1.082 0 1.622-.157 2.106-.14.429-.368.823-.67 1.157-.34.379-.809.649-1.746 1.19Zm-5.751-.52-1.353-.78c-1.025-.591-1.239-.734-1.383-.894a1.712 1.712 0 0 1-.356-.617C3.017 10.217 3 9.962 3 8.78V7.22c0-.378.002-.661.006-.878l3.021 1.51a2.25 2.25 0 0 1 1.224 2.002v3.457a23.16 23.16 0 0 1-1.075-.597Zm2.575.597c.212-.105.532-.284 1.073-.596l1.353-.78c1.026-.592 1.239-.735 1.383-.895.16-.178.282-.389.356-.617.066-.204.084-.459.084-1.642V7.22c0-.378-.002-.661-.006-.878l-3 1.5-.007.003a2.25 2.25 0 0 0-1.236 2.009v3.456Zm3.757-8.402L9.324 6.499l-.01.004-.307.154a2.25 2.25 0 0 1-2.013 0l-.29-.145-.026-.013-3.186-1.593c.15-.143.42-.315 1.33-.84l1.354-.78c1.025-.592 1.256-.705 1.467-.75.235-.05.479-.05.714 0 .211.045.442.158 1.467.75l1.353.78c.912.525 1.181.697 1.331.84Z"
            })
        })
    }) : c.jsx(fK, {
        ...t
    })
}
function mK(t) {
    return t.$color ? `path { fill: ${t.$color} }` : ""
}
function ab(t) {
    const {icon: e, color: n, className: r, style: s, size: i} = t
      , a = c_(e) ? l_[e] : SD;
    return c.jsx(gK, {
        $color: n,
        $size: i,
        as: a,
        className: r,
        style: s
    })
}
function c_(t) {
    return t in l_
}
const gK = ae(o_)`
  ${mK}
  ${t=>t.$size ? `width: ${t.$size}px; height: ${t.$size}px;` : ""}
`
  , l_ = {
    [j.Accessibility]: DZ,
    [j.Africa]: SZ,
    [j.Airplane]: IZ,
    [j.Alert]: AZ,
    [j.Anchor]: MZ,
    [j.Android]: TZ,
    [j.Apple]: LZ,
    [j.Asia]: OZ,
    [j.Australia]: PZ,
    [j.Bank]: FZ,
    [j.BarChart]: NZ,
    [j.Basket]: VZ,
    [j.Battery]: UZ,
    [j.Bike]: zZ,
    [j.Bitcoin]: ZZ,
    [j.Bolt]: qZ,
    [j.Book]: KZ,
    [j.Bookmark]: QZ,
    [j.Briefcase]: tq,
    [j.Brush]: nq,
    [j.Bucket]: rq,
    [j.Bug]: sq,
    [j.Burger]: iq,
    [j.Calendar]: pc,
    [j.Camera]: cq,
    [j.Car]: lq,
    [j.Cart]: uq,
    [j.Chart]: hq,
    [j.Chat]: fq,
    [j.Chip]: mq,
    [j.Clock]: lh,
    [j.ClockOutline]: dZ,
    [j.Cloud]: Cq,
    [j.Coffee]: bq,
    [j.Compass]: wq,
    [j.Computer]: kq,
    [j.Cone]: xq,
    [j.CreditCard]: WN,
    [j.Cross]: Aq,
    [j.Crown]: jq,
    [j.Cube]: Tq,
    [j.CustomView]: SD,
    [j.Dashboard]: Lq,
    [j.Database]: Oq,
    [j.DesignTools]: Rq,
    [j.Dna]: Nq,
    [j.Dollar]: Bq,
    [j.Education]: Hq,
    [j.Etherum]: qq,
    [j.Euro]: Wq,
    [j.Europe]: Gq,
    [j.FaceFlatSmile]: Yq,
    [j.FaceHeartEyes]: Qq,
    [j.Face]: Xq,
    [j.FaceId]: Jq,
    [j.FaceMask]: eW,
    [j.FaceMonocle]: tW,
    [j.FaceStarEyes]: nW,
    [j.FaceSunglasses]: rW,
    [j.FaceSurprise]: sW,
    [j.FaceTired]: iW,
    [j.FaceTongue]: aW,
    [j.Feather]: a_,
    [j.Fire]: cW,
    [j.Flower]: uW,
    [j.Folder]: KN,
    [j.FootPrint]: hW,
    [j.Gears]: pW,
    [j.GitHub]: p5,
    [j.GitLab]: _p,
    [j.Heart]: bW,
    [j.Home]: YN,
    [j.Image]: o_,
    [j.Inbox]: QN,
    [j.Initiative]: eV,
    [j.Joystick]: kW,
    [j.Jersey]: wW,
    [j.Label]: ID,
    [j.Leaf]: SW,
    [j.LightBulb]: _W,
    [j.Link]: r4,
    [j.Lock]: IW,
    [j.Mac]: AW,
    [j.Mic]: RW,
    [j.Megaphone]: OW,
    [j.MobilePhone]: $W,
    [j.Modem]: FW,
    [j.Mountain]: BW,
    [j.Moon]: VW,
    [j.MusicKey]: HW,
    [j.NorthAmerica]: ZW,
    [j.Paint]: KW,
    [j.Page]: GW,
    [j.Phone]: XW,
    [j.PieChart]: JW,
    [j.Pin]: tG,
    [j.Pizza]: rG,
    [j.Present]: aG,
    [j.Project]: pK,
    [j.Radar]: cG,
    [j.Ramen]: lG,
    [j.Recycle]: uG,
    [j.Robot]: hG,
    [j.Rocket]: fG,
    [j.Scissors]: gG,
    [j.Search]: UV,
    [j.Send]: HV,
    [j.Server]: yG,
    [j.Shield]: CG,
    [j.Ship]: bG,
    [j.Shop]: vG,
    [j.Sign]: kG,
    [j.Skull]: DG,
    [j.Sound]: _G,
    [j.SouthAmerica]: IG,
    [j.Favorite]: TG,
    [j.Subscribe]: TD,
    [j.Sun]: RG,
    [j.Tablet]: $G,
    [j.TeeShirt]: NG,
    [j.Terminal]: BG,
    [j.Team]: ip,
    [j.ThumbsUp]: ZG,
    [j.ThumbsDown]: zG,
    [j.Trash]: YG,
    [j.Tree]: QG,
    [j.Umbrella]: XG,
    [j.UnhappyFace]: JG,
    [j.Users]: tK,
    [j.Video]: nK,
    [j.Watch]: aK,
    [j.WindTurbine]: oK,
    [j.World]: cK,
    [j.AirTag]: _Z,
    [j.AlarmClock]: EZ,
    [j.AmericanFootBall]: jZ,
    [j.Asterisk]: RZ,
    [j.Bandage]: $Z,
    [j.Basketball]: BZ,
    [j.Bed]: HZ,
    [j.Boombox]: WZ,
    [j.Bones]: GZ,
    [j.BookOpen]: YZ,
    [j.BowlingBall]: XZ,
    [j.Box]: JZ,
    [j.BoxOpen]: eq,
    [j.Bus]: aq,
    [j.Calculator]: oq,
    [j.CarPool]: dq,
    [j.Chemist]: pq,
    [j.ClickButton]: gq,
    [j.ClothHanger]: yq,
    [j.Comodore]: vq,
    [j.Connected]: Dq,
    [j.ConstructionBarrier]: Sq,
    [j.Conversation]: _q,
    [j.Cookie]: Iq,
    [j.Crane]: Eq,
    [j.CrystalBall]: Mq,
    [j.DesktopWindow]: Pq,
    [j.Dice]: $q,
    [j.Dino]: Fq,
    [j.DollarBill]: Vq,
    [j.Dumbbell]: Uq,
    [j.ElectricPlug]: zq,
    [j.Eraser]: Zq,
    [j.Extinguisher]: Kq,
    [j.Factory]: oW,
    [j.Flashlight]: lW,
    [j.FloppyDisk]: dW,
    [j.Garage]: fW,
    [j.Golf]: mW,
    [j.Hack]: gW,
    [j.Health]: yW,
    [j.Hear]: CW,
    [j.Hourglass]: vW,
    [j.Judge]: xW,
    [j.Ladder]: DW,
    [j.LockerRoom]: EW,
    [j.MacOS]: jW,
    [j.MagicWand]: MW,
    [j.Magnet]: TW,
    [j.Mask]: LW,
    [j.MilitaryTruck]: PW,
    [j.MoneyStack]: NW,
    [j.MovingStaircase]: UW,
    [j.MusicTape]: zW,
    [j.NotePad]: qW,
    [j.Notified]: WW,
    [j.PalmTree]: QW,
    [j.Pills]: eG,
    [j.PingPong]: nG,
    [j.Pointer]: sG,
    [j.PokerCard]: iG,
    [j.Process]: oG,
    [j.Rank]: dG,
    [j.Runner]: pG,
    [j.SafetyKit]: mG,
    [j.Shrug]: wG,
    [j.Signature]: xG,
    [j.SoccerBall]: SG,
    [j.Spaces]: EG,
    [j.Speaker]: AG,
    [j.Spreadsheet]: jG,
    [j.Stadium]: MG,
    [j.Storm]: LG,
    [j.Subgroup]: OG,
    [j.Surfer]: PG,
    [j.Taxi]: FG,
    [j.TennisBall]: VG,
    [j.TextBlock]: UG,
    [j.TextParagraph]: HG,
    [j.Tower]: qG,
    [j.TrafficLight]: WG,
    [j.Train]: GG,
    [j.Tram]: KG,
    [j.Union]: eK,
    [j.ViewFinder]: rK,
    [j.VisionPro]: sK,
    [j.Wall]: iK,
    [j.Wrench]: lK,
    [j.Write]: dK,
    [j.WritingAI]: uK,
    [j.Refresh]: BV,
    [j.Comment]: zN,
    [j.Attachment]: FN,
    [j.Blockquote]: NN,
    [j.CodeBlock]: HN,
    [j.Brick]: YW,
    [j.Meta]: CZ,
    [j.OpenAI]: bZ
};
var At;
(function(t) {
    t.backlog = "backlog",
    t.planned = "planned",
    t.started = "started",
    t.paused = "paused",
    t.completed = "completed",
    t.canceled = "canceled"
}
)(At || (At = {}));
var wi;
(function(t) {
    t.statusOrdering = Object.freeze({
        backlog: 0,
        planned: 1,
        started: 2,
        completed: 3,
        canceled: 4,
        paused: 10
    }),
    t.statusListOrdering = Object.freeze({
        started: 0,
        planned: 1,
        backlog: 2,
        paused: 3,
        completed: 4,
        canceled: 5
    }),
    t.pausable = ["planned", "started"],
    t.all = Object.values(At).filter(e=>typeof e == "string"),
    t.allNotDone = Object.values(At).filter(e=>typeof e == "string" && !["completed", "canceled"].includes(e)),
    t.allExceptPaused = Object.values(At).filter(e=>typeof e == "string" && e !== "paused"),
    t.labelForProjectState = e=>{
        switch (e) {
        case "backlog":
            return "Backlog";
        case "planned":
            return "Planned";
        case "started":
            return "In Progress";
        case "paused":
            return "Paused";
        case "completed":
            return "Completed";
        case "canceled":
            return "Canceled";
        default:
            return e
        }
    }
}
)(wi || (wi = {}));
const ob = ae.div`
  display: inline-flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
  word-break: keep-all;
  font-family: ${Fx("emoji")};
  width: ${t=>t.$size}px;
  height: auto;
  max-width: ${t=>t.$size}px;
  max-height: ${t=>t.$size}px;

  /* Emoji sizing varies across Browsers and platforms, we try to normalize them here */
  ${t=>Pf ? Qt`
        font-size: ${t.$size - 4}px;
        line-height: 1;

        /* Retina screens should be sized differently */
        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
          font-size: ${t.$size - 3}px;
          line-height: ${t.$size - 1}px;
        }
      ` : Qt`
      font-size: ${t.$size - 3}px;
      line-height: ${t.$size}px;

      /* Retina screens should be sized differently */
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        font-size: ${t.$size - 1}px;
        line-height: ${t.$size}px;
      }
    `}
`;
var yK = q3
  , cb = 1 / 0
  , CK = 17976931348623157e292;
function bK(t) {
    if (!t)
        return t === 0 ? t : 0;
    if (t = yK(t),
    t === cb || t === -cb) {
        var e = t < 0 ? -1 : 1;
        return e * CK
    }
    return t === t ? t : 0
}
var vK = bK;
function wK(t, e, n, r) {
    for (var s = -1, i = t == null ? 0 : t.length; ++s < i; ) {
        var a = t[s];
        e(r, a, n(a), t)
    }
    return r
}
var kK = wK
  , xK = aA;
function DK(t, e, n, r) {
    return xK(t, function(s, i, a) {
        e(r, s, n(s), a)
    }),
    r
}
var SK = DK
  , _K = kK
  , IK = SK
  , EK = Sf
  , AK = kf;
function jK(t, e) {
    return function(n, r) {
        var s = AK(n) ? _K : IK
          , i = e ? e() : {};
        return s(n, t, EK(r), i)
    }
}
var Ep = jK
  , MK = Ep
  , TK = MK(function(t, e, n) {
    t[n ? 0 : 1].push(e)
}, function() {
    return [[], []]
})
  , LK = TK;
const Iu = Cn(LK);
class b4 extends bl {
    get documentVersion() {
        const e = this.getMap("meta").get("version");
        return !e || Number.isNaN(e) ? 1 : e
    }
    constructor() {
        super({
            gc: !0
        })
    }
    getFlattenedState() {
        const e = this.documentVersion
          , n = YC(QC(j1, this));
        return n.getMap("meta").set("version", e + 1),
        x6(n)
    }
    async getFlattenedStateAsync() {
        const e = this.documentVersion
          , n = QC(j1, this);
        await aU(0);
        const r = YC(n);
        return r.getMap("meta").set("version", e + 1),
        x6(r)
    }
    updateToProsemirrorData(e) {
        I0(this, this.getXmlFragment("prosemirror"), j1.nodeFromJSON(e), new Map)
    }
    applyUpdate(e) {
        MU(this, e)
    }
    encodeStateAsUpdate(e) {
        return x6(this, e)
    }
    encodeStateVector() {
        return $U(this)
    }
    asProsemirrorData() {
        return FS(this)
    }
}
var lb;
(function(t) {
    t.draft = "draft",
    t.open = "open",
    t.reopened = "reopened",
    t.inReview = "inReview",
    t.merged = "merged",
    t.closed = "closed"
}
)(lb || (lb = {}));
var a9;
(function(t) {
    t.closes = "closes",
    t.contributes = "contributes",
    t.links = "links"
}
)(a9 || (a9 = {}));
var db;
(function(t) {
    t.changesRequested = "changes_requested",
    t.approved = "approved",
    t.commented = "commented",
    t.dismissed = "dismissed",
    t.pending = "pending"
}
)(db || (db = {}));
const Ju = class Ju {
    static fixupTitle(e) {
        return e.replace(/[\n\t]/g, " ").replace(/( ){2,}/g, " ").trim()
    }
    static identifierRegexCoreString(e) {
        const n = e != null && e.matchWithoutHyphen ? "[-]?" : "-";
        return `((${e != null && e.teamKeys ? e.teamKeys.join("|") : "\\w{1,5}"})${n}([0-9]{1,9}))`
    }
    static identifierRegexString(e) {
        const n = this.identifierRegexCoreString(e);
        return e != null && e.open ? n : e != null && e.exact ? `^${n}$` : e != null && e.excludedWordBoundaries && e.excludedWordBoundaries.length > 0 ? `\\b(?<![${e.excludedWordBoundaries.join("")}])${n}\\b(?![${e.excludedWordBoundaries.join("")}])` : `\\b${n}\\b`
    }
    static identifierRegex(e) {
        return new RegExp(this.identifierRegexString(e),(e == null ? void 0 : e.flags) ?? "i")
    }
    static identifierUrlRegexString(e) {
        return `${(Wk.CLIENT_URL ?? "https://linear.app").replace(/\./g, "\\.")}/[\\w-]+/issue/${this.identifierRegexCoreString(e)}(/[\\w-]+)?`
    }
    static identifierUrlRegex(e) {
        return new RegExp(this.identifierUrlRegexString(e),(e == null ? void 0 : e.flags) ?? "i")
    }
    static parseIdentifierMatch(e) {
        const [,n,r,s] = e;
        if (!n || !r || !s || Number(s).toString().length !== s.length)
            return;
        const i = r.toUpperCase()
          , a = Number(s);
        return {
            rawIdentifier: n,
            identifier: this.formatIssueIdentifier(i, a),
            teamKey: i,
            number: a
        }
    }
    static possibleIdentifier(e) {
        var n;
        return !!((n = e.match(/^([A-Za-z]{2,6}[-\s])?\d{1,8}$/)) != null && n.join("-"))
    }
    static identifierMatch(e, n) {
        const r = e.match(this.identifierRegex(n));
        if (r)
            return this.parseIdentifierMatch(r)
    }
    static identifierMatchAll(e, n) {
        const r = e.match(new RegExp(this.identifierRegexString(n),"gi"));
        return r ? r.map(s=>this.identifierMatch(s, {
            ...n,
            exact: !0
        })).filter(this.isIdentifierMatchResult) : []
    }
    static isIdentifierMatchResult(e) {
        return !!e
    }
    static formatIssueIdentifier(e, n) {
        return `${e}-${n}`
    }
    static getPossiblePreviousIssueNumberForTeam(e, n) {
        for (let r = e.length - 1; r >= 0; r--) {
            const s = e[r];
            if (s.startsWith(`${n}-`))
                return Number(s.split("-")[1])
        }
    }
}
;
Ju.visibleTitleLengthInMenus = 100,
Ju.sensibleTitleLength = 200,
Ju.maxTitleLength = 512;
let v4 = Ju;
var Ir;
(function(t) {
    t.activeIssues = "activeIssues",
    t.activeCycle = "activeCycle",
    t.upcomingCycle = "upcomingCycle",
    t.backlog = "backlog",
    t.triage = "triage"
}
)(Ir || (Ir = {}));
var o9;
(function(t) {
    t.assigned = "assigned"
}
)(o9 || (o9 = {}));
var $;
(function(t) {
    t.issueCreated = "issueCreated",
    t.issueMention = "issueMention",
    t.issueAddedToTriage = "issueAddedToTriage",
    t.issueAssignedToYou = "issueAssignedToYou",
    t.issueAddedToView = "issueAddedToView",
    t.issueUnassignedFromYou = "issueUnassignedFromYou",
    t.issueNewComment = "issueNewComment",
    t.issueCommentMention = "issueCommentMention",
    t.issueCommentReaction = "issueCommentReaction",
    t.issueThreadResolved = "issueThreadResolved",
    t.issueEmojiReaction = "issueEmojiReaction",
    t.issuePriorityUrgent = "issuePriorityUrgent",
    t.issueSubscribed = "issueSubscribed",
    t.issueBlocking = "issueBlocking",
    t.issueUnblocked = "issueUnblocked",
    t.issueMovedToProject = "issueMovedToProject",
    t.issueReminder = "issueReminder",
    t.issueStatusChangedDone = "issueStatusChanged",
    t.issueStatusChangedAll = "issueStatusChangedAll",
    t.issueDue = "issueDue",
    t.oauthClientApprovalCreated = "oauthClientApprovalCreated",
    t.triageResponsibilityIssueAddedToTriage = "triageResponsibilityIssueAddedToTriage",
    t.issueSlaHighRisk = "issueSlaHighRisk",
    t.issueSlaBreached = "issueSlaBreached",
    t.initiativeAddedAsOwner = "initiativeAddedAsOwner",
    t.initiativeCommentMention = "initiativeCommentMention",
    t.initiativeNewComment = "initiativeNewComment",
    t.initiativeThreadResolved = "initiativeThreadResolved",
    t.initiativeCommentReaction = "initiativeCommentReaction",
    t.initiativeMention = "initiativeMention",
    t.projectAddedAsMember = "projectAddedAsMember",
    t.projectAddedAsLead = "projectAddedAsLead",
    t.projectCommentMention = "projectCommentMention",
    t.projectNewComment = "projectNewComment",
    t.projectThreadResolved = "projectThreadResolved",
    t.projectCommentReaction = "projectCommentReaction",
    t.projectMention = "projectMention",
    t.projectMilestoneCommentMention = "projectMilestoneCommentMention",
    t.projectMilestoneNewComment = "projectMilestoneNewComment",
    t.projectMilestoneThreadResolved = "projectMilestoneThreadResolved",
    t.projectMilestoneCommentReaction = "projectMilestoneCommentReaction",
    t.projectMilestoneMention = "projectMilestoneMention",
    t.documentMention = "documentMention",
    t.documentCommentMention = "documentCommentMention",
    t.documentNewComment = "documentNewComment",
    t.documentThreadResolved = "documentThreadResolved",
    t.documentCommentReaction = "documentCommentReaction",
    t.documentReminder = "documentReminder",
    t.documentMoved = "documentMoved",
    t.documentDeleted = "documentDeleted",
    t.documentRestored = "documentRestored",
    t.documentSubscribed = "documentSubscribed",
    t.projectUpdateCreated = "projectUpdateCreated",
    t.projectUpdatePrompt = "projectUpdatePrompt",
    t.projectUpdateMention = "projectUpdateMentionPrompt",
    t.projectUpdateReaction = "projectUpdateReaction",
    t.projectUpdateNewComment = "projectUpdateNewComment",
    t.projectUpdateCommentMention = "projectUpdateCommentMention",
    t.projectUpdateCommentReaction = "projectUpdateCommentReaction",
    t.system = "system"
}
)($ || ($ = {}));
const m1 = class m1 {
    static get allValues() {
        return Object.values($).filter(e=>typeof e == "string")
    }
    static labelForType(e) {
        switch (e) {
        case "issueCreated":
            return "New issue";
        case "issueMention":
            return "Mentioned in issue";
        case "projectUpdateMentionPrompt":
            return "Mentioned in project update";
        case "projectMention":
            return "Mentioned in project";
        case "initiativeMention":
            return "Mentioned in initiative";
        case "documentMention":
            return "Mentioned in document";
        case "projectMilestoneMention":
            return "Mentioned in milestone";
        case "issueAddedToTriage":
        case "triageResponsibilityIssueAddedToTriage":
            return "New triage issue";
        case "issueAddedToView":
            return "Added to view";
        case "issueAssignedToYou":
            return "Assigned";
        case "issueUnassignedFromYou":
            return "Unassigned";
        case "documentNewComment":
        case "projectNewComment":
        case "initiativeNewComment":
        case "issueNewComment":
        case "projectUpdateNewComment":
        case "projectMilestoneNewComment":
            return "New comment";
        case "documentCommentReaction":
        case "projectCommentReaction":
        case "initiativeCommentReaction":
        case "issueCommentReaction":
        case "projectUpdateCommentReaction":
        case "projectMilestoneCommentReaction":
            return "Reacted to comment";
        case "documentCommentMention":
        case "projectCommentMention":
        case "initiativeCommentMention":
        case "issueCommentMention":
        case "projectUpdateCommentMention":
        case "projectMilestoneCommentMention":
            return "Mentioned in comment";
        case "documentThreadResolved":
        case "projectThreadResolved":
        case "initiativeThreadResolved":
        case "issueThreadResolved":
        case "projectMilestoneThreadResolved":
            return "Resolved a thread";
        case "projectUpdateReaction":
            return "Reacted to project update";
        case "issueEmojiReaction":
            return "Reacted to issue";
        case "issueReminder":
        case "documentReminder":
            return "Reminder";
        case "issuePriorityUrgent":
            return "Urgent priority";
        case "issueSubscribed":
        case "documentSubscribed":
            return "Subscribed";
        case "issueBlocking":
            return "Marked as blocking";
        case "issueUnblocked":
            return "No longer blocked";
        case "issueMovedToProject":
            return "Issue moved to project";
        case "issueStatusChanged":
        case "issueStatusChangedAll":
            return "Status updated";
        case "issueDue":
            return "Due";
        case "oauthClientApprovalCreated":
            return "Application install request";
        case "projectAddedAsMember":
            return "Added as member of project";
        case "projectAddedAsLead":
            return "Added as lead of project";
        case "initiativeAddedAsOwner":
            return "Added as owner of initiative";
        case "projectUpdateCreated":
            return "New project update";
        case "projectUpdatePrompt":
            return "Project update reminder";
        case "issueSlaHighRisk":
            return "High risk of breaching SLA";
        case "documentDeleted":
            return "Document deleted";
        case "documentMoved":
            return "Document moved";
        case "documentRestored":
            return "Document restored";
        case "issueSlaBreached":
            return "SLA breached";
        case "system":
            return "Message";
        default:
            throw void 0
        }
    }
    static get customViewNotificationTypes() {
        return this.viewNotificationTypes
    }
    static get cycleNotificationTypes() {
        return this.viewNotificationTypes
    }
    static get labelNotificationTypes() {
        return this.viewNotificationTypes
    }
    static get newProjectNotificationTypes() {
        return ["issueAddedToView", "issueStatusChanged", "projectUpdateCreated"]
    }
    static get projectNotificationTypes() {
        return ["issueCreated", "issueMovedToProject", "issueStatusChanged", "projectUpdateCreated"]
    }
    static get documentNotificationTypes() {
        return ["documentMention", "documentCommentMention", "documentNewComment", "documentThreadResolved", "documentCommentReaction", "documentReminder", "documentDeleted", "documentMention", "documentMoved"]
    }
    static get newTeamNotificationTypes() {
        return ["issueAddedToView", "issueStatusChanged", "issueAddedToTriage", "issueSlaHighRisk", "issueSlaBreached"]
    }
    static get teamNotificationTypes() {
        return ["issueCreated", "issueStatusChanged", "issueAddedToTriage", "issueSlaHighRisk", "issueSlaBreached"]
    }
    static teamContextViewNotificationTypes(e) {
        switch (e) {
        case Ir.activeCycle:
        case Ir.activeIssues:
        case Ir.backlog:
        case Ir.upcomingCycle:
            return ["issueAddedToView", "issueStatusChanged"];
        case Ir.triage:
            return ["issueAddedToTriage"];
        case void 0:
            return this.newTeamNotificationTypes;
        default:
            throw new zt(e)
        }
    }
    static get userNotificationTypes() {
        return this.viewNotificationTypes
    }
    static get allNotificationTypes() {
        return [...new Set([...this.teamNotificationTypes, ...this.viewNotificationTypes, ...this.projectNotificationTypes])]
    }
    static get allMentionNotificationTypes() {
        return ["issueMention", "issueCommentMention", "initiativeMention", "initiativeCommentMention", "projectMention", "projectCommentMention", "projectMilestoneMention", "documentMention", "documentCommentMention", "projectUpdateMentionPrompt", "projectUpdateCommentMention"]
    }
    static get allCommentNotificationTypes() {
        return ["issueNewComment", "projectNewComment", "documentNewComment", "projectUpdateNewComment", "projectMilestoneNewComment", "initiativeNewComment"]
    }
    static get allReactionNotificationTypes() {
        return ["issueEmojiReaction", "issueCommentReaction", "projectCommentReaction", "projectMilestoneCommentReaction", "documentCommentReaction", "projectUpdateCommentReaction", "projectUpdateReaction", "initiativeCommentReaction"]
    }
    static get allThreadResolvedNotificationTypes() {
        return ["issueThreadResolved", "initiativeThreadResolved", "projectThreadResolved", "projectMilestoneThreadResolved", "documentThreadResolved"]
    }
    static get allCommunicationNotificationTypes() {
        return [...m1.allCommentNotificationTypes, ...m1.allMentionNotificationTypes, ...m1.allThreadResolvedNotificationTypes, ...m1.allReactionNotificationTypes]
    }
    static get allReminderNotificationTypes() {
        return ["issueReminder", "documentReminder"]
    }
}
;
m1.viewNotificationTypes = ["issueAddedToView", "issueStatusChanged"],
m1.notificationsOrder = OK($, ["issueReminder", "issueSlaBreached", "issueSlaHighRisk", "issueMention", "issueCommentMention", "issuePriorityUrgent", "issueDue", "issueNewComment", "issueBlocking", "issueUnblocked", "issueThreadResolved", "issueAddedToTriage", "triageResponsibilityIssueAddedToTriage", "issueAddedToView", "issueCreated", "issueStatusChanged", "issueAssignedToYou", "issueUnassignedFromYou", "issueMovedToProject", "issueCommentReaction", "issueEmojiReaction", "issueSubscribed", "issueStatusChangedAll", "documentReminder", "documentMention", "documentCommentMention", "documentNewComment", "documentThreadResolved", "documentCommentReaction", "documentDeleted", "documentMoved", "documentRestored", "documentSubscribed", "projectUpdatePrompt", "projectUpdateCommentMention", "projectUpdateNewComment", "projectUpdateCommentReaction", "projectUpdateMentionPrompt", "projectUpdateCreated", "projectUpdateReaction", "initiativeAddedAsOwner", "initiativeMention", "initiativeCommentMention", "initiativeNewComment", "initiativeThreadResolved", "initiativeCommentReaction", "projectAddedAsLead", "projectMention", "projectAddedAsMember", "projectCommentMention", "projectNewComment", "projectThreadResolved", "projectCommentReaction", "projectMilestoneMention", "projectMilestoneCommentMention", "projectMilestoneNewComment", "projectMilestoneThreadResolved", "projectMilestoneCommentReaction", "oauthClientApprovalCreated", "system"]);
let w4 = m1;
function OK(t, e) {
    return e
}
var k4;
(function(t) {
    t[t.Linear = 0] = "Linear",
    t[t.Slack = 1] = "Slack"
}
)(k4 || (k4 = {}));
var Pi;
(function(t) {
    t.SLACK_BOT_ID = "USLACKBOT",
    t.SLACK_DM_CHANNEL_NAME = "directmessage",
    t.AttachmentLinkIntegrations = [G.discord, G.front, G.intercom, G.zendesk, G.slack, G.github, G.gitlab],
    t.findIntegrationMatches = (l,d,u)=>{
        const h = d || t.AttachmentLinkIntegrations;
        let f;
        for (const p of h)
            switch (p) {
            case G.slack:
                const m = e.parseMessageUrl(l);
                m && (f = {
                    match: m,
                    integrationType: p
                });
                break;
            case G.discord:
                const g = r.parseMessageUrl(l);
                g && (f = {
                    match: g,
                    integrationType: p
                });
                break;
            case G.front:
                const C = s.parseTicketUrl(l);
                C && (f = {
                    match: C,
                    integrationType: p
                });
                break;
            case G.intercom:
                const b = i.parseConversationUrl(l);
                b && (f = {
                    match: b,
                    integrationType: p
                });
                break;
            case G.zendesk:
                const k = n.parseTicketUrl(l);
                k && (f = {
                    match: k,
                    integrationType: p
                });
                break;
            case G.github:
                const S = a.parsePullRequestUrl(l);
                S && (f = {
                    match: S,
                    type: "pr",
                    integrationType: p
                });
                const D = a.parseIssueUrl(l);
                D && (f = {
                    match: D,
                    type: "issue",
                    integrationType: p
                });
                break;
            case G.gitlab:
                const R = o.parseMergeRequestUrl(l, u == null ? void 0 : u.gitlab);
                R && (f = {
                    match: R,
                    integrationType: p
                });
                break
            }
        return f
    }
    ;
    let e;
    (function(l) {
        l.channelNameToDisplay = u=>l.isPublicChannel(u) ? `#${u}` : u === t.SLACK_DM_CHANNEL_NAME ? "Direct message" : "Private channel",
        l.isPublicChannel = u=>u !== "directmessage" && u !== "privategroup",
        l.slackMessageUrlRegexp = /^(?<baseChannelUrl>(?:(https|http):\/\/)?[-\w\d]+\.slack\.com\/[\w]+\/(?<channel>[-\w\d]+)\/)(?<latest>[-\w\d]+)[?]?(thread_ts=(?<ts>[\d.]+))?[&]?(cid=(?<cid>[\d\w]+))?$/i;
        function d(u) {
            var b, k, S, D;
            const h = l.slackMessageUrlRegexp.exec(u);
            if (!h)
                return;
            const f = (b = h.groups) == null ? void 0 : b.baseChannelUrl;
            if (!f)
                return;
            const p = (k = h.groups) == null ? void 0 : k.channel;
            if (!p)
                return;
            const m = (S = h.groups) == null ? void 0 : S.latest.slice(1);
            if (!m)
                return;
            const g = `${m.substring(0, m.length - 6)}.${m.substring(m.length - 6)}`
              , C = (D = h.groups) == null ? void 0 : D.ts;
            return {
                baseChannelUrl: f,
                channel: p,
                latest: g,
                ts: C
            }
        }
        l.parseMessageUrl = d
    }
    )(e = t.Slack || (t.Slack = {}));
    let n;
    (function(l) {
        l.subdomainRegexp = new RegExp("^(?:https\\:\\/\\/)?([\\w\\-\\_]+).zendesk.com","i"),
        l.ticketUrlRegexp = new RegExp("(?:\\/agent)?\\/tickets\\/(\\d+)|\\/tickets\\/(\\d+)","i");
        function d(h) {
            const f = l.subdomainRegexp.exec(h);
            if (f)
                return f[1]
        }
        l.parseSubdomain = d;
        function u(h) {
            const f = l.ticketUrlRegexp.exec(h);
            if (f)
                return f[1]
        }
        l.parseTicketUrl = u
    }
    )(n = t.Zendesk || (t.Zendesk = {}));
    let r;
    (function(l) {
        l.messageRegexp = /^(?:https:\/\/)?(?:[a-z\d]+\.)?discord(?:app)?\.com\/channels\/\d+\/(\d+)\/(\d+)$/i;
        function d(u) {
            const h = l.messageRegexp.exec(u);
            if (h)
                return [h[1], h[2]]
        }
        l.parseMessageUrl = d
    }
    )(r = t.Discord || (t.Discord = {}));
    let s;
    (function(l) {
        l.ticketUrlRegexp = /^(?:https:\/\/)?app\.frontapp\.com\/open\/(msg_\w+|cnv_\w+)(\?.*)$/i;
        function d(u) {
            const h = l.ticketUrlRegexp.exec(u);
            if (h)
                return h[1]
        }
        l.parseTicketUrl = d
    }
    )(s = t.Front || (t.Front = {}));
    let i;
    (function(l) {
        l.conversationUrlRegexp = /^(?:https:\/\/)?app(\.au|\.eu)?\.intercom\.com\/a\/(?:inbox|apps)\/.*\/conversations{0,1}\/(\d+)(\?.*)?$/i;
        function d(u) {
            const h = l.conversationUrlRegexp.exec(u);
            if (h)
                return h[2]
        }
        l.parseConversationUrl = d
    }
    )(i = t.Intercom || (t.Intercom = {}));
    let a;
    (function(l) {
        l.pullRequestUrlRegexp = /^https:\/\/github\.com\/([^/]+)\/([^/]+)\/pull\/(\d+)\/?$/,
        l.issueUrlRegexp = /^https:\/\/github\.com\/([^/]+)\/([^/]+)\/issues\/(\d+)\/?$/;
        function d(h) {
            const f = h.match(l.pullRequestUrlRegexp);
            if (!f)
                return;
            const p = f[1]
              , m = f[2]
              , g = Number(f[3]);
            return {
                owner: p,
                repo: m,
                number: g
            }
        }
        l.parsePullRequestUrl = d;
        function u(h) {
            const f = h.match(l.issueUrlRegexp);
            if (!f)
                return;
            const p = f[1]
              , m = f[2]
              , g = Number(f[3]);
            return {
                owner: p,
                repo: m,
                number: g
            }
        }
        l.parseIssueUrl = u
    }
    )(a = t.GitHub || (t.GitHub = {}));
    let o;
    (function(l) {
        l.mergeRequestUrlRegexp = h=>new RegExp(`^${h || "https://gitlab.com"}/((?:[^/]+/)+)-/merge_requests/(\\d+)$/?`,"i");
        function d(h) {
            const f = h.split("/");
            return {
                owner: f[0],
                repo: f.slice(1).join("/")
            }
        }
        l.parseProjectPathName = d;
        function u(h, f) {
            const p = h.match(l.mergeRequestUrlRegexp(f));
            if (!p)
                return;
            const m = p[1].replace(/\/$/, "")
              , g = Number(p[2]);
            return {
                projectPathWithNamespace: m,
                number: g
            }
        }
        l.parseMergeRequestUrl = u
    }
    )(o = t.GitLab || (t.GitLab = {})),
    function(l) {
        l.ALL_PUBLIC_CHANNELS_ID = "ALL_PUBLIC_CHANNELS_ID",
        l.APP_HOME_ID = "APP_HOME_ID",
        l.GENERAL_ASK_TEMPLATE_ID = "GENERAL_ASK_TEMPLATE_ID",
        l.generateGeneralAskTemplateIdForTeamId = d=>`${t.Asks.GENERAL_ASK_TEMPLATE_ID}${d}`
    }(t.Asks || (t.Asks = {})),
    function(l) {
        l.issueUrlRegexp = /^(https:\/\/.+\/)?([A-Z]{2,}-[0-9]+)(.*)/
    }(t.jira || (t.jira = {}))
}
)(Pi || (Pi = {}));
var x4;
(function(t) {
    t.slackMessage = "slackMessage",
    t.slackChannel = "slackChannel",
    t.githubComment = "githubComment",
    t.githubIssue = "githubIssue",
    t.jiraIssue = "jiraIssue",
    t.jiraComment = "jiraComment",
    t.jiraComponent = "jiraComponent",
    t.notionUnfurl = "notionUnfurl"
}
)(x4 || (x4 = {}));
const id = class id {
    static validVerificationEmailForDomain(e, n) {
        const r = new RegExp("^[-!#$%&'*+/0-9=?A-Z^_a-z{|}~](.?[-!#$%&'*+/0-9=?A-Z^_a-z{|}~])*@" + Sp(e) + "$","i");
        return !!n.match(r)
    }
    static nameFromDomain(e) {
        return el(e.slice(0, e.lastIndexOf(".")))
    }
    static verificationValue(e) {
        return `${this.txtPrefix}=${e}`
    }
}
;
id.txtPrefix = "linear-domain-verification",
id.domainRegexp = /^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$/i,
id.superUserDomains = ["linear.app", "artman.fi", "eldh.co"],
id.superUserUrlKeys = ["linear"];
let E0 = id;
var ba;
(function(t) {
    t.adminSuspended = "adminSuspended",
    t.downgraded = "downgraded",
    t.leftWorkspace = "leftWorkspace",
    t.notInGoogleHostedDomain = "notInGoogleHostedDomain"
}
)(ba || (ba = {}));
function Sue(t) {
    switch (t) {
    case "adminSuspended":
        return "Suspended by admin";
    case "downgraded":
        return "Disabled due to plan downgrade";
    case "leftWorkspace":
        return "Left workspace";
    case "notInGoogleHostedDomain":
        return "Disabled as email does not belong to the Google workspace";
    default:
        throw new zt(t)
    }
}
var Cr;
(function(t) {
    t.admin = "admin",
    t.guest = "guest",
    t.user = "user"
}
)(Cr || (Cr = {}));
const d_ = t=>{
    var s, i;
    const e = new RegExp("^\\p{Letter}","u")
      , n = t.includes("@") ? t.split("@")[0].replace(/\./, " ") : t
      , r = (n.match(/\S+/g) || []).filter(a=>e.test(a));
    return r.length > 1 ? `${(s = r[0]) == null ? void 0 : s[0]}${(i = r[r.length - 1]) == null ? void 0 : i[0]}`.toUpperCase() : n.slice(0, 2).toUpperCase()
}
;
var Rd;
(function(t) {
    t.updatedSlackThreadSyncIntegration = "updatedSlackThreadSyncIntegration",
    t.completedOnboarding = "completedOnboarding",
    t.desktopInstalled = "desktopInstalled",
    t.teamsPageIntroductionDismissed = "teamsPageIntroductionDismissed",
    t.joinTeamIntroductionDismissed = "joinTeamIntroductionDismissed",
    t.desktopDownloadToastDismissed = "desktopDownloadToastDismissed",
    t.emptyBacklogDismissed = "emptyBacklogDismissed",
    t.emptyCustomViewsDismissed = "emptyCustomViewsDismissed",
    t.emptyActiveIssuesDismissed = "emptyActiveIssuesDismissed",
    t.emptyMyIssuesDismissed = "emptyMyIssuesDismissed",
    t.triageWelcomeDismissed = "triageWelcomeDismissed",
    t.cycleWelcomeDismissed = "cycleWelcomeDismissed",
    t.projectWelcomeDismissed = "projectWelcomeDismissed",
    t.projectBacklogWelcomeDismissed = "projectBacklogWelcomeDismissed",
    t.projectUpdatesWelcomeDismissed = "projectUpdatesWelcomeDismissed",
    t.analyticsWelcomeDismissed = "analyticsWelcomeDismissed",
    t.insightsWelcomeDismissed = "insightsWelcomeDismissed",
    t.insightsHelpDismissed = "insightsHelpDismissed",
    t.figmaPromptDismissed = "figmaPromptDismissed",
    t.issueMovePromptCompleted = "issueMovePromptCompleted",
    t.migrateThemePreference = "migrateThemePreference",
    t.listSelectionTip = "listSelectionTip",
    t.emptyParagraphSlashCommandTip = "emptyParagraphSlashCommandTip",
    t.editorSlashCommandUsed = "editorSlashCommandUsed",
    t.canPlaySnake = "canPlaySnake",
    t.canPlayTetris = "canPlayTetris",
    t.importBannerDismissed = "importBannerDismissed",
    t.tryInvitePeopleDismissed = "tryInvitePeopleDismissed",
    t.tryRoadmapsDismissed = "tryRoadmapsDismissed",
    t.tryCyclesDismissed = "tryCyclesDismissed",
    t.tryTriageDismissed = "tryTriageDismissed",
    t.tryGithubDismissed = "tryGithubDismissed",
    t.rewindBannerDismissed = "rewindBannerDismissed",
    t.helpIslandFeatureInsightsDismissed = "helpIslandFeatureInsightsDismissed",
    t.dueDateShortcutMigration = "dueDateShortcutMigration",
    t.slackCommentReactionTipShown = "slackCommentReactionTipShown",
    t.issueLabelSuggestionUsed = "issueLabelSuggestionUsed",
    t.threadedCommentsNudgeIsSeen = "threadedCommentsNudgeIsSeen",
    t.desktopTabsOnboardingDismissed = "desktopTabsOnboardingDismissed",
    t.milestoneOnboardingIsSeenAndDismissed = "milestoneOnboardingIsSeenAndDismissed",
    t.projectBoardOnboardingIsSeenAndDismissed = "projectBoardOnboardingIsSeenAndDismissed",
    t.figmaPluginBannerDismissed = "figmaPluginBannerDismissed",
    t.initiativesBannerDismissed = "initiativesBannerDismissed"
}
)(Rd || (Rd = {}));
(function(t) {
    t.all = ()=>Object.values(t).filter(e=>typeof e == "string")
}
)(Rd || (Rd = {}));
const RK = {
    editorSlashCommandUsed: 5,
    emptyParagraphSlashCommandTip: 50
};
var Pu;
(function(t) {
    t.incr = "incr",
    t.decr = "decr",
    t.clear = "clear",
    t.lock = "lock"
}
)(Pu || (Pu = {}));
let PK = class {
    static formatAbsoluteDate(e, n="MMM d") {
        const r = Ef(new Date(e), new Date) ? n : `${n}, yyyy`;
        return Mr(e.toLocalDate(), r)
    }
}
;
const A6 = {
    start: 8,
    end: 18
};
var D4;
(function(t) {
    t.outOfOffice = "outOfOffice"
}
)(D4 || (D4 = {}));
var ub;
(function(t) {
    t.googleCalendar = "googleCalendar",
    t.slackStatus = "slackStatus"
}
)(ub || (ub = {}));
const ka = class ka {
    static humanizeEventsInterval(e, n, r) {
        const s = this.getEventsIntervalAtDate(e, n, r)
          , i = this.getNextEventsIntervalFromDate(e, n, r);
        if (s) {
            const a = new Date(s.end);
            return this.getOutOfOfficeDuration(e, a)
        } else if (i) {
            if (fo(i.start, e) > this.NEXT_INTERVAL_LOOKAHEAD_HOURS)
                return;
            const a = new Date(i.start)
              , o = new Date(i.end)
              , l = fo(a, e)
              , d = fo(i.end, i.start);
            if (l < this.ENTERING_OOO_THRESHOLD_HOURS && d > this.SHORT_EVENT_IN_HOURS)
                return this.getOutOfOfficeDuration(e, o);
            if (d <= this.NEXT_INTERVAL_THRESHOLD_HOURS)
                return;
            const h = this.getOutOfOfficeDuration(a, new Date(i.end))
              , f = mg(a) !== mg(e) ? "tomorrow" : "today";
            return `${h} starting ${f}`
        }
    }
    static getEventsIntervalAtDate(e, n, r) {
        const s = hb(e) ? e : fb(e);
        for (const [i,a] of n.map(o=>[o.startsAt, o.endsAt]))
            if (gg(s, {
                start: i,
                end: a
            }, {
                inclusive: !0
            }))
                return this.expandIntervalThroughEvents({
                    start: i,
                    end: a
                }, n, r)
    }
    static getNextEventsIntervalFromDate(e, n, r) {
        const s = hb(e) ? e : fb(e);
        for (const [i,a] of n.map(o=>[o.startsAt, o.endsAt]))
            if (Dd(s.end, i))
                return this.expandIntervalThroughEvents({
                    start: i,
                    end: a
                }, n, r)
    }
    static isShortEvent(e) {
        return fo(e.endsAt, e.startsAt) <= this.SHORT_EVENT_IN_HOURS
    }
    static isOutOfOfficeBasedOnTitle(e) {
        return ["ooo", "out of office", "out of the office", "pto", "vacation", "holiday"].some(n=>e.toLowerCase().includes(n))
    }
    static expandIntervalThroughEvents(e, n, r) {
        const s = {
            ...e
        };
        for (const [i,a] of n.map(o=>[o.startsAt, o.endsAt]))
            if (gg(s, {
                start: i,
                end: a
            }, {
                inclusive: !0
            }))
                Do(a, s.end) && (s.end = a);
            else {
                const o = Er(s.end, r)
                  , l = Er(i, r)
                  , d = A6.start + this.WORKING_HOURS_START_TOLERANCE_HOURS
                  , u = A6.end - this.WORKING_HOURS_END_TOLERANCE_HOURS;
                (o.hour() >= u || o.hour() === 0) && l.hour() <= d && fo(i, s.end) <= 20 ? Do(a, s.end) && (s.end = a) : (o.day() === _1.Friday && o.hour() >= u || o.day() > _1.Friday) && l.day() === _1.Monday && l.hour() <= d && s5(i, s.end) <= 3 && Do(a, s.end) && (s.end = a)
            }
        return s
    }
    static getOutOfOfficeDuration(e, n) {
        const r = fo(n, e)
          , s = Fi(n, e)
          , i = A6.end - this.WORKING_HOURS_END_TOLERANCE_HOURS;
        if (s >= 7)
            return `until ${Yc(n)}`;
        if (s > 1) {
            const a = n.getHours() >= i ? _s(n, 1) : n;
            return `until ${YT(a.getDay()).substring(0, 3)}`
        }
        if (n.getDay() !== e.getDay() && n.getHours() >= i)
            return "two days";
        if (r >= this.EVENT_IS_FULL_DAY_HOURS)
            return "today";
        if (r > this.LEAVING_OOO_THRESHOLD_HOURS)
            return `${r} hours`
    }
}
;
ka.LEAVING_OOO_THRESHOLD_HOURS = 1,
ka.ENTERING_OOO_THRESHOLD_HOURS = 2,
ka.NEXT_INTERVAL_LOOKAHEAD_HOURS = 24,
ka.NEXT_INTERVAL_THRESHOLD_HOURS = 36,
ka.SHORT_EVENT_IN_HOURS = 4,
ka.EVENT_IS_FULL_DAY_HOURS = 6,
ka.WORKING_HOURS_START_TOLERANCE_HOURS = 2,
ka.WORKING_HOURS_END_TOLERANCE_HOURS = 4;
let $u = ka;
function hb(t) {
    return "end"in t && "start"in t
}
function fb(t) {
    return {
        start: t,
        end: t
    }
}
var pb;
(function(t) {
    t.pending = "pending",
    t.accepted = "accepted",
    t.expired = "expired"
}
)(pb || (pb = {}));
const $K = new Date("2023-09-01");
var os;
(function(t) {
    t.project = "project",
    t.cycle = "cycle",
    t.label = "label",
    t.issue = "issue",
    t.customView = "customView",
    t.predefinedView = "predefinedView",
    t.document = "document",
    t.roadmap = "roadmap",
    t.initiative = "initiative",
    t.folder = "folder",
    t.user = "user",
    t.facet = "facet"
}
)(os || (os = {}));
const Fm = class Fm {
    static parseDomain(e) {
        return e.split("@").pop()
    }
}
;
Fm.emailRegexp = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
let c9 = Fm;
var S4;
(function(t) {
    t.allIssues = "allIssues",
    t.activeIssues = "activeIssues",
    t.activeCycle = "activeCycle",
    t.upcomingCycle = "upcomingCycle",
    t.backlog = "backlog",
    t.triage = "triage",
    t.cycles = "cycles",
    t.views = "views",
    t.projects = "projects"
}
)(S4 || (S4 = {}));
const g1 = class g1 {
    static parseCycleNameAndNumber(e) {
        const n = e.match(g1.CYCLE_NUMBER_REGEX);
        if (n) {
            const [,r,s,i] = n;
            return {
                label: r,
                separator: s,
                number: Number(i)
            }
        }
    }
}
;
g1.minTitleLength = 1,
g1.maxTitleLength = 64,
g1.minDescriptionLength = 1,
g1.maxDescriptionLength = 255,
g1.CYCLE_NUMBER_REGEX = /^(.+?)([\s/-])(\d+)$/m;
let l9 = g1;
var FK = _f
  , NK = Ep
  , VK = Object.prototype
  , BK = VK.hasOwnProperty
  , UK = NK(function(t, e, n) {
    BK.call(t, n) ? t[n].push(e) : FK(t, n, [e])
})
  , HK = UK;
const m5 = Cn(HK);
var U1;
(function(t) {
    function e(o) {
        if (o === "")
            return t.UTC_ZONE.name;
        const l = t.abbreviations.get(o.toUpperCase());
        if (l)
            return l;
        const d = t.byName.get(o.toLowerCase()) || t.byAlias.get(o.toLowerCase());
        if (d)
            return d.name;
        let u;
        try {
            const p = Er(Date.now(), o).timezone()
              , m = t.byName.get(p.name.toLowerCase());
            if (u = p.current.offset,
            m)
                return m.name
        } catch {}
        const h = j6(o)
          , f = u ? n(u, h) : void 0;
        return f ? f.name : t.UTC_ZONE.name
    }
    t.validateTimezone = e;
    function n(o, l, d=t.supportedZones) {
        if (o === 0 || o > i || o < s)
            return t.UTC_ZONE;
        if (l) {
            const f = t.byContinent.get(l.continent) ?? []
              , p = l.area ? f.filter(m=>{
                var g;
                return ((g = j6(m.name)) == null ? void 0 : g.area) === l.area
            }
            ) : [];
            p.length > 0 ? d = p : f.length > 0 && (d = f)
        }
        let u = d[0]
          , h = 1 / 0;
        return d.forEach(f=>{
            const p = r(f.name) ?? 0
              , m = Math.abs(p - o);
            m < h && (u = f,
            h = m)
        }
        ),
        u
    }
    t.findNearestZoneByOffset = n;
    function r(o) {
        try {
            return Er(Date.now(), o).timezone().current.offset
        } catch {
            return
        }
    }
    t.getOffset = r,
    t.UTC_ZONE = {
        name: "Etc/GMT",
        label: "Greenwich Mean Time",
        aliases: ["Etc/GMT+0", "Etc/GMT-0", "Etc/GMT0", "Etc/Greenwich", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich"]
    },
    t.displayedZones = [{
        label: "Niue Time",
        name: "Pacific/Niue",
        aliases: []
    }, {
        label: "Samoa Standard Time",
        name: "Pacific/Pago_Pago",
        aliases: ["Pacific/Midway", "Pacific/Samoa", "US/Samoa"]
    }, {
        label: "Cook Islands Standard Time",
        name: "Pacific/Rarotonga",
        aliases: []
    }, {
        label: "Hawaii-Aleutian Standard Time",
        name: "Pacific/Honolulu",
        aliases: ["Pacific/Johnston", "US/Hawaii"]
    }, {
        label: "Hawaii-Aleutian Time",
        name: "America/Adak",
        aliases: ["America/Atka", "US/Aleutian"]
    }, {
        label: "Tahiti Time",
        name: "Pacific/Tahiti",
        aliases: []
    }, {
        label: "Marquesas Time",
        name: "Pacific/Marquesas",
        aliases: []
    }, {
        label: "Alaska Time - Anchorage",
        name: "America/Anchorage",
        aliases: ["US/Alaska"]
    }, {
        label: "Alaska Time - Juneau",
        name: "America/Juneau",
        aliases: []
    }, {
        label: "Alaska Time - Nome",
        name: "America/Nome",
        aliases: []
    }, {
        label: "Alaska Time - Sitka",
        name: "America/Sitka",
        aliases: []
    }, {
        label: "Alaska Time - Yakutat",
        name: "America/Yakutat",
        aliases: []
    }, {
        label: "Gambier Time",
        name: "Pacific/Gambier",
        aliases: []
    }, {
        label: "Pacific Time - Dawson",
        name: "America/Dawson",
        aliases: []
    }, {
        label: "Pacific Time - Los Angeles",
        name: "America/Los_Angeles",
        aliases: ["US/Pacific"]
    }, {
        label: "Pacific Time - Metlakatla",
        name: "America/Metlakatla",
        aliases: []
    }, {
        label: "Pacific Time - Tijuana",
        name: "America/Tijuana",
        aliases: ["America/Ensenada", "America/Santa_Isabel", "Mexico/BajaNorte"]
    }, {
        label: "Pacific Time - Vancouver",
        name: "America/Vancouver",
        aliases: ["Canada/Pacific"]
    }, {
        label: "Pacific Time - Whitehorse",
        name: "America/Whitehorse",
        aliases: ["Canada/Yukon"]
    }, {
        label: "Pitcairn Time",
        name: "Pacific/Pitcairn",
        aliases: []
    }, {
        label: "Mexican Pacific Standard Time",
        name: "America/Hermosillo",
        aliases: []
    }, {
        label: "Mexican Pacific Time - Chihuahua",
        name: "America/Chihuahua",
        aliases: []
    }, {
        label: "Mexican Pacific Time - Mazatlan",
        name: "America/Mazatlan",
        aliases: ["Mexico/BajaSur"]
    }, {
        label: "Mountain Standard Time - Creston",
        name: "America/Creston",
        aliases: []
    }, {
        label: "Mountain Standard Time - Dawson Creek",
        name: "America/Dawson_Creek",
        aliases: []
    }, {
        label: "Mountain Standard Time - Phoenix",
        name: "America/Phoenix",
        aliases: ["America/Creston", "US/Arizona"]
    }, {
        label: "Mountain Time - Boise",
        name: "America/Boise",
        aliases: []
    }, {
        label: "Mountain Time - Cambridge Bay",
        name: "America/Cambridge_Bay",
        aliases: []
    }, {
        label: "Mountain Time - Denver",
        name: "America/Denver",
        aliases: ["America/Shiprock", "Navajo", "US/Mountain"]
    }, {
        label: "Mountain Time - Edmonton",
        name: "America/Edmonton",
        aliases: ["Canada/Mountain"]
    }, {
        label: "Mountain Time - Inuvik",
        name: "America/Inuvik",
        aliases: []
    }, {
        label: "Mountain Time - Ojinaga",
        name: "America/Ojinaga",
        aliases: []
    }, {
        label: "Mountain Time - Yellowknife",
        name: "America/Yellowknife",
        aliases: []
    }, {
        label: "Central Standard Time - Belize",
        name: "America/Belize",
        aliases: []
    }, {
        label: "Central Standard Time - Costa Rica",
        name: "America/Costa_Rica",
        aliases: []
    }, {
        label: "Central Standard Time - El Salvador",
        name: "America/El_Salvador",
        aliases: []
    }, {
        label: "Central Standard Time - Guatemala",
        name: "America/Guatemala",
        aliases: []
    }, {
        label: "Central Standard Time - Managua",
        name: "America/Managua",
        aliases: []
    }, {
        label: "Central Standard Time - Regina",
        name: "America/Regina",
        aliases: ["Canada/Saskatchewan"]
    }, {
        label: "Central Standard Time - Swift Current",
        name: "America/Swift_Current",
        aliases: []
    }, {
        label: "Central Standard Time - Tegucigalpa",
        name: "America/Tegucigalpa",
        aliases: []
    }, {
        label: "Central Time - Bahia Banderas",
        name: "America/Bahia_Banderas",
        aliases: []
    }, {
        label: "Central Time - Chicago",
        name: "America/Chicago",
        aliases: ["US/Central"]
    }, {
        label: "Central Time - Matamoros",
        name: "America/Matamoros",
        aliases: []
    }, {
        label: "Central Time - Menominee",
        name: "America/Menominee",
        aliases: []
    }, {
        label: "Central Time - Merida",
        name: "America/Merida",
        aliases: []
    }, {
        label: "Central Time - Mexico City",
        name: "America/Mexico_City",
        aliases: ["Mexico/General"]
    }, {
        label: "Central Time - Monterrey",
        name: "America/Monterrey",
        aliases: []
    }, {
        label: "Central Time - Rainy River",
        name: "America/Rainy_River",
        aliases: []
    }, {
        label: "Central Time - Rankin Inlet",
        name: "America/Rankin_Inlet",
        aliases: []
    }, {
        label: "Central Time - Resolute",
        name: "America/Resolute",
        aliases: []
    }, {
        label: "Central Time - Winnipeg",
        name: "America/Winnipeg",
        aliases: ["Canada/Central"]
    }, {
        label: "Galapagos Time",
        name: "Pacific/Galapagos",
        aliases: []
    }, {
        label: "Acre Standard Time - Eirunepe",
        name: "America/Eirunepe",
        aliases: []
    }, {
        label: "Acre Standard Time - Rio Branco",
        name: "America/Rio_Branco",
        aliases: ["America/Porto_Acre", "Brazil/Acre"]
    }, {
        label: "Colombia Standard Time",
        name: "America/Bogota",
        aliases: []
    }, {
        label: "Cuba Time",
        name: "America/Havana",
        aliases: ["Cuba"]
    }, {
        label: "Easter Island Time",
        name: "Pacific/Easter",
        aliases: ["Chile/EasterIsland"]
    }, {
        label: "Eastern Standard Time - Atikokan",
        name: "America/Atikokan",
        aliases: []
    }, {
        label: "Eastern Standard Time - Cancun",
        name: "America/Cancun",
        aliases: []
    }, {
        label: "Eastern Standard Time - Jamaica",
        name: "America/Jamaica",
        aliases: ["Jamaica"]
    }, {
        label: "Eastern Standard Time - Panama",
        name: "America/Panama",
        aliases: ["America/Atikokan", "America/Cayman", "America/Coral_Harbour"]
    }, {
        label: "Eastern Time - Detroit",
        name: "America/Detroit",
        aliases: ["US/Michigan"]
    }, {
        label: "Eastern Time - Grand Turk",
        name: "America/Grand_Turk",
        aliases: []
    }, {
        label: "Eastern Time - Indianapolis",
        name: "America/Indiana/Indianapolis",
        aliases: ["America/Indianapolis"]
    }, {
        label: "Eastern Time - Iqaluit",
        name: "America/Iqaluit",
        aliases: []
    }, {
        label: "Eastern Time - Louisville",
        name: "America/Kentucky/Louisville",
        aliases: ["America/Louisville"]
    }, {
        label: "Eastern Time - Nassau",
        name: "America/Nassau",
        aliases: []
    }, {
        label: "Eastern Time - New York",
        name: "America/New_York",
        aliases: ["US/Eastern"]
    }, {
        label: "Eastern Time - Nipigon",
        name: "America/Nipigon",
        aliases: []
    }, {
        label: "Eastern Time - Pangnirtung",
        name: "America/Pangnirtung",
        aliases: []
    }, {
        label: "Eastern Time - Thunder Bay",
        name: "America/Thunder_Bay",
        aliases: []
    }, {
        label: "Eastern Time - Toronto",
        name: "America/Toronto",
        aliases: ["America/Montreal", "America/Nassau", "Canada/Eastern"]
    }, {
        label: "Ecuador Time",
        name: "America/Guayaquil",
        aliases: []
    }, {
        label: "Peru Standard Time",
        name: "America/Lima",
        aliases: []
    }, {
        label: "Amazon Standard Time - Boa Vista",
        name: "America/Boa_Vista",
        aliases: []
    }, {
        label: "Amazon Standard Time - Manaus",
        name: "America/Manaus",
        aliases: ["Brazil/West"]
    }, {
        label: "Amazon Standard Time - Porto Velho",
        name: "America/Porto_Velho",
        aliases: []
    }, {
        label: "Atlantic Standard Time - Barbados",
        name: "America/Barbados",
        aliases: []
    }, {
        label: "Atlantic Standard Time - Curaçao",
        name: "America/Curacao",
        aliases: []
    }, {
        label: "Atlantic Standard Time - Martinique",
        name: "America/Martinique",
        aliases: []
    }, {
        label: "Atlantic Standard Time - Puerto Rico",
        name: "America/Puerto_Rico",
        aliases: ["America/Anguilla", "America/Antigua", "America/Aruba", "America/Blanc-Sablon", "America/Curacao", "America/Dominica", "America/Grenada", "America/Guadeloupe", "America/Kralendijk", "America/Lower_Princes", "America/Marigot", "America/Montserrat", "America/Port_of_Spain", "America/St_Barthelemy", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Tortola", "America/Virgin"]
    }, {
        label: "Atlantic Standard Time - Santo Domingo",
        name: "America/Santo_Domingo",
        aliases: []
    }, {
        label: "Atlantic Time - Bermuda",
        name: "Atlantic/Bermuda",
        aliases: []
    }, {
        label: "Atlantic Time - Glace Bay",
        name: "America/Glace_Bay",
        aliases: []
    }, {
        label: "Atlantic Time - Goose Bay",
        name: "America/Goose_Bay",
        aliases: []
    }, {
        label: "Atlantic Time - Halifax",
        name: "America/Halifax",
        aliases: ["Canada/Atlantic"]
    }, {
        label: "Atlantic Time - Moncton",
        name: "America/Moncton",
        aliases: []
    }, {
        label: "Atlantic Time - Thule",
        name: "America/Thule",
        aliases: []
    }, {
        label: "Bolivia Time",
        name: "America/La_Paz",
        aliases: []
    }, {
        label: "Guyana Time",
        name: "America/Guyana",
        aliases: []
    }, {
        label: "Venezuela Time",
        name: "America/Caracas",
        aliases: []
    }, {
        label: "Newfoundland Time",
        name: "America/St_Johns",
        aliases: ["Canada/Newfoundland"]
    }, {
        label: "Amazon Time (Campo Grande)",
        name: "America/Campo_Grande",
        aliases: []
    }, {
        label: "Amazon Time (Cuiaba)",
        name: "America/Cuiaba",
        aliases: []
    }, {
        label: "Argentina Standard Time - Buenos Aires",
        name: "America/Argentina/Buenos_Aires",
        aliases: ["America/Buenos_Aires"]
    }, {
        label: "Argentina Standard Time - Catamarca",
        name: "America/Catamarca",
        aliases: []
    }, {
        label: "Argentina Standard Time - Cordoba",
        name: "America/Cordoba",
        aliases: []
    }, {
        label: "Argentina Standard Time - Jujuy",
        name: "America/Jujuy",
        aliases: []
    }, {
        label: "Argentina Standard Time - Mendoza",
        name: "America/Mendoza",
        aliases: []
    }, {
        label: "Brasilia Standard Time - Araguaina",
        name: "America/Araguaina",
        aliases: []
    }, {
        label: "Brasilia Standard Time - Bahia",
        name: "America/Bahia",
        aliases: []
    }, {
        label: "Brasilia Standard Time - Belem",
        name: "America/Belem",
        aliases: []
    }, {
        label: "Brasilia Standard Time - Fortaleza",
        name: "America/Fortaleza",
        aliases: []
    }, {
        label: "Brasilia Standard Time - Maceio",
        name: "America/Maceio",
        aliases: []
    }, {
        label: "Brasilia Standard Time - Recife",
        name: "America/Recife",
        aliases: []
    }, {
        label: "Brasilia Standard Time - Santarem",
        name: "America/Santarem",
        aliases: []
    }, {
        label: "Chile Time",
        name: "America/Santiago",
        aliases: ["Chile/Continental"]
    }, {
        label: "Falkland Islands Standard Time",
        name: "Atlantic/Stanley",
        aliases: []
    }, {
        label: "French Guiana Time",
        name: "America/Cayenne",
        aliases: []
    }, {
        label: "Palmer Time",
        name: "Antarctica/Palmer",
        aliases: []
    }, {
        label: "Paraguay Time",
        name: "America/Asuncion",
        aliases: []
    }, {
        label: "Punta Arenas Time",
        name: "America/Punta_Arenas",
        aliases: []
    }, {
        label: "Rothera Time",
        name: "Antarctica/Rothera",
        aliases: []
    }, {
        label: "St. Pierre & Miquelon Time",
        name: "America/Miquelon",
        aliases: []
    }, {
        label: "Suriname Time",
        name: "America/Paramaribo",
        aliases: []
    }, {
        label: "Uruguay Standard Time",
        name: "America/Montevideo",
        aliases: []
    }, {
        label: "West Greenland Time",
        name: "America/Godthab",
        aliases: []
    }, {
        label: "Brasilia Time",
        name: "America/Sao_Paulo",
        aliases: ["Brazil/East"]
    }, {
        label: "Fernando de Noronha Standard Time",
        name: "America/Noronha",
        aliases: ["Brazil/DeNoronha"]
    }, {
        label: "South Georgia Time",
        name: "Atlantic/South_Georgia",
        aliases: []
    }, {
        label: "Azores Time",
        name: "Atlantic/Azores",
        aliases: []
    }, {
        label: "Cape Verde Standard Time",
        name: "Atlantic/Cape_Verde",
        aliases: []
    }, {
        label: "East Greenland Time",
        name: "America/Scoresbysund",
        aliases: []
    }, {
        label: "Greenwich Mean Time - Abidjan",
        name: "Africa/Abidjan",
        aliases: ["Africa/Accra", "Africa/Bamako", "Africa/Banjul", "Africa/Conakry", "Africa/Dakar", "Africa/Freetown", "Africa/Lome", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Timbuktu", "Atlantic/St_Helena"]
    }, {
        label: "Greenwich Mean Time - Bissau",
        name: "Africa/Bissau",
        aliases: []
    }, {
        label: "Greenwich Mean Time - Danmarkshavn",
        name: "America/Danmarkshavn",
        aliases: []
    }, {
        label: "Greenwich Mean Time - Monrovia",
        name: "Africa/Monrovia",
        aliases: []
    }, {
        label: "Greenwich Mean Time - Reykjavik",
        name: "Atlantic/Reykjavik",
        aliases: ["Iceland"]
    }, {
        label: "Greenwich Mean Time - São Tomé",
        name: "Africa/Sao_Tome",
        aliases: []
    }, {
        label: "Ireland Time",
        name: "Europe/Dublin",
        aliases: ["Eire"]
    }, {
        label: "Troll Time",
        name: "Antarctica/Troll",
        aliases: []
    }, {
        label: "United Kingdom Time",
        name: "Europe/London",
        aliases: ["Europe/Belfast", "Europe/Guernsey", "Europe/Isle_of_Man", "Europe/Jersey", "GB", "GB-Eire"]
    }, {
        label: "Western European Time - Canary",
        name: "Atlantic/Canary",
        aliases: []
    }, {
        label: "Western European Time - Faroe",
        name: "Atlantic/Faroe",
        aliases: ["Atlantic/Faeroe"]
    }, {
        label: "Western European Time - Lisbon",
        name: "Europe/Lisbon",
        aliases: ["Portugal"]
    }, {
        label: "Western European Time - Madeira",
        name: "Atlantic/Madeira",
        aliases: []
    }, {
        label: "Central European Standard Time - Algiers",
        name: "Africa/Algiers",
        aliases: []
    }, {
        label: "Central European Standard Time - Tunis",
        name: "Africa/Tunis",
        aliases: []
    }, {
        label: "Central European Time - Amsterdam",
        name: "Europe/Amsterdam",
        aliases: []
    }, {
        label: "Central European Time - Andorra",
        name: "Europe/Andorra",
        aliases: []
    }, {
        label: "Central European Time - Belgrade",
        name: "Europe/Belgrade",
        aliases: ["Europe/Ljubljana", "Europe/Podgorica", "Europe/Sarajevo", "Europe/Skopje", "Europe/Zagreb"]
    }, {
        label: "Central European Time - Berlin",
        name: "Europe/Berlin",
        aliases: []
    }, {
        label: "Central European Time - Brussels",
        name: "Europe/Brussels",
        aliases: []
    }, {
        label: "Central European Time - Budapest",
        name: "Europe/Budapest",
        aliases: []
    }, {
        label: "Central European Time - Ceuta",
        name: "Africa/Ceuta",
        aliases: []
    }, {
        label: "Central European Time - Copenhagen",
        name: "Europe/Copenhagen",
        aliases: []
    }, {
        label: "Central European Time - Gibraltar",
        name: "Europe/Gibraltar",
        aliases: []
    }, {
        label: "Central European Time - Luxembourg",
        name: "Europe/Luxembourg",
        aliases: []
    }, {
        label: "Central European Time - Madrid",
        name: "Europe/Madrid",
        aliases: []
    }, {
        label: "Central European Time - Malta",
        name: "Europe/Malta",
        aliases: []
    }, {
        label: "Central European Time - Monaco",
        name: "Europe/Monaco",
        aliases: []
    }, {
        label: "Central European Time - Oslo",
        name: "Europe/Oslo",
        aliases: ["Arctic/Longyearbyen", "Atlantic/Jan_Mayen"]
    }, {
        label: "Central European Time - Paris",
        name: "Europe/Paris",
        aliases: []
    }, {
        label: "Central European Time - Prague",
        name: "Europe/Prague",
        aliases: ["Europe/Bratislava"]
    }, {
        label: "Central European Time - Rome",
        name: "Europe/Rome",
        aliases: ["Europe/San_Marino", "Europe/Vatican"]
    }, {
        label: "Central European Time - Stockholm",
        name: "Europe/Stockholm",
        aliases: []
    }, {
        label: "Central European Time - Tirane",
        name: "Europe/Tirane",
        aliases: []
    }, {
        label: "Central European Time - Vienna",
        name: "Europe/Vienna",
        aliases: []
    }, {
        label: "Central European Time - Warsaw",
        name: "Europe/Warsaw",
        aliases: ["Poland"]
    }, {
        label: "Central European Time - Zurich",
        name: "Europe/Zurich",
        aliases: ["Europe/Busingen", "Europe/Vaduz"]
    }, {
        label: "Morocco Time",
        name: "Africa/Casablanca",
        aliases: []
    }, {
        label: "West Africa Standard Time - Lagos",
        name: "Africa/Lagos",
        aliases: ["Africa/Bangui", "Africa/Brazzaville", "Africa/Douala", "Africa/Kinshasa", "Africa/Libreville", "Africa/Luanda", "Africa/Malabo", "Africa/Niamey", "Africa/Porto-Novo"]
    }, {
        label: "West Africa Standard Time - Ndjamena",
        name: "Africa/Ndjamena",
        aliases: []
    }, {
        label: "Western Sahara Time",
        name: "Africa/El_Aaiun",
        aliases: []
    }, {
        label: "Central Africa Time - Khartoum",
        name: "Africa/Khartoum",
        aliases: []
    }, {
        label: "Central Africa Time - Maputo",
        name: "Africa/Maputo",
        aliases: ["Africa/Blantyre", "Africa/Bujumbura", "Africa/Gaborone", "Africa/Harare", "Africa/Kigali", "Africa/Lubumbashi", "Africa/Lusaka"]
    }, {
        label: "Central Africa Time - Windhoek",
        name: "Africa/Windhoek",
        aliases: []
    }, {
        label: "Eastern European Standard Time - Cairo",
        name: "Africa/Cairo",
        aliases: ["Egypt"]
    }, {
        label: "Eastern European Standard Time - Kaliningrad",
        name: "Europe/Kaliningrad",
        aliases: []
    }, {
        label: "Eastern European Standard Time - Tripoli",
        name: "Africa/Tripoli",
        aliases: ["Libya"]
    }, {
        label: "Eastern European Time - Amman",
        name: "Asia/Amman",
        aliases: []
    }, {
        label: "Eastern European Time - Athens",
        name: "Europe/Athens",
        aliases: []
    }, {
        label: "Eastern European Time - Beirut",
        name: "Asia/Beirut",
        aliases: []
    }, {
        label: "Eastern European Time - Bucharest",
        name: "Europe/Bucharest",
        aliases: []
    }, {
        label: "Eastern European Time - Chisinau",
        name: "Europe/Chisinau",
        aliases: ["Europe/Tiraspol"]
    }, {
        label: "Eastern European Time - Damascus",
        name: "Asia/Damascus",
        aliases: []
    }, {
        label: "Eastern European Time - Gaza",
        name: "Asia/Gaza",
        aliases: []
    }, {
        label: "Eastern European Time - Hebron",
        name: "Asia/Hebron",
        aliases: []
    }, {
        label: "Eastern European Time - Helsinki",
        name: "Europe/Helsinki",
        aliases: ["Europe/Mariehamn"]
    }, {
        label: "Eastern European Time - Kyiv",
        name: "Europe/Kiev",
        aliases: ["Europe/Kyiv"]
    }, {
        label: "Eastern European Time - Nicosia",
        name: "Asia/Nicosia",
        aliases: ["Europe/Nicosia"]
    }, {
        label: "Eastern European Time - Riga",
        name: "Europe/Riga",
        aliases: []
    }, {
        label: "Eastern European Time - Sofia",
        name: "Europe/Sofia",
        aliases: []
    }, {
        label: "Eastern European Time - Tallinn",
        name: "Europe/Tallinn",
        aliases: []
    }, {
        label: "Eastern European Time - Uzhhorod",
        name: "Europe/Uzhgorod",
        aliases: []
    }, {
        label: "Eastern European Time - Vilnius",
        name: "Europe/Vilnius",
        aliases: []
    }, {
        label: "Eastern European Time - Zaporozhye",
        name: "Europe/Zaporozhye",
        aliases: []
    }, {
        label: "Israel Time",
        name: "Asia/Jerusalem",
        aliases: ["Asia/Tel_Aviv", "Israel"]
    }, {
        label: "South Africa Standard Time",
        name: "Africa/Johannesburg",
        aliases: ["Africa/Maseru", "Africa/Mbabane"]
    }, {
        label: "Arabian Standard Time - Baghdad",
        name: "Asia/Baghdad",
        aliases: []
    }, {
        label: "Arabian Standard Time - Qatar",
        name: "Asia/Qatar",
        aliases: ["Asia/Bahrain"]
    }, {
        label: "Arabian Standard Time - Riyadh",
        name: "Asia/Riyadh",
        aliases: ["Antarctica/Syowa", "Asia/Aden", "Asia/Kuwait"]
    }, {
        label: "East Africa Time - Juba",
        name: "Africa/Juba",
        aliases: []
    }, {
        label: "East Africa Time - Nairobi",
        name: "Africa/Nairobi",
        aliases: ["Africa/Addis_Ababa", "Africa/Asmara", "Africa/Asmera", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Kampala", "Africa/Mogadishu", "Indian/Antananarivo", "Indian/Comoro", "Indian/Mayotte"]
    }, {
        label: "Kirov Time",
        name: "Europe/Kirov",
        aliases: []
    }, {
        label: "Moscow Standard Time - Minsk",
        name: "Europe/Minsk",
        aliases: []
    }, {
        label: "Moscow Standard Time - Moscow",
        name: "Europe/Moscow",
        aliases: ["W-SU"]
    }, {
        label: "Syowa Time",
        name: "Antarctica/Syowa",
        aliases: []
    }, {
        label: "Turkey Time",
        name: "Europe/Istanbul",
        aliases: ["Asia/Istanbul", "Turkey"]
    }, {
        label: "Iran Time",
        name: "Asia/Tehran",
        aliases: ["Iran"]
    }, {
        label: "Armenia Standard Time",
        name: "Asia/Yerevan",
        aliases: []
    }, {
        label: "Astrakhan Time",
        name: "Europe/Astrakhan",
        aliases: []
    }, {
        label: "Azerbaijan Standard Time",
        name: "Asia/Baku",
        aliases: []
    }, {
        label: "Georgia Standard Time",
        name: "Asia/Tbilisi",
        aliases: []
    }, {
        label: "Gulf Standard Time",
        name: "Asia/Dubai",
        aliases: ["Asia/Muscat"]
    }, {
        label: "Mauritius Standard Time",
        name: "Indian/Mauritius",
        aliases: []
    }, {
        label: "Réunion Time",
        name: "Indian/Reunion",
        aliases: []
    }, {
        label: "Samara Standard Time",
        name: "Europe/Samara",
        aliases: []
    }, {
        label: "Saratov Time",
        name: "Europe/Saratov",
        aliases: []
    }, {
        label: "Seychelles Time",
        name: "Indian/Mahe",
        aliases: []
    }, {
        label: "Ulyanovsk Time",
        name: "Europe/Ulyanovsk",
        aliases: []
    }, {
        label: "Volgograd Standard Time",
        name: "Europe/Volgograd",
        aliases: []
    }, {
        label: "Afghanistan Time",
        name: "Asia/Kabul",
        aliases: []
    }, {
        label: "French Southern & Antarctic Time",
        name: "Indian/Kerguelen",
        aliases: []
    }, {
        label: "Maldives Time",
        name: "Indian/Maldives",
        aliases: []
    }, {
        label: "Mawson Time",
        name: "Antarctica/Mawson",
        aliases: []
    }, {
        label: "Pakistan Standard Time",
        name: "Asia/Karachi",
        aliases: []
    }, {
        label: "Tajikistan Time",
        name: "Asia/Dushanbe",
        aliases: []
    }, {
        label: "Turkmenistan Standard Time",
        name: "Asia/Ashgabat",
        aliases: ["Asia/Ashkhabad"]
    }, {
        label: "Uzbekistan Standard Time - Samarkand",
        name: "Asia/Samarkand",
        aliases: []
    }, {
        label: "Uzbekistan Standard Time - Tashkent",
        name: "Asia/Tashkent",
        aliases: []
    }, {
        label: "West Kazakhstan Time - Aqtau",
        name: "Asia/Aqtau",
        aliases: []
    }, {
        label: "West Kazakhstan Time - Aqtobe",
        name: "Asia/Aqtobe",
        aliases: []
    }, {
        label: "West Kazakhstan Time - Atyrau",
        name: "Asia/Atyrau",
        aliases: []
    }, {
        label: "West Kazakhstan Time - Oral",
        name: "Asia/Oral",
        aliases: []
    }, {
        label: "West Kazakhstan Time - Qyzylorda",
        name: "Asia/Qyzylorda",
        aliases: []
    }, {
        label: "Yekaterinburg Standard Time",
        name: "Asia/Yekaterinburg",
        aliases: []
    }, {
        label: "India Standard Time - Colombo",
        name: "Asia/Colombo",
        aliases: []
    }, {
        label: "India Standard Time - Kolkata",
        name: "Asia/Kolkata",
        aliases: ["Asia/Calcutta"]
    }, {
        label: "Nepal Time",
        name: "Asia/Kathmandu",
        aliases: ["Asia/Katmandu"]
    }, {
        label: "Bangladesh Standard Time",
        name: "Asia/Dhaka",
        aliases: ["Asia/Dacca"]
    }, {
        label: "Bhutan Time",
        name: "Asia/Thimphu",
        aliases: ["Asia/Thimbu"]
    }, {
        label: "East Kazakhstan Time - Almaty",
        name: "Asia/Almaty",
        aliases: []
    }, {
        label: "Indian Ocean Time",
        name: "Indian/Chagos",
        aliases: []
    }, {
        label: "Kyrgyzstan Time",
        name: "Asia/Bishkek",
        aliases: []
    }, {
        label: "Omsk Standard Time",
        name: "Asia/Omsk",
        aliases: []
    }, {
        label: "Urumqi Time",
        name: "Asia/Urumqi",
        aliases: ["Asia/Kashgar"]
    }, {
        label: "Vostok Time",
        name: "Antarctica/Vostok",
        aliases: []
    }, {
        label: "Cocos Islands Time",
        name: "Indian/Cocos",
        aliases: []
    }, {
        label: "Barnaul Time",
        name: "Asia/Barnaul",
        aliases: []
    }, {
        label: "Christmas Island Time",
        name: "Indian/Christmas",
        aliases: []
    }, {
        label: "Davis Time",
        name: "Antarctica/Davis",
        aliases: []
    }, {
        label: "Hovd Standard Time",
        name: "Asia/Hovd",
        aliases: []
    }, {
        label: "Indochina Time - Bangkok",
        name: "Asia/Bangkok",
        aliases: ["Asia/Phnom_Penh", "Asia/Vientiane"]
    }, {
        label: "Indochina Time - Ho Chi Minh City",
        name: "Asia/Ho_Chi_Minh",
        aliases: ["Asia/Saigon"]
    }, {
        label: "Krasnoyarsk Standard Time - Krasnoyarsk",
        name: "Asia/Krasnoyarsk",
        aliases: []
    }, {
        label: "Krasnoyarsk Standard Time - Novokuznetsk",
        name: "Asia/Novokuznetsk",
        aliases: []
    }, {
        label: "Novosibirsk Standard Time",
        name: "Asia/Novosibirsk",
        aliases: []
    }, {
        label: "Tomsk Time",
        name: "Asia/Tomsk",
        aliases: []
    }, {
        label: "Western Indonesia Time - Jakarta",
        name: "Asia/Jakarta",
        aliases: []
    }, {
        label: "Western Indonesia Time - Pontianak",
        name: "Asia/Pontianak",
        aliases: []
    }, {
        label: "Australian Western Standard Time - Casey",
        name: "Antarctica/Casey",
        aliases: []
    }, {
        label: "Australian Western Standard Time - Perth",
        name: "Australia/Perth",
        aliases: ["Australia/West"]
    }, {
        label: "Brunei Darussalam Time",
        name: "Asia/Brunei",
        aliases: []
    }, {
        label: "Central Indonesia Time",
        name: "Asia/Makassar",
        aliases: ["Asia/Ujung_Pandang"]
    }, {
        label: "China Standard Time - Macau",
        name: "Asia/Macau",
        aliases: ["Asia/Macao"]
    }, {
        label: "China Standard Time - Shanghai",
        name: "Asia/Shanghai",
        aliases: ["Asia/Chongqing", "Asia/Chungking", "Asia/Harbin", "PRC"]
    }, {
        label: "Choibalsan Standard Time",
        name: "Asia/Choibalsan",
        aliases: []
    }, {
        label: "Hong Kong Standard Time",
        name: "Asia/Hong_Kong",
        aliases: ["Hongkong"]
    }, {
        label: "Irkutsk Standard Time",
        name: "Asia/Irkutsk",
        aliases: []
    }, {
        label: "Malaysia Time - Kuala Lumpur",
        name: "Asia/Kuala_Lumpur",
        aliases: []
    }, {
        label: "Malaysia Time - Kuching",
        name: "Asia/Kuching",
        aliases: []
    }, {
        label: "Philippine Standard Time",
        name: "Asia/Manila",
        aliases: []
    }, {
        label: "Singapore Standard Time",
        name: "Asia/Singapore",
        aliases: ["Singapore"]
    }, {
        label: "Taipei Standard Time",
        name: "Asia/Taipei",
        aliases: ["ROC"]
    }, {
        label: "Ulaanbaatar Standard Time",
        name: "Asia/Ulaanbaatar",
        aliases: ["Asia/Ulan_Bator"]
    }, {
        label: "Australian Central Western Standard Time",
        name: "Australia/Eucla",
        aliases: []
    }, {
        label: "East Timor Time",
        name: "Asia/Dili",
        aliases: []
    }, {
        label: "Eastern Indonesia Time",
        name: "Asia/Jayapura",
        aliases: []
    }, {
        label: "Japan Standard Time",
        name: "Asia/Tokyo",
        aliases: ["Japan"]
    }, {
        label: "Korean Standard Time - Pyongyang",
        name: "Asia/Pyongyang",
        aliases: []
    }, {
        label: "Korean Standard Time - Seoul",
        name: "Asia/Seoul",
        aliases: ["ROK"]
    }, {
        label: "Palau Time",
        name: "Pacific/Palau",
        aliases: []
    }, {
        label: "Yakutsk Standard Time - Chita",
        name: "Asia/Chita",
        aliases: []
    }, {
        label: "Yakutsk Standard Time - Khandyga",
        name: "Asia/Khandyga",
        aliases: []
    }, {
        label: "Yakutsk Standard Time - Yakutsk",
        name: "Asia/Yakutsk",
        aliases: []
    }, {
        label: "Myanmar Time",
        name: "Asia/Yangon",
        aliases: ["Asia/Rangoon"]
    }, {
        label: "Australian Central Standard Time",
        name: "Australia/Darwin",
        aliases: ["Australia/North"]
    }, {
        label: "Australian Eastern Standard Time - Brisbane",
        name: "Australia/Brisbane",
        aliases: ["Australia/Queensland"]
    }, {
        label: "Australian Eastern Standard Time - Lindeman",
        name: "Australia/Lindeman",
        aliases: []
    }, {
        label: "Chamorro Standard Time",
        name: "Pacific/Guam",
        aliases: ["Pacific/Saipan"]
    }, {
        label: "Chuuk Time",
        name: "Pacific/Chuuk",
        aliases: ["Pacific/Truk", "Pacific/Yap"]
    }, {
        label: "Papua New Guinea Time",
        name: "Pacific/Port_Moresby",
        aliases: ["Antarctica/DumontDUrville"]
    }, {
        label: "Vladivostok Standard Time - Vladivostok",
        name: "Asia/Vladivostok",
        aliases: []
    }, {
        label: "Central Australia Time - Adelaide",
        name: "Australia/Adelaide",
        aliases: ["Australia/South"]
    }, {
        label: "Central Australia Time - Broken Hill",
        name: "Australia/Broken_Hill",
        aliases: ["Australia/Yancowinna"]
    }, {
        label: "Bougainville Time",
        name: "Pacific/Bougainville",
        aliases: []
    }, {
        label: "Eastern Australia Time - Currie",
        name: "Australia/Currie",
        aliases: []
    }, {
        label: "Eastern Australia Time - Hobart",
        name: "Australia/Hobart",
        aliases: ["Australia/Currie", "Australia/Tasmania"]
    }, {
        label: "Eastern Australia Time - Melbourne",
        name: "Australia/Melbourne",
        aliases: ["Australia/Victoria"]
    }, {
        label: "Eastern Australia Time - Sydney",
        name: "Australia/Sydney",
        aliases: ["Australia/ACT", "Australia/Canberra", "Australia/NSW"]
    }, {
        label: "Kosrae Time",
        name: "Pacific/Kosrae",
        aliases: []
    }, {
        label: "Lord Howe Time",
        name: "Australia/Lord_Howe",
        aliases: ["Australia/LHI"]
    }, {
        label: "Macquarie Island Time",
        name: "Antarctica/Macquarie",
        aliases: []
    }, {
        label: "Magadan Standard Time",
        name: "Asia/Magadan",
        aliases: []
    }, {
        label: "New Caledonia Standard Time",
        name: "Pacific/Noumea",
        aliases: []
    }, {
        label: "Norfolk Island Time",
        name: "Pacific/Norfolk",
        aliases: []
    }, {
        label: "Ponape Time",
        name: "Pacific/Pohnpei",
        aliases: ["Pacific/Ponape"]
    }, {
        label: "Sakhalin Standard Time",
        name: "Asia/Sakhalin",
        aliases: []
    }, {
        label: "Solomon Islands Time",
        name: "Pacific/Guadalcanal",
        aliases: []
    }, {
        label: "Srednekolymsk Time",
        name: "Asia/Srednekolymsk",
        aliases: []
    }, {
        label: "Vanuatu Standard Time",
        name: "Pacific/Efate",
        aliases: []
    }, {
        label: "Anadyr Standard Time",
        name: "Asia/Anadyr",
        aliases: []
    }, {
        label: "Fiji Time",
        name: "Pacific/Fiji",
        aliases: []
    }, {
        label: "Gilbert Islands Time",
        name: "Pacific/Tarawa",
        aliases: []
    }, {
        label: "Marshall Islands Time - Kwajalein",
        name: "Pacific/Kwajalein",
        aliases: ["Kwajalein"]
    }, {
        label: "Marshall Islands Time - Majuro",
        name: "Pacific/Majuro",
        aliases: []
    }, {
        label: "Nauru Time",
        name: "Pacific/Nauru",
        aliases: []
    }, {
        label: "Petropavlovsk-Kamchatski Standard Time",
        name: "Asia/Kamchatka",
        aliases: []
    }, {
        label: "Tuvalu Time",
        name: "Pacific/Funafuti",
        aliases: []
    }, {
        label: "Wake Island Time",
        name: "Pacific/Wake",
        aliases: []
    }, {
        label: "Wallis & Futuna Time",
        name: "Pacific/Wallis",
        aliases: []
    }, {
        label: "New Zealand Time",
        name: "Pacific/Auckland",
        aliases: ["Antarctica/McMurdo", "Antarctica/South_Pole", "NZ"]
    }, {
        label: "Phoenix Islands Time",
        name: "Pacific/Enderbury",
        aliases: []
    }, {
        label: "Tokelau Time",
        name: "Pacific/Fakaofo",
        aliases: []
    }, {
        label: "Tonga Standard Time",
        name: "Pacific/Tongatapu",
        aliases: []
    }, {
        label: "Chatham Time",
        name: "Pacific/Chatham",
        aliases: ["NZ-CHAT"]
    }, {
        label: "Apia Time",
        name: "Pacific/Apia",
        aliases: []
    }, {
        label: "Line Islands Time",
        name: "Pacific/Kiritimati",
        aliases: []
    }, t.UTC_ZONE],
    t.supportedZones = [...t.displayedZones, {
        name: "Etc/GMT-14",
        label: "Etc/GMT-14",
        aliases: []
    }, {
        name: "Etc/GMT-13",
        label: "Etc/GMT-13",
        aliases: []
    }, {
        name: "Etc/GMT-12",
        label: "Etc/GMT-12",
        aliases: []
    }, {
        name: "Etc/GMT-11",
        label: "Etc/GMT-11",
        aliases: []
    }, {
        name: "Etc/GMT-10",
        label: "Etc/GMT-10",
        aliases: []
    }, {
        name: "Etc/GMT-9",
        label: "Etc/GMT-9",
        aliases: []
    }, {
        name: "Etc/GMT-8",
        label: "Etc/GMT-8",
        aliases: []
    }, {
        name: "Etc/GMT-7",
        label: "Etc/GMT-7",
        aliases: []
    }, {
        name: "Etc/GMT-6",
        label: "Etc/GMT-6",
        aliases: []
    }, {
        name: "Etc/GMT-5",
        label: "Etc/GMT-5",
        aliases: []
    }, {
        name: "Etc/GMT-4",
        label: "Etc/GMT-4",
        aliases: []
    }, {
        name: "Etc/GMT-3",
        label: "Etc/GMT-3",
        aliases: []
    }, {
        name: "Etc/GMT-2",
        label: "Etc/GMT-2",
        aliases: []
    }, {
        name: "Etc/GMT-1",
        label: "Etc/GMT-1",
        aliases: []
    }, {
        name: "Etc/GMT+1",
        label: "Etc/GMT+1",
        aliases: []
    }, {
        name: "Etc/GMT+2",
        label: "Etc/GMT+2",
        aliases: []
    }, {
        name: "Etc/GMT+3",
        label: "Etc/GMT+3",
        aliases: []
    }, {
        name: "Etc/GMT+4",
        label: "Etc/GMT+4",
        aliases: []
    }, {
        name: "Etc/GMT+5",
        label: "Etc/GMT+5",
        aliases: []
    }, {
        name: "Etc/GMT+6",
        label: "Etc/GMT+6",
        aliases: []
    }, {
        name: "Etc/GMT+7",
        label: "Etc/GMT+7",
        aliases: []
    }, {
        name: "Etc/GMT+8",
        label: "Etc/GMT+8",
        aliases: []
    }, {
        name: "Etc/GMT+9",
        label: "Etc/GMT+9",
        aliases: []
    }, {
        name: "Etc/GMT+10",
        label: "Etc/GMT+10",
        aliases: []
    }, {
        name: "Etc/GMT+11",
        label: "Etc/GMT+11",
        aliases: []
    }, {
        name: "Etc/GMT+12",
        label: "Etc/GMT+12",
        aliases: []
    }],
    t.abbreviations = new Map([["UTC", "Etc/GMT"], ["CET", "Europe/Paris"], ["MET", "Europe/Paris"], ["WET", "Europe/Lisbon"], ["EET", "Europe/Helsinki"], ["EST", "America/Panama"], ["CST", "America/Chicago"], ["MST", "America/Phoenix"], ["PST", "America/Los_Angeles"], ["HST", "Pacific/Honolulu"]]),
    t.byName = new Map(t.supportedZones.map(o=>[o.name.toLowerCase(), o])),
    t.byContinent = new Map(Object.entries(m5(t.supportedZones, o=>{
        var l;
        return (l = j6(o.name)) == null ? void 0 : l.continent
    }
    ))),
    t.byAlias = new Map(t.supportedZones.flatMap(o=>o.aliases.map(l=>[l.toLowerCase(), o])));
    const s = -12
      , i = 14;
    function a(o, l) {
        const u = new Date().toLocaleDateString("en-US", {
            timeZone: o,
            weekday: "long"
        });
        return l.includes(u)
    }
    t.isDayInTimezone = a
}
)(U1 || (U1 = {}));
function j6(t) {
    const [e,n,...r] = t.split("/");
    if (!(!t.includes("/") || e === "Etc"))
        return {
            continent: el(e),
            area: r.length > 0 ? el(n) : void 0
        }
}
var Jl;
(function(t) {
    t[t.configuration = 0] = "configuration",
    t[t.userManagement = 1] = "userManagement",
    t[t.publicity = 2] = "publicity",
    t[t.delete = 3] = "delete"
}
)(Jl || (Jl = {}));
var qi;
(function(t) {
    t.issue = "issue",
    t.document = "document",
    t.project = "project"
}
)(qi || (qi = {}));
class Iue {
    static get allTypes() {
        return ["issue", "document", "project"]
    }
    static nameForType(e) {
        switch (e) {
        case "issue":
            return "Issue";
        case "document":
            return "Document";
        case "project":
            return "Project";
        default:
            return ""
        }
    }
}
const ho = class ho {
}
;
ho.maxChildLabels = 100,
ho.minLabelLength = 1,
ho.maxLabelLength = 80,
ho.maxDescriptionLength = 255,
ho.reservedLabels = ["assignee", "cycle", "effort", "estimate", "hours", "priority", "project", "state", "status"],
ho.labelNamesMatch = (...e)=>q7(e.map(n=>n.toLowerCase())).length === 1,
ho.suggestableLabels = {
    improvement: [{
        keyword: "improve",
        weight: .9
    }, {
        keyword: "improves",
        weight: .9
    }, {
        keyword: "enhance",
        weight: .9
    }, {
        keyword: "enhances",
        weight: .9
    }, {
        keyword: "optimize",
        weight: .8
    }, {
        keyword: "optimizes",
        weight: .8
    }, {
        keyword: "optimization",
        weight: .8
    }, {
        keyword: "refactor",
        weight: .8
    }, {
        keyword: "refactors",
        weight: .8
    }, {
        keyword: "refactoring",
        weight: .8
    }, {
        keyword: "streamline",
        weight: .8
    }],
    feature: [{
        keyword: "add ability",
        weight: .9
    }, {
        keyword: "add support",
        weight: .9
    }, {
        keyword: "allow",
        weight: .8
    }, {
        keyword: "ability",
        weight: .8
    }, {
        keyword: "support",
        weight: .8
    }, {
        keyword: "feature",
        weight: .8
    }, {
        keyword: "functionality",
        weight: .8
    }],
    design: [{
        keyword: "figma",
        weight: .9
    }, {
        keyword: "sketch",
        weight: .9
    }, {
        keyword: "assets",
        weight: .8
    }, {
        keyword: "asset",
        weight: .8
    }, {
        keyword: "icon",
        weight: .8
    }, {
        keyword: "icons",
        weight: .8
    }, {
        keyword: "ux",
        weight: .8
    }, {
        keyword: "mockup",
        weight: .8
    }, {
        keyword: "invision",
        weight: .8
    }, {
        keyword: "wireframe",
        weight: .8
    }, {
        keyword: "prototype",
        weight: .8
    }],
    bug: [{
        keyword: "crash",
        weight: .9
    }, {
        keyword: "crashes",
        weight: .9
    }, {
        keyword: "stacktrace",
        weight: .9
    }, {
        keyword: "regression",
        weight: .9
    }, {
        keyword: "regressions",
        weight: .9
    }, {
        keyword: "exception",
        weight: .9
    }, {
        keyword: "exceptions",
        weight: .9
    }, {
        keyword: "rejection",
        weight: .9
    }, {
        keyword: "rejections",
        weight: .9
    }, {
        keyword: "failure",
        weight: .9
    }, {
        keyword: "failures",
        weight: .9
    }, {
        keyword: "unhandled",
        weight: .9
    }, {
        keyword: "typeerror",
        weight: .9
    }, {
        keyword: "undefined",
        weight: .9
    }, {
        keyword: "defect",
        weight: .9
    }, {
        keyword: "defects",
        weight: .9
    }, {
        keyword: "glitch",
        weight: .9
    }, {
        keyword: "glitches",
        weight: .9
    }, {
        keyword: "fix",
        weight: .8
    }, {
        keyword: "fix",
        weight: .8
    }, {
        keyword: "broke",
        weight: .8
    }, {
        keyword: "broken",
        weight: .8
    }, {
        keyword: "problem",
        weight: .8
    }, {
        keyword: "problems",
        weight: .8
    }, {
        keyword: "not working",
        weight: .8
    }, {
        keyword: "error",
        weight: .8
    }, {
        keyword: "errors",
        weight: .8
    }, {
        keyword: "issue",
        weight: .8
    }, {
        keyword: "malfunction",
        weight: .8
    }, {
        keyword: "malfunctioning",
        weight: .8
    }, {
        keyword: "anomaly",
        weight: .8
    }, {
        keyword: "misbehavior",
        weight: .8
    }, {
        keyword: "misaligned",
        weight: .8
    }],
    backend: [{
        keyword: "server",
        weight: .9
    }, {
        keyword: "node.js",
        weight: .9
    }, {
        keyword: "infrastructure",
        weight: .9
    }, {
        keyword: "infra",
        weight: .8
    }, {
        keyword: "database",
        weight: .9
    }, {
        keyword: "django",
        weight: .9
    }, {
        keyword: "postgres",
        weight: .9
    }, {
        keyword: "mysql",
        weight: .9
    }, {
        keyword: "mongo",
        weight: .9
    }, {
        keyword: "sql",
        weight: .9
    }, {
        keyword: "redis",
        weight: .9
    }, {
        keyword: "memcached",
        weight: .9
    }, {
        keyword: "api",
        weight: .8
    }, {
        keyword: "server-side",
        weight: .8
    }, {
        keyword: "microservice",
        weight: .8
    }, {
        keyword: "kubernetes",
        weight: .8
    }],
    frontend: [{
        keyword: "react",
        weight: .9
    }, {
        keyword: "angular",
        weight: .9
    }, {
        keyword: "vue",
        weight: .9
    }, {
        keyword: "svelte",
        weight: .9
    }, {
        keyword: "css",
        weight: .9
    }, {
        keyword: "html",
        weight: .9
    }, {
        keyword: "browser",
        weight: .9
    }, {
        keyword: "chrome",
        weight: .9
    }, {
        keyword: "firefox",
        weight: .9
    }, {
        keyword: "opera",
        weight: .9
    }, {
        keyword: "safari",
        weight: .9
    }, {
        keyword: "edge",
        weight: .9
    }, {
        keyword: "arc",
        weight: .9
    }, {
        keyword: "javascript",
        weight: .8
    }, {
        keyword: "typescript",
        weight: .8
    }, {
        keyword: "ui",
        weight: .8
    }, {
        keyword: "ux",
        weight: .8
    }, {
        keyword: "client-side",
        weight: .8
    }],
    documentation: [{
        keyword: "docs",
        weight: .9
    }, {
        keyword: "guide",
        weight: .9
    }, {
        keyword: "faq",
        weight: .9
    }, {
        keyword: "tutorial",
        weight: .9
    }, {
        keyword: "changelog",
        weight: .8
    }, {
        keyword: "reference",
        weight: .8
    }, {
        keyword: "help",
        weight: .8
    }, {
        keyword: "walkthrough",
        weight: .8
    }],
    mobile: [{
        keyword: "ios",
        weight: .9
    }, {
        keyword: "android",
        weight: .9
    }, {
        keyword: "iphone",
        weight: .8
    }, {
        keyword: "react native",
        weight: .9
    }, {
        keyword: "flutter",
        weight: .9
    }, {
        keyword: "ionic",
        weight: .9
    }, {
        keyword: "cordova",
        weight: .9
    }, {
        keyword: "ipad",
        weight: .8
    }],
    ios: [{
        keyword: "xcode",
        weight: .9
    }, {
        keyword: "swift",
        weight: .9
    }, {
        keyword: "swiftui",
        weight: .9
    }, {
        keyword: "objective-c",
        weight: .9
    }, {
        keyword: "cocoa",
        weight: .8
    }, {
        keyword: "iphone",
        weight: .8
    }, {
        keyword: "ipad",
        weight: .8
    }],
    security: [{
        keyword: "vulnerability",
        weight: .9
    }, {
        keyword: "vulnerabilities",
        weight: .9
    }, {
        keyword: "vulnerable",
        weight: .9
    }, {
        keyword: "breach",
        weight: .9
    }, {
        keyword: "exploit",
        weight: .9
    }, {
        keyword: "xss",
        weight: .9
    }, {
        keyword: "csrf",
        weight: .9
    }, {
        keyword: "cve",
        weight: .9
    }, {
        keyword: "encryption",
        weight: .8
    }, {
        keyword: "leak",
        weight: .8
    }, {
        keyword: "penetration",
        weight: .8
    }, {
        keyword: "firewall",
        weight: .8
    }, {
        keyword: "secure",
        weight: .8
    }, {
        keyword: "protection",
        weight: .8
    }, {
        keyword: "patch",
        weight: .8
    }],
    performance: [{
        keyword: "slow",
        weight: .9
    }, {
        keyword: "optimize",
        weight: .9
    }, {
        keyword: "optimization",
        weight: .9
    }, {
        keyword: "bottleneck",
        weight: .8
    }, {
        keyword: "speed",
        weight: .8
    }, {
        keyword: "latency",
        weight: .8
    }],
    qa: [{
        keyword: "testing",
        weight: .9
    }, {
        keyword: "test plan",
        weight: .9
    }, {
        keyword: "test case",
        weight: .9
    }, {
        keyword: "test",
        weight: .8
    }, {
        keyword: "automation",
        weight: .8
    }],
    devops: [{
        keyword: "aws",
        weight: .8
    }, {
        keyword: "azure",
        weight: .8
    }, {
        keyword: "gcp",
        weight: .8
    }, {
        keyword: "kubernetes",
        weight: .8
    }, {
        keyword: "docker",
        weight: .8
    }, {
        keyword: "ci/cd",
        weight: .8
    }, {
        keyword: "continuous integration",
        weight: .8
    }, {
        keyword: "continuous deployment",
        weight: .8
    }, {
        keyword: "deploy",
        weight: .8
    }, {
        keyword: "deployment",
        weight: .8
    }, {
        keyword: "monitoring",
        weight: .8
    }, {
        keyword: "observability",
        weight: .8
    }, {
        keyword: "logging",
        weight: .8
    }]
};
let d9 = ho;
var Ia;
let u_ = (Ia = class {
    static isEmojiCode(e) {
        return e.startsWith(":") && e.endsWith(":") && e.length > 2
    }
    static toEmojiCode(e) {
        return Ia.isEmojiCode(e) ? e : `:${e}:`
    }
    static toEmojiName(e) {
        return Ia.isEmojiCode(e) ? e.slice(1, e.length - 1) : e
    }
    static replaceEmojiStrings(e, n) {
        return e.replace(new RegExp(/(:[A-Za-z0-9-_+]+:)/,"gi"), (r,s)=>{
            const i = Ia.toEmojiName(s)
              , a = n(i);
            return !a && i.includes("skin-tone-") ? "" : a ?? s
        }
        )
    }
}
,
Ia.minNameLength = 1,
Ia.maxNameLength = 256,
Ia.nameValidation = /^[a-z0-9-_]+$/,
Ia);
var _4;
(function(t) {
    t.activeIssueCount = "activeIssueCount",
    t.fileUploadVolume = "fileUploadVolume",
    t.singleFileUploadSize = "singleFileUploadSize"
}
)(_4 || (_4 = {}));
var mb;
(function(t) {
    t.under = "under",
    t.nearing = "nearing",
    t.exceeded = "exceeded",
    t.overlyExceeded = "overlyExceeded"
}
)(mb || (mb = {}));
const wc = class wc {
    static isFileUploadAllowed(e) {
        const n = wc.limits.singleFileUploadSize;
        return {
            exceedsLimit: e > n,
            allowed: e <= n * wc.OVERLY_EXCEEDING_MULTIPLIER
        }
    }
}
;
wc.NEARING_LIMIT_THRESHOLD = .9,
wc.OVERLY_EXCEEDING_MULTIPLIER = 1.1,
wc.limits = {
    activeIssueCount: 250,
    fileUploadVolume: 150,
    singleFileUploadSize: 10
};
let I4 = wc;
var $e;
(function(t) {
    t.free = "free",
    t.basic = "basic",
    t.business = "business",
    t.businessPlus = "businessPlus",
    t.enterprise = "enterprise",
    t.standard = "standard",
    t.plus = "plus"
}
)($e || ($e = {}));
var gb;
(function(t) {
    t.month = "month",
    t.year = "year",
    t.quarter = "quarter"
}
)(gb || (gb = {}));
var yb;
(function(t) {
    t.automatic = "charge_automatically",
    t.invoice = "send_invoice"
}
)(yb || (yb = {}));
var A0;
(function(t) {
    t.free = "free",
    t.basic_monthly = "basic_monthly",
    t.basic_yearly = "basic_yearly",
    t.business_monthly = "business_monthly",
    t.business_yearly = "business_yearly",
    t.business_plus_monthly = "business_plus_monthly",
    t.business_plus_yearly = "business_plus_yearly",
    t.enterprise_yearly_19 = "enterprise_yearly_19",
    t.enterprise_yearly_20 = "enterprise_yearly_20",
    t.enterprise_quarterly_22 = "enterprise_quarterly_22",
    t.beta_8 = "beta_8",
    t.standard_monthly_10 = "standard_monthly_10",
    t.standard_yearly = "standard_yearly",
    t.plus_monthly_15 = "plus_monthly_15",
    t.plus_yearly = "plus_yearly",
    t.plus_yearly_14 = "plus_yearly_14",
    t.plus_monthly_17 = "plus_monthly_17",
    t.plus_yearly_15 = "price_1NhzFsHjtSHLbR6B9yKveXe4",
    t.plus_yearly_16 = "plus_yearly_16"
}
)(A0 || (A0 = {}));
const kc = class kc {
    static isValid(e) {
        return this.allPaidSubscriptionTypes.includes(e)
    }
    static billingPeriodForSubscription(e) {
        switch (e) {
        case "enterprise_quarterly_22":
            return "quarter";
        case "standard_yearly":
        case "plus_yearly_14":
        case "price_1NhzFsHjtSHLbR6B9yKveXe4":
        case "plus_yearly_16":
        case "plus_yearly":
        case "enterprise_yearly_19":
        case "enterprise_yearly_20":
        case "basic_yearly":
        case "business_yearly":
        case "business_plus_yearly":
            return "year";
        default:
            return "month"
        }
    }
    static monthsInBillingPeriod(e) {
        switch (e) {
        case "year":
            return 12;
        case "quarter":
            return 3;
        case "month":
            return 1;
        default:
            throw new zt(e)
        }
    }
    static pricePerSeatForSubscription(e) {
        switch (e) {
        case "free":
            return 0;
        case "beta_8":
            return 8;
        case "standard_monthly_10":
            return 10;
        case "standard_yearly":
            return 8;
        case "plus_monthly_15":
            return 15;
        case "plus_monthly_17":
            return 17;
        case "plus_yearly_14":
            return 14;
        case "price_1NhzFsHjtSHLbR6B9yKveXe4":
            return 15;
        case "plus_yearly_16":
            return 16;
        case "plus_yearly":
            return 12;
        case "enterprise_yearly_19":
            return 18.75;
        case "enterprise_yearly_20":
            return 20;
        case "basic_monthly":
            return 10;
        case "basic_yearly":
            return 8;
        case "business_monthly":
            return 15;
        case "business_yearly":
            return 12;
        case "business_plus_monthly":
            return 18;
        case "business_plus_yearly":
            return 15;
        case "enterprise_quarterly_22":
            return 22;
        default:
            throw new zt(e)
        }
    }
    static planName(e) {
        return e === "businessPlus" ? "Business+" : el(e)
    }
    static planDisplayName(e) {
        const {type: n, billingPeriod: r, includeLinear: s} = e
          , i = n ? this.planName(this.planForSubscription(n)) : "Free"
          , a = n && n !== "free" ? ` ${el(r || this.billingPeriodForSubscription(n))}ly` : "";
        return `${s ? "Linear " : ""}${i}${a}`
    }
    static planForSubscription(e) {
        switch (e) {
        case "standard_monthly_10":
        case "standard_yearly":
            return "standard";
        case "plus_monthly_15":
        case "plus_monthly_17":
        case "plus_yearly_14":
        case "price_1NhzFsHjtSHLbR6B9yKveXe4":
        case "plus_yearly_16":
        case "plus_yearly":
            return "plus";
        case "basic_monthly":
        case "basic_yearly":
            return "basic";
        case "business_monthly":
        case "business_yearly":
            return "business";
        case "business_plus_monthly":
        case "business_plus_yearly":
            return "businessPlus";
        case "enterprise_yearly_19":
        case "enterprise_yearly_20":
        case "enterprise_quarterly_22":
            return "enterprise";
        case "free":
            return "free";
        default:
            return this.allPaidSubscriptionTypes.indexOf(e) !== -1 ? "standard" : "free"
        }
    }
    static subscriptionTypeFor(e, n) {
        if (e === "free")
            return "free";
        if (e === "standard")
            return n === "year" ? "standard_yearly" : "standard_monthly_10";
        if (e === "enterprise")
            return n === "quarter" ? "enterprise_quarterly_22" : "enterprise_yearly_19";
        if (e === "plus")
            return "plus_yearly_14";
        if (e === "basic")
            return n === "year" ? "basic_yearly" : "basic_monthly";
        if (e === "business")
            return n === "year" ? "business_yearly" : "business_monthly";
        if (e === "businessPlus")
            return n === "year" ? "business_plus_yearly" : "business_plus_monthly";
        throw new Error(`Can't find subscription type for ${e}/${n}`)
    }
    static planHasMonthlyBilling(e) {
        return !["free", "enterprise"].includes(e)
    }
}
;
kc.allPaidSubscriptionTypes = Object.values(A0).filter(e=>e !== "free"),
kc.currentPaidSubscriptionTypes = ["basic_monthly", "basic_yearly", "business_monthly", "business_yearly", "business_plus_monthly", "business_plus_yearly", "enterprise_yearly_19", "enterprise_yearly_20", "enterprise_quarterly_22"],
kc.deprecatedSubscriptionTypes = kc.allPaidSubscriptionTypes.filter(e=>kc.currentPaidSubscriptionTypes.indexOf(e) === -1);
let Is = kc;
var j0;
(function(t) {
    t.createUsers = "createUsers",
    t.createTeams = "createTeams",
    t.createIssues = "createIssues",
    t.fileUploads = "fileUploads",
    t.triage = "triage",
    t.issueSync = "issueSync",
    t.turnOffTeamGroupIssueHistory = "turnOffTeamGroupIssueHistory",
    t.manageAdministrators = "manageAdministrators",
    t.saml = "saml",
    t.scim = "scim",
    t.authMethodRestrictions = "authMethodRestrictions",
    t.ipRestrictions = "ipRestrictions",
    t.privateTeams = "privateTeams",
    t.auditLog = "auditLog",
    t.reducedPersonalInformation = "reducedPersonalInformation",
    t.dataExport = "dataExport",
    t.guestAccounts = "guestAccounts",
    t.oauthAppReview = "oauthAppReview",
    t.domainClaim = "domainClaim",
    t.sla = "sla",
    t.insights = "insights",
    t.asks = "asks",
    t.asksLimited = "asksLimited",
    t.initiatives = "initiatives",
    t.triageResponsibility = "triageResponsibility",
    t.premiumIntegrations = "premiumIntegrations",
    t.projectUpdates = "projectUpdates",
    t.prioritySupport = "prioritySupport",
    t.accountManager = "accountManager",
    t.customTerms = "customTerms",
    t.uptimeSla = "uptimeSla",
    t.multipleSlackWorkspaces = "multipleSlackWorkspaces"
}
)(j0 || (j0 = {}));
const fn = class fn {
    static getFeature(e) {
        return this.spec[e]
    }
    static tierName(e) {
        return Is.planName(e)
    }
    static canAccess(e, n, r) {
        var o;
        const s = this.isPlanEqualOrBetterThan(n, this.spec[e].minimumPlan)
          , i = this.spec[e]
          , a = s || !!((o = i.plans) != null && o.includes(n));
        return i.tiers && r !== void 0 ? a && r < Number(i.tiers[n]) : a
    }
    static minimumPlanForFeature(e, n) {
        var a;
        const r = this.spec[e]
          , s = [$e.standard, $e.plus];
        let i = r.minimumPlan;
        if (r.tiers && n !== void 0)
            i = (a = Object.entries(r.tiers).find(([o,l])=>!s.includes(o) && Number(l) > n)) == null ? void 0 : a[0];
        else if (s.includes(i)) {
            for (const o of this.planTypeTiers)
                if (this.isPlanEqualOrBetterThan(o, i) && !s.includes(o)) {
                    i = o;
                    break
                }
        }
        return i
    }
    static errorMessageForFeature(e, n, r) {
        const s = this.spec[e]
          , i = this.minimumPlanForFeature(e, n);
        return `Subscribe to the ${Is.planName(i)} plan to access ${r || s.name.toLowerCase()} in your workspace.`
    }
    static isPlanEqualOrBetterThan(e, n) {
        return this.planTypeTiers.indexOf(e) >= this.planTypeTiers.indexOf(n)
    }
}
;
fn.unlimited = 1e6,
fn.spec = {
    createUsers: {
        name: "Members",
        description: "A member has access to the workspace and can create and edit issues.",
        minimumPlan: $e.free,
        tiers: {
            [$e.free]: fn.unlimited,
            [$e.basic]: fn.unlimited,
            [$e.standard]: fn.unlimited,
            [$e.business]: fn.unlimited,
            [$e.businessPlus]: fn.unlimited,
            [$e.plus]: fn.unlimited,
            [$e.enterprise]: fn.unlimited
        }
    },
    createTeams: {
        name: "Teams",
        description: "Organize your workspace into teams.",
        minimumPlan: $e.free,
        tiers: {
            [$e.free]: 2,
            [$e.basic]: 5,
            [$e.standard]: fn.unlimited,
            [$e.business]: fn.unlimited,
            [$e.businessPlus]: fn.unlimited,
            [$e.plus]: fn.unlimited,
            [$e.enterprise]: fn.unlimited
        }
    },
    fileUploads: {
        name: "File upload size",
        description: "Applies to any files you upload to issues or comments.",
        minimumPlan: $e.free,
        tiers: {
            [$e.free]: I4.limits[_4.singleFileUploadSize] + "MB",
            [$e.basic]: fn.unlimited,
            [$e.standard]: fn.unlimited,
            [$e.business]: fn.unlimited,
            [$e.businessPlus]: fn.unlimited,
            [$e.plus]: fn.unlimited,
            [$e.enterprise]: fn.unlimited
        }
    },
    createIssues: {
        name: "Issues (excluding Archive)",
        description: "Applies to all non-archived issues.",
        minimumPlan: $e.free,
        tiers: {
            [$e.free]: I4.limits[_4.activeIssueCount],
            [$e.basic]: fn.unlimited,
            [$e.standard]: fn.unlimited,
            [$e.business]: fn.unlimited,
            [$e.businessPlus]: fn.unlimited,
            [$e.plus]: fn.unlimited,
            [$e.enterprise]: fn.unlimited
        }
    },
    projectUpdates: {
        name: "Project updates",
        description: "Post updates to projects.",
        minimumPlan: $e.free
    },
    triage: {
        name: "Triage",
        description: "A special inbox to manage issues created by other teams.",
        minimumPlan: $e.free
    },
    issueSync: {
        name: "Issue sync",
        description: "Sync issues bidirectionally with Jira and GitHub.",
        minimumPlan: $e.free
    },
    initiatives: {
        name: "Initiatives",
        description: "Track and manage initiatives.",
        minimumPlan: $e.free
    },
    manageAdministrators: {
        name: "Admin roles",
        description: "Control who are admins in the workspace.",
        minimumPlan: $e.basic
    },
    turnOffTeamGroupIssueHistory: {
        name: "Advanced issue history",
        description: "Control whether changes are grouped in the issue history.",
        minimumPlan: $e.standard
    },
    privateTeams: {
        name: "Private teams",
        description: "Restrict access to private teams.",
        minimumPlan: $e.standard
    },
    guestAccounts: {
        name: "Guest accounts",
        description: "Guests are paid users with restricted access to designated teams in a workspace.",
        minimumPlan: $e.standard
    },
    authMethodRestrictions: {
        name: "Advanced authentication controls",
        description: "Restrict logins to the workspace to Google and other login methods.",
        minimumPlan: $e.standard
    },
    premiumIntegrations: {
        name: "Support integrations",
        description: "Integrate with Zendesk, Intercom, and Front.",
        minimumPlan: $e.standard
    },
    triageResponsibility: {
        name: "Triage responsibility",
        description: "Schedule triage responsibility for your workspace.",
        minimumPlan: $e.standard
    },
    insights: {
        name: "Insights",
        description: "Advanced analytics and reporting for all your workspace data.",
        minimumPlan: $e.business
    },
    saml: {
        name: "SAML authentication",
        description: "Enable SAML authentication for your workspace.",
        minimumPlan: $e.plus,
        plans: [$e.businessPlus]
    },
    domainClaim: {
        name: "Domain claiming",
        description: "Prevent creation of unsanctioned workspaces.",
        minimumPlan: $e.plus,
        plans: [$e.businessPlus]
    },
    auditLog: {
        name: "Audit log",
        description: "Availability of workspace level audit log for admins.",
        minimumPlan: $e.plus
    },
    reducedPersonalInformation: {
        name: "Reduced personal information",
        description: "Control personal information stored from integrations.",
        minimumPlan: $e.plus
    },
    dataExport: {
        name: "Data warehouse sync",
        description: "Consolidate your data in data warehouses, lakes, and databases via Airbyte.",
        minimumPlan: $e.plus
    },
    oauthAppReview: {
        name: "Third-party app management",
        description: "Admins can view and manage approved OAuth applications.",
        minimumPlan: $e.plus
    },
    sla: {
        name: "Issue SLAs",
        description: "Set time-based deadlines with service level agreements.",
        minimumPlan: $e.plus
    },
    asks: {
        name: "Linear Asks",
        description: "Create and manage workplace requests from Slack",
        minimumPlan: $e.plus
    },
    asksLimited: {
        name: "Asks",
        description: "Ask questions and get answers from your team, with limited configuration options.",
        minimumPlan: $e.business
    },
    prioritySupport: {
        name: "Priority support",
        description: "Faster replies to support questions.",
        minimumPlan: $e.plus
    },
    ipRestrictions: {
        name: "IP restrictions",
        description: "Restrict workspace access to your private network.",
        minimumPlan: $e.enterprise
    },
    scim: {
        name: "SCIM provisioning",
        description: "Automate user provisioning and deprovisioning with SCIM.",
        minimumPlan: $e.enterprise,
        plans: [$e.businessPlus]
    },
    accountManager: {
        name: "Account manager",
        description: "Work with a dedicated Customer Success Manager to help you get the most out of Linear.",
        minimumPlan: $e.enterprise
    },
    customTerms: {
        name: "Custom terms",
        description: "Establish custom contractual terms that suit your organization.",
        minimumPlan: $e.enterprise
    },
    uptimeSla: {
        name: "Uptime SLA",
        description: "Receive a Service Level Agreement for uptime of the Linear application.",
        minimumPlan: $e.enterprise
    },
    multipleSlackWorkspaces: {
        name: "Multiple Slack workspaces",
        description: "Connect multiple Slack workspaces to your Linear workspace.",
        minimumPlan: $e.enterprise
    }
},
fn.planTypeTiers = [$e.free, $e.basic, $e.standard, $e.business, $e.businessPlus, $e.plus, $e.enterprise];
let Vc = fn;
var Pd;
(function(t) {
    t.week = "week",
    t.twoWeeks = "twoWeeks",
    t.month = "month",
    t.never = "never"
}
)(Pd || (Pd = {}));
(function(t) {
    function e() {
        return Object.values(t).filter(r=>typeof r == "string")
    }
    t.all = e;
    function n(r) {
        return r === "week" ? "week" : r === "twoWeeks" ? "twoWeeks" : r === "month" ? "month" : "never"
    }
    t.fromString = n
}
)(Pd || (Pd = {}));
var u9;
(function(t) {
    t.all = "all",
    t.onlyBusinessDays = "onlyBusinessDays"
}
)(u9 || (u9 = {}));
const xc = class xc {
    static getStatusOrder(e) {
        return wi.statusOrdering[e]
    }
    static isStateBefore(e, n) {
        const r = wi.statusOrdering[e.type]
          , s = wi.statusOrdering[n.type];
        return r < s || r === s && e.position < n.position
    }
    static getDefaultStatusTypeColor(e) {
        const n = xc.defaultStatuses.find(r=>r.type === e);
        return n ? n.color : "#8A8F98"
    }
}
;
xc.maxNameLength = 25,
xc.maxDescriptionLength = 255,
xc.defaultStatuses = [{
    type: At.backlog,
    name: "Backlog",
    color: "#F2994A"
}, {
    type: At.planned,
    name: "Planned",
    color: "#D7D8DB"
}, {
    type: At.started,
    name: "In Progress",
    color: "#F2C94C"
}, {
    type: At.completed,
    name: "Completed",
    color: "#5E6AD2"
}, {
    type: At.canceled,
    name: "Canceled",
    color: "#8A8F98"
}],
xc.pausedStatus = {
    type: At.planned,
    name: "Paused",
    color: "#D7D8DB",
    position: 2
};
let h9 = xc;
var f9;
(function(t) {
    t[t.hasFacet = 0] = "hasFacet"
}
)(f9 || (f9 = {}));
const zK = (t,e)=>e.some(n=>t instanceof n);
let Cb, bb;
function ZK() {
    return Cb || (Cb = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction])
}
function qK() {
    return bb || (bb = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey])
}
const h_ = new WeakMap
  , p9 = new WeakMap
  , f_ = new WeakMap
  , M6 = new WeakMap
  , Ap = new WeakMap;
function WK(t) {
    const e = new Promise((n,r)=>{
        const s = ()=>{
            t.removeEventListener("success", i),
            t.removeEventListener("error", a)
        }
          , i = ()=>{
            n(Io(t.result)),
            s()
        }
          , a = ()=>{
            r(t.error),
            s()
        }
        ;
        t.addEventListener("success", i),
        t.addEventListener("error", a)
    }
    );
    return e.then(n=>{
        n instanceof IDBCursor && h_.set(n, t)
    }
    ).catch(()=>{}
    ),
    Ap.set(e, t),
    e
}
function GK(t) {
    if (p9.has(t))
        return;
    const e = new Promise((n,r)=>{
        const s = ()=>{
            t.removeEventListener("complete", i),
            t.removeEventListener("error", a),
            t.removeEventListener("abort", a)
        }
          , i = ()=>{
            n(),
            s()
        }
          , a = ()=>{
            r(t.error || new DOMException("AbortError","AbortError")),
            s()
        }
        ;
        t.addEventListener("complete", i),
        t.addEventListener("error", a),
        t.addEventListener("abort", a)
    }
    );
    p9.set(t, e)
}
let m9 = {
    get(t, e, n) {
        if (t instanceof IDBTransaction) {
            if (e === "done")
                return p9.get(t);
            if (e === "objectStoreNames")
                return t.objectStoreNames || f_.get(t);
            if (e === "store")
                return n.objectStoreNames[1] ? void 0 : n.objectStore(n.objectStoreNames[0])
        }
        return Io(t[e])
    },
    set(t, e, n) {
        return t[e] = n,
        !0
    },
    has(t, e) {
        return t instanceof IDBTransaction && (e === "done" || e === "store") ? !0 : e in t
    }
};
function KK(t) {
    m9 = t(m9)
}
function YK(t) {
    return t === IDBDatabase.prototype.transaction && !("objectStoreNames"in IDBTransaction.prototype) ? function(e, ...n) {
        const r = t.call(Eo(this), e, ...n);
        return f_.set(r, e.sort ? e.sort() : [e]),
        Io(r)
    }
    : qK().includes(t) ? function(...e) {
        return t.apply(Eo(this), e),
        Io(h_.get(this))
    }
    : function(...e) {
        return Io(t.apply(Eo(this), e))
    }
}
function QK(t) {
    return typeof t == "function" ? YK(t) : (t instanceof IDBTransaction && GK(t),
    zK(t, ZK()) ? new Proxy(t,m9) : t)
}
function Io(t) {
    if (t instanceof IDBRequest)
        return WK(t);
    if (M6.has(t))
        return M6.get(t);
    const e = QK(t);
    return e !== t && (M6.set(t, e),
    Ap.set(e, t)),
    e
}
const Eo = t=>Ap.get(t);
function p_(t, e, {blocked: n, upgrade: r, blocking: s, terminated: i}={}) {
    const a = indexedDB.open(t, e)
      , o = Io(a);
    return r && a.addEventListener("upgradeneeded", l=>{
        r(Io(a.result), l.oldVersion, l.newVersion, Io(a.transaction), l)
    }
    ),
    n && a.addEventListener("blocked", l=>n(l.oldVersion, l.newVersion, l)),
    o.then(l=>{
        i && l.addEventListener("close", ()=>i()),
        s && l.addEventListener("versionchange", d=>s(d.oldVersion, d.newVersion, d))
    }
    ).catch(()=>{}
    ),
    o
}
function vb(t, {blocked: e}={}) {
    const n = indexedDB.deleteDatabase(t);
    return e && n.addEventListener("blocked", r=>e(r.oldVersion, r)),
    Io(n).then(()=>{}
    )
}
const XK = ["get", "getKey", "getAll", "getAllKeys", "count"]
  , JK = ["put", "add", "delete", "clear"]
  , T6 = new Map;
function wb(t, e) {
    if (!(t instanceof IDBDatabase && !(e in t) && typeof e == "string"))
        return;
    if (T6.get(e))
        return T6.get(e);
    const n = e.replace(/FromIndex$/, "")
      , r = e !== n
      , s = JK.includes(n);
    if (!(n in (r ? IDBIndex : IDBObjectStore).prototype) || !(s || XK.includes(n)))
        return;
    const i = async function(a, ...o) {
        const l = this.transaction(a, s ? "readwrite" : "readonly");
        let d = l.store;
        return r && (d = d.index(o.shift())),
        (await Promise.all([d[n](...o), s && l.done]))[0]
    };
    return T6.set(e, i),
    i
}
KK(t=>({
    ...t,
    get: (e,n,r)=>wb(e, n) || t.get(e, n, r),
    has: (e,n)=>!!wb(e, n) || t.has(e, n)
}));
var E4;
(function(t) {
    async function e(n, r) {
        const {maxRetries: s, backoff: i, shouldRetry: a, beforeRetry: o} = n;
        let l = 0;
        for (; ; )
            try {
                return await r()
            } catch (d) {
                if ((a == null ? void 0 : a(d)) === !1 || l >= s)
                    throw d;
                const h = typeof i == "function" ? i(d) : i
                  , f = typeof h == "number" ? h : h.type === "exponential" ? Math.min(Math.pow(2, l) * h.delay, h.maxDelay ?? Number.MAX_SAFE_INTEGER) : Gc(h.type);
                l++,
                o == null || o(d, f),
                await new Promise(p=>setTimeout(p, f))
            }
    }
    t.executeWithRetries = e
}
)(E4 || (E4 = {}));
const Bc = {
    models: {
        Comment: 1,
        DocumentContent: 2,
        EmailIntakeAddress: 1,
        Favorite: 2,
        GitAutomationTargetBranch: 1,
        IntegrationTemplate: 1,
        Issue: 3,
        IssueHistory: 1,
        IssueImport: 2,
        IssueLabel: 2,
        IssueRelation: 1,
        PushSubscription: 1,
        RoadmapToProject: 1,
        Subscription: 1,
        Team: 8,
        TeamMembership: 7,
        Template: 2,
        TimeSchedule: 1,
        User: 1,
        Webhook: 1,
        WorkflowState: 1
    },
    indexVersion: 15,
    partialObjectStoreSchemaVersion: 1,
    syncActionStoreVersion: 1
}
  , kb = "linear_databases"
  // #region DatabaseManager
  , jn = class jn { // DatabaseManager
    static async databaseInfo(e) {
        const {userId: n, modelSchemaHash: r, minVersion: s} = e;
        let i = s;
        // Create `linear_databases` calling `jn.databases`
        const o = (await jn.databases()).filter(p=>p.userId === n && p.version > i).orderBy(["version"], ["desc"]);
        o.length > 0 && (i = o[0].version);
        // the following code calculates the schemaHash of the database.
        const l = await this.userVersion(n)
          , d = "linear_" + $1(`${n}_fake_token__${i}${l ? `_${l}` : ""}`)
          , u = $1(`
      ${r}_${Bc.indexVersion}_${Bc.partialObjectStoreSchemaVersion}_${Bc.syncActionStoreVersion}`)
          , h = (await this.databases()).find(p=>p.name === d); // read if there is a database with the same name from indexDB
        let f = h && Number(h == null ? void 0 : h.schemaVersion) || 1; // schemaVersion starts with 1
        return h && h.schemaHash !== u && f++, // if the schema mismatches, we increment the schemaVersion, and use it to trigger a migration of indexDB
        {
            name: d,
            createdAt: Date.now(),
            userId: n,
            schemaHash: u,
            schemaVersion: f,
            version: i,
            userVersion: l
        }
    }
    static async registerDatabase(e) {
        return await (await jn.database()).transaction("databases", "readwrite").store.put(e)
    }
    static async unregisterDatabase(e) {
        const n = await jn.database();
        F.network(`Unregistering database ${e}`, {
            name: e
        });
        const r = n.transaction("databases", "readwrite");
        r.store.delete(e),
        await r.done.catch(()=>{}
        )
    }
    static async deleteDatabaseForUserId(e) {
        const n = await this.databases();
        for (const r of n.filter(s=>s.userId === e))
            await jn.deleteDatabase(r.name)
    }
    static async deleteOutdatedDemoDatabases() {
        const r = (await this.databases()).filter(s=>s.userId === ft.DEMO_USER_ID).filter(s=>s.createdAt < Date.now() - be.DAY);
        for (const s of r)
            await jn.deleteDatabase(s.name)
    }
    static async deleteDatabase(e) {
        F.network("Deleting database", {
            database: e
        }),
        this.deletingDatabase = !0;
        const n = await jn.database()
          , r = await n.transaction("databases", "readonly").store.get(e).catch(()=>{}
        );
        if (r) {
            const s = n.transaction("databases", "readwrite");
            s.store.put({
                ...r,
                deleting: !0
            }),
            await s.done.catch(()=>{}
            )
        }
        return new Promise(async s=>{
            try {
                await vb(e, {
                    blocked: ()=>{
                        F.info("Database deletion blocked", {
                            name: e
                        }),
                        this.deletingDatabase = !1,
                        s()
                    }
                }),
                await this.unregisterDatabase(e)
            } catch (i) {
                F.error("Error deleting database", i)
            }
            this.deletingDatabase = !1,
            s()
        }
        )
    }
    static async deleteAllDatabases() {
        this.deletingDatabase = !0;
        const e = await jn.databases();
        if (e.length > 0 && F.network(`Deleting ${e.length} databases`, {
            dbs: e
        }),
        await Promise.all(e.map(n=>jn.deleteDatabase(n.name))),
        typeof indexedDB.databases == "function")
            for (const n of await indexedDB.databases())
                n.name && await jn.deleteDatabase(n.name);
        this.deletingDatabase = !1
    }
    static async cleanOutdatedDatabases(e, n, r) {
        const s = await jn.outdatedDatabases(e, n, r);
        s.length > 0 && F.network(`Cleaning up ${s.length} stale databases`, {
            dbs: s
        }),
        s.map(i=>jn.deleteDatabase(i.name))
    }
    static async incrementUserVersion(e) {
        const n = (await this.userVersion(e) || 1) + 1;
        F.info(`Incrementing user version to ${n}`),
        await (await jn.database()).put("userVersion", {
            userId: e,
            version: n
        })
    }
    static async database() {
        return jn.databaseInstance || (jn.databaseInstance = await E4.executeWithRetries({
            maxRetries: 2,
            backoff: 0,
            beforeRetry: async()=>{
                F.info("Retrying opening database after error. Deleting existing database."),
                await vb(kb)
            }
        }, async()=>await p_(kb, 2, { // Linking to linear_databases database here.
            upgrade: e=>{
                F.network("Initializing Database Manager database"),
                e.objectStoreNames.contains("databases") || e.createObjectStore("databases", {
                    keyPath: "name"
                }),
                e.objectStoreNames.contains("userVersion") || e.createObjectStore("userVersion", {
                    keyPath: "userId"
                })
            }
            ,
            blocking: ()=>{
                var e;
                F.info("DatabaseManager database is blocking."),
                (e = jn.databaseInstance) == null || e.close(),
                jn.databaseInstance = void 0
            }
            ,
            blocked: ()=>{
                F.info("DatabaseManager database is blocked.")
            }
            ,
            terminated: ()=>{
                F.info("DatabaseManager database is terminated."),
                jn.databaseInstance = void 0
            }
        }))),
        jn.databaseInstance
    }
    static async databases() {
        return (await jn.database()).transaction("databases").store.getAll()
    }
    static async outdatedDatabases(e, n, r) {
        return (await jn.databases()).filter(i=>i.userId === e && (i.version !== n || (i.userVersion || 0) !== (r || 0))).orderBy(["createdAt"], ["desc"])
    }
    static async userVersion(e) {
        var r;
        return (r = await (await jn.database()).transaction("userVersion").store.get(e)) == null ? void 0 : r.version
    }
}
;
jn.constructorName = "DatabaseManager",
// #endregion
jn.deletingDatabase = !1;
let Xn = jn;
const t2 = ke.get("databaseVersionOverrides", {
    logError: !1
});
if (t2 && t2.models)
    for (const t in t2.models)
        Bc.models[t] = t2.models[t];

// #region Decorators

/**
 * Action decorator
 */
function rt(t, e) {
    Me.registerAction(t.constructor.name, e)
}
/**
 * Computed decorator
 */
function O(t, e) {
    Me.registerComputed(t.constructor.name, e)
}
function m_(t) {
    return (e,n)=>{
        M1(e, n, (t == null ? void 0 : t.shallowObservation) !== !0)
    }
}
/**
 * Property decorator
 */
function w(t={}) { // t for metadata options.
    return (e,n)=>{ // e for the model prototype, n for the properties name
        M1(e, n, t.serializer !== void 0 && t.shallowObservation !== !0); 
        const r = t.persistance !== void 0 ? t.persistance : ee.createAndUpdate
          , s = {
            type: vn.property,
            persistance: r
        };
        t.serializer && (s.serializer = t.serializer),
        t.optimizer && (s.optimizer = t.optimizer),
        t.enum && (s.enum = t.enum),
        t.indexed && (s.indexed = t.indexed),
        t.multiEntry && (s.multiEntry = t.multiEntry),
        t.shallowObservation && (s.shallowObservation = t.shallowObservation),
        Me.registerProperty(e.constructor.name, n, s) // Register the property's metadata. 
        // Note that the constructor's name is used here instead of model name.
    }
}
/**
 * EphemeralProperty decorator
 */
function g_(t={}) {
    return (e,n)=>{
        M1(e, n, t.serializer !== void 0 && t.shallowObservation !== !0);
        const r = {
            type: vn.ephemeralProperty,
            persistance: ee.none
        };
        t.serializer && (r.serializer = t.serializer),
        t.optimizer && (r.optimizer = t.optimizer),
        t.enum && (r.enum = t.enum),
        Me.registerProperty(e.constructor.name, n, r)
    }
}
/**
 * ReferenceCollection decorator
 */
function xe() {
    return (t,e)=>{
        Me.registerProperty(t.constructor.name, e, {
            type: vn.referenceCollection,
            persistance: ee.createAndUpdate
        })
    }
}
/**
 * LazyReferenceCollection decorator
 * \@OneToMany
 */
function Nt(t) {
    return (e,n)=>{
        Me.registerProperty(e.constructor.name, n, {
            type: vn.referenceCollection,
            persistance: ee.createAndUpdate,
            ...t != null && t.cascadeHydration ? {
                cascadeHydration: !0
            } : {},
            lazy: !0
        })
    }
}

/**
 * Reference decorator
 */
function pe(t, e, n) {
    return (r,s)=>{
        A4(r, s, n, e, t)
    }
}

/**
 * LazyReference decorator
 * \@ManyToOne
 */
function Hr(t, e, n) {
    return (r,s)=>{
        j4(r, s, n, e, t)
    }
}

/**
 * Reference with no back references decorator
 */
function Ue(t, e) {
    return (n,r)=>{
        A4(n, r, e, void 0, t)
    }
}

/**
 * LazyReference with no back references decorator
 */
function g5(t, e) {
    return (n,r)=>{
        j4(n, r, e, void 0, t)
    }
}

/**
 * Reference or BackReference decorator.
 * If the first prameter is a function, then it is used to declare a Reference. Otherwise,
 * it is used to declare a BackReference.
 */
function Dt(t, e, n) {
    return (r,s)=>{
        typeof t == "function" ? A4(r, s, n, e, t) : A4(r, s, {
            persistance: ee.none,
            nullable: !0,
            ...t
        })
    }
}

/**
 * LazyReferenceOrBack decorator
 */
function kl(t, e, n) {
    // t is config or the back reference target model
    // e is the back reference property name
    // n is the configuration if t is a back reference
    return (r,s)=>{
        // r is the model's prototype object
        // s is the property name
        typeof t == "function" ? j4(r, s, n, e, t) : j4(r, s, {
            persistance: ee.none,
            nullable: !0,
            ...t
        })
    }
}

/**
 * ReferenceArray decorator
 */
function ii(t, e, n) {
    return (r,s)=>{
        const i = {
            type: vn.referenceCollection,
            persistance: ee.none
        };
        n != null && n.lazy && (i.lazy = n.lazy),
        Me.registerProperty(r.constructor.name, s, i);
        const a = NA.singular(s) + "Ids"
          , o = "__" + s;
        Object.defineProperty(r, s, {
            get: function() {
                return this[o]
            },
            set: function(d) {
                n != null && n.updateOnSyncGroupChange && d.updateOnSyncGroupChanges(),
                this[o] = d,
                d.onChange.subscribe(u=>{
                    const h = u[0].slice(0);
                    this.markPropertyChanged(a, h),
                    e && this.referencedPropertyChanged(e, h, u[1].slice(0))
                }
                )
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, a, {
            get: function() {
                return this[s].getElementIds()
            },
            set: function(d) {
                this[s].setElementIds(d || [])
            },
            enumerable: !1
        });
        const l = {
            type: vn.referenceArray,
            persistance: (n == null ? void 0 : n.persistance) ?? ee.createAndUpdate,
            referencedClassResolver: t
        };
        e && (l.referencedProperty = e),
        n != null && n.indexed && (l.indexed = !0,
        l.multiEntry = !0),
        n != null && n.onDelete && (l.onDelete = n.onDelete === "REMOVE" ? "SET NULL" : n.onDelete === "REMOVE AND CASCADE WHEN EMPTY" ? "CASCADE" : n.onDelete === "NO ACTION" ? "NO ACTION" : Gc(n.onDelete)),
        Me.registerProperty(r.constructor.name, a, l)
    }
}

/**
 * Model decorator
 */
function We(t) { // t is the name of that model
    return e=>{ // e if the constructor of that model
        M1(e.prototype, "createdAt", !1), // All model would have these 3 default fields. There are made responsive.
        M1(e.prototype, "updatedAt", !1),
        M1(e.prototype, "archivedAt", !1),
        e.prototype.modelName = t; // Name is bound to the prototype.
        let n = `${t}_43_${Bc.models[t]}`; // Schema version is added to hash, e.g. "Issue_43_3".
        if (Me.getModelClass(t)) // If the model has been registered before.
            return;
        e.loadStrategy === dn.partial && (n += "_partial"); // "Issue_43_3_partial"
        const r = Me.propertiesOfModel(e.name); // Because of how tsc compiles, members of a class are registered before the the class.
        for (const s of Object.keys(r)) {
            const i = eY[`${t}_${Bc.models[t] || 0}_${s}`] ? "1" : "0"; // Seems some properties are special.
            n += "_" + s + "_" + i // Schema hash also include all its properties, "Issue_43_3_partial_propertyName_1_propertyName_0..." like this
        }
        n = $1(n), // The model's hash generated.
        Me.registerModel(t, e, n) // Register the model's name, constructor and its hash to ModelRegistry.
    }
}

/**
 * The helper function to register Reference or BackReference.
 */
function A4(t, e, n, r, s) {
    // `t` for the model. For example, Issue.
    // `e` for the name of the Reference to `s`. For example, assignee.
    // `n` for metadata options.
    // `r` for the name of the BackReference property. For example, assignedIssues.
    // `s` for a closure that returns the referenced model's constructor. For example, () => User.
    const i = e + "Id" // such as `assigneeId` of `Issue`
      , a = n.nullable
      , o = n.nullable ? !0 : n.optional;
    Object.defineProperty(t, e, {
        get: function() {
            const u = this[i];
            if (u)
                return this.store.findById(at, u) // Find the referenced model for the store with given id.
        },
        set: function(u) {
            // Set `assigneeId` instead, for example.
            this[i] = u ? typeof u == "string" ? u : u.id : void 0
        },
        enumerable: !0,
        configurable: !0
    });
    const l = {
        type: vn.referencedModel,
        persistance: ee.none,
        referenceOptional: o,
        referenceNullable: a
    };
    s && (l.referencedClassResolver = s),
    Me.registerProperty(t.constructor.name, e, l), // Register `assignee` metadata.
    M1(t, i, !1); // make the id property observable
    const d = {
        type: s ? vn.reference : vn.backReference, // If we pass `s` then its a Reference.
        referenceOptional: o,
        referenceNullable: a,
        // Only id will be persisted into the database.
        persistance: n !== void 0 && n.persistance !== void 0 ? n.persistance : ee.createAndUpdate // The default strategy.
    };
    s && (d.referencedClassResolver = s), // This metadata will be used to load and get the referenced model.
    r && (d.referencedProperty = r),
    n != null && n.indexed && (d.indexed = n.indexed),
    n != null && n.onDelete && (d.onDelete = n.onDelete),
    n != null && n.onArchive && (d.onArchive = n.onArchive),
    Me.registerProperty(t.constructor.name, i, d) // Register `assigneeId` metadata.
}
/**
 * The helper function to register lazy Reference and BackReference.
 */
function j4(t, e, n, r, s) { 
    // t the model's prototype
    // e the property's name
    // n configuration
    // r the back reference property name, undefined when it's reference
    // s a wrapper around the back reference model's constructor

    // if s is not defined, it's a reference property
    // if s is defined, it's a back reference property

    const i = e + "Id"
      , a = `${e}_l`
      , o = n.nullable
      , l = n.nullable ? !0 : n.optional;
    Object.defineProperty(t, e, {
        get: function() {
            if (s) {
                const h = this[i];
                if (!h)
                    return;
                // this['issue_l'] = new Qn(<issue_id>, Issue);
                this[a] || (this[a] = new Qn(h,s())) // BackReferenceValue
            } else
                t[r],
                this[a] || (this[a] = new Lu(this,e)); // LazyBackReference
            return this[a]
        },
        set: function(h) {
            var f;
            h instanceof Qn || h instanceof Lu ? h.isHydrated() ? (this[i] = (f = h.value) == null ? void 0 : f.id,
            this[e].value = h.value) : (h instanceof Lu || (this[i] = h.id),
            this[a] = h) : h ? this[e].value = h : (this[i] = void 0,
            this[a] = void 0)
        },
        enumerable: !0,
        configurable: !0
    });
    const d = {
        type: vn.referencedModel,
        persistance: ee.none,
        referenceOptional: l,
        referenceNullable: o,
        lazy: !0
    };
    s && (d.referencedClassResolver = s),
    n != null && n.cascadeHydration && (d.cascadeHydration = n.cascadeHydration),
    // register id property
    Me.registerProperty(t.constructor.name, e, d),
    M1(t, i, !1, a); // make id value observable
    const u = {
        type: s ? vn.reference : vn.backReference,
        referenceOptional: l,
        referenceNullable: o,
        persistance: s ? n !== void 0 && n.persistance !== void 0 ? n.persistance : ee.createAndUpdate : ee.none
    };
    s && (u.referencedClassResolver = s),
    r && (u.referencedProperty = r),
    n != null && n.indexed && (u.indexed = n.indexed),
    n != null && n.onDelete && (u.onDelete = n.onDelete),
    n != null && n.onArchive && (u.onArchive = n.onArchive),
    // register lazy reference property
    Me.registerProperty(t.constructor.name, i, u)
}
/**
 * The helper function to make a property observable. And it also plays
 * an important role when properties of a model get updated.
 */
function M1(t, e, n, r) {
    // `t` for the model's prorotype object.
    // `e` for the property's name. 
    // `n` for deep observation. 
    // `r` for deseralizer.
    const s = e + "_o" // key for observable value, 
      , i = e + "_v" // key for the plain value
      , a = e + "_d"; // key for the deserializer
    Object.defineProperty(t, e, {
        get: function() {
            return this.__mobx[a] && (this.__mobx[i] !== void 0 && (this.__mobx[i] = this.__mobx[a].deserialize(this.__mobx[i])),
            delete this[a]),
            // The minified code seems difficult to understand. But you only need to
            // pay attention to ut.box here. If the model is observable, M1 would create a MobX box on the property,
            // e.g. `assigneedId`, to make the property observable.
            this.madeObservable ? (this.__mobx[s] || (this.__mobx[s] = ut.box(this.__mobx[i], {
                deep: n
            }),
            delete this.__mobx[i]),
            this.__mobx[s].get()) : this.__mobx[i]
        },
        set: function(o) {
            // The similar logic applied to the setter.
            if (delete this.__mobx[a],
            !this.madeObservable)
                r && this.__mobx[i] !== o && delete this[r],
                this.__mobx[i] = o;
            else if (!this.__mobx[s]) 
                r && this.__mobx[i] !== o && delete this[r],
                this.__mobx[s] = ut.box(o, {
                    deep: n
                }), 
                // This method is called to bookeepping what property has been changed, what is the old value and what
                // is the new value. This is critical to construct an UpdateTransaction.
                this.propertyChanged(e, this.__mobx[i], o),
                delete this.__mobx[i];  // remain the plain value
            else {
                const l = this.__mobx[s].get();
                this.__mobx[s].set(o),
                l !== o && (this.propertyChanged(e, l, o),
                r && delete this[r])
            }
        },
        enumerable: !0,
        configurable: !0
    })
}

// #endregion

const eY = { // some special properties?
    Comment_1_issueId: !0,
    IssueHistory_1_issueId: !0,
    Issue_0_teamId: !0
};
class ur {
    static firstSortOrder(e, n) {
        return e.length === 0 ? Math.round((-100 + Math.random() * 200) * 100) / 100 : Math.round((e.reduce((r,s)=>Math.min(r, s[n] ?? 0), Number.MAX_VALUE) - 900 - Math.random() * 200) * 100) / 100
    }
    static lastSortOrder(e, n) {
        return e.length === 0 ? Math.round((-100 + Math.random() * 200) * 100) / 100 : Math.round((e.reduce((r,s)=>Math.max(r, s[n] ?? 0), Number.MIN_VALUE) + 900 + Math.random() * 200) * 100) / 100
    }
    static calculateSortOrder(e, n, r, s) {
        if (e.length === 0)
            return -100 + Math.random() * 200;
        const i = Array.isArray(e) ? e.map(l=>l[n]) : e.map(l=>l[n])
          , a = Math.min(Number.MAX_SAFE_INTEGER, ...i)
          , o = Math.max(Number.MIN_SAFE_INTEGER, ...i);
        if (r === s && i.length > r) {
            const l = i[r - 1] ?? Number.MIN_SAFE_INTEGER
              , d = i[r + 1] ?? Number.MAX_SAFE_INTEGER;
            return i[r] === l || i[r] === d ? Math.round((o + 900 + Math.random() * 200) * 100) / 100 : i[r]
        }
        if (r <= 0)
            return Math.round((a - 900 - Math.random() * 200) * 100) / 100;
        if (r >= i.length - (s !== void 0 ? 1 : 0))
            return Math.round((o + 900 + Math.random() * 200) * 100) / 100;
        {
            const l = r + (s !== void 0 && s < r ? 1 : 0)
              , d = i[l - 1]
              , u = i[l];
            return d === u ? Math.round((o + 900 + Math.random() * 200) * 100) / 100 : ur.calculateBetweenItems(d, u)
        }
    }
    static calculateMultipleSortOrders({collection: e, property: n, count: r, index: s, sourceIndex: i}) {
        var f;
        const a = e instanceof E1 ? e.elements : e
          , o = ur.calculateSortOrder(e, n, s, i)
          , d = i !== void 0 && s > i ? s + 1 : s
          , u = a.length > d ? (f = a[d]) == null ? void 0 : f[n] : 0
          , h = u === void 0 || e.length === 0 || s >= e.length ? 1e3 : u - o;
        return Array.from({
            length: r
        }, (p,m)=>o + h * (m / r))
    }
    static calculateBetweenItems(e, n) {
        const r = n - e
          , s = e + r / (1.9 + .2 * Math.random());
        return Math.abs(r) > 100 ? Math.round(s * 100) / 100 : Math.abs(r) > 10 ? Math.round(s * 1e3) / 1e3 : Math.abs(r) > 1 ? Math.round(s * 1e4) / 1e4 : s
    }
    static fixTooCloseProximity(e, n) {
        const s = [];
        let i = 0;
        const a = e instanceof E1 ? e.elements : e;
        for (let l = 0; l < a.length; l++) {
            const d = a[l]
              , u = a[l + 1];
            if ((d == null ? void 0 : d[n]) !== void 0 && (u == null ? void 0 : u[n]) !== void 0) {
                const h = d[n]
                  , f = u[n];
                Math.abs(f - h) < 1e-8 ? s.length === 0 || s[i] === void 0 ? s[i] = [{
                    item: d,
                    index: l
                }, {
                    item: u,
                    index: l + 1
                }] : s[i].push({
                    item: u,
                    index: l + 1
                }) : s[i] && (i += 1)
            }
        }
        const o = [];
        return s.forEach(l=>{
            const d = l[l.length - 1]
              , u = d.item[n]
              , h = a[d.index + 1]
              , m = (((h == null ? void 0 : h[n]) || u + Math.random()) - u) / (l.length + 1)
              , g = new Set(l.map(({item: C})=>C[n]));
            l.forEach(({item: C},b)=>{
                let S = C[n] + m * (b + 1);
                g.has(S) && (S -= m / 2 * (b + 1)),
                o.push({
                    item: C,
                    newPropertyValue: S
                })
            }
            )
        }
        ),
        o
    }
}
function ai(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const Nm = class Nm extends si {
    get isTriage() {
        return this.type === ye.triage
    }
    get isBacklog() {
        return this.type === ye.backlog
    }
    get isActive() {
        return this.type === ye.unstarted || this.type === ye.started
    }
    get isUnstarted() {
        return this.type === ye.unstarted
    }
    get isStarted() {
        return this.type === ye.started
    }
    get isCompleted() {
        return this.type === ye.completed
    }
    get isCanceled() {
        return this.type === ye.canceled
    }
    get isClosed() {
        return ko.closedStateTypes.includes(this.type)
    }
    get displayCompletionPercentage() {
        switch (this.type) {
        case ye.triage:
            return 1;
        case ye.backlog:
        case ye.unstarted:
            return 0;
        case ye.started:
            const e = this.team.states.filter(n=>n.type === ye.started).orderBy("position", "asc");
            return e.length === 1 ? .5 : e.length === 2 ? e.indexOf(this) === 0 ? .5 : .75 : 1 / (e.length + 1) * (e.indexOf(this) + 1);
        case ye.completed:
        case ye.canceled:
            return 1;
        default:
            throw this.type,
            void 0
        }
    }
    get nameForView() {
        switch (this.type) {
        case ye.triage:
            return "Triage";
        case ye.backlog:
            return "Backlog";
        case ye.unstarted:
            return "Active issues";
        case ye.started:
            return "Active issues";
        case ye.completed:
            return "All issues";
        case ye.canceled:
            return "All issues";
        default:
            throw this.type,
            void 0
        }
    }
    get filterMatchValue() {
        return this.name.toLowerCase() + this.type
    }
    sortOrderForIssueDropLocation(e, n) {
        const r = this.issues.indexOf(e)
          , s = n ? this.issues.indexOf(n) : void 0;
        return r === -1 || s === -1 ? this.firstSortOrder() : ur.calculateSortOrder(this.issues, "sortOrder", r, s)
    }
    firstSortOrder() {
        return ur.firstSortOrder(this.issues, "sortOrder")
    }
    lastSortOrder() {
        return ur.lastSortOrder(this.issues, "sortOrder")
    }
    get indexWithinStateType() {
        const e = this.type
          , n = this.position;
        return this.findIndexWithPredicate(r=>r.type === e && r.position < n)
    }
    get sortOrderWithinStateType() {
        const e = this.indexWithinStateType
          , n = this.team.states.filter(r=>r.type === this.type).length;
        return e / n
    }
    get indexInWorkflow() {
        return this.findIndexWithPredicate(e=>Jc.isStateBefore(e, this))
    }
    constructor(e=!0) {
        super(e),
        this.gitAutomationStates = new te,
        this.issues = new Et(re,this,"stateId",new de("sortOrder")),
        e && this.makeObservable()
    }
    findIndexWithPredicate(e) {
        let n = 0;
        const r = this.team.states.elements;
        for (let s = 0, i = r.length; s < i; ++s)
            e(r[s]) && ++n;
        return n
    }
}
;
Nm.usedForPartialIndexes = !0;
let on = Nm;
ai([w()], on.prototype, "name", void 0);
ai([w()], on.prototype, "description", void 0);
ai([w()], on.prototype, "color", void 0);
ai([w()], on.prototype, "position", void 0);
ai([w({
    persistance: ee.createOnly
})], on.prototype, "type", void 0);
ai([pe(()=>ne, "states", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], on.prototype, "team", void 0);
ai([xe()], on.prototype, "gitAutomationStates", void 0);
ai([Nt()], on.prototype, "issues", void 0);
ai([O], on.prototype, "displayCompletionPercentage", null);
ai([O], on.prototype, "indexWithinStateType", null);
ai([O], on.prototype, "sortOrderWithinStateType", null);
ai([O], on.prototype, "indexInWorkflow", null);
on = ai([We("WorkflowState")], on);
function Ei(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class On extends It {
    get isTeamTemplate() {
        var e;
        return !!((e = this.team) != null && e.id)
    }
    get state() {
        var n;
        const e = (n = this.templateData) == null ? void 0 : n.stateId;
        return e ? this.store.findById(on, e) : void 0
    }
    constructor(e=!0) {
        super(e),
        this.skipUpdatedAtKeys = new Set(["sortOrder"]),
        this.integrationTemplates = new te,
        this.emailIntakeAddresses = new te(new de("address")),
        e && this.makeObservable()
    }
}
Ei([w()], On.prototype, "name", void 0);
Ei([w()], On.prototype, "description", void 0);
Ei([w({
    serializer: hn,
    shallowObservation: !0
})], On.prototype, "templateData", void 0);
Ei([Ue(()=>K, {
    persistance: ee.none,
    optional: !0, // optional: true, a user may not have templates
    nullable: !1  // nullable: false, template must have a creator
})], On.prototype, "creator", void 0);
Ei([Ue(()=>K, {
    persistance: ee.none,
    nullable: !0
})], On.prototype, "lastUpdatedBy", void 0);
Ei([pe(()=>he, "allTemplates", {
    optional: !1,
    nullable: !1,
    persistance: ee.none
})], On.prototype, "organization", void 0);
Ei([pe(()=>ne, "templates", {
    nullable: !1, // nullable: false
    optional: !0, // optional: true
    indexed: !0
})], On.prototype, "team", void 0);
Ei([w()], On.prototype, "type", void 0);
Ei([w()], On.prototype, "sortOrder", void 0);
Ei([xe()], On.prototype, "integrationTemplates", void 0);
Ei([xe()], On.prototype, "emailIntakeAddresses", void 0);
On = Ei([We("Template")], On);
var $d;
(function(t) {
    t.documents = "documents",
    t.issues = "issues"
}
)($d || ($d = {}));
function tY(t) {
    if (t === "overview" || t === "documentation")
        return {
            tab: "documents"
        };
    if (t === "updates" || t === "activity")
        return {
            tab: "documents"
        };
    if (t === "docs")
        return {
            tab: "documents"
        };
    if (Object.values($d).includes(t))
        return {
            tab: t
        };
    if (K3(t))
        return {
            facetId: t
        }
}
function Eue(t="issues") {
    switch (t) {
    case "documents":
        return "Overview";
    case "issues":
        return "Issues";
    default:
        throw void 0
    }
}
var g9;
(function(t) {
    t.dependency = "dependency"
}
)(g9 || (g9 = {}));
var Mn;
(function(t) {
    t.start = "start",
    t.end = "end",
    t.milestone = "milestone"
}
)(Mn || (Mn = {}));
var cr;
(function(t) {
    t.blocking = "Dependency of",
    t.blockedBy = "Depends on",
    t.startsWith = "Starts with",
    t.endsWith = "Ends with"
}
)(cr || (cr = {}));
const Li = class Li {
}
;
Li.colors = {
    lightGrey: {
        label: "Grey",
        color: "#bec2c8"
    },
    darkGrey: {
        label: "Dark Grey",
        color: "#95a2b3"
    },
    controlPrimary: {
        label: "Purple",
        color: "#5e6ad2"
    },
    tealBase: {
        label: "Teal",
        color: "#26b5ce"
    },
    greenBase: {
        label: "Green",
        color: "#4cb782"
    },
    yellowBase: {
        label: "Yellow",
        color: "#f2c94c"
    },
    orangeBase: {
        label: "Orange",
        color: "#f2994a"
    },
    redBg: {
        label: "Pink",
        color: "#f7c8c1"
    },
    redBase: {
        label: "Red",
        color: "#eb5757"
    }
},
Li.colorValues = Object.values(Li.colors),
Li.colorsList = Li.colorValues.map(e=>e.color),
Li.defaultTeamIconColor = Li.colors.lightGrey.color,
Li.defaultTeamIconBackground = Li.colorsList[0];
let y9 = Li;
function jp(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const k3 = class k3 extends at {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
;
k3.loadStrategy = dn.partial,
k3.partialLoadMode = ki.lowPriority;
let H1 = k3;
jp([pe(()=>ie, "history", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], H1.prototype, "project", void 0);
jp([w()], H1.prototype, "entries", void 0);
H1 = jp([We("ProjectHistory")], H1);
var Ks;
(function(t) {
    t.organization = "organization",
    t.user = "user"
}
)(Ks || (Ks = {}));
var Ae;
(function(t) {
    t.inbox = "inbox",
    t.myIssues = "myIssues",
    t.myIssuesCreatedByMe = "myIssuesCreatedByMe",
    t.myIssuesSubscribedTo = "myIssuesSubscribedTo",
    t.myIssuesActivity = "myIssuesActivity",
    t.userProfile = "userProfile",
    t.userProfileCreatedByUser = "userProfileCreatedByUser",
    t.board = "board",
    t.completedCycle = "completedCycle",
    t.cycle = "cycle",
    t.project = "project",
    t.projectDocuments = "projectDocuments",
    t.label = "label",
    t.triage = "triage",
    t.activeIssues = "activeIssues",
    t.backlog = "backlog",
    t.allIssues = "allIssues",
    t.customView = "customView",
    t.customViews = "customViews",
    t.customRoadmap = "customRoadmap",
    t.roadmap = "roadmap",
    t.roadmaps = "roadmaps",
    t.roadmapAll = "roadmapAll",
    t.roadmapClosed = "roadmapClosed",
    t.roadmapBacklog = "roadmapBacklog",
    t.initiative = "initiative",
    t.initiativeOverview = "initiativeOverview",
    t.initiatives = "initiatives",
    t.initiativesPlanned = "initiativesPlanned",
    t.initiativesCompleted = "initiativesCompleted",
    t.projects = "projects",
    t.projectsAll = "projectsAll",
    t.projectsBacklog = "projectsBacklog",
    t.projectsClosed = "projectsClosed",
    t.search = "search",
    t.splitSearch = "splitSearch",
    t.teams = "teams",
    t.archive = "archive",
    t.quickView = "quickView",
    t.issueIdentifiers = "issueIdentifiers"
}
)(Ae || (Ae = {}));
const Aue = ["myIssues", "myIssuesCreatedByMe", "myIssuesSubscribedTo", "myIssuesActivity", "inbox", "splitSearch", "search", "quickView", "customViews"];
var nY = oA
  , rY = cA
  , sY = lA
  , iY = kf
  , aY = Sk
  , oY = dA
  , cY = _k
  , lY = uA
  , dY = "[object Map]"
  , uY = "[object Set]"
  , hY = Object.prototype
  , fY = hY.hasOwnProperty;
function pY(t) {
    if (t == null)
        return !0;
    if (aY(t) && (iY(t) || typeof t == "string" || typeof t.splice == "function" || oY(t) || lY(t) || sY(t)))
        return !t.length;
    var e = rY(t);
    if (e == dY || e == uY)
        return !t.size;
    if (cY(t))
        return !nY(t).length;
    for (var n in t)
        if (fY.call(t, n))
            return !1;
    return !0
}
var mY = pY;
const M4 = Cn(mY);
var xb;
(function(t) {
    t.issueSnapshot = "issueSnapshot",
    t.issue = "issue"
}
)(xb || (xb = {}));
var C9;
(function(t) {
    t.day = "day",
    t.week = "week",
    t.quarter = "quarter",
    t.month = "month",
    t.year = "year",
    t.thirtyMinutes = "thirtyMinutes"
}
)(C9 || (C9 = {}));
var Db;
(function(t) {
    t.count = "count",
    t.avg = "avg",
    t.max = "max",
    t.min = "min",
    t.sum = "sum",
    t.median = "median",
    t.p25 = "p25",
    t.p75 = "p75",
    t.p90 = "p90",
    t.p95 = "p95",
    t.p99 = "p99"
}
)(Db || (Db = {}));
var b9;
(function(t) {
    t.stateName = "stateName",
    t.priority = "priority",
    t.estimate = "estimate",
    t.cycle = "cycle",
    t.label = "label",
    t.labelGroup = "labelGroup",
    t.stateType = "stateType",
    t.creator = "creator",
    t.assignee = "assignee",
    t.snapshotAt = "snapshotAt",
    t.completedAt = "completedAt",
    t.dueDate = "dueDate",
    t.createdAt = "createdAt",
    t.startedAt = "startedAt",
    t.project = "project",
    t.projectMilestone = "projectMilestone",
    t.team = "team",
    t.roadmap = "roadmap",
    t.initiative = "initiative",
    t.sla = "sla",
    t.lastAppliedTemplateId = "lastAppliedTemplateId",
    t.externalSource = "externalSource"
}
)(b9 || (b9 = {}));
var v9;
(function(t) {
    t.id = "id",
    t.effort = "effort"
}
)(v9 || (v9 = {}));
var w9;
(function(t) {
    t.cycleTime = "cycleTime",
    t.timeToTriage = "timeToTriage",
    t.timeToStart = "timeToStart",
    t.leadTime = "leadTime",
    t.age = "age"
}
)(w9 || (w9 = {}));
const gY = {
    ...v9,
    ...w9
};
var Sb;
(function(t) {
    t.nivoBar = "nivoBar",
    t.nivoScatterPlot = "nivoScatterPlot"
}
)(Sb || (Sb = {}));
const jue = ["label", "labelGroup", "project", "roadmap", "initiative", "stateName", "team"]
  , Mue = ["dueDate", "createdAt", "startedAt", "completedAt", "snapshotAt"];
var k9;
(function(t) {
    t.default = "default",
    t.categorical = "categorical",
    t.turboRed = "turboRed",
    t.turboBlue = "turboBlue",
    t.magmaLight = "magmaLight",
    t.magmaDark = "magmaDark"
}
)(k9 || (k9 = {}));
var mt;
(function(t) {
    t.month = "month",
    t.quarter = "quarter",
    t.halfYear = "halfYear",
    t.year = "year"
}
)(mt || (mt = {}));
let yY = class {
    constructor(e, n, r, s, i=!1, a=!1, o=!1) {
        return this.type = e,
        this.viewType = n,
        this.preferences = r,
        this.organizationPreferences = s,
        this.isProjectArchived = i,
        this.slasEnabled = a,
        this.roadmapsEnabled = o,
        new Proxy(this,{
            get(l, d) {
                return d in l ? l[d] : l.getPreference(d)
            }
        })
    }
    get layout() {
        return this.viewType === Ae.completedCycle || this.viewType === Ae.myIssues && this.preferences.issueGrouping === "focus" ? "list" : this.getPreference("layout") ?? "list"
    }
    get issueGrouping() {
        const e = this.getPreference("issueGrouping");
        if (this.isIssuesBoard) {
            if (e === void 0 && this.viewType === Ae.backlog)
                return "priority";
            if (e === "none" || e === void 0)
                return "workflowState"
        }
        return e ?? (this.viewType === Ae.myIssues ? "focus" : this.viewType === Ae.myIssuesActivity ? "activityDate" : this.isIssuesBoard ? "workflowState" : this.isUserIssuesView ? "none" : "workflowState")
    }
    get showParents() {
        return this.getPreference("showParents") ?? !0
    }
    get showArchivedItems() {
        return this.getPreference("showArchivedItems") ?? !0
    }
    get showTriageIssues() {
        return this.viewType === Ae.archive ? !0 : this.getPreference("showTriageIssues") ?? [Ae.userProfileCreatedByUser, Ae.myIssues, Ae.myIssuesCreatedByMe, Ae.myIssuesSubscribedTo, Ae.myIssuesActivity, Ae.userProfile, Ae.quickView, Ae.issueIdentifiers].includes(this.viewType)
    }
    get showCompletedIssues() {
        return this.viewType === Ae.completedCycle || this.isProjectArchived ? "all" : this.getPreference("showCompletedIssues") ?? (this.viewType === Ae.userProfile ? "all" : this.viewType === Ae.myIssues ? "day" : "all")
    }
    get showReadItems() {
        return this.getPreference("showReadItems") ?? !0
    }
    get showSubIssues() {
        return this.getPreference("showSubIssues") ?? !0
    }
    get showEmptyGroups() {
        return this.getPreference("showEmptyGroups") ?? !1
    }
    get showEmptyGroupsBoard() {
        return this.getPreference("showEmptyGroupsBoard")
    }
    get showEmptyGroupsList() {
        return this.getPreference("showEmptyGroupsList")
    }
    get issueSubGrouping() {
        return this.getPreference("issueSubGrouping") ?? "none"
    }
    get fieldId() {
        return this.getPreference("fieldId") ?? !0
    }
    get fieldStatus() {
        return this.getPreference("fieldStatus") ?? !0
    }
    get fieldPriority() {
        return this.getPreference("fieldPriority") ?? !0
    }
    get fieldDateCreated() {
        return this.viewType === Ae.archive ? !1 : this.getPreference("fieldDateCreated") ?? (this.isUserIssuesView ? this.viewType !== Ae.myIssuesActivity : !0)
    }
    get fieldDateUpdated() {
        return this.getPreference("fieldDateUpdated") ?? this.viewType !== Ae.myIssuesActivity
    }
    get fieldDateArchived() {
        return this.viewType === Ae.archive ? !0 : this.getPreference("fieldDateArchived") ?? !1
    }
    get fieldDateMyActivity() {
        return this.getPreference("fieldDateMyActivity") ?? this.viewType === Ae.myIssuesActivity
    }
    get fieldAssignee() {
        return this.getPreference("fieldAssignee") ?? !0
    }
    get fieldEstimate() {
        return this.getPreference("fieldEstimate") ?? !0
    }
    get fieldPullRequests() {
        return this.getPreference("fieldPullRequests") ?? !0
    }
    get fieldPreviewLinks() {
        return this.getPreference("fieldPreviewLinks") ?? !0
    }
    get fieldSentryIssues() {
        return this.getPreference("fieldSentryIssues") ?? !0
    }
    get fieldDueDate() {
        return this.getPreference("fieldDueDate") ?? !0
    }
    get fieldLinkCount() {
        return this.getPreference("fieldLinkCount") ?? !1
    }
    get fieldSla() {
        return this.getPreference("fieldSla") ?? (this.viewType === Ae.inbox ? !1 : this.slasEnabled)
    }
    get fieldLabels() {
        return !(this.getPreference("fieldLabels") ?? this.viewType === Ae.inbox)
    }
    get fieldProject() {
        return !(this.getPreference("fieldProject") ?? this.viewType === Ae.inbox)
    }
    get fieldCycle() {
        return this.getPreference("fieldCycle") ?? this.viewType !== Ae.inbox
    }
    get viewOrdering() {
        return this.getPreference("viewOrdering") ?? (this.viewType === Ae.userProfile ? "dateUpdated" : this.viewType === Ae.myIssuesActivity ? "dateMyActivity" : this.isUserIssuesView ? "dateCreated" : "priority")
    }
    get closedIssuesOrderedByRecency() {
        return this.getPreference("closedIssuesOrderedByRecency") ?? !1
    }
    get searchViewOrdering() {
        return this.getPreference("searchViewOrdering") ?? "relevance"
    }
    get projectFieldStatus() {
        return this.getPreference("projectFieldStatus") ?? !0
    }
    get projectFieldStatusTimeline() {
        return this.getPreference("projectFieldStatusTimeline") ?? !0
    }
    get projectFieldLead() {
        return this.getPreference("projectFieldLead") ?? !0
    }
    get projectFieldLeadTimeline() {
        return this.getPreference("projectFieldLeadTimeline") ?? !0
    }
    get projectFieldHealth() {
        return this.getPreference("projectFieldHealth") ?? !0
    }
    get projectFieldHealthTimeline() {
        return this.getPreference("projectFieldHealthTimeline") ?? !0
    }
    get projectFieldDescription() {
        return this.getPreference("projectFieldDescription") ?? !0
    }
    get projectFieldDescriptionBoard() {
        return this.getPreference("projectFieldDescriptionBoard") ?? !0
    }
    get projectFieldMilestone() {
        return this.getPreference("projectFieldMilestone") ?? !0
    }
    get projectFieldMilestoneTimeline() {
        return this.getPreference("projectFieldMilestoneTimeline") ?? !0
    }
    get projectFieldPredictionsTimeline() {
        return this.getPreference("projectFieldPredictionsTimeline") ?? !0
    }
    get projectFieldRelationsTimeline() {
        return this.getPreference("projectFieldRelationsTimeline") ?? !0
    }
    get projectFieldStartDate() {
        return this.getPreference("projectFieldStartDate") ?? !1
    }
    get projectFieldTargetDate() {
        return this.getPreference("projectFieldTargetDate") ?? !0
    }
    get projectFieldMembers() {
        return this.getPreference("projectFieldMembers") ?? !1
    }
    get projectFieldMembersBoard() {
        return this.getPreference("projectFieldMembersBoard") ?? !1
    }
    get projectFieldMembersList() {
        return this.getPreference("projectFieldMembersList") ?? !1
    }
    get projectFieldMembersTimeline() {
        return this.getPreference("projectFieldMembersTimeline") ?? !1
    }
    get projectFieldRoadmaps() {
        return this.getPreference("projectFieldRoadmaps") ?? this.roadmapsEnabled
    }
    get projectFieldRoadmapsBoard() {
        return this.getPreference("projectFieldRoadmapsBoard") ?? this.roadmapsEnabled
    }
    get projectFieldRoadmapsList() {
        return this.getPreference("projectFieldRoadmapsList") ?? this.roadmapsEnabled
    }
    get projectFieldRoadmapsTimeline() {
        return this.getPreference("projectFieldRoadmapsTimeline") ?? this.roadmapsEnabled
    }
    get projectFieldTeams() {
        return this.getPreference("projectFieldTeams") ?? !1
    }
    get projectFieldTeamsBoard() {
        return this.getPreference("projectFieldTeamsBoard") ?? !1
    }
    get projectFieldTeamsList() {
        return this.getPreference("projectFieldTeamsList") ?? !1
    }
    get projectFieldTeamsTimeline() {
        return this.getPreference("projectFieldTeamsTimeline") ?? !1
    }
    get projectLayout() {
        return this.getPreference("projectLayout") ?? ([Ae.projects, Ae.roadmap, Ae.initiative].includes(this.viewType) ? "timeline" : "list")
    }
    get projectViewOrdering() {
        return this.getPreference("projectViewOrdering") ?? "sortOrder"
    }
    get projectGrouping() {
        const e = this.getPreference("projectGrouping");
        return e === "milestone" ? this.isProjectsBoard ? "status" : "none" : this.isProjectsBoard && (e === "none" || e === void 0) ? "status" : e ?? "none"
    }
    get projectSubGrouping() {
        return this.getPreference("projectSubGrouping") ?? "none"
    }
    get projectGroupingDateResolution() {
        return this.getPreference("projectGroupingDateResolution") ?? mt.quarter
    }
    get projectShowEmptyGroups() {
        return this.getPreference("projectShowEmptyGroups") ?? "all"
    }
    get projectShowEmptyGroupsList() {
        return this.getPreference("projectShowEmptyGroupsList") ?? "none"
    }
    get projectShowEmptyGroupsTimeline() {
        return this.getPreference("projectShowEmptyGroupsTimeline") ?? "none"
    }
    get projectShowEmptyGroupsBoard() {
        return this.getPreference("projectShowEmptyGroupsBoard") ?? "all"
    }
    get projectShowEmptySubGroups() {
        return this.getPreference("projectShowEmptySubGroups") ?? "all"
    }
    get projectShowEmptySubGroupsList() {
        return this.getPreference("projectShowEmptySubGroupsList") ?? "none"
    }
    get projectShowEmptySubGroupsTimeline() {
        return this.getPreference("projectShowEmptySubGroupsTimeline") ?? "none"
    }
    get projectShowEmptySubGroupsBoard() {
        return this.getPreference("projectShowEmptySubGroupsBoard") ?? "all"
    }
    get showCompletedProjects() {
        return this.getPreference("showCompletedProjects") ?? "all"
    }
    get timelineChronologyShowCycleTeamIds() {
        return this.getPreference("timelineChronologyShowCycleTeamIds") ?? []
    }
    get timelineChronologyShowWeekNumbers() {
        return this.getPreference("timelineChronologyShowWeekNumbers") ?? !1
    }
    get initiativesViewOrdering() {
        return this.getPreference("initiativesViewOrdering") ?? "sortOrder"
    }
    get initiativeFieldProjects() {
        return this.getPreference("initiativeFieldProjects") ?? !0
    }
    get initiativeFieldTeams() {
        return this.getPreference("initiativeFieldTeams") ?? !1
    }
    get initiativeFieldDescription() {
        return this.getPreference("initiativeFieldDescription") ?? !0
    }
    get initiativeFieldOwner() {
        return this.getPreference("initiativeFieldOwner") ?? !0
    }
    get initiativeFieldTargetDate() {
        return this.getPreference("initiativeFieldTargetDate") ?? !0
    }
    get initiativeFieldHealth() {
        return this.getPreference("initiativeFieldHealth") ?? !0
    }
    get teamFieldIdentifier() {
        return this.getPreference("teamFieldIdentifier") ?? !0
    }
    get teamFieldOwner() {
        return this.getPreference("teamFieldOwner") ?? !1
    }
    get teamFieldMembers() {
        return this.getPreference("teamFieldMembers") ?? !0
    }
    get teamFieldProjects() {
        return this.getPreference("teamFieldProjects") ?? !0
    }
    get teamFieldCycle() {
        return this.getPreference("teamFieldCycle") ?? !0
    }
    get teamFieldDateCreated() {
        return this.getPreference("teamFieldDateCreated") ?? !1
    }
    get teamFieldDateUpdated() {
        return this.getPreference("teamFieldDateUpdated") ?? !1
    }
    get customViewsOrdering() {
        return this.getPreference("customViewsOrdering") ?? "name"
    }
    get customViewFieldOwner() {
        return this.getPreference("customViewFieldOwner") ?? !0
    }
    get customViewFieldVisibility() {
        return this.getPreference("customViewFieldVisibility") ?? !1
    }
    get customViewFieldDateCreated() {
        return this.getPreference("customViewFieldDateCreated") ?? !1
    }
    get customViewFieldDateUpdated() {
        return this.getPreference("customViewFieldDateUpdated") ?? !1
    }
    getPreference(e, n) {
        var r, s;
        return this.preferences[e] !== void 0 ? this.preferences[e] : this.isUserType && ((r = this.organizationPreferences) == null ? void 0 : r[e]) !== void 0 ? (s = this.organizationPreferences) == null ? void 0 : s[e] : n
    }
    get isUserType() {
        return this.type === Ks.user
    }
    get isUserIssuesView() {
        return [Ae.userProfileCreatedByUser, Ae.myIssues, Ae.myIssuesCreatedByMe, Ae.myIssuesSubscribedTo, Ae.myIssuesActivity].includes(this.viewType)
    }
    get isIssuesBoard() {
        return this.layout === "board"
    }
    get isProjectsBoard() {
        return this.projectLayout === "board"
    }
}
;
const Lue = ["list", "board"]
  , Oue = ["manual", "title", "priority", "dateCreated", "dateUpdated", "dateMyActivity", "dueDate", "linkCount", "estimate", "workflowState", "assignee"]
  , Rue = ["priority", "dateCreated", "reverseDateCreated", "dueDate"]
  , Pue = ["sortOrder", "name", "createdAt", "updatedAt", "startDate", "targetDate", "status"]
  , $ue = ["list", "timeline", "board"]
  , Fue = ["year", "quarter", "month"]
  , Nue = ["currentCycle", "day", "week", "month", "all", "none"]
  , Vue = ["week", "month", "all", "none", "3months", "6months"]
  , Bue = ["sla", "focus", "assignee", "workflowState", "priority", "project", "projectMilestone", "cycle", "team", "rootIssue", "label", "labelGroup", "activityDate", "none"]
  , Uue = ["lead", "member", "health", "none", "status", "roadmap", "initiative", "team", "startDate", "targetDate"]
  , CY = ["issueGrouping", "issueSubGrouping", "showSubIssues", "showCompletedIssues", "showTriageIssues", "projectGrouping", "projectSubGrouping", "projectLayout", "projectZoomLevel", "layout", "viewOrdering", "projectViewOrdering", "showEmptyGroupsBoard", "showEmptySubGroupsBoard", "showEmptyGroupsList", "showEmptySubGroupsList", "issueGroupingLabelGroupId", "issueSubGroupingLabelGroupId", "projectShowEmptyGroups", "projectShowEmptyGroupsList", "projectShowEmptyGroupsBoard", "projectShowEmptySubGroups", "projectShowEmptySubGroupsList", "projectShowEmptySubGroupsBoard"]
  , bY = new bo(t=>!(t.snoozedBy !== void 0 || t.snoozedUntilAt))
  , vY = new bo(t=>!t.parent)
  , Hue = new bo(t=>!t.state.isTriage)
  , wY = t=>new bo(kY(t))
  , kY = t=>e=>{
    const n = e.doneAt
      , r = Date.now();
    return !(n && (t === "none" || t === "week" && r - n.valueOf() > be.WEEK || t === "month" && r - n.valueOf() > be.MONTH || t === "3months" && r - n.valueOf() > 3 * be.MONTH || t === "6months" && r - n.valueOf() > 6 * be.MONTH))
}
  , xY = t=>new bo(DY(t))
  , DY = t=>e=>{
    var s, i, a;
    const n = e.doneAt
      , r = Date.now();
    if (n) {
        if (t === "none" || t === "week" && r - n.valueOf() > be.WEEK || t === "month" && r - n.valueOf() > be.MONTH || t === "day" && r - n.valueOf() > be.DAY)
            return !1;
        if (t === "currentCycle") {
            const o = ((i = (s = e.team.previousCycle) == null ? void 0 : s.completedAt) == null ? void 0 : i.valueOf()) || ((a = e.team.activeCycle) == null ? void 0 : a.startsAt.valueOf());
            if (o && n.valueOf() < o)
                return !1
        }
    }
    return !0
}
  , Ve = "____null____"
  , it = "__isMe__"
  , qr = "__isSuspended__"
  , T4 = "__activeCycle__"
  , L4 = "__inCooldown__"
  , O4 = "__nextCycle__"
  , R4 = "__previousCycle__"
  , P4 = "__pastCycles__"
  , $4 = "__futureCycles__";
var Wt;
(function(t) {
    t.assertEqual = s=>s;
    function e(s) {}
    t.assertIs = e;
    function n(s) {
        throw new Error
    }
    t.assertNever = n,
    t.arrayToEnum = s=>{
        const i = {};
        for (const a of s)
            i[a] = a;
        return i
    }
    ,
    t.getValidEnumValues = s=>{
        const i = t.objectKeys(s).filter(o=>typeof s[s[o]] != "number")
          , a = {};
        for (const o of i)
            a[o] = s[o];
        return t.objectValues(a)
    }
    ,
    t.objectValues = s=>t.objectKeys(s).map(function(i) {
        return s[i]
    }),
    t.objectKeys = typeof Object.keys == "function" ? s=>Object.keys(s) : s=>{
        const i = [];
        for (const a in s)
            Object.prototype.hasOwnProperty.call(s, a) && i.push(a);
        return i
    }
    ,
    t.find = (s,i)=>{
        for (const a of s)
            if (i(a))
                return a
    }
    ,
    t.isInteger = typeof Number.isInteger == "function" ? s=>Number.isInteger(s) : s=>typeof s == "number" && isFinite(s) && Math.floor(s) === s;
    function r(s, i=" | ") {
        return s.map(a=>typeof a == "string" ? `'${a}'` : a).join(i)
    }
    t.joinValues = r,
    t.jsonStringifyReplacer = (s,i)=>typeof i == "bigint" ? i.toString() : i
}
)(Wt || (Wt = {}));
var x9;
(function(t) {
    t.mergeShapes = (e,n)=>({
        ...e,
        ...n
    })
}
)(x9 || (x9 = {}));
const He = Wt.arrayToEnum(["string", "nan", "number", "integer", "float", "boolean", "date", "bigint", "symbol", "function", "undefined", "null", "array", "object", "unknown", "promise", "void", "never", "map", "set"])
  , b1 = t=>{
    switch (typeof t) {
    case "undefined":
        return He.undefined;
    case "string":
        return He.string;
    case "number":
        return isNaN(t) ? He.nan : He.number;
    case "boolean":
        return He.boolean;
    case "function":
        return He.function;
    case "bigint":
        return He.bigint;
    case "symbol":
        return He.symbol;
    case "object":
        return Array.isArray(t) ? He.array : t === null ? He.null : t.then && typeof t.then == "function" && t.catch && typeof t.catch == "function" ? He.promise : typeof Map < "u" && t instanceof Map ? He.map : typeof Set < "u" && t instanceof Set ? He.set : typeof Date < "u" && t instanceof Date ? He.date : He.object;
    default:
        return He.unknown
    }
}
  , Ee = Wt.arrayToEnum(["invalid_type", "invalid_literal", "custom", "invalid_union", "invalid_union_discriminator", "invalid_enum_value", "unrecognized_keys", "invalid_arguments", "invalid_return_type", "invalid_date", "invalid_string", "too_small", "too_big", "invalid_intersection_types", "not_multiple_of", "not_finite"])
  , SY = t=>JSON.stringify(t, null, 2).replace(/"([^"]+)":/g, "$1:");
class ei extends Error {
    constructor(e) {
        super(),
        this.issues = [],
        this.addIssue = r=>{
            this.issues = [...this.issues, r]
        }
        ,
        this.addIssues = (r=[])=>{
            this.issues = [...this.issues, ...r]
        }
        ;
        const n = new.target.prototype;
        Object.setPrototypeOf ? Object.setPrototypeOf(this, n) : this.__proto__ = n,
        this.name = "ZodError",
        this.issues = e
    }
    get errors() {
        return this.issues
    }
    format(e) {
        const n = e || function(i) {
            return i.message
        }
          , r = {
            _errors: []
        }
          , s = i=>{
            for (const a of i.issues)
                if (a.code === "invalid_union")
                    a.unionErrors.map(s);
                else if (a.code === "invalid_return_type")
                    s(a.returnTypeError);
                else if (a.code === "invalid_arguments")
                    s(a.argumentsError);
                else if (a.path.length === 0)
                    r._errors.push(n(a));
                else {
                    let o = r
                      , l = 0;
                    for (; l < a.path.length; ) {
                        const d = a.path[l];
                        l === a.path.length - 1 ? (o[d] = o[d] || {
                            _errors: []
                        },
                        o[d]._errors.push(n(a))) : o[d] = o[d] || {
                            _errors: []
                        },
                        o = o[d],
                        l++
                    }
                }
        }
        ;
        return s(this),
        r
    }
    static assert(e) {
        if (!(e instanceof ei))
            throw new Error(`Not a ZodError: ${e}`)
    }
    toString() {
        return this.message
    }
    get message() {
        return JSON.stringify(this.issues, Wt.jsonStringifyReplacer, 2)
    }
    get isEmpty() {
        return this.issues.length === 0
    }
    flatten(e=n=>n.message) {
        const n = {}
          , r = [];
        for (const s of this.issues)
            s.path.length > 0 ? (n[s.path[0]] = n[s.path[0]] || [],
            n[s.path[0]].push(e(s))) : r.push(e(s));
        return {
            formErrors: r,
            fieldErrors: n
        }
    }
    get formErrors() {
        return this.flatten()
    }
}
ei.create = t=>new ei(t);
const Fd = (t,e)=>{
    let n;
    switch (t.code) {
    case Ee.invalid_type:
        t.received === He.undefined ? n = "Required" : n = `Expected ${t.expected}, received ${t.received}`;
        break;
    case Ee.invalid_literal:
        n = `Invalid literal value, expected ${JSON.stringify(t.expected, Wt.jsonStringifyReplacer)}`;
        break;
    case Ee.unrecognized_keys:
        n = `Unrecognized key(s) in object: ${Wt.joinValues(t.keys, ", ")}`;
        break;
    case Ee.invalid_union:
        n = "Invalid input";
        break;
    case Ee.invalid_union_discriminator:
        n = `Invalid discriminator value. Expected ${Wt.joinValues(t.options)}`;
        break;
    case Ee.invalid_enum_value:
        n = `Invalid enum value. Expected ${Wt.joinValues(t.options)}, received '${t.received}'`;
        break;
    case Ee.invalid_arguments:
        n = "Invalid function arguments";
        break;
    case Ee.invalid_return_type:
        n = "Invalid function return type";
        break;
    case Ee.invalid_date:
        n = "Invalid date";
        break;
    case Ee.invalid_string:
        typeof t.validation == "object" ? "includes"in t.validation ? (n = `Invalid input: must include "${t.validation.includes}"`,
        typeof t.validation.position == "number" && (n = `${n} at one or more positions greater than or equal to ${t.validation.position}`)) : "startsWith"in t.validation ? n = `Invalid input: must start with "${t.validation.startsWith}"` : "endsWith"in t.validation ? n = `Invalid input: must end with "${t.validation.endsWith}"` : Wt.assertNever(t.validation) : t.validation !== "regex" ? n = `Invalid ${t.validation}` : n = "Invalid";
        break;
    case Ee.too_small:
        t.type === "array" ? n = `Array must contain ${t.exact ? "exactly" : t.inclusive ? "at least" : "more than"} ${t.minimum} element(s)` : t.type === "string" ? n = `String must contain ${t.exact ? "exactly" : t.inclusive ? "at least" : "over"} ${t.minimum} character(s)` : t.type === "number" ? n = `Number must be ${t.exact ? "exactly equal to " : t.inclusive ? "greater than or equal to " : "greater than "}${t.minimum}` : t.type === "date" ? n = `Date must be ${t.exact ? "exactly equal to " : t.inclusive ? "greater than or equal to " : "greater than "}${new Date(Number(t.minimum))}` : n = "Invalid input";
        break;
    case Ee.too_big:
        t.type === "array" ? n = `Array must contain ${t.exact ? "exactly" : t.inclusive ? "at most" : "less than"} ${t.maximum} element(s)` : t.type === "string" ? n = `String must contain ${t.exact ? "exactly" : t.inclusive ? "at most" : "under"} ${t.maximum} character(s)` : t.type === "number" ? n = `Number must be ${t.exact ? "exactly" : t.inclusive ? "less than or equal to" : "less than"} ${t.maximum}` : t.type === "bigint" ? n = `BigInt must be ${t.exact ? "exactly" : t.inclusive ? "less than or equal to" : "less than"} ${t.maximum}` : t.type === "date" ? n = `Date must be ${t.exact ? "exactly" : t.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(Number(t.maximum))}` : n = "Invalid input";
        break;
    case Ee.custom:
        n = "Invalid input";
        break;
    case Ee.invalid_intersection_types:
        n = "Intersection results could not be merged";
        break;
    case Ee.not_multiple_of:
        n = `Number must be a multiple of ${t.multipleOf}`;
        break;
    case Ee.not_finite:
        n = "Number must be finite";
        break;
    default:
        n = e.defaultError,
        Wt.assertNever(t)
    }
    return {
        message: n
    }
}
;
let y_ = Fd;
function _Y(t) {
    y_ = t
}
function F4() {
    return y_
}
const N4 = t=>{
    const {data: e, path: n, errorMaps: r, issueData: s} = t
      , i = [...n, ...s.path || []]
      , a = {
        ...s,
        path: i
    };
    if (s.message !== void 0)
        return {
            ...s,
            path: i,
            message: s.message
        };
    let o = "";
    const l = r.filter(d=>!!d).slice().reverse();
    for (const d of l)
        o = d(a, {
            data: e,
            defaultError: o
        }).message;
    return {
        ...s,
        path: i,
        message: o
    }
}
  , IY = [];
function Be(t, e) {
    const n = F4()
      , r = N4({
        issueData: e,
        data: t.data,
        path: t.path,
        errorMaps: [t.common.contextualErrorMap, t.schemaErrorMap, n, n === Fd ? void 0 : Fd].filter(s=>!!s)
    });
    t.common.issues.push(r)
}
class Kr {
    constructor() {
        this.value = "valid"
    }
    dirty() {
        this.value === "valid" && (this.value = "dirty")
    }
    abort() {
        this.value !== "aborted" && (this.value = "aborted")
    }
    static mergeArray(e, n) {
        const r = [];
        for (const s of n) {
            if (s.status === "aborted")
                return yt;
            s.status === "dirty" && e.dirty(),
            r.push(s.value)
        }
        return {
            status: e.value,
            value: r
        }
    }
    static async mergeObjectAsync(e, n) {
        const r = [];
        for (const s of n) {
            const i = await s.key
              , a = await s.value;
            r.push({
                key: i,
                value: a
            })
        }
        return Kr.mergeObjectSync(e, r)
    }
    static mergeObjectSync(e, n) {
        const r = {};
        for (const s of n) {
            const {key: i, value: a} = s;
            if (i.status === "aborted" || a.status === "aborted")
                return yt;
            i.status === "dirty" && e.dirty(),
            a.status === "dirty" && e.dirty(),
            i.value !== "__proto__" && (typeof a.value < "u" || s.alwaysSet) && (r[i.value] = a.value)
        }
        return {
            status: e.value,
            value: r
        }
    }
}
const yt = Object.freeze({
    status: "aborted"
})
  , ed = t=>({
    status: "dirty",
    value: t
})
  , ys = t=>({
    status: "valid",
    value: t
})
  , D9 = t=>t.status === "aborted"
  , S9 = t=>t.status === "dirty"
  , M0 = t=>t.status === "valid"
  , T0 = t=>typeof Promise < "u" && t instanceof Promise;
function V4(t, e, n, r) {
    if (n === "a" && !r)
        throw new TypeError("Private accessor was defined without a getter");
    if (typeof e == "function" ? t !== e || !r : !e.has(t))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return n === "m" ? r : n === "a" ? r.call(t) : r ? r.value : e.get(t)
}
function C_(t, e, n, r, s) {
    if (r === "m")
        throw new TypeError("Private method is not writable");
    if (r === "a" && !s)
        throw new TypeError("Private accessor was defined without a setter");
    if (typeof e == "function" ? t !== e || !s : !e.has(t))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return r === "a" ? s.call(t, n) : s ? s.value = n : e.set(t, n),
    n
}
var Je;
(function(t) {
    t.errToObj = e=>typeof e == "string" ? {
        message: e
    } : e || {},
    t.toString = e=>typeof e == "string" ? e : e == null ? void 0 : e.message
}
)(Je || (Je = {}));
var Eu, Au;
class Ba {
    constructor(e, n, r, s) {
        this._cachedPath = [],
        this.parent = e,
        this.data = n,
        this._path = r,
        this._key = s
    }
    get path() {
        return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)),
        this._cachedPath
    }
}
const _b = (t,e)=>{
    if (M0(e))
        return {
            success: !0,
            data: e.value
        };
    if (!t.common.issues.length)
        throw new Error("Validation failed but no issues detected.");
    return {
        success: !1,
        get error() {
            if (this._error)
                return this._error;
            const n = new ei(t.common.issues);
            return this._error = n,
            this._error
        }
    }
}
;
function _t(t) {
    if (!t)
        return {};
    const {errorMap: e, invalid_type_error: n, required_error: r, description: s} = t;
    if (e && (n || r))
        throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
    return e ? {
        errorMap: e,
        description: s
    } : {
        errorMap: (a,o)=>{
            var l, d;
            const {message: u} = t;
            return a.code === "invalid_enum_value" ? {
                message: u ?? o.defaultError
            } : typeof o.data > "u" ? {
                message: (l = u ?? r) !== null && l !== void 0 ? l : o.defaultError
            } : a.code !== "invalid_type" ? {
                message: o.defaultError
            } : {
                message: (d = u ?? n) !== null && d !== void 0 ? d : o.defaultError
            }
        }
        ,
        description: s
    }
}
class jt {
    constructor(e) {
        this.spa = this.safeParseAsync,
        this._def = e,
        this.parse = this.parse.bind(this),
        this.safeParse = this.safeParse.bind(this),
        this.parseAsync = this.parseAsync.bind(this),
        this.safeParseAsync = this.safeParseAsync.bind(this),
        this.spa = this.spa.bind(this),
        this.refine = this.refine.bind(this),
        this.refinement = this.refinement.bind(this),
        this.superRefine = this.superRefine.bind(this),
        this.optional = this.optional.bind(this),
        this.nullable = this.nullable.bind(this),
        this.nullish = this.nullish.bind(this),
        this.array = this.array.bind(this),
        this.promise = this.promise.bind(this),
        this.or = this.or.bind(this),
        this.and = this.and.bind(this),
        this.transform = this.transform.bind(this),
        this.brand = this.brand.bind(this),
        this.default = this.default.bind(this),
        this.catch = this.catch.bind(this),
        this.describe = this.describe.bind(this),
        this.pipe = this.pipe.bind(this),
        this.readonly = this.readonly.bind(this),
        this.isNullable = this.isNullable.bind(this),
        this.isOptional = this.isOptional.bind(this)
    }
    get description() {
        return this._def.description
    }
    _getType(e) {
        return b1(e.data)
    }
    _getOrReturnCtx(e, n) {
        return n || {
            common: e.parent.common,
            data: e.data,
            parsedType: b1(e.data),
            schemaErrorMap: this._def.errorMap,
            path: e.path,
            parent: e.parent
        }
    }
    _processInputParams(e) {
        return {
            status: new Kr,
            ctx: {
                common: e.parent.common,
                data: e.data,
                parsedType: b1(e.data),
                schemaErrorMap: this._def.errorMap,
                path: e.path,
                parent: e.parent
            }
        }
    }
    _parseSync(e) {
        const n = this._parse(e);
        if (T0(n))
            throw new Error("Synchronous parse encountered promise.");
        return n
    }
    _parseAsync(e) {
        const n = this._parse(e);
        return Promise.resolve(n)
    }
    parse(e, n) {
        const r = this.safeParse(e, n);
        if (r.success)
            return r.data;
        throw r.error
    }
    safeParse(e, n) {
        var r;
        const s = {
            common: {
                issues: [],
                async: (r = n == null ? void 0 : n.async) !== null && r !== void 0 ? r : !1,
                contextualErrorMap: n == null ? void 0 : n.errorMap
            },
            path: (n == null ? void 0 : n.path) || [],
            schemaErrorMap: this._def.errorMap,
            parent: null,
            data: e,
            parsedType: b1(e)
        }
          , i = this._parseSync({
            data: e,
            path: s.path,
            parent: s
        });
        return _b(s, i)
    }
    async parseAsync(e, n) {
        const r = await this.safeParseAsync(e, n);
        if (r.success)
            return r.data;
        throw r.error
    }
    async safeParseAsync(e, n) {
        const r = {
            common: {
                issues: [],
                contextualErrorMap: n == null ? void 0 : n.errorMap,
                async: !0
            },
            path: (n == null ? void 0 : n.path) || [],
            schemaErrorMap: this._def.errorMap,
            parent: null,
            data: e,
            parsedType: b1(e)
        }
          , s = this._parse({
            data: e,
            path: r.path,
            parent: r
        })
          , i = await (T0(s) ? s : Promise.resolve(s));
        return _b(r, i)
    }
    refine(e, n) {
        const r = s=>typeof n == "string" || typeof n > "u" ? {
            message: n
        } : typeof n == "function" ? n(s) : n;
        return this._refinement((s,i)=>{
            const a = e(s)
              , o = ()=>i.addIssue({
                code: Ee.custom,
                ...r(s)
            });
            return typeof Promise < "u" && a instanceof Promise ? a.then(l=>l ? !0 : (o(),
            !1)) : a ? !0 : (o(),
            !1)
        }
        )
    }
    refinement(e, n) {
        return this._refinement((r,s)=>e(r) ? !0 : (s.addIssue(typeof n == "function" ? n(r, s) : n),
        !1))
    }
    _refinement(e) {
        return new ea({
            schema: this,
            typeName: pt.ZodEffects,
            effect: {
                type: "refinement",
                refinement: e
            }
        })
    }
    superRefine(e) {
        return this._refinement(e)
    }
    optional() {
        return Pa.create(this, this._def)
    }
    nullable() {
        return W1.create(this, this._def)
    }
    nullish() {
        return this.nullable().optional()
    }
    array() {
        return Wi.create(this, this._def)
    }
    promise() {
        return Vd.create(this, this._def)
    }
    or(e) {
        return P0.create([this, e], this._def)
    }
    and(e) {
        return $0.create(this, e, this._def)
    }
    transform(e) {
        return new ea({
            ..._t(this._def),
            schema: this,
            typeName: pt.ZodEffects,
            effect: {
                type: "transform",
                transform: e
            }
        })
    }
    default(e) {
        const n = typeof e == "function" ? e : ()=>e;
        return new U0({
            ..._t(this._def),
            innerType: this,
            defaultValue: n,
            typeName: pt.ZodDefault
        })
    }
    brand() {
        return new Mp({
            typeName: pt.ZodBranded,
            type: this,
            ..._t(this._def)
        })
    }
    catch(e) {
        const n = typeof e == "function" ? e : ()=>e;
        return new H0({
            ..._t(this._def),
            innerType: this,
            catchValue: n,
            typeName: pt.ZodCatch
        })
    }
    describe(e) {
        const n = this.constructor;
        return new n({
            ...this._def,
            description: e
        })
    }
    pipe(e) {
        return y5.create(this, e)
    }
    readonly() {
        return z0.create(this)
    }
    isOptional() {
        return this.safeParse(void 0).success
    }
    isNullable() {
        return this.safeParse(null).success
    }
}
const EY = /^c[^\s-]{8,}$/i
  , AY = /^[0-9a-z]+$/
  , jY = /^[0-9A-HJKMNP-TV-Z]{26}$/
  , MY = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i
  , TY = /^[a-z0-9_-]{21}$/i
  , LY = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/
  , OY = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i
  , RY = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
let L6;
const PY = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/
  , $Y = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/
  , FY = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/
  , b_ = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))"
  , NY = new RegExp(`^${b_}$`);
function v_(t) {
    let e = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
    return t.precision ? e = `${e}\\.\\d{${t.precision}}` : t.precision == null && (e = `${e}(\\.\\d+)?`),
    e
}
function VY(t) {
    return new RegExp(`^${v_(t)}$`)
}
function w_(t) {
    let e = `${b_}T${v_(t)}`;
    const n = [];
    return n.push(t.local ? "Z?" : "Z"),
    t.offset && n.push("([+-]\\d{2}:?\\d{2})"),
    e = `${e}(${n.join("|")})`,
    new RegExp(`^${e}$`)
}
function BY(t, e) {
    return !!((e === "v4" || !e) && PY.test(t) || (e === "v6" || !e) && $Y.test(t))
}
class Vi extends jt {
    _parse(e) {
        if (this._def.coerce && (e.data = String(e.data)),
        this._getType(e) !== He.string) {
            const i = this._getOrReturnCtx(e);
            return Be(i, {
                code: Ee.invalid_type,
                expected: He.string,
                received: i.parsedType
            }),
            yt
        }
        const r = new Kr;
        let s;
        for (const i of this._def.checks)
            if (i.kind === "min")
                e.data.length < i.value && (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    code: Ee.too_small,
                    minimum: i.value,
                    type: "string",
                    inclusive: !0,
                    exact: !1,
                    message: i.message
                }),
                r.dirty());
            else if (i.kind === "max")
                e.data.length > i.value && (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    code: Ee.too_big,
                    maximum: i.value,
                    type: "string",
                    inclusive: !0,
                    exact: !1,
                    message: i.message
                }),
                r.dirty());
            else if (i.kind === "length") {
                const a = e.data.length > i.value
                  , o = e.data.length < i.value;
                (a || o) && (s = this._getOrReturnCtx(e, s),
                a ? Be(s, {
                    code: Ee.too_big,
                    maximum: i.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: i.message
                }) : o && Be(s, {
                    code: Ee.too_small,
                    minimum: i.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: i.message
                }),
                r.dirty())
            } else if (i.kind === "email")
                OY.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "email",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty());
            else if (i.kind === "emoji")
                L6 || (L6 = new RegExp(RY,"u")),
                L6.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "emoji",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty());
            else if (i.kind === "uuid")
                MY.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "uuid",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty());
            else if (i.kind === "nanoid")
                TY.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "nanoid",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty());
            else if (i.kind === "cuid")
                EY.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "cuid",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty());
            else if (i.kind === "cuid2")
                AY.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "cuid2",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty());
            else if (i.kind === "ulid")
                jY.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "ulid",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty());
            else if (i.kind === "url")
                try {
                    new URL(e.data)
                } catch {
                    s = this._getOrReturnCtx(e, s),
                    Be(s, {
                        validation: "url",
                        code: Ee.invalid_string,
                        message: i.message
                    }),
                    r.dirty()
                }
            else
                i.kind === "regex" ? (i.regex.lastIndex = 0,
                i.regex.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "regex",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty())) : i.kind === "trim" ? e.data = e.data.trim() : i.kind === "includes" ? e.data.includes(i.value, i.position) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    code: Ee.invalid_string,
                    validation: {
                        includes: i.value,
                        position: i.position
                    },
                    message: i.message
                }),
                r.dirty()) : i.kind === "toLowerCase" ? e.data = e.data.toLowerCase() : i.kind === "toUpperCase" ? e.data = e.data.toUpperCase() : i.kind === "startsWith" ? e.data.startsWith(i.value) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    code: Ee.invalid_string,
                    validation: {
                        startsWith: i.value
                    },
                    message: i.message
                }),
                r.dirty()) : i.kind === "endsWith" ? e.data.endsWith(i.value) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    code: Ee.invalid_string,
                    validation: {
                        endsWith: i.value
                    },
                    message: i.message
                }),
                r.dirty()) : i.kind === "datetime" ? w_(i).test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    code: Ee.invalid_string,
                    validation: "datetime",
                    message: i.message
                }),
                r.dirty()) : i.kind === "date" ? NY.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    code: Ee.invalid_string,
                    validation: "date",
                    message: i.message
                }),
                r.dirty()) : i.kind === "time" ? VY(i).test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    code: Ee.invalid_string,
                    validation: "time",
                    message: i.message
                }),
                r.dirty()) : i.kind === "duration" ? LY.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "duration",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty()) : i.kind === "ip" ? BY(e.data, i.version) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "ip",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty()) : i.kind === "base64" ? FY.test(e.data) || (s = this._getOrReturnCtx(e, s),
                Be(s, {
                    validation: "base64",
                    code: Ee.invalid_string,
                    message: i.message
                }),
                r.dirty()) : Wt.assertNever(i);
        return {
            status: r.value,
            value: e.data
        }
    }
    _regex(e, n, r) {
        return this.refinement(s=>e.test(s), {
            validation: n,
            code: Ee.invalid_string,
            ...Je.errToObj(r)
        })
    }
    _addCheck(e) {
        return new Vi({
            ...this._def,
            checks: [...this._def.checks, e]
        })
    }
    email(e) {
        return this._addCheck({
            kind: "email",
            ...Je.errToObj(e)
        })
    }
    url(e) {
        return this._addCheck({
            kind: "url",
            ...Je.errToObj(e)
        })
    }
    emoji(e) {
        return this._addCheck({
            kind: "emoji",
            ...Je.errToObj(e)
        })
    }
    uuid(e) {
        return this._addCheck({
            kind: "uuid",
            ...Je.errToObj(e)
        })
    }
    nanoid(e) {
        return this._addCheck({
            kind: "nanoid",
            ...Je.errToObj(e)
        })
    }
    cuid(e) {
        return this._addCheck({
            kind: "cuid",
            ...Je.errToObj(e)
        })
    }
    cuid2(e) {
        return this._addCheck({
            kind: "cuid2",
            ...Je.errToObj(e)
        })
    }
    ulid(e) {
        return this._addCheck({
            kind: "ulid",
            ...Je.errToObj(e)
        })
    }
    base64(e) {
        return this._addCheck({
            kind: "base64",
            ...Je.errToObj(e)
        })
    }
    ip(e) {
        return this._addCheck({
            kind: "ip",
            ...Je.errToObj(e)
        })
    }
    datetime(e) {
        var n, r;
        return typeof e == "string" ? this._addCheck({
            kind: "datetime",
            precision: null,
            offset: !1,
            local: !1,
            message: e
        }) : this._addCheck({
            kind: "datetime",
            precision: typeof (e == null ? void 0 : e.precision) > "u" ? null : e == null ? void 0 : e.precision,
            offset: (n = e == null ? void 0 : e.offset) !== null && n !== void 0 ? n : !1,
            local: (r = e == null ? void 0 : e.local) !== null && r !== void 0 ? r : !1,
            ...Je.errToObj(e == null ? void 0 : e.message)
        })
    }
    date(e) {
        return this._addCheck({
            kind: "date",
            message: e
        })
    }
    time(e) {
        return typeof e == "string" ? this._addCheck({
            kind: "time",
            precision: null,
            message: e
        }) : this._addCheck({
            kind: "time",
            precision: typeof (e == null ? void 0 : e.precision) > "u" ? null : e == null ? void 0 : e.precision,
            ...Je.errToObj(e == null ? void 0 : e.message)
        })
    }
    duration(e) {
        return this._addCheck({
            kind: "duration",
            ...Je.errToObj(e)
        })
    }
    regex(e, n) {
        return this._addCheck({
            kind: "regex",
            regex: e,
            ...Je.errToObj(n)
        })
    }
    includes(e, n) {
        return this._addCheck({
            kind: "includes",
            value: e,
            position: n == null ? void 0 : n.position,
            ...Je.errToObj(n == null ? void 0 : n.message)
        })
    }
    startsWith(e, n) {
        return this._addCheck({
            kind: "startsWith",
            value: e,
            ...Je.errToObj(n)
        })
    }
    endsWith(e, n) {
        return this._addCheck({
            kind: "endsWith",
            value: e,
            ...Je.errToObj(n)
        })
    }
    min(e, n) {
        return this._addCheck({
            kind: "min",
            value: e,
            ...Je.errToObj(n)
        })
    }
    max(e, n) {
        return this._addCheck({
            kind: "max",
            value: e,
            ...Je.errToObj(n)
        })
    }
    length(e, n) {
        return this._addCheck({
            kind: "length",
            value: e,
            ...Je.errToObj(n)
        })
    }
    nonempty(e) {
        return this.min(1, Je.errToObj(e))
    }
    trim() {
        return new Vi({
            ...this._def,
            checks: [...this._def.checks, {
                kind: "trim"
            }]
        })
    }
    toLowerCase() {
        return new Vi({
            ...this._def,
            checks: [...this._def.checks, {
                kind: "toLowerCase"
            }]
        })
    }
    toUpperCase() {
        return new Vi({
            ...this._def,
            checks: [...this._def.checks, {
                kind: "toUpperCase"
            }]
        })
    }
    get isDatetime() {
        return !!this._def.checks.find(e=>e.kind === "datetime")
    }
    get isDate() {
        return !!this._def.checks.find(e=>e.kind === "date")
    }
    get isTime() {
        return !!this._def.checks.find(e=>e.kind === "time")
    }
    get isDuration() {
        return !!this._def.checks.find(e=>e.kind === "duration")
    }
    get isEmail() {
        return !!this._def.checks.find(e=>e.kind === "email")
    }
    get isURL() {
        return !!this._def.checks.find(e=>e.kind === "url")
    }
    get isEmoji() {
        return !!this._def.checks.find(e=>e.kind === "emoji")
    }
    get isUUID() {
        return !!this._def.checks.find(e=>e.kind === "uuid")
    }
    get isNANOID() {
        return !!this._def.checks.find(e=>e.kind === "nanoid")
    }
    get isCUID() {
        return !!this._def.checks.find(e=>e.kind === "cuid")
    }
    get isCUID2() {
        return !!this._def.checks.find(e=>e.kind === "cuid2")
    }
    get isULID() {
        return !!this._def.checks.find(e=>e.kind === "ulid")
    }
    get isIP() {
        return !!this._def.checks.find(e=>e.kind === "ip")
    }
    get isBase64() {
        return !!this._def.checks.find(e=>e.kind === "base64")
    }
    get minLength() {
        let e = null;
        for (const n of this._def.checks)
            n.kind === "min" && (e === null || n.value > e) && (e = n.value);
        return e
    }
    get maxLength() {
        let e = null;
        for (const n of this._def.checks)
            n.kind === "max" && (e === null || n.value < e) && (e = n.value);
        return e
    }
}
Vi.create = t=>{
    var e;
    return new Vi({
        checks: [],
        typeName: pt.ZodString,
        coerce: (e = t == null ? void 0 : t.coerce) !== null && e !== void 0 ? e : !1,
        ..._t(t)
    })
}
;
function UY(t, e) {
    const n = (t.toString().split(".")[1] || "").length
      , r = (e.toString().split(".")[1] || "").length
      , s = n > r ? n : r
      , i = parseInt(t.toFixed(s).replace(".", ""))
      , a = parseInt(e.toFixed(s).replace(".", ""));
    return i % a / Math.pow(10, s)
}
class z1 extends jt {
    constructor() {
        super(...arguments),
        this.min = this.gte,
        this.max = this.lte,
        this.step = this.multipleOf
    }
    _parse(e) {
        if (this._def.coerce && (e.data = Number(e.data)),
        this._getType(e) !== He.number) {
            const i = this._getOrReturnCtx(e);
            return Be(i, {
                code: Ee.invalid_type,
                expected: He.number,
                received: i.parsedType
            }),
            yt
        }
        let r;
        const s = new Kr;
        for (const i of this._def.checks)
            i.kind === "int" ? Wt.isInteger(e.data) || (r = this._getOrReturnCtx(e, r),
            Be(r, {
                code: Ee.invalid_type,
                expected: "integer",
                received: "float",
                message: i.message
            }),
            s.dirty()) : i.kind === "min" ? (i.inclusive ? e.data < i.value : e.data <= i.value) && (r = this._getOrReturnCtx(e, r),
            Be(r, {
                code: Ee.too_small,
                minimum: i.value,
                type: "number",
                inclusive: i.inclusive,
                exact: !1,
                message: i.message
            }),
            s.dirty()) : i.kind === "max" ? (i.inclusive ? e.data > i.value : e.data >= i.value) && (r = this._getOrReturnCtx(e, r),
            Be(r, {
                code: Ee.too_big,
                maximum: i.value,
                type: "number",
                inclusive: i.inclusive,
                exact: !1,
                message: i.message
            }),
            s.dirty()) : i.kind === "multipleOf" ? UY(e.data, i.value) !== 0 && (r = this._getOrReturnCtx(e, r),
            Be(r, {
                code: Ee.not_multiple_of,
                multipleOf: i.value,
                message: i.message
            }),
            s.dirty()) : i.kind === "finite" ? Number.isFinite(e.data) || (r = this._getOrReturnCtx(e, r),
            Be(r, {
                code: Ee.not_finite,
                message: i.message
            }),
            s.dirty()) : Wt.assertNever(i);
        return {
            status: s.value,
            value: e.data
        }
    }
    gte(e, n) {
        return this.setLimit("min", e, !0, Je.toString(n))
    }
    gt(e, n) {
        return this.setLimit("min", e, !1, Je.toString(n))
    }
    lte(e, n) {
        return this.setLimit("max", e, !0, Je.toString(n))
    }
    lt(e, n) {
        return this.setLimit("max", e, !1, Je.toString(n))
    }
    setLimit(e, n, r, s) {
        return new z1({
            ...this._def,
            checks: [...this._def.checks, {
                kind: e,
                value: n,
                inclusive: r,
                message: Je.toString(s)
            }]
        })
    }
    _addCheck(e) {
        return new z1({
            ...this._def,
            checks: [...this._def.checks, e]
        })
    }
    int(e) {
        return this._addCheck({
            kind: "int",
            message: Je.toString(e)
        })
    }
    positive(e) {
        return this._addCheck({
            kind: "min",
            value: 0,
            inclusive: !1,
            message: Je.toString(e)
        })
    }
    negative(e) {
        return this._addCheck({
            kind: "max",
            value: 0,
            inclusive: !1,
            message: Je.toString(e)
        })
    }
    nonpositive(e) {
        return this._addCheck({
            kind: "max",
            value: 0,
            inclusive: !0,
            message: Je.toString(e)
        })
    }
    nonnegative(e) {
        return this._addCheck({
            kind: "min",
            value: 0,
            inclusive: !0,
            message: Je.toString(e)
        })
    }
    multipleOf(e, n) {
        return this._addCheck({
            kind: "multipleOf",
            value: e,
            message: Je.toString(n)
        })
    }
    finite(e) {
        return this._addCheck({
            kind: "finite",
            message: Je.toString(e)
        })
    }
    safe(e) {
        return this._addCheck({
            kind: "min",
            inclusive: !0,
            value: Number.MIN_SAFE_INTEGER,
            message: Je.toString(e)
        })._addCheck({
            kind: "max",
            inclusive: !0,
            value: Number.MAX_SAFE_INTEGER,
            message: Je.toString(e)
        })
    }
    get minValue() {
        let e = null;
        for (const n of this._def.checks)
            n.kind === "min" && (e === null || n.value > e) && (e = n.value);
        return e
    }
    get maxValue() {
        let e = null;
        for (const n of this._def.checks)
            n.kind === "max" && (e === null || n.value < e) && (e = n.value);
        return e
    }
    get isInt() {
        return !!this._def.checks.find(e=>e.kind === "int" || e.kind === "multipleOf" && Wt.isInteger(e.value))
    }
    get isFinite() {
        let e = null
          , n = null;
        for (const r of this._def.checks) {
            if (r.kind === "finite" || r.kind === "int" || r.kind === "multipleOf")
                return !0;
            r.kind === "min" ? (n === null || r.value > n) && (n = r.value) : r.kind === "max" && (e === null || r.value < e) && (e = r.value)
        }
        return Number.isFinite(n) && Number.isFinite(e)
    }
}
z1.create = t=>new z1({
    checks: [],
    typeName: pt.ZodNumber,
    coerce: (t == null ? void 0 : t.coerce) || !1,
    ..._t(t)
});
class Z1 extends jt {
    constructor() {
        super(...arguments),
        this.min = this.gte,
        this.max = this.lte
    }
    _parse(e) {
        if (this._def.coerce && (e.data = BigInt(e.data)),
        this._getType(e) !== He.bigint) {
            const i = this._getOrReturnCtx(e);
            return Be(i, {
                code: Ee.invalid_type,
                expected: He.bigint,
                received: i.parsedType
            }),
            yt
        }
        let r;
        const s = new Kr;
        for (const i of this._def.checks)
            i.kind === "min" ? (i.inclusive ? e.data < i.value : e.data <= i.value) && (r = this._getOrReturnCtx(e, r),
            Be(r, {
                code: Ee.too_small,
                type: "bigint",
                minimum: i.value,
                inclusive: i.inclusive,
                message: i.message
            }),
            s.dirty()) : i.kind === "max" ? (i.inclusive ? e.data > i.value : e.data >= i.value) && (r = this._getOrReturnCtx(e, r),
            Be(r, {
                code: Ee.too_big,
                type: "bigint",
                maximum: i.value,
                inclusive: i.inclusive,
                message: i.message
            }),
            s.dirty()) : i.kind === "multipleOf" ? e.data % i.value !== BigInt(0) && (r = this._getOrReturnCtx(e, r),
            Be(r, {
                code: Ee.not_multiple_of,
                multipleOf: i.value,
                message: i.message
            }),
            s.dirty()) : Wt.assertNever(i);
        return {
            status: s.value,
            value: e.data
        }
    }
    gte(e, n) {
        return this.setLimit("min", e, !0, Je.toString(n))
    }
    gt(e, n) {
        return this.setLimit("min", e, !1, Je.toString(n))
    }
    lte(e, n) {
        return this.setLimit("max", e, !0, Je.toString(n))
    }
    lt(e, n) {
        return this.setLimit("max", e, !1, Je.toString(n))
    }
    setLimit(e, n, r, s) {
        return new Z1({
            ...this._def,
            checks: [...this._def.checks, {
                kind: e,
                value: n,
                inclusive: r,
                message: Je.toString(s)
            }]
        })
    }
    _addCheck(e) {
        return new Z1({
            ...this._def,
            checks: [...this._def.checks, e]
        })
    }
    positive(e) {
        return this._addCheck({
            kind: "min",
            value: BigInt(0),
            inclusive: !1,
            message: Je.toString(e)
        })
    }
    negative(e) {
        return this._addCheck({
            kind: "max",
            value: BigInt(0),
            inclusive: !1,
            message: Je.toString(e)
        })
    }
    nonpositive(e) {
        return this._addCheck({
            kind: "max",
            value: BigInt(0),
            inclusive: !0,
            message: Je.toString(e)
        })
    }
    nonnegative(e) {
        return this._addCheck({
            kind: "min",
            value: BigInt(0),
            inclusive: !0,
            message: Je.toString(e)
        })
    }
    multipleOf(e, n) {
        return this._addCheck({
            kind: "multipleOf",
            value: e,
            message: Je.toString(n)
        })
    }
    get minValue() {
        let e = null;
        for (const n of this._def.checks)
            n.kind === "min" && (e === null || n.value > e) && (e = n.value);
        return e
    }
    get maxValue() {
        let e = null;
        for (const n of this._def.checks)
            n.kind === "max" && (e === null || n.value < e) && (e = n.value);
        return e
    }
}
Z1.create = t=>{
    var e;
    return new Z1({
        checks: [],
        typeName: pt.ZodBigInt,
        coerce: (e = t == null ? void 0 : t.coerce) !== null && e !== void 0 ? e : !1,
        ..._t(t)
    })
}
;
class L0 extends jt {
    _parse(e) {
        if (this._def.coerce && (e.data = !!e.data),
        this._getType(e) !== He.boolean) {
            const r = this._getOrReturnCtx(e);
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.boolean,
                received: r.parsedType
            }),
            yt
        }
        return ys(e.data)
    }
}
L0.create = t=>new L0({
    typeName: pt.ZodBoolean,
    coerce: (t == null ? void 0 : t.coerce) || !1,
    ..._t(t)
});
class il extends jt {
    _parse(e) {
        if (this._def.coerce && (e.data = new Date(e.data)),
        this._getType(e) !== He.date) {
            const i = this._getOrReturnCtx(e);
            return Be(i, {
                code: Ee.invalid_type,
                expected: He.date,
                received: i.parsedType
            }),
            yt
        }
        if (isNaN(e.data.getTime())) {
            const i = this._getOrReturnCtx(e);
            return Be(i, {
                code: Ee.invalid_date
            }),
            yt
        }
        const r = new Kr;
        let s;
        for (const i of this._def.checks)
            i.kind === "min" ? e.data.getTime() < i.value && (s = this._getOrReturnCtx(e, s),
            Be(s, {
                code: Ee.too_small,
                message: i.message,
                inclusive: !0,
                exact: !1,
                minimum: i.value,
                type: "date"
            }),
            r.dirty()) : i.kind === "max" ? e.data.getTime() > i.value && (s = this._getOrReturnCtx(e, s),
            Be(s, {
                code: Ee.too_big,
                message: i.message,
                inclusive: !0,
                exact: !1,
                maximum: i.value,
                type: "date"
            }),
            r.dirty()) : Wt.assertNever(i);
        return {
            status: r.value,
            value: new Date(e.data.getTime())
        }
    }
    _addCheck(e) {
        return new il({
            ...this._def,
            checks: [...this._def.checks, e]
        })
    }
    min(e, n) {
        return this._addCheck({
            kind: "min",
            value: e.getTime(),
            message: Je.toString(n)
        })
    }
    max(e, n) {
        return this._addCheck({
            kind: "max",
            value: e.getTime(),
            message: Je.toString(n)
        })
    }
    get minDate() {
        let e = null;
        for (const n of this._def.checks)
            n.kind === "min" && (e === null || n.value > e) && (e = n.value);
        return e != null ? new Date(e) : null
    }
    get maxDate() {
        let e = null;
        for (const n of this._def.checks)
            n.kind === "max" && (e === null || n.value < e) && (e = n.value);
        return e != null ? new Date(e) : null
    }
}
il.create = t=>new il({
    checks: [],
    coerce: (t == null ? void 0 : t.coerce) || !1,
    typeName: pt.ZodDate,
    ..._t(t)
});
class B4 extends jt {
    _parse(e) {
        if (this._getType(e) !== He.symbol) {
            const r = this._getOrReturnCtx(e);
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.symbol,
                received: r.parsedType
            }),
            yt
        }
        return ys(e.data)
    }
}
B4.create = t=>new B4({
    typeName: pt.ZodSymbol,
    ..._t(t)
});
class O0 extends jt {
    _parse(e) {
        if (this._getType(e) !== He.undefined) {
            const r = this._getOrReturnCtx(e);
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.undefined,
                received: r.parsedType
            }),
            yt
        }
        return ys(e.data)
    }
}
O0.create = t=>new O0({
    typeName: pt.ZodUndefined,
    ..._t(t)
});
class R0 extends jt {
    _parse(e) {
        if (this._getType(e) !== He.null) {
            const r = this._getOrReturnCtx(e);
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.null,
                received: r.parsedType
            }),
            yt
        }
        return ys(e.data)
    }
}
R0.create = t=>new R0({
    typeName: pt.ZodNull,
    ..._t(t)
});
class Nd extends jt {
    constructor() {
        super(...arguments),
        this._any = !0
    }
    _parse(e) {
        return ys(e.data)
    }
}
Nd.create = t=>new Nd({
    typeName: pt.ZodAny,
    ..._t(t)
});
class Uc extends jt {
    constructor() {
        super(...arguments),
        this._unknown = !0
    }
    _parse(e) {
        return ys(e.data)
    }
}
Uc.create = t=>new Uc({
    typeName: pt.ZodUnknown,
    ..._t(t)
});
class Vo extends jt {
    _parse(e) {
        const n = this._getOrReturnCtx(e);
        return Be(n, {
            code: Ee.invalid_type,
            expected: He.never,
            received: n.parsedType
        }),
        yt
    }
}
Vo.create = t=>new Vo({
    typeName: pt.ZodNever,
    ..._t(t)
});
class U4 extends jt {
    _parse(e) {
        if (this._getType(e) !== He.undefined) {
            const r = this._getOrReturnCtx(e);
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.void,
                received: r.parsedType
            }),
            yt
        }
        return ys(e.data)
    }
}
U4.create = t=>new U4({
    typeName: pt.ZodVoid,
    ..._t(t)
});
class Wi extends jt {
    _parse(e) {
        const {ctx: n, status: r} = this._processInputParams(e)
          , s = this._def;
        if (n.parsedType !== He.array)
            return Be(n, {
                code: Ee.invalid_type,
                expected: He.array,
                received: n.parsedType
            }),
            yt;
        if (s.exactLength !== null) {
            const a = n.data.length > s.exactLength.value
              , o = n.data.length < s.exactLength.value;
            (a || o) && (Be(n, {
                code: a ? Ee.too_big : Ee.too_small,
                minimum: o ? s.exactLength.value : void 0,
                maximum: a ? s.exactLength.value : void 0,
                type: "array",
                inclusive: !0,
                exact: !0,
                message: s.exactLength.message
            }),
            r.dirty())
        }
        if (s.minLength !== null && n.data.length < s.minLength.value && (Be(n, {
            code: Ee.too_small,
            minimum: s.minLength.value,
            type: "array",
            inclusive: !0,
            exact: !1,
            message: s.minLength.message
        }),
        r.dirty()),
        s.maxLength !== null && n.data.length > s.maxLength.value && (Be(n, {
            code: Ee.too_big,
            maximum: s.maxLength.value,
            type: "array",
            inclusive: !0,
            exact: !1,
            message: s.maxLength.message
        }),
        r.dirty()),
        n.common.async)
            return Promise.all([...n.data].map((a,o)=>s.type._parseAsync(new Ba(n,a,n.path,o)))).then(a=>Kr.mergeArray(r, a));
        const i = [...n.data].map((a,o)=>s.type._parseSync(new Ba(n,a,n.path,o)));
        return Kr.mergeArray(r, i)
    }
    get element() {
        return this._def.type
    }
    min(e, n) {
        return new Wi({
            ...this._def,
            minLength: {
                value: e,
                message: Je.toString(n)
            }
        })
    }
    max(e, n) {
        return new Wi({
            ...this._def,
            maxLength: {
                value: e,
                message: Je.toString(n)
            }
        })
    }
    length(e, n) {
        return new Wi({
            ...this._def,
            exactLength: {
                value: e,
                message: Je.toString(n)
            }
        })
    }
    nonempty(e) {
        return this.min(1, e)
    }
}
Wi.create = (t,e)=>new Wi({
    type: t,
    minLength: null,
    maxLength: null,
    exactLength: null,
    typeName: pt.ZodArray,
    ..._t(e)
});
function Yl(t) {
    if (t instanceof zn) {
        const e = {};
        for (const n in t.shape) {
            const r = t.shape[n];
            e[n] = Pa.create(Yl(r))
        }
        return new zn({
            ...t._def,
            shape: ()=>e
        })
    } else
        return t instanceof Wi ? new Wi({
            ...t._def,
            type: Yl(t.element)
        }) : t instanceof Pa ? Pa.create(Yl(t.unwrap())) : t instanceof W1 ? W1.create(Yl(t.unwrap())) : t instanceof Ua ? Ua.create(t.items.map(e=>Yl(e))) : t
}
class zn extends jt {
    constructor() {
        super(...arguments),
        this._cached = null,
        this.nonstrict = this.passthrough,
        this.augment = this.extend
    }
    _getCached() {
        if (this._cached !== null)
            return this._cached;
        const e = this._def.shape()
          , n = Wt.objectKeys(e);
        return this._cached = {
            shape: e,
            keys: n
        }
    }
    _parse(e) {
        if (this._getType(e) !== He.object) {
            const d = this._getOrReturnCtx(e);
            return Be(d, {
                code: Ee.invalid_type,
                expected: He.object,
                received: d.parsedType
            }),
            yt
        }
        const {status: r, ctx: s} = this._processInputParams(e)
          , {shape: i, keys: a} = this._getCached()
          , o = [];
        if (!(this._def.catchall instanceof Vo && this._def.unknownKeys === "strip"))
            for (const d in s.data)
                a.includes(d) || o.push(d);
        const l = [];
        for (const d of a) {
            const u = i[d]
              , h = s.data[d];
            l.push({
                key: {
                    status: "valid",
                    value: d
                },
                value: u._parse(new Ba(s,h,s.path,d)),
                alwaysSet: d in s.data
            })
        }
        if (this._def.catchall instanceof Vo) {
            const d = this._def.unknownKeys;
            if (d === "passthrough")
                for (const u of o)
                    l.push({
                        key: {
                            status: "valid",
                            value: u
                        },
                        value: {
                            status: "valid",
                            value: s.data[u]
                        }
                    });
            else if (d === "strict")
                o.length > 0 && (Be(s, {
                    code: Ee.unrecognized_keys,
                    keys: o
                }),
                r.dirty());
            else if (d !== "strip")
                throw new Error("Internal ZodObject error: invalid unknownKeys value.")
        } else {
            const d = this._def.catchall;
            for (const u of o) {
                const h = s.data[u];
                l.push({
                    key: {
                        status: "valid",
                        value: u
                    },
                    value: d._parse(new Ba(s,h,s.path,u)),
                    alwaysSet: u in s.data
                })
            }
        }
        return s.common.async ? Promise.resolve().then(async()=>{
            const d = [];
            for (const u of l) {
                const h = await u.key
                  , f = await u.value;
                d.push({
                    key: h,
                    value: f,
                    alwaysSet: u.alwaysSet
                })
            }
            return d
        }
        ).then(d=>Kr.mergeObjectSync(r, d)) : Kr.mergeObjectSync(r, l)
    }
    get shape() {
        return this._def.shape()
    }
    strict(e) {
        return Je.errToObj,
        new zn({
            ...this._def,
            unknownKeys: "strict",
            ...e !== void 0 ? {
                errorMap: (n,r)=>{
                    var s, i, a, o;
                    const l = (a = (i = (s = this._def).errorMap) === null || i === void 0 ? void 0 : i.call(s, n, r).message) !== null && a !== void 0 ? a : r.defaultError;
                    return n.code === "unrecognized_keys" ? {
                        message: (o = Je.errToObj(e).message) !== null && o !== void 0 ? o : l
                    } : {
                        message: l
                    }
                }
            } : {}
        })
    }
    strip() {
        return new zn({
            ...this._def,
            unknownKeys: "strip"
        })
    }
    passthrough() {
        return new zn({
            ...this._def,
            unknownKeys: "passthrough"
        })
    }
    extend(e) {
        return new zn({
            ...this._def,
            shape: ()=>({
                ...this._def.shape(),
                ...e
            })
        })
    }
    merge(e) {
        return new zn({
            unknownKeys: e._def.unknownKeys,
            catchall: e._def.catchall,
            shape: ()=>({
                ...this._def.shape(),
                ...e._def.shape()
            }),
            typeName: pt.ZodObject
        })
    }
    setKey(e, n) {
        return this.augment({
            [e]: n
        })
    }
    catchall(e) {
        return new zn({
            ...this._def,
            catchall: e
        })
    }
    pick(e) {
        const n = {};
        return Wt.objectKeys(e).forEach(r=>{
            e[r] && this.shape[r] && (n[r] = this.shape[r])
        }
        ),
        new zn({
            ...this._def,
            shape: ()=>n
        })
    }
    omit(e) {
        const n = {};
        return Wt.objectKeys(this.shape).forEach(r=>{
            e[r] || (n[r] = this.shape[r])
        }
        ),
        new zn({
            ...this._def,
            shape: ()=>n
        })
    }
    deepPartial() {
        return Yl(this)
    }
    partial(e) {
        const n = {};
        return Wt.objectKeys(this.shape).forEach(r=>{
            const s = this.shape[r];
            e && !e[r] ? n[r] = s : n[r] = s.optional()
        }
        ),
        new zn({
            ...this._def,
            shape: ()=>n
        })
    }
    required(e) {
        const n = {};
        return Wt.objectKeys(this.shape).forEach(r=>{
            if (e && !e[r])
                n[r] = this.shape[r];
            else {
                let i = this.shape[r];
                for (; i instanceof Pa; )
                    i = i._def.innerType;
                n[r] = i
            }
        }
        ),
        new zn({
            ...this._def,
            shape: ()=>n
        })
    }
    keyof() {
        return k_(Wt.objectKeys(this.shape))
    }
}
zn.create = (t,e)=>new zn({
    shape: ()=>t,
    unknownKeys: "strip",
    catchall: Vo.create(),
    typeName: pt.ZodObject,
    ..._t(e)
});
zn.strictCreate = (t,e)=>new zn({
    shape: ()=>t,
    unknownKeys: "strict",
    catchall: Vo.create(),
    typeName: pt.ZodObject,
    ..._t(e)
});
zn.lazycreate = (t,e)=>new zn({
    shape: t,
    unknownKeys: "strip",
    catchall: Vo.create(),
    typeName: pt.ZodObject,
    ..._t(e)
});
class P0 extends jt {
    _parse(e) {
        const {ctx: n} = this._processInputParams(e)
          , r = this._def.options;
        function s(i) {
            for (const o of i)
                if (o.result.status === "valid")
                    return o.result;
            for (const o of i)
                if (o.result.status === "dirty")
                    return n.common.issues.push(...o.ctx.common.issues),
                    o.result;
            const a = i.map(o=>new ei(o.ctx.common.issues));
            return Be(n, {
                code: Ee.invalid_union,
                unionErrors: a
            }),
            yt
        }
        if (n.common.async)
            return Promise.all(r.map(async i=>{
                const a = {
                    ...n,
                    common: {
                        ...n.common,
                        issues: []
                    },
                    parent: null
                };
                return {
                    result: await i._parseAsync({
                        data: n.data,
                        path: n.path,
                        parent: a
                    }),
                    ctx: a
                }
            }
            )).then(s);
        {
            let i;
            const a = [];
            for (const l of r) {
                const d = {
                    ...n,
                    common: {
                        ...n.common,
                        issues: []
                    },
                    parent: null
                }
                  , u = l._parseSync({
                    data: n.data,
                    path: n.path,
                    parent: d
                });
                if (u.status === "valid")
                    return u;
                u.status === "dirty" && !i && (i = {
                    result: u,
                    ctx: d
                }),
                d.common.issues.length && a.push(d.common.issues)
            }
            if (i)
                return n.common.issues.push(...i.ctx.common.issues),
                i.result;
            const o = a.map(l=>new ei(l));
            return Be(n, {
                code: Ee.invalid_union,
                unionErrors: o
            }),
            yt
        }
    }
    get options() {
        return this._def.options
    }
}
P0.create = (t,e)=>new P0({
    options: t,
    typeName: pt.ZodUnion,
    ..._t(e)
});
const so = t=>t instanceof N0 ? so(t.schema) : t instanceof ea ? so(t.innerType()) : t instanceof V0 ? [t.value] : t instanceof q1 ? t.options : t instanceof B0 ? Wt.objectValues(t.enum) : t instanceof U0 ? so(t._def.innerType) : t instanceof O0 ? [void 0] : t instanceof R0 ? [null] : t instanceof Pa ? [void 0, ...so(t.unwrap())] : t instanceof W1 ? [null, ...so(t.unwrap())] : t instanceof Mp || t instanceof z0 ? so(t.unwrap()) : t instanceof H0 ? so(t._def.innerType) : [];
class dh extends jt {
    _parse(e) {
        const {ctx: n} = this._processInputParams(e);
        if (n.parsedType !== He.object)
            return Be(n, {
                code: Ee.invalid_type,
                expected: He.object,
                received: n.parsedType
            }),
            yt;
        const r = this.discriminator
          , s = n.data[r]
          , i = this.optionsMap.get(s);
        return i ? n.common.async ? i._parseAsync({
            data: n.data,
            path: n.path,
            parent: n
        }) : i._parseSync({
            data: n.data,
            path: n.path,
            parent: n
        }) : (Be(n, {
            code: Ee.invalid_union_discriminator,
            options: Array.from(this.optionsMap.keys()),
            path: [r]
        }),
        yt)
    }
    get discriminator() {
        return this._def.discriminator
    }
    get options() {
        return this._def.options
    }
    get optionsMap() {
        return this._def.optionsMap
    }
    static create(e, n, r) {
        const s = new Map;
        for (const i of n) {
            const a = so(i.shape[e]);
            if (!a.length)
                throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);
            for (const o of a) {
                if (s.has(o))
                    throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(o)}`);
                s.set(o, i)
            }
        }
        return new dh({
            typeName: pt.ZodDiscriminatedUnion,
            discriminator: e,
            options: n,
            optionsMap: s,
            ..._t(r)
        })
    }
}
function _9(t, e) {
    const n = b1(t)
      , r = b1(e);
    if (t === e)
        return {
            valid: !0,
            data: t
        };
    if (n === He.object && r === He.object) {
        const s = Wt.objectKeys(e)
          , i = Wt.objectKeys(t).filter(o=>s.indexOf(o) !== -1)
          , a = {
            ...t,
            ...e
        };
        for (const o of i) {
            const l = _9(t[o], e[o]);
            if (!l.valid)
                return {
                    valid: !1
                };
            a[o] = l.data
        }
        return {
            valid: !0,
            data: a
        }
    } else if (n === He.array && r === He.array) {
        if (t.length !== e.length)
            return {
                valid: !1
            };
        const s = [];
        for (let i = 0; i < t.length; i++) {
            const a = t[i]
              , o = e[i]
              , l = _9(a, o);
            if (!l.valid)
                return {
                    valid: !1
                };
            s.push(l.data)
        }
        return {
            valid: !0,
            data: s
        }
    } else
        return n === He.date && r === He.date && +t == +e ? {
            valid: !0,
            data: t
        } : {
            valid: !1
        }
}
class $0 extends jt {
    _parse(e) {
        const {status: n, ctx: r} = this._processInputParams(e)
          , s = (i,a)=>{
            if (D9(i) || D9(a))
                return yt;
            const o = _9(i.value, a.value);
            return o.valid ? ((S9(i) || S9(a)) && n.dirty(),
            {
                status: n.value,
                value: o.data
            }) : (Be(r, {
                code: Ee.invalid_intersection_types
            }),
            yt)
        }
        ;
        return r.common.async ? Promise.all([this._def.left._parseAsync({
            data: r.data,
            path: r.path,
            parent: r
        }), this._def.right._parseAsync({
            data: r.data,
            path: r.path,
            parent: r
        })]).then(([i,a])=>s(i, a)) : s(this._def.left._parseSync({
            data: r.data,
            path: r.path,
            parent: r
        }), this._def.right._parseSync({
            data: r.data,
            path: r.path,
            parent: r
        }))
    }
}
$0.create = (t,e,n)=>new $0({
    left: t,
    right: e,
    typeName: pt.ZodIntersection,
    ..._t(n)
});
class Ua extends jt {
    _parse(e) {
        const {status: n, ctx: r} = this._processInputParams(e);
        if (r.parsedType !== He.array)
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.array,
                received: r.parsedType
            }),
            yt;
        if (r.data.length < this._def.items.length)
            return Be(r, {
                code: Ee.too_small,
                minimum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }),
            yt;
        !this._def.rest && r.data.length > this._def.items.length && (Be(r, {
            code: Ee.too_big,
            maximum: this._def.items.length,
            inclusive: !0,
            exact: !1,
            type: "array"
        }),
        n.dirty());
        const i = [...r.data].map((a,o)=>{
            const l = this._def.items[o] || this._def.rest;
            return l ? l._parse(new Ba(r,a,r.path,o)) : null
        }
        ).filter(a=>!!a);
        return r.common.async ? Promise.all(i).then(a=>Kr.mergeArray(n, a)) : Kr.mergeArray(n, i)
    }
    get items() {
        return this._def.items
    }
    rest(e) {
        return new Ua({
            ...this._def,
            rest: e
        })
    }
}
Ua.create = (t,e)=>{
    if (!Array.isArray(t))
        throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
    return new Ua({
        items: t,
        typeName: pt.ZodTuple,
        rest: null,
        ..._t(e)
    })
}
;
class F0 extends jt {
    get keySchema() {
        return this._def.keyType
    }
    get valueSchema() {
        return this._def.valueType
    }
    _parse(e) {
        const {status: n, ctx: r} = this._processInputParams(e);
        if (r.parsedType !== He.object)
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.object,
                received: r.parsedType
            }),
            yt;
        const s = []
          , i = this._def.keyType
          , a = this._def.valueType;
        for (const o in r.data)
            s.push({
                key: i._parse(new Ba(r,o,r.path,o)),
                value: a._parse(new Ba(r,r.data[o],r.path,o)),
                alwaysSet: o in r.data
            });
        return r.common.async ? Kr.mergeObjectAsync(n, s) : Kr.mergeObjectSync(n, s)
    }
    get element() {
        return this._def.valueType
    }
    static create(e, n, r) {
        return n instanceof jt ? new F0({
            keyType: e,
            valueType: n,
            typeName: pt.ZodRecord,
            ..._t(r)
        }) : new F0({
            keyType: Vi.create(),
            valueType: e,
            typeName: pt.ZodRecord,
            ..._t(n)
        })
    }
}
class H4 extends jt {
    get keySchema() {
        return this._def.keyType
    }
    get valueSchema() {
        return this._def.valueType
    }
    _parse(e) {
        const {status: n, ctx: r} = this._processInputParams(e);
        if (r.parsedType !== He.map)
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.map,
                received: r.parsedType
            }),
            yt;
        const s = this._def.keyType
          , i = this._def.valueType
          , a = [...r.data.entries()].map(([o,l],d)=>({
            key: s._parse(new Ba(r,o,r.path,[d, "key"])),
            value: i._parse(new Ba(r,l,r.path,[d, "value"]))
        }));
        if (r.common.async) {
            const o = new Map;
            return Promise.resolve().then(async()=>{
                for (const l of a) {
                    const d = await l.key
                      , u = await l.value;
                    if (d.status === "aborted" || u.status === "aborted")
                        return yt;
                    (d.status === "dirty" || u.status === "dirty") && n.dirty(),
                    o.set(d.value, u.value)
                }
                return {
                    status: n.value,
                    value: o
                }
            }
            )
        } else {
            const o = new Map;
            for (const l of a) {
                const d = l.key
                  , u = l.value;
                if (d.status === "aborted" || u.status === "aborted")
                    return yt;
                (d.status === "dirty" || u.status === "dirty") && n.dirty(),
                o.set(d.value, u.value)
            }
            return {
                status: n.value,
                value: o
            }
        }
    }
}
H4.create = (t,e,n)=>new H4({
    valueType: e,
    keyType: t,
    typeName: pt.ZodMap,
    ..._t(n)
});
class al extends jt {
    _parse(e) {
        const {status: n, ctx: r} = this._processInputParams(e);
        if (r.parsedType !== He.set)
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.set,
                received: r.parsedType
            }),
            yt;
        const s = this._def;
        s.minSize !== null && r.data.size < s.minSize.value && (Be(r, {
            code: Ee.too_small,
            minimum: s.minSize.value,
            type: "set",
            inclusive: !0,
            exact: !1,
            message: s.minSize.message
        }),
        n.dirty()),
        s.maxSize !== null && r.data.size > s.maxSize.value && (Be(r, {
            code: Ee.too_big,
            maximum: s.maxSize.value,
            type: "set",
            inclusive: !0,
            exact: !1,
            message: s.maxSize.message
        }),
        n.dirty());
        const i = this._def.valueType;
        function a(l) {
            const d = new Set;
            for (const u of l) {
                if (u.status === "aborted")
                    return yt;
                u.status === "dirty" && n.dirty(),
                d.add(u.value)
            }
            return {
                status: n.value,
                value: d
            }
        }
        const o = [...r.data.values()].map((l,d)=>i._parse(new Ba(r,l,r.path,d)));
        return r.common.async ? Promise.all(o).then(l=>a(l)) : a(o)
    }
    min(e, n) {
        return new al({
            ...this._def,
            minSize: {
                value: e,
                message: Je.toString(n)
            }
        })
    }
    max(e, n) {
        return new al({
            ...this._def,
            maxSize: {
                value: e,
                message: Je.toString(n)
            }
        })
    }
    size(e, n) {
        return this.min(e, n).max(e, n)
    }
    nonempty(e) {
        return this.min(1, e)
    }
}
al.create = (t,e)=>new al({
    valueType: t,
    minSize: null,
    maxSize: null,
    typeName: pt.ZodSet,
    ..._t(e)
});
class bd extends jt {
    constructor() {
        super(...arguments),
        this.validate = this.implement
    }
    _parse(e) {
        const {ctx: n} = this._processInputParams(e);
        if (n.parsedType !== He.function)
            return Be(n, {
                code: Ee.invalid_type,
                expected: He.function,
                received: n.parsedType
            }),
            yt;
        function r(o, l) {
            return N4({
                data: o,
                path: n.path,
                errorMaps: [n.common.contextualErrorMap, n.schemaErrorMap, F4(), Fd].filter(d=>!!d),
                issueData: {
                    code: Ee.invalid_arguments,
                    argumentsError: l
                }
            })
        }
        function s(o, l) {
            return N4({
                data: o,
                path: n.path,
                errorMaps: [n.common.contextualErrorMap, n.schemaErrorMap, F4(), Fd].filter(d=>!!d),
                issueData: {
                    code: Ee.invalid_return_type,
                    returnTypeError: l
                }
            })
        }
        const i = {
            errorMap: n.common.contextualErrorMap
        }
          , a = n.data;
        if (this._def.returns instanceof Vd) {
            const o = this;
            return ys(async function(...l) {
                const d = new ei([])
                  , u = await o._def.args.parseAsync(l, i).catch(p=>{
                    throw d.addIssue(r(l, p)),
                    d
                }
                )
                  , h = await Reflect.apply(a, this, u);
                return await o._def.returns._def.type.parseAsync(h, i).catch(p=>{
                    throw d.addIssue(s(h, p)),
                    d
                }
                )
            })
        } else {
            const o = this;
            return ys(function(...l) {
                const d = o._def.args.safeParse(l, i);
                if (!d.success)
                    throw new ei([r(l, d.error)]);
                const u = Reflect.apply(a, this, d.data)
                  , h = o._def.returns.safeParse(u, i);
                if (!h.success)
                    throw new ei([s(u, h.error)]);
                return h.data
            })
        }
    }
    parameters() {
        return this._def.args
    }
    returnType() {
        return this._def.returns
    }
    args(...e) {
        return new bd({
            ...this._def,
            args: Ua.create(e).rest(Uc.create())
        })
    }
    returns(e) {
        return new bd({
            ...this._def,
            returns: e
        })
    }
    implement(e) {
        return this.parse(e)
    }
    strictImplement(e) {
        return this.parse(e)
    }
    static create(e, n, r) {
        return new bd({
            args: e || Ua.create([]).rest(Uc.create()),
            returns: n || Uc.create(),
            typeName: pt.ZodFunction,
            ..._t(r)
        })
    }
}
class N0 extends jt {
    get schema() {
        return this._def.getter()
    }
    _parse(e) {
        const {ctx: n} = this._processInputParams(e);
        return this._def.getter()._parse({
            data: n.data,
            path: n.path,
            parent: n
        })
    }
}
N0.create = (t,e)=>new N0({
    getter: t,
    typeName: pt.ZodLazy,
    ..._t(e)
});
class V0 extends jt {
    _parse(e) {
        if (e.data !== this._def.value) {
            const n = this._getOrReturnCtx(e);
            return Be(n, {
                received: n.data,
                code: Ee.invalid_literal,
                expected: this._def.value
            }),
            yt
        }
        return {
            status: "valid",
            value: e.data
        }
    }
    get value() {
        return this._def.value
    }
}
V0.create = (t,e)=>new V0({
    value: t,
    typeName: pt.ZodLiteral,
    ..._t(e)
});
function k_(t, e) {
    return new q1({
        values: t,
        typeName: pt.ZodEnum,
        ..._t(e)
    })
}
class q1 extends jt {
    constructor() {
        super(...arguments),
        Eu.set(this, void 0)
    }
    _parse(e) {
        if (typeof e.data != "string") {
            const n = this._getOrReturnCtx(e)
              , r = this._def.values;
            return Be(n, {
                expected: Wt.joinValues(r),
                received: n.parsedType,
                code: Ee.invalid_type
            }),
            yt
        }
        if (V4(this, Eu, "f") || C_(this, Eu, new Set(this._def.values), "f"),
        !V4(this, Eu, "f").has(e.data)) {
            const n = this._getOrReturnCtx(e)
              , r = this._def.values;
            return Be(n, {
                received: n.data,
                code: Ee.invalid_enum_value,
                options: r
            }),
            yt
        }
        return ys(e.data)
    }
    get options() {
        return this._def.values
    }
    get enum() {
        const e = {};
        for (const n of this._def.values)
            e[n] = n;
        return e
    }
    get Values() {
        const e = {};
        for (const n of this._def.values)
            e[n] = n;
        return e
    }
    get Enum() {
        const e = {};
        for (const n of this._def.values)
            e[n] = n;
        return e
    }
    extract(e, n=this._def) {
        return q1.create(e, {
            ...this._def,
            ...n
        })
    }
    exclude(e, n=this._def) {
        return q1.create(this.options.filter(r=>!e.includes(r)), {
            ...this._def,
            ...n
        })
    }
}
Eu = new WeakMap;
q1.create = k_;
class B0 extends jt {
    constructor() {
        super(...arguments),
        Au.set(this, void 0)
    }
    _parse(e) {
        const n = Wt.getValidEnumValues(this._def.values)
          , r = this._getOrReturnCtx(e);
        if (r.parsedType !== He.string && r.parsedType !== He.number) {
            const s = Wt.objectValues(n);
            return Be(r, {
                expected: Wt.joinValues(s),
                received: r.parsedType,
                code: Ee.invalid_type
            }),
            yt
        }
        if (V4(this, Au, "f") || C_(this, Au, new Set(Wt.getValidEnumValues(this._def.values)), "f"),
        !V4(this, Au, "f").has(e.data)) {
            const s = Wt.objectValues(n);
            return Be(r, {
                received: r.data,
                code: Ee.invalid_enum_value,
                options: s
            }),
            yt
        }
        return ys(e.data)
    }
    get enum() {
        return this._def.values
    }
}
Au = new WeakMap;
B0.create = (t,e)=>new B0({
    values: t,
    typeName: pt.ZodNativeEnum,
    ..._t(e)
});
class Vd extends jt {
    unwrap() {
        return this._def.type
    }
    _parse(e) {
        const {ctx: n} = this._processInputParams(e);
        if (n.parsedType !== He.promise && n.common.async === !1)
            return Be(n, {
                code: Ee.invalid_type,
                expected: He.promise,
                received: n.parsedType
            }),
            yt;
        const r = n.parsedType === He.promise ? n.data : Promise.resolve(n.data);
        return ys(r.then(s=>this._def.type.parseAsync(s, {
            path: n.path,
            errorMap: n.common.contextualErrorMap
        })))
    }
}
Vd.create = (t,e)=>new Vd({
    type: t,
    typeName: pt.ZodPromise,
    ..._t(e)
});
class ea extends jt {
    innerType() {
        return this._def.schema
    }
    sourceType() {
        return this._def.schema._def.typeName === pt.ZodEffects ? this._def.schema.sourceType() : this._def.schema
    }
    _parse(e) {
        const {status: n, ctx: r} = this._processInputParams(e)
          , s = this._def.effect || null
          , i = {
            addIssue: a=>{
                Be(r, a),
                a.fatal ? n.abort() : n.dirty()
            }
            ,
            get path() {
                return r.path
            }
        };
        if (i.addIssue = i.addIssue.bind(i),
        s.type === "preprocess") {
            const a = s.transform(r.data, i);
            if (r.common.async)
                return Promise.resolve(a).then(async o=>{
                    if (n.value === "aborted")
                        return yt;
                    const l = await this._def.schema._parseAsync({
                        data: o,
                        path: r.path,
                        parent: r
                    });
                    return l.status === "aborted" ? yt : l.status === "dirty" || n.value === "dirty" ? ed(l.value) : l
                }
                );
            {
                if (n.value === "aborted")
                    return yt;
                const o = this._def.schema._parseSync({
                    data: a,
                    path: r.path,
                    parent: r
                });
                return o.status === "aborted" ? yt : o.status === "dirty" || n.value === "dirty" ? ed(o.value) : o
            }
        }
        if (s.type === "refinement") {
            const a = o=>{
                const l = s.refinement(o, i);
                if (r.common.async)
                    return Promise.resolve(l);
                if (l instanceof Promise)
                    throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
                return o
            }
            ;
            if (r.common.async === !1) {
                const o = this._def.schema._parseSync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return o.status === "aborted" ? yt : (o.status === "dirty" && n.dirty(),
                a(o.value),
                {
                    status: n.value,
                    value: o.value
                })
            } else
                return this._def.schema._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }).then(o=>o.status === "aborted" ? yt : (o.status === "dirty" && n.dirty(),
                a(o.value).then(()=>({
                    status: n.value,
                    value: o.value
                }))))
        }
        if (s.type === "transform")
            if (r.common.async === !1) {
                const a = this._def.schema._parseSync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                if (!M0(a))
                    return a;
                const o = s.transform(a.value, i);
                if (o instanceof Promise)
                    throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
                return {
                    status: n.value,
                    value: o
                }
            } else
                return this._def.schema._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }).then(a=>M0(a) ? Promise.resolve(s.transform(a.value, i)).then(o=>({
                    status: n.value,
                    value: o
                })) : a);
        Wt.assertNever(s)
    }
}
ea.create = (t,e,n)=>new ea({
    schema: t,
    typeName: pt.ZodEffects,
    effect: e,
    ..._t(n)
});
ea.createWithPreprocess = (t,e,n)=>new ea({
    schema: e,
    effect: {
        type: "preprocess",
        transform: t
    },
    typeName: pt.ZodEffects,
    ..._t(n)
});
class Pa extends jt {
    _parse(e) {
        return this._getType(e) === He.undefined ? ys(void 0) : this._def.innerType._parse(e)
    }
    unwrap() {
        return this._def.innerType
    }
}
Pa.create = (t,e)=>new Pa({
    innerType: t,
    typeName: pt.ZodOptional,
    ..._t(e)
});
class W1 extends jt {
    _parse(e) {
        return this._getType(e) === He.null ? ys(null) : this._def.innerType._parse(e)
    }
    unwrap() {
        return this._def.innerType
    }
}
W1.create = (t,e)=>new W1({
    innerType: t,
    typeName: pt.ZodNullable,
    ..._t(e)
});
class U0 extends jt {
    _parse(e) {
        const {ctx: n} = this._processInputParams(e);
        let r = n.data;
        return n.parsedType === He.undefined && (r = this._def.defaultValue()),
        this._def.innerType._parse({
            data: r,
            path: n.path,
            parent: n
        })
    }
    removeDefault() {
        return this._def.innerType
    }
}
U0.create = (t,e)=>new U0({
    innerType: t,
    typeName: pt.ZodDefault,
    defaultValue: typeof e.default == "function" ? e.default : ()=>e.default,
    ..._t(e)
});
class H0 extends jt {
    _parse(e) {
        const {ctx: n} = this._processInputParams(e)
          , r = {
            ...n,
            common: {
                ...n.common,
                issues: []
            }
        }
          , s = this._def.innerType._parse({
            data: r.data,
            path: r.path,
            parent: {
                ...r
            }
        });
        return T0(s) ? s.then(i=>({
            status: "valid",
            value: i.status === "valid" ? i.value : this._def.catchValue({
                get error() {
                    return new ei(r.common.issues)
                },
                input: r.data
            })
        })) : {
            status: "valid",
            value: s.status === "valid" ? s.value : this._def.catchValue({
                get error() {
                    return new ei(r.common.issues)
                },
                input: r.data
            })
        }
    }
    removeCatch() {
        return this._def.innerType
    }
}
H0.create = (t,e)=>new H0({
    innerType: t,
    typeName: pt.ZodCatch,
    catchValue: typeof e.catch == "function" ? e.catch : ()=>e.catch,
    ..._t(e)
});
class z4 extends jt {
    _parse(e) {
        if (this._getType(e) !== He.nan) {
            const r = this._getOrReturnCtx(e);
            return Be(r, {
                code: Ee.invalid_type,
                expected: He.nan,
                received: r.parsedType
            }),
            yt
        }
        return {
            status: "valid",
            value: e.data
        }
    }
}
z4.create = t=>new z4({
    typeName: pt.ZodNaN,
    ..._t(t)
});
const HY = Symbol("zod_brand");
class Mp extends jt {
    _parse(e) {
        const {ctx: n} = this._processInputParams(e)
          , r = n.data;
        return this._def.type._parse({
            data: r,
            path: n.path,
            parent: n
        })
    }
    unwrap() {
        return this._def.type
    }
}
class y5 extends jt {
    _parse(e) {
        const {status: n, ctx: r} = this._processInputParams(e);
        if (r.common.async)
            return (async()=>{
                const i = await this._def.in._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return i.status === "aborted" ? yt : i.status === "dirty" ? (n.dirty(),
                ed(i.value)) : this._def.out._parseAsync({
                    data: i.value,
                    path: r.path,
                    parent: r
                })
            }
            )();
        {
            const s = this._def.in._parseSync({
                data: r.data,
                path: r.path,
                parent: r
            });
            return s.status === "aborted" ? yt : s.status === "dirty" ? (n.dirty(),
            {
                status: "dirty",
                value: s.value
            }) : this._def.out._parseSync({
                data: s.value,
                path: r.path,
                parent: r
            })
        }
    }
    static create(e, n) {
        return new y5({
            in: e,
            out: n,
            typeName: pt.ZodPipeline
        })
    }
}
class z0 extends jt {
    _parse(e) {
        const n = this._def.innerType._parse(e)
          , r = s=>(M0(s) && (s.value = Object.freeze(s.value)),
        s);
        return T0(n) ? n.then(s=>r(s)) : r(n)
    }
    unwrap() {
        return this._def.innerType
    }
}
z0.create = (t,e)=>new z0({
    innerType: t,
    typeName: pt.ZodReadonly,
    ..._t(e)
});
function Tp(t, e={}, n) {
    return t ? Nd.create().superRefine((r,s)=>{
        var i, a;
        if (!t(r)) {
            const o = typeof e == "function" ? e(r) : typeof e == "string" ? {
                message: e
            } : e
              , l = (a = (i = o.fatal) !== null && i !== void 0 ? i : n) !== null && a !== void 0 ? a : !0
              , d = typeof o == "string" ? {
                message: o
            } : o;
            s.addIssue({
                code: "custom",
                ...d,
                fatal: l
            })
        }
    }
    ) : Nd.create()
}
const zY = {
    object: zn.lazycreate
};
var pt;
(function(t) {
    t.ZodString = "ZodString",
    t.ZodNumber = "ZodNumber",
    t.ZodNaN = "ZodNaN",
    t.ZodBigInt = "ZodBigInt",
    t.ZodBoolean = "ZodBoolean",
    t.ZodDate = "ZodDate",
    t.ZodSymbol = "ZodSymbol",
    t.ZodUndefined = "ZodUndefined",
    t.ZodNull = "ZodNull",
    t.ZodAny = "ZodAny",
    t.ZodUnknown = "ZodUnknown",
    t.ZodNever = "ZodNever",
    t.ZodVoid = "ZodVoid",
    t.ZodArray = "ZodArray",
    t.ZodObject = "ZodObject",
    t.ZodUnion = "ZodUnion",
    t.ZodDiscriminatedUnion = "ZodDiscriminatedUnion",
    t.ZodIntersection = "ZodIntersection",
    t.ZodTuple = "ZodTuple",
    t.ZodRecord = "ZodRecord",
    t.ZodMap = "ZodMap",
    t.ZodSet = "ZodSet",
    t.ZodFunction = "ZodFunction",
    t.ZodLazy = "ZodLazy",
    t.ZodLiteral = "ZodLiteral",
    t.ZodEnum = "ZodEnum",
    t.ZodEffects = "ZodEffects",
    t.ZodNativeEnum = "ZodNativeEnum",
    t.ZodOptional = "ZodOptional",
    t.ZodNullable = "ZodNullable",
    t.ZodDefault = "ZodDefault",
    t.ZodCatch = "ZodCatch",
    t.ZodPromise = "ZodPromise",
    t.ZodBranded = "ZodBranded",
    t.ZodPipeline = "ZodPipeline",
    t.ZodReadonly = "ZodReadonly"
}
)(pt || (pt = {}));
const ZY = (t,e={
    message: `Input not instance of ${t.name}`
})=>Tp(n=>n instanceof t, e)
  , Se = Vi.create
  , Pn = z1.create
  , qY = z4.create
  , WY = Z1.create
  , br = L0.create
  , GY = il.create
  , KY = B4.create
  , YY = O0.create
  , QY = R0.create
  , XY = Nd.create
  , JY = Uc.create
  , eQ = Vo.create
  , tQ = U4.create
  , le = Wi.create
  , I9 = zn.create
  , v = zn.strictCreate
  , Oe = P0.create
  , nQ = dh.create
  , rQ = $0.create
  , sr = Ua.create
  , sQ = F0.create
  , iQ = H4.create
  , aQ = al.create
  , oQ = bd.create
  , cQ = N0.create
  , Ye = V0.create
  , lQ = q1.create
  , _a = B0.create
  , dQ = Vd.create
  , Ib = ea.create
  , x_ = Pa.create
  , uQ = W1.create
  , hQ = ea.createWithPreprocess
  , fQ = y5.create
  , pQ = ()=>Se().optional()
  , mQ = ()=>Pn().optional()
  , gQ = ()=>br().optional()
  , yQ = {
    string: t=>Vi.create({
        ...t,
        coerce: !0
    }),
    number: t=>z1.create({
        ...t,
        coerce: !0
    }),
    boolean: t=>L0.create({
        ...t,
        coerce: !0
    }),
    bigint: t=>Z1.create({
        ...t,
        coerce: !0
    }),
    date: t=>il.create({
        ...t,
        coerce: !0
    })
}
  , CQ = yt;
var bQ = Object.freeze({
    __proto__: null,
    defaultErrorMap: Fd,
    setErrorMap: _Y,
    getErrorMap: F4,
    makeIssue: N4,
    EMPTY_PATH: IY,
    addIssueToContext: Be,
    ParseStatus: Kr,
    INVALID: yt,
    DIRTY: ed,
    OK: ys,
    isAborted: D9,
    isDirty: S9,
    isValid: M0,
    isAsync: T0,
    get util() {
        return Wt
    },
    get objectUtil() {
        return x9
    },
    ZodParsedType: He,
    getParsedType: b1,
    ZodType: jt,
    datetimeRegex: w_,
    ZodString: Vi,
    ZodNumber: z1,
    ZodBigInt: Z1,
    ZodBoolean: L0,
    ZodDate: il,
    ZodSymbol: B4,
    ZodUndefined: O0,
    ZodNull: R0,
    ZodAny: Nd,
    ZodUnknown: Uc,
    ZodNever: Vo,
    ZodVoid: U4,
    ZodArray: Wi,
    ZodObject: zn,
    ZodUnion: P0,
    ZodDiscriminatedUnion: dh,
    ZodIntersection: $0,
    ZodTuple: Ua,
    ZodRecord: F0,
    ZodMap: H4,
    ZodSet: al,
    ZodFunction: bd,
    ZodLazy: N0,
    ZodLiteral: V0,
    ZodEnum: q1,
    ZodNativeEnum: B0,
    ZodPromise: Vd,
    ZodEffects: ea,
    ZodTransformer: ea,
    ZodOptional: Pa,
    ZodNullable: W1,
    ZodDefault: U0,
    ZodCatch: H0,
    ZodNaN: z4,
    BRAND: HY,
    ZodBranded: Mp,
    ZodPipeline: y5,
    ZodReadonly: z0,
    custom: Tp,
    Schema: jt,
    ZodSchema: jt,
    late: zY,
    get ZodFirstPartyTypeKind() {
        return pt
    },
    coerce: yQ,
    any: XY,
    array: le,
    bigint: WY,
    boolean: br,
    date: GY,
    discriminatedUnion: nQ,
    effect: Ib,
    enum: lQ,
    function: oQ,
    instanceof: ZY,
    intersection: rQ,
    lazy: cQ,
    literal: Ye,
    map: iQ,
    nan: qY,
    nativeEnum: _a,
    never: eQ,
    null: QY,
    nullable: uQ,
    number: Pn,
    object: I9,
    oboolean: gQ,
    onumber: mQ,
    optional: x_,
    ostring: pQ,
    pipeline: fQ,
    preprocess: hQ,
    promise: dQ,
    record: sQ,
    set: aQ,
    strictObject: v,
    string: Se,
    symbol: KY,
    transformer: Ib,
    tuple: sr,
    undefined: YY,
    union: Oe,
    unknown: JY,
    void: tQ,
    NEVER: CQ,
    ZodIssueCode: Ee,
    quotelessJson: SY,
    ZodError: ei
});
function va(t) {
    return typeof t == "string" && t.match(/^\d{4}-([0]\d|1[0-2])-([0-2]\d|3[01])$/) !== null
}
function ju(t) {
    return vQ.safeParse(t).success
}
const Eb = Tp(t=>va(t), "Invalid timeless date format")
  , vQ = v({
    fromDate: Eb,
    toDate: Eb,
    label: Se(),
    resolution: x_(_a(mt))
})
  , zs = t=>({
    ...t,
    create: e=>({
        [t.property]: wQ(e, t)
    }),
    match: e=>t.property in e,
    allowMultiSelect: !1,
    getCompareOption: e=>{
        const n = La(e[t.property]);
        if ("null"in n)
            return n.null ? "is" : "not";
        if ("gte"in n && "lt"in n || "in"in n)
            return "within";
        if ("lte"in n)
            return n.lte === "P0D" ? "is" : "before";
        if ("lt"in n)
            return n.lt === "P0D" ? "not" : "before";
        if ("gt"in n)
            return n.gt === "P0D" ? "not" : "after";
        if ("gte"in n)
            return n.gte === "P0D" ? "is" : "after";
        throw new zt(n)
    }
    ,
    selectedValues(e) {
        const n = La(e[t.property]);
        if ("null"in n)
            return [Ve];
        if ("gte"in n && "lt"in n)
            return [[n.gte, n.lt]];
        if ("neq"in n && n.neq) {
            if ("gte"in n)
                return [[n.neq, n.gte]];
            if ("gt"in n)
                return [[n.neq, n.gt]];
            if ("lt"in n)
                return [[n.lt, n.neq]];
            if ("lte"in n)
                return [[n.lte, n.neq]];
            throw new zt(n)
        } else {
            if ("lte"in n)
                return [n.lte];
            if ("lt"in n)
                return [n.lt];
            if ("gte"in n)
                return [n.gte];
            if ("gt"in n)
                return [n.gt];
            if ("in"in n)
                throw new Error("invariant: patchLegacyDateFilter not working")
        }
        throw new zt(n)
    },
    compareOptions: e=>{
        const n = La(e[0]);
        return n === Ve || n === "P0D" ? "equalValue" : Array.isArray(n) ? "dateRange" : "date"
    }
    ,
    defaultCompareOption: e=>{
        const n = La(e[0]);
        return n === Ve ? "is" : Array.isArray(n) ? "within" : t.defaultCompareOptionForDates
    }
});
function Z4(t) {
    if (typeof t == "object" && t !== null) {
        if (Array.isArray(t)) {
            for (const e of t)
                if (Z4(e))
                    return !0
        } else
            for (const e in t)
                if (e === "fromDate" && "toDate"in t || Z4(t[e]))
                    return !0
    }
    return !1
}
function La(t) {
    if (typeof t != "object" || t == null)
        return t;
    if ("fromDate"in t && "toDate"in t) {
        const n = t;
        return [n.fromDate, n.toDate]
    }
    let e = Fa(t);
    for (const n in e) {
        let r = e[n];
        if (Array.isArray(r) && r.length === 1 && r[0] && typeof r[0] == "object" && "fromDate"in r[0] && (r = r[0]),
        !(r && typeof r == "object" && "fromDate"in r && "toDate"in r)) {
            const s = La(r);
            e[n] = s;
            continue
        }
        if (n === "in")
            delete e[n],
            e = {
                ...e,
                gte: r.fromDate,
                lt: r.toDate
            };
        else {
            const {fromDate: s, toDate: i} = r;
            let a;
            if (n === "gte")
                a = {
                    gte: i,
                    neq: s
                };
            else if (n === "lt")
                a = {
                    lt: s,
                    neq: i
                };
            else if (n === "lte")
                a = {
                    lte: s,
                    neq: i
                };
            else if (n === "gt")
                a = {
                    gt: i,
                    neq: s
                };
            else
                throw new Error("unhandled case");
            delete e[n],
            e = {
                ...e,
                ...a
            }
        }
    }
    return e
}
const wQ = (t,e)=>{
    const {compareOption: n, values: r} = t
      , {defaultCompareOptionForDates: s} = e
      , i = s === "before" ? "lte" : "gte";
    let a = r[0];
    if (typeof a != "string" && "fromDate"in a && (a = La(a)),
    Array.isArray(r) && r.length === 2)
        throw new Error(`invariant: should only be a single value not ${JSON.stringify(r)}`);
    if (Array.isArray(a) && a.length === 2) {
        const [o,l] = a;
        if (n === "within" || n === "is")
            return {
                gte: o,
                lt: l
            };
        if (n === "before")
            return i === "lte" ? {
                lte: o,
                neq: l
            } : {
                lt: o,
                neq: l
            };
        if (n === "after")
            return i === "gte" ? {
                gte: l,
                neq: o
            } : {
                gt: l,
                neq: o
            };
        throw new Error(`Invalid compare option ${n} for date range`)
    }
    return a === Ve ? {
        null: n !== "not"
    } : typeof a == "string" && n === "within" ? s === "before" ? i === "lte" ? {
        lte: a
    } : {
        lt: a
    } : i === "gte" ? {
        gte: a
    } : {
        gt: a
    } : n === "before" || n === "is" ? i === "lte" ? {
        lte: a
    } : {
        lt: a
    } : i === "gte" ? {
        gte: a
    } : {
        gt: a
    }
}
;
class Sn {
    static addDuration(e, n) {
        if (e = typeof e == "string" ? n0(e) : VA(e),
        isNaN(e.getTime()))
            throw new TypeError(`invalid date: "${e}"`);
        const r = jb.exec(n);
        if (!r || n.length < 3)
            throw new TypeError(`invalid duration: "${n}". Must be an ISO 8601 duration. See https://en.wikipedia.org/wiki/ISO_8601#Durations`);
        const s = r[1] === "-" ? "sub" : "add"
          , i = kQ.reduce((o,l,d)=>{
            const u = r[d + 2];
            return u && (o[l] = parseInt(u, 10)),
            o
        }
        , {});
        return (s === "sub" ? Sd : UA)(e, i)
    }
    static isDuration(e) {
        return e.length >= 3 && jb.test(e)
    }
    static format(e) {
        const n = e.match(/\-?P(\d)W$/)
          , r = e.match(/\-?P(\d)M$/);
        if (n) {
            const i = parseInt(n[1], 10);
            return `${i} week${i > 1 ? "s" : ""}`
        }
        const s = Sn.addDuration(new Date, e);
        return BA(s, {
            unit: r ? "month" : void 0,
            roundingMethod: "round"
        })
    }
}
const Ab = bQ.string()
  , jb = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/
  , kQ = ["years", "months", "weeks", "days", "hours", "minutes", "seconds"];
class xQ {
    constructor(e={}) {
        this.comparatorOverrides = e,
        this.defaultComparators = {
            or: (n,r,s,i,a)=>s.some(o=>this.matchElement(o, i, a)),
            and: (n,r,s,i,a)=>s.every(o=>this.matchElement(o, i, a)),
            null: (n,r,s)=>s ? r == null : r != null,
            eq: (n,r,s)=>r === s,
            eqIgnoreCase: (n,r,s)=>Mb(r, s),
            neq: (n,r,s)=>r !== s,
            neqIgnoreCase: (n,r,s)=>!Mb(r, s),
            gte: (n,r,s)=>{
                if (va(r) && (r = r.toLocalDate()),
                r instanceof Date) {
                    if (Sn.isDuration(s))
                        return r >= Sn.addDuration(Date.now(), s);
                    if (va(s))
                        return r >= s.toLocalDate();
                    if (n2(s))
                        return r >= new Date(s);
                    if (ju(s))
                        throw new Error("Invariant: TimelessDate Range should not be used")
                }
                return r >= s
            }
            ,
            gt: (n,r,s)=>{
                if (va(r) && (r = r.toLocalDate()),
                r instanceof Date) {
                    if (Sn.isDuration(s))
                        return r > Sn.addDuration(Date.now(), s);
                    if (va(s))
                        return r > s.toLocalDate();
                    if (n2(s))
                        return r > new Date(s);
                    if (ju(s))
                        throw new Error("Invariant: TimelessDate Range should not be used")
                }
                return r > s
            }
            ,
            lt: (n,r,s)=>{
                if (va(r) && (r = r.toLocalDate()),
                r instanceof Date) {
                    if (Sn.isDuration(s))
                        return r < Sn.addDuration(Date.now(), s);
                    if (va(s))
                        return r < s.toLocalDate();
                    if (n2(s))
                        return r < new Date(s);
                    if (ju(s))
                        throw new Error("Invariant: TimelessDate Range should not be used")
                }
                return r < s
            }
            ,
            lte: (n,r,s)=>{
                if (va(r) && (r = r.toLocalDate()),
                Sn.isDuration(s))
                    return r <= Sn.addDuration(Date.now(), s);
                if (va(s))
                    return r <= s.toLocalDate();
                if (n2(s))
                    return r <= new Date(s);
                if (ju(s))
                    throw new Error("Invariant: TimelessDate Range should not be used");
                return r <= s
            }
            ,
            contains: (n,r,s)=>r !== void 0 && r.toLowerCase().indexOf(s.toLowerCase()) > -1,
            notContains: (n,r,s)=>r.toLowerCase().indexOf(s.toLowerCase()) === -1,
            startsWith: (n,r,s)=>r.toLowerCase().indexOf(s.toLowerCase()) === 0,
            notStartsWith: (n,r,s)=>r.toLowerCase().indexOf(s.toLowerCase()) !== 0,
            endsWith: (n,r,s)=>r.toLowerCase().indexOf(s.toLowerCase()) === r.length - s.length,
            notEndsWith: (n,r,s)=>r.toLowerCase().indexOf(s.toLowerCase()) !== r.length - s.length,
            length: (n,r,s,i,a)=>this.matchElement(s, i, [...a, n]),
            some: (n,r,s)=>r.some(i=>this.matchElement(s, i)),
            every: (n,r,s)=>r && r.length > 0 && r.every(i=>this.matchElement(s, i)),
            in: (n,r,s)=>{
                if (r instanceof Date && Tb(s))
                    throw new Error("Invariant: TimelessDate Range should not be used");
                return s.find(i=>r === i) !== void 0
            }
            ,
            nin: (n,r,s)=>{
                if (r instanceof Date && Tb(s))
                    throw new Error("Invariant: TimelessDate Range should not be used");
                return s.find(i=>r === i) === void 0
            }
            ,
            default: (n,r,s,i,a)=>Array.isArray(r) ? this.matchElement({
                some: {
                    [n]: s
                }
            }, i, a) : this.matchElement(s, i, [...a, n])
        }
    }
    matchElement(e, n, r=[]) {
        let s = !0;
        for (const i in e) {
            if (!s)
                break;
            const a = e[i];
            if (a === void 0)
                continue;
            const o = DQ(n, r)
              , l = this.comparatorOverrides[i];
            if (l) {
                s = l(i, o, a, n, r, this);
                continue
            }
            const d = this.defaultComparators[i];
            if (d) {
                s = d(i, o, a, n, r);
                continue
            }
            const u = this.comparatorOverrides.default;
            u ? s = u(i, o, a, n, r, this) : s = this.defaultComparators.default(i, o, a, n, r)
        }
        return s
    }
}
function DQ(t, e) {
    return e.reduce((n,r)=>(n == null ? void 0 : n[r])instanceof Promise && n[r].value ? n[r].value : G2.isLazy(n == null ? void 0 : n[r]) ? n == null ? void 0 : n[r].value : n == null ? void 0 : n[r], t)
}
function Mb(t, e) {
    return typeof t == "string" ? t.toLowerCase() === e.toLowerCase() : t === e
}
function Tb(t) {
    return Array.isArray(t) && t.every(ju)
}
function n2(t) {
    return typeof t == "string" && t.match(/^\d{4}-([0]\d|1[0-2])-([0-2]\d|3[01])T\d{2}:\d{2}:\d{2}.\d{3}Z$/) !== null
}
const SQ = 2
  , Dc = class Dc extends Z3 {
    constructor(e) {
        super(),
        this._filter = {};
        const {filter: n, persistanceKey: r, storage: s="local"} = e;
        if (this.storage = s,
        r) {
            this.persistanceKey = `filter_${SQ}_${r}`;
            const i = this.storage === "local" ? ke.get(this.persistanceKey, {
                logError: !1
            }) || {} : ke.getSession(this.persistanceKey) || {};
            this.filter = i
        }
        n && (this.filter = n),
        Ln(this, {
            _filter: ut
        })
    }
    set filter(e) {
        const n = Z4(e) ? La(e) : e;
        lt(()=>{
            this._filter = n
        }
        ),
        this.persistanceKey && (Object.keys(n).length === 0 ? (ke.remove(this.persistanceKey),
        ke.removeSession(this.persistanceKey)) : this.storage === "local" ? ke.set(this.persistanceKey, n) : ke.setSession(this.persistanceKey, n))
    }
    get filter() {
        return this._filter
    }
    get isFiltering() {
        return this.filterCount > 0
    }
    get filterCount() {
        return (this._filter.and ?? this._filter.or ?? Object.keys(this._filter)).length
    }
    reset() {
        this.filter = {}
    }
    matchingFilterForKey(e, n="all") {
        var i, a;
        const r = this.filter.or || []
          , s = this.filter.and || [];
        if (n === "all") {
            if (this.filter[e])
                return this.filter[e];
            let o;
            return s.length > 0 && (o = ((i = s.find(l=>l[e])) == null ? void 0 : i[e]) || void 0),
            !o && r.length === 1 && (o = r[0][e]),
            o
        } else
            return this.filter[e] ? this.filter[e] : ((a = [...r, ...s].find(o=>o[e])) == null ? void 0 : a[e]) || void 0
    }
    get isMatchingAllFilters() {
        return "and"in this.filter
    }
    get isMatchingAnyFilters() {
        return "or"in this.filter
    }
    hasFilterOnlyForKey(e) {
        const n = Dc.filterKeys(this.filter);
        return !("or"in this.filter) && n.length === 1 && n.indexOf(e) === 0
    }
    static filterElement(e, n, r=[]) {
        return this.modelMatcher.matchElement(e, n, r)
    }
    filterElement(e) {
        return Dc.modelMatcher.matchElement(this.filter, e)
    }
    filterElements(e) {
        try {
            return super.filterElements(e)
        } catch (n) {
            return F.warning("Invalid filter ", {
                filter: JSON.parse(JSON.stringify(this.filter)),
                error: n
            }),
            e
        }
    }
    filterNotElements(e) {
        try {
            return super.filterNotElements(e)
        } catch (n) {
            return F.warning("Invalid filter ", {
                filter: JSON.parse(JSON.stringify(this.filter)),
                error: n
            }),
            e
        }
    }
    static filterKeys(e) {
        var s, i;
        const n = ["and", "or"]
          , r = [...ug(((s = e.and) == null ? void 0 : s.map(a=>Dc.filterKeys(a))) || []), ...ug(((i = e.or) == null ? void 0 : i.map(a=>Dc.filterKeys(a))) || [])];
        return [...Object.keys(e).filter(a=>n.indexOf(a) === -1), ...r].distinct()
    }
}
;
Dc.modelMatcher = new xQ({
    every: (e,n,r,s,i,a)=>!!n && n.length > 0 && (n instanceof E1 ? n.elements : n).every(o=>a.matchElement(r, o)),
    some: (e,n,r,s,i,a)=>(n instanceof E1 ? n.elements : n).some(o=>a.matchElement(r, o)),
    priority: (e,n,r,s,i,a)=>a.matchElement(r, s, [...i, e, e]),
    default: (e,n,r,s,i,a)=>n instanceof E1 || Array.isArray(n) ? a.matchElement({
        some: {
            [e]: r
        }
    }, s, i) : a.matchElement(r, s, [...i, e])
});
let T1 = Dc;
function _Q(t) {
    for (var e = -1, n = t == null ? 0 : t.length, r = 0, s = []; ++e < n; ) {
        var i = t[e];
        i && (s[r++] = i)
    }
    return s
}
var IQ = _Q;
const EQ = Cn(IQ);
var AQ = Object.prototype
  , jQ = AQ.hasOwnProperty;
function MQ(t, e) {
    return t != null && jQ.call(t, e)
}
var TQ = MQ
  , LQ = TQ
  , OQ = hA;
function RQ(t, e) {
    return t != null && OQ(t, e, LQ)
}
var PQ = RQ;
const ir = Cn(PQ);
var Ze;
(function(t) {
    t.Duration = {
        twelveHours: 12 * be.HOUR,
        twentyFourHours: be.DAY,
        fortyEightHours: 2 * be.DAY,
        oneWeek: be.WEEK,
        twoWeeks: 2 * be.WEEK,
        fourWeeks: 4 * be.WEEK
    },
    t.SLAStatusThresholdsInHours = {
        highRisk: 24,
        mediumRisk: 24 * 7
    };
    let e;
    (function(i) {
        i.Breached = "Breached",
        i.HighRisk = "HighRisk",
        i.MediumRisk = "MediumRisk",
        i.LowRisk = "LowRisk",
        i.Completed = "Completed",
        i.Failed = "Failed"
    }
    )(e = t.Status || (t.Status = {})),
    t.all = Object.values(e).filter(i=>typeof i == "string");
    function n(i) {
        switch (i) {
        case "Breached":
            return "Breached";
        case "Completed":
            return "Achieved";
        case "Failed":
            return "Failed";
        case "HighRisk":
            return "High Risk";
        case "MediumRisk":
            return "Moderate Risk";
        case "LowRisk":
            return "Low Risk";
        case null:
            return "No SLA";
        default:
            Gc(i)
        }
    }
    t.getStatusLabel = n;
    function r(i) {
        switch (i) {
        case "Breached":
            return 0;
        case "HighRisk":
            return 1;
        case "MediumRisk":
            return 2;
        case "LowRisk":
            return 3;
        case "Completed":
            return 4;
        case "Failed":
            return 5;
        default:
            return 6
        }
    }
    t.getSlaStatusOrder = r;
    function s(i) {
        const {slaBreachesAt: a, completedAt: o, canceledAt: l} = i
          , d = new Date;
        if (!(!a || l))
            return o && a < o ? "Failed" : o && a >= o ? "Completed" : a <= d ? "Breached" : d >= new Date(a.getTime() - t.SLAStatusThresholdsInHours.highRisk * be.HOUR) ? "HighRisk" : d >= new Date(a.getTime() - t.SLAStatusThresholdsInHours.mediumRisk * be.HOUR) ? "MediumRisk" : "LowRisk"
    }
    t.getSlaStatus = s
}
)(Ze || (Ze = {}));
var St;
(function(t) {
    v({
        assignee: Oe([v({
            id: v({
                in: le(Se())
            })
        }), v({
            id: v({
                nin: le(Se())
            })
        }), v({
            or: le(Oe([v({
                id: v({
                    in: le(Se())
                })
            }), v({
                null: Ye(!0)
            }), v({
                active: v({
                    eq: Ye(!1)
                })
            }), v({
                isMe: v({
                    eq: Ye(!0)
                })
            })]))
        }), v({
            and: le(Oe([v({
                id: v({
                    nin: le(Se())
                })
            }), v({
                null: Ye(!1)
            }), v({
                active: v({
                    eq: Ye(!0)
                })
            }), v({
                or: le(Oe([v({
                    null: Ye(!0)
                }), v({
                    active: v({
                        eq: Ye(!0)
                    })
                }), v({
                    isMe: v({
                        eq: Ye(!1)
                    })
                })]))
            })]))
        })])
    }),
    t.assignee = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = [];
            let o = !1
              , l = !1
              , d = !1;
            for (const u of s)
                u === Ve ? o = !0 : u === it ? l = !0 : u === qr ? d = !0 : a.push(u);
            if (i === "is") {
                const u = {
                    or: []
                };
                return o && u.or.push({
                    null: !0
                }),
                l && u.or.push({
                    isMe: {
                        eq: !0
                    }
                }),
                d && u.or.push({
                    active: {
                        eq: !1
                    }
                }),
                a.length && u.or.push({
                    id: {
                        in: a
                    }
                }),
                {
                    assignee: u
                }
            } else {
                const u = {
                    and: a.length ? [{
                        id: {
                            nin: a
                        }
                    }] : []
                };
                return o && u.and.push({
                    null: !1
                }),
                l && u.and.push({
                    or: [{
                        null: !0
                    }, {
                        isMe: {
                            eq: !1
                        }
                    }]
                }),
                d && u.and.push({
                    active: {
                        eq: !0
                    }
                }),
                {
                    assignee: u
                }
            }
        }
        ,
        match: r=>"assignee"in r,
        getCompareOption: r=>"or"in r.assignee || "id"in r.assignee && "in"in r.assignee.id ? "is" : "not",
        selectedValues(r) {
            if ("id"in r.assignee)
                return "in"in r.assignee.id ? r.assignee.id.in : r.assignee.id.nin;
            if ("or"in r.assignee) {
                const s = [];
                for (const i of r.assignee.or)
                    "id"in i ? s.push(...i.id.in) : "null"in i ? s.push(Ve) : "isMe"in i ? s.push(it) : "active"in i && s.push(qr);
                return s
            } else if ("and"in r.assignee) {
                const s = [];
                for (const i of r.assignee.and)
                    "id"in i ? s.push(...i.id.nin) : "null"in i ? s.push(Ve) : "or"in i ? s.push(it) : "active"in i && s.push(qr);
                return s
            }
            return []
        }
    },
    Oe([v({
        and: le(v({
            sourceType: v({
                eq: Se()
            })
        }))
    }), v({
        or: le(v({
            sourceType: v({
                eq: Se()
            })
        }))
    }), v({
        or: le(Oe([v({
            every: v({
                sourceType: v({
                    neq: Se()
                })
            })
        }), v({
            length: v({
                eq: Pn()
            })
        })]))
    }), v({
        or: le(Oe([v({
            every: v({
                sourceType: v({
                    nin: le(Se())
                })
            })
        }), v({
            length: v({
                eq: Pn()
            })
        })]))
    }), v({
        length: v({
            eq: Pn()
        })
    })]),
    t.attachments = {
        compareOptions: "collection",
        defaultCompareOption: "any",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return s.length === 0 && ["all", "any"].indexOf(i) > -1 ? {
                attachments: {
                    length: {
                        eq: 0
                    }
                }
            } : i === "all" ? {
                attachments: {
                    and: s.map(a=>({
                        sourceType: {
                            eq: a
                        }
                    }))
                }
            } : i === "any" ? {
                attachments: {
                    or: s.map(a=>({
                        sourceType: {
                            eq: a
                        }
                    }))
                }
            } : i === "notAll" ? {
                attachments: {
                    or: [...s.map(a=>({
                        every: {
                            sourceType: {
                                neq: a
                            }
                        }
                    })), {
                        length: {
                            eq: 0
                        }
                    }]
                }
            } : {
                attachments: {
                    or: [{
                        every: {
                            sourceType: {
                                nin: s
                            }
                        }
                    }, {
                        length: {
                            eq: 0
                        }
                    }]
                }
            }
        }
        ,
        match: r=>"attachments"in r,
        getCompareOption: r=>{
            const s = "length"in r.attachments || "and"in r.attachments || r.attachments.or.find(a=>ir(a, ["every", "sourceType", "neq"])) !== void 0
              , i = "length"in r.attachments || "and"in r.attachments || "or"in r.attachments && "sourceType"in (r.attachments.or[0] || {});
            return s ? i ? "all" : "notAll" : i ? "any" : "neither"
        }
        ,
        selectedValues(r) {
            return "length"in r.attachments ? [] : "and"in r.attachments ? r.attachments.and.map(s=>s.sourceType.eq) : r.attachments.or.flatMap(s=>{
                if ("sourceType"in s)
                    return s.sourceType.eq;
                if ("every"in s)
                    return "nin"in s.every.sourceType ? s.every.sourceType.nin : s.every.sourceType.neq
            }
            ).filter(Boolean)
        }
    },
    t.completedAt = zs({
        defaultCompareOptionForDates: "after",
        property: "completedAt",
        nullable: !0
    }),
    t.updatedAt = zs({
        defaultCompareOptionForDates: "after",
        property: "updatedAt",
        nullable: !1
    }),
    t.startedAt = zs({
        defaultCompareOptionForDates: "after",
        property: "startedAt",
        nullable: !1
    }),
    t.triagedAt = zs({
        defaultCompareOptionForDates: "after",
        property: "triagedAt",
        nullable: !1
    }),
    t.createdAt = zs({
        defaultCompareOptionForDates: "after",
        property: "createdAt",
        nullable: !1
    }),
    t.dueDate = zs({
        defaultCompareOptionForDates: "before",
        property: "dueDate",
        nullable: !0
    }),
    v({
        autoClosedAt: v({
            null: br()
        })
    }),
    t.autoClosedAt = {
        create: r=>{
            const {compareOption: s} = r;
            return {
                autoClosedAt: {
                    null: s !== "is"
                }
            }
        }
        ,
        match: r=>"autoClosedAt"in r,
        getCompareOption: r=>r.autoClosedAt.null ? "not" : "is",
        compareOptions: "equalValue",
        defaultCompareOption: "is"
    },
    v({
        creator: Oe([v({
            id: Oe([v({
                in: le(Se())
            }), v({
                nin: le(Se())
            })])
        }), v({
            and: le(Oe([v({
                id: v({
                    nin: le(Se())
                })
            }), v({
                isMe: v({
                    eq: Ye(!1)
                })
            }), v({
                active: v({
                    eq: Ye(!0)
                })
            })]))
        }), v({
            or: le(Oe([v({
                id: v({
                    in: le(Se())
                })
            }), v({
                isMe: v({
                    eq: Ye(!0)
                })
            }), v({
                active: v({
                    eq: Ye(!1)
                })
            })]))
        })])
    }),
    t.creator = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = [];
            let o = !1
              , l = !1;
            for (const d of s)
                d === it ? o = !0 : d === qr ? l = !0 : a.push(d);
            if (i === "is") {
                const d = {
                    or: [{
                        id: {
                            in: a
                        }
                    }]
                };
                return o && d.or.push({
                    isMe: {
                        eq: !0
                    }
                }),
                l && d.or.push({
                    active: {
                        eq: !1
                    }
                }),
                {
                    creator: d
                }
            } else {
                const d = {
                    and: a.length ? [{
                        id: {
                            nin: a
                        }
                    }] : []
                };
                return o && d.and.push({
                    isMe: {
                        eq: !1
                    }
                }),
                l && d.and.push({
                    active: {
                        eq: !0
                    }
                }),
                {
                    creator: d
                }
            }
        }
        ,
        match: r=>"creator"in r,
        getCompareOption: r=>"or"in r.creator || "id"in r.creator && "in"in r.creator.id ? "is" : "not",
        selectedValues(r) {
            if ("id"in r.creator)
                return "in"in r.creator.id ? r.creator.id.in : r.creator.id.nin;
            if ("or"in r.creator) {
                const s = [];
                for (const i of r.creator.or)
                    "id"in i ? s.push(...i.id.in) : "isMe"in i ? s.push(it) : "active"in i && s.push(qr);
                return s
            } else if ("and"in r.creator) {
                const s = [];
                for (const i of r.creator.and)
                    "id"in i ? s.push(...i.id.nin) : "isMe"in i ? s.push(it) : "active"in i && s.push(qr);
                return s
            }
            return []
        }
    },
    v({
        cycle: Oe([v({
            id: v({
                eq: Se()
            })
        }), v({
            or: le(Oe([v({
                isActive: v({
                    eq: Ye(!0)
                })
            }), v({
                isInCooldown: v({
                    eq: Ye(!0)
                })
            }), v({
                isNext: v({
                    eq: Ye(!0)
                })
            }), v({
                isPrevious: v({
                    eq: Ye(!0)
                })
            }), v({
                isPast: v({
                    eq: Ye(!0)
                })
            }), v({
                isFuture: v({
                    eq: Ye(!0)
                })
            }), v({
                null: Ye(!0)
            })]))
        }), v({
            and: le(Oe([v({
                isActive: v({
                    eq: Ye(!1)
                })
            }), v({
                isInCooldown: v({
                    eq: Ye(!1)
                })
            }), v({
                isNext: v({
                    eq: Ye(!1)
                })
            }), v({
                isPrevious: v({
                    eq: Ye(!1)
                })
            }), v({
                isPast: v({
                    eq: Ye(!1)
                })
            }), v({
                isFuture: v({
                    eq: Ye(!1)
                })
            }), v({
                null: Ye(!1)
            })]))
        })])
    }),
    t.cycle = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , [a,o] = Iu(s, h=>h !== Ve)
              , l = o.length > 0
              , d = h=>i === "not" ? {
                or: [{
                    null: !0
                }, {
                    [h]: {
                        eq: !1
                    }
                }]
            } : {
                [h]: {
                    eq: !0
                }
            }
              , u = Lb([a.includes(O4) ? d("isNext") : void 0, a.includes(R4) ? d("isPrevious") : void 0, a.includes(T4) ? d("isActive") : void 0, a.includes(L4) ? d("isInCooldown") : void 0, a.includes(P4) ? d("isPast") : void 0, a.includes($4) ? d("isFuture") : void 0, l ? {
                null: i === "is"
            } : void 0]);
            return i === "is" ? {
                cycle: {
                    or: u
                }
            } : {
                cycle: {
                    and: u
                }
            }
        }
        ,
        match: r=>"cycle"in r,
        getCompareOption: r=>"or"in r.cycle ? "is" : "not",
        selectedValues(r) {
            const s = "or"in r.cycle ? r.cycle.or : "and"in r.cycle ? r.cycle.and : [];
            if (s.find(i=>"id"in i))
                throw new Error("Incompatible cycle filter");
            return [co(s, "isPrevious") ? R4 : void 0, co(s, "isNext") ? O4 : void 0, co(s, "isActive") ? T4 : void 0, co(s, "isInCooldown") ? L4 : void 0, co(s, "isPast") ? P4 : void 0, co(s, "isFuture") ? $4 : void 0, co(s, "null") ? Ve : void 0].concrete()
        }
    },
    Oe([v({
        and: sr([v({
            slaStatus: v({
                nin: le(Oe([_a(Ze.Status), Ye(Ve)]))
            })
        }), v({
            slaStatus: v({
                null: Ye(!1)
            })
        })])
    }), v({
        slaStatus: Oe([v({
            in: le(Oe([_a(Ze.Status), Ye(Ve)]))
        }), v({
            nin: le(Oe([_a(Ze.Status), Ye(Ve)]))
        })])
    }), v({
        or: sr([v({
            slaStatus: v({
                in: le(Oe([_a(Ze.Status), Ye(Ve)]))
            })
        }), v({
            slaStatus: v({
                null: Ye(!0)
            })
        })])
    })]),
    t.slaStatus = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , [a,o] = Iu(s, d=>d !== Ve)
              , l = o.length > 0;
            return l && i === "is" ? {
                or: [{
                    slaStatus: {
                        in: a
                    }
                }, {
                    slaStatus: {
                        null: !0
                    }
                }]
            } : l && i === "not" ? {
                and: [{
                    slaStatus: {
                        nin: a
                    }
                }, {
                    slaStatus: {
                        null: !1
                    }
                }]
            } : a.length > 0 && i === "is" ? {
                slaStatus: {
                    in: a
                }
            } : a.length > 0 && i === "not" ? {
                slaStatus: {
                    nin: a
                }
            } : {
                slaStatus: {
                    in: []
                }
            }
        }
        ,
        match: r=>"slaStatus"in r ? !0 : "and"in r && Array.isArray(r.and) && typeof r.and[0] == "object" ? "slaStatus"in r.and[0] : "or"in r && Array.isArray(r.or) && typeof r.or[0] == "object" ? "slaStatus"in r.or[0] : !1,
        getCompareOption: r=>"or"in r || "slaStatus"in r && "in"in r.slaStatus ? "is" : "not",
        selectedValues(r) {
            return "or"in r ? [...r.or[0].slaStatus.in, Ve] : "and"in r ? [...r.and[0].slaStatus.nin, Ve] : "in"in r.slaStatus ? [...r.slaStatus.in] : "nin"in r.slaStatus ? [...r.slaStatus.nin] : []
        }
    },
    v({
        estimate: Oe([v({
            in: le(Pn())
        }), v({
            nin: le(Pn())
        }), v({
            or: sr([v({
                in: le(Pn())
            }), v({
                null: Ye(!0)
            })])
        }), v({
            and: sr([v({
                nin: le(Pn())
            }), v({
                null: Ye(!1)
            })])
        })])
    }),
    t.estimate = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = Iu(s, u=>u !== Ve)
              , o = a[0]
              , d = a[1].length > 0;
            return d && i === "is" ? {
                estimate: {
                    or: [{
                        in: o
                    }, {
                        null: !0
                    }]
                }
            } : d && i === "not" ? {
                estimate: {
                    and: [{
                        nin: o
                    }, {
                        null: !1
                    }]
                }
            } : i === "is" ? {
                estimate: {
                    in: o
                }
            } : {
                estimate: {
                    nin: o
                }
            }
        }
        ,
        match: r=>"estimate"in r,
        getCompareOption: r=>"or"in r.estimate || "in"in r.estimate ? "is" : "not",
        selectedValues(r) {
            return "or"in r.estimate ? [...r.estimate.or[0].in, Ve] : "and"in r.estimate ? [...r.estimate.and[0].nin, Ve] : "in"in r.estimate ? r.estimate.in : r.estimate.nin
        }
    };
    const e = v({
        name: Oe([v({
            eq: Se()
        }), v({
            eqIgnoreCase: Se()
        })])
    })
      , n = v({
        parent: v({
            name: v({
                eq: Se()
            })
        })
    });
    Oe([v({
        length: v({
            eq: Ye(0)
        })
    }), v({
        and: le(v({
            or: sr([e, n])
        }))
    }), v({
        or: le(v({
            or: sr([e, n])
        }))
    }), v({
        or: sr([v({
            every: v({
                and: sr([v({
                    name: v({
                        nin: le(Se())
                    })
                }), v({
                    parent: v({
                        name: v({
                            nin: le(Se())
                        })
                    })
                })])
            })
        }), v({
            length: v({
                eq: Ye(0)
            })
        })])
    }), v({
        or: le(Oe([v({
            every: v({
                and: sr([v({
                    name: Oe([v({
                        neq: Se()
                    }), v({
                        neqIgnoreCase: Se()
                    })])
                }), v({
                    parent: I9({
                        name: I9({
                            neq: Se()
                        })
                    })
                })])
            })
        }), v({
            length: v({
                eq: Ye(0)
            })
        })]))
    })]),
    t.labels = {
        compareOptions: "collection",
        defaultCompareOption: "all",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = {
                labels: {}
            };
            return s.length === 0 && ["all", "any"].indexOf(i) > -1 ? {
                labels: {
                    length: {
                        eq: 0
                    }
                }
            } : i === "all" ? (a.labels = {
                and: s.map(o=>({
                    or: [{
                        name: {
                            eq: o
                        }
                    }, {
                        parent: {
                            name: {
                                eq: o
                            }
                        }
                    }]
                }))
            },
            a) : i === "any" ? (a.labels = {
                or: s.map(o=>({
                    or: [{
                        name: {
                            eq: o
                        }
                    }, {
                        parent: {
                            name: {
                                eq: o
                            }
                        }
                    }]
                }))
            },
            a) : i === "notAll" ? (a.labels = {
                or: [...s.map(o=>({
                    every: {
                        and: $Q([{
                            name: {
                                neq: o
                            }
                        }, {
                            parent: {
                                name: {
                                    neq: o
                                }
                            }
                        }])
                    }
                })), {
                    length: {
                        eq: 0
                    }
                }]
            },
            a) : (a.labels = {
                or: [{
                    every: {
                        and: [{
                            name: {
                                nin: s
                            }
                        }, {
                            parent: {
                                name: {
                                    nin: s
                                }
                            }
                        }]
                    }
                }, {
                    length: {
                        eq: 0
                    }
                }]
            },
            a)
        }
        ,
        match: r=>"labels"in r,
        getCompareOption: r=>{
            const s = "length"in r.labels || "and"in r.labels || Array.isArray(r.labels.or) && r.labels.or.find(a=>ir(a, ["every", "and", 0, "name", "neq"]) || ir(a, ["every", "and", 0, "name", "neqIgnoreCase"])) !== void 0
              , i = "length"in r.labels || "and"in r.labels || "or"in r.labels && "or"in r.labels.or[0] && "name"in (r.labels.or[0].or[0] || {});
            return s ? i ? "all" : "notAll" : i ? "any" : "neither"
        }
        ,
        selectedValues(r) {
            return "length"in r.labels ? [] : "and"in r.labels ? r.labels.and.flatMap(s=>s.or.map(i=>"parent"in i ? i.parent.name.eq : "eq"in i.name ? i.name.eq : i.name.eqIgnoreCase)).distinct() : r.labels.or.flatMap(s=>{
                if ("or"in s)
                    return s.or.map(i=>"parent"in i ? i.parent.name.eq : "eq"in i.name ? i.name.eq : i.name.eqIgnoreCase);
                if ("every"in s)
                    return s.every.and.flatMap(i=>"parent"in i ? "nin"in i.parent.name ? i.parent.name.nin : i.parent.name.neq : "nin"in i.name ? i.name.nin : "neq"in i.name ? i.name.neq : i.name.neqIgnoreCase)
            }
            ).distinct().filter(Boolean)
        }
    },
    v({
        companies: Oe([v({
            or: le(Oe([v({
                every: v({
                    and: le(v({
                        id: v({
                            nin: le(Se())
                        })
                    }))
                })
            }), v({
                length: v({
                    eq: Pn()
                })
            })]))
        }), v({
            or: le(v({
                id: v({
                    in: le(Se())
                })
            }))
        })])
    }),
    t.companies = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "is" ? {
                companies: {
                    or: [{
                        id: {
                            in: s
                        }
                    }]
                }
            } : {
                companies: {
                    or: [{
                        every: {
                            and: [{
                                id: {
                                    nin: s
                                }
                            }]
                        }
                    }, {
                        length: {
                            eq: 0
                        }
                    }]
                }
            }
        }
        ,
        match: r=>"companies"in r,
        getCompareOption: r=>{
            var s;
            return (s = r.companies.or) != null && s.some(i=>"length"in i) ? "not" : "is"
        }
        ,
        selectedValues(r) {
            return this.getCompareOption(r) === "is" ? r.companies.or[0].id.in : fA(r, ["companies", "or", 0, "every", "and", 0, "id", "nin"]) ?? []
        }
    },
    v({
        priority: Oe([v({
            in: le(Pn())
        }), v({
            nin: le(Pn())
        })])
    }),
    t.priority = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "is" ? {
                priority: {
                    in: s
                }
            } : {
                priority: {
                    nin: s
                }
            }
        }
        ,
        match: r=>"priority"in r,
        getCompareOption: r=>"in"in r.priority ? "is" : "not",
        selectedValues(r) {
            return "in"in r.priority ? r.priority.in : r.priority.nin
        }
    },
    Oe([v({
        length: v({
            eq: Ye(0)
        })
    }), v({
        and: le(v({
            id: v({
                eq: Se()
            })
        }))
    }), v({
        or: le(v({
            id: v({
                eq: Se()
            })
        }))
    }), v({
        or: sr([v({
            every: v({
                id: v({
                    nin: le(Se())
                })
            })
        }), v({
            length: v({
                eq: Ye(0)
            })
        })])
    }), v({
        or: le(Oe([v({
            every: v({
                id: v({
                    neq: Se()
                })
            })
        }), v({
            length: v({
                eq: Ye(0)
            })
        })]))
    })]),
    t.projectInitiative = {
        compareOptions: "collection",
        defaultCompareOption: "any",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return s.length === 0 && ["all", "any"].indexOf(i) > -1 ? {
                project: {
                    initiatives: {
                        length: {
                            eq: 0
                        }
                    }
                }
            } : i === "all" ? {
                project: {
                    initiatives: {
                        and: s.map(a=>({
                            id: {
                                eq: a
                            }
                        }))
                    }
                }
            } : i === "any" ? {
                project: {
                    initiatives: {
                        or: s.map(a=>({
                            id: {
                                eq: a
                            }
                        }))
                    }
                }
            } : i === "notAll" ? {
                project: {
                    initiatives: {
                        or: [...s.map(a=>({
                            every: {
                                id: {
                                    neq: a
                                }
                            }
                        })), {
                            length: {
                                eq: 0
                            }
                        }]
                    }
                }
            } : {
                project: {
                    initiatives: {
                        or: [{
                            every: {
                                id: {
                                    nin: s
                                }
                            }
                        }, {
                            length: {
                                eq: 0
                            }
                        }]
                    }
                }
            }
        }
        ,
        match: r=>ir(r, ["project", "initiatives"]),
        getCompareOption: r=>{
            const s = "length"in r.project.initiatives || "and"in r.project.initiatives || r.project.initiatives.or.find(a=>{
                var o, l;
                return ((l = (o = a.every) == null ? void 0 : o.id) == null ? void 0 : l.neq) !== void 0
            }
            ) !== void 0
              , i = "length"in r.project.initiatives || "and"in r.project.initiatives || "or"in r.project.initiatives && "id"in (r.project.initiatives.or[0] || {});
            return s ? i ? "all" : "notAll" : i ? "any" : "neither"
        }
        ,
        selectedValues(r) {
            return "length"in r.project.initiatives ? [] : "and"in r.project.initiatives ? r.project.initiatives.and.map(s=>s.id.eq) : r.project.initiatives.or.flatMap(s=>{
                if ("id"in s)
                    return s.id.eq;
                if ("every"in s)
                    return "nin"in s.every.id ? s.every.id.nin : s.every.id.neq
            }
            ).filter(Boolean)
        }
    },
    Oe([v({
        length: v({
            eq: Ye(0)
        })
    }), v({
        and: le(v({
            id: v({
                eq: Se()
            })
        }))
    }), v({
        or: le(v({
            id: v({
                eq: Se()
            })
        }))
    }), v({
        or: sr([v({
            every: v({
                id: v({
                    nin: le(Se())
                })
            })
        }), v({
            length: v({
                eq: Ye(0)
            })
        })])
    }), v({
        or: le(Oe([v({
            every: v({
                id: v({
                    neq: Se()
                })
            })
        }), v({
            length: v({
                eq: Ye(0)
            })
        })]))
    })]),
    t.projectRoadmap = {
        compareOptions: "collection",
        defaultCompareOption: "any",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return s.length === 0 && ["all", "any"].indexOf(i) > -1 ? {
                project: {
                    roadmaps: {
                        length: {
                            eq: 0
                        }
                    }
                }
            } : i === "all" ? {
                project: {
                    roadmaps: {
                        and: s.map(a=>({
                            id: {
                                eq: a
                            }
                        }))
                    }
                }
            } : i === "any" ? {
                project: {
                    roadmaps: {
                        or: s.map(a=>({
                            id: {
                                eq: a
                            }
                        }))
                    }
                }
            } : i === "notAll" ? {
                project: {
                    roadmaps: {
                        or: [...s.map(a=>({
                            every: {
                                id: {
                                    neq: a
                                }
                            }
                        })), {
                            length: {
                                eq: 0
                            }
                        }]
                    }
                }
            } : {
                project: {
                    roadmaps: {
                        or: [{
                            every: {
                                id: {
                                    nin: s
                                }
                            }
                        }, {
                            length: {
                                eq: 0
                            }
                        }]
                    }
                }
            }
        }
        ,
        match: r=>ir(r, ["project", "roadmaps"]),
        getCompareOption: r=>{
            const s = "length"in r.project.roadmaps || "and"in r.project.roadmaps || r.project.roadmaps.or.find(a=>{
                var o, l;
                return ((l = (o = a.every) == null ? void 0 : o.id) == null ? void 0 : l.neq) !== void 0
            }
            ) !== void 0
              , i = "length"in r.project.roadmaps || "and"in r.project.roadmaps || "or"in r.project.roadmaps && "id"in (r.project.roadmaps.or[0] || {});
            return s ? i ? "all" : "notAll" : i ? "any" : "neither"
        }
        ,
        selectedValues(r) {
            return "length"in r.project.roadmaps ? [] : "and"in r.project.roadmaps ? r.project.roadmaps.and.map(s=>s.id.eq) : r.project.roadmaps.or.flatMap(s=>{
                if ("id"in s)
                    return s.id.eq;
                if ("every"in s)
                    return "nin"in s.every.id ? s.every.id.nin : s.every.id.neq
            }
            ).filter(Boolean)
        }
    },
    v({
        project: Oe([v({
            or: sr([v({
                id: v({
                    in: le(Se())
                })
            }), v({
                null: Ye(!0)
            })])
        }), v({
            id: Oe([v({
                in: le(Se())
            }), v({
                nin: le(Se())
            })])
        }), v({
            and: sr([v({
                id: v({
                    nin: le(Se())
                })
            }), v({
                null: Ye(!1)
            })])
        })])
    }),
    t.project = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , [a,o] = Iu(s, d=>d !== Ve)
              , l = o.length > 0;
            return l && i === "is" ? {
                project: {
                    or: [{
                        id: {
                            in: a
                        }
                    }, {
                        null: !0
                    }]
                }
            } : l && i === "not" ? {
                project: {
                    and: [{
                        id: {
                            nin: a
                        }
                    }, {
                        null: !1
                    }]
                }
            } : i === "is" ? {
                project: {
                    id: {
                        in: a
                    }
                }
            } : {
                project: {
                    id: {
                        nin: a
                    }
                }
            }
        }
        ,
        match: r=>"project"in r && !t.projectInitiative.match(r) && !t.projectRoadmap.match(r) && !t.projectStatus.match(r) && !t.projectStatusType.match(r),
        getCompareOption: r=>"or"in r.project || "id"in r.project && "in"in r.project.id ? "is" : "not",
        selectedValues(r) {
            return "or"in r.project ? r.project.or[0].id.in.concat(Ve) : "and"in r.project ? r.project.and[0].id.nin.concat(Ve) : "in"in r.project.id ? r.project.id.in : r.project.id.nin
        }
    },
    v({
        project: v({
            status: v({
                id: Oe([v({
                    in: le(Se())
                }), v({
                    nin: le(Se())
                })])
            })
        })
    }),
    t.projectStatus = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "is" ? {
                project: {
                    status: {
                        id: {
                            in: s
                        }
                    }
                }
            } : {
                project: {
                    status: {
                        id: {
                            nin: s
                        }
                    }
                }
            }
        }
        ,
        match: r=>ir(r, ["project", "status", "id"]) || ir(r, ["project", "status", "or", 0, "id"]),
        getCompareOption: r=>"status"in r.project && "id"in r.project.status && "in"in r.project.status.id ? "is" : "not",
        selectedValues(r) {
            return "in"in r.project.status.id ? r.project.status.id.in : r.project.status.id.nin
        }
    },
    v({
        project: Oe([v({
            status: v({
                type: v({
                    in: le(Se())
                })
            })
        }), v({
            or: sr([v({
                status: v({
                    type: v({
                        nin: le(Se())
                    })
                })
            }), v({
                null: Ye(!0)
            })])
        })])
    }),
    t.projectStatusType = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "is" ? {
                project: {
                    status: {
                        type: {
                            in: s
                        }
                    }
                }
            } : {
                project: {
                    or: [{
                        status: {
                            type: {
                                nin: s
                            }
                        }
                    }, {
                        null: !0
                    }]
                }
            }
        }
        ,
        match: r=>ir(r, ["project", "status", "type"]) || ir(r, ["project", "or", 0, "status", "type"]),
        getCompareOption: r=>"status"in r.project ? "is" : "not",
        selectedValues(r) {
            return "status"in r.project ? r.project.status.type.in : r.project.or[0].status.type.nin
        }
    },
    Oe([v({
        or: sr([v({
            projectMilestone: v({
                id: Oe([v({
                    in: le(Se())
                }), v({
                    nin: le(Se())
                })])
            })
        }), v({
            projectMilestone: v({
                null: br()
            })
        })])
    }), v({
        projectMilestone: v({
            id: Oe([v({
                in: le(Se())
            }), v({
                nin: le(Se())
            })])
        })
    }), v({
        and: sr([v({
            projectMilestone: v({
                id: v({
                    nin: le(Se())
                })
            })
        }), v({
            projectMilestone: v({
                null: Ye(!1)
            })
        })])
    })]),
    t.projectMilestone = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = s.filter(l=>l !== Ve)
              , o = s.some(l=>l === Ve);
            if (i === "is") {
                const l = {
                    projectMilestone: {
                        id: {
                            in: a
                        }
                    }
                };
                return o ? {
                    or: [l, {
                        projectMilestone: {
                            null: !0
                        }
                    }]
                } : l
            } else {
                const l = {
                    projectMilestone: {
                        id: {
                            nin: a
                        }
                    }
                };
                return o ? {
                    and: [l, {
                        projectMilestone: {
                            null: !1
                        }
                    }]
                } : {
                    or: [l, {
                        projectMilestone: {
                            null: !0
                        }
                    }]
                }
            }
        }
        ,
        match: r=>"projectMilestone"in r || ir(r, ["or", 0, "projectMilestone"]) || ir(r, ["and", 0, "projectMilestone"]),
        getCompareOption: r=>"projectMilestone"in r || "or"in r && "in"in r.or[0].projectMilestone.id ? "is" : "not",
        selectedValues(r) {
            return "projectMilestone"in r ? "in"in r.projectMilestone.id ? r.projectMilestone.id.in : r.projectMilestone.id.nin : "and"in r ? r.and.length === 2 ? [...r.and[0].projectMilestone.id.nin, Ve] : r.and[0].projectMilestone.id.nin : "or"in r ? "in"in r.or[0].projectMilestone.id ? [...r.or[0].projectMilestone.id.in, Ve] : r.or[0].projectMilestone.id.nin : []
        }
    },
    v({
        searchableContent: Oe([v({
            contains: Se()
        }), v({
            notContains: Se()
        })])
    }),
    t.searchableContent = {
        compareOptions: "containsValue",
        defaultCompareOption: "contains",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "contains" ? {
                searchableContent: {
                    contains: s[s.length - 1]
                }
            } : {
                searchableContent: {
                    notContains: s[s.length - 1]
                }
            }
        }
        ,
        match: r=>"searchableContent"in r,
        getCompareOption: r=>"contains"in r.searchableContent ? "contains" : "notContains",
        selectedValues(r) {
            return "contains"in r.searchableContent ? [r.searchableContent.contains] : [r.searchableContent.notContains]
        }
    },
    v({
        state: v({
            name: Oe([v({
                in: le(Se())
            }), v({
                nin: le(Se())
            })])
        })
    }),
    t.state = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return {
                state: {
                    name: i === "is" ? {
                        in: s
                    } : {
                        nin: s
                    }
                }
            }
        }
        ,
        match: r=>"state"in r && !t.stateType.match(r),
        getCompareOption: r=>"in"in r.state.name ? "is" : "not",
        selectedValues(r) {
            return "in"in r.state.name ? r.state.name.in : r.state.name.nin
        }
    },
    v({
        state: Oe([v({
            type: v({
                in: le(_a(ye))
            })
        }), v({
            type: v({
                nin: le(_a(ye))
            })
        })])
    }),
    t.stateType = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "is" ? {
                state: {
                    type: {
                        in: s
                    }
                }
            } : {
                state: {
                    type: {
                        nin: s
                    }
                }
            }
        }
        ,
        match: r=>ir(r, ["state", "type"]) || ir(r, ["state", "or", 0, "type"]),
        getCompareOption: r=>"type"in r.state && "in"in r.state.type ? "is" : "not",
        selectedValues(r) {
            return "in"in r.state.type ? r.state.type.in : r.state.type.nin
        }
    },
    v({
        children: v({
            length: Oe([v({
                gt: Pn()
            }), v({
                eq: Pn()
            })])
        })
    }),
    t.parentIssue = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                children: {
                    length: s === "is" ? {
                        gt: 0
                    } : {
                        eq: 0
                    }
                }
            }
        }
        ,
        match: r=>"children"in r,
        getCompareOption: r=>"gt"in r.children.length ? "is" : "not"
    },
    v({
        subscribers: Oe([v({
            or: le(Oe([v({
                every: v({
                    and: le(Oe([v({
                        id: v({
                            nin: le(Se())
                        })
                    }), v({
                        isMe: v({
                            eq: br()
                        })
                    })]))
                })
            }), v({
                length: v({
                    eq: Pn()
                })
            })]))
        }), v({
            or: le(Oe([v({
                id: v({
                    in: le(Se())
                })
            }), v({
                isMe: v({
                    eq: br()
                })
            })]))
        })])
    }),
    t.subscribers = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = s.includes(it);
            if (i === "is")
                if (a) {
                    const o = s.filter(l=>l !== it);
                    return {
                        subscribers: {
                            or: [{
                                isMe: {
                                    eq: !0
                                }
                            }, {
                                id: {
                                    in: o
                                }
                            }]
                        }
                    }
                } else
                    return {
                        subscribers: {
                            or: [{
                                id: {
                                    in: s
                                }
                            }]
                        }
                    };
            else {
                const o = s.filter(l=>l !== it);
                return {
                    subscribers: {
                        or: [{
                            every: {
                                and: Lb([{
                                    id: {
                                        nin: o
                                    }
                                }, a ? {
                                    isMe: {
                                        eq: !1
                                    }
                                } : void 0])
                            }
                        }, {
                            length: {
                                eq: 0
                            }
                        }]
                    }
                }
            }
        }
        ,
        match: r=>"subscribers"in r,
        getCompareOption: r=>{
            var s;
            return (s = r.subscribers.or) != null && s.some(i=>"length"in i) ? "not" : "is"
        }
        ,
        selectedValues(r) {
            const s = this.getCompareOption(r);
            let i, a;
            return s === "is" ? (a = r.subscribers.or.filter(o=>!("isMe"in o))[0].id.in,
            i = r.subscribers.or.some(o=>"isMe"in o) ? it : void 0) : (a = r.subscribers.or[0].every.and[0].id.nin,
            i = r.subscribers.or[0].every.and[1] !== void 0 ? it : void 0),
            i ? [i].concat(a) : a
        }
    },
    v({
        team: v({
            id: Oe([v({
                in: le(Se())
            }), v({
                nin: le(Se())
            })])
        })
    }),
    t.team = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "is" ? {
                team: {
                    id: {
                        in: s
                    }
                }
            } : {
                team: {
                    id: {
                        nin: s
                    }
                }
            }
        }
        ,
        match: r=>"team"in r,
        getCompareOption: r=>"in"in r.team.id ? "is" : "not",
        selectedValues(r) {
            return "in"in r.team.id ? r.team.id.in : r.team.id.nin
        }
    },
    v({
        parent: v({
            null: br()
        })
    }),
    t.subIssue = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                parent: {
                    null: s === "not"
                }
            }
        }
        ,
        match: r=>"parent"in r,
        getCompareOption: r=>r.parent.null ? "not" : "is"
    },
    v({
        hasBlockingRelations: v({
            eq: br()
        })
    }),
    t.blockingRelation = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                hasBlockingRelations: {
                    eq: s === "is"
                }
            }
        }
        ,
        match: r=>"hasBlockingRelations"in r,
        getCompareOption: r=>r.hasBlockingRelations.eq ? "is" : "not"
    },
    v({
        hasBlockedByRelations: v({
            eq: br()
        })
    }),
    t.blockedRelation = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                hasBlockedByRelations: {
                    eq: s === "is"
                }
            }
        }
        ,
        match: r=>"hasBlockedByRelations"in r,
        getCompareOption: r=>r.hasBlockedByRelations.eq ? "is" : "not"
    },
    v({
        hasDuplicateRelations: v({
            eq: br()
        })
    }),
    t.duplicateRelation = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                hasDuplicateRelations: {
                    eq: s === "is"
                }
            }
        }
        ,
        match: r=>"hasDuplicateRelations"in r,
        getCompareOption: r=>r.hasDuplicateRelations.eq ? "is" : "not"
    },
    v({
        hasRelatedRelations: v({
            eq: br()
        })
    }),
    t.relatedRelation = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                hasRelatedRelations: {
                    eq: s === "is"
                }
            }
        }
        ,
        match: r=>"hasRelatedRelations"in r,
        getCompareOption: r=>r.hasRelatedRelations.eq ? "is" : "not"
    },
    Oe([v({
        or: sr([v({
            sourceMetadata: v({
                subType: Oe([v({
                    in: le(Se())
                }), v({
                    nin: le(Se())
                })])
            })
        }), v({
            sourceMetadata: v({
                null: br()
            })
        })])
    }), v({
        sourceMetadata: v({
            subType: Oe([v({
                in: le(Se())
            }), v({
                nin: le(Se())
            })])
        })
    }), v({
        and: sr([v({
            sourceMetadata: v({
                subType: v({
                    nin: le(Se())
                })
            })
        }), v({
            sourceMetadata: v({
                null: Ye(!1)
            })
        })])
    })]),
    t.sourceMetadata = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = s.filter(l=>l !== Ve)
              , o = s.some(l=>l === Ve);
            if (i === "is") {
                const l = {
                    sourceMetadata: {
                        subType: {
                            in: a
                        }
                    }
                };
                return o ? {
                    or: [l, {
                        sourceMetadata: {
                            null: !0
                        }
                    }]
                } : l
            } else {
                const l = {
                    sourceMetadata: {
                        subType: {
                            nin: a
                        }
                    }
                };
                return o ? {
                    and: [l, {
                        sourceMetadata: {
                            null: !1
                        }
                    }]
                } : {
                    or: [l, {
                        sourceMetadata: {
                            null: !0
                        }
                    }]
                }
            }
        }
        ,
        match: r=>"sourceMetadata"in r || ir(r, ["or", 0, "sourceMetadata"]) || ir(r, ["and", 0, "sourceMetadata"]),
        getCompareOption: r=>"sourceMetadata"in r || "or"in r && "in"in r.or[0].sourceMetadata.subType ? "is" : "not",
        selectedValues(r) {
            return "sourceMetadata"in r ? "in"in r.sourceMetadata.subType ? r.sourceMetadata.subType.in : r.sourceMetadata.subType.nin : "and"in r ? r.and.length === 2 ? [...r.and[0].sourceMetadata.subType.nin, Ve] : r.and[0].sourceMetadata.subType.nin : "or"in r ? "in"in r.or[0].sourceMetadata.subType ? [...r.or[0].sourceMetadata.subType.in, Ve] : r.or[0].sourceMetadata.subType.nin : []
        }
    },
    v({
        lastAppliedTemplate: Oe([v({
            id: v({
                in: le(Se())
            })
        }), v({
            id: v({
                nin: le(Se())
            })
        }), v({
            or: le(Oe([v({
                id: v({
                    in: le(Se())
                })
            }), v({
                null: Ye(!0)
            })]))
        }), v({
            and: le(Oe([v({
                id: v({
                    nin: le(Se())
                })
            }), v({
                null: Ye(!1)
            })]))
        })])
    }),
    t.lastAppliedTemplate = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = [];
            let o = !1;
            for (const l of s)
                l === Ve ? o = !0 : a.push(l);
            if (i === "is") {
                const l = {
                    or: []
                };
                return o && l.or.push({
                    null: !0
                }),
                a.length && l.or.push({
                    id: {
                        in: a
                    }
                }),
                {
                    lastAppliedTemplate: l
                }
            } else {
                const l = {
                    and: a.length ? [{
                        id: {
                            nin: a
                        }
                    }] : []
                };
                return o && l.and.push({
                    null: !1
                }),
                {
                    lastAppliedTemplate: l
                }
            }
        }
        ,
        match: r=>"lastAppliedTemplate"in r,
        getCompareOption: r=>"or"in r.lastAppliedTemplate || "id"in r.lastAppliedTemplate && "in"in r.lastAppliedTemplate.id ? "is" : "not",
        selectedValues(r) {
            if ("id"in r.lastAppliedTemplate)
                return "in"in r.lastAppliedTemplate.id ? r.lastAppliedTemplate.id.in : r.lastAppliedTemplate.id.nin;
            if ("or"in r.lastAppliedTemplate) {
                const s = [];
                for (const i of r.lastAppliedTemplate.or)
                    "id"in i ? s.push(...i.id.in) : "null"in i && s.push(Ve);
                return s
            } else if ("and"in r.lastAppliedTemplate) {
                const s = [];
                for (const i of r.lastAppliedTemplate.and)
                    "id"in i ? s.push(...i.id.nin) : "null"in i && s.push(Ve);
                return s
            }
            return []
        }
    }
}
)(St || (St = {}));
const $Q = t=>t
  , Lb = t=>t.filter(e=>e !== void 0);
function co(t, e) {
    for (const n of t)
        if (typeof n == "object" && n && ("or"in n && Array.isArray(n.or) && co(n.or, e) || "and"in n && Array.isArray(n.and) && co(n.and, e) || e in n))
            return !0;
    return !1
}
function ts(t) {
    const {size: e=16, mask: n=!0, overlap: r="quarter", children: s, ...i} = t
      , a = y.Children.toArray(s)
      , o = HA()
      , l = r === "none" ? 1 : r === "quarter" ? e / 4 : e / 2
      , d = Ak(a, {
        keys: u=>u.key,
        from: {
            opacity: 0,
            transform: "scale(0.9)",
            marginRight: l - e
        },
        enter: {
            opacity: 1,
            transform: "scale(1)",
            marginRight: 0
        },
        initial: {
            opacity: 1,
            transform: "scale(1)",
            marginRight: 0
        },
        leave: {
            opacity: 0,
            transform: "scale(0.9)",
            marginRight: l - e
        },
        ref: o,
        config: (u,h,f)=>f === "leave" ? {
            duration: 250,
            easing: I8.quadInOut
        } : {
            duration: 150,
            easing: I8.quadInOut
        }
    });
    return y.useEffect(()=>{
        o.start()
    }
    , [a.length]),
    c.jsx(NQ, {
        $size: e,
        $overlap: r,
        $mask: n,
        ...i,
        children: d((u,h)=>c.jsx(FQ, {
            style: u,
            children: h
        }))
    })
}
const FQ = ae(r5.div)`
  display: flex;
`
  , NQ = ae(Lt)`
  display: flex;
  align-items: center;
  & > * {
    max-width: ${({$size: t})=>t}px;
    max-height: ${({$size: t})=>t}px;
  }
  & > *:not(:first-child) {
    margin-left: ${({$size: t, $overlap: e})=>e === "none" ? 1 : e === "quarter" ? t / -4 : t / -2}px;
  }
  ${({$overlap: t, $mask: e})=>t === "none" || !e ? "" : t === "quarter" ? `
    & > *:not(:last-child) > * {
      mask: radial-gradient(104% 72.5% at 175% 50%, rgba(0, 0, 0, 0) 98.5%, rgba(0, 0, 0, 1) 100%);
    }
  ` : `
    & > *:not(:last-child) > * {
      mask: radial-gradient(circle at 100% 50%, rgba(0, 0, 0, 0) 48.5%, rgba(0, 0, 0, 1) 50%);
    }
  `}
`;
function uh(t) {
    const {relationClosed: e, relationRemoved: n, monochrome: r, ...s} = t;
    return c.jsx(x, {
        ...s,
        color: r || e ? "labelMuted" : n ? "labelFaint" : "redText",
        children: c.jsx("svg", {
            children: c.jsx("path", {
                clipRule: "evenodd",
                d: "M5.82843 1H10.1716C10.702 1 11.2107 1.21071 11.5858 1.58579L14.4142 4.41421C14.7893 4.78929 15 5.29799 15 5.82843V10.1716C15 10.702 14.7893 11.2107 14.4142 11.5858L11.5858 14.4142C11.2107 14.7893 10.702 15 10.1716 15H5.82843C5.29799 15 4.78929 14.7893 4.41421 14.4142L1.58579 11.5858C1.21071 11.2107 1 10.702 1 10.1716V5.82843C1 5.29799 1.21071 4.78929 1.58579 4.41421L4.41421 1.58579C4.78929 1.21071 5.29799 1 5.82843 1ZM4.5 6.75C4.22386 6.75 4 6.97386 4 7.25V8.75C4 9.02614 4.22386 9.25 4.5 9.25H11.5C11.7761 9.25 12 9.02614 12 8.75V7.25C12 6.97386 11.7761 6.75 11.5 6.75H4.5Z"
            })
        })
    })
}
function hh(t) {
    const {relationClosed: e, relationRemoved: n, monochrome: r, ...s} = t;
    return c.jsx(x, {
        ...s,
        color: r || e ? "labelMuted" : n ? "labelFaint" : "redText",
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M10.7461 1C12.8172 1 14.4961 2.67893 14.4961 4.75V5.24561C14.4961 5.65982 14.1603 5.99561 13.7461 5.99561C13.3319 5.99561 12.9961 5.65982 12.9961 5.24561V4.75C12.9961 3.50736 11.9887 2.5 10.7461 2.5H4.74609C3.50345 2.5 2.49609 3.50736 2.49609 4.75V10.9705C2.49609 12.2131 3.50345 13.2205 4.74609 13.2205H5.25009C5.66431 13.2205 6.00009 13.5562 6.00009 13.9705C6.00009 14.3847 5.66431 14.7205 5.25009 14.7205H4.74609C2.67503 14.7205 0.996094 13.0415 0.996094 10.9705V4.75C0.996094 2.67893 2.67503 1 4.74609 1H10.7461Z"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M12.2409 7H9.7591C9.456 7 9.16531 7.12041 8.95098 7.33473L7.33473 8.95098C7.12041 9.16531 7 9.456 7 9.7591V12.2409C7 12.544 7.12041 12.8347 7.33473 13.049L8.95098 14.6653C9.16531 14.8796 9.456 15 9.7591 15H12.2409C12.544 15 12.8347 14.8796 13.049 14.6653L14.6653 13.049C14.8796 12.8347 15 12.544 15 12.2409V9.7591C15 9.456 14.8796 9.16531 14.6653 8.95098L13.049 7.33473C12.8347 7.12041 12.544 7 12.2409 7ZM9.22222 10.1111C8.97676 10.1111 8.77778 10.3101 8.77778 10.5556V11.4444C8.77778 11.6899 8.97676 11.8889 9.22222 11.8889H12.7778C13.0232 11.8889 13.2222 11.6899 13.2222 11.4444V10.5556C13.2222 10.3101 13.0232 10.1111 12.7778 10.1111H9.22222Z"
            })]
        })
    })
}
function D_(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "M3.75 1.04a.75.75 0 0 1 .75.75v12.476a.75.75 0 0 1-1.5 0V1.79a.75.75 0 0 1 .75-.75Zm1.716.46a.5.5 0 0 1 .704-.456l7.535 3.375a.5.5 0 0 1 .012.907L6.183 8.95a.5.5 0 0 1-.717-.45v-7Z"
            })
        })
    })
}
function Lp(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M2.5 3C1.67157 3 1 3.67157 1 4.5C1 4.73688 1.14422 4.94989 1.36415 5.03787L7.35029 7.43232C7.76751 7.59921 8.23294 7.59921 8.65016 7.43232L14.6357 5.03811C14.8557 4.9501 15 4.73699 15 4.5C15 3.67157 14.3284 3 13.5 3H2.5Z"
            }), c.jsx("path", {
                d: "M15 7.24645C15 6.89272 14.6427 6.65084 14.3143 6.78221L9.20724 8.82504C8.43241 9.13497 7.56804 9.13497 6.7932 8.82504L1.6857 6.78203C1.35726 6.65066 1 6.89254 1 7.24627V11.5C1 12.3284 1.67157 13 2.5 13H13.5C14.3284 13 15 12.3284 15 11.5V7.24645Z"
            })]
        })
    })
}
function zue(t) {
    return {
        ...t,
        divider: !0
    }
}
const Zue = (t,e)=>({
    ...t,
    name: e
})
  , que = (t,e)=>({
    ...t,
    keyboardShortcut: e
});
let VQ = 0;
function ht() {
    return ++VQ
}
function Wue(t) {
    return t !== void 0 && "id"in t
}
function Gue(t) {
    return typeof t == "function"
}
var Ob;
(function(t) {
    t.auto = "auto",
    t.zero = "zero"
}
)(Ob || (Ob = {}));
const Fl = 3
  , io = rn(function(e) {
    const {cycle: n, noProgress: r, strongColors: s, ...i} = e
      , a = Pt()
      , {radius: o, perimeter: l, strokeWidth: d, strokeDasharray: u, strokeDashoffset: h} = S_()
      , f = .065 + (r ? 1 : (n == null ? void 0 : n.progress) || 0) * (.935 + Fl / l)
      , p = 360 * l / (l + Fl);
    return c.jsxs("svg", {
        width: "16",
        height: "16",
        fill: s ? a.color.labelTitle : a.color.labelMuted,
        stroke: a.color.labelFaint,
        viewBox: "0 0 16 16",
        style: {
            overflow: "visible"
        },
        ...i,
        children: [(n == null ? void 0 : n.isActive) && c.jsxs(c.Fragment, {
            children: [c.jsx("circle", {
                transform: `rotate(${-76 + Math.min(f, 1) * p} 8 8)`,
                cx: "8",
                cy: "8",
                r: o,
                fill: "none",
                strokeWidth: d,
                strokeDasharray: l + "px",
                strokeDashoffset: Fl + (l - Fl) * Math.min(f, 1) + "px",
                style: {
                    transition: "transform 0.6s, stroke-dashoffset 0.6s",
                    strokeLinecap: "round",
                    transformBox: "fill-box"
                }
            }), c.jsx("circle", {
                transform: "rotate(-76 8 8)",
                cx: "8",
                cy: "8",
                r: o,
                fill: "none",
                stroke: a.color.purpleBase,
                strokeWidth: d,
                strokeDasharray: l + "px",
                strokeDashoffset: Fl + l - (l - Fl) * f + "px",
                style: {
                    transition: "stroke-dashoffset 0.6s",
                    strokeLinecap: "round",
                    transformBox: "fill-box"
                }
            })]
        }), (n == null ? void 0 : n.isPlanned) && c.jsx("circle", {
            cx: "8",
            cy: "8",
            r: o,
            fill: "none",
            strokeWidth: d,
            strokeDasharray: u,
            strokeDashoffset: h
        }), (n === void 0 || n.isCompleted) && c.jsx("circle", {
            cx: "8",
            cy: "8",
            r: o,
            fill: "none",
            strokeWidth: d
        }), c.jsx("path", {
            fill: n && n.isActive && r ? a.color.labelTitle : void 0,
            stroke: "none",
            d: "M6.95588 5.28329L10.6901 7.43926C11.0235 7.63171 11.0235 8.11283 10.6901 8.30528L6.95588 10.4612C6.62255 10.6537 6.20588 10.4131 6.20588 10.0282L6.20588 5.71631C6.20588 5.33141 6.62255 5.09084 6.95588 5.28329Z"
        }), (n == null ? void 0 : n.isCompleted) && c.jsxs("g", {
            transform: "translate(10.5, 9.5)",
            children: [c.jsx("path", {
                d: "M1 2H7V6H1V2Z",
                fill: a.color.bgBase,
                stroke: "none"
            }), c.jsx("path", {
                offset: "20px 20px",
                d: "M5.303 1.87442L5.63298 2.20441L5.30299 1.87442L3.14286 4.03456L2.69701 3.58871C2.31206 3.20376 1.68794 3.20376 1.30299 3.58871C0.918049 3.97365 0.918049 4.59777 1.30299 4.98272L2.44585 6.12558C2.8308 6.51052 3.45492 6.51052 3.83986 6.12558L6.69701 3.26843C7.08195 2.88349 7.08195 2.25937 6.69701 1.87442C6.31206 1.48948 5.68794 1.48948 5.303 1.87442ZM0.5 4C0.5 2.067 2.067 0.5 4 0.5C5.933 0.5 7.5 2.067 7.5 4C7.5 5.933 5.933 7.5 4 7.5C2.067 7.5 0.5 5.933 0.5 4Z",
                fill: a.color.labelMuted,
                stroke: a.color.labelMuted
            })]
        })]
    })
});
function Kue(t) {
    const e = Pt();
    return c.jsxs("svg", {
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        fill: e.color.labelMuted,
        className: t.className,
        children: [c.jsx("path", {
            d: "M7.125 2.01655C7.125 1.4768 6.64899 1.05501 6.12893 1.19947C3.17141 2.02102 1 4.74235 1 7.97282C1 11.8538 4.13401 15 8 15C11.866 15 15 11.8538 15 7.97282C15 4.74235 12.8286 2.02102 9.87107 1.19947C9.35101 1.05501 8.875 1.4768 8.875 2.01655V2.01655C8.875 2.45457 9.19479 2.82058 9.61155 2.95538C11.7226 3.63819 13.25 5.62644 13.25 7.97282C13.25 10.8836 10.8995 13.2432 8 13.2432C5.10051 13.2432 2.75 10.8836 2.75 7.97282C2.75 5.62644 4.27737 3.63819 6.38845 2.95538C6.80521 2.82058 7.125 2.45457 7.125 2.01655V2.01655Z"
        }), c.jsx("path", {
            d: "M6.95588 5.28329L10.6901 7.43926C11.0235 7.63171 11.0235 8.11283 10.6901 8.30528L6.95588 10.4612C6.62255 10.6537 6.20588 10.4131 6.20588 10.0282L6.20588 5.71631C6.20588 5.33141 6.62255 5.09084 6.95588 5.28329Z"
        })]
    })
}
function Yue(t) {
    const e = Pt()
      , {radius: n, strokeWidth: r, strokeDasharray: s, strokeDashoffset: i} = S_();
    return c.jsx("svg", {
        stroke: e.color.labelFaint,
        width: "16",
        height: "16",
        viewBox: "0 0 16 16",
        className: t.className,
        style: {
            overflow: "visible"
        },
        children: c.jsx("circle", {
            cx: "8",
            cy: "8",
            r: n,
            fill: "none",
            strokeWidth: r,
            strokeDasharray: s,
            strokeDashoffset: i
        })
    })
}
function S_() {
    return y.useMemo(()=>{
        const n = Math.PI * 2 * 8
          , r = n / 24;
        return {
            radius: 8,
            strokeWidth: 2,
            perimeter: n,
            strokeDasharray: r,
            strokeDashoffset: .5 * r
        }
    }
    , [])
}
function __(t) {
    const {dueDate: e, doneDate: n, ...r} = t
      , s = Pt();
    let i;
    switch (e === void 0 || e instanceof Date ? i = _u.qualifierForDueDate(e, n) : typeof e == "number" ? i = _u.qualifierForDueDate(new Date().offsetByDays(e), n) : _u.allDueDateQualifierTypes.indexOf(e) !== -1 ? i = e : i = _u.qualifierForDueDate(e, n),
    i) {
    case mo.dueSoon:
        return c.jsx(pc, {
            variant: "regular",
            style: {
                fill: s.color.orangeBase
            },
            ...r
        });
    case mo.dueToday:
        return c.jsx(pc, {
            variant: "regular",
            style: {
                fill: s.color.redBase
            },
            ...r
        });
    case mo.overdue:
        return c.jsx(pc, {
            variant: "overdue",
            style: {
                fill: s.color.redBase
            },
            ...r
        });
    case mo.due:
        return c.jsx(pc, {
            variant: "regular",
            ...r
        });
    case mo.none:
        return c.jsx(pc, {
            ...r
        });
    default:
        return c.jsx(pc, {
            ...r
        })
    }
}
const Rb = t=>{
    const {priority: e, muted: n, ...r} = t;
    switch (e.priority) {
    case 1:
        return c.jsx(pV, {
            muted: n,
            ...r
        });
    case 2:
        return c.jsx(mV, {
            ...r
        });
    case 3:
        return c.jsx(gV, {
            ...r
        });
    case 4:
        return c.jsx(yV, {
            ...r
        });
    default:
        return c.jsx(fV, {
            ...r
        })
    }
}
;
function BQ(t) {
    return c.jsx(x, {
        ...t,
        color: "redBase",
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                opacity: "0.5",
                d: "M6.44581 2.22044C6.35866 1.38807 6.27999 0.636732 7.19404 1.18963L8.2 1.94169C9.33313 2.78883 10 4.11834 10 5.53023V7.45656L11 6.5C11.6513 5.95896 13 5.15486 13 6V9.10889C12.434 8.88679 11.7655 9.00444 11.3081 9.46186L10.5 10.2699L9.69197 9.46186C9.23455 9.00444 8.56602 8.88679 8 9.10889V8.74969C8 8.38851 7.64036 8.17151 7.36222 8.40117C6.51931 9.09715 5.5 10.4429 5.5 11.811C5.5 13.1259 6.20616 13.6996 7.08772 13.9034C6.97392 14.2303 6.97085 14.5871 7.07851 14.9155C4.75727 14.4845 3 12.4547 3 10.0159V9.98874C3 8.98398 3.14252 7.87856 4 6.98199C4 6.98199 4.5 6.5 5 5.97974C5.5 5.45947 6.5 3.97525 6.5 2.97299C6.5 2.73798 6.47251 2.47541 6.44581 2.22044Z"
            }), c.jsx("path", {
                d: "M8.98487 10.169L10.5 11.6841L12.0152 10.169C12.2405 9.94367 12.6057 9.94367 12.831 10.169C13.0563 10.3943 13.0563 10.7596 12.831 10.9849L11.3159 12.5L12.831 14.0152C13.0563 14.2405 13.0563 14.6057 12.831 14.831C12.6057 15.0563 12.2405 15.0563 12.0152 14.831L10.5 13.3159L8.98487 14.831C8.75957 15.0563 8.39428 15.0563 8.16898 14.831C7.94367 14.6057 7.94367 14.2405 8.16898 14.0152L9.68408 12.5L8.16898 10.9849C7.94367 10.7596 7.94367 10.3943 8.16898 10.169C8.39428 9.94367 8.75957 9.94367 8.98487 10.169Z"
            })]
        })
    })
}
function UQ(t) {
    return c.jsx(x, {
        ...t,
        color: "greenBase",
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                d: "M6.44581 2.22044C6.35866 1.38807 6.27999 0.636732 7.19404 1.18963L8.2 1.94169C9.32503 2.78278 9.99045 4.09937 9.9999 5.5C6.96238 5.50006 4.5 7.96247 4.5 11C4.5 12.3072 4.95604 13.5079 5.71769 14.4516C4.10396 13.625 3 11.9489 3 10.0159V9.98874C3 8.98398 3.14252 7.87856 4 6.98199C4 6.98199 4.5 6.5 5 5.97974C5.5 5.45947 6.5 3.97525 6.5 2.97299C6.5 2.73798 6.47251 2.47541 6.44581 2.22044Z",
                opacity: "0.5"
            }), c.jsx("path", {
                d: "M13 6.38947V6C13 5.48493 12.4991 5.58243 11.9603 5.85963C12.3274 5.99968 12.6755 6.17791 13 6.38947Z",
                opacity: "0.5"
            }), c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M10 15C12.2091 15 14 13.2091 14 11C14 8.79086 12.2091 7 10 7C7.79086 7 6 8.79086 6 11C6 13.2091 7.79086 15 10 15ZM12.1621 10.1023C12.3347 9.90691 12.3254 9.60004 12.1412 9.41687C11.957 9.2337 11.6677 9.2436 11.4951 9.43898L9.51384 11.6807L8.47514 10.7013C8.28644 10.5234 7.99749 10.5414 7.82976 10.7416C7.66203 10.9418 7.67902 11.2483 7.86772 11.4262L9.01733 12.5101C9.32595 12.8011 9.79693 12.7784 10.0793 12.4588L12.1621 10.1023Z"
            })]
        })
    })
}
function HQ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M7.19404 1.18963C6 0.467371 6.5 1.97074 6.5 2.97299C6.5 3.97525 5.5 5.45947 5 5.97974C4.5 6.5 4 6.98199 4 6.98199C3.14252 7.87856 3 8.98398 3 9.98874V10.0159C3 12.7685 5.23858 15 8 15C10.7614 15 13 12.7685 13 10.0159V6C13 5.15486 11.6513 5.95895 11 6.5L10 7.45656V5.53023C10 4.11834 9.33313 2.78883 8.2 1.94169L7.19404 1.18963ZM8 13.9978C6.75 13.9978 5.5 13.5604 5.5 11.811C5.5 10.4429 6.51931 9.09715 7.36222 8.40117C7.64036 8.17151 8 8.38851 8 8.74969V10.4989C8 10.8601 8.36968 11.1027 8.69997 10.9582L9.80003 10.4771C10.1303 10.3327 10.5038 10.5754 10.4832 10.936C10.4109 12.1989 10.0281 13.9978 8 13.9978Z"
            })
        })
    })
}
function zQ(t) {
    return c.jsx(x, {
        ...t,
        color: "labelMuted",
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                opacity: "0.4",
                d: "M6.44581 2.22044C6.35866 1.38807 6.27999 0.636732 7.19404 1.18963L8.2 1.94169C9.33313 2.78883 10 4.11834 10 5.53023V6C7.23858 6 5 8.23858 5 11C5 12.5549 5.70979 13.9441 6.82304 14.8611C4.62954 14.3336 3 12.3644 3 10.0159V9.98874C3 8.98398 3.14252 7.87856 4 6.98199C4 6.98199 4.5 6.5 5 5.97974C5.5 5.45947 6.5 3.97525 6.5 2.97299C6.5 2.73798 6.47251 2.47541 6.44581 2.22044Z"
            }), c.jsx("path", {
                opacity: "0.4",
                d: "M13 6.99963V6C13 5.30442 12.0864 5.72601 11.4 6.19864C11.9847 6.36884 12.5251 6.64294 13 6.99963Z"
            }), c.jsx("path", {
                d: "M10 15C12.2091 15 14 13.2091 14 11C14 8.79086 12.2091 7 10 7C7.79086 7 6 8.79086 6 11C6 13.2091 7.79086 15 10 15ZM9.44357 9.01427C9.43541 8.85107 9.56553 8.71429 9.72893 8.71429H10.2711C10.4345 8.71429 10.5646 8.85107 10.5564 9.01427L10.4421 11.3C10.4345 11.452 10.309 11.5714 10.1568 11.5714H9.84321C9.69096 11.5714 9.56546 11.452 9.55786 11.3L9.44357 9.01427ZM9.42857 12.7143C9.42857 12.3987 9.68441 12.1429 10 12.1429C10.3156 12.1429 10.5714 12.3987 10.5714 12.7143C10.5714 13.0299 10.3156 13.2857 10 13.2857C9.68441 13.2857 9.42857 13.0299 9.42857 12.7143Z"
            })]
        })
    })
}
function ZQ(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsxs("svg", {
            children: [c.jsx("path", {
                opacity: "0.5",
                d: "M6.44581 2.22044C6.35866 1.38807 6.27999 0.636732 7.19404 1.18963L8.2 1.94169C9.33313 2.78883 10 4.11834 10 5.53023V7.45656L11 6.5C11.6513 5.95895 13 5.15486 13 6V9.33682C12.5454 9.12085 12.0368 9 11.5 9C10.113 9 8.91448 9.80676 8.34804 10.9766C8.15194 10.9133 8 10.7305 8 10.4989V8.74969C8 8.38851 7.64036 8.17151 7.36222 8.40117C6.51931 9.09715 5.5 10.4429 5.5 11.811C5.5 13.5604 6.75 13.9978 8 13.9978C8.11445 13.9978 8.22365 13.992 8.32786 13.981C8.48828 14.324 8.7027 14.6367 8.96018 14.9082C8.64944 14.9684 8.32842 15 8 15C5.23858 15 3 12.7685 3 10.0159V9.98874C3 8.98398 3.14252 7.87856 4 6.98199C4 6.98199 4.5 6.5 5 5.97974C5.5 5.45947 6.5 3.97525 6.5 2.97299C6.5 2.73798 6.47251 2.47541 6.44581 2.22044Z"
            }), c.jsx("circle", {
                cx: "11.5",
                cy: "12.5",
                r: "2.25"
            })]
        })
    })
}
const qQ = tX()
  , yu = qQ ? "H:mm" : "h:mm a";
function Que(t, e) {
    return pi(3e4),
    fx(t, {
        short: !0,
        ...e
    })
}
function Op(t, e) {
    return pi(3e4),
    fx(t, {
        short: !1,
        ...e
    })
}
let O6, R6;
const WQ = (t,e)=>{
    pi(3e4);
    const n = new Date;
    if (Math.abs(s5(N2(n), t)) > 6)
        if (e != null && e.withWeekday) {
            const r = I_(t);
            let s = "";
            return nX(t) ? (R6 == null && (R6 = new Intl.DateTimeFormat("en-US",{
                month: "long",
                weekday: "long",
                day: "numeric"
            })),
            s = R6.format(t)) : (O6 == null && (O6 = new Intl.DateTimeFormat("en-US",{
                year: "numeric",
                month: "long",
                weekday: "long",
                day: "numeric"
            })),
            s = O6.format(t)),
            `${s}, ${r}`
        } else
            return q4(t, {
                omitSeconds: !0
            });
    else
        return zA(t, n, {
            locale: KQ
        })
}
  , GQ = {
    lastWeek: `'last' eeee 'at' ${yu}`,
    yesterday: `'yesterday at' ${yu}`,
    today: `'today at' ${yu}`,
    tomorrow: `'tomorrow at' ${yu}`,
    nextWeek: `eeee 'at' ${yu}`,
    other: "P"
}
  , KQ = {
    ...Mk,
    formatRelative: t=>GQ[t]
};
let P6;
const Mu = t=>{
    const e = t instanceof Date ? t : t.toLocalDate()
      , n = Sd(Sa(new Date), {
        years: 1
    });
    return Dd(e, n) ? (P6 == null && (P6 = new Intl.DateTimeFormat("en-US",{
        month: "short",
        year: "numeric"
    })),
    P6.format(e)) : YQ(e)
}
  , Z0 = Yc;
let $6;
function E9(t) {
    const e = t instanceof Date ? t : t.toLocalDate();
    return $6 == null && ($6 = new Intl.DateTimeFormat("en-US",{
        day: "numeric",
        month: "short",
        year: "numeric"
    })),
    $6.format(e)
}
let F6;
function YQ(t) {
    const e = t instanceof Date ? t : t.toLocalDate();
    return F6 == null && (F6 = new Intl.DateTimeFormat("en-US",{
        day: "numeric",
        month: "short"
    })),
    F6.format(e)
}
let N6;
function Xue(t) {
    return N6 == null && (N6 = new Intl.DateTimeFormat(void 0,{
        day: "numeric",
        month: "numeric",
        year: "numeric"
    })),
    N6.format(t)
}
function q4(t, e) {
    const n = (e == null ? void 0 : e.alwaysYear) === !0 ? E9(t) : Z0(t)
      , r = (e == null ? void 0 : e.omitSeconds) === !0 ? I_(t) : XQ(t);
    return `${n}, ${r}`
}
const QQ = (t,e)=>q4(t, {
    omitSeconds: e == null ? void 0 : e.omitSeconds,
    alwaysYear: !0
});
let V6;
const XQ = t=>(V6 == null && (V6 = new Intl.DateTimeFormat(void 0,{
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
})),
V6.format(t));
let B6;
const I_ = t=>(B6 == null && (B6 = new Intl.DateTimeFormat(void 0,{
    hour: "numeric",
    minute: "numeric"
})),
B6.format(t));
let U6;
const Jue = t=>(U6 == null && (U6 = new Intl.DateTimeFormat(void 0,{
    day: "numeric"
})),
U6.format(t))
  , e0e = t=>Mr(t, "EEEE")
  , t0e = t=>Mr(t, "MMMM");
function JQ(t) {
    const {min: e=1, max: n} = t;
    return Math.floor(Math.random() * (n - e + 1) + e)
}
function C5() {
    let t = "";
    try {
        t = Er.now().timezone().name
    } catch (e) {
        F.info(`Unable to guess tz with spacetime: ${e.message}`),
        t = U1.findNearestZoneByOffset(new Date().getTimezoneOffset()).name
    }
    return U1.validateTimezone(t)
}
function n0e(t, e) {
    const n = C5()
      , r = t.midnight()
      , s = U1.getOffset(n) || 0
      , a = (U1.getOffset(e) || 0) - s;
    return Sd(r, {
        hours: a,
        minutes: a % 1 * 60
    })
}
function r0e(t, e) {
    const n = C5()
      , r = eX(t, n, e);
    return Sd(t, {
        hours: r,
        minutes: r % 1 * 60
    })
}
function eX(t, e, n) {
    const r = new Date(t.toLocaleString("en-US", {
        timeZone: e
    }))
      , s = new Date(t.toLocaleString("en-US", {
        timeZone: n
    }));
    return (r.getTime() - s.getTime()) / be.HOUR
}
function tX(t=navigator.language) {
    const e = new Intl.Locale(t);
    if ("hourCycles"in e) {
        const r = e.hourCycles;
        return r ? r.some(s=>s === "h23" || s === "h24") : !1
    }
    const n = new Intl.DateTimeFormat(t,{
        hour: "numeric"
    }).format();
    return Number.isInteger(Number(n))
}
function nX(t) {
    return t.getFullYear() === new Date().getFullYear()
}
const e0 = class e0 {
    static getOptionFromCustomDuration(e) {
        return e % be.WEEK === 0 ? {
            label: `${e / be.WEEK} ${dd("week", e / be.HOUR)}`,
            unit: "week"
        } : e % be.DAY === 0 ? {
            label: `${e / be.DAY} ${dd("day", e / be.HOUR)}`,
            unit: "day"
        } : {
            label: `${e / be.HOUR} ${dd("hour", e / be.HOUR)}`,
            unit: "hour"
        }
    }
    static status(e) {
        const n = new Date;
        if (!(!e.slaBreachesAt || e.state.type === ye.canceled))
            return e.isSlaBreached ? e.completedAt ? Ze.Status.Failed : Ze.Status.Breached : e.completedAt ? Ze.Status.Completed : fo(e.slaBreachesAt, n) <= Ze.SLAStatusThresholdsInHours.highRisk ? Ze.Status.HighRisk : fo(e.slaBreachesAt, n) <= Ze.SLAStatusThresholdsInHours.mediumRisk ? Ze.Status.MediumRisk : Ze.Status.LowRisk
    }
    static getColor(e) {
        switch (e0.status(e)) {
        case Ze.Status.Breached:
            return "redText";
        case Ze.Status.Failed:
        case Ze.Status.Completed:
        case Ze.Status.HighRisk:
        case Ze.Status.MediumRisk:
        case Ze.Status.LowRisk:
        case void 0:
            return;
        default:
            throw void 0
        }
    }
    static getStatusLabel(e) {
        const n = e0.status(e)
          , r = {
            [Ze.Status.Breached]: "Breached",
            [Ze.Status.Failed]: "Failed",
            [Ze.Status.Completed]: "Achieved",
            [Ze.Status.HighRisk]: "At high risk",
            [Ze.Status.MediumRisk]: "At medium risk",
            [Ze.Status.LowRisk]: "At low risk"
        };
        return n && r[n]
    }
    static getStatusColor(e, n) {
        switch (n) {
        case Ze.Status.Breached:
            return e.color.redBase;
        case Ze.Status.Failed:
            return e.color.labelMuted;
        case Ze.Status.Completed:
            return e.color.greenBase;
        case Ze.Status.HighRisk:
            return e.color.orangeBase;
        case Ze.Status.MediumRisk:
            return e.color.yellowBase;
        case Ze.Status.LowRisk:
            return e.color.labelMuted;
        case void 0:
            return e.color.labelMuted;
        default:
            throw void 0
        }
    }
    static getDisplayText(e, n) {
        if (!e.slaBreachesAt)
            return "";
        const r = {
            fullNames: n == null ? void 0 : n.accessible
        };
        return e.completedAt ? e.isSlaBreached ? `Failed by ${a1(e.completedAt, e.slaBreachesAt, r)}` : `Achieved ${a1(e.slaBreachesAt, e.completedAt, r)} early` : e.isSlaBreached ? n != null && n.compact ? a1(new Date, e.slaBreachesAt, r) : `Breached by ${a1(new Date, e.slaBreachesAt, r)}` : n != null && n.compact ? a1(e.slaBreachesAt, new Date, r) : `${a1(e.slaBreachesAt, new Date, r)} remaining`
    }
    static getCompactText(e) {
        if (!e.slaBreachesAt || e.completedAt && !e.isSlaBreached)
            return "";
        const n = e.completedAt ?? new Date;
        return e.isSlaBreached ? `+${a1(n, e.slaBreachesAt)}` : `${a1(e.slaBreachesAt, n)}`
    }
    static getTooltipText(e) {
        if (!e.slaBreachesAt)
            return "";
        const n = e.isSlaBreached;
        return e.completedAt ? `SLA ${n ? "failed" : "would have breached"} at ${q4(e.slaBreachesAt)}` : `${e.isSlaBreached ? "Due" : "Was due"} on ${q4(e.slaBreachesAt, {
            omitSeconds: !0
        })}`
    }
}
;
e0.presetOptions = {
    twelveHours: {
        label: "12 hours",
        value: Ze.Duration.twelveHours
    },
    twentyFourHours: {
        label: "24 hours",
        value: Ze.Duration.twentyFourHours
    },
    fortyEightHours: {
        label: "48 hours",
        value: Ze.Duration.fortyEightHours
    },
    oneWeek: {
        label: "1 week",
        value: Ze.Duration.oneWeek
    },
    twoWeeks: {
        label: "2 weeks",
        value: Ze.Duration.twoWeeks
    },
    fourWeeks: {
        label: "4 weeks",
        value: Ze.Duration.fourWeeks
    }
};
let q0 = e0;
const rX = rn(function(e) {
    const n = Pt()
      , r = "issue"in e ? q0.status(e.issue) : "status"in e ? e.status : void 0
      , s = {
        className: e.className,
        style: e.style
    };
    switch (r) {
    case Ze.Status.Breached:
        return c.jsx(BQ, {
            ...s
        });
    case Ze.Status.Failed:
        return c.jsx(zQ, {
            ...s
        });
    case Ze.Status.Completed:
        return c.jsx(UQ, {
            ...s
        });
    case Ze.Status.HighRisk:
    case Ze.Status.MediumRisk:
    case Ze.Status.LowRisk:
        return c.jsx(ZQ, {
            color: q0.getStatusColor(n, r),
            ...s
        });
    default:
        return c.jsx(HQ, {
            ...s
        })
    }
})
  , H6 = rn(function(e) {
    const {stateType: n, ...r} = e
      , s = Pt();
    switch (n) {
    case ye.triage:
        return c.jsx(MD, {
            color: s.color.labelMuted,
            ...r
        });
    case ye.backlog:
        return c.jsx(i4, {
            color: s.color.labelMuted,
            ...r
        });
    case ye.unstarted:
        return c.jsx(a4, {
            percentage: 0,
            color: s.color.labelMuted,
            "aria-label": "Unstarted",
            ...r
        });
    case ye.started:
        return c.jsx(a4, {
            percentage: .5,
            color: s.color.labelMuted,
            "aria-label": "Started",
            ...r
        });
    case ye.completed:
        return c.jsx(jD, {
            color: s.color.labelMuted,
            ...r
        });
    case ye.canceled:
        return c.jsx(sp, {
            color: s.color.labelMuted,
            ...r
        });
    default:
        return null
    }
});
function Rp(t) {
    return x2(Pt(), t)
}
function x2(t, e) {
    if (!e)
        return;
    const n = t.baseTheme ?? t
      , r = `${e}-${n.color.bgBase}`
      , s = z6.get(r);
    if (s)
        return s;
    const i = sX[e.toLowerCase()];
    if (i)
        return n.color[i];
    let a = Tn.fromCss(e);
    const o = Tn.fromCss(n.color.bgBase);
    if (Tn.sufficientContrastForText(a, o))
        return z6.set(r, e),
        e;
    const d = n.isDark
      , u = a[2] < 95 && a[2] > 75
      , h = a[1] < 15
      , f = a[1] < 25;
    h && !d && (a = Tn.adjust(a, {
        l: -15
    }));
    const p = a[0]
      , m = C=>d ? Math.max(C, p) : Math.min(C, p)
      , g = Tn.toCss(l0(), h ? Tn.adjustTo(a, {
        l: m(d ? 45 : 80)
    }) : Tn.adjustTo(a, u || f ? {
        l: m(d ? 86 : f ? 70 : 77),
        c: f ? 45 : 99
    } : {
        l: m(63),
        c: 80
    }));
    return z6.set(r, g),
    g
}
const sX = {
    "#e8b600": "yellowBase",
    "#f2c94c": "yellowBase",
    "#5e6ad2": "purpleBase",
    "#fc7840": "orangeBase",
    "#0f783c": "greenBase"
}
  , z6 = new Map
  , iX = rn(function(e) {
    const {stateType: n, color: r, completionPercentage: s=.5, width: i, height: a, className: o} = e
      , l = n === ye.triage || n === ye.backlog || n === ye.unstarted ? 0 : n === ye.started ? s : 1
      , d = n === ye.triage
      , u = `${n}_${r}_${l}`
      , h = y.useRef(u)
      , f = h.current !== u
      , p = !h.current.startsWith("triage") && n !== ye.triage;
    h.current = u;
    const m = Pf ? 3.895 : 3.98;
    return c.jsxs(aX, {
        transition: f,
        transitionPercentage: p,
        width: i || 14,
        height: a || 14,
        viewBox: "0 0 14 14",
        fill: "none",
        className: o,
        children: [c.jsx("circle", {
            cx: 7,
            cy: 7,
            r: d ? 3.5 : 6,
            fill: "none",
            stroke: r,
            strokeWidth: d ? 7 : 2,
            strokeDasharray: d ? "2 0" : n === ye.backlog ? "1.4 1.74" : "3.14 0",
            strokeDashoffset: d ? 3.2 : n === ye.backlog ? .65 : -.7
        }), c.jsx("circle", {
            className: "progress",
            cx: 7,
            cy: 7,
            r: l === 1 ? 3 : 2,
            fill: "none",
            stroke: r,
            strokeWidth: l === 1 ? 6 : 4,
            strokeDasharray: `${l * Math.PI * (l === 1 ? 6 : m)} 100`,
            strokeDashoffset: 0,
            transform: "rotate(-90 7 7)"
        }), (n === ye.triage || l === 1) && c.jsx("path", {
            className: "icon",
            stroke: "none",
            d: n === ye.triage ? cX : n === ye.completed ? oX : lX
        })]
    })
})
  , aX = ae.svg`
  & .icon {
    fill: ${t=>{
    var e;
    return ((e = t.theme.baseTheme) == null ? void 0 : e.color.bgBase) || t.theme.color.bgBase
}
};
  }

  ${t=>t.transition && `& circle {
       transition: all ${pn("slowTransition")};
     }

     & path {
       transition: all ${pn("slowTransition")};
       animation: scale ${pn("slowTransition")} cubic-bezier(0.5, 1.4, 0.4, 1) 0.2s both;
     }

     @keyframes scale {
       0% {
         opacity: 0;
         transform: translate(3.5px, 3.5px) scale(0.5);
       }
       100% {
         opacity: 1;
         transform: translate(0, 0) scale(1);
       }
    }`}

  ${t=>!t.transitionPercentage && `& .progress {
      transition-property: stroke, stroke-width;
     }
    }`}
`
  , oX = "M10.951 4.24896C11.283 4.58091 11.283 5.11909 10.951 5.45104L5.95104 10.451C5.61909 10.783 5.0809 10.783 4.74896 10.451L2.74896 8.45104C2.41701 8.11909 2.41701 7.5809 2.74896 7.24896C3.0809 6.91701 3.61909 6.91701 3.95104 7.24896L5.35 8.64792L9.74896 4.24896C10.0809 3.91701 10.6191 3.91701 10.951 4.24896Z"
  , cX = "M8.0126 7.98223V9.50781C8.0126 9.92901 8.52329 10.1548 8.85102 9.87854L11.8258 7.37066C12.0581 7.17486 12.0581 6.82507 11.8258 6.62927L8.85102 4.12139C8.52329 3.84509 8.0126 4.07092 8.0126 4.49212V6.01763H5.98739V4.49218C5.98739 4.07098 5.4767 3.84515 5.14897 4.12146L2.17419 6.62933C1.94194 6.82513 1.94194 7.17492 2.17419 7.37072L5.14897 9.8786C5.4767 10.1549 5.98739 9.92907 5.98739 9.50787V7.98223H8.0126Z"
  , lX = "M3.73657 3.73657C4.05199 3.42114 4.56339 3.42114 4.87881 3.73657L5.93941 4.79716L7 5.85775L9.12117 3.73657C9.4366 3.42114 9.94801 3.42114 10.2634 3.73657C10.5789 4.05199 10.5789 4.56339 10.2634 4.87881L8.14225 7L10.2634 9.12118C10.5789 9.4366 10.5789 9.94801 10.2634 10.2634C9.94801 10.5789 9.4366 10.5789 9.12117 10.2634L7 8.14225L4.87881 10.2634C4.56339 10.5789 4.05199 10.5789 3.73657 10.2634C3.42114 9.94801 3.42114 9.4366 3.73657 9.12118L4.79716 8.06059L5.85775 7L3.73657 4.87881C3.42114 4.56339 3.42114 4.05199 3.73657 3.73657Z"
  , Pb = rn(function(e) {
    const {state: n, monochrome: r, dontAnimate: s, className: i, width: a, height: o, overrideColor: l, ...d} = e
      , u = Pt();
    let h = Rp(n.color);
    (r || l) && (h = l ?? u.color.labelMuted);
    const f = n.displayCompletionPercentage;
    return s ? c.jsx(dX, {
        stateType: n.type,
        color: h,
        percentage: f,
        height: o,
        width: a,
        monochrome: r,
        className: i,
        ...d
    }) : c.jsx(iX, {
        stateType: n.type,
        color: h,
        completionPercentage: f,
        className: i,
        width: a,
        height: o,
        ...d
    })
});
function dX(t) {
    const {stateType: e, color: n, monochrome: r, className: s, percentage: i, height: a=14, width: o=14, ...l} = t
      , d = Pt()
      , u = r ? d.color.labelMuted : n
      , h = s ? `color-override ${s}` : "color-override";
    switch (e) {
    case "triage":
        return c.jsx(MD, {
            color: u,
            className: h,
            height: a,
            width: o,
            ...l
        });
    case "backlog":
        return c.jsx(i4, {
            color: u,
            className: h,
            height: a,
            width: o,
            ...l
        });
    case "unstarted":
        return c.jsx(a4, {
            percentage: i ?? 0,
            color: u,
            "aria-label": "Todo",
            height: a,
            width: o,
            className: h,
            ...l
        });
    case "started":
        return c.jsx(a4, {
            percentage: i ?? .5,
            color: u,
            "aria-label": "In Progress",
            height: a,
            width: o,
            className: h,
            ...l
        });
    case "completed":
        return c.jsx(jD, {
            color: u,
            height: a,
            width: o,
            className: h,
            ...l
        });
    case "canceled":
        return c.jsx(sp, {
            color: u,
            height: a,
            width: o,
            className: h,
            ...l
        });
    default:
        return null
    }
}
function uX() {
    return c.jsxs("svg", {
        width: "256",
        height: "256",
        viewBox: "0 0 256 256",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: [c.jsx("rect", {
            width: "256",
            height: "256",
            fill: "#2151C5"
        }), c.jsx("path", {
            d: "M198.258 123.969L134.199 62.0043L127.992 56L79.7704 102.646L57.7197 123.969C56.6183 125.04 56 126.489 56 128C56 129.511 56.6183 130.96 57.7197 132.031L101.775 174.646L127.992 200L176.207 153.354L176.958 152.634L198.258 132.063C198.81 131.533 199.248 130.902 199.547 130.208C199.846 129.513 200 128.768 200 128.016C200 127.264 199.846 126.519 199.547 125.824C199.248 125.13 198.81 124.499 198.258 123.969V123.969ZM127.992 149.291L105.981 128L127.992 106.709L149.996 128L127.992 149.291Z",
            fill: "white"
        }), c.jsx("path", {
            d: "M127.992 106.708C121.07 100.013 117.168 90.9408 117.138 81.4722C117.108 72.0035 120.953 62.9082 127.833 56.1729L79.6709 102.741L105.882 128.096L127.992 106.708Z",
            fill: "url(#paint0_linear_6834:3129)"
        }), c.jsx("path", {
            d: "M150.056 127.942L127.992 149.292C134.941 156.015 138.844 165.133 138.844 174.64C138.844 184.146 134.941 193.264 127.992 199.987L176.287 153.297L150.056 127.942Z",
            fill: "url(#paint1_linear_6834:3129)"
        }), c.jsxs("defs", {
            children: [c.jsxs("linearGradient", {
                id: "paint0_linear_6834:3129",
                x1: "124.051",
                y1: "85.1657",
                x2: "94.3355",
                y2: "115.879",
                gradientUnits: "userSpaceOnUse",
                children: [c.jsx("stop", {
                    offset: "0.18",
                    "stop-color": "#E6E6E6"
                }), c.jsx("stop", {
                    offset: "1",
                    "stop-color": "white"
                })]
            }), c.jsxs("linearGradient", {
                id: "paint1_linear_6834:3129",
                x1: "176.185",
                y1: "153.104",
                x2: "142.704",
                y2: "187.798",
                gradientUnits: "userSpaceOnUse",
                children: [c.jsx("stop", {
                    offset: "0.18",
                    "stop-color": "white"
                }), c.jsx("stop", {
                    offset: "1",
                    "stop-color": "#E6E6E6"
                })]
            })]
        })]
    })
}
function hX() {
    return c.jsxs("svg", {
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        children: [c.jsx("rect", {
            width: "24",
            height: "24",
            fill: "white"
        }), c.jsx("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M15.9552 11.8823C14.2737 11.8823 12.9105 13.2518 12.9105 14.9412C12.9105 16.6305 14.2737 18 15.9552 18C17.6368 18 19 16.6305 19 14.9412C19 13.2518 17.6368 11.8823 15.9552 11.8823ZM8.04475 11.8826C6.36319 11.8826 5 13.2518 5 14.9412C5 16.6305 6.36319 18 8.04475 18C9.72638 18 11.0896 16.6305 11.0896 14.9412C11.0896 13.2518 9.72638 11.8826 8.04475 11.8826ZM15.0447 8.05872C15.0447 9.74817 13.6816 11.1178 12 11.1178C10.3184 11.1178 8.95526 9.74817 8.95526 8.05872C8.95526 6.36961 10.3184 5 12 5C13.6816 5 15.0447 6.36961 15.0447 8.05872Z",
            fill: "#DF726E"
        })]
    })
}
function fX() {
    return c.jsxs("svg", {
        fill: "none",
        height: "24",
        viewBox: "0 0 24 24",
        width: "24",
        children: [c.jsx("path", {
            d: "m0 0h24v24h-24z",
            fill: "#58b1e4"
        }), c.jsx("path", {
            d: "m18 9.00003c0-1.65682-1.3431-3.00003-2.9999-3.00003h-5.99978c-.39403-.00053-.78429.07681-1.14834.22758s-.69471.372-.973.65098c-1.17145 1.17165-1.17145 3.07177 0 4.24284l1.06838 1.0684c-1.13758.4264-1.94736 1.5236-1.94736 2.8102 0 1.6568 1.34312 3 2.99994 3h6.00016c.394.0005.7843-.0768 1.1483-.2276s.6947-.3721.9729-.6511c1.1716-1.1716 1.1716-3.0718 0-4.2428l-1.0684-1.0684c1.1374-.4264 1.9471-1.5237 1.9471-2.81007zm-10.298 7.29847c-.25207-.2522-.42527-.5723-.49845-.9212-.07318-.349-.04318-.7117.08634-1.0439s.35296-.6195.64302-.8268c.29007-.2073.63421-.3257.99043-.3406l3.67016 3.6705h-3.59367c-.24115.0005-.48-.0467-.70278-.1391-.22277-.0923-.42502-.2279-.59505-.3989zm8.5963-2.5966c.3443.3443.5377.8113.5377 1.2983s-.1934.954-.5377 1.2983-.8113.5378-1.2982.5378-.9539-.1935-1.2982-.5378l-5.9999-6.0002c-.34218-.34478-.5338-.81111-.53288-1.2969.00092-.48577.19428-.9514.53776-1.29489.34347-.3435.80906-.53688 1.2948-.5378.48574-.00091.95208.19071 1.29682.53292zm0-3.4036c-.3248.3265-.7611.5179-1.2212.5358l-3.6703-3.67022h3.5937c.363.0001.7179.10786 1.0198.30964.3019.20179.5371.48856.676.82404.1389.33547.1752.70461.1044 1.06073-.0708.35614-.2457.68321-.5024.94001z",
            fill: "#fff"
        })]
    })
}
const pX = t=>{
    const {importService: e, color: n, isAvatar: r, ...s} = t
      , i = r ? yX[e] : gX[e];
    return c.jsx(mX, {
        color: n,
        as: i,
        ...s
    })
}
  , mX = ae(r4)`
  ${t=>t.color ? `fill: ${t.theme.color[t.color]};` : ""}
`
  , gX = {
    [Zs.asana]: hZ,
    [Zs.clubhouse]: kZ,
    [Zs.github]: p5,
    [Zs.jira]: Ip,
    [Zs.linearV2]: ED
}
  , yX = {
    [Zs.asana]: hX,
    [Zs.clubhouse]: fX,
    [Zs.github]: p5,
    [Zs.jira]: uX
}
  , $b = t=>{
    const {attachment: e, ...n} = t
      , {source: r} = e;
    let s = c.jsx(r4, {});
    return r && ((r.type === "oauthClient" || r.type === "api") && r.imageUrl && (s = c.jsx(vX, {
        addFilter: !1,
        src: r.imageUrl
    })),
    r.type === "api" && !r.imageUrl && (s = c.jsx(r4, {})),
    r.type === "zendesk" && (s = c.jsx(i_, {
        color: "brand"
    })),
    (r.type === "front" || e.url.startsWith("https://app.frontapp.com")) && (s = c.jsx(e_, {
        color: "brand"
    })),
    (r.type === "slack" || e.url.match(/^https:\/\/[a-zA-Z0-9-]+\.slack\.com/g)) && (s = c.jsx(s_, {
        color: "brand"
    })),
    r.type === "intercom" && (s = c.jsx(t_, {
        color: "brand"
    })),
    r.type === "twitter" && (s = c.jsx(xZ, {
        color: "brand"
    })),
    (r.type === "sentry" || e.url.startsWith("https://sentry.io")) && (s = c.jsx(r_, {
        color: "brand"
    })),
    r.type === "jira" && (s = c.jsx(Ip, {
        color: "brand"
    })),
    r.type === "notion" && (s = c.jsx(n_, {
        color: "brand"
    })),
    r.type === "figma" && (s = c.jsx(JS, {
        color: "brand"
    })),
    r.type === "email" && (s = c.jsx(Lp, {})),
    (r.type === G.githubCommit || r.type === G.github || e.url.startsWith("https://github.com")) && (s = c.jsx(p5, {
        color: "brand"
    })),
    r.type === G.gitlab && (s = c.jsx(_p, {
        color: "brand"
    })),
    r.type === G.discord && (s = c.jsx(XS, {
        color: "brand"
    })),
    r.type === "import" && (s = c.jsx(pX, {
        importService: r.issueImportService,
        color: "labelTitle"
    }))),
    c.jsx(CX, {
        ...n,
        children: s
    })
}
  , CX = ae.div`
  display: flex;
  align-items: center;
  max-width: 16px;
  max-height: 16px;

  svg,
  img {
    max-width: inherit;
    max-height: inherit;
  }
`
  , bX = ae.img`
  border-radius: 4px;
  pointer-events: none;
  width: 16px;
  height: 16px;
`
  , vX = ae(bX)`
  width: 16px;
  height: 16px;

  ${t=>t.theme.isDark && t.addFilter ? `
        filter: invert(1) hue-rotate(180deg);
        opacity: 1;
      ` : ""}
`
  , E_ = ae.div`
  display: flex;
  position: relative;
  align-items: center;
  justify-content: center;
  line-height: 0;
  flex-shrink: 0;
  aspect-ratio: 1 / 1;
  ${t=>t.disabled ? "opacity: 0.5;" : ""};
  ${t=>wX(t.size)}
`;
function wX(t) {
    switch (t) {
    case "micro":
        return `
        width: ${us ? 17 : 14}px;
        height: ${us ? 17 : 14}px;
        font-size: 8px;
      `;
    case "tiny":
        return `
        width: ${us ? 18 : 16}px;
        height: ${us ? 18 : 16}px;
        font-size: 9px;
      `;
    case "small":
        return `
        width: 18px;
        height: 18px;
        font-size: 9px;
      `;
    case "regular":
        return `
        width: 24px;
        height: 24px;
        font-size: 11px;
      `;
    case "large":
        return `
        width: 32px;
        height: 32px;
        font-size: 14px;
      `;
    case "huge":
        return `
        width: 64px;
        height: 64px;
        font-size: 22px;
      `;
    default:
        throw void 0
    }
}
function kX(t) {
    let e = 5381
      , n = t.length;
    for (; n; )
        e = e * 33 ^ t.charCodeAt(--n);
    return e >>> 0
}
class Fb {
    static initialsBackgroundColor(e) {
        return Nb[kX(e) % Nb.length]
    }
    static initials(e) {
        var a, o;
        const n = new RegExp("^\\p{Letter}","u")
          , r = e.includes("@") ? e.split("@")[0].replace(/\./, " ") : e
          , s = (r.match(/\S+/g) || []).filter(l=>n.test(l))
          , i = s.length > 1 ? `${(a = s[0]) == null ? void 0 : a[0]}${(o = s[s.length - 1]) == null ? void 0 : o[0]}` : r.slice(0, 2);
        return i.match(/^[a-z0-9]*$/i) ? i.toUpperCase() : null
    }
}
const Nb = Array.from({
    length: 36
}, (t,e)=>Tn.toCss("RGB", [55, 60, 10 * e % 360, 1]));
function Z6(t) {
    const {src: e, name: n, modelId: r, size: s="regular", isInactive: i, isInvite: a, presenceIndicator: o, className: l, style: d, disabled: u, ...h} = t;
    return c.jsxs(E_, {
        size: s,
        style: d,
        className: l,
        children: [c.jsx(A_, {
            src: e,
            isInactive: i,
            name: n,
            modelId: r,
            isInvite: a,
            size: s,
            disabled: u,
            ...h
        }), o]
    })
}
function A_(t) {
    const [e,n] = $a.useState(!1)
      , r = _X(t.size);
    return t.src && !e ? c.jsx(DX, {
        src: t.src,
        width: r,
        height: r,
        alt: `Avatar of ${t.name}`,
        "aria-label": t["aria-label"],
        $isInactive: t.isInactive,
        $disabled: t.disabled,
        onError: ()=>{
            n(!0)
        }
    }) : c.jsx(xX, {
        name: t.name,
        modelId: t.modelId,
        isInactive: t.isInactive,
        isInvite: t.isInvite,
        disabled: t.disabled,
        "aria-label": t["aria-label"]
    })
}
function xX(t) {
    const {name: e, isInvite: n} = t
      , r = $a.useMemo(()=>e ? Fb.initials(e) : null, [e])
      , s = $a.useMemo(()=>Fb.initialsBackgroundColor(t.modelId || "rdm"), [t.modelId]);
    return c.jsx(SX, {
        $isDisabled: t.disabled,
        $isInactive: t.isInactive,
        $color: s,
        $isInvite: n,
        "aria-label": t["aria-label"],
        children: r
    })
}
const DX = ae.img`
  border-radius: 50%;
  width: 100%;
  height: 100%;
  pointer-events: none;

  ${t=>t.$disabled ? Qt`
          filter: opacity(0.65);
        ` : ""}
  ${t=>t.$isInactive ? Qt`
          box-shadow: 0 0 0 1px ${t.theme.color.bgBorderSolid};
          background-color: ${t.theme.color.bgBorder};
          filter: opacity(0.5) grayscale(1);
        ` : ""};
`
  , SX = ae.div`
  display: flex;
  border-radius: 50%;
  width: 100%;
  height: 100%;
  color: #ffffff;
  background-color: ${t=>t.$color};
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  transition: opacity ease-in-out 0.2s;

  ${t=>t.$isDisabled && Qt`
      background-color: ${Tn.mixCss(t.theme.color.bgBase, t.$color, t.theme.isDark ? .3 : .6)};
      color: ${t.theme.isDark ? "#ffffff55" : "#FFFFFF"};
    `}
  ${t=>t.$isInactive ? Qt`
          color: ${t.theme.color.labelFaint};
          background-color: ${t.theme.color.bgBorderSolid};
        ` : ""};
  ${t=>t.$isInvite ? Qt`
          color: ${t.theme.color.labelFaint};
          border: 1px dashed ${t.theme.color.bgBorderSolid};
          background-color: ${t.theme.color.bgBase};
        ` : ""};
`;
function _X(t) {
    switch (t) {
    case "micro":
        return 14;
    case "tiny":
        return 16;
    case "small":
        return 18;
    case "regular":
        return 24;
    case "large":
        return 32;
    case "huge":
        return 64;
    default:
        throw void 0
    }
}
var IX = _f
  , EX = pA
  , AX = Sf;
function jX(t, e) {
    var n = {};
    return e = AX(e),
    EX(t, function(r, s, i) {
        IX(n, s, e(r, s, i))
    }),
    n
}
var MX = jX;
const Vb = Cn(MX)
  , Bb = "desktopTabs";
var W4;
(function(t) {
    function e(r) {
        return `${Bb}:${r}`
    }
    t.getKey = e;
    function n() {
        ke.removeAllWithCondition(r=>r.startsWith(Bb))
    }
    t.clearAll = n
}
)(W4 || (W4 = {}));
const Vm = class Vm {
    static downloadFile(e, n) {
        const r = self.document.createElement("a");
        r.setAttribute("href", e),
        r.setAttribute("download", n ?? ""),
        r.setAttribute("target", "_self"),
        r.style.visibility = "hidden",
        self.document.body.appendChild(r),
        this._isDownloading = !0,
        r.click(),
        this._isDownloading = !1,
        self.document.body.removeChild(r)
    }
    static get isDownloading() {
        return this._isDownloading
    }
}
;
Vm._isDownloading = !1;
let A9 = Vm;
const s0e = y.forwardRef((t,e)=>(TX(t, e),
null));
function TX(t, e) {
    const n = y.useRef(!1);
    y.useImperativeHandle(e, ()=>({
        async disable(r) {
            if (n.current = !0,
            r)
                try {
                    await r()
                } catch (s) {
                    throw n.current = !1,
                    s
                }
        },
        enable() {
            n.current = !1
        }
    })),
    LX(t, n),
    OX(t)
}
const j_ = new Tt;
function LX(t, e) {
    const n = y.useContext(ZA)
      , r = y.useContext(FX);
    y.useEffect(()=>{
        if (!t.when || n.staticContext)
            return;
        const s = {
            when: t.when,
            message: t.message,
            disabled: e
        };
        return r.add(n, s),
        ()=>{
            r.remove(n, s)
        }
    }
    , [n.location, t.when, t.message])
}
function OX(t) {
    const e = Af();
    return y.useEffect(()=>{
        if (!t.when)
            return;
        const n = Xt.isElectron ? PX(t, e) : RX(t, e);
        return window.addEventListener("beforeunload", n),
        ()=>{
            window.removeEventListener("beforeunload", n)
        }
    }
    , [e, t.message, t.when]),
    null
}
const RX = (t,e)=>n=>{
    Pp(t.when, {
        type: "unload",
        currentLocation: e
    }) && !A9.isDownloading && (n.preventDefault(),
    n.returnValue = "")
}
;
let Ub = !0;
const PX = (t,e)=>n=>{
    Pp(t.when, {
        type: "unload",
        currentLocation: e
    }) && Ub && "confirm"in Xt.bridge && (n.preventDefault(),
    n.returnValue = !1,
    Xt.bridge.confirm(t.message ?? j9).then(r=>{
        var s;
        if (r) {
            Ub = !1;
            const i = (s = self.document.activeElement) == null ? void 0 : s.getAttribute("href");
            i ? window.location.href = i : window.location.reload()
        }
    }
    ))
}
  , j9 = "Are you sure you want to leave this page? Changes you made may not be saved.";
function Pp(t, e) {
    return t ? typeof t == "function" ? t(e) : t : !1
}
class $X {
    add(e, n) {
        this.blockers.push(n),
        this.register(e)
    }
    remove(e, n) {
        this.blockers = this.blockers.filter(r=>r !== n),
        this.register(e)
    }
    register(e) {
        var n;
        (n = this.unblock) == null || n.call(this),
        this.unblock = e.history.block(this.blocker(e))
    }
    blocker(e) {
        return (n,r)=>{
            const s = this.blockers
              , i = [];
            for (const a of s) {
                const {when: o, message: l, disabled: d} = a;
                if (d.current || e.location.pathname === n.pathname)
                    continue;
                Pp(o, {
                    type: "navigation",
                    currentLocation: e.location,
                    nextLocation: n,
                    historyAction: r
                }) && i.push(l ?? j9)
            }
            return i.length && j_.fire(),
            i.length === 0 ? void 0 : i.length === 1 ? i[0] : j9
        }
    }
    constructor() {
        this.blockers = []
    }
}
const FX = y.createContext(new $X)
  , M_ = window.location.href
  , NX = M_.includes("isSecondaryWindow=true");
class Fu {
    constructor(e, n, r, s, i, a) {
        this.id = e,
        this.isNew = n,
        this._location = r,
        this.pinned = !1,
        this.parentIds = new Set,
        this.title = s ?? "",
        this.pinnedTitle = a ?? s,
        this.rawImage = i,
        Ln(this, {
            id: ut,
            _location: ut.ref,
            title: ut,
            pinnedTitle: ut,
            isNew: ut,
            rawImage: ut.ref,
            active: ms,
            image: ms,
            open: Le,
            close: Le,
            duplicate: Le
        })
    }
    get location() {
        return this._location
    }
    set location(e) {
        const n = {
            ...e.state
        };
        delete n.tabId,
        lt(()=>{
            this._location = {
                pathname: e.pathname,
                search: e.search,
                hash: e.hash,
                state: n
            }
        }
        )
    }
    get active() {
        return this.id === Es.instance.activeTabId
    }
    get image() {
        return this.rawImage ?? c.jsx(ED, {})
    }
    set image(e) {
        this.rawImage = e
    }
    open() {
        Es.instance.openTab(this.id)
    }
    close() {
        Es.instance.closeTab(this.id)
    }
    duplicate() {
        Es.instance.duplicateTabById(this.id)
    }
    pin() {
        Es.instance.pinTab(this.id)
    }
    unpin() {
        Es.instance.unpinTab(this.id)
    }
    clone(e) {
        return new Fu(e,!0,this.location,this.title,this.rawImage)
    }
}
class Es {
    static get instance() {
        return this._instance || (this._instance = new Es),
        this._instance
    }
    constructor() {
        this.initialized = !1,
        this.justDisplayedNavigationPrompt = !1,
        this.tabs = [],
        this.activeTabId = 0,
        this.nextTabId = 1,
        this.closedTabs = [],
        Ln(this, {
            tabs: ut,
            activeTabId: ut,
            activeTab: ms,
            initialize: Le,
            openTab: Le,
            addTabFromPath: Le,
            closeTab: Le,
            setPageInfo: Le,
            reorderTabs: Le,
            openNextTab: Le,
            openPreviousTab: Le,
            reopenClosedTab: Le,
            openTabAtIndex: Le
        })
    }
    initialize(e) {
        var o, l;
        if (qe.isEnabled(qe.noDesktopTabStateOnWeb) && !Xt.isElectron)
            return;
        this.initialized = !0;
        const n = W4.getKey(e.id)
          , r = ke.get(n) ?? {}
          , s = new URL(M_)
          , i = s.pathname.startsWith(`/${e.urlKey}`);
        if (this.tabs = (NX ? [] : r.tabs ?? []).map(d=>{
            let u = d.location;
            d.path && (u = p2(d.path));
            for (const f of e.previousUrlKeys)
                u.pathname = u.pathname.replace(new RegExp(`^/${Sp(f)}/`), `/${e.urlKey}/`);
            const h = new Fu(d.id,!1,u,d.title);
            return h.pinned = d.pinned,
            h
        }
        ).sort((d,u)=>d.pinned === u.pinned ? 0 : d.pinned ? -1 : 1),
        this.activeTabId = r.activeTabId ?? ((o = this.tabs.at(0)) == null ? void 0 : o.id) ?? 0,
        this.nextTabId = r.nextTabId ?? ((l = this.tabs.at(1)) == null ? void 0 : l.id) ?? 1,
        i) {
            let d = s.pathname;
            s.search && (d += s.search),
            s.hash && (d += s.hash),
            this.addOrFocusTabFromPath(d)
        }
        this.nextTabId === this.activeTabId && this.nextTabId++,
        this.closedTabs = [];
        const a = ()=>{
            Xt.isElectron ? ke.set(n, {
                tabs: this.tabs.map(d=>({
                    id: d.id,
                    title: d.title,
                    location: r0(d.location),
                    pinned: d.pinned
                })),
                activeTabId: this.activeTabId,
                nextTabId: this.nextTabId
            }) : ke.remove(n)
        }
        ;
        if (ds.instance.history.listen((d,u)=>{
            var f;
            if (u === "POP") {
                const p = (f = d.state) == null ? void 0 : f.tabId;
                p != null && lt(()=>{
                    this.activeTabId = p
                }
                )
            }
            const h = this.activeTab;
            h && (h.location = d)
        }
        ),
        Tk(a),
        window.addEventListener("beforeunload", d=>{
            d.defaultPrevented || a()
        }
        ),
        j_.subscribe(()=>{
            this.justDisplayedNavigationPrompt = !0
        }
        ),
        this.activeTab) {
            const {pathname: d, search: u} = this.activeTab.location;
            ds.instance.replace(d, {
                state: {
                    ...ds.instance.location.state,
                    tabId: this.activeTab.id
                },
                search: u
            })
        }
    }
    get activeTab() {
        return this.tabs.find(e=>e.id === this.activeTabId)
    }
    openTab(e) {
        this.justDisplayedNavigationPrompt = !1;
        const n = this.tabs.find(a=>a.id === e);
        if (!n || e === this.activeTabId)
            return;
        const r = r0(n.location);
        ds.instance.redirectTo(r.pathname, {
            ...r,
            state: {
                ...r.state,
                tabId: this.activeTabId
            }
        });
        const s = a=>lt(()=>{
            this.activeTabId = a
        }
        )
          , i = this.activeTabId;
        s(e),
        setTimeout(()=>{
            this.justDisplayedNavigationPrompt && ds.instance.location.pathname !== r.pathname && s(i)
        }
        , 100)
    }
    duplicateTabById(e) {
        const n = this.tabs.findIndex(i=>i.id === e)
          , r = this.tabs[n];
        if (!r)
            return;
        const s = r.clone(this.nextTabId++);
        this.tabs.splice(n + 1, 0, s),
        s.open()
    }
    addTabFromPath(e="", n=!0) {
        var d;
        const r = p2(e)
          , s = new Fu(this.nextTabId++,!0,r)
          , i = ((d = this.activeTab) == null ? void 0 : d.parentIds) ?? [];
        s.parentIds = new Set([this.activeTabId, ...i]);
        const a = this.tabs.findIndex(u=>u.id === this.activeTabId)
          , o = this.tabs.findIndex(u=>!u.pinned)
          , l = Math.max(a + 1, o);
        for (let u = l; u <= this.tabs.length; u++) {
            if (u === this.tabs.length) {
                this.tabs.push(s);
                break
            }
            if (!this.tabs[u].parentIds.has(this.activeTabId)) {
                this.tabs.splice(u, 0, s);
                break
            }
        }
        return n && this.openTab(s.id),
        s.id
    }
    appendTab(e="") {
        const n = p2(e)
          , r = new Fu(this.nextTabId++,!0,n);
        return lt(()=>{
            this.tabs.push(r)
        }
        ),
        this.openTab(r.id),
        r.id
    }
    addOrFocusTabFromPath(e) {
        const n = this.tabs.find(r=>r.location.pathname === e);
        n ? this.openTab(n.id) : this.addTabFromPath(e)
    }
    reopenClosedTab() {
        const e = this.closedTabs.pop();
        if (e) {
            const {tab: n, index: r} = e;
            return lt(()=>{
                n.isNew = !0,
                this.tabs.splice(r, 0, n),
                this.openTab(n.id)
            }
            ),
            n.id
        }
    }
    openTabAtIndex(e) {
        const n = Math.max(0, Math.min(e, this.tabs.length - 1))
          , r = this.tabs[n];
        r && this.openTab(r.id)
    }
    closeTab(e) {
        e === this.activeTabId && (this.tabs.length === 1 ? this.activeTabId = 0 : this.openTab(this.findNextTab(this.activeTabId)));
        const n = this.tabs.findIndex(r=>r.id === e);
        if (n !== -1) {
            const r = this.tabs.splice(n, 1)[0];
            this.closedTabs.push({
                tab: r,
                index: n
            })
        }
    }
    pinTab(e) {
        const n = this.tabs.find(r=>r.id === e);
        if (n) {
            const r = this.tabs.find(i=>!i.pinned)
              , s = r ? r.id : this.tabs[0].id;
            this.reorderTabs(e, s),
            n.pinned = !0
        }
    }
    unpinTab(e) {
        const n = this.tabs.find(r=>r.id === e);
        if (n) {
            const r = this.tabs.findIndex(a=>!a.pinned) - 1
              , s = this.tabs[r]
              , i = s ? s.id : this.tabs[0].id;
            this.reorderTabs(e, i),
            n.pinned = !1
        }
    }
    reorderTabs(e, n) {
        const r = this.tabs.findIndex(a=>a.id === e)
          , s = this.tabs.findIndex(a=>a.id === n)
          , [i] = this.tabs.splice(r, 1);
        this.tabs.splice(s, 0, i)
    }
    openNextTab(e=!1) {
        const n = this.tabs.findIndex(s=>s.id === this.activeTabId)
          , r = this.tabs[n + 1];
        if (r) {
            r.open();
            return
        }
        e && !r && this.tabs[0].open()
    }
    openPreviousTab(e=!1) {
        const n = this.tabs.findIndex(s=>s.id === this.activeTabId)
          , r = this.tabs[n - 1];
        if (r) {
            r.open();
            return
        }
        e && !r && this.tabs[this.tabs.length - 1].open()
    }
    setPageInfo(e) {
        const {id: n, title: r, image: s, pinnedTitle: i} = e
          , a = this.tabs.find(o=>o.id === n);
        a && (a.title = r,
        a.pinnedTitle = i ?? r,
        s && (a.image = s))
    }
    findNextTab(e) {
        let n = this.tabs.findIndex(r=>r.id === e);
        return n === -1 && (n = 0),
        n + 1 < this.tabs.length ? this.tabs[n + 1].id : this.tabs[n - 1].id
    }
}
const Hb = "linear_first_location_key";
class ds {
    static initialize(e, n) {
        ds.privateInstance === void 0 && (ds.privateInstance = new ds(e,n))
    }
    static get instance() {
        if (ds.privateInstance === void 0)
            throw Error("Routing manager accessed before it has been initialized");
        return ds.privateInstance
    }
    static navigateExternal(e, n) {
        if (n != null && n.useWindow)
            window.open(e, "_blank");
        else {
            const r = self.document.createElement("a");
            r.href = e,
            r.target = "_blank",
            r.rel = "noopener noreferrer",
            r.click(),
            r.remove()
        }
    }
    constructor(e, n) {
        this.isInitialPath = !0,
        this.rafIds = [],
        this.location = e,
        this.history = n;
        const r = sessionStorage.getItem(Hb);
        r ? this.firstLocationKey = r : this.setFirstLocationKey(e.key || "default"),
        Ln(this, {
            location: ut.ref,
            setLocation: Le,
            replace: Le,
            goBack: Le
        })
    }
    openPage({newTab: e, path: n, options: r}) {
        e ? Object.assign(self.document.createElement("a"), {
            target: "_blank",
            rel: "noopener noreferrer",
            href: n
        }).click() : this.redirectTo(n, r)
    }
    redirectTo(e, n) {
        this.rafIds.forEach(s=>cancelAnimationFrame(s)),
        this.rafIds.length = 0;
        const r = Es.instance.activeTabId;
        this.rafIds.push(requestAnimationFrame(()=>{
            this.rafIds.push(requestAnimationFrame(()=>{
                var i;
                const s = this.cleanPath(e);
                if (qe.isEnabled(qe.pinnedTabsFrozenUrl)) {
                    const a = Es.instance.activeTabId;
                    if (r === a && (i = Es.instance.activeTab) != null && i.pinned) {
                        Es.instance.addTabFromPath(s, !0);
                        return
                    }
                }
                if (s.indexOf("?") >= 0)
                    this.history.push(s);
                else {
                    const [a,o] = s.split("#");
                    this.history.push({
                        pathname: a,
                        hash: o,
                        ...n,
                        state: n != null && n.state ? Vb(n.state, l=>r0(l)) : void 0
                    })
                }
            }
            ))
        }
        ))
    }
    replace(e, n={}) {
        e.indexOf("?") >= 0 ? this.history.replace(this.cleanPath(e)) : this.history.replace({
            pathname: this.cleanPath(e),
            ...n,
            state: n.state ? Vb(n.state, r=>r0(r)) : void 0
        })
    }
    removeKeysFromState(e) {
        this.history.replace({
            ...this.history.location,
            state: Ic(this.history.location.state ?? {}, e)
        })
    }
    goBack() {
        this.history.goBack()
    }
    setLocation(e) {
        this.isInitialPath = !1;
        const n = this.history.action
          , r = this.location.key || "default";
        n === "REPLACE" && r === this.firstLocationKey && this.setFirstLocationKey(r),
        this.location = e
    }
    hasHistory() {
        return (this.location.key || "default") !== this.firstLocationKey
    }
    cleanPath(e) {
        if (e.indexOf("://") !== -1) {
            const n = e.split("://")[1].split("/");
            return n.shift(),
            "/" + n.join("/")
        }
        return e
    }
    setFirstLocationKey(e) {
        this.firstLocationKey = e,
        sessionStorage.setItem(Hb, e)
    }
}
const x3 = class x3 {
    static isWebsiteRouterPath(e) {
        return x3.websiteRouterMatchers.some(n=>n.test(e))
    }
}
;
x3.websiteRouterMatchers = [/^\/(blog|careers|changelog|contact|customers|features|integrations|interfaces|method|releases|rewind|security|startups)(\/|$)/i, /^\/(about|brand|change|download|downloads|dpa|fm|harry|homepage|lenny|pricing|privacy|readme|terms|unsubscribe|join-slack|open-desktop|mobile|ios|android|plan)(\/|$)/i, /^\/(20vc|linear-method|release-2020-12|jobs|guides|website|support|asks|planning)(\/|$)/i, /^\/(rss|sitemap\.xml)(\/|$)/i, /^\/docs(\/|$)/i, /^\/(static|favicon\.ico|\.well-known|robots\.txt)(\/|$)/i, /^\/(api|_next)(\/|$)/i];
let M9 = x3;
function VX(t, e=ft.CLIENT_URL || "") {
    if (t.startsWith("//") && (t = `https:${t}`),
    t.startsWith("/") && (t = `${e}${t}`),
    !e || !t.startsWith(e))
        return !1;
    try {
        const n = new URL(t);
        return !M9.websiteRouterMatchers.some(r=>r.test(n.pathname))
    } catch {
        return !1
    }
}
function BX(t, e) {
    const n = ft.CLIENT_URL || ""
      , r = t.slice(n.length);
    e.push(r)
}
const UX = y.forwardRef(function(e, n) {
    const {href: r, ...s} = e
      , i = jf()
      , a = r != null && r.startsWith("/") ? ft.CLIENT_URL + r : r;
    return (a ? a === li(a) : !0) ? r && e.target !== "external" && VX(r) ? c.jsx("a", {
        href: r,
        ...s,
        ref: n,
        onClick: l=>{
            l.preventDefault(),
            BX(r, i)
        }
    }) : c.jsx("a", {
        ...e,
        target: e.target === "external" ? "external" : "_blank",
        ref: n,
        rel: "noopener noreferrer"
    }) : c.jsx("span", {
        ...s,
        ref: n
    })
});
function HX(t) {
    return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey)
}
const xl = $a.forwardRef(function(e, n) {
    const {fastClick: r, to: s, innerRef: i, onMouseDown: a, ...o} = e
      , l = i || n
      , d = jf()
      , u = typeof s == "string" ? p2(s, void 0, void 0, d.location) : s
      , h = u ? d.createHref(u) : void 0;
    pl() && u && (u.state ? u.state.tabId = Es.instance.activeTabId : u.state = {
        tabId: Es.instance.activeTabId
    });
    const p = b=>!b.defaultPrevented && b.button === 0 && !e.target && !HX(b)
      , m = b=>{
        e.onClick && e.onClick(b),
        p(b) && (b.stopPropagation(),
        b.preventDefault(),
        C())
    }
      , g = b=>{
        var k;
        e.onKeyDown && e.onKeyDown(b),
        !b.defaultPrevented && !b.metaKey && b.key === "Enter" && (C(),
        (k = b.currentTarget) == null || k.blur())
    }
      , C = ()=>{
        u != null && u.pathname && ds.instance.redirectTo(u.pathname, u)
    }
    ;
    return c.jsx("a", {
        ...o,
        onKeyDown: g,
        onMouseDown: r ? m : a,
        onClick: r ? b=>{
            p(b) && (b.stopPropagation(),
            b.preventDefault())
        }
        : m,
        href: h,
        ref: l
    })
})
  , i0e = $a.forwardRef(function(e, n) {
    const {kind: r, size: s="normal", onlyIcon: i, icon: a, children: o, ...l} = e;
    return c.jsx(zX, {
        children: a ? c.jsxs(c.Fragment, {
            children: [a, o]
        }) : o,
        ...l,
        ref: n,
        icon: a,
        $kind: r,
        $size: s,
        $onlyIcon: i
    })
})
  , zX = ae(xl)`
  ${js.rootCss}
  ${t=>js.kindCss({
    kind: t.$kind ?? "primary"
})}
  ${t=>js.sizeCss(t.$size ?? "normal", t.$onlyIcon)}

  &:not([data-disabled="true"]):${gs} {
    ${t=>js.kindCss({
    kind: t.$kind ?? "primary",
    active: !0
})}
  }
  ${t=>js.iconCss({
    size: t.$size ?? "normal",
    $onlyIcon: t.$onlyIcon,
    icon: t.icon
})};
`
  , a0e = $a.forwardRef(function(e, n) {
    const {kind: r, size: s, ...i} = e;
    return c.jsx(ZX, {
        ...i,
        ref: n,
        $kind: r,
        $size: s
    })
})
  , ZX = ae(UX)`
  ${js.rootCss}
  ${t=>js.kindCss({
    kind: t.$kind ?? "primary"
})}
  ${t=>js.sizeCss(t.$size ?? "normal")}

  &:not([data-disabled="true"]):${gs} {
    ${t=>js.kindCss({
    kind: t.$kind ?? "primary",
    active: !0
})}
  }
`
  , o0e = y.forwardRef(function(t, e) {
    return c.jsx(qX, {
        ...t,
        ref: e
    })
})
  , qX = ae(xl)`
  position: absolute;
  border-radius: 6px;
  inset: 0;
  display: block;
`
  , c0e = ae.a`
  position: absolute;
  inset: 0;
  display: block;
`
  , T_ = Qt`
  transition-property: background-color, border-color;
  transition-duration: ${pn("highlightFadeOut")};
  padding: 3px 5px;
  margin: -3px -5px;
  border-radius: 3px;

  // prettier-ignore
  &:${gs} {
    background-color: ${t=>t.theme.isDark ? t.theme.color.bgShadeHover : t.theme.color.bgBorderFaint};
    transition-duration: ${pn("highlightFadeIn")};
  }
`
  , L_ = ae(Xe)`
  ${T_}
  max-width: 100%;
`
  , O_ = ae(xl)`
  ${T_}
`
  , G4 = ae(O_)`
  display: inline-flex;
  gap: 6px;
  align-items: center;
  padding-top: 5px;
  margin-top: -5px;
  padding-bottom: 5px;
  margin-bottom: -5px;
`
  , fh = rn(function(e) {
    const {items: n, maxLength: r=8, className: s} = e
      , [i,a] = y.useState(!1)
      , o = i ? 0 : n.length - r
      , l = i ? n : n.slice(0, r)
      , d = y.useRef(null)
      , u = Ux(d) || "auto";
    return c.jsxs(GX, {
        column: !0,
        className: s,
        gap: 8,
        ref: d,
        children: [c.jsx(WX, {
            column: !0,
            gap: 10,
            style: {
                maxHeight: u
            },
            children: e.children(l)
        }), o > 0 && c.jsxs(KX, {
            type: "smallPlus",
            color: "labelMuted",
            onClick: ()=>{
                a(!0)
            }
            ,
            role: "button",
            children: ["and ", o, " more"]
        })]
    })
})
  , WX = ae(Lt)`
  padding: 6px;
  overflow-y: auto;
  overflow-x: hidden;
`
  , GX = ae(Lt)`
  min-width: 160px;
  // negate of the popover padding
  margin: -${e4.vertical}px -${e4.horizontal}px;
  padding: 3px;
`
  , KX = ae(Xe)`
  margin: 6px;
  margin-top: 0;
  &:hover {
    color: ${t=>t.theme.color.labelBase};
  }
`
  , YX = rn(function(e) {
    const n = e.type || "small"
      , r = (e.badges || R_(e.user)).filter(Boolean);
    return r.length === 0 ? null : c.jsx(QX, {
        children: r.map(s=>c.jsx(XX, {
            type: n,
            capitalize: e.capitalize,
            children: s
        }, s))
    })
})
  , QX = ae("span")`
  display: inline-flex;
  align-items: center;
  gap: 4px;
`
  , XX = ae("div")`
  display: inline-block;
  padding: 0px 5px;
  border-radius: 2px;
  ${t=>!t.capitalize && "text-transform: lowercase;"};

  background: ${t=>t.color ? t.theme.color[t.color] : t.theme.color.bgShadeHover};
  color: ${t=>t.textColor ? t.theme.color[t.textColor] || t.textColor : t.theme.color.labelBase};

  ${t=>t.type === "small" ? `
    height: 16px;
    line-height: 16px;
    font-size: ${Pc("micro")};;
    font-weight: 600;
  ` : `
    height: 20px;
    line-height: 20px;
    font-size: ${Pc("small")};
    font-weight: 600;
  `}
`;
function R_(t) {
    return [t.isSuspended ? t.isDowngraded ? "Downgraded" : "Suspended" : void 0, t.isAdmin && t.organization.activeSubscription ? "Admin" : void 0, t.guest ? "Guest" : void 0, t.hasLeftWorkspace ? "Left workspace" : void 0].concrete()
}
var Bi;
(function(t) {
    t[t.online = 0] = "online",
    t[t.away = 1] = "away",
    t[t.offline = 2] = "offline"
}
)(Bi || (Bi = {}));
var W0;
(function(t) {
    t.overview = "overview",
    t.projects = "projects"
}
)(W0 || (W0 = {}));
function JX(t) {
    if (Object.values(W0).includes(t))
        return {
            tab: t
        };
    if (K3(t))
        return {
            facetId: t
        }
}
function l0e(t) {
    switch (t) {
    case "overview":
        return "Overview";
    case "projects":
        return "Projects";
    default:
        throw void 0
    }
}
var gn;
(function(t) {
    t.Project = "Project",
    t.Initiative = "Initiative",
    t.TeamPage = "TeamPage",
    t.WorkspacePage = "WorkspacePage",
    t.Unknown = "Unknown"
}
)(gn || (gn = {}));
var ol;
(function(t) {
    t.projects = "projects"
}
)(ol || (ol = {}));
function eJ() {
    const {search: t} = Af();
    return y.useMemo(()=>new URLSearchParams(t), [t])
}
class Nr {
    constructor(e, n) {
        this.name = e,
        this.priority = n
    }
    static createFromPriority(e) {
        switch (e) {
        case 1:
            return Cu[1];
        case 2:
            return Cu[2];
        case 3:
            return Cu[3];
        case 4:
            return Cu[4];
        default:
            return Cu[0]
        }
    }
    static createFromName(e) {
        for (const n of this.allPriorities)
            if (n.name.toLowerCase() === e.toLowerCase() || Number(e) === n.priority)
                return n
    }
    static get allPriorities() {
        return [0, 1, 2, 3, 4].map(e=>Nr.createFromPriority(e))
    }
    get isNoPriority() {
        return this.priority === 0
    }
    get isUrgent() {
        return this.priority === 1
    }
    get isHigh() {
        return this.priority === 2
    }
    get isMedium() {
        return this.priority === 3
    }
    get isLow() {
        return this.priority === 4
    }
    get filterValue() {
        return this.priority
    }
}
const P_ = {
    serialize: t=>t.priority,
    deserialize: t=>Nr.createFromPriority(t)
}
  , Cu = [new Nr("No priority",0), new Nr("Urgent",1), new Nr("High",2), new Nr("Medium",3), new Nr("Low",4)];
function Nn(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Zt extends It {
    get markdownDescription() {
        return this.descriptionData ? Po.serialize(this.descriptionData) : ""
    }
    constructor(e=!0) {
        super(e),
        this.title = "",
        this.children = new te(new de("subIssueSortOrder").and("createdAt")),
        this.labels = new te(new de("name")),
        this.attachments = [],
        e && this.makeObservable()
    }
    static createOrUpdateFromIssue(e, n, r, s) {
        var i, a;
        return this.createOrUpdate(e, n, {
            title: r.title,
            descriptionData: (i = r.documentContent.value) == null ? void 0 : i.contentData,
            priority: r.priority,
            assignee: r.assignee,
            estimate: r.estimate,
            parentIssue: s || (a = r.parent) == null ? void 0 : a.value,
            project: r.project,
            projectMilestone: r.projectMilestone,
            cycle: r.cycle,
            state: r.state,
            labels: r.labels.elements,
            dueDate: r.dueDate,
            attachments: r.attachments.elements,
            draftId: r.createdFromDraftId,
            lastAppliedTemplate: r.lastAppliedTemplate
        }, s)
    }
    static createOrUpdate(e, n, r, s) {
        const {title: i, descriptionData: a, priority: o, assignee: l, estimate: d, parentIssue: u, project: h, projectMilestone: f, cycle: p, state: m, labels: g, dueDate: C, attachments: b, draftId: k, lastAppliedTemplate: S} = r
          , R = (k ? this.store.findById(Zt, k) : void 0) ?? new Zt;
        return lt(()=>{
            R.creator = n,
            R.teamId = e.id,
            R.title = i || "",
            R.descriptionData = a,
            R.stateId = m && e === m.team && e.userCanChangeIssueStatus(n) ? m.id : m ? e.defaultStateForType(m.type).id : e.defaultState(n).id,
            R.priority = o || Nr.createFromPriority(0),
            R.assigneeId = l == null ? void 0 : l.id,
            R.cycleId = p && e.cycles.map(T=>T.id).includes(p.id) ? p.id : void 0,
            R.estimate = d,
            R.projectId = h && h.accessibleTeams.contains(e) ? h.id : void 0,
            R.lastAppliedTemplate = S,
            R.projectMilestoneId = R.projectId && f && f.project.id === R.projectId ? f.id : void 0,
            R.dueDate = C,
            s ? R.parent = s : R.parentIssue = u,
            R.labels.clear(),
            g && g.filter(T=>!T.team || T.team === e).forEach(T=>R.labels.add(T)),
            R.attachments = b ? b.map(T=>({
                title: T.title,
                url: T.url
            })) : []
        }
        ),
        R
    }
}
Nn([w()], Zt.prototype, "title", void 0);
Nn([w()], Zt.prototype, "teamId", void 0);
Nn([Ue(()=>ne, {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Zt.prototype, "team", void 0);
Nn([w({
    indexed: !0
})], Zt.prototype, "cycleId", void 0);
Nn([w({
    indexed: !0
})], Zt.prototype, "projectId", void 0);
Nn([w({
    indexed: !0
})], Zt.prototype, "projectMilestoneId", void 0);
Nn([w({
    serializer: hn,
    shallowObservation: !0
})], Zt.prototype, "descriptionData", void 0);
Nn([pe(()=>Zt, "children", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Zt.prototype, "parent", void 0);
Nn([pe(()=>re, "draftChildren", {
    nullable: !0,
    indexed: !0
})], Zt.prototype, "parentIssue", void 0);
Nn([xe()], Zt.prototype, "children", void 0);
Nn([w({
    serializer: P_
})], Zt.prototype, "priority", void 0);
Nn([w()], Zt.prototype, "estimate", void 0);
Nn([pe(()=>K, "issueDrafts", {
    optional: !1,
    nullable: !1,
    indexed: !0,
    persistance: ee.none
})], Zt.prototype, "creator", void 0);
Nn([w()], Zt.prototype, "assigneeId", void 0);
Nn([Ue(()=>on, {
    persistance: ee.none,
    nullable: !0,
    indexed: !0
})], Zt.prototype, "state", void 0);
Nn([w()], Zt.prototype, "stateId", void 0);
Nn([w()], Zt.prototype, "subIssueSortOrder", void 0);
Nn([ii(()=>Ut, "issueDrafts", {
    indexed: !0
})], Zt.prototype, "labels", void 0);
Nn([w({
    serializer: Jo
})], Zt.prototype, "dueDate", void 0);
Nn([w({
    serializer: hn,
    shallowObservation: !0
})], Zt.prototype, "attachments", void 0);
Nn([O], Zt.prototype, "markdownDescription", null);
Nn([rt], Zt, "createOrUpdateFromIssue", null);
Nn([rt], Zt, "createOrUpdate", null);
Zt = Nn([We("IssueDraft")], Zt);
const D3 = class D3 {
    static format(e, n) {
        const {resolution: r} = e
          , {fiscalYearStartMonth: s, shortYear: i, hideYear: a} = n
          , o = e.date.toLocalDate();
        if (!r)
            return ((n == null ? void 0 : n.dateFormat) || Yc)(o);
        switch (r) {
        case mt.month:
            return KL(o, {
                shortYear: i,
                hideYear: a
            });
        case mt.quarter:
            return YL(o, {
                fiscalYearStartMonth: s,
                shortYear: i,
                hideYear: a
            });
        case mt.halfYear:
            return QL(o, {
                fiscalYearStartMonth: s,
                shortYear: i,
                hideYear: a
            });
        case mt.year:
            return H3(o, {
                fiscalYearStartMonth: s,
                shortYear: i
            });
        default:
            throw new zt(r)
        }
    }
    static isEqual(e, n) {
        return !e && !n ? !0 : !e || !n ? !1 : e.date === n.date && e.resolution === n.resolution
    }
    static toInterval(e, n) {
        const {resolution: r} = e
          , s = this.leadingDateInInterval({
            date: e.date,
            resolution: e.resolution,
            fiscalYearStartMonth: n
        });
        let i;
        switch (r) {
        case mt.month:
            i = $n(s, 1);
            break;
        case mt.quarter:
            i = $n(s, 3);
            break;
        case mt.halfYear:
            i = $n(s, 6);
            break;
        case mt.year:
            i = $n(s, 12);
            break;
        default:
            throw new zt(r)
        }
        return [s.toTimelessDate(), i.toTimelessDate()]
    }
    static fromInterval(e, n) {
        const r = this.getResolutionFromInterval(e, n);
        return r ? {
            date: e[0],
            resolution: r
        } : null
    }
    static getResolutionFromInterval(e, n) {
        const [r,s] = e.map(l=>l.toLocalDate())
          , [i,a] = e.map(l=>uc.toFiscalYear(l.toLocalDate(), n));
        return oc(ps(r), r) ? oc($n(r, 1), s) ? mt.month : oc(yg(i), i) && oc($n(i, 3), a) ? mt.quarter : f2(i) % 6 === 0 && oc($n(i, 6), a) ? mt.halfYear : oc(xu(i), i) && oc($n(i, 12), a) ? mt.year : null : null
    }
    static isSameFiscalYear(e, n, r) {
        const s = uc.toFiscalYear(e, r)
          , i = uc.toFiscalYear(n, r);
        return Ef(s, i)
    }
}
;
D3.leadingDateInInterval = e=>{
    const {date: n, resolution: r, fiscalYearStartMonth: s} = e
      , i = n.toLocalDate();
    if (r === mt.month)
        return ps(i);
    const a = uc.toFiscalYear(i, s);
    let o;
    if (r === mt.quarter)
        o = yg(a);
    else if (r === mt.halfYear) {
        const l = xu(a);
        o = f2(a) < 6 ? l : $n(l, 6)
    } else if (r === mt.year)
        o = xu(a);
    else
        throw new zt(r);
    return uc.toCalendarYear(o, s)
}
,
D3.trailingDateInInterval = e=>{
    const {date: n, resolution: r, fiscalYearStartMonth: s} = e
      , i = n.toLocalDate();
    if (r === mt.month)
        return Sa(i);
    const a = uc.toFiscalYear(i, s);
    let o;
    if (r === mt.quarter)
        o = Sa(qA(a));
    else if (r === mt.halfYear) {
        const l = xu(a)
          , d = f2(a) < 6 ? Sa($n(l, 5)) : Cg(a);
        o = Sa(d)
    } else if (r === mt.year)
        o = Sa(Cg(a));
    else
        throw new zt(r);
    return Sa(uc.toCalendarYear(o, s))
}
;
let Ys = D3;
class uc {
    static toFiscalYear(e, n) {
        return hl(e, n)
    }
    static toCalendarYear(e, n) {
        return $n(e, n)
    }
}
var Nu;
(function(t) {
    function e(s) {
        let i = s.completedCount + er.progressMultipliers[ye.started] * s.startedCount === 0 ? 0 : (s.completedCount + er.progressMultipliers[ye.started] * s.startedCount) / (s.completedCount + s.unstartedCount + s.startedCount + s.backlogCount);
        return i = Math.round(i * 100),
        {
            progress: i,
            status: i === 0 ? "unstarted" : i === 100 ? "done" : "next"
        }
    }
    t.getIssueInfoProgressAndStatus = e;
    function n(s, i, a, o) {
        const l = s.statusId !== i.statusId ? {
            from: i.statusId,
            to: s.statusId
        } : void 0
          , d = i.startDate ? Ys.format({
            date: i.startDate,
            resolution: i.startDateResolution
        }, {
            fiscalYearStartMonth: o
        }) : void 0
          , u = s.startDate ? Ys.format({
            date: s.startDate,
            resolution: s.startDateResolution
        }, {
            fiscalYearStartMonth: o
        }) : void 0
          , h = d !== u ? {
            from: d,
            to: u
        } : void 0
          , f = i.targetDate ? Ys.format({
            date: i.targetDate,
            resolution: i.targetDateResolution
        }, {
            fiscalYearStartMonth: o
        }) : void 0
          , p = s.targetDate ? Ys.format({
            date: s.targetDate,
            resolution: s.targetDateResolution
        }, {
            fiscalYearStartMonth: o
        }) : void 0
          , m = f !== p ? {
            from: f,
            to: p
        } : void 0
          , g = s.leadId !== i.leadId ? {
            from: i.leadId,
            to: s.leadId
        } : void 0
          , C = s.memberIds.filter(ge=>!i.memberIds.some(Te=>Te === ge))
          , b = i.memberIds.filter(ge=>!s.memberIds.some(Te=>Te === ge))
          , k = s.memberIds.join("") !== i.memberIds.join("") ? {
            added: C.length > 0 ? C : void 0,
            removed: b.length > 0 ? b : void 0
        } : void 0
          , S = s.teamsInfo.map(ge=>ge.id)
          , D = i.teamsInfo.map(ge=>ge.id)
          , R = S.filter(ge=>!D.some(Te=>Te === ge))
          , T = D.filter(ge=>!S.some(Te=>Te === ge))
          , B = S.join("") !== D.join("") ? {
            added: R.length > 0 ? R : void 0,
            removed: T.length > 0 ? T : void 0
        } : void 0
          , z = i.milestonesInfo.map(ge=>{
            const {progress: Te, status: Ge} = e(ge.issueInfo);
            return {
                ...ge,
                progress: Te,
                status: Ge
            }
        }
        )
          , W = Iu(s.milestonesInfo.map(ge=>{
            const {progress: Te, status: Ge} = e(ge.issueInfo);
            return {
                ...ge,
                progress: Te,
                status: Ge
            }
        }
        ), ge=>!z.some(Te=>Te.id === ge.id));
        let fe = W[0];
        const me = W[1];
        let _e = z.filter(ge=>!me.some(Te=>Te.id === ge.id));
        fe = fe.filter(ge=>ge.progress > 0 || ge.targetDate !== void 0),
        _e = _e.filter(ge=>ge.progress > 0);
        const I = fe.length > 0 || me.length > 0 || z.length > 0 ? {
            added: fe.length > 0 ? fe : void 0,
            removed: _e.length > 0 ? _e : void 0,
            changed: me.map(ge=>{
                const Te = z.find(Ge=>Ge.id === ge.id);
                return {
                    name: ge.name,
                    id: ge.id,
                    fromName: (Te == null ? void 0 : Te.name) !== ge.name ? Te == null ? void 0 : Te.name : void 0,
                    targetDate: (Te == null ? void 0 : Te.targetDate) !== ge.targetDate ? {
                        from: Te == null ? void 0 : Te.targetDate,
                        to: ge.targetDate
                    } : void 0,
                    status: {
                        from: Te == null ? void 0 : Te.status,
                        to: ge == null ? void 0 : ge.status
                    },
                    currentProgress: ge.progress,
                    progress: Te && Te.progress !== ge.progress ? {
                        from: Te.progress,
                        to: ge.progress
                    } : void 0
                }
            }
            )
        } : void 0
          , Q = (ge,Te)=>(Te == null ? void 0 : Te.teamsInfo.reduce((Ge,ln)=>Ge + ln.issueInfo[ge], 0)) ?? 0
          , P = Q("triageCount", s)
          , A = Q("triageCount", i)
          , E = P - A
          , V = Q("backlogCount", s)
          , X = Q("backlogCount", i)
          , L = V - X
          , q = Q("unstartedCount", s)
          , oe = Q("unstartedCount", i)
          , we = q - oe
          , _ = Q("startedCount", s)
          , M = Q("startedCount", i)
          , Z = _ - M
          , U = Q("completedCount", s)
          , ce = Q("completedCount", i)
          , De = U - ce
          , Ce = oe + A + X + M + ce
          , Ie = q + P + V + _ + U;
        return {
            lastSnapshotDate: a,
            statusId: l,
            leadId: g,
            memberIds: k,
            teamIds: B,
            startDate: h,
            targetDate: m,
            milestones: I,
            progress: {
                from: Math.round(100 * (ce > 0 ? (ce + M * er.progressMultipliers[ye.started]) / Ce : 0)),
                to: Math.round(100 * (Ie > 0 ? (U + _ * er.progressMultipliers[ye.started]) / Ie : 0))
            },
            issues: {
                scope: {
                    diff: we + E + L + De + Z,
                    sum: q + P + V + _ + U
                },
                [ye.started]: {
                    diff: Z,
                    sum: _
                },
                [ye.completed]: {
                    diff: De,
                    sum: U
                }
            }
        }
    }
    t.getProjectUpdateInfoSnapshotDiff = n;
    async function r(s, i) {
        const a = [];
        if (s.statusId && s.statusId.from !== s.statusId.to) {
            const l = s.statusId.to ? await i.getProjectStatusById(s.statusId.to) : void 0;
            l && a.push(`**Status**: ${l.name}`)
        }
        if (s.leadId && s.leadId.to && s.leadId.from !== s.leadId.to)
            try {
                const d = (await i.getUsersById([s.leadId.to]))[s.leadId.to];
                d && a.push(`**Lead**: ${d} assigned`)
            } catch {}
        s.targetDate && s.targetDate.from !== s.targetDate.to && a.push(`**Target date**: ${T9(s.targetDate.from, s.targetDate.to)}`),
        s.startDate && s.startDate.from !== s.startDate.to && a.push(`**Start date**: ${T9(s.startDate.from, s.startDate.to)}`);
        const o = `*Progress since ${Yc(s.lastSnapshotDate)}*:`;
        if (s.milestones) {
            const l = []
              , d = u=>{
                const h = `**${u.name}**${u.postfix ? ` ${u.postfix}` : ""}:`
                  , f = u.additionalInfo ? u.additionalInfo.filter(Boolean) : [];
                return f.length > 0 ? `${h}  ${f.join("  ·  ")}` : h
            }
            ;
            s.milestones.changed && s.milestones.changed.forEach(u=>{
                (u.progress || u.targetDate) && l.push(d({
                    name: u.name,
                    additionalInfo: [u.progress && u.progress.from !== u.progress.to && u.progress.from !== void 0 && u.progress.to !== void 0 ? Zb(u.progress.from, u.progress.to) : "", u.targetDate && u.targetDate.from !== u.targetDate.to ? zb(u.targetDate.from, u.targetDate.to) : ""]
                }))
            }
            ),
            s.milestones.added && s.milestones.added.forEach(u=>{
                l.push(d({
                    name: u.name,
                    postfix: "added",
                    additionalInfo: [K4(u.progress), u.targetDate ? zb(void 0, u.targetDate) : ""]
                }))
            }
            ),
            s.milestones.removed && s.milestones.removed.forEach(u=>{
                l.push(d({
                    name: u.name,
                    postfix: "removed",
                    additionalInfo: [K4(u.progress), u.targetDate ? Yc(u.targetDate) : ""]
                }))
            }
            ),
            l.length > 0 && (a.length > 0 && a.push(""),
            a.push(o),
            a.push(...l.map(u=>`—  ${u}`)))
        } else
            s.progress && s.progress.from !== s.progress.to && s.progress.from !== void 0 && s.progress.to !== void 0 && (a.length > 0 && a.push(""),
            a.push(o + ` ${Zb(s.progress.from, s.progress.to)}`));
        return a.length > 0 ? a.join(`
`) : ""
    }
    t.formatProjectUpdateDiffAsMarkdown = r
}
)(Nu || (Nu = {}));
const T9 = (t,e)=>`${t || "*Not set*"} → ${e || "*Not set*"}`
  , zb = (t,e)=>T9(t ? Yc(t) : void 0, e ? Yc(e) : void 0)
  , K4 = t=>`${t}%`
  , Zb = (t,e)=>`${K4(t)} → ${K4(e)}`;
class fs {
    static colorForProjectUpdateHealth({theme: e, health: n, age: r=0, reminderFrequency: s=0}) {
        const i = tJ(n);
        return n === Fn.onTrack && fs.updateIsStale({
            age: r,
            reminderFrequency: s
        }) ? e.color.labelMuted : this.updateIsSlightlyStale({
            age: r,
            reminderFrequency: s
        }) ? Tn.cssWithAlpha(e.color[i], .65) : e.color[i]
    }
    static updateIsStale({age: e, reminderFrequency: n}) {
        return n > 0 ? e > n * 7 + 9 : !1
    }
    static updateIsSlightlyStale({age: e, reminderFrequency: n}) {
        return n > 0 ? e > n * 7 + 2 : !1
    }
    static colorForProjectHealthBadgeBackground(e) {
        return Tn.cssWithAlpha(this.colorForProjectUpdateHealth(e), .25)
    }
    static colorForProjectHealthBadgeBorder(e) {
        return Tn.cssWithAlpha(this.colorForProjectUpdateHealth(e), .45)
    }
    static labelForProjectUpdateHealth(e) {
        return Ad.labelForProjectUpdateHealth(e)
    }
    static emojiForProjectUpdateHealth(e) {
        return Ad.emojiForProjectUpdateHealth(e)
    }
    static isHealth(e) {
        return Object.values(Fn).includes(e)
    }
    static getHealthIconColors(e) {
        const {theme: n, isMonochrome: r} = e;
        return r ? {
            color: n.color.labelFaint,
            bgColor: n.color.bgShade,
            borderColor: n.color.labelFaint
        } : {
            color: fs.colorForProjectUpdateHealth(e),
            bgColor: fs.colorForProjectHealthBadgeBackground(e),
            borderColor: fs.colorForProjectHealthBadgeBorder(e)
        }
    }
}
const tJ = t=>{
    let e;
    switch (t) {
    case Fn.onTrack:
        e = "greenMid";
        break;
    case Fn.atRisk:
        e = "yellowMid";
        break;
    case Fn.offTrack:
        e = "redMid";
        break;
    case Xi.outdated:
        e = "labelMuted";
        break;
    case Xi.noUpdate:
        e = "labelFaint";
        break;
    default:
        e = "labelMuted"
    }
    return e
}
;
function Lr(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const Bm = class Bm extends It {
    get issuesWithoutClones() {
        return this.issues.filter(e=>!e.isClone)
    }
    get status() {
        const e = this.issuesWithoutClones
          , n = e.some(s=>s.isOpen) || e.length === 0;
        return this.targetDate && this.targetDate.toLocalDate().valueOf() < Date.now() && n ? "overdue" : this === this.project.projectMilestones.filter(s=>s.progress < 1).first ? "next" : n ? "unstarted" : "done"
    }
    get progress() {
        const e = this.issuesWithoutClones.elements
          , n = e.filter(r=>!r.state);
        return n.length > 0 && F.error("ProjectMilestone issues without state", void 0, {
            projectMilestone: {
                id: this.id
            },
            issues: n.slice(0, 10).map(r=>({
                id: r.id,
                teamId: r.team.id,
                stateId: r.state.id
            }))
        }),
        er.progress(e)
    }
    get progressPercent() {
        return Math.round(this.progress * 100)
    }
    get progressText() {
        return this.progressPercent + "%"
    }
    get progressEstimatePoints() {
        return er.progressEstimatePoints(this.issuesWithoutClones.elements)
    }
    get inProgressEstimatePoints() {
        return er.inProgressEstimatePoints(this.issuesWithoutClones.elements)
    }
    get completedEstimatePoints() {
        return er.completedEstimatePoints(this.issuesWithoutClones.elements)
    }
    get totalEstimatePoints() {
        return er.totalEstimatePoints(this.issuesWithoutClones.elements)
    }
    get doneDate() {
        if (this.status !== "done")
            return;
        const e = this.issuesWithoutClones.reduce((n,r)=>{
            const s = r.doneAt;
            return n === void 0 || s && s.getTime() > n.getTime() ? s : n
        }
        , void 0);
        return e == null ? void 0 : e.toTimelessDate()
    }
    get targetOrDoneDate() {
        return this.targetDate ?? this.doneDate
    }
    constructor(e=!0) {
        super(e),
        this.skipUpdatedAtKeys = new Set(["sortOrder"]),
        this.sortOrder = 0,
        this.notifications = new te,
        this.issues = new Et(re,this,"projectMilestoneId",new de("sortOrder"),{
            customNetworkHydration: ()=>[{
                modelClass: re,
                indexedKey: "projectId",
                keyValue: this.project.id
            }],
            canSkipNetworkHydration: ()=>this.store.syncClient.hasModelsForPartialIndexValues(re.modelName, this.project.accessibleTeams.map(n=>Zn.createPartialIndexValue({
                modelClass: ne,
                syncGroup: n.id // N is team here
            })), {
                requireAll: !0
            })
        }),
        this.relations = new te(new de("type").and("createdAt", "desc")),
        this.inverseRelations = new te(new de("type").and("createdAt", "desc")),
        e && this.makeObservable()
    }
}
;
Bm.usedForPartialIndexes = !0;
let qt = Bm;
Lr([w()], qt.prototype, "name", void 0);
Lr([kl({
    nullable: !0
})], qt.prototype, "documentContent", void 0);
Lr([w({
    serializer: Jo
})], qt.prototype, "targetDate", void 0);
Lr([w()], qt.prototype, "sortOrder", void 0);
Lr([pe(()=>ie, "projectMilestones", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], qt.prototype, "project", void 0);
Lr([xe()], qt.prototype, "notifications", void 0);
Lr([Nt()], qt.prototype, "issues", void 0);
Lr([xe()], qt.prototype, "relations", void 0);
Lr([xe()], qt.prototype, "inverseRelations", void 0);
Lr([O], qt.prototype, "issuesWithoutClones", null);
Lr([O], qt.prototype, "status", null);
Lr([O], qt.prototype, "progress", null);
Lr([O], qt.prototype, "progressEstimatePoints", null);
Lr([O], qt.prototype, "inProgressEstimatePoints", null);
Lr([O], qt.prototype, "completedEstimatePoints", null);
Lr([O], qt.prototype, "totalEstimatePoints", null);
Lr([O], qt.prototype, "doneDate", null);
qt = Lr([We("ProjectMilestone")], qt);
function Ai(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class hr extends si {
    get isInUse() {
        return this.projects.length > 0
    }
    get progress() {
        if (this.type !== At.started)
            return;
        const e = this.organization.numProjectStatusesOfType(this.type)
          , n = this.indexWithinStateType;
        return e === 1 ? .5 : e === 2 ? n === 0 ? .3 : .7 : 1 / (e + 1) * (n + 1)
    }
    get indexWithinStateType() {
        const e = this.type
          , n = this.position;
        return this.findIndexWithPredicate(r=>r.type === e && r.position < n)
    }
    get globalPosition() {
        const e = this.type;
        return (wi.statusListOrdering[e] + 1) * 100 + this.indexWithinStateType
    }
    get globalPositionList() {
        const e = this.type
          , n = (wi.statusListOrdering[e] + 1) * 200;
        return e === At.completed || e === At.canceled ? n + this.indexWithinStateType : n - this.indexWithinStateType
    }
    findIndexWithPredicate(e) {
        let n = 0;
        const r = this.organization.projectStatuses.elements;
        for (let s = 0, i = r.length; s < i; ++s)
            e(r[s]) && ++n;
        return n
    }
    constructor(...e) {
        super(...e),
        this.indefinite = !1,
        this.projects = new te(new de("sortOrder"))
    }
}
Ai([w()], hr.prototype, "name", void 0);
Ai([w()], hr.prototype, "color", void 0);
Ai([w()], hr.prototype, "description", void 0);
Ai([w()], hr.prototype, "position", void 0);
Ai([w()], hr.prototype, "type", void 0);
Ai([w()], hr.prototype, "indefinite", void 0);
Ai([xe()], hr.prototype, "projects", void 0);
Ai([pe(()=>he, "projectStatuses", {
    optional: !1,
    nullable: !1,
    persistance: ee.none
})], hr.prototype, "organization", void 0);
Ai([O], hr.prototype, "indexWithinStateType", null);
Ai([O], hr.prototype, "globalPosition", null);
Ai([O], hr.prototype, "globalPositionList", null);
hr = Ai([We("ProjectStatus")], hr);
function oi(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Yr extends It {
    get parentModel() {
        var e, n, r, s;
        return ((e = this.issue) == null ? void 0 : e.value) ?? ((n = this.project) == null ? void 0 : n.value) ?? ((r = this.parentComment) == null ? void 0 : r.value) ?? ((s = this.projectUpdate) == null ? void 0 : s.value)
    }
    set parentModel(e) {
        switch (!0) {
        case e instanceof re:
            this.issue = Qn.wrap(e);
            break;
        case e instanceof ie:
            this.project = Qn.wrap(e);
            break;
        case e instanceof nt:
            this.parentComment = Qn.wrap(e);
            break;
        case e instanceof un:
            this.projectUpdate = Qn.wrap(e);
            break;
        default:
            throw void 0
        }
    }
    get topLevelModel() {
        const e = this.parentModel;
        return e instanceof nt ? e.parentModel : e
    }
    get location() {
        let e = "";
        const n = {
            draftId: this.id
        };
        this.parentModel instanceof nt ? (e = Np(this.parentModel),
        n.highlightCommentThreadInput = !0) : this.topLevelModel instanceof re ? (e || (e = ru(this.topLevelModel)),
        n.highlightCommentComposer = !0) : this.topLevelModel instanceof ie ? (e || (e = bs(this.topLevelModel)),
        n.highlightProjectUpdateComposer = !0) : this.parentModel instanceof un && (e || (e = Up(this.parentModel)),
        n.highlightCommentComposer = !0);
        const r = new URL(e,window.location.origin)
          , s = r.pathname
          , i = r.hash;
        return {
            pathname: s,
            hash: i,
            state: n
        }
    }
    static hasDraft(e, n) {
        return this.getDraftForModel(e, n) !== void 0
    }
    static getDraftForModel(e, n) {
        const r = (()=>{
            switch (!0) {
            case e instanceof re:
                return e.draftComments;
            case e instanceof ie:
                return e.draftProjectUpdates;
            case e instanceof un:
                return e.draftComments;
            case e instanceof nt:
                return e.draftReplies;
            default:
                return
            }
        }
        )();
        return r == null ? void 0 : r.find(s=>s.user.id === n.id)
    }
    constructor(e=!0) {
        super(e),
        this.isAutogenerated = !1,
        this.wasLocalDraft = !1,
        this.data = {},
        e && this.makeObservable()
    }
}
oi([pe(()=>K, "drafts", {
    nullable: !1,
    optional: !1
})], Yr.prototype, "user", void 0);
oi([w({
    persistance: ee.none
})], Yr.prototype, "isAutogenerated", void 0);
oi([w({
    persistance: ee.createOnly
})], Yr.prototype, "wasLocalDraft", void 0);
oi([w()], Yr.prototype, "data", void 0);
oi([Hr(()=>re, "draftComments", {
    nullable: !0,
    indexed: !0,
    onDelete: "CASCADE"
})], Yr.prototype, "issue", void 0);
oi([Hr(()=>ie, "draftProjectUpdates", {
    nullable: !0,
    indexed: !0,
    onDelete: "CASCADE"
})], Yr.prototype, "project", void 0);
oi([Hr(()=>un, "draftComments", {
    nullable: !0,
    indexed: !0,
    onDelete: "CASCADE"
})], Yr.prototype, "projectUpdate", void 0);
oi([Hr(()=>nt, "draftReplies", {
    nullable: !0,
    indexed: !0,
    onDelete: "CASCADE"
})], Yr.prototype, "parentComment", void 0);
oi([w({
    serializer: hn
})], Yr.prototype, "bodyData", void 0);
oi([O], Yr.prototype, "parentModel", null);
oi([O], Yr.prototype, "topLevelModel", null);
oi([O], Yr.prototype, "location", null);
Yr = oi([We("Draft")], Yr);
function gr(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class un extends It {
    canEdit(e) {
        return this.user === e
    }
    canDelete(e) {
        return this.user === e || e.isAdmin
    }
    get bodyMarkdown() {
        return this.bodyData ? Po.serialize(this.bodyData) : ""
    }
    get previousUpdate() {
        return this.project.projectUpdates.find(e=>e.createdAt < this.createdAt)
    }
    get isLastInProject() {
        return this.project.lastProjectUpdate === this
    }
    get snapshotDiff() {
        var o, l, d, u, h, f;
        const e = this.previousUpdate
          , n = (e == null ? void 0 : e.infoSnapshot) || this.initialProjectUpdateInfoSnapshot
          , r = this.infoSnapshot || this.initialProjectUpdateInfoSnapshot;
        if (!n || !r)
            return;
        const {fiscalYearStartMonth: s} = this.store.organization
          , i = (e == null ? void 0 : e.createdAt) || this.createdAt
          , a = Nu.getProjectUpdateInfoSnapshotDiff(r, n, (e == null ? void 0 : e.createdAt) || this.createdAt, s);
        return {
            lastSnapshotDate: i,
            progress: a.progress,
            issues: a.issues,
            status: a.statusId ? {
                from: a.statusId.from ? this.store.findById(hr, a.statusId.from) : void 0,
                to: a.statusId.to ? this.store.findById(hr, a.statusId.to) : void 0
            } : void 0,
            startDate: a.startDate,
            targetDate: a.targetDate,
            lead: a.leadId ? {
                from: a.leadId.from ? this.store.findById(K, a.leadId.from) : void 0,
                to: a.leadId.to ? this.store.findById(K, a.leadId.to) : void 0
            } : void 0,
            members: a.memberIds ? {
                added: (o = a.memberIds.added) == null ? void 0 : o.map(p=>this.store.findById(K, p)).concrete(),
                removed: (l = a.memberIds.removed) == null ? void 0 : l.map(p=>this.store.findById(K, p)).concrete()
            } : void 0,
            teams: a.teamIds ? {
                added: (d = a.teamIds.added) == null ? void 0 : d.map(p=>this.store.findById(ne, p)).concrete(),
                removed: (u = a.teamIds.removed) == null ? void 0 : u.map(p=>this.store.findById(ne, p)).concrete()
            } : void 0,
            milestones: a.milestones ? {
                changed: a.milestones.changed.map(p=>({
                    milestone: this.store.findById(qt, p.id),
                    ...p
                })),
                added: (h = a.milestones.added) == null ? void 0 : h.map(p=>({
                    milestone: this.store.findById(qt, p.id),
                    ...p
                })),
                removed: (f = a.milestones.removed) == null ? void 0 : f.map(p=>({
                    milestone: this.store.findById(qt, p.id),
                    ...p
                }))
            } : void 0
        }
    }
    get healthAgeInDays() {
        return s5(new Date, this.createdAt)
    }
    get isStale() {
        return fs.updateIsStale({
            age: this.healthAgeInDays,
            reminderFrequency: this.project.organization.projectUpdateReminderFrequencyInWeeks ?? 0
        })
    }
    get isSlightlyStale() {
        return fs.updateIsSlightlyStale({
            age: this.healthAgeInDays,
            reminderFrequency: this.project.organization.projectUpdateReminderFrequencyInWeeks ?? 0
        })
    }
    markNotificationAsRead(e) {
        const n = this.notifications.find(s=>s.id === e || s.groupingEntityId === e);
        if (!n)
            return;
        const r = n == null ? void 0 : n.groupingEntityId;
        this.notifications.forEach(s=>{
            s.readAt === void 0 && s.groupingEntityId === r && (s.markAsRead(),
            s.save())
        }
        )
    }
    markNotificationsExceptCommentsAsRead() {
        this.notifications.forEach(e=>{
            var n;
            e.readAt === void 0 && !((n = e.comment) != null && n.id) && (e.markAsRead(),
            e.save())
        }
        )
    }
    constructor(e=!0) {
        super(e),
        this.health = Fn.onTrack,
        this.isDiffHidden = !1,
        this.notifications = new te,
        this.externalEntityRelations = new Et(Qr,this,"projectUpdateId"),
        this.comments = new Et(nt,this,"projectUpdateId",void 0),
        this.draftComments = new Et(Yr,this,"projectUpdateId"),
        this.reactionData = [],
        e && this.makeObservable()
    }
    allowEdit(e) {
        return this.user === e
    }
    async formatAsMarkdown() {
        const n = `[${this.project.name.replace(/[\[\]]/g, "\\$&")}](${rJ(this.project)})`
          , r = [fs.emojiForProjectUpdateHealth(this.health), fs.labelForProjectUpdateHealth(this.health), this.user ? `| ${this.user.name} posted an update on ${QQ(this.createdAt)}` : void 0].concrete().join(" ")
          , s = [n + `
`, r + `
`, this.bodyMarkdown];
        if (this.snapshotDiff) {
            const i = await this.snapshotDiffAsMarkdown();
            i && s.push(`
` + i)
        }
        return s.join(`
`)
    }
    async snapshotDiffAsMarkdown() {
        const e = this.previousUpdate
          , n = (e == null ? void 0 : e.infoSnapshot) || this.initialProjectUpdateInfoSnapshot
          , r = this.infoSnapshot || this.initialProjectUpdateInfoSnapshot;
        if (!n || !r)
            return Promise.resolve("");
        const {fiscalYearStartMonth: s} = this.store.organization
          , i = Nu.getProjectUpdateInfoSnapshotDiff(r, n, (e == null ? void 0 : e.createdAt) || this.createdAt, s);
        return Nu.formatProjectUpdateDiffAsMarkdown(i, {
            getUsersById: async a=>a.reduce((o,l)=>{
                const d = this.store.findById(K, l);
                return d && (o[l] = d),
                o
            }
            , {}),
            getProjectStatusById: async a=>this.store.findById(hr, a)
        })
    }
    get initialProjectUpdateInfoSnapshot() {
        var e;
        return this.infoSnapshot ? this.infoSnapshot : {
            statusId: this.project.status.id,
            leadId: (e = this.project.lead) == null ? void 0 : e.id,
            memberIds: this.project.members.elements.map(n=>n.id),
            startDate: this.project.startDate,
            startDateResolution: this.project.startDateResolution,
            targetDate: this.project.targetDate,
            targetDateResolution: this.project.targetDateResolution,
            teamsInfo: this.project.accessibleTeams.map(n=>({
                id: n.id,
                issueInfo: qb(this.project.issues.filter(r=>r.team === n))
            })).concrete(),
            milestonesInfo: this.project.projectMilestones.map(n=>({
                issueInfo: qb(n.issues),
                targetDate: n.targetDate,
                name: n.name,
                id: n.id
            }))
        }
    }
}
gr([w({
    serializer: hn,
    shallowObservation: !0
})], un.prototype, "bodyData", void 0);
gr([w({
    serializer: bt,
    persistance: ee.none
})], un.prototype, "editedAt", void 0);
gr([w({
    enum: Fn
})], un.prototype, "health", void 0);
gr([w({
    serializer: hn
})], un.prototype, "infoSnapshot", void 0);
gr([w()], un.prototype, "isDiffHidden", void 0);
gr([pe(()=>ie, "projectUpdates", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], un.prototype, "project", void 0);
gr([Ue(()=>K, {
    persistance: ee.none,
    optional: !0,
    nullable: !1
})], un.prototype, "user", void 0);
gr([xe()], un.prototype, "notifications", void 0);
gr([Nt()], un.prototype, "externalEntityRelations", void 0);
gr([Nt()], un.prototype, "comments", void 0);
gr([Nt()], un.prototype, "draftComments", void 0);
gr([O], un.prototype, "bodyMarkdown", null);
gr([O], un.prototype, "previousUpdate", null);
gr([O], un.prototype, "isLastInProject", null);
gr([O], un.prototype, "snapshotDiff", null);
gr([w({
    persistance: ee.none,
    serializer: hn
})], un.prototype, "reactionData", void 0);
gr([rt], un.prototype, "markNotificationAsRead", null);
gr([rt], un.prototype, "markNotificationsExceptCommentsAsRead", null);
gr([O], un.prototype, "initialProjectUpdateInfoSnapshot", null);
un = gr([We("ProjectUpdate")], un);
function qb(t) {
    return t.reduce((e,n)=>{
        const r = `${n.state.type}Count`;
        return {
            ...e,
            [r]: e[r] + (n.estimate ?? n.team.defaultIssueEstimate)
        }
    }
    , {
        triageCount: 0,
        backlogCount: 0,
        unstartedCount: 0,
        startedCount: 0,
        completedCount: 0,
        canceledCount: 0
    })
}
function rc(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const S3 = class S3 extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
;
S3.loadStrategy = dn.partial,
S3.partialLoadMode = ki.lowPriority;
let Qr = S3;
rc([w()], Qr.prototype, "externalEntityType", void 0);
rc([w()], Qr.prototype, "externalId", void 0);
rc([w()], Qr.prototype, "metadata", void 0);
rc([Hr(()=>nt, "externalEntityRelations", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Qr.prototype, "comment", void 0);
rc([Hr(()=>re, "externalEntityRelations", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Qr.prototype, "issue", void 0);
rc([Hr(()=>un, "externalEntityRelations", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Qr.prototype, "projectUpdate", void 0);
rc([Hr(()=>Ut, "externalEntityRelations", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Qr.prototype, "label", void 0);
Qr = rc([We("ExternalEntityRelation")], Qr);
function Cs(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Ut extends It {
    get identifier() {
        return this.name.toLowerCase().replace(/[^\w]/g, "_")
    }
    get isTeamLabel() {
        var e;
        return !!((e = this.team) != null && e.id)
    }
    constructor(e=!0) {
        super(e),
        this.issues = new Et(re,this,"labelIds"),
        this.issueDrafts = new Et(Zt,this,"labelIds"),
        this.childLabels = new Et(Ut,this,"parentId",new de("name")),
        this.externalEntityRelations = new Et(Qr,this,"labelId"),
        this.toggleFavorite = ()=>{
            if (this.favorite)
                return this.favorite.delete(),
                !1;
            {
                const n = Rt.create({
                    reference: this
                });
                return n.save(!0),
                n
            }
        }
        ,
        e && this.makeObservable()
    }
    get allIssues() {
        return this.isGroup ? this.childLabels.reduce((e,n)=>e.concat(n.issues.elements), this.issues) : this.issues
    }
    get isGroup() {
        return this.childLabels.length > 0
    }
    matchesLabelName(e) {
        return this.name.toLowerCase().trim() === e.name.toLowerCase().trim()
    }
    save(e=!1, n) {
        return super.save(e, n)
    }
}
Cs([w()], Ut.prototype, "name", void 0);
Cs([w()], Ut.prototype, "description", void 0);
Cs([w()], Ut.prototype, "color", void 0);
Cs([pe(()=>he, "allIssueLabels", {
    optional: !1,
    nullable: !1,
    persistance: ee.none
})], Ut.prototype, "organization", void 0);
Cs([pe(()=>ne, "issueLabels", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ut.prototype, "team", void 0);
Cs([Dt({
    nullable: !0
})], Ut.prototype, "favorite", void 0);
Cs([Dt({
    nullable: !0
})], Ut.prototype, "subscription", void 0);
Cs([Nt()], Ut.prototype, "issues", void 0);
Cs([Nt()], Ut.prototype, "issueDrafts", void 0);
Cs([Ue(()=>K, {
    persistance: ee.none,
    optional: !0,
    nullable: !1
})], Ut.prototype, "creator", void 0);
Cs([pe(()=>Ut, "childLabels", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ut.prototype, "parent", void 0);
Cs([Nt()], Ut.prototype, "childLabels", void 0);
Cs([Nt()], Ut.prototype, "externalEntityRelations", void 0);
Cs([O], Ut.prototype, "allIssues", null);
Ut = Cs([We("IssueLabel")], Ut);
var Ss;
(function(t) {
    t.allIssues = "allIssues",
    t.activeIssues = "activeIssues",
    t.activeCycle = "activeCycle",
    t.customView = "customView",
    t.project = "project",
    t.inbox = "inbox",
    t.myIssues = "myIssues"
}
)(Ss || (Ss = {}));
const d0e = t=>{
    switch (t) {
    case "allIssues":
        return "All issues";
    case "activeIssues":
        return "Active issues";
    case "activeCycle":
        return "Current cycle";
    case "customView":
        return "View";
    case "project":
        return "Project";
    case "inbox":
        return "Inbox";
    case "myIssues":
        return "My issues";
    default:
        return "ERROR - Unknown view"
    }
}
;
var G0;
(function(t) {
    t.assigned = "",
    t.created = "created"
}
)(G0 || (G0 = {}));
(function(t) {
    function e(n) {
        switch (n) {
        case "":
            return "Assigned";
        case "created":
            return "Created";
        default:
            throw void 0
        }
    }
    t.labelForType = e
}
)(G0 || (G0 = {}));
var Ao;
(function(t) {
    t.Planned = "Planned",
    t.Active = "Active",
    t.Completed = "Completed"
}
)(Ao || (Ao = {}));
function u0e(t) {
    switch (t) {
    case "Planned":
        return "Planned";
    case "Active":
        return "Active";
    case "Completed":
        return "Completed";
    default:
        throw void 0
    }
}
function tn(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class ot extends Xc {
    get slug() {
        return `${wl(this.name)}-${this.slugId}`
    }
    get viewPreferences() {
        const e = this.organization.viewPreferences.find(n=>n.initiative === this && n.type === Ks.organization);
        return e || (this.temporaryViewPreferences ? this.temporaryViewPreferences : lt(()=>{
            const n = new Ot;
            return n.initiative = this,
            n.organization = this.organization,
            n.viewType = Ae.initiative,
            n.type = Ks.organization,
            this.temporaryViewPreferences = n,
            n
        }
        ))
    }
    get projects() {
        return te.of(this.initiativeToProjects.map(e=>e.project))
    }
    get projectsGroupedByHealth() {
        const e = []
          , n = []
          , r = []
          , s = [];
        for (const i of this.projects.elements)
            i.status.type === At.started && (i.healthIsStale && i.health === Fn.onTrack || i.health === void 0) ? s.push(i) : i.status.type !== At.started && i.healthIsSlightlyStale || (i.health === Fn.onTrack ? e.push(i) : i.health === Fn.atRisk ? n.push(i) : i.health === Fn.offTrack && r.push(i));
        return {
            [Fn.onTrack]: e,
            [Fn.offTrack]: r,
            [Fn.atRisk]: n,
            [Xi.outdated]: s
        }
    }
    get activity() {
        const e = this.projects.filter(n=>n.isActive);
        return e.length > 0 ? e.reduce((n,r)=>n + r.activity, 0) / e.length : 0
    }
    get accessibleTeams() {
        return te.of(this.projects.flatMap(e=>e.accessibleTeams.elements).distinct().sortBy(e=>-this.projects.filter(n=>n.accessibleTeams.elements.includes(e)).length))
    }
    get allDocumentTemplates() {
        return new te(new de(n=>!n.isTeamTemplate).and(n=>n.name.toLowerCase())).concat(this.organization.documentTemplates.elements)
    }
    static create(e) {
        const n = ot.createEmpty();
        return n.temporaryViewPreferences = e.viewPreferences,
        n.creator = e.creator,
        n.name = e.name ?? "",
        n.status = e.status ?? Ao.Active,
        n.description = e.description,
        n.organization = e.creator.organization,
        n.sortOrder = ur.firstSortOrder(e.creator.organization.initiatives, "sortOrder"),
        n
    }
    constructor(e=!0) {
        super(e),
        this.name = "",
        this.sortOrder = 0,
        this.color = "#bec2c8",
        this.customViews = new te(new de("name"),void 0),
        this.status = Ao.Active,
        this.favorites = new te,
        this.documents = new te(new de(n=>n.createdAt.valueOf(),"desc")),
        this.links = new te(new de(n=>n.createdAt.valueOf(),"desc")),
        this.facets = new Et(kn,this,"sourceInitiativeId",new de("sortOrder")),
        this.initiativeToProjects = new te(new de("sortOrder")),
        this.notifications = new te,
        this.toggleFavorite = (n={})=>{
            const {initiativeTab: r} = n
              , s = r ? this.favorites.filter(i=>i.initiativeTab === r) : this.favorites.filter(i=>i.initiativeTab == null);
            if (s.length > 0)
                return s.forEach(i=>i.delete()),
                !1;
            {
                const i = Rt.create({
                    reference: this,
                    initiativeTab: r
                });
                return i.save(!0),
                i
            }
        }
        ,
        e && this.makeObservable()
    }
    get isRootFavorited() {
        return this.favorites.some(e=>e.initiativeTab == null)
    }
    markNotificationAsRead(e) {
        const n = this.notifications.find(s=>s.id === e);
        if (!n)
            return;
        const r = n == null ? void 0 : n.groupingEntityId;
        this.notifications.forEach(s=>{
            s.readAt === void 0 && s.groupingEntityId === r && (s.markAsRead(),
            s.save())
        }
        )
    }
    matchInlineFind(e) {
        var r, s;
        const n = ml([this.name].concat([(r = this.owner) == null ? void 0 : r.name, (s = this.owner) == null ? void 0 : s.displayName].concrete()).join(" ")).toLowerCase();
        return e.split(" ").reduce((i,a)=>i && n.indexOf(a) !== -1, !0)
    }
    get teams() {
        return te.of(this.projects.flatMap(e=>e.accessibleTeams.elements).distinct().sortBy(e=>-this.projects.filter(n=>n.accessibleTeams.elements.includes(e)).length))
    }
}
tn([w()], ot.prototype, "name", void 0);
tn([w()], ot.prototype, "description", void 0);
tn([w({
    persistance: ee.none
})], ot.prototype, "slugId", void 0);
tn([w()], ot.prototype, "sortOrder", void 0);
tn([w()], ot.prototype, "color", void 0);
tn([w()], ot.prototype, "icon", void 0);
tn([w({
    persistance: ee.updateOnly
})], ot.prototype, "trashed", void 0);
tn([pe(()=>he, "initiatives", {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], ot.prototype, "organization", void 0);
tn([pe(()=>K, "initiatives", {
    optional: !1,
    nullable: !1,
    persistance: ee.updateOnly
})], ot.prototype, "creator", void 0);
tn([pe(()=>K, "initiatives", {
    nullable: !0,
    persistance: ee.createAndUpdate
})], ot.prototype, "owner", void 0);
tn([xe()], ot.prototype, "customViews", void 0);
tn([kl({
    nullable: !0
})], ot.prototype, "documentContent", void 0);
tn([w({
    serializer: Jo
})], ot.prototype, "targetDate", void 0);
tn([w()], ot.prototype, "targetDateResolution", void 0);
tn([w()], ot.prototype, "status", void 0);
tn([Ue(()=>cn, {
    persistance: ee.none,
    nullable: !0
})], ot.prototype, "roadmap", void 0);
tn([xe()], ot.prototype, "favorites", void 0);
tn([xe()], ot.prototype, "documents", void 0);
tn([xe()], ot.prototype, "links", void 0);
tn([Nt()], ot.prototype, "facets", void 0);
tn([xe()], ot.prototype, "initiativeToProjects", void 0);
tn([O], ot.prototype, "viewPreferences", null);
tn([O], ot.prototype, "projects", null);
tn([O], ot.prototype, "projectsGroupedByHealth", null);
tn([xe()], ot.prototype, "notifications", void 0);
tn([O], ot.prototype, "activity", null);
tn([O], ot.prototype, "accessibleTeams", null);
tn([O], ot.prototype, "allDocumentTemplates", null);
tn([O], ot.prototype, "isRootFavorited", null);
tn([rt], ot.prototype, "toggleFavorite", void 0);
tn([rt], ot.prototype, "markNotificationAsRead", null);
tn([O], ot.prototype, "teams", null);
ot = tn([We("Initiative")], ot);
function ci(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class kn extends It {
    get type() {
        return this.sourceProject ? gn.Project : this.sourceInitiative ? gn.Initiative : this.sourceTeam ? gn.TeamPage : this.sourceOrganization ? gn.WorkspacePage : (F.info("Unknown facet type on client", {
            facetId: this.id
        }),
        gn.Unknown)
    }
    get targetDescription() {
        const [e,n] = D2(this);
        switch (e) {
        case gn.Project:
            return;
        case gn.Initiative:
        case gn.TeamPage:
        case gn.WorkspacePage:
            return n.targetCustomView.description;
        case gn.Unknown:
            return;
        default:
            throw void 0
        }
    }
    get issues() {
        const [e,n] = D2(this);
        switch (e) {
        case gn.Project:
            return n.sourceProject.issues;
        case gn.Initiative:
        case gn.TeamPage:
        case gn.WorkspacePage:
            return;
        case gn.Unknown:
            return;
        default:
            throw void 0
        }
    }
    get projects() {
        const [e,n] = D2(this);
        switch (e) {
        case gn.Project:
            return;
        case gn.Initiative:
            return n.sourceInitiative.projects;
        case gn.TeamPage:
            return n.sourceTeam.projects;
        case gn.WorkspacePage:
            return n.sourceOrganization.projects;
        case gn.Unknown:
            return;
        default:
            throw void 0
        }
    }
    get hideDescription() {
        return [gn.Project].includes(this.type)
    }
    constructor(e=!0) {
        super(e),
        this.toggleFavorite = ()=>{
            if (this.favorite)
                return this.favorite.delete(),
                !1;
            {
                const n = Rt.create({
                    reference: this
                });
                return n.save(!0),
                n
            }
        }
        ,
        e && this.makeObservable()
    }
    static createProjectFacet(e) {
        const n = kn.createEmpty();
        return n.creator = e.creator,
        n.targetCustomView = e.customView,
        n.sortOrder = ur.lastSortOrder(e.project.facets, "sortOrder"),
        n.sourceProject = e.project,
        n
    }
    static createInitiativeFacet(e) {
        const n = kn.createEmpty();
        return n.creator = e.creator,
        n.targetCustomView = e.customView,
        n.sortOrder = ur.lastSortOrder(e.initiative.facets, "sortOrder"),
        n.sourceInitiative = e.initiative,
        n
    }
    static createTeamPageFacet(e) {
        const n = kn.createEmpty();
        return n.creator = e.creator,
        n.targetCustomView = e.customView,
        n.sortOrder = ur.lastSortOrder(e.team.facets, "sortOrder"),
        n.sourceTeam = e.team,
        n.sourcePage = e.sourcePage,
        n
    }
    static createWorkspacePageFacet(e) {
        const n = kn.createEmpty();
        return n.creator = e.creator,
        n.targetCustomView = e.customView,
        n.sortOrder = ur.lastSortOrder(e.creator.organization.facets, "sortOrder"),
        n.sourceOrganization = e.creator.organization,
        n.sourcePage = e.sourcePage,
        n
    }
}
ci([w()], kn.prototype, "sortOrder", void 0);
ci([pe(()=>K, "facets", {
    nullable: !0,
    indexed: !0
})], kn.prototype, "creator", void 0);
ci([Dt({
    nullable: !0
})], kn.prototype, "favorite", void 0);
ci([pe(()=>he, "facets", {
    nullable: !0,
    indexed: !0
})], kn.prototype, "sourceOrganization", void 0);
ci([pe(()=>ne, "facets", {
    nullable: !0,
    indexed: !0
})], kn.prototype, "sourceTeam", void 0);
ci([pe(()=>ie, "facets", {
    nullable: !0,
    indexed: !0
})], kn.prototype, "sourceProject", void 0);
ci([pe(()=>ot, "facets", {
    nullable: !0,
    indexed: !0
})], kn.prototype, "sourceInitiative", void 0);
ci([w()], kn.prototype, "sourcePage", void 0);
ci([Dt(()=>Ke, "facet", {
    nullable: !0,
    indexed: !0
})], kn.prototype, "targetCustomView", void 0);
ci([O], kn.prototype, "targetDescription", null);
ci([O], kn.prototype, "issues", null);
ci([O], kn.prototype, "projects", null);
kn = ci([We("Facet")], kn);
function D2(t) {
    return [t.type, t]
}
function h0e(t) {
    const e = {}
      , n = (t[0] === "?" ? t.substr(1) : t).replace(/\&amp;/g, "&").split("&");
    for (let r = 0; r < n.length; r++) {
        const s = n[r].split("=")
          , i = decodeURIComponent(s[0].replace(/\+/g, " "))
          , a = decodeURIComponent((s[1] || "").replace(/\+/g, " "));
        i.length && a.length && (e[i] = a)
    }
    return e
}
function Y4(t) {
    const e = Object.keys(t).filter(r=>t[r] !== void 0);
    if (e.length === 0)
        return "";
    let n = "?";
    for (const r of e) {
        const s = t[r];
        s !== void 0 && (n.length > 1 && (n += "&"),
        n += encodeURIComponent(r) + "=" + encodeURIComponent(s.toString()))
    }
    return n
}
const f0e = "https://twitter.com/linear"
  , p0e = "https://linear.app/docs"
  , m0e = "https://linear.app/dpa"
  , g0e = "https://linear.app/changelog"
  , y0e = "https://developers.linear.app"
  , C0e = "https://developers.linear.app/docs/oauth/authentication"
  , b0e = "https://github.com/linear/linear/tree/master/packages/import"
  , v0e = "https://developers.linear.app/docs/graphql/webhooks"
  , w0e = "https://linear.app/docs/audit-log"
  , k0e = "https://linear.app/docs/import-issues"
  , x0e = "https://linear.app/docs/triage"
  , D0e = "https://linear.app/docs/linear-asks"
  , S0e = "https://linear.app/docs/team-issue-limit"
  , _0e = "https://linear.app/docs/roadmaps"
  , I0e = "https://linear.app/docs/initiatives"
  , E0e = "https://linear.app/docs/projects"
  , A0e = "https://linear.app/docs/project-updates"
  , j0e = "https://linear.app/docs/use-cycles"
  , M0e = "https://linear.app/docs/custom-views"
  , T0e = "https://linear.app/docs/adding-and-managing-members#invite-guests"
  , L0e = "https://linear.app/docs/third-party-application-approvals"
  , O0e = "https://linear.app/docs/tutorials"
  , R0e = "https://www.zendesk.com/apps/support/linear/"
  , P0e = "https://app.frontapp.com/settings/apps/details/linear/overview"
  , $0e = "https://www.figma.com/community/plugin/1221187540287746170"
  , F0e = "https://linear.app/method"
  , N0e = "https://linear.app/contact/sales"
  , V0e = "https://linear.app/docs/archive-issues#auto-close"
  , B0e = "https://linear.app/docs/archive-issues#auto-archive"
  , yr = (t,e=ft.CLIENT_URL)=>ZS(t, e)
  , U0e = t=>yr(`/connect/slack/post/${t}`)
  , nJ = ()=>yr("/connect/slack")
  , H0e = ()=>yr("/auth/desktop-redirect")
  , z0e = ()=>yr("/connect/figma/desktop-redirect")
  , Z0e = ()=>yr("/connect/sentry")
  , q0e = ()=>yr("/connect/intercom")
  , W0e = t=>yr(Bz(t.id), ft.API_SERVER_URL).replace("client-", "")
  , G0e = t=>yr(Uz(t.id), ft.API_SERVER_URL).replace("client-", "")
  , K0e = t=>yr(ru(t))
  , Y0e = t=>yr(Vp(t))
  , Q0e = t=>yr(ph(t))
  , $_ = t=>yr(t instanceof ne ? cJ(t) : lJ(t));
function X0e(t) {
    var e, n, r, s;
    return $_(t.team) + Y4({
        title: v4.fixupTitle(t.title),
        description: ((e = t.documentContent.value) == null ? void 0 : e.markdownContent) || "",
        assignee: (n = t.assignee) == null ? void 0 : n.displayName,
        estimate: t.estimate,
        priority: t.priority.priority,
        status: t.state.name,
        cycle: (r = t.cycle) == null ? void 0 : r.displayName,
        project: (s = t.project) == null ? void 0 : s.name,
        labels: t.labels.length ? t.labels.map(i=>i.name).join(",") : void 0
    })
}
function J0e(t) {
    if (t.type === qi.issue)
        return $_(t.team ?? t.organization) + Y4({
            [Wb]: t.id
        });
    if (t.type === qi.project)
        return yr(t.team ? fJ(t.team, "/") : V_(t.organization)) + Y4({
            [Wb]: t.id
        });
    throw new Error("Not implemented yet")
}
const Wb = "template"
  , e5e = t=>yr(Np(t))
  , t5e = t=>yr(mh(t))
  , n5e = t=>yr(dJ(t))
  , rJ = (t,e)=>yr(e ? z_(t, e) : bs(t))
  , r5e = (t,e)=>yr(nu(t, e))
  , s5e = (t,e)=>yr(L9(t, e))
  , i5e = t=>yr(Up(t))
  , a5e = (t,e)=>`${ft.API_SERVER_URL}/ical/${t.organization.id}/${t.id}/cycles.ics?userId=${e.user.id}&token=${e.calendarHash}`
  , o5e = t=>ZS(`/connect/gitlab/${t == null ? void 0 : t.id}`, ft.API_SERVER_URL)
  , Qe = t=>`/${t.urlKey}`
  , c5e = t=>`${Qe(t)}/welcome`
  , $p = t=>`${Qe(t)}/settings`
  , l5e = t=>`${Qe(t)}/settings/workspace`
  , d5e = t=>`${Qe(t)}/settings/plans`
  , u5e = t=>`${Qe(t)}/settings/security`
  , h5e = t=>`${Qe(t)}/settings/members`
  , f5e = t=>`${Qe(t)}/settings/labels`
  , p5e = t=>`${Qe(t)}/settings/projects`
  , m5e = t=>`${Qe(t)}/settings/sla`
  , g5e = t=>`${Qe(t)}/settings/templates`
  , y5e = t=>`${Qe(t)}/settings/emojis`
  , C5e = t=>`${Qe(t)}/settings/account/profile`
  , b5e = t=>`${Qe(t)}/settings/account/preferences`
  , v5e = t=>`${Qe(t)}/settings/account/notifications`
  , w5e = t=>`${Qe(t)}/settings/account/security`
  , k5e = t=>`${Qe(t)}/settings/roadmap`
  , x5e = t=>`${Qe(t)}/settings/initiatives`
  , D5e = (t,e)=>`${Qe(t)}/settings/applications${e ? `#${qz(e)}` : ""}`
  , S5e = t=>`${Qe(t)}/settings/billing`
  , _5e = t=>`${Qe(t)}/settings/audit-log`
  , I5e = t=>`${Qe(t)}/settings/import-export`
  , E5e = t=>`${Qe(t)}/settings/integrations`
  , A5e = t=>`${Qe(t)}/settings/integrations/enabled`
  , j5e = (t,e)=>e ? `${Qe(t)}/settings/import-export/migration-assistant/${e.id}` : `${Qe(t)}/settings/import-export/migration-assistant`
  , F_ = t=>`${$p(t)}/api`
  , M5e = (t,e)=>`${$p(t)}/api/applications/${e.id}/edit`
  , T5e = (t,e)=>`${F_(t)}/webhooks/${e.id}/edit`
  , L5e = t=>`${$p(t)}/api/applications/new`
  , O5e = t=>`${F_(t)}/webhooks/new`
  , sJ = (t,e,n)=>`${Qe(t)}/search${Y4({
    q: e,
    tab: n
})}`
  , N_ = (t,e)=>`${Qe(t)}/inbox${e ? `/${e}` : ""}`
  , iJ = (t,e)=>`${Qe(t)}/my-issues/${e || ""}`
  , R5e = t=>`${Qe(t)}/drafts`
  , P5e = (t,e)=>`${Qe(t)}/views${e ? `/${e}` : ""}`
  , $5e = t=>`${Qe(t)}/teams`
  , ph = t=>`${Qe(t.organization)}/view/${t.id}`
  , aJ = (t,e)=>`${Qe(e)}/view/${t}`
  , F5e = t=>`${ph(t)}/edit`
  , N5e = t=>`${Qe(t)}/view/new`
  , V5e = t=>{
    const e = t.settings
      , n = t.store
      , {organization: r} = t
      , s = e.getDefaultView()
      , i = e.getDefaultViewCustomViewId()
      , a = e.getDefaultViewProjectId();
    if (s === Ss.customView && i)
        return aJ(i, r);
    if (s === Ss.project && a) {
        const d = n.findById(ie, a);
        if (d)
            return bs(d)
    }
    const o = e.activeTeam;
    let l;
    if (o)
        switch (s) {
        case Ss.customView:
        case Ss.project:
        case Ss.activeIssues:
            l = ti(o, "active");
            break;
        case Ss.activeCycle:
            l = o.activeCycle ? Vp(o.activeCycle) : ti(o, "active");
            break;
        case Ss.inbox:
            l = N_(r);
            break;
        case Ss.allIssues:
            l = Y0(o);
            break;
        case Ss.myIssues:
            l = iJ(r, "assigned");
            break;
        default:
            l = Y0(o)
        }
    return l ?? oJ(r)
}
  , Gb = (t,e={})=>{
    const {modelName: n="issue", saveMode: r=!1} = e;
    return `${Qe(t)}/explore/${n}${r ? "/save" : ""}`
}
;
var Ui;
(function(t) {
    t.active = "active",
    t.closed = "closed",
    t.all = "all",
    t.backlog = "backlog"
}
)(Ui || (Ui = {}));
(function(t) {
    t.allValues = Object.values(t).filter(n=>typeof n == "string");
    function e(n) {
        return n ? n.settings.projectsViewType : "all"
    }
    t.getPreviousProjectsViewType = e
}
)(Ui || (Ui = {}));
const K0 = (t,e)=>e ? `${Qe(t)}/team/${e}/projects` : `${Qe(t)}/projects`
  , V_ = (t,e)=>`${K0(t, e)}/all`
  , B5e = (t,e)=>{
    var r, s;
    const n = e ? t.settings.getTeamPageLastSeenTab(ol.projects, e.id) : t.settings.getWorkspacePageLastSeenTab(ol.projects);
    if (n) {
        const i = (e ?? t.organization).projectsPageFacets.findById(n.facetId);
        if ((r = i == null ? void 0 : i.targetCustomView) != null && r.id)
            return `${K0(t.organization, e == null ? void 0 : e.key)}/view/${(s = i == null ? void 0 : i.targetCustomView) == null ? void 0 : s.id}`
    }
    return V_(t.organization, e == null ? void 0 : e.key)
}
  , U5e = (t,e)=>`${Qe(t.organization)}/roadmap/${e ?? Ui.getPreviousProjectsViewType(t) ?? ""}`
  , L9 = (t,e,n)=>`${Qe(t.organization)}/roadmap/${t.slug}/${n ?? Ui.getPreviousProjectsViewType(e) ?? ""}`;
function nu(t, e) {
    const n = Fp(t);
    if (e instanceof K) {
        const r = e.settings.getInitiativeLastSeenTab(t)
          , s = (r == null ? void 0 : r.facetId) && t.facets.findById(r == null ? void 0 : r.facetId);
        if (s && qe.isEnabled(qe.initiativeFacets))
            return Z_(s);
        if (r != null && r.mainTab)
            return `${n}/${r.mainTab}`
    } else if (e)
        return `${n}/${e}`;
    return nu(t, W0.overview)
}
function Fp(t) {
    return `${Qe(t.organization)}/initiative/${t.slugId ? t.slug : t.id}`
}
const H5e = (t,e)=>`${Qe(t)}/initiatives${e ? `/${e}` : ""}`
  , ti = (t,e)=>KS(t.organization.urlKey, t.key, e)
  , z5e = (t,e)=>{
    switch (e) {
    case ye.triage:
        return B_(t);
    case ye.backlog:
        return U_(t);
    case ye.unstarted:
        return O9(t);
    case ye.started:
        return O9(t);
    case ye.completed:
        return Y0(t);
    case ye.canceled:
        return Y0(t);
    default:
        return ""
    }
}
  , B_ = t=>ti(t, "triage")
  , U_ = t=>ti(t, "backlog")
  , O9 = t=>ti(t, "active")
  , Y0 = t=>ti(t, "all")
  , Z5e = (t,e)=>ti(t, "archive" + (e ? `/${e}` : ""))
  , q5e = (t,e)=>`${ti(t, "views")}${e ? `/${e}` : ""}`
  , W5e = (t,e)=>`${Qe(t.organization)}/settings/teams/${t.key}${e ? "/" + e : ""}`
  , oJ = t=>`${Qe(t)}/settings/new-team`
  , cJ = t=>`${Qe(t.organization)}/team/${t.key}/new`
  , lJ = t=>`${Qe(t)}/new`
  , ru = t=>YS({
    organizationUrlKey: t.team.organization.urlKey,
    teamKey: t.team.key,
    issueNumber: t.number,
    title: t.title,
    isTeamPrivate: t.team.private
})
  , G5e = (t,e)=>`${Qe(t)}/issue/${e}`
  , K5e = (t,e)=>`${Qe(t)}/issues/${e.join(",")}`
  , Np = t=>{
    var e, n;
    if (t.issue)
        return Yz({
            organizationUrlKey: t.issue.team.organization.urlKey,
            teamKey: t.issue.team.key,
            issueNumber: t.issue.number,
            title: t.issue.title,
            isTeamPrivate: t.issue.team.private,
            commentId: t.id
        });
    if ((e = t.documentContent) != null && e.value) {
        let r;
        const s = t.documentContent.value;
        if (s.issue) {
            const i = s.issue.value;
            i && (r = ru(i))
        } else
            s.project ? r = bs(s.project) : s.document ? r = mh(s.document) : s.projectMilestone ? r = Bp(s.projectMilestone) : s.initiative && (r = nu(s.initiative));
        if (!r)
            throw new Error("Not able to generate inline comment url");
        return WS({
            baseUrl: r,
            commentId: t.id
        })
    } else if (t.projectUpdate) {
        const r = t.projectUpdate
          , s = r.project;
        return Qz({
            organizationUrlKey: ((n = s.accessibleTeams.first) == null ? void 0 : n.organization.urlKey) ?? "",
            projectUpdateId: r.id,
            projectName: s.name,
            projectSlugId: s.slugId,
            commentId: t.id
        })
    }
    return F.error("Not able to generate comment url", void 0, {
        commentId: t.id,
        issueId: t.issueId,
        documentId: t.documentId,
        projectUpdateId: t.projectUpdateId
    }),
    ""
}
  , dJ = t=>`${ru(t.issue)}#${Kz(t.id)}`
  , su = (t,e=G0.assigned)=>`${Qe(t.organization)}/profiles/${t.displayName}${e ? `/${e}` : ""}`
  , Y5e = t=>ti(t, "cycles")
  , Vp = t=>Dp(t.team.organization.urlKey, t.identifier, t.team.key)
  , uJ = t=>Dp(t.organization.urlKey, "active", t.key)
  , hJ = t=>Dp(t.organization.urlKey, "upcoming", t.key)
  , Q5e = t=>Jz(t.urlKey)
  , X5e = (t,e)=>eZ(t.urlKey, e.date)
  , H_ = t=>{
    var e;
    return tZ({
        labelName: t.name,
        organizationUrlKey: t.organization.urlKey,
        teamKey: (e = t.team) == null ? void 0 : e.key
    })
}
  , J5e = (t,e,n)=>n ? `${Qe(t)}/settings/teams/${n.key}/templates/${e}/new` : `${Qe(t)}/settings/templates/${e}/new`
  , e2e = (t,e)=>e.team ? `${Qe(t)}/settings/teams/${e.team.key}/templates/${e.type}/${e.id}/edit` : `${Qe(t)}/settings/templates/${e.type}/${e.id}/edit`
  , fJ = (t,e,n,r)=>{
    if (r)
        return ti(t, `projects/${r}`);
    let s = ti(t, `projects/${Ui.getPreviousProjectsViewType(n) ?? ""}`);
    return s === e && (s = ti(t, "projects/active")),
    s
}
  , bs = t=>`${Qe(t.organization)}/project/${t.slugId ? t.slug : t.id}`
  , z_ = (t,e)=>`${bs(t)}/${e === $d.documents ? "overview" : e}`
  , t2e = (t,e)=>`${Qe(t.organization)}/initiative/${t.slug}/${e}`
  , Z_ = t=>{
    const [e,n] = D2(t);
    if (e === gn.Unknown)
        return "/";
    const r = n.targetCustomView;
    switch (e) {
    case gn.Project:
        const s = n.sourceProject;
        return `${bs(s)}/view/${r.id}`;
    case gn.Initiative:
        const i = n.sourceInitiative;
        return `${Fp(i)}/view/${r.id}`;
    case gn.TeamPage:
        const a = n.sourceTeam
          , o = n.sourcePage;
        switch (o) {
        case ol.projects:
            return `${K0(a.organization, a.key)}/view/${r.id}`;
        default:
            throw new zt(o)
        }
    case gn.WorkspacePage:
        const l = n.sourceOrganization
          , d = n.sourcePage;
        switch (d) {
        case ol.projects:
            return `${K0(l)}/view/${r.id}`;
        default:
            throw new zt(d)
        }
    default:
        Gc(e)
    }
}
  , n2e = t=>`${Z_(t)}/edit`
  , r2e = t=>`${bs(t)}/view/new`
  , s2e = t=>`${Fp(t)}/view/new`
  , i2e = (t,e,n)=>{
    switch (e) {
    case ol.projects:
        return `${K0(t, n)}/view/new`;
    default:
        return ""
    }
}
  , Bp = t=>`${z_(t.project, $d.issues)}?projectMilestoneId=${t.id}`;
function a2e(t) {
    return `${Qe(t)}/project/new`
}
const Up = t=>{
    const e = t.project;
    return GS({
        projectUpdateId: t.id,
        organizationUrlKey: e.organization.urlKey,
        projectName: e.name,
        projectSlugId: e.slugId
    })
}
  , mh = t=>`${Qe(t.parent.organization)}/document/${t.slugId ? t.slug : t.id}`
  , o2e = t=>t.parent instanceof ie ? bs(t.parent) : nu(t.parent)
  , c2e = t=>t instanceof ie ? `${Qe(t.organization)}/project/${t.slug}/document/new` : `${Qe(t.organization)}/initiative/${t.slug}/document/new`
  , l2e = t=>`${Qe(t.organization)}/approval/${t.id}`
  , d2e = t=>{
    let e;
    return t instanceof ie ? e = bs(t) : t instanceof ct ? e = Vp(t) : t instanceof K ? e = su(t) : t instanceof Ut ? e = H_(t) : t instanceof Ke ? e = ph(t) : t instanceof Kt ? e = mh(t) : t instanceof cn ? e = L9(t) : t instanceof ot ? qe.isEnabled(qe.initiatives) ? e = nu(t) : e = L9(t) : t instanceof nt ? e = Np(t) : t instanceof re && (e = ru(t)),
    e
}
  , u2e = t=>ft.CLIENT_URL ? t.replace(ft.CLIENT_URL + "/", "linear://") : t
  , h2e = (t,e)=>`${ft.API_SERVER_URL}/oauth/authorize?userAccountId=${t}&userId=${e}`
  , f2e = (t,e)=>`${ft.API_SERVER_URL}/auth/mobile/authorize?userAccountId=${t}&userId=${e}`
  , p2e = "/:orgKey/(search|drafts|view|document|views|roadmap|roadmaps|diary|initiatives|initiative|projects|inbox|team|teams|issue|issues|my-issues|project|profiles|label|new|approval|explore)/";
var Kb;
(function(t) {
    t.filter = "filter",
    t.layout = "layout",
    t.grouping = "grouping",
    t.subGrouping = "subGrouping",
    t.ordering = "ordering",
    t.zoom = "zoom",
    t.showCompletedIssues = "showCompletedIssues",
    t.showCompletedProjects = "showCompletedProjects",
    t.showSubIssues = "showSubIssues",
    t.insights = "insights",
    t.display = "display",
    t.teamKey = "teamKey",
    t.projectId = "projectId",
    t.sourcePage = "sourcePage",
    t.sourceInitiativeId = "sourceInitiativeId"
}
)(Kb || (Kb = {}));
const m2e = "__private__";
function Hp() {
    return new URLSearchParams(self.location.search)
}
function g2e(t, e) {
    const n = Hp();
    for (const r of e)
        n.delete(r);
    t.replace({
        search: n.toString(),
        state: t.location.state
    })
}
const Yb = 2048;
function y2e(t) {
    t.length > Yb && F.warning(`URL is longer than ${Yb} characters`, {
        url: t
    })
}
function q_(t, e, n, r=!0) {
    var o;
    const s = t.get(n)
      , i = (o = e.location.state) == null ? void 0 : o[n];
    let a;
    if (s)
        try {
            if (a = i9.decodeObject(s),
            a)
                return r && (t.delete(n),
                e.replace({
                    ...e.location,
                    state: {
                        ...e.location.state,
                        [n]: a
                    },
                    search: t.toString()
                })),
                a
        } catch {
            a = void 0
        }
    return i && (a = i),
    a
}
function C2e(t, e=!0) {
    const n = eJ()
      , r = jf();
    return q_(n, r, t, e)
}
function b2e(t, e=!1) {
    const n = Hp();
    return q_(n, px, t, e)
}
const v2e = (t,e)=>{
    var s;
    if (e.length === 0)
        return;
    let n = !1;
    const r = Hp();
    for (const i of e)
        (r.has(i) || ((s = t.location.state) == null ? void 0 : s[i]) !== void 0) && (n = !0),
        r.delete(i);
    n && t.replace({
        state: Ic(t.location.state, e),
        search: r.toString()
    })
}
;
function w2e(t) {
    try {
        return new URL(t).pathname
    } catch {
        return t
    }
}
function sc(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const Um = class Um extends at {
    get initials() {
        return d_(this.name)
    }
    get firstName() {
        return this.name.split(" ").shift() || this.name
    }
    constructor(e=!0) {
        super(e),
        this.name = "",
        this.displayName = "",
        this.email = "",
        e && this.makeObservable()
    }
}
;
Um.loadStrategy = dn.lazy;
let qn = Um;
sc([w()], qn.prototype, "name", void 0);
sc([w()], qn.prototype, "displayName", void 0);
sc([w()], qn.prototype, "email", void 0);
sc([w()], qn.prototype, "avatarUrl", void 0);
sc([pe(()=>he, "externalUsers", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], qn.prototype, "organization", void 0);
sc([w()], qn.prototype, "slackUserId", void 0);
sc([w()], qn.prototype, "atlassianAccountId", void 0);
qn = sc([We("ExternalUser")], qn);
const pJ = rn(function({user: e, style: n, onlyIfOutOfOffice: r, verbose: s, displaySource: i, displayTooltip: a, className: o}) {
    const l = y.useRef(null)
      , [d,u] = y.useState(!1)
      , h = y.useCallback(()=>{
        const g = l.current;
        if (!g)
            return;
        const C = g.scrollWidth
          , b = g.clientWidth;
        u(C > b)
    }
    , []);
    if (e instanceof qn || r && !e.isOutOfOffice)
        return null;
    const f = e.outOfOfficeStatusFormatted;
    if (!f)
        return null;
    const p = e.isOutOfOffice ? "Away" : "Away soon"
      , m = s ? f : p;
    return c.jsxs(Lt, {
        align: "center",
        gap: 6,
        wrap: !0,
        className: o,
        overflowHidden: !0,
        style: {
            minWidth: 35
        },
        children: [c.jsx(mJ, {
            style: n,
            onMouseEnter: h,
            onMouseLeave: ()=>u(!1),
            children: c.jsx(Xe, {
                type: "micro",
                color: "labelMuted",
                style: {
                    overflow: "hidden",
                    whiteSpace: "nowrap",
                    textOverflow: "ellipsis"
                },
                ref: l,
                children: a || d ? c.jsx(c5, {
                    title: f,
                    children: m
                }) : m
            })
        }), i ? c.jsx(Xe, {
            type: "micro",
            color: "labelMuted",
            style: {
                overflow: "hidden",
                whiteSpace: "nowrap",
                textOverflow: "ellipsis"
            },
            children: "via Google Calendar"
        }) : null]
    })
})
  , mJ = ae(Lt)`
  padding: 2px 4px;
  border-radius: 2px;
  background-color: ${t=>t.theme.color.bgShade};
  max-width: 100%;
`
  , Q0 = ae(Xe).attrs({
    color: "labelMuted",
    type: "miniPlus"
})`
  display: flex;
  padding-top: 4px;
  margin-bottom: 8px;
  padding-left: 2px;
  flex-grow: 1;
  width: 100%;
`
  , Q4 = rn(function(e) {
    const {user: n, enablePresence: r, subTitle: s, ...i} = e;
    return c.jsx(c5, {
        inline: !0,
        position: "top-start",
        ...i,
        contentFactory: ()=>c.jsx(gJ, {
            user: n,
            enablePresence: r,
            subTitle: s
        }),
        interactive: !0
    })
})
  , gJ = rn(function(e) {
    const {user: n, subTitle: r=null, enablePresence: s=!0, badges: i=[]} = e;
    return n instanceof qn ? c.jsxs(Lt, {
        column: !0,
        gap: 8,
        children: [e.title ? c.jsx(Q0, {
            children: e.title
        }) : null, c.jsxs(Lt, {
            style: {
                padding: 6,
                minWidth: 180
            },
            children: [c.jsx(Di, {
                size: "large",
                user: n,
                enablePresence: !1
            }), c.jsx(Qb, {
                column: !0,
                auto: !0,
                gap: 6,
                center: !0,
                children: c.jsx(R9, {
                    user: n,
                    badges: ["External"]
                })
            })]
        })]
    }) : c.jsxs(Lt, {
        column: !0,
        children: [e.title ? c.jsx(Q0, {
            children: e.title
        }) : null, c.jsxs(Lt, {
            style: {
                padding: 6,
                minWidth: 180
            },
            children: [c.jsx(Di, {
                size: "large",
                user: n,
                enablePresence: s
            }), c.jsxs(Qb, {
                column: !0,
                auto: !0,
                gap: 6,
                center: !s && !r,
                children: [c.jsx(O_, {
                    to: su(n),
                    style: {
                        flexDirection: "column"
                    },
                    children: c.jsx(R9, {
                        user: n,
                        badges: i.length > 0 ? i : R_(n)
                    })
                }), c.jsxs(Lt, {
                    column: !0,
                    gap: 6,
                    children: [s ? c.jsx(yJ, {
                        user: n
                    }) : r, c.jsx(pJ, {
                        user: n,
                        displaySource: !0,
                        verbose: !0
                    })]
                })]
            })]
        })]
    })
})
  , k2e = rn(function(e) {
    return c.jsxs(Lt, {
        column: !0,
        children: [e.title ? c.jsx(Q0, {
            children: e.title
        }) : null, c.jsx(fh, {
            items: e.users,
            maxLength: e.maxLength,
            children: n=>c.jsx(c.Fragment, {
                children: n.map(r=>c.jsxs(G4, {
                    to: su(r),
                    children: [c.jsx(Di, {
                        size: "small",
                        user: r
                    }), c.jsx(R9, {
                        user: r
                    })]
                }, r.id))
            })
        })]
    })
})
  , R9 = ({user: t, badges: e})=>c.jsxs(CJ, {
    wrap: !0,
    gap: 4,
    children: [c.jsx(Xe, {
        type: "smallPlus",
        children: t.name
    }), t.displayName ? c.jsxs(Xe, {
        type: "small",
        color: "labelFaint",
        children: ["(", t.displayName, ")"]
    }) : null, t instanceof K ? c.jsx(YX, {
        user: t,
        badges: e
    }) : null]
});
function yJ({user: t}) {
    const e = t.presence;
    return c.jsx(c.Fragment, {
        children: c.jsxs(Xe, {
            type: "small",
            color: "labelMuted",
            children: [e === Bi.online && "Online", e === Bi.away && c.jsxs(c.Fragment, {
                children: ["Away", t.lastUserInteraction && c.jsxs(c.Fragment, {
                    children: [" as of ", Op(t.lastUserInteraction)]
                })]
            }), e === Bi.offline && "Offline"]
        })
    })
}
const CJ = ae(Lt)`
  min-width: 0;
  display: wrap;
`
  , Qb = ae(Lt)`
  margin-top: -2px;
  margin-left: 10px;
`;
function ta() {
    let t, e;
    const n = new Promise((r,s)=>{
        t = r,
        e = s
    }
    );
    return n.resolve = t,
    n.reject = e,
    n
}
const Sc = class Sc {
    static get onVisible() {
        return this.init(),
        this._onVisible
    }
    static get onHide() {
        return this.init(),
        this._onHide
    }
    static get visible() {
        return self.document.visibilityState === "visible"
    }
    static get hasBeenHiddenDuringSession() {
        return this._hasBeenHiddenDuringSession
    }
    static waitUntilVisible() {
        return new Promise(e=>{
            if (this.visible)
                return e();
            this.onVisible.subscribeOnce(e)
        }
        )
    }
    static init() {
        this.initialized || (this.initialized = !0,
        self.document.addEventListener("visibilitychange", ()=>{
            this.visible ? this._onVisible.fire() : (this._hasBeenHiddenDuringSession = !0,
            this._onHide.fire())
        }
        ))
    }
}
;
Sc.initialized = !1,
Sc._onVisible = new Tt,
Sc._onHide = new Tt,
Sc._hasBeenHiddenDuringSession = !Sc.visible;
let qs = Sc;
const bJ = 24 * be.HOUR
  , vJ = 15 * be.MINUTE
  , Ds = class Ds {
    static refresh(e) {
        if (hs)
            return !1;
        if (qs.visible === !0 && (e != null && e.delayIfVisible)) {
            F.info("A refresh was delayed due to the window being visible");
            const n = Date.now();
            return qs.onHide.subscribeOnce(()=>{
                const r = e.delay ? Math.max(0, e.delay - (Date.now() - n)) : void 0;
                this.refresh({
                    ...e,
                    delay: r || void 0
                })
            }
            ),
            !1
        }
        return this.disabledCount === 0 && navigator.onLine ? (this.doRefresh((e == null ? void 0 : e.delay) || 0),
        !0) : (e != null && e.delayIfDisabled ? (F.info("A refresh was delayed due to the refresh manager being disabled"),
        this.delayedRefresh = !0,
        typeof e.delayIfDisabled == "number" && setTimeout(()=>{
            this.doRefresh(0)
        }
        , e.delayIfDisabled)) : F.info("A refresh was canceled due to the refresh manager being disabled"),
        !1)
    }
    static disable() {
        this.disabledCount++
    }
    static enable() {
        hs || (this.disabledCount = Math.max(0, this.disabledCount - 1),
        this.disabledCount === 0 && this.delayedRefresh && navigator.onLine && this.doRefresh(be.SECOND))
    }
    static initAutoRefresh() {
        if (this.autoRefreshInitialized)
            return;
        this.autoRefreshInitialized = !0;
        let e = 0
          , n = 0;
        qs.onVisible.subscribe(this.onVisible),
        qs.onHide.subscribe(this.onHide),
        window.addEventListener("focus", this.onFocus, !1),
        window.addEventListener("blur", this.onBlur, !1);
        const r = be.MINUTE;
        setInterval(()=>{
            e += r,
            this.pageActive ? n = 0 : n += r,
            e > bJ && n > vJ && this.refresh({
                delayIfVisible: !0,
                delayIfDisabled: !1
            })
        }
        , r)
    }
    static async doRefresh(e) {
        e > 0 && await Na(e),
        window.location.reload()
    }
}
;
Ds.autoRefreshInitialized = !1,
Ds.disabledCount = 0,
Ds.delayedRefresh = !1,
Ds.pageActive = qs.visible,
Ds.onVisible = ()=>{
    Ds.pageActive = !0
}
,
Ds.onHide = ()=>{
    Ds.pageActive = !1
}
,
Ds.onFocus = ()=>{
    Ds.pageActive = !0
}
,
Ds.onBlur = ()=>{
    Ds.pageActive = !1
}
;
let P9 = Ds;
const Hm = class Hm {
}
;
Hm.onLoadingDone = new Tt;
let X0 = Hm;
const zr = class zr {
    static trace(e, n, r) {
        return n && r ? zr.shouldTrack(e) ? zr.execute(n, this, r, []) : r() : (s,i,a)=>{
            var o;
            if (zr.shouldTrack(e)) {
                const l = a.value
                  , d = `${((o = s.constructor) == null ? void 0 : o.constructorName) || ""}.${i}`;
                a.value = function(...u) {
                    return zr.execute(d, this, l, u)
                }
            }
            return a
        }
    }
    static createSpanFromStart(e, n) {
        zr.shouldTrack(e) && performance.measure(n)
    }
    static disable() {
        this.disabled = !0
    }
    static execute(e, n, r, s) {
        if (zr.disabled)
            return r.apply(n, s);
        const i = zr.callCount++
          , a = `start_${i}`
          , o = `end_${i}`;
        performance.mark(a);
        const l = r.apply(n, s)
          , d = ()=>{
            try {
                performance.mark(o),
                performance.measure(e, a, o),
                performance.clearMarks(a),
                performance.clearMarks(o)
            } catch {}
        }
        ;
        return l instanceof Promise ? l.then(()=>{
            d()
        }
        ).catch(()=>{
            d()
        }
        ) : d(),
        l
    }
    static shouldTrack(e) {
        return zr.categories || (zr.categories = new Set(mn.getValue(mn.tracingCategories, "").split(","))),
        (zr.categories.has(e) || zr.categories.has("all")) && zr.disabled === !1
    }
}
;
zr.disabled = !1,
zr.callCount = 0;
let xt = zr;
const zm = class zm {
    static addStartupSpanTag(e, n) {
        this.startupTags[e] = n
    }
    static reportStartupSpans() {
        if (xt.disable(),
        qs.hasBeenHiddenDuringSession)
            return;
        const e = performance.getEntriesByType("measure")
          , n = [];
        for (const r of e)
            r.startTime && r.duration && n.push({
                name: r.name,
                startTime: r.startTime,
                endTime: r.startTime + r.duration
            });
        switch (this.startupTags["bootstrap.type"]) {
        case "full":
            Jn.increment("startup.bootstrap.full"),
            Jn.reportSpans("Startup", "Full bootstrap", n, this.startupTags);
            break;
        case "partial":
            Jn.increment("startup.bootstrap.partial"),
            Jn.reportSpans("Startup", "Partial bootstrap", n, this.startupTags);
            break;
        case "demo":
            break;
        default:
            Jn.increment("startup.bootstrap.local"),
            Jn.reportSpans("Startup", "Local bootstrap", n, this.startupTags);
            break
        }
    }
}
;
zm.startupTags = {};
let Hi = zm;
const wJ = rn(function(e) {
    const {comment: n} = e;
    return c.jsx(Lt, {
        column: !0,
        align: "stretch",
        grow: 1,
        children: c.jsxs(xJ, {
            gap: 12,
            children: [n.user && c.jsx(Di, {
                size: "tiny",
                user: n.user
            }), c.jsxs(DJ, {
                column: !0,
                auto: !0,
                gap: 8,
                align: "flex-start",
                noMinWidth: !0,
                children: [c.jsx(kJ, {
                    type: "small",
                    truncate: !0,
                    nowrap: !0,
                    children: n.bodyTextContent
                }), n.user && c.jsxs(Xe, {
                    type: "small",
                    color: "labelMuted",
                    children: ["Comment from ", c.jsx(ree, {
                        user: n.user
                    }), " ", Op(n.createdAt)]
                })]
            })]
        })
    })
})
  , kJ = ae(Xe)`
  max-width: 100%;
  min-width: 0;
`
  , xJ = ae(Lt)`
  padding: 6px 0 6px 6px;
  min-width: 220px;
  max-width: 420px;
`
  , DJ = ae(Lt)`
  padding-top: 6px;
  margin-top: -6px;
  padding-bottom: 6px;
  margin-bottom: -6px;
`;
var SJ = _f
  , _J = Ep
  , IJ = _J(function(t, e, n) {
    SJ(t, n, e)
})
  , EJ = IJ;
const q6 = Cn(EJ);
class o1 {
    static score(e, n="") {
        return Array.isArray(e) ? e.length === 0 ? 0 : Math.max(...e.map(r=>this.score(r, n))) : $9(e, n, Jb(e), Jb(n))
    }
    static prioritize(e, n=1) {
        return e * Math.pow(1.01, n)
    }
    static deprioritize(e, n=1) {
        return e * Math.pow(.99, n)
    }
}
const Xb = 1
  , AJ = .9
  , jJ = .8
  , MJ = .17
  , W6 = .1
  , G6 = .999
  , TJ = .9999
  , LJ = .99
  , OJ = /[\\\/_+.#"@\[\(\{&]/
  , RJ = /[\\\/_+.#"@\[\(\{&]/g
  , PJ = /[\s-]/
  , W_ = /[\s-]/g;
function $9(t, e, n, r, s=0, i=0, a={}) {
    if (i === e.length)
        return s === t.length ? Xb : LJ;
    const o = `${s},${i}`;
    if (a[o] !== void 0)
        return a[o];
    const l = r.charAt(i);
    let d = n.indexOf(l, s), u = 0, h, f, p, m;
    for (; d >= 0 && l.length > 0; )
        h = $9(t, e, n, r, d + 1, i + 1, a),
        h > u && (d === s ? h *= Xb : OJ.test(t.charAt(d - 1)) ? (h *= jJ,
        p = t.slice(s, d - 1).match(RJ),
        p && s > 0 && (h *= Math.pow(G6, p.length))) : PJ.test(t.charAt(d - 1)) ? (h *= AJ,
        m = t.slice(s, d - 1).match(W_),
        m && s > 0 && (h *= Math.pow(G6, m.length))) : (h *= MJ,
        s > 0 && (h *= Math.pow(G6, d - s))),
        t.charAt(d) !== e.charAt(i) && (h *= TJ)),
        (h < W6 && n.charAt(d - 1) === r.charAt(i + 1) || r.charAt(i + 1) === r.charAt(i) && n.charAt(d - 1) !== r.charAt(i)) && (f = $9(t, e, n, r, d + 1, i + 2, a),
        f * W6 > h && (h = f * W6)),
        h > u && (u = h),
        d = n.indexOf(l, d + 1);
    return a[o] = u,
    u
}
function Jb(t) {
    return t.toLowerCase().replace(W_, " ").toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "").replace(/[\u00A1-\u00BF]/g, "")
}
const $J = ["people", "animals_and_nature", "food_and_drink", "activity", "travel_and_places", "objects", "symbols", "flags"]
  , FJ = ["smile", "happy", "joy", ":D", "grin", "smiley", "haha", ":)", "funny", "laugh", "like", "kawaii", "laughing", "satisfied", "lol", "glad", "XD", "hot", "relief", "face", "rofl", "cry", "weep", "happytears", "upside", "down", "flipped", "silly", "heat", "wink", "mischievous", "secret", ";)", "eye", "blush", "flushed", "crush", "embarrassed", "shy", "innocent", "angel", "heaven", "3", "love", "affection", "valentines", "infatuation", "adore", "heart", "eyes", "star", "struck", "grinning", "with", "starry", "kissing", "kiss", "relaxed", "massage", "happiness", "sad", "pretend", "yum", "tongue", "yummy", "nom", "delicious", "savouring", "stuck", "out", "prank", "childish", "playful", "one", "large", "and", "small", "goofy", "crazy", "closed", "money", "mouth", "rich", "dollar", "hug", "smiling", "covering", "whoops", "shock", "surprise", "silence", "scared", "frightening", "embarrassing", "finger", "lips", "quiet", "shhh", "hmmm", "think", "consider", "respect", "salute", "zipper", "sealed", "distrust", "scepticism", "disapproval", "disbelief", "indifference", "meh", ":", "", "indifferent", "-", "deadpan", "no", "hellokitty", "invisible", "lonely", "isolation", "depression", "shower", "steam", "dream", "smirk", "mean", "smug", "sarcasm", "bored", "straight", "serious", "unimpressed", "skeptical", "dubious", "side", "eyeroll", "frustrated", "grimace", "teeth", "relieve", "tired", "sigh", "lie", "pinocchio", "phew", "depressed", "upset", "rest", "nap", "sleepy", "night", "zzz", "sick", "ill", "disease", "temperature", "cold", "fever", "head", "bandage", "injured", "clumsy", "hurt", "vomit", "gross", "green", "throw", "up", "open", "gesundheit", "sneeze", "allergy", "feverish", "red", "sweating", "blue", "freezing", "frozen", "frostbite", "icicles", "dizzy", "intoxicated", "tipsy", "wavy", "spent", "unconscious", "xox", "confused", "nauseous", "nausea", "shocked", "mind", "blown", "cowgirl", "celebration", "woohoo", "pretent", "brows", "glasses", "moustache", "cool", "summer", "beach", "sunglass", "nerdy", "geek", "dork", "stuffy", "wealthy", "huh", "weird", ":/", "skeptic", "confuse", "concern", "nervous", ":(", "disappointed", "white", "frown", "impressed", "wow", "whoa", ":O", "woo", "shh", "surprised", "poisoned", "flattered", "begging", "mercy", "touched", "gratitude", "aw", "what", "stunned", "terrified", "oops", "sweat", "tears", ":'(", "sob", "scream", "munch", "omg", "unwell", ":S", "persevere", "downcast", "exercise", "whine", "from", "nose", "gas", "proud", "pride", "rage", "angry", "mad", "hate", "despise", "annoyed", "swearing", "cursing", "cussing", "profanity", "expletive", "imp", "devil", "horns", "dead", "skeleton", "creepy", "death", "poison", "danger", "deadly", "scary", "pirate", "evil", "hankey", "poop", "shit", "shitface", "fail", "turd", "japanese", "monster", "mask", "halloween", "demon", "spooky", "UFO", "paul", "outer", "space", "invader", "game", "arcade", "play", "computer", "machine", "bot", "wave", "hands", "gesture", "goodbye", "solong", "farewell", "hello", "hi", "palm", "fingers", "backhand", "raised", "stop", "highfive", "high", "five", "ban", "spock", "hand", "trek", "offer", "drop", "lift", "demand", "limbs", "perfect", "okay", "size", "tiny", "v", "ohyeah", "peace", "two", "index", "middle", "good", "lucky", "expensive", "i", "you", "sign", "rock", "on", "shaka", "point", "direction", "2", "reversed", "extended", "rude", "flipping", "recruit", "+1", "thumbsup", "yes", "awesome", "agree", "accept", "-1", "thumbsdown", "dislike", "grasp", "facepunch", "punch", "violence", "hit", "attack", "left", "facing", "fistbump", "right", "clap", "praise", "applause", "congrats", "yay", "hooray", "yea", "appreciation", "support", "butterfly", "cupped", "prayer", "agreement", "shake", "pray", "please", "hope", "wish", "namaste", "lower", "ballpoint", "pen", "stationery", "write", "compose", "care", "beauty", "manicure", "fashion", "camera", "phone", "muscle", "arm", "flex", "strong", "accessibility", "kick", "limb", "stomp", "hear", "sound", "listen", "smell", "sniff", "smart", "intelligent", "health", "heartbeat", "breathe", "dentist", "look", "watch", "stalk", "peek", "see", "stare", "flirt", "sexy", "pain", "worry", "child", "boy", "girl", "toddler", "gender", "neutral", "young", "man", "male", "guy", "teenager", "female", "woman", "person", "hairstyle", "mustache", "father", "dad", "classy", "sir", "bearded", "bewhiskered", "facial", "hair", "haired", "old", "elder", "hairless", "girls", "lady", "haired-woman", "blonde", "haired-man", "human", "senior", "older", "men", "women", "worried", "discouraged", "unhappy", "decline", "gesturing-no", "nope", "gesturing-ok", "pink", "information", "desk", "tipping-hand", "question", "raising-hand", "bow", "respectiful", "facepalming", "shrugging", "regardless", "doubt", "hospital", "doctor", "nurse", "therapist", "healthcare", "learn", "graduate", "professor", "instructor", "law", "justice", "court", "crops", "rancher", "gardener", "food", "kitchen", "culinary", "chef", "worker", "technician", "plumber", "wrench", "labor", "factory-worker", "assembly", "industrial", "business", "office-worker", "manager", "chemistry", "biologist", "chemist", "engineer", "physicist", "coder", "developer", "programmer", "software", "laptop", "song", "artist", "performer", "rockstar", "entertainer", "painting", "draw", "creativity", "painter", "fly", "plane", "airplane", "aviator", "outerspace", "rocket", "fire", "fireman", "cop", "police-officer", "legal", "enforcement", "arrest", "911", "sleuth", "or", "spy", "crime", "guardsman", "protect", "uk", "gb", "british", "royal", "ninjutsu", "skills", "build", "construction-worker", "wip", "royalty", "power", "crown", "king", "blond", "queen", "wearing", "headdress", "wearing-turban", "indian", "hinduism", "arabs", "skullcap", "chinese", "hijab", "mantilla", "tichel", "couple", "marriage", "wedding", "groom", "formal", "baby", "belly", "breast", "feeding", "nursing", "birth", "wings", "halo", "festival", "xmas", "christmas", "mrs", "mother", "marvel", "hero", "superpowers", "heroine", "bad", "criminal", "magic", "sorcerer", "witch", "magical", "blood", "twilight", "dracula", "sea", "triton", "merwoman", "ariel", "wishes", "undead", "walking", "mystical", "getting", "relax", "getting-massage", "getting-haircut", "move", "feet", "steps", "still", "respectful", "probing", "blind", "disability", "running", "race", "dancing", "fun", "dancer", "levitate", "hover", "jump", "dancers", "people", "perform", "costume", "with-bunny-ears-partying", "boys", "spa", "steamroom", "sauna", "sport", "sports", "hobby", "fencing", "sword", "animal", "betting", "competition", "gambling", "luck", "winter", "snow", "golfer", "surfing", "ocean", "rowing", "boat", "rowing-boat", "water", "ship", "swimming", "pool", "athlete", "bouncing-ball", "weight", "lifter", "training", "lifting-weights", "biking", "bike", "hipster", "mountain-biking", "transportation", "doing", "cartwheel", "gymnastic", "gymnastics", "wrestling", "wrestlers", "playing", "playing-water-polo", "playing-handball", "performance", "balance", "juggle", "skill", "multitask", "meditate", "meditation", "yoga", "serenity", "zen", "mindfulness", "taking", "clean", "bathroom", "sleeping", "accommodation", "friendship", "pair", "date", "dating", "bromance", "couplekiss", "kiss-man", "kiss-woman", "heart-man", "heart-woman", "home", "parents", "mom", "woman-boy", "family", "woman-girl", "woman-girl-boy", "children", "woman-boy-boy", "woman-girl-girl", "man-boy", "man-girl", "man-girl-boy", "man-boy-boy", "man-girl-girl", "parent", "boy-boy", "girl-boy", "girl-girl", "in", "silhouette", "user", "sing", "say", "talk", "group", "team", "tracking", "cats", "nature", "speak", "email", "envelope", "cupid", "gift", "heartpulse", "purple", "square", "heavy", "mark", "ornament", "decoration", "sorry", "break", "heartbreak", "passionate", "enthusiastic", "broken", "wounded", "coffee", "pure", "100", "score", "numbers", "century", "exam", "quiz", "test", "pass", "boom", "bomb", "explode", "explosion", "sparkle", "shoot", "drops", "drip", "dashing", "away", "wind", "air", "fast", "shoo", "fart", "smoke", "puff", "terrorism", "bubble", "words", "message", "chatting", "in-speech-bubble", "info", "caption", "speech", "thinking", "cloud", "circus", "banana", "friend", "woof", "puppy", "pet", "faithful", "dog2", "doge", "dog", "101", "wild", "meow", "kitten", "cat2", "superstition", "cat", "roar", "tiger2", "brown", "racehorse", "gamble", "stripes", "safari", "venison", "ox", "beef", "moo", "milk", "cow", "cow2", "oink", "pig2", "sheep", "wool", "shipit", "dromedary", "desert", "hump", "alpaca", "spots", "th", "elephant", "tusks", "horn", "cheese", "wedge", "rodent", "mouse2", "mouse", "spring", "bunny", "rabbit2", "squirrel", "spiny", "vampire", "arctic", "australia", "joey", "hop", "marsupial", "honey", "footprints", "bird", "cluck", "chicken", "egg", "born", "hatched", "front", "tweet", "of", "mallard", "hoot", "peahen", "croak", "toad", "reptile", "lizard", "alligator", "slow", "tortoise", "hiss", "python", "myth", "dinosaur", "brachiosaurus", "brontosaurus", "diplodocus", "extinct", "t", "rex", "tyrannosaurus", "whale2", "flipper", "fish", "fins", "creature", "swim", "nemo", "jaws", "reef", "shell", "insect", "caterpillar", "worm", "bug", "bee", "ladybug", "chirp", "pests", "arachnid", "silk", "malaria", "amoeba", "bacteria", "germs", "virus", "flowers", "plant", "flower", "calm", "military", "vegetable", "fall", "yellow", "grass", "lawn", "greenery", "house", "mojito", "tropical", "sheaf", "medicine", "weed", "irish", "clover", "ca", "leaves", "tree", "fruit", "wine", "picnic", "orange", "monkey", "mac", "school", "kiwi", "aubergine", "tuber", "vegatable", "starch", "spicy", "chilli", "chili", "pickle", "bok", "choy", "cabbage", "kale", "lettuce", "spice", "cook", "nut", "wheat", "breakfast", "toast", "bread", "french", "flour", "twisted", "bakery", "schmear", "flapjacks", "hotcakes", "chadder", "drumstick", "meat", "turkey", "chop", "lambchop", "porkchop", "pork", "pig", "cheeseburger", "mcdonalds", "burger", "chips", "snack", "party", "hotdog", "frankfurter", "lunch", "mexican", "masa", "gyro", "fried", "cooking", "casserole", "paella", "stew", "soup", "pot", "cereal", "oatmeal", "porridge", "healthy", "movie", "theater", "films", "condiment", "shaker", "china", "asian", "ramen", "noodle", "chopsticks", "italian", "rice", "appetizer", "japan", "narutomaki", "kamaboko", "surimi", "autumn", "dessert", "sweet", "barbecue", "empanada", "pierogi", "potsticker", "prophecy", "leftovers", "crustacean", "bisque", "claws", "seafood", "icecream", "donut", "oreo", "chocolate", "cake", "pastry", "lolly", "candy", "bees", "container", "beverage", "drink", "caffeine", "latte", "espresso", "tea", "bowl", "drunk", "alcohol", "booze", "champagne", "cocktail", "pub", "beers", "celebrate", "cheers", "liquor", "bourbon", "scotch", "whisky", "shot", "cup", "soda", "taiwan", "boba", "straw", "cube", "eat", "meal", "dinner", "restaurant", "cutlery", "tableware", "knife", "blade", "weapon", "sauce", "vase", "jar", "jack", "o", "lantern", "light", "pumpkin", "vacation", "december", "photo", "carnival", "congratulations", "stars", "shine", "dynamite", "explosive", "shiny", "birthday", "tada", "branch", "bamboo", "panda", "toy", "kimono", "flags", "koinobori", "banner", "ding", "bell", "scene", "asia", "tsukimi", "bowtie", "present", "cause", "awareness", "concert", "entrance", "event", "award", "winning", "army", "win", "contest", "place", "ftw", "ceremony", "first", "second", "third", "football", "balls", "NBA", "NFL", "frisbee", "ultimate", "bat", "ball", "stick", "puck", "table", "tennis", "paddle", "pingpong", "racquet", "shuttlecock", "fighting", "judo", "karate", "taekwondo", "golf", "sash", "pageant", "ski", "sleigh", "luge", "toboggan", "dart", "direct", "bar", "target", "yo", "8ball", "8", "disco", "fortune", "teller", "supernature", "bead", "charm", "religion", "protection", "console", "PS4", "controller", "bet", "vegas", "casino", "dice", "random", "tabletop", "jigsaw", "interlocking", "plush", "stuffed", "mexico", "dance", "matryoshka", "spades", "poker", "cards", "suits", "hearts", "diamonds", "clubs", "expendable", "black", "kanji", "sunset", "acting", "drama", "frame", "photography", "art", "design", "paint", "colors", "needle", "sewing", "spool", "string", "stitches", "crochet", "knit", "rope", "scout", "africa", "showing", "europe", "world", "international", "USA", "east", "earth", "internet", "interweb", "i18n", "location", "nation", "country", "magnetic", "navigation", "orienteering", "capped", "environment", "disaster", "mountain", "outdoors", "tent", "weather", "sunny", "sand", "warm", "saharah", "venue", "culture", "history", "working", "progress", "bricks", "stone", "timber", "trunk", "structure", "buildings", "building", "abandon", "evict", "bureau", "work", "communication", "european", "surgery", "sales", "cash", "enterprise", "accomodation", "checkin", "shopping", "groceries", "student", "education", "teach", "mall", "industry", "pollution", "bride", "american", "newyork", "christ", "islam", "worship", "minaret", "judaism", "temple", "jewish", "kyoto", "mecca", "mosque", "fresh", "camping", "evening", "city", "downtown", "life", "urban", "view", "morning", "sky", "sunrise", "dawn", "sanfrancisco", "hotsprings", "bath", "park", "londoneye", "playground", "salon", "style", "vehicle", "train", "bullettrain", "speed", "public", "travel", "train2", "mrt", "underground", "tube", "carriage", "car", "bart", "cars", "uber", "utility", "express", "farming", "agriculture", "formula", "f1", "racing", "vespa", "sasha", "razor", "board", "footwear", "busstop", "wait", "road", "cupertino", "interstate", "highway", "barrell", "fuelpump", "station", "petroleum", "transport", "rotating", "ambulance", "emergency", "alert", "error", "pinged", "signal", "driving", "octagonal", "caution", "warning", "ferry", "saver", "preserver", "sailing", "yacht", "cruise", "titanic", "deploy", "flight", "airport", "landing", "arriving", "boarding", "glide", "sit", "bus", "gps", "orbit", "spaceflight", "NASA", "ISS", "launch", "staffmode", "ufo", "service", "packing", "done", "time", "clock", "oldschool", "limit", "flowing", "countdown", "accessories", "wake", "deadline", "alarm", "clock12", "noon", "midnight", "midday", "late", "early", "schedule", "clock1230", "twelve", "thirty", "clock1", "clock130", "clock2", "clock230", "clock3", "clock330", "three", "clock4", "clock430", "four", "clock5", "clock530", "clock6", "dusk", "clock630", "six", "clock7", "clock730", "seven", "clock8", "clock830", "eight", "clock9", "clock930", "nine", "clock10", "clock1030", "ten", "clock11", "clock1130", "eleven", "planet", "sleep", "gray", "waxing", "brightness", "star2", "partly", "cloudy", "thunder", "mostly", "barely", "cyclone", "twister", "blowing", "gust", "swirl", "vortex", "spiral", "whirlpool", "spin", "tornado", "hurricane", "typhoon", "unicorn", "rain", "drizzle", "rainy", "zap", "lightning", "bolt", "season", "flame", "faucet", "tsunami", "eyeglasses", "eyesight", "dark", "safety", "experiment", "scientist", "shirt", "suitup", "cloth", "tshirt", "casual", "tee", "neck", "clothes", "jacket", "stockings", "dress", "piece", "clothing", "s", "bags", "accessory", "clutch", "bag", "buy", "purchase", "satchel", "athletic", "shoes", "sneakers", "backpacking", "womans", "ballet", "slip", "slipper", "heel", "heeled", "pumps", "stiletto", "flip", "flops", "boot", "kod", "leader", "lord", "tophat", "gentleman", "mortar", "college", "degree", "university", "hat", "baseball", "cross", "construction", "dhikr", "religious", "propose", "diamond", "jewelry", "gem", "engagement", "ruby", "mute", "volume", "low", "broadcast", "loud", "noise", "noisy", "mega", "speaker", "instrument", "music", "notification", "chime", "silent", "treble", "clef", "tone", "recording", "talkshow", "scale", "dial", "PA", "headphones", "gadgets", "podcast", "program", "jazz", "blues", "piano", "brass", "orchestra", "symphony", "instructment", "drumsticks", "snare", "iphone", "technology", "apple", "calling", "incoming", "bbcall", "90s", "energy", "sustain", "drained", "charger", "screen", "display", "monitor", "computing", "paper", "ink", "type", "input", "text", "button", "click", "trackpad", "disk", "record", "data", "save", "80s", "cd", "dvd", "disc", "calculation", "film", "video", "tape", "tv", "show", "vhs", "mag", "search", "zoom", "find", "detective", "wax", "electricity", "idea", "sight", "lighting", "classroom", "notes", "study", "read", "library", "knowledge", "textbook", "literature", "documents", "office", "ancient", "press", "headline", "rolled", "favorite", "order", "tidy", "label", "sale", "tag", "moneybag", "payment", "coins", "currency", "bill", "sterling", "bills", "england", "accounting", "expenses", "graph", "presentation", "stats", "letter", "postal", "inbox", "e", "mail", "cardboard", "box", "moving", "election", "vote", "pencil2", "writing", "drawing", "pencil", "job", "career", "load", "organizing", "tear", "off", "planning", "note", "pad", "memo", "upwards", "trend", "recovery", "economics", "success", "downwards", "recession", "failure", "here", "map", "calculate", "length", "math", "architect", "sketch", "cut", "filing", "bin", "trash", "rubbish", "garbage", "toss", "locked", "security", "password", "padlock", "unlock", "privacy", "lock", "door", "tools", "create", "tool", "dig", "gun", "revolver", "diy", "ikea", "fix", "maintainer", "handy", "cog", "compression", "scales", "fairness", "rings", "url", "mechanic", "attraction", "distilling", "science", "lab", "biology", "genetics", "laboratory", "zoomin", "astronomy", "future", "radio", "drugs", "period", "harm", "wound", "pharmacy", "drug", "heal", "assist", "x", "ray", "entry", "exit", "reflection", "scenery", "chill", "furniture", "restroom", "wc", "washroom", "potty", "toilet", "moisturizer", "sunscreen", "diaper", "cleaning", "sweeping", "laundry", "bathing", "lather", "soap", "carbonation", "sparkling", "hygiene", "dental", "absorbing", "porous", "quench", "trolley", "smoking", "kills", "tobacco", "joint", "die", "rip", "graveyard", "cemetery", "casket", "funeral", "grave", "ashes", "moyai", "easter", "island", "announcement", "document", "bank", "put", "its", "liquid", "disabled", "mens", "womens", "loo", "refresh", "custom", "passport", "border", "exclamation", "problem", "issue", "denied", "circle", "forbid", "disallow", "cyclist", "prohibited", "cigarette", "do", "not", "litter", "non", "potable", "tap", "rules", "crossing", "underage", "18", "minor", "nuclear", "continue", "top", "upper", "diagonal", "northeast", "next", "southeast", "bottom", "southwest", "previous", "back", "northwest", "way", "vertical", "shape", "horizontal", "sideways", "leftwards", "hook", "return", "undo", "enter", "rotate", "heading", "sync", "cycle", "round", "repeat", "church", "physics", "symbol", "buddhism", "sikhism", "jainism", "christianity", "suppedaneum", "hippie", "branches", "hanukkah", "candles", "pointed", "hexagram", "zodiac", "astrology", "scorpius", "constellation", "rightwards", "arrows", "loop", "arrow", "forward", "pointing", "double", "triangle", "backward", "rewind", "for", "curtain", "stage", "sun", "afternoon", "strength", "reception", "connection", "wifi", "bluetooth", "lgbtq", "multiplication", "addition", "more", "increase", "subtract", "less", "division", "forever", "bangbang", "interrobang", "wat", "punctuation", "grey", "doubts", "line", "squiggle", "scribble", "buck", "recycle", "fleur", "de", "lis", "decorative", "spear", "badge", "shield", "ok", "answer", "tick", "ballot", "confirm", "nike", "delete", "remove", "cancel", "negative", "squared", "deny", "cassette", "polygon", "fireworks", "ip", "license", "alphabet", "tm", "trademark", "brand", "keycap", "twitter", "zero", "null", "prime", "capital", "abcd", "1234", "ampersand", "percent", "glyphs", "characters", "abc", "source", "start", "icon", "o2", "parking", "help", "above", "destination", "charge", "u6708", "monthly", "amount", "month", "moon", "u6709", "free", "have", "u6307", "reserved", "ideograph", "advantage", "bargain", "obtain", "get", "u5272", "discount", "divide", "u7121", "nothing", "u7981", "forbidden", "restricted", "acceptable", "u7533", "application", "u5408", "passing", "grade", "join", "u7a7a", "vacancy", "empty", "sshh", "u55b6", "opening", "hours", "u6e80", "full", "jewel", "inside", "crystal", "fancy", "checkered", "finishline", "gokart", "cn", "prc", "german", "es", "ac", "ad", "ae", "af", "ag", "ai", "al", "am", "ao", "aq", "ar", "as", "ws", "at", "au", "ax", "aland", "Aland", "az", "ba", "bb", "bd", "be", "bf", "bg", "bh", "bi", "bj", "bl", "st", "barthelemy", "saint", "bm", "bn", "darussalam", "bo", "bq", "bonaire", "br", "bs", "bt", "bv", "norway", "bw", "by", "bz", "cc", "keeling", "democratic", "republic", "cf", "cg", "ch", "ci", "cote", "d", "ivoire", "ivory", "coast", "ck", "cl", "cm", "co", "cp", "cr", "cu", "cv", "cabo", "cw", "curacao", "cx", "cy", "cz", "dg", "dj", "dk", "dm", "dz", "ea", "ec", "ee", "eg", "eh", "english", "er", "et", "eu", "fi", "fj", "fk", "malvinas", "fm", "federated", "states", "fo", "ga", "gd", "ge", "gf", "gg", "gh", "gi", "gl", "gm", "gn", "gp", "gq", "gr", "gs", "gt", "gu", "gw", "guinea", "bissau", "gy", "hk", "hm", "hn", "hr", "ht", "hu", "ic", "id", "ie", "il", "im", "io", "iq", "ir", "islamic", "is", "je", "jm", "jo", "ke", "kg", "kh", "ki", "km", "kn", "kp", "kw", "ky", "kz", "la", "lao", "lb", "lc", "li", "lk", "lr", "ls", "lt", "lu", "lv", "ly", "ma", "mc", "md", "me", "mf", "mg", "mh", "mk", "ml", "mm", "mn", "mo", "mp", "mq", "mr", "ms", "mt", "mu", "mv", "mw", "mx", "my", "mz", "na", "nc", "ne", "nf", "ng", "ni", "nl", "np", "nr", "nu", "nz", "om", "pa", "pe", "pf", "pg", "ph", "pk", "pl", "pm", "pn", "pr", "ps", "palestine", "pt", "pw", "py", "qa", "re", "reunion", "ro", "rs", "rw", "sa", "sb", "sc", "scottish", "sd", "se", "sg", "sh", "ascension", "tristan", "cunha", "si", "sj", "sk", "sl", "sm", "sn", "so", "sr", "ss", "sao", "tome", "principe", "sv", "sx", "dutch", "sy", "syrian", "arab", "sz", "ta", "tc", "td", "tf", "tg", "tj", "tk", "tl", "timor", "leste", "tn", "to", "tr", "tt", "tw", "tz", "united", "ua", "ug", "um", "u", "un", "uy", "uz", "va", "vc", "ve", "bolivarian", "vg", "bvi", "vi", "us", "vn", "viet", "nam", "vu", "welsh", "wf", "xk", "ye", "yt", "za", "zm", "zw", "fr", "great", "britain", "northern", "ireland", "UK", "union", "it", "jp", "kr", "skull", "crossbones", "gay", "lgbt", "glbt", "queer", "homosexual", "lesbian", "bisexual", "transgender", "ru", "russian", "federation", "post", "milestone", "america", "waving", "losing", "loser", "lost", "surrender", "give"]
  , NJ = [{
    n: "grinning",
    k: [0, 1, 2, 3, 4],
    e: [":D"],
    s: "😀",
    c: 0,
    d: "#e6b12d"
}, {
    n: "smiley",
    k: [5, 1, 2, 6, 3, 7, 0, 8],
    e: [":)", "=)", "=-)"],
    s: "😃",
    c: 0,
    d: "#e5ae2b"
}, {
    n: "smile",
    k: [0, 1, 2, 8, 6, 9, 10, 3, 7],
    e: [":)", "C:", "c:", ":D", ":-D"],
    s: "😄",
    c: 0,
    d: "#e5af2b"
}, {
    n: "grin",
    k: [4, 1, 0, 2, 11],
    s: "😁",
    c: 0,
    d: "#e3ae30"
}, {
    n: "laughing",
    k: [12, 13, 1, 2, 14, 6, 15, 16, 9],
    e: [":>", ":->"],
    s: "😆",
    c: 0,
    d: "#e6b02d"
}, {
    n: "sweat_smile",
    k: [0, 17, 1, 9, 18],
    s: "😅",
    c: 0,
    d: "#daa226"
}, {
    n: "rolling_on_the_floor_laughing",
    k: [19, 14, 6, 20],
    s: "🤣",
    c: 0,
    d: "#dca72c"
}, {
    n: "joy",
    k: [21, 22, 1, 23, 6],
    s: "😂",
    c: 0,
    d: "#d8a62c"
}, {
    n: "slightly_smiling_face",
    k: [0],
    e: [":)", "(:", ":-)"],
    s: "🙂",
    c: 0,
    d: "#f0b92b"
}, {
    n: "upside_down_face",
    k: [24, 25, 26, 27, 0],
    s: "🙃",
    c: 0,
    d: "#eeb529"
}, {
    n: "melting_face",
    k: [17, 28],
    s: "🫠",
    c: 0,
    d: "#f4be31"
}, {
    n: "wink",
    k: [29, 1, 30, 31, 32, 0, 33],
    e: [";)", ";-)"],
    s: "😉",
    c: 0,
    d: "#edb529"
}, {
    n: "blush",
    k: [34, 0, 1, 35, 36, 37, 38, 2],
    e: [":)"],
    s: "😊",
    c: 0,
    d: "#eead23"
}, {
    n: "innocent",
    k: [39, 40, 41],
    s: "😇",
    c: 0,
    d: "#e4ac28"
}, {
    n: "smiling_face_with_3_hearts",
    k: [42, 43, 10, 44, 45, 46, 36, 47],
    s: "🥰",
    c: 0,
    d: "#e6a72b"
}, {
    n: "heart_eyes",
    k: [48, 49, 43, 10, 44, 45, 46, 36],
    s: "😍",
    c: 0,
    d: "#e69f27"
}, {
    n: "star-struck",
    k: [50, 51, 52, 19, 53, 49, 0, 54],
    s: "🤩",
    c: 0,
    d: "#cb881e"
}, {
    n: "kissing_heart",
    k: [55, 48, 43, 10, 44, 45, 46],
    e: [":*", ":-*"],
    s: "😘",
    c: 0,
    d: "#ecb32c"
}, {
    n: "kissing",
    k: [43, 10, 42, 45, 46, 56],
    s: "😗",
    c: 0,
    d: "#efb72a"
}, {
    n: "relaxed",
    k: [57, 34, 58, 59],
    s: "☺️",
    c: 0,
    d: "#edaf25"
}, {
    n: "kissing_closed_eyes",
    k: [43, 10, 44, 45, 46, 56],
    s: "😚",
    c: 0,
    d: "#edaf27"
}, {
    n: "kissing_smiling_eyes",
    k: [44, 45, 46, 56],
    s: "😙",
    c: 0,
    d: "#efb52a"
}, {
    n: "smiling_face_with_tear",
    k: [60, 21, 61],
    s: "🥲",
    c: 0,
    d: "#e7b52f"
}, {
    n: "yum",
    k: [62, 1, 2, 63, 0, 27, 64, 65, 66, 67],
    s: "😋",
    c: 0,
    d: "#ecb52b"
}, {
    n: "stuck_out_tongue",
    k: [68, 69, 70, 71, 72, 30, 0],
    e: [":p", ":-p", ":P", ":-P", ":b", ":-b"],
    s: "😛",
    c: 0,
    d: "#edba30"
}, {
    n: "stuck_out_tongue_winking_eye",
    k: [68, 69, 33, 70, 71, 72, 30, 0, 29],
    e: [";p", ";-p", ";b", ";-b", ";P", ";-P"],
    s: "😜",
    c: 0,
    d: "#e9ba51"
}, {
    n: "zany_face",
    k: [52, 53, 73, 74, 75, 76, 33, 77, 78],
    s: "🤪",
    c: 0,
    d: "#e1b65c"
}, {
    n: "stuck_out_tongue_closed_eyes",
    k: [68, 69, 79, 49, 70, 72, 30, 0],
    s: "😝",
    c: 0,
    d: "#eab62c"
}, {
    n: "money_mouth_face",
    k: [80, 81, 82, 83],
    s: "🤑",
    c: 0,
    d: "#e3b12c"
}, {
    n: "hugging_face",
    k: [0, 84],
    s: "🤗",
    c: 0,
    d: "#e4951e"
}, {
    n: "face_with_hand_over_mouth",
    k: [85, 49, 75, 86, 87, 88, 89],
    s: "🤭",
    c: 0,
    d: "#edac2a"
}, {
    n: "face_with_open_eyes_and_hand_over_mouth",
    k: [90, 31, 88, 89],
    s: "🫢",
    c: 0,
    d: "#efb02e"
}, {
    n: "face_with_peeking_eye",
    k: [91, 92, 93],
    s: "🫣",
    c: 0,
    d: "#e7b73b"
}, {
    n: "shushing_face",
    k: [53, 94, 86, 79, 95, 96, 97],
    s: "🤫",
    c: 0,
    d: "#efb02d"
}, {
    n: "thinking_face",
    k: [98, 99, 100],
    s: "🤔",
    c: 0,
    d: "#efba2f"
}, {
    n: "saluting_face",
    k: [101, 102],
    s: "🫡",
    c: 0,
    d: "#efb62e"
}, {
    n: "zipper_mouth_face",
    k: [103, 81, 104, 31],
    s: "🤐",
    c: 0,
    d: "#e5b335"
}, {
    n: "face_with_raised_eyebrow",
    k: [73, 105, 106, 107, 108, 89],
    s: "🤨",
    c: 0,
    d: "#ebb22a"
}, {
    n: "neutral_face",
    k: [109, 110, 111, 112],
    e: [":|", ":-|"],
    s: "😐",
    c: 0,
    d: "#f0b82a"
}, {
    n: "expressionless",
    k: [113, 114, 112, 110, 115],
    e: ["-_-"],
    s: "😑",
    c: 0,
    d: "#f1ba2b"
}, {
    n: "no_mouth",
    k: [116, 117],
    s: "😶",
    c: 0,
    d: "#f2bb2c"
}, {
    n: "dotted_line_face",
    k: [118, 119, 120, 121],
    s: "🫥",
    c: 0,
    d: "#ca8113"
}, {
    n: "face_in_clouds",
    k: [122, 123, 124],
    s: "😶‍🌫️",
    c: 0,
    d: "#e0dbc3"
}, {
    n: "smirk",
    k: [125, 0, 126, 70, 127, 128],
    s: "😏",
    c: 0,
    d: "#ebb42a"
}, {
    n: "unamused",
    k: [109, 129, 130, 131, 128, 132, 133, 134, 135, 33],
    e: [":("],
    s: "😒",
    c: 0,
    d: "#ecb52a"
}, {
    n: "face_with_rolling_eyes",
    k: [136, 137],
    s: "🙄",
    c: 0,
    d: "#e7be59"
}, {
    n: "grimacing",
    k: [138, 139],
    s: "😬",
    c: 0,
    d: "#e9b12a"
}, {
    n: "face_exhaling",
    k: [140, 18, 141, 142],
    s: "😮‍💨",
    c: 0,
    d: "#efbb31"
}, {
    n: "lying_face",
    k: [143, 144],
    s: "🤥",
    c: 0,
    d: "#eeb930"
}, {
    n: "relieved",
    k: [57, 145, 58, 59],
    s: "😌",
    c: 0,
    d: "#ecb429"
}, {
    n: "pensive",
    k: [60, 146, 147],
    s: "😔",
    c: 0,
    d: "#ecb52a"
}, {
    n: "sleepy",
    k: [141, 148, 149],
    s: "😪",
    c: 0,
    d: "#e3b02d"
}, {
    n: "drooling_face",
    k: [],
    s: "🤤",
    c: 0,
    d: "#e9b22b"
}, {
    n: "sleeping",
    k: [141, 150, 151, 152],
    s: "😴",
    c: 0,
    d: "#ecbc39"
}, {
    n: "mask",
    k: [153, 154, 155],
    s: "😷",
    c: 0,
    d: "#e8b43e"
}, {
    n: "face_with_thermometer",
    k: [153, 156, 157, 158],
    s: "🤒",
    c: 0,
    d: "#eaaf2e"
}, {
    n: "face_with_head_bandage",
    k: [159, 160, 161, 162, 163],
    s: "🤕",
    c: 0,
    d: "#e8ae2a"
}, {
    n: "nauseated_face",
    k: [164, 165, 166, 153, 167, 168, 154],
    s: "🤢",
    c: 0,
    d: "#84a109"
}, {
    n: "face_vomiting",
    k: [53, 169, 81, 153],
    s: "🤮",
    c: 0,
    d: "#d5b42b"
}, {
    n: "sneezing_face",
    k: [170, 171, 153, 172],
    s: "🤧",
    c: 0,
    d: "#e9b835"
}, {
    n: "hot_face",
    k: [173, 28, 174, 175],
    s: "🥵",
    c: 0,
    d: "#ea7f2f"
}, {
    n: "cold_face",
    k: [176, 177, 178, 179, 180],
    s: "🥶",
    c: 0,
    d: "#509ee0"
}, {
    n: "woozy_face",
    k: [181, 182, 183, 184],
    s: "🥴",
    c: 0,
    d: "#ecb029"
}, {
    n: "dizzy_face",
    k: [185, 186, 187],
    s: "😵",
    c: 0,
    d: "#eab32b"
}, {
    n: "face_with_spiral_eyes",
    k: [153, 154, 188, 189, 190],
    s: "😵‍💫",
    c: 0,
    d: "#e7a824"
}, {
    n: "exploding_head",
    k: [191, 19, 53, 192, 193],
    s: "🤯",
    c: 0,
    d: "#d48a21"
}, {
    n: "face_with_cowboy_hat",
    k: [53, 194],
    s: "🤠",
    c: 0,
    d: "#9f702a"
}, {
    n: "partying_face",
    k: [195, 196],
    s: "🥳",
    c: 0,
    d: "#e5aa2d"
}, {
    n: "disguised_face",
    k: [197, 198, 199, 200],
    s: "🥸",
    c: 0,
    d: "#d3a235"
}, {
    n: "sunglasses",
    k: [201, 0, 202, 203, 204],
    e: ["8)"],
    s: "😎",
    c: 0,
    d: "#e5b239"
}, {
    n: "nerd_face",
    k: [205, 206, 207],
    s: "🤓",
    c: 0,
    d: "#dfb03a"
}, {
    n: "face_with_monocle",
    k: [208, 209],
    s: "🧐",
    c: 0,
    d: "#e6ae2d"
}, {
    n: "confused",
    k: [109, 210, 211, 98, 212],
    e: [":\\", ":-\\", ":/", ":-/"],
    s: "😕",
    c: 0,
    d: "#eeb52a"
}, {
    n: "face_with_diagonal_mouth",
    k: [213, 214, 137, 113],
    s: "🫤",
    c: 0,
    d: "#f4ba2c"
}, {
    n: "worried",
    k: [215, 216, 217],
    s: "😟",
    c: 0,
    d: "#ecb42a"
}, {
    n: "slightly_frowning_face",
    k: [218, 60, 147],
    s: "🙁",
    c: 0,
    d: "#eeb529"
}, {
    n: "white_frowning_face",
    k: [219, 60, 147, 220],
    s: "☹️",
    c: 0,
    d: "#eeb52a"
}, {
    n: "open_mouth",
    k: [89, 221, 222, 223, 224],
    e: [":o", ":-o", ":O", ":-O"],
    s: "😮",
    c: 0,
    d: "#f1ba2b"
}, {
    n: "hushed",
    k: [225, 226],
    s: "😯",
    c: 0,
    d: "#edb52a"
}, {
    n: "astonished",
    k: [187, 227, 228],
    s: "😲",
    c: 0,
    d: "#eeb92e"
}, {
    n: "flushed",
    k: [34, 38, 229],
    s: "😳",
    c: 0,
    d: "#e2b455"
}, {
    n: "pleading_face",
    k: [230, 231],
    s: "🥺",
    c: 0,
    d: "#eabd47"
}, {
    n: "face_holding_back_tears",
    k: [232, 233],
    s: "🥹",
    c: 0,
    d: "#dfa62d"
}, {
    n: "frowning",
    k: [234, 235],
    s: "😦",
    c: 0,
    d: "#f1bb2c"
}, {
    n: "anguished",
    k: [236, 216],
    e: ["D:"],
    s: "😧",
    c: 0,
    d: "#ecb52a"
}, {
    n: "fearful",
    k: [91, 237, 216, 238, 210],
    s: "😨",
    c: 0,
    d: "#d8a02c"
}, {
    n: "cold_sweat",
    k: [157, 216],
    s: "😰",
    c: 0,
    d: "#d1a034"
}, {
    n: "disappointed_relieved",
    k: [218, 145, 239, 216],
    s: "😥",
    c: 0,
    d: "#e6b32d"
}, {
    n: "cry",
    k: [21, 240, 60, 146, 147, 241],
    e: [":'("],
    s: "😢",
    c: 0,
    d: "#e6b12c"
}, {
    n: "sob",
    k: [242, 21, 240, 60, 147, 146],
    e: [":'("],
    s: "😭",
    c: 0,
    d: "#daaa32"
}, {
    n: "scream",
    k: [243, 244, 91, 245],
    s: "😱",
    c: 0,
    d: "#cb9226"
}, {
    n: "confounded",
    k: [188, 153, 246, 238, 247],
    s: "😖",
    c: 0,
    d: "#edb72b"
}, {
    n: "persevere",
    k: [248, 153, 116, 147, 238],
    s: "😣",
    c: 0,
    d: "#ecb429"
}, {
    n: "disappointed",
    k: [60, 147, 146, 217],
    e: ["):", ":(", ":-("],
    s: "😞",
    c: 0,
    d: "#f2bc2c"
}, {
    n: "sweat",
    k: [249, 17, 60, 141, 250],
    s: "😓",
    c: 0,
    d: "#e7b02a"
}, {
    n: "weary",
    k: [141, 150, 60, 137, 147],
    s: "😩",
    c: 0,
    d: "#e6ae2a"
}, {
    n: "tired_face",
    k: [153, 251, 147, 137],
    s: "😫",
    c: 0,
    d: "#e5ae2b"
}, {
    n: "yawning_face",
    k: [141, 150],
    s: "🥱",
    c: 0,
    d: "#eab32c"
}, {
    n: "triumph",
    k: [123, 252, 253, 254, 145, 255, 256],
    s: "😤",
    c: 0,
    d: "#eebd36"
}, {
    n: "rage",
    k: [257, 258, 259, 260, 261],
    s: "😡",
    c: 0,
    d: "#ee6513"
}, {
    n: "angry",
    k: [259, 262, 137],
    e: [">:(", ">:-("],
    s: "😠",
    c: 0,
    d: "#f0b92b"
}, {
    n: "face_with_symbols_on_mouth",
    k: [131, 86, 263, 264, 265, 266, 267],
    s: "🤬",
    c: 0,
    d: "#e2883b"
}, {
    n: "smiling_imp",
    k: [268, 269],
    s: "😈",
    c: 0,
    d: "#9341a4"
}, {
    n: "imp",
    k: [258, 19, 53, 270, 269],
    s: "👿",
    c: 0,
    d: "#9643a7"
}, {
    n: "skull",
    k: [271, 272, 273, 274],
    s: "💀",
    c: 0,
    d: "#d6d9da"
}, {
    n: "skull_and_crossbones",
    k: [275, 276, 277, 278, 274, 279, 280],
    s: "☠️",
    c: 0,
    d: "#bec0c1"
}, {
    n: "hankey",
    k: [281, 282, 283, 284, 285, 286],
    s: "💩",
    c: 0,
    d: "#865739"
}, {
    n: "clown_face",
    k: [],
    s: "🤡",
    c: 0,
    d: "#cfbfab"
}, {
    n: "japanese_ogre",
    k: [287, 288, 174, 289, 290, 278, 273, 269, 291],
    s: "👹",
    c: 0,
    d: "#943a2c"
}, {
    n: "japanese_goblin",
    k: [287, 174, 280, 289, 288, 278, 273],
    s: "👺",
    c: 0,
    d: "#be4136"
}, {
    n: "ghost",
    k: [290, 292, 278],
    s: "👻",
    c: 0,
    d: "#bab5b9"
}, {
    n: "alien",
    k: [293, 294, 211, 295, 296],
    s: "👽",
    c: 0,
    d: "#9dadae"
}, {
    n: "space_invader",
    k: [296, 297, 298, 299, 300],
    s: "👾",
    c: 0,
    d: "#302937"
}, {
    n: "robot_face",
    k: [19, 301, 302, 303],
    s: "🤖",
    c: 0,
    d: "#578e98"
}, {
    n: "wave",
    k: [304, 305, 306, 307, 308, 309, 310, 311, 312],
    s: "👋",
    c: 0,
    d: "#f2bb35"
}, {
    n: "raised_back_of_hand",
    k: [313, 314],
    s: "🤚",
    c: 0,
    d: "#f0b53e"
}, {
    n: "raised_hand_with_fingers_splayed",
    k: [315, 312],
    s: "🖐️",
    c: 0,
    d: "#f4c035"
}, {
    n: "hand",
    k: [313, 316, 317, 318, 319, 312, 320],
    s: "✋",
    c: 0,
    d: "#f2ba2d"
}, {
    n: "spock-hand",
    k: [321, 322, 313, 50, 323],
    s: "🖖",
    c: 0,
    d: "#f3b92e"
}, {
    n: "rightwards_hand",
    k: [312, 324],
    s: "🫱",
    c: 0,
    d: "#f6cc4d"
}, {
    n: "leftwards_hand",
    k: [312, 324],
    s: "🫲",
    c: 0,
    d: "#f5cb49"
}, {
    n: "palm_down_hand",
    k: [325],
    s: "🫳",
    c: 0,
    d: "#f3c744"
}, {
    n: "palm_up_hand",
    k: [326, 324, 327],
    s: "🫴",
    c: 0,
    d: "#e6b125"
}, {
    n: "ok_hand",
    k: [313, 328, 329, 330],
    s: "👌",
    c: 0,
    d: "#f4c13e"
}, {
    n: "pinched_fingers",
    k: [331, 332, 76],
    s: "🤌",
    c: 0,
    d: "#f5c24f"
}, {
    n: "pinching_hand",
    k: [332, 76, 331],
    s: "🤏",
    c: 0,
    d: "#f6c239"
}, {
    n: "v",
    k: [333, 313, 334, 335, 336],
    s: "✌️",
    c: 0,
    d: "#efb933"
}, {
    n: "crossed_fingers",
    k: [322, 53, 337, 75, 338, 339, 340],
    s: "🤞",
    c: 0,
    d: "#f3be36"
}, {
    n: "hand_with_index_finger_and_thumb_crossed",
    k: [48, 43, 80, 341],
    s: "🫰",
    c: 0,
    d: "#f8cf4d"
}, {
    n: "i_love_you_hand_sign",
    k: [342, 43, 343, 322, 344, 313],
    s: "🤟",
    c: 0,
    d: "#f9cc4a"
}, {
    n: "the_horns",
    k: [322, 313, 280, 33, 345, 346],
    s: "🤘",
    c: 0,
    d: "#f1bb33"
}, {
    n: "call_me_hand",
    k: [305, 306, 347],
    s: "🤙",
    c: 0,
    d: "#f7c43c"
}, {
    n: "point_left",
    k: [348, 349, 313, 322],
    s: "👈",
    c: 0,
    d: "#faca44"
}, {
    n: "point_right",
    k: [348, 313, 322, 349],
    s: "👉",
    c: 0,
    d: "#faca44"
}, {
    n: "point_up_2",
    k: [348, 350, 313, 322, 349],
    s: "👆",
    c: 0,
    d: "#f0b324"
}, {
    n: "middle_finger",
    k: [351, 322, 53, 352, 313, 353, 354],
    s: "🖕",
    c: 0,
    d: "#f0b223"
}, {
    n: "point_down",
    k: [348, 313, 322, 349],
    s: "👇",
    c: 0,
    d: "#faca44"
}, {
    n: "point_up",
    k: [348, 322, 313, 349],
    s: "☝️",
    c: 0,
    d: "#f2ba31"
}, {
    n: "index_pointing_at_the_viewer",
    k: [343, 355],
    s: "🫵",
    c: 0,
    d: "#ebb626"
}, {
    n: "+1",
    k: [356, 357, 358, 359, 339, 360, 361, 201, 322, 10],
    s: "👍",
    c: 0,
    d: "#fac946"
}, {
    n: "-1",
    k: [362, 363, 116, 364, 322],
    s: "👎",
    c: 0,
    d: "#f1b628"
}, {
    n: "fist",
    k: [313, 322, 365],
    s: "✊",
    c: 0,
    d: "#efb835"
}, {
    n: "facepunch",
    k: [366, 367, 258, 368, 369, 370, 322],
    s: "👊",
    c: 0,
    d: "#f1ba32"
}, {
    n: "left-facing_fist",
    k: [371, 372, 322, 373],
    s: "🤛",
    c: 0,
    d: "#f5c23d"
}, {
    n: "right-facing_fist",
    k: [374, 372, 322, 373],
    s: "🤜",
    c: 0,
    d: "#f4c13c"
}, {
    n: "clap",
    k: [375, 376, 377, 378, 379],
    s: "👏",
    c: 0,
    d: "#f3bb35"
}, {
    n: "raised_hands",
    k: [315, 306, 380, 381, 195],
    s: "🙌",
    c: 0,
    d: "#f0b832"
}, {
    n: "heart_hands",
    k: [43, 382, 383],
    s: "🫶",
    c: 0,
    d: "#db980a"
}, {
    n: "open_hands",
    k: [313, 384],
    s: "👐",
    c: 0,
    d: "#edb12c"
}, {
    n: "palms_up_together",
    k: [305, 306, 385, 386],
    s: "🤲",
    c: 0,
    d: "#f8c936"
}, {
    n: "handshake",
    k: [387, 388],
    s: "🤝",
    c: 0,
    d: "#edb626"
}, {
    n: "pray",
    k: [389, 390, 391, 392, 393, 317, 318, 319],
    s: "🙏",
    c: 0,
    d: "#e8ac2a"
}, {
    n: "writing_hand",
    k: [394, 371, 395, 396, 397, 398, 399],
    s: "✍️",
    c: 0,
    d: "#eeb635"
}, {
    n: "nail_care",
    k: [400, 401, 402, 94, 403],
    s: "💅",
    c: 0,
    d: "#ebb341"
}, {
    n: "selfie",
    k: [404, 405],
    s: "🤳",
    c: 0,
    d: "#a59a7e"
}, {
    n: "muscle",
    k: [406, 407, 408, 322, 202, 409],
    s: "💪",
    c: 0,
    d: "#f3b82c"
}, {
    n: "mechanical_arm",
    k: [410],
    s: "🦾",
    c: 0,
    d: "#5b5b5b"
}, {
    n: "mechanical_leg",
    k: [410],
    s: "🦿",
    c: 0,
    d: "#7e7879"
}, {
    n: "leg",
    k: [411, 412],
    s: "🦵",
    c: 0,
    d: "#f5c847"
}, {
    n: "foot",
    k: [411, 413],
    s: "🦶",
    c: 0,
    d: "#eaaf2e"
}, {
    n: "ear",
    k: [19, 414, 415, 416],
    s: "👂",
    c: 0,
    d: "#f4c039"
}, {
    n: "ear_with_hearing_aid",
    k: [410],
    s: "🦻",
    c: 0,
    d: "#edbb3a"
}, {
    n: "nose",
    k: [417, 418],
    s: "👃",
    c: 0,
    d: "#f6c42e"
}, {
    n: "brain",
    k: [419, 420],
    s: "🧠",
    c: 0,
    d: "#e592ac"
}, {
    n: "anatomical_heart",
    k: [421, 422],
    s: "🫀",
    c: 0,
    d: "#c64c59"
}, {
    n: "lungs",
    k: [423],
    s: "🫁",
    c: 0,
    d: "#e87974"
}, {
    n: "tooth",
    k: [139, 424],
    s: "🦷",
    c: 0,
    d: "#dfd6c7"
}, {
    n: "bone",
    k: [272],
    s: "🦴",
    c: 0,
    d: "#cbcdce"
}, {
    n: "eyes",
    k: [425, 426, 427, 428, 429],
    s: "👀",
    c: 0,
    d: "#dbdad8"
}, {
    n: "eye",
    k: [19, 425, 429, 426, 430],
    s: "👁️",
    c: 0,
    d: "#7b6657"
}, {
    n: "tongue",
    k: [81, 72],
    s: "👅",
    c: 0,
    d: "#de7687"
}, {
    n: "lips",
    k: [95, 56],
    s: "👄",
    c: 0,
    d: "#c64f69"
}, {
    n: "biting_lip",
    k: [431, 432, 433, 434],
    s: "🫦",
    c: 0,
    d: "#ca5570"
}, {
    n: "baby",
    k: [435, 436, 437, 438],
    s: "👶",
    c: 0,
    d: "#ecb728"
}, {
    n: "child",
    k: [439, 440, 441],
    s: "🧒",
    c: 0,
    d: "#e6b63a"
}, {
    n: "boy",
    k: [442, 443, 444, 445],
    s: "👦",
    c: 0,
    d: "#efbd39"
}, {
    n: "girl",
    k: [446, 447, 445],
    s: "👧",
    c: 0,
    d: "#efbf3a"
}, {
    n: "adult",
    k: [448, 439, 440],
    s: "🧑",
    c: 0,
    d: "#e7b63b"
}, {
    n: "person_with_blond_hair",
    k: [53, 449],
    s: "👱",
    c: 0,
    d: "#e0b949"
}, {
    n: "man",
    k: [450, 451, 452, 444, 453, 454, 200],
    s: "👨",
    c: 0,
    d: "#e9b733"
}, {
    n: "bearded_person",
    k: [455, 442, 456],
    s: "🧔",
    c: 0,
    d: "#deac3a"
}, {
    n: "man_with_beard",
    k: [442, 53, 457, 458],
    s: "🧔‍♂️",
    c: 0,
    d: "#e1ae31"
}, {
    n: "woman_with_beard",
    k: [447, 53, 457, 458],
    s: "🧔‍♀️",
    c: 0,
    d: "#deab32"
}, {
    n: "red_haired_man",
    k: [459, 442, 449],
    s: "👨‍🦰",
    c: 0,
    d: "#e7a625"
}, {
    n: "curly_haired_man",
    k: [459, 442, 449],
    s: "👨‍🦱",
    c: 0,
    d: "#e5af26"
}, {
    n: "white_haired_man",
    k: [459, 442, 460, 461],
    s: "👨‍🦳",
    c: 0,
    d: "#eeca66"
}, {
    n: "bald_man",
    k: [442, 462],
    s: "👨‍🦲",
    c: 0,
    d: "#f2c236"
}, {
    n: "woman",
    k: [446, 463, 464],
    s: "👩",
    c: 0,
    d: "#e9b83a"
}, {
    n: "red_haired_woman",
    k: [459, 447, 449],
    s: "👩‍🦰",
    c: 0,
    d: "#e39923"
}, {
    n: "red_haired_person",
    k: [459, 448, 449],
    s: "🧑‍🦰",
    c: 0,
    d: "#db8d1d"
}, {
    n: "curly_haired_woman",
    k: [459, 447, 449],
    s: "👩‍🦱",
    c: 0,
    d: "#e3ad28"
}, {
    n: "curly_haired_person",
    k: [459, 448, 449],
    s: "🧑‍🦱",
    c: 0,
    d: "#e6af25"
}, {
    n: "white_haired_woman",
    k: [459, 447, 460, 461],
    s: "👩‍🦳",
    c: 0,
    d: "#e7d8ab"
}, {
    n: "white_haired_person",
    k: [459, 448, 461, 460],
    s: "🧑‍🦳",
    c: 0,
    d: "#e5c266"
}, {
    n: "bald_woman",
    k: [447, 462],
    s: "👩‍🦲",
    c: 0,
    d: "#f2c33c"
}, {
    n: "bald_person",
    k: [448, 462],
    s: "🧑‍🦲",
    c: 0,
    d: "#eebf3b"
}, {
    n: "blond-haired-woman",
    k: [465, 447, 446, 437, 466, 448],
    s: "👱‍♀️",
    c: 0,
    d: "#d6b453"
}, {
    n: "blond-haired-man",
    k: [467, 442, 443, 436, 466, 444, 448],
    s: "👱‍♂️",
    c: 0,
    d: "#e2b73e"
}, {
    n: "older_adult",
    k: [448, 468, 461, 469, 439, 440],
    s: "🧓",
    c: 0,
    d: "#e5b536"
}, {
    n: "older_man",
    k: [470, 468, 443, 471, 461, 469],
    s: "👴",
    c: 0,
    d: "#ecb82d"
}, {
    n: "older_woman",
    k: [470, 468, 446, 472, 464, 461, 469],
    s: "👵",
    c: 0,
    d: "#e1ac2a"
}, {
    n: "person_frowning",
    k: [473],
    s: "🙍",
    c: 0,
    d: "#dbb75f"
}, {
    n: "man-frowning",
    k: [443, 436, 60, 146, 474, 475],
    s: "🙍‍♂️",
    c: 0,
    d: "#ebba38"
}, {
    n: "woman-frowning",
    k: [446, 437, 60, 146, 474, 475],
    s: "🙍‍♀️",
    c: 0,
    d: "#e2ae33"
}, {
    n: "person_with_pouting_face",
    k: [53, 19, 147],
    s: "🙎",
    c: 0,
    d: "#dab75d"
}, {
    n: "man-pouting",
    k: [443, 436],
    s: "🙎‍♂️",
    c: 0,
    d: "#e7b635"
}, {
    n: "woman-pouting",
    k: [446, 437],
    s: "🙎‍♀️",
    c: 0,
    d: "#d6a026"
}, {
    n: "no_good",
    k: [339, 476],
    s: "🙅",
    c: 0,
    d: "#c8ae6e"
}, {
    n: "man-gesturing-no",
    k: [477, 443, 436, 478],
    s: "🙅‍♂️",
    c: 0,
    d: "#c8b461"
}, {
    n: "woman-gesturing-no",
    k: [477, 446, 437, 478],
    s: "🙅‍♀️",
    c: 0,
    d: "#6b2867"
}, {
    n: "ok_woman",
    k: [447, 360],
    s: "🙆",
    c: 0,
    d: "#ac9660"
}, {
    n: "man-gesturing-ok",
    k: [479, 471, 436, 443, 176, 468],
    s: "🙆‍♂️",
    c: 0,
    d: "#34659d"
}, {
    n: "woman-gesturing-ok",
    k: [479, 472, 437, 446, 480, 468],
    s: "🙆‍♀️",
    c: 0,
    d: "#732b6a"
}, {
    n: "information_desk_person",
    k: [481, 482],
    s: "💁",
    c: 0,
    d: "#ccae62"
}, {
    n: "man-tipping-hand",
    k: [483, 443, 436, 468, 481],
    s: "💁‍♂️",
    c: 0,
    d: "#e6b736"
}, {
    n: "woman-tipping-hand",
    k: [483, 446, 437, 468, 481],
    s: "💁‍♀️",
    c: 0,
    d: "#dca83f"
}, {
    n: "raising_hand",
    k: [484],
    s: "🙋",
    c: 0,
    d: "#caab5b"
}, {
    n: "man-raising-hand",
    k: [485, 443, 436],
    s: "🙋‍♂️",
    c: 0,
    d: "#e7b838"
}, {
    n: "woman-raising-hand",
    k: [485, 446, 437],
    s: "🙋‍♀️",
    c: 0,
    d: "#dda92d"
}, {
    n: "deaf_person",
    k: [410],
    s: "🧏",
    c: 0,
    d: "#d1a739"
}, {
    n: "deaf_man",
    k: [410],
    s: "🧏‍♂️",
    c: 0,
    d: "#d7a72a"
}, {
    n: "deaf_woman",
    k: [410],
    s: "🧏‍♀️",
    c: 0,
    d: "#d29e27"
}, {
    n: "bow",
    k: [486, 487],
    s: "🙇",
    c: 0,
    d: "#c6a657"
}, {
    n: "man-bowing",
    k: [443, 436],
    s: "🙇‍♂️",
    c: 0,
    d: "#dcb450"
}, {
    n: "woman-bowing",
    k: [446, 437],
    s: "🙇‍♀️",
    c: 0,
    d: "#e3b546"
}, {
    n: "face_palm",
    k: [448, 488, 218],
    s: "🤦",
    c: 0,
    d: "#ebb82a"
}, {
    n: "man-facepalming",
    k: [443, 436, 108],
    s: "🤦‍♂️",
    c: 0,
    d: "#e4b231"
}, {
    n: "woman-facepalming",
    k: [446, 437, 108],
    s: "🤦‍♀️",
    c: 0,
    d: "#e2af34"
}, {
    n: "shrug",
    k: [448, 489, 490],
    s: "🤷",
    c: 0,
    d: "#bfa258"
}, {
    n: "man-shrugging",
    k: [443, 436, 188, 113, 491],
    s: "🤷‍♂️",
    c: 0,
    d: "#355f8f"
}, {
    n: "woman-shrugging",
    k: [446, 437, 188, 113, 491],
    s: "🤷‍♀️",
    c: 0,
    d: "#722e6a"
}, {
    n: "health_worker",
    k: [492],
    s: "🧑‍⚕️",
    c: 0,
    d: "#dfaf37"
}, {
    n: "male-doctor",
    k: [443, 493, 494, 495, 496, 468],
    s: "👨‍⚕️",
    c: 0,
    d: "#e4b22f"
}, {
    n: "female-doctor",
    k: [446, 493, 494, 495, 496, 468],
    s: "👩‍⚕️",
    c: 0,
    d: "#ddaa30"
}, {
    n: "student",
    k: [497],
    s: "🧑‍🎓",
    c: 0,
    d: "#4b443a"
}, {
    n: "male-student",
    k: [443, 498, 468],
    s: "👨‍🎓",
    c: 0,
    d: "#514a3e"
}, {
    n: "female-student",
    k: [446, 498, 468],
    s: "👩‍🎓",
    c: 0,
    d: "#bf902a"
}, {
    n: "teacher",
    k: [499],
    s: "🧑‍🏫",
    c: 0,
    d: "#c7a054"
}, {
    n: "male-teacher",
    k: [443, 500, 499, 468],
    s: "👨‍🏫",
    c: 0,
    d: "#c79f4a"
}, {
    n: "female-teacher",
    k: [446, 500, 499, 468],
    s: "👩‍🏫",
    c: 0,
    d: "#bf9c55"
}, {
    n: "judge",
    k: [501],
    s: "🧑‍⚖️",
    c: 0,
    d: "#dda830"
}, {
    n: "male-judge",
    k: [443, 502, 503, 468],
    s: "👨‍⚖️",
    c: 0,
    d: "#e2b03a"
}, {
    n: "female-judge",
    k: [446, 502, 503, 468],
    s: "👩‍⚖️",
    c: 0,
    d: "#cf9a2a"
}, {
    n: "farmer",
    k: [504],
    s: "🧑‍🌾",
    c: 0,
    d: "#a37a22"
}, {
    n: "male-farmer",
    k: [443, 505, 506, 468],
    s: "👨‍🌾",
    c: 0,
    d: "#916d28"
}, {
    n: "female-farmer",
    k: [446, 505, 506, 468],
    s: "👩‍🌾",
    c: 0,
    d: "#a77a20"
}, {
    n: "cook",
    k: [507, 508, 509],
    s: "🧑‍🍳",
    c: 0,
    d: "#d0c6b8"
}, {
    n: "male-cook",
    k: [443, 510, 468],
    s: "👨‍🍳",
    c: 0,
    d: "#cfc6b8"
}, {
    n: "female-cook",
    k: [446, 510, 468],
    s: "👩‍🍳",
    c: 0,
    d: "#d1c7b7"
}, {
    n: "mechanic",
    k: [511, 512],
    s: "🧑‍🔧",
    c: 0,
    d: "#d8aa37"
}, {
    n: "male-mechanic",
    k: [443, 513, 468, 514],
    s: "👨‍🔧",
    c: 0,
    d: "#dbb448"
}, {
    n: "female-mechanic",
    k: [446, 513, 468, 514],
    s: "👩‍🔧",
    c: 0,
    d: "#d2a232"
}, {
    n: "factory_worker",
    k: [515],
    s: "🧑‍🏭",
    c: 0,
    d: "#4d4743"
}, {
    n: "male-factory-worker",
    k: [443, 516, 517, 518, 468],
    s: "👨‍🏭",
    c: 0,
    d: "#4c4640"
}, {
    n: "female-factory-worker",
    k: [446, 516, 517, 518, 468],
    s: "👩‍🏭",
    c: 0,
    d: "#544533"
}, {
    n: "office_worker",
    k: [519],
    s: "🧑‍💼",
    c: 0,
    d: "#d2a941"
}, {
    n: "male-office-worker",
    k: [443, 520, 519, 521, 468],
    s: "👨‍💼",
    c: 0,
    d: "#d3ba66"
}, {
    n: "female-office-worker",
    k: [446, 520, 519, 521, 468],
    s: "👩‍💼",
    c: 0,
    d: "#d7a42a"
}, {
    n: "scientist",
    k: [522],
    s: "🧑‍🔬",
    c: 0,
    d: "#d8b145"
}, {
    n: "male-scientist",
    k: [443, 523, 524, 525, 526, 468],
    s: "👨‍🔬",
    c: 0,
    d: "#d4b541"
}, {
    n: "female-scientist",
    k: [446, 523, 524, 525, 526, 468],
    s: "👩‍🔬",
    c: 0,
    d: "#d6b748"
}, {
    n: "technologist",
    k: [301],
    s: "🧑‍💻",
    c: 0,
    d: "#a59f8b"
}, {
    n: "male-technologist",
    k: [443, 527, 528, 525, 529, 530, 468, 531, 301],
    s: "👨‍💻",
    c: 0,
    d: "#a39d8a"
}, {
    n: "female-technologist",
    k: [446, 527, 528, 525, 529, 530, 468, 531, 301],
    s: "👩‍💻",
    c: 0,
    d: "#a6a08e"
}, {
    n: "singer",
    k: [532, 533, 534],
    s: "🧑‍🎤",
    c: 0,
    d: "#63b14c"
}, {
    n: "male-singer",
    k: [443, 535, 536, 468],
    s: "👨‍🎤",
    c: 0,
    d: "#5e525c"
}, {
    n: "female-singer",
    k: [446, 535, 536, 468],
    s: "👩‍🎤",
    c: 0,
    d: "#c271ae"
}, {
    n: "artist",
    k: [537, 538, 539],
    s: "🧑‍🎨",
    c: 0,
    d: "#ac8b44"
}, {
    n: "male-artist",
    k: [443, 540, 468],
    s: "👨‍🎨",
    c: 0,
    d: "#ac8a45"
}, {
    n: "female-artist",
    k: [446, 540, 468],
    s: "👩‍🎨",
    c: 0,
    d: "#ab8a45"
}, {
    n: "pilot",
    k: [541, 542, 543],
    s: "🧑‍✈️",
    c: 0,
    d: "#4b4431"
}, {
    n: "male-pilot",
    k: [443, 544, 542, 468],
    s: "👨‍✈️",
    c: 0,
    d: "#484130"
}, {
    n: "female-pilot",
    k: [446, 544, 542, 468],
    s: "👩‍✈️",
    c: 0,
    d: "#50462e"
}, {
    n: "astronaut",
    k: [545],
    s: "🧑‍🚀",
    c: 0,
    d: "#b5a57d"
}, {
    n: "male-astronaut",
    k: [443, 296, 546, 468],
    s: "👨‍🚀",
    c: 0,
    d: "#ad9764"
}, {
    n: "female-astronaut",
    k: [446, 296, 546, 468],
    s: "👩‍🚀",
    c: 0,
    d: "#a99669"
}, {
    n: "firefighter",
    k: [547],
    s: "🧑‍🚒",
    c: 0,
    d: "#a25f43"
}, {
    n: "male-firefighter",
    k: [443, 548, 468],
    s: "👨‍🚒",
    c: 0,
    d: "#a66143"
}, {
    n: "female-firefighter",
    k: [446, 548, 468],
    s: "👩‍🚒",
    c: 0,
    d: "#a46143"
}, {
    n: "cop",
    k: [549],
    s: "👮",
    c: 0,
    d: "#2e5071"
}, {
    n: "male-police-officer",
    k: [443, 550, 501, 551, 552, 553, 554],
    s: "👮‍♂️",
    c: 0,
    d: "#32526f"
}, {
    n: "female-police-officer",
    k: [446, 550, 501, 551, 552, 553, 554],
    s: "👮‍♀️",
    c: 0,
    d: "#2d5072"
}, {
    n: "sleuth_or_spy",
    k: [555, 556, 557, 468],
    s: "🕵️",
    c: 0,
    d: "#695f4a"
}, {
    n: "male-detective",
    k: [443, 558],
    s: "🕵️‍♂️",
    c: 0,
    d: "#7e6a42"
}, {
    n: "female-detective",
    k: [446, 468, 557],
    s: "🕵️‍♀️",
    c: 0,
    d: "#786742"
}, {
    n: "guardsman",
    k: [559, 560],
    s: "💂",
    c: 0,
    d: "#2d2821"
}, {
    n: "male-guard",
    k: [443, 561, 562, 563, 444, 564],
    s: "💂‍♂️",
    c: 0,
    d: "#2d2820"
}, {
    n: "female-guard",
    k: [446, 561, 562, 563, 564],
    s: "💂‍♀️",
    c: 0,
    d: "#2d2821"
}, {
    n: "ninja",
    k: [565, 566, 287],
    s: "🥷",
    c: 0,
    d: "#313333"
}, {
    n: "construction_worker",
    k: [515, 567],
    s: "👷",
    c: 0,
    d: "#e0b23b"
}, {
    n: "male-construction-worker",
    k: [443, 568, 468, 569, 444, 567, 515],
    s: "👷‍♂️",
    c: 0,
    d: "#e5b73c"
}, {
    n: "female-construction-worker",
    k: [446, 568, 468, 569, 567, 515],
    s: "👷‍♀️",
    c: 0,
    d: "#dcaf3b"
}, {
    n: "person_with_crown",
    k: [570, 571],
    s: "🫅",
    c: 0,
    d: "#dcaa2a"
}, {
    n: "prince",
    k: [436, 442, 443, 572, 564, 573],
    s: "🤴",
    c: 0,
    d: "#d9b031"
}, {
    n: "princess",
    k: [437, 447, 446, 574, 572, 564, 575],
    s: "👸",
    c: 0,
    d: "#ddaa2c"
}, {
    n: "man_with_turban",
    k: [448, 576, 577],
    s: "👳",
    c: 0,
    d: "#d0ac4d"
}, {
    n: "man-wearing-turban",
    k: [578, 443, 579, 580, 581],
    s: "👳‍♂️",
    c: 0,
    d: "#cd9f2d"
}, {
    n: "woman-wearing-turban",
    k: [578, 446, 579, 580, 581],
    s: "👳‍♀️",
    c: 0,
    d: "#c2beb0"
}, {
    n: "man_with_gua_pi_mao",
    k: [582, 443, 436, 583],
    s: "👲",
    c: 0,
    d: "#daa821"
}, {
    n: "person_with_headscarf",
    k: [448, 446, 584, 585, 586],
    s: "🧕",
    c: 0,
    d: "#4c3673"
}, {
    n: "person_in_tuxedo",
    k: [448, 587, 588, 589, 590],
    s: "🤵",
    c: 0,
    d: "#dfac2e"
}, {
    n: "man_in_tuxedo",
    k: [591, 403],
    s: "🤵‍♂️",
    c: 0,
    d: "#e4b843"
}, {
    n: "woman_in_tuxedo",
    k: [591, 403],
    s: "🤵‍♀️",
    c: 0,
    d: "#ddaf40"
}, {
    n: "bride_with_veil",
    k: [587, 588, 589, 447],
    s: "👰",
    c: 0,
    d: "#d4ac47"
}, {
    n: "man_with_veil",
    k: [589, 588],
    s: "👰‍♂️",
    c: 0,
    d: "#d0ab48"
}, {
    n: "woman_with_veil",
    k: [589, 588],
    s: "👰‍♀️",
    c: 0,
    d: "#ddbf74"
}, {
    n: "pregnant_woman",
    k: [592],
    s: "🤰",
    c: 0,
    d: "#934d95"
}, {
    n: "pregnant_man",
    k: [592, 593],
    s: "🫃",
    c: 0,
    d: "#4d7cbb"
}, {
    n: "pregnant_person",
    k: [592, 593],
    s: "🫄",
    c: 0,
    d: "#b1a993"
}, {
    n: "breast-feeding",
    k: [594, 595, 596, 592],
    s: "🤱",
    c: 0,
    d: "#926d43"
}, {
    n: "woman_feeding_baby",
    k: [597, 507],
    s: "👩‍🍼",
    c: 0,
    d: "#906d45"
}, {
    n: "man_feeding_baby",
    k: [597, 507],
    s: "👨‍🍼",
    c: 0,
    d: "#937249"
}, {
    n: "person_feeding_baby",
    k: [597, 507],
    s: "🧑‍🍼",
    c: 0,
    d: "#b39b45"
}, {
    n: "angel",
    k: [41, 598, 599],
    s: "👼",
    c: 0,
    d: "#ebba30"
}, {
    n: "santa",
    k: [600, 442, 443, 601, 451, 602],
    s: "🎅",
    c: 0,
    d: "#d39f2e"
}, {
    n: "mrs_claus",
    k: [603, 604, 602, 447, 446, 601],
    s: "🤶",
    c: 0,
    d: "#d19e38"
}, {
    n: "mx_claus",
    k: [602],
    s: "🧑‍🎄",
    c: 0,
    d: "#d5a638"
}, {
    n: "superhero",
    k: [605],
    s: "🦸",
    c: 0,
    d: "#a6573c"
}, {
    n: "male_superhero",
    k: [443, 339, 606, 607],
    s: "🦸‍♂️",
    c: 0,
    d: "#ab5c38"
}, {
    n: "female_superhero",
    k: [446, 339, 608, 607],
    s: "🦸‍♀️",
    c: 0,
    d: "#d99e30"
}, {
    n: "supervillain",
    k: [605],
    s: "🦹",
    c: 0,
    d: "#d49f2f"
}, {
    n: "male_supervillain",
    k: [443, 280, 609, 610, 606, 607],
    s: "🦹‍♂️",
    c: 0,
    d: "#3e2730"
}, {
    n: "female_supervillain",
    k: [446, 280, 609, 610, 608, 607],
    s: "🦹‍♀️",
    c: 0,
    d: "#cf9a2d"
}, {
    n: "mage",
    k: [611],
    s: "🧙",
    c: 0,
    d: "#5d4f36"
}, {
    n: "male_mage",
    k: [443, 612],
    s: "🧙‍♂️",
    c: 0,
    d: "#5b5343"
}, {
    n: "female_mage",
    k: [446, 613],
    s: "🧙‍♀️",
    c: 0,
    d: "#605234"
}, {
    n: "fairy",
    k: [598, 614],
    s: "🧚",
    c: 0,
    d: "#a0e3c9"
}, {
    n: "male_fairy",
    k: [443],
    s: "🧚‍♂️",
    c: 0,
    d: "#9fe1c6"
}, {
    n: "female_fairy",
    k: [446],
    s: "🧚‍♀️",
    c: 0,
    d: "#a2dec5"
}, {
    n: "vampire",
    k: [615, 616],
    s: "🧛",
    c: 0,
    d: "#3e2a22"
}, {
    n: "male_vampire",
    k: [443, 617],
    s: "🧛‍♂️",
    c: 0,
    d: "#d4ab3c"
}, {
    n: "female_vampire",
    k: [446],
    s: "🧛‍♀️",
    c: 0,
    d: "#3c2822"
}, {
    n: "merperson",
    k: [618],
    s: "🧜",
    c: 0,
    d: "#76626e"
}, {
    n: "merman",
    k: [442, 443, 619],
    s: "🧜‍♂️",
    c: 0,
    d: "#ab8b48"
}, {
    n: "mermaid",
    k: [447, 446, 620, 621],
    s: "🧜‍♀️",
    c: 0,
    d: "#8a6465"
}, {
    n: "elf",
    k: [614],
    s: "🧝",
    c: 0,
    d: "#ddbe61"
}, {
    n: "male_elf",
    k: [443],
    s: "🧝‍♂️",
    c: 0,
    d: "#d6bc66"
}, {
    n: "female_elf",
    k: [446],
    s: "🧝‍♀️",
    c: 0,
    d: "#decb7b"
}, {
    n: "genie",
    k: [614, 622],
    s: "🧞",
    c: 0,
    d: "#564d89"
}, {
    n: "male_genie",
    k: [443],
    s: "🧞‍♂️",
    c: 0,
    d: "#2b8baa"
}, {
    n: "female_genie",
    k: [446],
    s: "🧞‍♀️",
    c: 0,
    d: "#9d3475"
}, {
    n: "zombie",
    k: [271],
    s: "🧟",
    c: 0,
    d: "#52594d"
}, {
    n: "male_zombie",
    k: [443, 617, 623, 624, 271],
    s: "🧟‍♂️",
    c: 0,
    d: "#575e53"
}, {
    n: "female_zombie",
    k: [446, 623, 624, 271],
    s: "🧟‍♀️",
    c: 0,
    d: "#474d44"
}, {
    n: "troll",
    k: [625, 288],
    s: "🧌",
    c: 0,
    d: "#544f3d"
}, {
    n: "massage",
    k: [448, 626, 627],
    s: "💆",
    c: 0,
    d: "#dfaa2a"
}, {
    n: "man-getting-massage",
    k: [628, 443, 436, 159],
    s: "💆‍♂️",
    c: 0,
    d: "#e1af2a"
}, {
    n: "woman-getting-massage",
    k: [628, 446, 437, 159],
    s: "💆‍♀️",
    c: 0,
    d: "#e1ac2b"
}, {
    n: "haircut",
    k: [448, 626, 449],
    s: "💇",
    c: 0,
    d: "#d8ab3a"
}, {
    n: "man-getting-haircut",
    k: [629, 443, 436],
    s: "💇‍♂️",
    c: 0,
    d: "#dcb144"
}, {
    n: "woman-getting-haircut",
    k: [629, 446, 437],
    s: "💇‍♀️",
    c: 0,
    d: "#dcb040"
}, {
    n: "walking",
    k: [624, 448, 630],
    s: "🚶",
    c: 0,
    d: "#b6ae9d"
}, {
    n: "man-walking",
    k: [468, 631, 632],
    s: "🚶‍♂️",
    c: 0,
    d: "#a15a4f"
}, {
    n: "woman-walking",
    k: [468, 631, 632, 446],
    s: "🚶‍♀️",
    c: 0,
    d: "#c5974b"
}, {
    n: "standing_person",
    k: [633],
    s: "🧍",
    c: 0,
    d: "#bb9d5b"
}, {
    n: "man_standing",
    k: [633],
    s: "🧍‍♂️",
    c: 0,
    d: "#874631"
}, {
    n: "woman_standing",
    k: [633],
    s: "🧍‍♀️",
    c: 0,
    d: "#dca82c"
}, {
    n: "kneeling_person",
    k: [389, 634],
    s: "🧎",
    c: 0,
    d: "#b29857"
}, {
    n: "man_kneeling",
    k: [389, 634],
    s: "🧎‍♂️",
    c: 0,
    d: "#c49d46"
}, {
    n: "woman_kneeling",
    k: [634, 389],
    s: "🧎‍♀️",
    c: 0,
    d: "#c39d4c"
}, {
    n: "person_with_probing_cane",
    k: [635, 636],
    s: "🧑‍🦯",
    c: 0,
    d: "#b3965c"
}, {
    n: "man_with_probing_cane",
    k: [635, 636],
    s: "👨‍🦯",
    c: 0,
    d: "#9d6253"
}, {
    n: "woman_with_probing_cane",
    k: [635, 636],
    s: "👩‍🦯",
    c: 0,
    d: "#bb8d59"
}, {
    n: "person_in_motorized_wheelchair",
    k: [637, 410],
    s: "🧑‍🦼",
    c: 0,
    d: "#574d52"
}, {
    n: "man_in_motorized_wheelchair",
    k: [637, 410],
    s: "👨‍🦼",
    c: 0,
    d: "#53454a"
}, {
    n: "woman_in_motorized_wheelchair",
    k: [637, 410],
    s: "👩‍🦼",
    c: 0,
    d: "#54454e"
}, {
    n: "person_in_manual_wheelchair",
    k: [637, 410],
    s: "🧑‍🦽",
    c: 0,
    d: "#515258"
}, {
    n: "man_in_manual_wheelchair",
    k: [637, 410],
    s: "👨‍🦽",
    c: 0,
    d: "#514a50"
}, {
    n: "woman_in_manual_wheelchair",
    k: [637, 410],
    s: "👩‍🦽",
    c: 0,
    d: "#544a5a"
}, {
    n: "runner",
    k: [638, 448, 630],
    s: "🏃",
    c: 0,
    d: "#d4b570"
}, {
    n: "man-running",
    k: [624, 250, 639],
    s: "🏃‍♂️",
    c: 0,
    d: "#e1ab3a"
}, {
    n: "woman-running",
    k: [624, 250, 639, 446],
    s: "🏃‍♀️",
    c: 0,
    d: "#dea72c"
}, {
    n: "dancer",
    k: [447, 640, 446, 437, 641],
    s: "💃",
    c: 0,
    d: "#a5361e"
}, {
    n: "man_dancing",
    k: [443, 436, 641, 642],
    s: "🕺",
    c: 0,
    d: "#5e2a68"
}, {
    n: "man_in_business_suit_levitating",
    k: [442, 519, 643, 644, 645],
    s: "🕴️",
    c: 0,
    d: "#2e2c2a"
}, {
    n: "dancers",
    k: [646, 647, 648, 649],
    s: "👯",
    c: 0,
    d: "#cc9921"
}, {
    n: "men-with-bunny-ears-partying",
    k: [650, 442, 443, 651],
    s: "👯‍♂️",
    c: 0,
    d: "#c8941f"
}, {
    n: "women-with-bunny-ears-partying",
    k: [650, 447, 446, 463],
    s: "👯‍♀️",
    c: 0,
    d: "#cd9921"
}, {
    n: "person_in_steamy_room",
    k: [627, 652],
    s: "🧖",
    c: 0,
    d: "#e0e5d7"
}, {
    n: "man_in_steamy_room",
    k: [443, 652, 653, 654],
    s: "🧖‍♂️",
    c: 0,
    d: "#e0e7da"
}, {
    n: "woman_in_steamy_room",
    k: [446, 652, 653, 654],
    s: "🧖‍♀️",
    c: 0,
    d: "#e0e9e1"
}, {
    n: "person_climbing",
    k: [655],
    s: "🧗",
    c: 0,
    d: "#967e5a"
}, {
    n: "man_climbing",
    k: [656, 657, 443, 345],
    s: "🧗‍♂️",
    c: 0,
    d: "#9a7c53"
}, {
    n: "woman_climbing",
    k: [656, 657, 446, 345],
    s: "🧗‍♀️",
    c: 0,
    d: "#987a59"
}, {
    n: "fencer",
    k: [448, 658, 656, 659],
    s: "🤺",
    c: 0,
    d: "#aea7a0"
}, {
    n: "horse_racing",
    k: [660, 661, 662, 663, 664],
    s: "🏇",
    c: 0,
    d: "#503b2d"
}, {
    n: "skier",
    k: [656, 665, 666],
    s: "⛷️",
    c: 0,
    d: "#aa744b"
}, {
    n: "snowboarder",
    k: [656, 665],
    s: "🏂",
    c: 0,
    d: "#bb6d41"
}, {
    n: "golfer",
    k: [667, 656, 519],
    s: "🏌️",
    c: 0,
    d: "#978963"
}, {
    n: "man-golfing",
    k: [655],
    s: "🏌️‍♂️",
    c: 0,
    d: "#626e75"
}, {
    n: "woman-golfing",
    k: [656, 519, 446],
    s: "🏌️‍♀️",
    c: 0,
    d: "#c09b52"
}, {
    n: "surfer",
    k: [448, 668, 655, 618],
    s: "🏄",
    c: 0,
    d: "#df9935"
}, {
    n: "man-surfing",
    k: [656, 669, 618, 202, 203],
    s: "🏄‍♂️",
    c: 0,
    d: "#257369"
}, {
    n: "woman-surfing",
    k: [656, 669, 618, 202, 203, 446],
    s: "🏄‍♀️",
    c: 0,
    d: "#bdac2d"
}, {
    n: "rowboat",
    k: [448, 670, 671, 655, 630],
    s: "🚣",
    c: 0,
    d: "#cc5437"
}, {
    n: "man-rowing-boat",
    k: [672, 656, 657, 673, 674],
    s: "🚣‍♂️",
    c: 0,
    d: "#c8533d"
}, {
    n: "woman-rowing-boat",
    k: [672, 656, 657, 673, 674, 446],
    s: "🚣‍♀️",
    c: 0,
    d: "#ca5c40"
}, {
    n: "swimmer",
    k: [448, 675, 655, 676],
    s: "🏊",
    c: 0,
    d: "#bfced1"
}, {
    n: "man-swimming",
    k: [656, 250, 468, 677, 673, 202],
    s: "🏊‍♂️",
    c: 0,
    d: "#c7dee0"
}, {
    n: "woman-swimming",
    k: [656, 250, 468, 677, 673, 202, 446],
    s: "🏊‍♀️",
    c: 0,
    d: "#c7c7d8"
}, {
    n: "person_with_ball",
    k: [53, 656, 468],
    s: "⛹️",
    c: 0,
    d: "#cbad6b"
}, {
    n: "man-bouncing-ball",
    k: [678, 655],
    s: "⛹️‍♂️",
    c: 0,
    d: "#d3b257"
}, {
    n: "woman-bouncing-ball",
    k: [678, 656, 468, 446],
    s: "⛹️‍♀️",
    c: 0,
    d: "#cc8238"
}, {
    n: "weight_lifter",
    k: [679, 680, 656, 681, 250],
    s: "🏋️",
    c: 0,
    d: "#af975d"
}, {
    n: "man-lifting-weights",
    k: [682, 655],
    s: "🏋️‍♂️",
    c: 0,
    d: "#564040"
}, {
    n: "woman-lifting-weights",
    k: [682, 656, 681, 250, 446],
    s: "🏋️‍♀️",
    c: 0,
    d: "#56414a"
}, {
    n: "bicyclist",
    k: [448, 683, 655, 630],
    s: "🚴",
    c: 0,
    d: "#494740"
}, {
    n: "man-biking",
    k: [656, 684, 250, 685],
    s: "🚴‍♂️",
    c: 0,
    d: "#3d4254"
}, {
    n: "woman-biking",
    k: [656, 684, 250, 685, 446],
    s: "🚴‍♀️",
    c: 0,
    d: "#4d3944"
}, {
    n: "mountain_bicyclist",
    k: [448, 683, 655, 630],
    s: "🚵",
    c: 0,
    d: "#978d78"
}, {
    n: "man-mountain-biking",
    k: [686, 687, 656, 468, 639, 684],
    s: "🚵‍♂️",
    c: 0,
    d: "#979381"
}, {
    n: "woman-mountain-biking",
    k: [686, 687, 656, 468, 639, 684, 446],
    s: "🚵‍♀️",
    c: 0,
    d: "#906b5b"
}, {
    n: "person_doing_cartwheel",
    k: [688, 689, 655, 690],
    s: "🤸",
    c: 0,
    d: "#d9ad45"
}, {
    n: "man-cartwheeling",
    k: [691],
    s: "🤸‍♂️",
    c: 0,
    d: "#d4bd54"
}, {
    n: "woman-cartwheeling",
    k: [691],
    s: "🤸‍♀️",
    c: 0,
    d: "#bcae47"
}, {
    n: "wrestlers",
    k: [647, 692, 655],
    s: "🤼",
    c: 0,
    d: "#c79438"
}, {
    n: "man-wrestling",
    k: [442, 656, 693],
    s: "🤼‍♂️",
    c: 0,
    d: "#cb9c3c"
}, {
    n: "woman-wrestling",
    k: [447, 656, 693],
    s: "🤼‍♀️",
    c: 0,
    d: "#ce9b3a"
}, {
    n: "water_polo",
    k: [448, 694, 655],
    s: "🤽",
    c: 0,
    d: "#c59e4a"
}, {
    n: "man-playing-water-polo",
    k: [695, 656, 676],
    s: "🤽‍♂️",
    c: 0,
    d: "#dbae49"
}, {
    n: "woman-playing-water-polo",
    k: [695, 656, 676],
    s: "🤽‍♀️",
    c: 0,
    d: "#d39734"
}, {
    n: "handball",
    k: [448, 694, 655],
    s: "🤾",
    c: 0,
    d: "#bcb7a6"
}, {
    n: "man-playing-handball",
    k: [696, 656],
    s: "🤾‍♂️",
    c: 0,
    d: "#caa66a"
}, {
    n: "woman-playing-handball",
    k: [696, 656],
    s: "🤾‍♀️",
    c: 0,
    d: "#b89445"
}, {
    n: "juggling",
    k: [448, 697, 698],
    s: "🤹",
    c: 0,
    d: "#ccaa58"
}, {
    n: "man-juggling",
    k: [699, 698, 700, 701],
    s: "🤹‍♂️",
    c: 0,
    d: "#ceb156"
}, {
    n: "woman-juggling",
    k: [699, 698, 700, 701],
    s: "🤹‍♀️",
    c: 0,
    d: "#d4a854"
}, {
    n: "person_in_lotus_position",
    k: [702],
    s: "🧘",
    c: 0,
    d: "#e3ac2b"
}, {
    n: "man_in_lotus_position",
    k: [443, 703, 704, 705, 706, 707],
    s: "🧘‍♂️",
    c: 0,
    d: "#e3a426"
}, {
    n: "woman_in_lotus_position",
    k: [446, 703, 704, 705, 706, 707],
    s: "🧘‍♀️",
    c: 0,
    d: "#dea727"
}, {
    n: "bath",
    k: [448, 708, 709, 122, 710],
    s: "🛀",
    c: 0,
    d: "#c7cac4"
}, {
    n: "sleeping_accommodation",
    k: [711, 712, 148],
    s: "🛌",
    c: 0,
    d: "#9b969c"
}, {
    n: "people_holding_hands",
    k: [713],
    s: "🧑‍🤝‍🧑",
    c: 0,
    d: "#b79c60"
}, {
    n: "two_women_holding_hands",
    k: [336, 714, 713, 587, 43, 10, 446, 647, 468],
    s: "👭",
    c: 0,
    d: "#dfaa36"
}, {
    n: "man_and_woman_holding_hands",
    k: [587, 714, 647, 468, 43, 715, 716, 10, 44, 45, 588],
    s: "👫",
    c: 0,
    d: "#c68830"
}, {
    n: "two_men_holding_hands",
    k: [336, 714, 587, 43, 10, 717, 713, 647, 468],
    s: "👬",
    c: 0,
    d: "#ba9142"
}, {
    n: "couplekiss",
    k: [718, 714, 45, 43, 10, 716, 588],
    s: "💏",
    c: 0,
    d: "#eab52f"
}, {
    n: "woman-kiss-man",
    k: [447, 719, 56, 43],
    s: "👩‍❤️‍💋‍👨",
    c: 0,
    d: "#ecb72e"
}, {
    n: "man-kiss-man",
    k: [719, 56, 714, 45, 43, 10, 716, 588],
    s: "👨‍❤️‍💋‍👨",
    c: 0,
    d: "#f0bc30"
}, {
    n: "woman-kiss-woman",
    k: [720, 56, 714, 45, 43, 10, 716, 588],
    s: "👩‍❤️‍💋‍👩",
    c: 0,
    d: "#e6af2c"
}, {
    n: "couple_with_heart",
    k: [714, 43, 10, 44, 468, 716, 45, 588],
    s: "💑",
    c: 0,
    d: "#dea342"
}, {
    n: "woman-heart-man",
    k: [447, 721, 48, 43],
    s: "👩‍❤️‍👨",
    c: 0,
    d: "#e0a62f"
}, {
    n: "man-heart-man",
    k: [721, 48, 714, 43, 10, 44, 468, 716, 45, 588],
    s: "👨‍❤️‍👨",
    c: 0,
    d: "#e8ab35"
}, {
    n: "woman-heart-woman",
    k: [722, 48, 714, 43, 10, 44, 468, 716, 45, 588],
    s: "👩‍❤️‍👩",
    c: 0,
    d: "#d69b30"
}, {
    n: "family",
    k: [723, 724, 435, 725, 452, 451, 604, 647, 468],
    s: "👪",
    c: 0,
    d: "#cca33c"
}, {
    n: "man-woman-boy",
    k: [442, 726, 727, 447, 43],
    s: "👨‍👩‍👦",
    c: 0,
    d: "#e0b038"
}, {
    n: "man-woman-girl",
    k: [442, 728, 727, 447, 723, 724, 647, 468, 435],
    s: "👨‍👩‍👧",
    c: 0,
    d: "#dfac3d"
}, {
    n: "man-woman-girl-boy",
    k: [442, 729, 727, 447, 437, 723, 724, 647, 468, 730],
    s: "👨‍👩‍👧‍👦",
    c: 0,
    d: "#deae3c"
}, {
    n: "man-woman-boy-boy",
    k: [442, 731, 727, 447, 723, 724, 647, 468, 730],
    s: "👨‍👩‍👦‍👦",
    c: 0,
    d: "#e0b138"
}, {
    n: "man-woman-girl-girl",
    k: [442, 732, 727, 447, 723, 724, 647, 468, 730],
    s: "👨‍👩‍👧‍👧",
    c: 0,
    d: "#deab3f"
}, {
    n: "man-man-boy",
    k: [442, 733, 727, 723, 724, 647, 468, 730],
    s: "👨‍👨‍👦",
    c: 0,
    d: "#e1b43a"
}, {
    n: "man-man-girl",
    k: [442, 734, 727, 723, 724, 647, 468, 730],
    s: "👨‍👨‍👧",
    c: 0,
    d: "#e1b23d"
}, {
    n: "man-man-girl-boy",
    k: [442, 735, 727, 437, 723, 724, 647, 468, 730],
    s: "👨‍👨‍👧‍👦",
    c: 0,
    d: "#e0b23c"
}, {
    n: "man-man-boy-boy",
    k: [442, 736, 727, 723, 724, 647, 468, 730],
    s: "👨‍👨‍👦‍👦",
    c: 0,
    d: "#e2b538"
}, {
    n: "man-man-girl-girl",
    k: [442, 737, 727, 723, 724, 647, 468, 730],
    s: "👨‍👨‍👧‍👧",
    c: 0,
    d: "#e0b03f"
}, {
    n: "woman-woman-boy",
    k: [447, 726, 727, 723, 724, 647, 468, 730],
    s: "👩‍👩‍👦",
    c: 0,
    d: "#cb661d"
}, {
    n: "woman-woman-girl",
    k: [447, 728, 727, 723, 724, 647, 468, 730],
    s: "👩‍👩‍👧",
    c: 0,
    d: "#c7621d"
}, {
    n: "woman-woman-girl-boy",
    k: [447, 729, 727, 437, 723, 724, 647, 468, 730],
    s: "👩‍👩‍👧‍👦",
    c: 0,
    d: "#dda438"
}, {
    n: "woman-woman-boy-boy",
    k: [447, 731, 727, 723, 724, 647, 468, 730],
    s: "👩‍👩‍👦‍👦",
    c: 0,
    d: "#dea836"
}, {
    n: "woman-woman-girl-girl",
    k: [447, 732, 727, 723, 724, 647, 468, 730],
    s: "👩‍👩‍👧‍👧",
    c: 0,
    d: "#daa12e"
}, {
    n: "man-boy",
    k: [442, 727, 723, 738, 647, 468, 435],
    s: "👨‍👦",
    c: 0,
    d: "#e1b33a"
}, {
    n: "man-boy-boy",
    k: [442, 739, 727, 723, 738, 647, 468, 730],
    s: "👨‍👦‍👦",
    c: 0,
    d: "#e2b439"
}, {
    n: "man-girl",
    k: [442, 727, 723, 738, 647, 468, 435],
    s: "👨‍👧",
    c: 0,
    d: "#e1b040"
}, {
    n: "man-girl-boy",
    k: [442, 740, 727, 437, 723, 738, 647, 468, 730],
    s: "👨‍👧‍👦",
    c: 0,
    d: "#e2b33e"
}, {
    n: "man-girl-girl",
    k: [442, 741, 727, 723, 738, 647, 468, 730],
    s: "👨‍👧‍👧",
    c: 0,
    d: "#e1b041"
}, {
    n: "woman-boy",
    k: [447, 727, 723, 738, 647, 468, 435],
    s: "👩‍👦",
    c: 0,
    d: "#deab37"
}, {
    n: "woman-boy-boy",
    k: [447, 739, 727, 723, 738, 647, 468, 730],
    s: "👩‍👦‍👦",
    c: 0,
    d: "#e1b038"
}, {
    n: "woman-girl",
    k: [447, 727, 723, 738, 647, 468, 435],
    s: "👩‍👧",
    c: 0,
    d: "#dca42e"
}, {
    n: "woman-girl-boy",
    k: [447, 740, 727, 437, 723, 738, 647, 468, 730],
    s: "👩‍👧‍👦",
    c: 0,
    d: "#d7952f"
}, {
    n: "woman-girl-girl",
    k: [447, 741, 727, 723, 738, 647, 468, 730],
    s: "👩‍👧‍👧",
    c: 0,
    d: "#deab31"
}, {
    n: "speaking_head_in_silhouette",
    k: [742, 743, 744, 448, 468, 745, 746, 747],
    s: "🗣️",
    c: 0,
    d: "#597da0"
}, {
    n: "bust_in_silhouette",
    k: [744, 448, 468],
    s: "👤",
    c: 0,
    d: "#597fa1"
}, {
    n: "busts_in_silhouette",
    k: [744, 448, 468, 748, 749],
    s: "👥",
    c: 0,
    d: "#5c81a3"
}, {
    n: "people_hugging",
    k: [400],
    s: "🫂",
    c: 0,
    d: "#557a9c"
}, {
    n: "footprints",
    k: [631, 750, 624, 203],
    s: "👣",
    c: 0,
    d: "#444444"
}, {
    n: "smiley_cat",
    k: [5, 660, 751, 1, 0],
    s: "😺",
    c: 0,
    d: "#d5ad47"
}, {
    n: "smile_cat",
    k: [0, 660, 751],
    s: "😸",
    c: 0,
    d: "#d5ad46"
}, {
    n: "joy_cat",
    k: [660, 751, 6, 1],
    s: "😹",
    c: 0,
    d: "#cdb159"
}, {
    n: "heart_eyes_cat",
    k: [48, 49, 660, 43, 10, 44, 751, 45],
    s: "😻",
    c: 0,
    d: "#d6a03e"
}, {
    n: "smirk_cat",
    k: [125, 660, 751],
    s: "😼",
    c: 0,
    d: "#d4ab40"
}, {
    n: "kissing_cat",
    k: [660, 751, 56],
    s: "😽",
    c: 0,
    d: "#d5a540"
}, {
    n: "scream_cat",
    k: [243, 660, 751, 244, 91],
    s: "🙀",
    c: 0,
    d: "#cda541"
}, {
    n: "crying_cat_face",
    k: [19, 660, 240, 22, 60, 751, 147, 21],
    s: "😿",
    c: 0,
    d: "#d1aa42"
}, {
    n: "pouting_cat",
    k: [660, 751],
    s: "😾",
    c: 0,
    d: "#d3aa3f"
}, {
    n: "see_no_evil",
    k: [429, 116, 280, 660, 752, 6],
    s: "🙈",
    c: 0,
    d: "#bd9971"
}, {
    n: "hear_no_evil",
    k: [414, 116, 280, 660, 752],
    s: "🙉",
    c: 0,
    d: "#bd9c72"
}, {
    n: "speak_no_evil",
    k: [753, 116, 280, 660, 752, 245],
    s: "🙊",
    c: 0,
    d: "#bd996e"
}, {
    n: "kiss",
    k: [19, 95, 43, 10, 44, 45],
    s: "💋",
    c: 0,
    d: "#cf2526"
}, {
    n: "love_letter",
    k: [754, 10, 44, 755, 45],
    s: "💌",
    c: 0,
    d: "#dad9d9"
}, {
    n: "cupid",
    k: [756, 43, 10, 44, 45],
    s: "💘",
    c: 0,
    d: "#e5389c"
}, {
    n: "gift_heart",
    k: [757, 43, 45],
    s: "💝",
    c: 0,
    d: "#de556e"
}, {
    n: "sparkling_heart",
    k: [43, 10, 44, 45],
    s: "💖",
    c: 0,
    d: "#e73b9b"
}, {
    n: "heartpulse",
    k: [758, 10, 43, 44, 45, 480],
    s: "💗",
    c: 0,
    d: "#d64691"
}, {
    n: "heartbeat",
    k: [422, 43, 10, 44, 45, 480],
    s: "💓",
    c: 0,
    d: "#e6339c"
}, {
    n: "revolving_hearts",
    k: [43, 10, 44, 45],
    s: "💞",
    c: 0,
    d: "#e1399c"
}, {
    n: "two_hearts",
    k: [43, 10, 44, 45, 48],
    s: "💕",
    c: 0,
    d: "#e5369b"
}, {
    n: "heart_decoration",
    k: [759, 760, 43, 10],
    s: "💟",
    c: 0,
    d: "#9840b2"
}, {
    n: "heavy_heart_exclamation_mark_ornament",
    k: [761, 762, 763, 764, 43],
    s: "❣️",
    c: 0,
    d: "#e93529"
}, {
    n: "broken_heart",
    k: [60, 765, 766, 767],
    e: ["</3"],
    s: "💔",
    c: 0,
    d: "#db2e23"
}, {
    n: "heart_on_fire",
    k: [768, 769],
    s: "❤️‍🔥",
    c: 0,
    d: "#f04c29"
}, {
    n: "mending_heart",
    k: [770, 160, 771],
    s: "❤️‍🩹",
    c: 0,
    d: "#e1382d"
}, {
    n: "heart",
    k: [43, 10, 45],
    e: ["<3"],
    s: "❤️",
    c: 0,
    d: "#ea362b"
}, {
    n: "orange_heart",
    k: [43, 10, 44, 45],
    s: "🧡",
    c: 0,
    d: "#f08210"
}, {
    n: "yellow_heart",
    k: [43, 10, 44, 45],
    e: ["<3"],
    s: "💛",
    c: 0,
    d: "#fad350"
}, {
    n: "green_heart",
    k: [43, 10, 44, 45],
    e: ["<3"],
    s: "💚",
    c: 0,
    d: "#3ec132"
}, {
    n: "blue_heart",
    k: [43, 10, 44, 45],
    e: ["<3"],
    s: "💙",
    c: 0,
    d: "#156cf4"
}, {
    n: "purple_heart",
    k: [43, 10, 44, 45],
    e: ["<3"],
    s: "💜",
    c: 0,
    d: "#b247f1"
}, {
    n: "brown_heart",
    k: [772],
    s: "🤎",
    c: 0,
    d: "#824e28"
}, {
    n: "black_heart",
    k: [280],
    s: "🖤",
    c: 0,
    d: "#2e2e2e"
}, {
    n: "white_heart",
    k: [773],
    s: "🤍",
    c: 0,
    d: "#dcdcdc"
}, {
    n: "100",
    k: [774, 775, 329, 776, 777, 778, 779, 780, 781],
    s: "💯",
    c: 0,
    d: "#d90805"
}, {
    n: "anger",
    k: [258, 259],
    s: "💢",
    c: 0,
    d: "#dd0707"
}, {
    n: "boom",
    k: [782, 783, 784, 785, 193],
    s: "💥",
    c: 0,
    d: "#e55433"
}, {
    n: "dizzy",
    k: [50, 786, 787, 611],
    s: "💫",
    c: 0,
    d: "#f4c03c"
}, {
    n: "sweat_drops",
    k: [788, 673, 789, 238],
    s: "💦",
    c: 0,
    d: "#2db1ef"
}, {
    n: "dash",
    k: [790, 791, 792, 793, 794, 795, 796, 797, 798],
    s: "💨",
    c: 0,
    d: "#bdcfe2"
}, {
    n: "hole",
    k: [93],
    s: "🕳️",
    c: 0,
    d: "#292929"
}, {
    n: "bomb",
    k: [782, 784, 785, 799],
    s: "💣",
    c: 0,
    d: "#4e5153"
}, {
    n: "speech_balloon",
    k: [800, 801, 802, 747, 803],
    s: "💬",
    c: 0,
    d: "#e1e1e1"
}, {
    n: "eye-in-speech-bubble",
    k: [804, 805],
    s: "👁️‍🗨️",
    c: 0,
    d: "#4d4f52"
}, {
    n: "left_speech_bubble",
    k: [801, 802, 747, 803],
    s: "🗨️",
    c: 0,
    d: "#3d3d3d"
}, {
    n: "right_anger_bubble",
    k: [806, 807, 808, 259],
    s: "🗯️",
    c: 0,
    d: "#f0f1f2"
}, {
    n: "thought_balloon",
    k: [800, 809, 807, 808, 124],
    s: "💭",
    c: 0,
    d: "#f1f1f1"
}, {
    n: "zzz",
    k: [150, 141, 124],
    s: "💤",
    c: 0,
    d: "#0851c3"
}, {
    n: "monkey_face",
    k: [660, 752, 810],
    e: [":o)"],
    s: "🐵",
    c: 1,
    d: "#be9c72"
}, {
    n: "monkey",
    k: [660, 752, 811, 810],
    s: "🐒",
    c: 1,
    d: "#ac8656"
}, {
    n: "gorilla",
    k: [660, 752, 810],
    s: "🦍",
    c: 1,
    d: "#5b5858"
}, {
    n: "orangutan",
    k: [660],
    s: "🦧",
    c: 1,
    d: "#90431f"
}, {
    n: "dog",
    k: [660, 812, 752, 813, 814, 815, 816],
    s: "🐶",
    c: 1,
    d: "#c9af92"
}, {
    n: "dog2",
    k: [817, 660, 752, 812, 818, 815, 816],
    s: "🐕",
    c: 1,
    d: "#ba8a56"
}, {
    n: "guide_dog",
    k: [660, 636],
    s: "🦮",
    c: 1,
    d: "#b79256"
}, {
    n: "service_dog",
    k: [636, 660],
    s: "🐕‍🦺",
    c: 1,
    d: "#322c28"
}, {
    n: "poodle",
    k: [819, 660, 820, 752, 815],
    s: "🐩",
    c: 1,
    d: "#b9b9b9"
}, {
    n: "wolf",
    k: [660, 752, 821],
    s: "🐺",
    c: 1,
    d: "#717171"
}, {
    n: "fox_face",
    k: [19, 660, 752],
    s: "🦊",
    c: 1,
    d: "#cc6b18"
}, {
    n: "raccoon",
    k: [660, 752],
    s: "🦝",
    c: 1,
    d: "#574c3a"
}, {
    n: "cat",
    k: [660, 822, 752, 815, 823],
    s: "🐱",
    c: 1,
    d: "#e0b635"
}, {
    n: "cat2",
    k: [824, 660, 822, 815, 751],
    s: "🐈",
    c: 1,
    d: "#cab5a2"
}, {
    n: "black_cat",
    k: [825, 664],
    s: "🐈‍⬛",
    c: 1,
    d: "#474645"
}, {
    n: "lion_face",
    k: [19, 660, 752],
    s: "🦁",
    c: 1,
    d: "#d89a2c"
}, {
    n: "tiger",
    k: [660, 826, 276, 821, 752, 827],
    s: "🐯",
    c: 1,
    d: "#c7ae32"
}, {
    n: "tiger2",
    k: [828, 660, 752, 827],
    s: "🐅",
    c: 1,
    d: "#a9774b"
}, {
    n: "leopard",
    k: [660, 752],
    s: "🐆",
    c: 1,
    d: "#b5915a"
}, {
    n: "horse",
    k: [660, 829, 752],
    s: "🐴",
    c: 1,
    d: "#958356"
}, {
    n: "racehorse",
    k: [830, 660, 831, 664],
    s: "🐎",
    c: 1,
    d: "#5d4f34"
}, {
    n: "unicorn_face",
    k: [19, 660, 752, 625],
    s: "🦄",
    c: 1,
    d: "#c895d8"
}, {
    n: "zebra_face",
    k: [19, 660, 752, 832, 833],
    s: "🦓",
    c: 1,
    d: "#56524e"
}, {
    n: "deer",
    k: [660, 752, 270, 834],
    s: "🦌",
    c: 1,
    d: "#9c7755"
}, {
    n: "bison",
    k: [835],
    s: "🦬",
    c: 1,
    d: "#534641"
}, {
    n: "cow",
    k: [836, 835, 660, 752, 837, 838],
    s: "🐮",
    c: 1,
    d: "#cabbae"
}, {
    n: "ox",
    k: [660, 839, 836],
    s: "🐂",
    c: 1,
    d: "#9b6d4e"
}, {
    n: "water_buffalo",
    k: [660, 752, 835, 839],
    s: "🐃",
    c: 1,
    d: "#483e3e"
}, {
    n: "cow2",
    k: [840, 836, 835, 660, 752, 837, 838],
    s: "🐄",
    c: 1,
    d: "#a49e9a"
}, {
    n: "pig",
    k: [660, 841, 752],
    s: "🐷",
    c: 1,
    d: "#dca79d"
}, {
    n: "pig2",
    k: [842, 660, 752],
    s: "🐖",
    c: 1,
    d: "#e8c0a9"
}, {
    n: "boar",
    k: [660, 752],
    s: "🐗",
    c: 1,
    d: "#604c3f"
}, {
    n: "pig_nose",
    k: [660, 841],
    s: "🐽",
    c: 1,
    d: "#da92a4"
}, {
    n: "ram",
    k: [660, 843, 752],
    s: "🐏",
    c: 1,
    d: "#c6c3b8"
}, {
    n: "sheep",
    k: [843, 660, 752, 844, 845],
    s: "🐑",
    c: 1,
    d: "#cbcac1"
}, {
    n: "goat",
    k: [660, 752],
    s: "🐐",
    c: 1,
    d: "#968067"
}, {
    n: "dromedary_camel",
    k: [846, 660, 17, 847, 848],
    s: "🐪",
    c: 1,
    d: "#a57242"
}, {
    n: "camel",
    k: [336, 848, 660, 752, 17, 847],
    s: "🐫",
    c: 1,
    d: "#a8744e"
}, {
    n: "llama",
    k: [660, 752, 849],
    s: "🦙",
    c: 1,
    d: "#d8caa8"
}, {
    n: "giraffe_face",
    k: [19, 660, 752, 850, 833],
    s: "🦒",
    c: 1,
    d: "#ba843a"
}, {
    n: "elephant",
    k: [660, 752, 253, 851, 810],
    s: "🐘",
    c: 1,
    d: "#868985"
}, {
    n: "mammoth",
    k: [852, 853],
    s: "🦣",
    c: 1,
    d: "#7d5d43"
}, {
    n: "rhinoceros",
    k: [660, 752, 854],
    s: "🦏",
    c: 1,
    d: "#7e7a76"
}, {
    n: "hippopotamus",
    k: [660, 752],
    s: "🦛",
    c: 1,
    d: "#6a6766"
}, {
    n: "mouse",
    k: [660, 752, 855, 856, 857],
    s: "🐭",
    c: 1,
    d: "#bcb3bb"
}, {
    n: "mouse2",
    k: [858, 660, 752, 857],
    s: "🐁",
    c: 1,
    d: "#dad6d7"
}, {
    n: "rat",
    k: [660, 859, 857],
    s: "🐀",
    c: 1,
    d: "#84786e"
}, {
    n: "hamster",
    k: [660, 752],
    s: "🐹",
    c: 1,
    d: "#d9aea3"
}, {
    n: "rabbit",
    k: [660, 752, 815, 860, 611, 861],
    s: "🐰",
    c: 1,
    d: "#c7bbbb"
}, {
    n: "rabbit2",
    k: [862, 660, 752, 815, 611, 860],
    s: "🐇",
    c: 1,
    d: "#c8c7c7"
}, {
    n: "chipmunk",
    k: [660, 752, 857, 863],
    s: "🐿️",
    c: 1,
    d: "#7b5428"
}, {
    n: "beaver",
    k: [660, 857],
    s: "🦫",
    c: 1,
    d: "#785943"
}, {
    n: "hedgehog",
    k: [660, 752, 864],
    s: "🦔",
    c: 1,
    d: "#785841"
}, {
    n: "bat",
    k: [660, 752, 636, 865],
    s: "🦇",
    c: 1,
    d: "#634e3f"
}, {
    n: "bear",
    k: [660, 752, 821],
    s: "🐻",
    c: 1,
    d: "#7f5632"
}, {
    n: "polar_bear",
    k: [660, 866],
    s: "🐻‍❄️",
    c: 1,
    d: "#caccce"
}, {
    n: "koala",
    k: [660, 752],
    s: "🐨",
    c: 1,
    d: "#998681"
}, {
    n: "panda_face",
    k: [19, 660, 752],
    s: "🐼",
    c: 1,
    d: "#cfd0d0"
}, {
    n: "sloth",
    k: [660],
    s: "🦥",
    c: 1,
    d: "#59472b"
}, {
    n: "otter",
    k: [660],
    s: "🦦",
    c: 1,
    d: "#58402a"
}, {
    n: "skunk",
    k: [660],
    s: "🦨",
    c: 1,
    d: "#37352f"
}, {
    n: "kangaroo",
    k: [660, 752, 867, 868, 869, 870],
    s: "🦘",
    c: 1,
    d: "#a77f53"
}, {
    n: "badger",
    k: [660, 752, 871],
    s: "🦡",
    c: 1,
    d: "#615d55"
}, {
    n: "feet",
    k: [631, 660, 750, 872, 819, 826, 815],
    s: "🐾",
    c: 1,
    d: "#444444"
}, {
    n: "turkey",
    k: [660, 873],
    s: "🦃",
    c: 1,
    d: "#6f4841"
}, {
    n: "chicken",
    k: [660, 874, 752, 873],
    s: "🐔",
    c: 1,
    d: "#e0b9ad"
}, {
    n: "rooster",
    k: [660, 752, 875],
    s: "🐓",
    c: 1,
    d: "#c7bab5"
}, {
    n: "hatching_chick",
    k: [660, 875, 876, 877, 592, 873],
    s: "🐣",
    c: 1,
    d: "#deb549"
}, {
    n: "baby_chick",
    k: [660, 875, 873],
    s: "🐤",
    c: 1,
    d: "#e9c238"
}, {
    n: "hatched_chick",
    k: [878, 879, 372, 660, 875, 873],
    s: "🐥",
    c: 1,
    d: "#eebc34"
}, {
    n: "bird",
    k: [660, 752, 541, 880, 860],
    s: "🐦",
    c: 1,
    d: "#98b0b1"
}, {
    n: "penguin",
    k: [660, 752],
    s: "🐧",
    c: 1,
    d: "#413d38"
}, {
    n: "dove_of_peace",
    k: [881, 335, 660, 873],
    s: "🕊️",
    c: 1,
    d: "#c2bfba"
}, {
    n: "eagle",
    k: [660, 752, 873],
    s: "🦅",
    c: 1,
    d: "#51473f"
}, {
    n: "duck",
    k: [660, 752, 873, 882],
    s: "🦆",
    c: 1,
    d: "#b79e92"
}, {
    n: "swan",
    k: [660, 752, 873],
    s: "🦢",
    c: 1,
    d: "#c3bfac"
}, {
    n: "owl",
    k: [660, 752, 873, 883],
    s: "🦉",
    c: 1,
    d: "#7a604c"
}, {
    n: "dodo",
    k: [660, 873],
    s: "🦤",
    c: 1,
    d: "#a6764a"
}, {
    n: "feather",
    k: [873, 541],
    s: "🪶",
    c: 1,
    d: "#5a4b33"
}, {
    n: "flamingo",
    k: [660],
    s: "🦩",
    c: 1,
    d: "#d45d61"
}, {
    n: "peacock",
    k: [660, 752, 884, 873],
    s: "🦚",
    c: 1,
    d: "#4a8a54"
}, {
    n: "parrot",
    k: [660, 752, 873, 279, 747],
    s: "🦜",
    c: 1,
    d: "#616926"
}, {
    n: "frog",
    k: [660, 752, 885, 886],
    s: "🐸",
    c: 1,
    d: "#73b053"
}, {
    n: "crocodile",
    k: [660, 752, 887, 888, 889],
    s: "🐊",
    c: 1,
    d: "#597e58"
}, {
    n: "turtle",
    k: [660, 890, 752, 891],
    s: "🐢",
    c: 1,
    d: "#5c7d42"
}, {
    n: "lizard",
    k: [660, 752, 887],
    s: "🦎",
    c: 1,
    d: "#669d58"
}, {
    n: "snake",
    k: [660, 280, 752, 892, 893],
    s: "🐍",
    c: 1,
    d: "#6a7b2b"
}, {
    n: "dragon_face",
    k: [660, 894, 752, 583, 166],
    s: "🐲",
    c: 1,
    d: "#b6bc4a"
}, {
    n: "dragon",
    k: [660, 894, 752, 583, 166],
    s: "🐉",
    c: 1,
    d: "#819d48"
}, {
    n: "sauropod",
    k: [660, 752, 895, 896, 897, 898, 899],
    s: "🦕",
    c: 1,
    d: "#36778e"
}, {
    n: "t-rex",
    k: [900, 901, 660, 752, 895, 902, 899],
    s: "🦖",
    c: 1,
    d: "#4e7718"
}, {
    n: "whale",
    k: [660, 752, 618, 669],
    s: "🐳",
    c: 1,
    d: "#48a8c2"
}, {
    n: "whale2",
    k: [903, 660, 752, 618, 669],
    s: "🐋",
    c: 1,
    d: "#94b8c7"
}, {
    n: "dolphin",
    k: [904, 660, 752, 905, 618, 669, 906, 203],
    s: "🐬",
    c: 1,
    d: "#52b7cf"
}, {
    n: "seal",
    k: [660, 907, 618],
    s: "🦭",
    c: 1,
    d: "#878684"
}, {
    n: "fish",
    k: [660, 507, 752],
    s: "🐟",
    c: 1,
    d: "#678eb3"
}, {
    n: "tropical_fish",
    k: [660, 908, 669, 203, 909],
    s: "🐠",
    c: 1,
    d: "#b5cc7a"
}, {
    n: "blowfish",
    k: [660, 752, 507, 618, 669],
    s: "🐡",
    c: 1,
    d: "#c8a260"
}, {
    n: "shark",
    k: [660, 752, 905, 618, 669, 910, 906, 203],
    s: "🦈",
    c: 1,
    d: "#8b9b9e"
}, {
    n: "octopus",
    k: [660, 907, 669, 618, 752, 203],
    s: "🐙",
    c: 1,
    d: "#a8384a"
}, {
    n: "shell",
    k: [752, 618, 203],
    s: "🐚",
    c: 1,
    d: "#c7bcbc"
}, {
    n: "coral",
    k: [669, 618, 911],
    s: "🪸",
    c: 1,
    d: "#bd6e51"
}, {
    n: "snail",
    k: [890, 660, 912],
    s: "🐌",
    c: 1,
    d: "#a98154"
}, {
    n: "butterfly",
    k: [660, 913, 752, 914],
    s: "🦋",
    c: 1,
    d: "#30b0e6"
}, {
    n: "bug",
    k: [660, 913, 752, 915],
    s: "🐛",
    c: 1,
    d: "#9e9f4e"
}, {
    n: "ant",
    k: [660, 913, 752, 916],
    s: "🐜",
    c: 1,
    d: "#413532"
}, {
    n: "bee",
    k: [917, 660, 913, 752, 916, 860, 871],
    s: "🐝",
    c: 1,
    d: "#baa94d"
}, {
    n: "beetle",
    k: [913],
    s: "🪲",
    c: 1,
    d: "#3f6a04"
}, {
    n: "ladybug",
    k: [918, 660, 913, 752],
    s: "🐞",
    c: 1,
    d: "#5f3a31"
}, {
    n: "cricket",
    k: [660, 919],
    s: "🦗",
    c: 1,
    d: "#634c31"
}, {
    n: "cockroach",
    k: [913, 920],
    s: "🪳",
    c: 1,
    d: "#a35e50"
}, {
    n: "spider",
    k: [660, 921],
    s: "🕷️",
    c: 1,
    d: "#4b494b"
}, {
    n: "spider_web",
    k: [660, 913, 921, 922],
    s: "🕸️",
    c: 1,
    d: "#a2a2a2"
}, {
    n: "scorpion",
    k: [660, 921],
    s: "🦂",
    c: 1,
    d: "#945b18"
}, {
    n: "mosquito",
    k: [660, 752, 913, 923],
    s: "🦟",
    c: 1,
    d: "#5b4b3f"
}, {
    n: "fly",
    k: [913],
    s: "🪰",
    c: 1,
    d: "#b9844f"
}, {
    n: "worm",
    k: [660],
    s: "🪱",
    c: 1,
    d: "#cb4a56"
}, {
    n: "microbe",
    k: [924, 925, 926, 927],
    s: "🦠",
    c: 1,
    d: "#4e9c1c"
}, {
    n: "bouquet",
    k: [928, 752, 860],
    s: "💐",
    c: 1,
    d: "#b59d3e"
}, {
    n: "cherry_blossom",
    k: [752, 929, 860, 930],
    s: "🌸",
    c: 1,
    d: "#f6a6d1"
}, {
    n: "white_flower",
    k: [287, 860],
    s: "💮",
    c: 1,
    d: "#fcd0d0"
}, {
    n: "lotus",
    k: [930, 931, 703],
    s: "🪷",
    c: 1,
    d: "#d5a49e"
}, {
    n: "rosette",
    k: [930, 764, 932],
    s: "🏵️",
    c: 1,
    d: "#e7ac34"
}, {
    n: "rose",
    k: [928, 45, 43, 860],
    s: "🌹",
    c: 1,
    d: "#c3141d"
}, {
    n: "wilted_flower",
    k: [929, 752],
    s: "🥀",
    c: 1,
    d: "#683220"
}, {
    n: "hibiscus",
    k: [929, 933, 928, 203],
    s: "🌺",
    c: 1,
    d: "#da3b56"
}, {
    n: "sunflower",
    k: [752, 929, 934],
    s: "🌻",
    c: 1,
    d: "#dfb407"
}, {
    n: "blossom",
    k: [752, 928, 935],
    s: "🌼",
    c: 1,
    d: "#eed646"
}, {
    n: "tulip",
    k: [928, 929, 752, 202, 860],
    s: "🌷",
    c: 1,
    d: "#e3627b"
}, {
    n: "seedling",
    k: [929, 752, 936, 937, 860],
    s: "🌱",
    c: 1,
    d: "#6fb61e"
}, {
    n: "potted_plant",
    k: [938, 939],
    s: "🪴",
    c: 1,
    d: "#697c29"
}, {
    n: "evergreen_tree",
    k: [929, 752],
    s: "🌲",
    c: 1,
    d: "#326435"
}, {
    n: "deciduous_tree",
    k: [929, 752],
    s: "🌳",
    c: 1,
    d: "#4e7020"
}, {
    n: "palm_tree",
    k: [929, 933, 752, 202, 203, 940, 941],
    s: "🌴",
    c: 1,
    d: "#689c2f"
}, {
    n: "cactus",
    k: [933, 929, 752],
    s: "🌵",
    c: 1,
    d: "#5d9931"
}, {
    n: "ear_of_rice",
    k: [942, 752, 929],
    s: "🌾",
    c: 1,
    d: "#d2b952"
}, {
    n: "herb",
    k: [933, 929, 943, 944, 936, 937],
    s: "🌿",
    c: 1,
    d: "#5ba129"
}, {
    n: "shamrock",
    k: [933, 929, 752, 945, 946],
    s: "☘️",
    c: 1,
    d: "#5fcb26"
}, {
    n: "four_leaf_clover",
    k: [933, 929, 752, 340, 945],
    s: "🍀",
    c: 1,
    d: "#6dc930"
}, {
    n: "maple_leaf",
    k: [752, 929, 933, 947, 934],
    s: "🍁",
    c: 1,
    d: "#b44819"
}, {
    n: "fallen_leaf",
    k: [752, 929, 933, 948],
    s: "🍂",
    c: 1,
    d: "#ab5e16"
}, {
    n: "leaves",
    k: [948, 752, 929, 949, 933, 936, 937, 860],
    s: "🍃",
    c: 1,
    d: "#71a334"
}, {
    n: "empty_nest",
    k: [873],
    s: "🪹",
    c: 1,
    d: "#764724"
}, {
    n: "nest_with_eggs",
    k: [873],
    s: "🪺",
    c: 1,
    d: "#784d2b"
}, {
    n: "grapes",
    k: [950, 507, 951],
    s: "🍇",
    c: 2,
    d: "#9a2e59"
}, {
    n: "melon",
    k: [950, 752, 507],
    s: "🍈",
    c: 2,
    d: "#c4c688"
}, {
    n: "watermelon",
    k: [950, 507, 952, 202],
    s: "🍉",
    c: 2,
    d: "#dc6864"
}, {
    n: "tangerine",
    k: [507, 950, 752, 953],
    s: "🍊",
    c: 2,
    d: "#d7772b"
}, {
    n: "lemon",
    k: [950, 752],
    s: "🍋",
    c: 2,
    d: "#d8b840"
}, {
    n: "banana",
    k: [950, 507, 954],
    s: "🍌",
    c: 2,
    d: "#e7ce96"
}, {
    n: "pineapple",
    k: [950, 752, 507],
    s: "🍍",
    c: 2,
    d: "#736a28"
}, {
    n: "mango",
    k: [950, 507, 941],
    s: "🥭",
    c: 2,
    d: "#8a721f"
}, {
    n: "apple",
    k: [950, 955, 956],
    s: "🍎",
    c: 2,
    d: "#cd3736"
}, {
    n: "green_apple",
    k: [950, 752],
    s: "🍏",
    c: 2,
    d: "#72a531"
}, {
    n: "pear",
    k: [950, 752, 507],
    s: "🍐",
    c: 2,
    d: "#9d9e33"
}, {
    n: "peach",
    k: [950, 752, 507],
    s: "🍑",
    c: 2,
    d: "#e3764a"
}, {
    n: "cherries",
    k: [507, 950],
    s: "🍒",
    c: 2,
    d: "#ad3a39"
}, {
    n: "strawberry",
    k: [950, 507, 752],
    s: "🍓",
    c: 2,
    d: "#bc3e36"
}, {
    n: "blueberries",
    k: [950],
    s: "🫐",
    c: 2,
    d: "#5c7eb6"
}, {
    n: "kiwifruit",
    k: [957, 950, 507],
    s: "🥝",
    c: 2,
    d: "#aab44d"
}, {
    n: "tomato",
    k: [950, 933, 752, 507],
    s: "🍅",
    c: 2,
    d: "#c7451e"
}, {
    n: "olive",
    k: [950],
    s: "🫒",
    c: 2,
    d: "#6a6c20"
}, {
    n: "coconut",
    k: [950, 752, 507, 312],
    s: "🥥",
    c: 2,
    d: "#cfc7b4"
}, {
    n: "avocado",
    k: [950, 507],
    s: "🥑",
    c: 2,
    d: "#d7d271"
}, {
    n: "eggplant",
    k: [933, 752, 507, 958],
    s: "🍆",
    c: 2,
    d: "#6a4264"
}, {
    n: "potato",
    k: [507, 959, 960, 961],
    s: "🥔",
    c: 2,
    d: "#89562f"
}, {
    n: "carrot",
    k: [933, 507, 953],
    s: "🥕",
    c: 2,
    d: "#e1742d"
}, {
    n: "corn",
    k: [507, 933, 929],
    s: "🌽",
    c: 2,
    d: "#71741f"
}, {
    n: "hot_pepper",
    k: [507, 962, 963, 964],
    s: "🌶️",
    c: 2,
    d: "#c43e3c"
}, {
    n: "bell_pepper",
    k: [950, 929],
    s: "🫑",
    c: 2,
    d: "#54762d"
}, {
    n: "cucumber",
    k: [950, 507, 965],
    s: "🥒",
    c: 2,
    d: "#73ac45"
}, {
    n: "leafy_green",
    k: [507, 933, 929, 966, 967, 968, 969, 970],
    s: "🥬",
    c: 2,
    d: "#258228"
}, {
    n: "broccoli",
    k: [950, 507, 933],
    s: "🥦",
    c: 2,
    d: "#4f7735"
}, {
    n: "garlic",
    k: [507, 971, 972],
    s: "🧄",
    c: 2,
    d: "#cfb2a0"
}, {
    n: "onion",
    k: [972, 507, 971],
    s: "🧅",
    c: 2,
    d: "#d6996a"
}, {
    n: "mushroom",
    k: [929, 933],
    s: "🍄",
    c: 2,
    d: "#dd6556"
}, {
    n: "peanuts",
    k: [507, 973],
    s: "🥜",
    c: 2,
    d: "#bf944d"
}, {
    n: "beans",
    k: [507],
    s: "🫘",
    c: 2,
    d: "#843733"
}, {
    n: "chestnut",
    k: [507, 863],
    s: "🌰",
    c: 2,
    d: "#78351b"
}, {
    n: "bread",
    k: [507, 974, 975, 976],
    s: "🍞",
    c: 2,
    d: "#c38c48"
}, {
    n: "croissant",
    k: [507, 977, 978],
    s: "🥐",
    c: 2,
    d: "#d58e24"
}, {
    n: "baguette_bread",
    k: [507, 978],
    s: "🥖",
    c: 2,
    d: "#e9bb70"
}, {
    n: "flatbread",
    k: [979, 507],
    s: "🫓",
    c: 2,
    d: "#c9baa3"
}, {
    n: "pretzel",
    k: [507, 977, 980],
    s: "🥨",
    c: 2,
    d: "#c57646"
}, {
    n: "bagel",
    k: [507, 977, 981, 982],
    s: "🥯",
    c: 2,
    d: "#daa166"
}, {
    n: "pancakes",
    k: [507, 975, 983, 984],
    s: "🥞",
    c: 2,
    d: "#e0b877"
}, {
    n: "waffle",
    k: [507, 975],
    s: "🧇",
    c: 2,
    d: "#e1a74d"
}, {
    n: "cheese_wedge",
    k: [507, 985],
    s: "🧀",
    c: 2,
    d: "#f1ad19"
}, {
    n: "meat_on_bone",
    k: [339, 507, 986],
    s: "🍖",
    c: 2,
    d: "#b9603d"
}, {
    n: "poultry_leg",
    k: [507, 987, 986, 873, 875, 988],
    s: "🍗",
    c: 2,
    d: "#97552b"
}, {
    n: "cut_of_meat",
    k: [507, 839, 989, 990, 991],
    s: "🥩",
    c: 2,
    d: "#bf4036"
}, {
    n: "bacon",
    k: [507, 975, 992, 993, 987],
    s: "🥓",
    c: 2,
    d: "#c25e3b"
}, {
    n: "hamburger",
    k: [987, 794, 507, 836, 994, 995, 996, 573],
    s: "🍔",
    c: 2,
    d: "#da9547"
}, {
    n: "fries",
    k: [997, 998, 794, 507],
    s: "🍟",
    c: 2,
    d: "#ca4735"
}, {
    n: "pizza",
    k: [507, 999],
    s: "🍕",
    c: 2,
    d: "#dc9947"
}, {
    n: "hotdog",
    k: [1e3, 507, 1001],
    s: "🌭",
    c: 2,
    d: "#db9748"
}, {
    n: "sandwich",
    k: [507, 1002, 977],
    s: "🥪",
    c: 2,
    d: "#ecc375"
}, {
    n: "taco",
    k: [507, 1003],
    s: "🌮",
    c: 2,
    d: "#d1ab48"
}, {
    n: "burrito",
    k: [507, 1003],
    s: "🌯",
    c: 2,
    d: "#c0b8ae"
}, {
    n: "tamale",
    k: [507, 1004],
    s: "🫔",
    c: 2,
    d: "#d19f3d"
}, {
    n: "stuffed_flatbread",
    k: [507, 1005],
    s: "🥙",
    c: 2,
    d: "#a58f5b"
}, {
    n: "falafel",
    k: [507],
    s: "🧆",
    c: 2,
    d: "#6d5633"
}, {
    n: "egg",
    k: [507, 875, 975],
    s: "🥚",
    c: 2,
    d: "#e4e1da"
}, {
    n: "fried_egg",
    k: [1006, 876, 507, 975, 508],
    s: "🍳",
    c: 2,
    d: "#383636"
}, {
    n: "shallow_pan_of_food",
    k: [1007, 1008, 1009],
    s: "🥘",
    c: 2,
    d: "#604b37"
}, {
    n: "stew",
    k: [1010, 987, 1011],
    s: "🍲",
    c: 2,
    d: "#b7b7ad"
}, {
    n: "fondue",
    k: [855, 1012, 507],
    s: "🫕",
    c: 2,
    d: "#841a1a"
}, {
    n: "bowl_with_spoon",
    k: [507, 975, 1013, 1014, 1015],
    s: "🥣",
    c: 2,
    d: "#739fd4"
}, {
    n: "green_salad",
    k: [507, 1016, 970],
    s: "🥗",
    c: 2,
    d: "#789845"
}, {
    n: "popcorn",
    k: [507, 1017, 1018, 1019, 998],
    s: "🍿",
    c: 2,
    d: "#d65f55"
}, {
    n: "butter",
    k: [507, 972],
    s: "🧈",
    c: 2,
    d: "#ebce7d"
}, {
    n: "salt",
    k: [1020, 1021],
    s: "🧂",
    c: 2,
    d: "#cecdcc"
}, {
    n: "canned_food",
    k: [1011],
    s: "🥫",
    c: 2,
    d: "#be5c4c"
}, {
    n: "bento",
    k: [507, 287],
    s: "🍱",
    c: 2,
    d: "#634330"
}, {
    n: "rice_cracker",
    k: [507, 287],
    s: "🍘",
    c: 2,
    d: "#c59035"
}, {
    n: "rice_ball",
    k: [507, 287],
    s: "🍙",
    c: 2,
    d: "#cbc6be"
}, {
    n: "rice",
    k: [507, 1022, 1023],
    s: "🍚",
    c: 2,
    d: "#ceccc9"
}, {
    n: "curry",
    k: [507, 962, 17, 579],
    s: "🍛",
    c: 2,
    d: "#d2cabb"
}, {
    n: "ramen",
    k: [1024, 507, 287, 1025, 1026],
    s: "🍜",
    c: 2,
    d: "#dbc8b5"
}, {
    n: "spaghetti",
    k: [507, 1027, 1025],
    s: "🍝",
    c: 2,
    d: "#cdb375"
}, {
    n: "sweet_potato",
    k: [507, 752],
    s: "🍠",
    c: 2,
    d: "#c56671"
}, {
    n: "oden",
    k: [507, 287],
    s: "🍢",
    c: 2,
    d: "#b28d6b"
}, {
    n: "sushi",
    k: [507, 905, 287, 1028],
    s: "🍣",
    c: 2,
    d: "#eb7c64"
}, {
    n: "fried_shrimp",
    k: [507, 660, 1029, 202],
    s: "🍤",
    c: 2,
    d: "#e8a160"
}, {
    n: "fish_cake",
    k: [507, 1030, 618, 203, 1031, 480, 1032, 1033, 1024],
    s: "🍥",
    c: 2,
    d: "#d7d3ca"
}, {
    n: "moon_cake",
    k: [507, 1034],
    s: "🥮",
    c: 2,
    d: "#be5912"
}, {
    n: "dango",
    k: [507, 1035, 1036, 287, 1037, 987],
    s: "🍡",
    c: 2,
    d: "#c4af81"
}, {
    n: "dumpling",
    k: [507, 1038, 1039, 1040],
    s: "🥟",
    c: 2,
    d: "#e5c492"
}, {
    n: "fortune_cookie",
    k: [507, 1041],
    s: "🥠",
    c: 2,
    d: "#b9904e"
}, {
    n: "takeout_box",
    k: [507, 1042],
    s: "🥡",
    c: 2,
    d: "#cac8c9"
}, {
    n: "crab",
    k: [660, 1043],
    s: "🦀",
    c: 2,
    d: "#c94824"
}, {
    n: "lobster",
    k: [660, 752, 1044, 1045, 1046],
    s: "🦞",
    c: 2,
    d: "#b93018"
}, {
    n: "shrimp",
    k: [660, 669, 752, 1046],
    s: "🦐",
    c: 2,
    d: "#e27b4e"
}, {
    n: "squid",
    k: [660, 752, 669, 618],
    s: "🦑",
    c: 2,
    d: "#cb583e"
}, {
    n: "oyster",
    k: [507],
    s: "🦪",
    c: 2,
    d: "#a89983"
}, {
    n: "icecream",
    k: [1047, 507, 17, 1035, 202],
    s: "🍦",
    c: 2,
    d: "#d4b67c"
}, {
    n: "shaved_ice",
    k: [17, 1035, 202],
    s: "🍧",
    c: 2,
    d: "#c9b8b6"
}, {
    n: "ice_cream",
    k: [507, 17, 1035],
    s: "🍨",
    c: 2,
    d: "#cfc5b4"
}, {
    n: "doughnut",
    k: [507, 1035, 998, 1036, 1048],
    s: "🍩",
    c: 2,
    d: "#8f6343"
}, {
    n: "cookie",
    k: [507, 998, 1049, 1050, 1036, 1035],
    s: "🍪",
    c: 2,
    d: "#bf8b4d"
}, {
    n: "birthday",
    k: [507, 1035],
    s: "🎂",
    c: 2,
    d: "#d8d3c8"
}, {
    n: "cake",
    k: [1051, 507, 1035],
    s: "🍰",
    c: 2,
    d: "#e5d1a1"
}, {
    n: "cupcake",
    k: [507, 1035, 981, 1036],
    s: "🧁",
    c: 2,
    d: "#c6a965"
}, {
    n: "pie",
    k: [507, 1035, 1052],
    s: "🥧",
    c: 2,
    d: "#ec9e39"
}, {
    n: "chocolate_bar",
    k: [507, 998, 1035, 1036],
    s: "🍫",
    c: 2,
    d: "#c0453c"
}, {
    n: "candy",
    k: [998, 1035, 1036, 1053],
    s: "🍬",
    c: 2,
    d: "#d7c1e6"
}, {
    n: "lollipop",
    k: [507, 998, 1054, 1036],
    s: "🍭",
    c: 2,
    d: "#bba795"
}, {
    n: "custard",
    k: [1035, 507],
    s: "🍮",
    c: 2,
    d: "#dfcaaa"
}, {
    n: "honey_pot",
    k: [1055, 1036, 508],
    s: "🍯",
    c: 2,
    d: "#e7b342"
}, {
    n: "baby_bottle",
    k: [507, 1056, 838],
    s: "🍼",
    c: 2,
    d: "#d4d0bf"
}, {
    n: "glass_of_milk",
    k: [1057, 1058, 839],
    s: "🥛",
    c: 2,
    d: "#ceccc7"
}, {
    n: "coffee",
    k: [772, 1059, 1060, 1061],
    s: "☕",
    c: 2,
    d: "#b3afa7"
}, {
    n: "teapot",
    k: [1058, 17],
    s: "🫖",
    c: 2,
    d: "#c2c9ce"
}, {
    n: "tea",
    k: [1062, 1058, 1063, 975, 166, 563],
    s: "🍵",
    c: 2,
    d: "#b1b7a5"
}, {
    n: "sake",
    k: [951, 1058, 1064, 1057, 287, 1065, 1066],
    s: "🍶",
    c: 2,
    d: "#cfcfcd"
}, {
    n: "champagne",
    k: [1067, 1058, 951, 195],
    s: "🍾",
    c: 2,
    d: "#928d60"
}, {
    n: "wine_glass",
    k: [1058, 1057, 1064, 1065, 1066],
    s: "🍷",
    c: 2,
    d: "#9c3e3b"
}, {
    n: "cocktail",
    k: [1058, 1064, 1065, 1057, 1066, 940],
    s: "🍸",
    c: 2,
    d: "#d0cfc7"
}, {
    n: "tropical_drink",
    k: [1057, 1068, 202, 203, 1065, 1066, 940],
    s: "🍹",
    c: 2,
    d: "#a46a36"
}, {
    n: "beer",
    k: [627, 1057, 1058, 1064, 999, 1069, 202, 1065, 1066],
    s: "🍺",
    c: 2,
    d: "#b58550"
}, {
    n: "beers",
    k: [1070, 627, 1057, 1058, 1064, 999, 1069, 202, 1065, 1066],
    s: "🍻",
    c: 2,
    d: "#d0b999"
}, {
    n: "clinking_glasses",
    k: [1057, 1058, 999, 1065, 1071, 1072, 951, 1067, 976],
    s: "🥂",
    c: 2,
    d: "#ccbf8e"
}, {
    n: "tumbler_glass",
    k: [1058, 1057, 1064, 1065, 1073, 1066, 1074, 1075, 1076, 1077],
    s: "🥃",
    c: 2,
    d: "#dad3ca"
}, {
    n: "pouring_liquid",
    k: [1078, 673],
    s: "🫗",
    c: 2,
    d: "#d1cfd0"
}, {
    n: "cup_with_straw",
    k: [1058, 1079],
    s: "🥤",
    c: 2,
    d: "#cdc7c7"
}, {
    n: "bubble_tea",
    k: [1080, 1081, 838, 1082],
    s: "🧋",
    c: 2,
    d: "#bc8d5d"
}, {
    n: "beverage_box",
    k: [1058],
    s: "🧃",
    c: 2,
    d: "#1b9d50"
}, {
    n: "mate_drink",
    k: [1058, 1062, 1057],
    s: "🧉",
    c: 2,
    d: "#62321c"
}, {
    n: "ice_cube",
    k: [1083, 673, 157],
    s: "🧊",
    c: 2,
    d: "#92ccea"
}, {
    n: "chopsticks",
    k: [507],
    s: "🥢",
    c: 2,
    d: "#bd5656"
}, {
    n: "knife_fork_plate",
    k: [507, 1084, 1085, 1002, 1086, 1087],
    s: "🍽️",
    c: 2,
    d: "#ced2d5"
}, {
    n: "fork_and_knife",
    k: [1088, 508],
    s: "🍴",
    c: 2,
    d: "#909aa2"
}, {
    n: "spoon",
    k: [1088, 508, 1089],
    s: "🥄",
    c: 2,
    d: "#747b82"
}, {
    n: "hocho",
    k: [1090, 508, 1091, 1088, 1092],
    s: "🔪",
    c: 2,
    d: "#b7b9b9"
}, {
    n: "jar",
    k: [1056, 1093],
    s: "🫙",
    c: 2,
    d: "#b4b4b4"
}, {
    n: "amphora",
    k: [1094, 1095],
    s: "🏺",
    c: 2,
    d: "#ad7048"
}, {
    n: "jack_o_lantern",
    k: [1096, 1097, 1098, 290, 1099, 1100, 273, 934],
    s: "🎃",
    c: 3,
    d: "#ea950c"
}, {
    n: "christmas_tree",
    k: [600, 1101, 1102, 601, 195],
    s: "🎄",
    c: 3,
    d: "#446f41"
}, {
    n: "fireworks",
    k: [1103, 600, 1104, 1105],
    s: "🎆",
    c: 3,
    d: "#463058"
}, {
    n: "sparkler",
    k: [1106, 151, 1107],
    s: "🎇",
    c: 3,
    d: "#c8a88a"
}, {
    n: "firecracker",
    k: [1108, 782, 784, 785, 1109],
    s: "🧨",
    c: 3,
    d: "#b31c10"
}, {
    n: "sparkles",
    k: [1106, 1107, 1110, 201, 359, 339, 611],
    s: "✨",
    c: 3,
    d: "#fac74b"
}, {
    n: "balloon",
    k: [999, 195, 1111, 810],
    s: "🎈",
    c: 3,
    d: "#e0454c"
}, {
    n: "tada",
    k: [1112, 1105, 1111, 611, 810, 195],
    s: "🎉",
    c: 3,
    d: "#cc9049"
}, {
    n: "confetti_ball",
    k: [600, 999, 1111, 810],
    s: "🎊",
    c: 3,
    d: "#e69260"
}, {
    n: "tanabata_tree",
    k: [929, 752, 1113, 202],
    s: "🎋",
    c: 3,
    d: "#6d8f2a"
}, {
    n: "bamboo",
    k: [1114, 929, 752, 933, 1115],
    s: "🎍",
    c: 3,
    d: "#b7a75c"
}, {
    n: "dolls",
    k: [1116, 1117],
    s: "🎎",
    c: 3,
    d: "#60475d"
}, {
    n: "flags",
    k: [1118, 905, 287, 1119, 1120],
    s: "🎏",
    c: 3,
    d: "#c0864f"
}, {
    n: "wind_chime",
    k: [752, 1121, 860, 1122],
    s: "🎐",
    c: 3,
    d: "#cfd6dd"
}, {
    n: "rice_scene",
    k: [1028, 1123, 1103, 1030, 1124, 1125],
    s: "🎑",
    c: 3,
    d: "#b8bdb8"
}, {
    n: "red_envelope",
    k: [757],
    s: "🧧",
    c: 3,
    d: "#d32f2d"
}, {
    n: "ribbon",
    k: [764, 480, 437, 1126],
    s: "🎀",
    c: 3,
    d: "#de759a"
}, {
    n: "gift",
    k: [1127, 1111, 602, 601],
    s: "🎁",
    c: 3,
    d: "#c65f24"
}, {
    n: "reminder_ribbon",
    k: [656, 1128, 383, 1129],
    s: "🎗️",
    c: 3,
    d: "#efbb16"
}, {
    n: "admission_tickets",
    k: [656, 1130, 1131],
    s: "🎟️",
    c: 3,
    d: "#ed6f7d"
}, {
    n: "ticket",
    k: [1132, 1130, 781],
    s: "🎫",
    c: 3,
    d: "#d5cd6c"
}, {
    n: "medal",
    k: [1133, 1134, 1135],
    s: "🎖️",
    c: 3,
    d: "#dbb24c"
}, {
    n: "trophy",
    k: [1136, 1133, 1137, 1138, 1139, 1140],
    s: "🏆",
    c: 3,
    d: "#b87b14"
}, {
    n: "sports_medal",
    k: [1133, 1134],
    s: "🏅",
    c: 3,
    d: "#e4c155"
}, {
    n: "first_place_medal",
    k: [1141, 1133, 1134],
    s: "🥇",
    c: 3,
    d: "#ebb82f"
}, {
    n: "second_place_medal",
    k: [1142, 1133],
    s: "🥈",
    c: 3,
    d: "#a6a2a4"
}, {
    n: "third_place_medal",
    k: [1143, 1133],
    s: "🥉",
    c: 3,
    d: "#a64f1c"
}, {
    n: "soccer",
    k: [656, 1144],
    s: "⚽",
    c: 3,
    d: "#d3d3d3"
}, {
    n: "baseball",
    k: [656, 1145],
    s: "⚾",
    c: 3,
    d: "#cbc1bd"
}, {
    n: "softball",
    k: [656, 1145],
    s: "🥎",
    c: 3,
    d: "#dbdf35"
}, {
    n: "basketball",
    k: [656, 1145, 1146],
    s: "🏀",
    c: 3,
    d: "#d3743a"
}, {
    n: "volleyball",
    k: [656, 1145],
    s: "🏐",
    c: 3,
    d: "#bebebe"
}, {
    n: "football",
    k: [656, 1145, 1147],
    s: "🏈",
    c: 3,
    d: "#ae613e"
}, {
    n: "rugby_football",
    k: [656, 749],
    s: "🏉",
    c: 3,
    d: "#c68e44"
}, {
    n: "tennis",
    k: [656, 1145, 166],
    s: "🎾",
    c: 3,
    d: "#bdd31f"
}, {
    n: "flying_disc",
    k: [656, 1148, 1149],
    s: "🥏",
    c: 3,
    d: "#3c7fb8"
}, {
    n: "bowling",
    k: [656, 641, 300],
    s: "🎳",
    c: 3,
    d: "#b9b2ae"
}, {
    n: "cricket_bat_and_ball",
    k: [1150, 75, 1151, 656],
    s: "🏏",
    c: 3,
    d: "#dfa93b"
}, {
    n: "field_hockey_stick_and_ball",
    k: [1152, 75, 1151, 656],
    s: "🏑",
    c: 3,
    d: "#a68541"
}, {
    n: "ice_hockey_stick_and_puck",
    k: [1152, 75, 1153, 656],
    s: "🏒",
    c: 3,
    d: "#c5a28e"
}, {
    n: "lacrosse",
    k: [656, 1151, 1152],
    s: "🥍",
    c: 3,
    d: "#586775"
}, {
    n: "table_tennis_paddle_and_ball",
    k: [1154, 1155, 1156, 75, 1151, 656, 1157],
    s: "🏓",
    c: 3,
    d: "#e5493a"
}, {
    n: "badminton_racquet_and_shuttlecock",
    k: [1158, 75, 1159, 656],
    s: "🏸",
    c: 3,
    d: "#c0b188"
}, {
    n: "boxing_glove",
    k: [656, 1160],
    s: "🥊",
    c: 3,
    d: "#b93f3f"
}, {
    n: "martial_arts_uniform",
    k: [1161, 1162, 1163],
    s: "🥋",
    c: 3,
    d: "#cdcac9"
}, {
    n: "goal_net",
    k: [656],
    s: "🥅",
    c: 3,
    d: "#a03433"
}, {
    n: "golf",
    k: [1164, 656, 519, 202],
    s: "⛳",
    c: 3,
    d: "#6aac39"
}, {
    n: "ice_skate",
    k: [656],
    s: "⛸️",
    c: 3,
    d: "#bbb9b9"
}, {
    n: "fishing_pole_and_fish",
    k: [75, 905, 507, 657, 202],
    s: "🎣",
    c: 3,
    d: "#567397"
}, {
    n: "diving_mask",
    k: [655, 669],
    s: "🤿",
    c: 3,
    d: "#50463e"
}, {
    n: "running_shirt_with_sash",
    k: [53, 1165, 300, 1166],
    s: "🎽",
    c: 3,
    d: "#10a9d5"
}, {
    n: "ski",
    k: [1167, 656, 665, 157, 666],
    s: "🎿",
    c: 3,
    d: "#3e92a1"
}, {
    n: "sled",
    k: [1168, 1169, 1170],
    s: "🛷",
    c: 3,
    d: "#b62727"
}, {
    n: "curling_stone",
    k: [656],
    s: "🥌",
    c: 3,
    d: "#585250"
}, {
    n: "dart",
    k: [1171, 1172, 369, 298, 300, 1173, 1174],
    s: "🎯",
    c: 3,
    d: "#ae2a2a"
}, {
    n: "yo-yo",
    k: [1175, 1116],
    s: "🪀",
    c: 3,
    d: "#4cab20"
}, {
    n: "kite",
    k: [792, 541],
    s: "🪁",
    c: 3,
    d: "#3e61ae"
}, {
    n: "8ball",
    k: [1176, 676, 1177, 1151, 657, 298, 664, 611],
    s: "🎱",
    c: 3,
    d: "#363636"
}, {
    n: "crystal_ball",
    k: [1178, 999, 611, 810, 1179, 1180],
    s: "🔮",
    c: 3,
    d: "#a35ba2"
}, {
    n: "magic_wand",
    k: [1181, 571],
    s: "🪄",
    c: 3,
    d: "#c3b682"
}, {
    n: "nazar_amulet",
    k: [1182, 1183],
    s: "🧿",
    c: 3,
    d: "#102db7"
}, {
    n: "hamsa",
    k: [1184, 1185],
    s: "🪬",
    c: 3,
    d: "#384a79"
}, {
    n: "video_game",
    k: [300, 1186, 1187, 1188],
    s: "🎮",
    c: 3,
    d: "#4a4943"
}, {
    n: "joystick",
    k: [298, 300],
    s: "🕹️",
    c: 3,
    d: "#474348"
}, {
    n: "slot_machine",
    k: [1189, 831, 1190, 950, 664, 1191],
    s: "🎰",
    c: 3,
    d: "#ad9f96"
}, {
    n: "game_die",
    k: [1192, 1193, 1194, 300, 664],
    s: "🎲",
    c: 3,
    d: "#bfbfbf"
}, {
    n: "jigsaw",
    k: [1195, 1196],
    s: "🧩",
    c: 3,
    d: "#8fce75"
}, {
    n: "teddy_bear",
    k: [1197, 1198],
    s: "🧸",
    c: 3,
    d: "#af8040"
}, {
    n: "pinata",
    k: [1199, 1054, 195],
    s: "🪅",
    c: 3,
    d: "#9ea678"
}, {
    n: "mirror_ball",
    k: [1178, 1200, 999],
    s: "🪩",
    c: 3,
    d: "#b7bbbe"
}, {
    n: "nesting_dolls",
    k: [1201, 1116],
    s: "🪆",
    c: 3,
    d: "#a05e36"
}, {
    n: "spades",
    k: [1202, 1203, 1204, 1205, 611],
    s: "♠️",
    c: 3,
    d: "#2a2a2a"
}, {
    n: "hearts",
    k: [1206, 1203, 1204, 611, 1205],
    s: "♥️",
    c: 3,
    d: "#bf1919"
}, {
    n: "diamonds",
    k: [1207, 1203, 1204, 611, 1205],
    s: "♦️",
    c: 3,
    d: "#d61919"
}, {
    n: "clubs",
    k: [1208, 1203, 1204, 611, 1205],
    s: "♣️",
    c: 3,
    d: "#292929"
}, {
    n: "chess_pawn",
    k: [1209],
    s: "♟️",
    c: 3,
    d: "#2a2a2a"
}, {
    n: "black_joker",
    k: [1210, 1203, 1204, 298, 300, 611],
    s: "🃏",
    c: 3,
    d: "#dfd5ca"
}, {
    n: "mahjong",
    k: [298, 300, 583, 1211],
    s: "🀄",
    c: 3,
    d: "#c8b7a2"
}, {
    n: "flower_playing_cards",
    k: [298, 1212, 174],
    s: "🎴",
    c: 3,
    d: "#583635"
}, {
    n: "performing_arts",
    k: [1213, 1018, 1214],
    s: "🎭",
    c: 3,
    d: "#af6035"
}, {
    n: "frame_with_picture",
    k: [1215, 53, 1216],
    s: "🖼️",
    c: 3,
    d: "#c5b537"
}, {
    n: "art",
    k: [1217, 1218, 1219, 538, 1220],
    s: "🎨",
    c: 3,
    d: "#cc963b"
}, {
    n: "thread",
    k: [1221, 1222, 1223, 1224],
    s: "🧵",
    c: 3,
    d: "#1b6a92"
}, {
    n: "sewing_needle",
    k: [1225],
    s: "🪡",
    c: 3,
    d: "#2379aa"
}, {
    n: "yarn",
    k: [1151, 1226, 1227],
    s: "🧶",
    c: 3,
    d: "#ce540c"
}, {
    n: "knot",
    k: [1228, 1229],
    s: "🪢",
    c: 3,
    d: "#1c448a"
}, {
    n: "earth_africa",
    k: [1230, 1231, 1232, 1233, 1234],
    s: "🌍",
    c: 4,
    d: "#446ba6"
}, {
    n: "earth_americas",
    k: [1231, 1233, 1235, 1234],
    s: "🌎",
    c: 4,
    d: "#3e63a2"
}, {
    n: "earth_asia",
    k: [1124, 1231, 867, 1233, 1236, 1234],
    s: "🌏",
    c: 4,
    d: "#3c5d9d"
}, {
    n: "globe_with_meridians",
    k: [1237, 1234, 1233, 1238, 1239, 1240],
    s: "🌐",
    c: 4,
    d: "#6dbbd8"
}, {
    n: "world_map",
    k: [1241, 349],
    s: "🗺️",
    c: 4,
    d: "#75b1ca"
}, {
    n: "japan",
    k: [1242, 1243, 287, 1124],
    s: "🗾",
    c: 4,
    d: "#71a8e5"
}, {
    n: "compass",
    k: [1244, 1245, 1246],
    s: "🧭",
    c: 4,
    d: "#bfc0c4"
}, {
    n: "snow_capped_mountain",
    k: [666, 1247, 1103, 752, 1248, 665, 157],
    s: "🏔️",
    c: 4,
    d: "#5f6e52"
}, {
    n: "mountain",
    k: [1103, 752, 1248],
    s: "⛰️",
    c: 4,
    d: "#5b6b57"
}, {
    n: "volcano",
    k: [1103, 752, 1249],
    s: "🌋",
    c: 4,
    d: "#ac7a53"
}, {
    n: "mount_fuji",
    k: [1103, 1250, 752, 287],
    s: "🗻",
    c: 4,
    d: "#4a556a"
}, {
    n: "camping",
    k: [1103, 1251, 1252],
    s: "🏕️",
    c: 4,
    d: "#5b6f28"
}, {
    n: "beach_with_umbrella",
    k: [1253, 202, 1254, 1255, 940],
    s: "🏖️",
    c: 4,
    d: "#cadfb3"
}, {
    n: "desert",
    k: [1103, 1256, 1257],
    s: "🏜️",
    c: 4,
    d: "#c2662d"
}, {
    n: "desert_island",
    k: [1103, 941, 940],
    s: "🏝️",
    c: 4,
    d: "#74903d"
}, {
    n: "national_park",
    k: [1103, 1248, 752],
    s: "🏞️",
    c: 4,
    d: "#68b0b7"
}, {
    n: "stadium",
    k: [1103, 1138, 656, 1130, 1258],
    s: "🏟️",
    c: 4,
    d: "#a9816e"
}, {
    n: "classical_building",
    k: [1217, 1259, 1260],
    s: "🏛️",
    c: 4,
    d: "#bcb498"
}, {
    n: "building_construction",
    k: [569, 1261, 1262],
    s: "🏗️",
    c: 4,
    d: "#dfc283"
}, {
    n: "bricks",
    k: [1263],
    s: "🧱",
    c: 4,
    d: "#752c16"
}, {
    n: "rock",
    k: [1264],
    s: "🪨",
    c: 4,
    d: "#5a5a56"
}, {
    n: "wood",
    k: [752, 1265, 1266],
    s: "🪵",
    c: 4,
    d: "#705644"
}, {
    n: "hut",
    k: [939, 1267],
    s: "🛖",
    c: 4,
    d: "#7d6a52"
}, {
    n: "house_buildings",
    k: [939, 1268, 1103],
    s: "🏘️",
    c: 4,
    d: "#b6a89a"
}, {
    n: "derelict_house_building",
    k: [1269, 1270, 1271, 770],
    s: "🏚️",
    c: 4,
    d: "#dac49d"
}, {
    n: "house",
    k: [1269, 723],
    s: "🏠",
    c: 4,
    d: "#c2b399"
}, {
    n: "house_with_garden",
    k: [723, 929, 752],
    s: "🏡",
    c: 4,
    d: "#82914e"
}, {
    n: "office",
    k: [1272, 1273],
    s: "🏢",
    c: 4,
    d: "#9fa8ab"
}, {
    n: "post_office",
    k: [1269, 755, 1274],
    s: "🏣",
    c: 4,
    d: "#cdbea4"
}, {
    n: "european_post_office",
    k: [1275, 1269, 754],
    s: "🏤",
    c: 4,
    d: "#b6a48e"
}, {
    n: "hospital",
    k: [1269, 421, 1276, 493],
    s: "🏥",
    c: 4,
    d: "#afaba8"
}, {
    n: "bank",
    k: [1269, 80, 1277, 1278, 519, 1279],
    s: "🏦",
    c: 4,
    d: "#9ea17f"
}, {
    n: "hotel",
    k: [1269, 1280, 1281],
    s: "🏨",
    c: 4,
    d: "#cebdab"
}, {
    n: "love_hotel",
    k: [10, 44, 716],
    s: "🏩",
    c: 4,
    d: "#d29baf"
}, {
    n: "convenience_store",
    k: [1269, 1282, 1283],
    s: "🏪",
    c: 4,
    d: "#708783"
}, {
    n: "school",
    k: [1269, 1284, 1285, 497, 1286],
    s: "🏫",
    c: 4,
    d: "#c1ac8b"
}, {
    n: "department_store",
    k: [1269, 1282, 1287],
    s: "🏬",
    c: 4,
    d: "#74828a"
}, {
    n: "factory",
    k: [1269, 1288, 1289, 797],
    s: "🏭",
    c: 4,
    d: "#a48b74"
}, {
    n: "japanese_castle",
    k: [1103, 1269],
    s: "🏯",
    c: 4,
    d: "#5a5459"
}, {
    n: "european_castle",
    k: [1275, 1269, 570, 1260],
    s: "🏰",
    c: 4,
    d: "#9c9a92"
}, {
    n: "wedding",
    k: [43, 10, 44, 587, 588, 1290, 590],
    s: "💒",
    c: 4,
    d: "#bb7193"
}, {
    n: "tokyo_tower",
    k: [1103, 287],
    s: "🗼",
    c: 4,
    d: "#9c2920"
}, {
    n: "statue_of_liberty",
    k: [1291, 1292],
    s: "🗽",
    c: 4,
    d: "#619b97"
}, {
    n: "church",
    k: [1269, 1184, 1293],
    s: "⛪",
    c: 4,
    d: "#c1bfc2"
}, {
    n: "mosque",
    k: [1294, 1295, 1296],
    s: "🕌",
    c: 4,
    d: "#dbaf8a"
}, {
    n: "hindu_temple",
    k: [1184],
    s: "🛕",
    c: 4,
    d: "#c07853"
}, {
    n: "synagogue",
    k: [1297, 1295, 1298, 1299],
    s: "🕍",
    c: 4,
    d: "#c4a277"
}, {
    n: "shinto_shrine",
    k: [1298, 1030, 1300],
    s: "⛩️",
    c: 4,
    d: "#d83e19"
}, {
    n: "kaaba",
    k: [1301, 1302, 1294],
    s: "🕋",
    c: 4,
    d: "#34322e"
}, {
    n: "fountain",
    k: [1103, 202, 673, 1303],
    s: "⛲",
    c: 4,
    d: "#99b7ba"
}, {
    n: "tent",
    k: [1103, 1304, 1251],
    s: "⛺",
    c: 4,
    d: "#e25f34"
}, {
    n: "foggy",
    k: [1103, 1250],
    s: "🌁",
    c: 4,
    d: "#c8d6de"
}, {
    n: "night_with_stars",
    k: [1305, 1306, 1307],
    s: "🌃",
    c: 4,
    d: "#3e6885"
}, {
    n: "cityscape",
    k: [1103, 151, 1308, 1309],
    s: "🏙️",
    c: 4,
    d: "#afc9df"
}, {
    n: "sunrise_over_mountains",
    k: [1310, 1101, 1103],
    s: "🌄",
    c: 4,
    d: "#c1a19e"
}, {
    n: "sunrise",
    k: [1311, 1310, 1101, 1103],
    s: "🌅",
    c: 4,
    d: "#c08965"
}, {
    n: "city_sunset",
    k: [1306, 1212, 1103, 1305, 1312, 1268],
    s: "🌆",
    c: 4,
    d: "#d39249"
}, {
    n: "city_sunrise",
    k: [1306, 1313, 1103, 339, 1311, 1314],
    s: "🌇",
    c: 4,
    d: "#e49741"
}, {
    n: "bridge_at_night",
    k: [1103, 1315],
    s: "🌉",
    c: 4,
    d: "#4a4851"
}, {
    n: "hotsprings",
    k: [1316, 1317, 1256, 627],
    s: "♨️",
    c: 4,
    d: "#d70a0a"
}, {
    n: "carousel_horse",
    k: [1103, 1104],
    s: "🎠",
    c: 4,
    d: "#ab947e"
}, {
    n: "playground_slide",
    k: [641, 1318],
    s: "🛝",
    c: 4,
    d: "#4d66a7"
}, {
    n: "ferris_wheel",
    k: [1103, 1104, 1319],
    s: "🎡",
    c: 4,
    d: "#a05159"
}, {
    n: "roller_coaster",
    k: [1104, 1320, 1103, 641],
    s: "🎢",
    c: 4,
    d: "#caa030"
}, {
    n: "barber",
    k: [458, 1321, 1322],
    s: "💈",
    c: 4,
    d: "#af9da8"
}, {
    n: "circus_tent",
    k: [600, 1104, 999],
    s: "🎪",
    c: 4,
    d: "#d2a398"
}, {
    n: "steam_locomotive",
    k: [123, 687, 1323, 1324],
    s: "🚂",
    c: 4,
    d: "#a7513f"
}, {
    n: "railway_car",
    k: [687, 1323],
    s: "🚃",
    c: 4,
    d: "#7f8e7f"
}, {
    n: "bullettrain_side",
    k: [1325, 135, 318, 1326, 687, 1323],
    s: "🚄",
    c: 4,
    d: "#8a9297"
}, {
    n: "bullettrain_front",
    k: [1325, 879, 687, 1323, 1326, 794, 1327, 1328],
    s: "🚅",
    c: 4,
    d: "#5b6371"
}, {
    n: "train2",
    k: [1329, 687, 1323],
    s: "🚆",
    c: 4,
    d: "#667783"
}, {
    n: "metro",
    k: [687, 176, 760, 1330, 1331, 1332],
    s: "🚇",
    c: 4,
    d: "#434646"
}, {
    n: "light_rail",
    k: [687, 1323],
    s: "🚈",
    c: 4,
    d: "#41536c"
}, {
    n: "station",
    k: [687, 1323, 1327],
    s: "🚉",
    c: 4,
    d: "#555e5f"
}, {
    n: "tram",
    k: [687, 1323],
    s: "🚊",
    c: 4,
    d: "#565c5b"
}, {
    n: "monorail",
    k: [687, 1323],
    s: "🚝",
    c: 4,
    d: "#566274"
}, {
    n: "mountain_railway",
    k: [687, 1323],
    s: "🚞",
    c: 4,
    d: "#a5aa95"
}, {
    n: "train",
    k: [1324, 687, 1323, 1333, 1327, 1328],
    s: "🚋",
    c: 4,
    d: "#54665e"
}, {
    n: "bus",
    k: [1334, 1323, 687],
    s: "🚌",
    c: 4,
    d: "#b4b686"
}, {
    n: "oncoming_bus",
    k: [1323, 687],
    s: "🚍",
    c: 4,
    d: "#657f84"
}, {
    n: "trolleybus",
    k: [1335, 687, 1323],
    s: "🚎",
    c: 4,
    d: "#3c688e"
}, {
    n: "minibus",
    k: [1323, 1334, 687],
    s: "🚐",
    c: 4,
    d: "#a0b4b2"
}, {
    n: "ambulance",
    k: [421, 554, 492],
    s: "🚑",
    c: 4,
    d: "#cbcdce"
}, {
    n: "fire_engine",
    k: [687, 1336, 1323],
    s: "🚒",
    c: 4,
    d: "#d23636"
}, {
    n: "police_car",
    k: [1323, 1336, 687, 501, 551, 552],
    s: "🚓",
    c: 4,
    d: "#444d50"
}, {
    n: "oncoming_police_car",
    k: [1323, 501, 551, 552, 554],
    s: "🚔",
    c: 4,
    d: "#444f55"
}, {
    n: "taxi",
    k: [1337, 1323, 1336, 687],
    s: "🚕",
    c: 4,
    d: "#a9994c"
}, {
    n: "oncoming_taxi",
    k: [1323, 1336, 1337],
    s: "🚖",
    c: 4,
    d: "#605438"
}, {
    n: "car",
    k: [1334, 174, 687, 1323],
    s: "🚗",
    c: 4,
    d: "#cd302b"
}, {
    n: "oncoming_automobile",
    k: [1334, 1323, 687],
    s: "🚘",
    c: 4,
    d: "#bf312d"
}, {
    n: "blue_car",
    k: [176, 1334, 655, 1338, 687],
    s: "🚙",
    c: 4,
    d: "#4fa4c7"
}, {
    n: "pickup_truck",
    k: [1334, 687],
    s: "🛻",
    c: 4,
    d: "#3c6164"
}, {
    n: "truck",
    k: [1336, 687],
    s: "🚚",
    c: 4,
    d: "#c89741"
}, {
    n: "articulated_lorry",
    k: [1323, 1336, 687, 1339],
    s: "🚛",
    c: 4,
    d: "#24632b"
}, {
    n: "tractor",
    k: [1323, 1334, 1340, 1341],
    s: "🚜",
    c: 4,
    d: "#43402f"
}, {
    n: "racing_car",
    k: [656, 639, 794, 1342, 1343],
    s: "🏎️",
    c: 4,
    d: "#b83b3d"
}, {
    n: "racing_motorcycle",
    k: [1344, 639, 656, 794],
    s: "🏍️",
    c: 4,
    d: "#464949"
}, {
    n: "motor_scooter",
    k: [1323, 1345, 1346],
    s: "🛵",
    c: 4,
    d: "#b7994d"
}, {
    n: "manual_wheelchair",
    k: [410],
    s: "🦽",
    c: 4,
    d: "#343435"
}, {
    n: "motorized_wheelchair",
    k: [410],
    s: "🦼",
    c: 4,
    d: "#3b2d2d"
}, {
    n: "auto_rickshaw",
    k: [630, 687],
    s: "🛺",
    c: 4,
    d: "#437240"
}, {
    n: "bike",
    k: [684, 656, 250, 685],
    s: "🚲",
    c: 4,
    d: "#485462"
}, {
    n: "scooter",
    k: [411, 1323, 1347],
    s: "🛴",
    c: 4,
    d: "#28343d"
}, {
    n: "skateboard",
    k: [1348],
    s: "🛹",
    c: 4,
    d: "#555245"
}, {
    n: "roller_skate",
    k: [1349, 656],
    s: "🛼",
    c: 4,
    d: "#72bcbe"
}, {
    n: "busstop",
    k: [1350, 687, 1351],
    s: "🚏",
    c: 4,
    d: "#aea8a1"
}, {
    n: "motorway",
    k: [1352, 1353, 1354, 1355],
    s: "🛣️",
    c: 4,
    d: "#72915e"
}, {
    n: "railway_track",
    k: [1324, 687],
    s: "🛤️",
    c: 4,
    d: "#685e39"
}, {
    n: "oil_drum",
    k: [1356],
    s: "🛢️",
    c: 4,
    d: "#913c3c"
}, {
    n: "fuelpump",
    k: [1357, 254, 1358, 1359],
    s: "⛽",
    c: 4,
    d: "#ba3b40"
}, {
    n: "wheel",
    k: [1334, 1360],
    s: "🛞",
    c: 4,
    d: "#3d3f40"
}, {
    n: "rotating_light",
    k: [1361, 1362, 554, 1363, 1364, 1365, 1366, 501, 551],
    s: "🚨",
    c: 4,
    d: "#d25c4f"
}, {
    n: "traffic_light",
    k: [687, 1367],
    s: "🚥",
    c: 4,
    d: "#3e4334"
}, {
    n: "vertical_traffic_light",
    k: [687, 1368],
    s: "🚦",
    c: 4,
    d: "#424637"
}, {
    n: "octagonal_sign",
    k: [1369],
    s: "🛑",
    c: 4,
    d: "#dd3c18"
}, {
    n: "construction",
    k: [569, 1262, 1370, 1371],
    s: "🚧",
    c: 4,
    d: "#c8ab42"
}, {
    n: "anchor",
    k: [674, 1372, 618, 671],
    s: "⚓",
    c: 4,
    d: "#5c5d62"
}, {
    n: "ring_buoy",
    k: [1308, 1373, 1374],
    s: "🛟",
    c: 4,
    d: "#b5aaa5"
}, {
    n: "boat",
    k: [671, 674, 202, 687, 673, 1375],
    s: "⛵",
    c: 4,
    d: "#7a462f"
}, {
    n: "canoe",
    k: [671, 1156, 673, 674],
    s: "🛶",
    c: 4,
    d: "#277c29"
}, {
    n: "speedboat",
    k: [674, 687, 1323, 202],
    s: "🚤",
    c: 4,
    d: "#c58b29"
}, {
    n: "passenger_ship",
    k: [1376, 1377, 1372],
    s: "🛳️",
    c: 4,
    d: "#b8c0c4"
}, {
    n: "ferry",
    k: [671, 674, 1376],
    s: "⛴️",
    c: 4,
    d: "#63719c"
}, {
    n: "motor_boat",
    k: [674],
    s: "🛥️",
    c: 4,
    d: "#aabcc4"
}, {
    n: "ship",
    k: [687, 1378, 1379],
    s: "🚢",
    c: 4,
    d: "#c2b8ae"
}, {
    n: "airplane",
    k: [1323, 687, 1380, 541],
    s: "✈️",
    c: 4,
    d: "#3f86a6"
}, {
    n: "small_airplane",
    k: [1380, 687, 541, 1323],
    s: "🛩️",
    c: 4,
    d: "#b4babd"
}, {
    n: "airplane_departure",
    k: [1381, 1380, 1382],
    s: "🛫",
    c: 4,
    d: "#5e6e74"
}, {
    n: "airplane_arriving",
    k: [1383, 1381, 1380, 1384],
    s: "🛬",
    c: 4,
    d: "#5e7793"
}, {
    n: "parachute",
    k: [541, 1385],
    s: "🪂",
    c: 4,
    d: "#b04921"
}, {
    n: "seat",
    k: [1386, 543, 1360, 1387, 1380, 541],
    s: "💺",
    c: 4,
    d: "#636d8b"
}, {
    n: "helicopter",
    k: [687, 1323, 541],
    s: "🚁",
    c: 4,
    d: "#ad6665"
}, {
    n: "suspension_railway",
    k: [1323, 687],
    s: "🚟",
    c: 4,
    d: "#939994"
}, {
    n: "mountain_cableway",
    k: [687, 1323, 1167],
    s: "🚠",
    c: 4,
    d: "#7e5654"
}, {
    n: "aerial_tramway",
    k: [687, 1323, 1167],
    s: "🚡",
    c: 4,
    d: "#585d5c"
}, {
    n: "satellite",
    k: [1274, 1388, 1389, 1390, 1391, 1392],
    s: "🛰️",
    c: 4,
    d: "#434f75"
}, {
    n: "rocket",
    k: [1393, 674, 1394, 1391, 295, 296, 541],
    s: "🚀",
    c: 4,
    d: "#b9a375"
}, {
    n: "flying_saucer",
    k: [687, 1323, 1395],
    s: "🛸",
    c: 4,
    d: "#546869"
}, {
    n: "bellhop_bell",
    k: [1396],
    s: "🛎️",
    c: 4,
    d: "#967438"
}, {
    n: "luggage",
    k: [1397, 1328],
    s: "🧳",
    c: 4,
    d: "#4c3424"
}, {
    n: "hourglass",
    k: [1398, 1399, 1400, 1401, 1402, 778, 779, 780],
    s: "⌛",
    c: 4,
    d: "#c4bab4"
}, {
    n: "hourglass_flowing_sand",
    k: [1403, 1255, 1401, 1399, 1404],
    s: "⏳",
    c: 4,
    d: "#baaea5"
}, {
    n: "watch",
    k: [1399, 1405],
    s: "⌚",
    c: 4,
    d: "#333332"
}, {
    n: "alarm_clock",
    k: [1399, 1406],
    s: "⏰",
    c: 4,
    d: "#d7bdbe"
}, {
    n: "stopwatch",
    k: [1399, 1407],
    s: "⏱️",
    c: 4,
    d: "#d0d0d2"
}, {
    n: "timer_clock",
    k: [1408],
    s: "⏲️",
    c: 4,
    d: "#cccccb"
}, {
    n: "mantelpiece_clock",
    k: [1399],
    s: "🕰️",
    c: 4,
    d: "#7a503c"
}, {
    n: "clock12",
    k: [1409, 1097, 1400, 1399, 1410, 1411, 1412, 1413, 1414, 1415],
    s: "🕛",
    c: 4,
    d: "#d6d8d9"
}, {
    n: "clock1230",
    k: [1416, 1417, 1418, 1399, 1413, 1414, 1415],
    s: "🕧",
    c: 4,
    d: "#d5d7d8"
}, {
    n: "clock1",
    k: [1419, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕐",
    c: 4,
    d: "#d5d7d8"
}, {
    n: "clock130",
    k: [1420, 73, 1418, 1399, 1413, 1414, 1415],
    s: "🕜",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock2",
    k: [1421, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕑",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock230",
    k: [1422, 336, 1418, 1399, 1413, 1414, 1415],
    s: "🕝",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock3",
    k: [1423, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕒",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock330",
    k: [1424, 1425, 1418, 1399, 1413, 1414, 1415],
    s: "🕞",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock4",
    k: [1426, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕓",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock430",
    k: [1427, 1428, 1418, 1399, 1413, 1414, 1415],
    s: "🕟",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock5",
    k: [1429, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕔",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock530",
    k: [1430, 319, 1418, 1399, 1413, 1414, 1415],
    s: "🕠",
    c: 4,
    d: "#d5d7d8"
}, {
    n: "clock6",
    k: [1431, 1097, 1400, 1399, 1413, 1414, 1415, 1314, 1432],
    s: "🕕",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock630",
    k: [1433, 1434, 1418, 1399, 1413, 1414, 1415],
    s: "🕡",
    c: 4,
    d: "#d6d8da"
}, {
    n: "clock7",
    k: [1435, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕖",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock730",
    k: [1436, 1437, 1418, 1399, 1413, 1414, 1415],
    s: "🕢",
    c: 4,
    d: "#d5d7d8"
}, {
    n: "clock8",
    k: [1438, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕗",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock830",
    k: [1439, 1440, 1418, 1399, 1413, 1414, 1415],
    s: "🕣",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock9",
    k: [1441, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕘",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock930",
    k: [1442, 1443, 1418, 1399, 1413, 1414, 1415],
    s: "🕤",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock10",
    k: [1444, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕙",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock1030",
    k: [1445, 1446, 1418, 1399, 1413, 1414, 1415],
    s: "🕥",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "clock11",
    k: [1447, 1097, 1400, 1399, 1413, 1414, 1415],
    s: "🕚",
    c: 4,
    d: "#d5d7d8"
}, {
    n: "clock1130",
    k: [1448, 1449, 1418, 1399, 1413, 1414, 1415],
    s: "🕦",
    c: 4,
    d: "#d5d6d8"
}, {
    n: "new_moon",
    k: [752, 616, 1450, 296, 151, 1305, 1451],
    s: "🌑",
    c: 4,
    d: "#2b3a50"
}, {
    n: "waxing_crescent_moon",
    k: [752, 616, 1450, 296, 151, 1305, 1451],
    s: "🌒",
    c: 4,
    d: "#2f3b4c"
}, {
    n: "first_quarter_moon",
    k: [752, 616, 1450, 296, 151, 1305, 1451],
    s: "🌓",
    c: 4,
    d: "#384252"
}, {
    n: "moon",
    k: [752, 151, 1312, 1452, 616, 1450, 296, 1305, 1451],
    s: "🌔",
    c: 4,
    d: "#f2d947"
}, {
    n: "full_moon",
    k: [752, 935, 616, 1450, 296, 151, 1305, 1451],
    s: "🌕",
    c: 4,
    d: "#f5d934"
}, {
    n: "waning_gibbous_moon",
    k: [752, 616, 1450, 296, 151, 1305, 1451, 1453],
    s: "🌖",
    c: 4,
    d: "#f2d63f"
}, {
    n: "last_quarter_moon",
    k: [752, 616, 1450, 296, 151, 1305, 1451],
    s: "🌗",
    c: 4,
    d: "#36404e"
}, {
    n: "waning_crescent_moon",
    k: [752, 616, 1450, 296, 151, 1305, 1451],
    s: "🌘",
    c: 4,
    d: "#2d3847"
}, {
    n: "crescent_moon",
    k: [151, 1451, 1312, 1305, 611],
    s: "🌙",
    c: 4,
    d: "#f7d453"
}, {
    n: "new_moon_with_face",
    k: [53, 752, 616, 1450, 296, 151, 1305, 1451],
    s: "🌚",
    c: 4,
    d: "#4b5163"
}, {
    n: "first_quarter_moon_with_face",
    k: [53, 752, 616, 1450, 296, 151, 1305, 1451],
    s: "🌛",
    c: 4,
    d: "#eecd52"
}, {
    n: "last_quarter_moon_with_face",
    k: [53, 752, 616, 1450, 296, 151, 1305, 1451],
    s: "🌜",
    c: 4,
    d: "#efce52"
}, {
    n: "thermometer",
    k: [1253, 156, 17, 157],
    s: "🌡️",
    c: 4,
    d: "#dbcad1"
}, {
    n: "sunny",
    k: [1254, 1253, 752, 1454, 202, 203, 860],
    s: "☀️",
    c: 4,
    d: "#f0b62d"
}, {
    n: "full_moon_with_face",
    k: [53, 752, 616, 1450, 296, 151, 1305, 1451],
    s: "🌝",
    c: 4,
    d: "#f1d564"
}, {
    n: "sun_with_face",
    k: [752, 1311, 1312],
    s: "🌞",
    c: 4,
    d: "#f4b737"
}, {
    n: "ringed_planet",
    k: [545],
    s: "🪐",
    c: 4,
    d: "#b1a473"
}, {
    n: "star",
    k: [151, 935],
    s: "⭐",
    c: 4,
    d: "#efbd3e"
}, {
    n: "star2",
    k: [1455, 151, 786, 359, 339, 611],
    s: "🌟",
    c: 4,
    d: "#f4c53f"
}, {
    n: "stars",
    k: [1106, 151, 1103],
    s: "🌠",
    c: 4,
    d: "#51778a"
}, {
    n: "milky_way",
    k: [1103, 296, 1106],
    s: "🌌",
    c: 4,
    d: "#21344d"
}, {
    n: "cloud",
    k: [1253, 1312],
    s: "☁️",
    c: 4,
    d: "#eff2f4"
}, {
    n: "partly_sunny",
    k: [1456, 1254, 1253, 752, 1457, 1311, 934, 860],
    s: "⛅",
    c: 4,
    d: "#e3e8eb"
}, {
    n: "thunder_cloud_and_rain",
    k: [1458, 1253],
    s: "⛈️",
    c: 4,
    d: "#e2e9eb"
}, {
    n: "mostly_sunny",
    k: [1459, 1254, 1253],
    s: "🌤️",
    c: 4,
    d: "#e4e9e6"
}, {
    n: "barely_sunny",
    k: [1460, 1254, 1253],
    s: "🌥️",
    c: 4,
    d: "#e3e7e9"
}, {
    n: "partly_sunny_rain",
    k: [1456, 1254, 1253],
    s: "🌦️",
    c: 4,
    d: "#e2e7e7"
}, {
    n: "rain_cloud",
    k: [1253],
    s: "🌧️",
    c: 4,
    d: "#e0e7ec"
}, {
    n: "snow_cloud",
    k: [1253],
    s: "🌨️",
    c: 4,
    d: "#e4ebf0"
}, {
    n: "lightning",
    k: [1253, 1458],
    s: "🌩️",
    c: 4,
    d: "#e9eced"
}, {
    n: "tornado",
    k: [809, 1253, 1461, 1462],
    s: "🌪️",
    c: 4,
    d: "#b6b9c4"
}, {
    n: "fog",
    k: [1253],
    s: "🌫️",
    c: 4,
    d: "#dcdce0"
}, {
    n: "wind_blowing_face",
    k: [1463, 1464, 793],
    s: "🌬️",
    c: 4,
    d: "#d5dbe2"
}, {
    n: "cyclone",
    k: [1253, 1465, 176, 809, 1466, 1467, 1468, 1469, 1470, 1471, 1472],
    s: "🌀",
    c: 4,
    d: "#044ee2"
}, {
    n: "rainbow",
    k: [752, 1, 1473, 19, 1103, 1312, 860],
    s: "🌈",
    c: 4,
    d: "#ea5435"
}, {
    n: "closed_umbrella",
    k: [1253, 1474, 1475],
    s: "🌂",
    c: 4,
    d: "#5f4189"
}, {
    n: "umbrella",
    k: [1253, 860],
    s: "☂️",
    c: 4,
    d: "#9b4ce3"
}, {
    n: "umbrella_with_rain_drops",
    k: [1476, 1253, 860],
    s: "☔",
    c: 4,
    d: "#8266d1"
}, {
    n: "umbrella_on_ground",
    k: [1253, 202],
    s: "⛱️",
    c: 4,
    d: "#e0a068"
}, {
    n: "zap",
    k: [1477, 1458, 1253, 1478, 1479, 794],
    s: "⚡",
    c: 4,
    d: "#f5a40c"
}, {
    n: "snowflake",
    k: [665, 1480, 157, 1253, 602, 601],
    s: "❄️",
    c: 4,
    d: "#9bd6f3"
}, {
    n: "snowman",
    k: [665, 1480, 157, 1253, 602, 601, 178],
    s: "☃️",
    c: 4,
    d: "#bacdd4"
}, {
    n: "snowman_without_snow",
    k: [665, 1480, 157, 1253, 602, 601, 178],
    s: "⛄",
    c: 4,
    d: "#b6c3c8"
}, {
    n: "comet",
    k: [296],
    s: "☄️",
    c: 4,
    d: "#e67231"
}, {
    n: "fire",
    k: [17, 972, 1481],
    s: "🔥",
    c: 4,
    d: "#f86f2f"
}, {
    n: "droplet",
    k: [673, 789, 1482, 860],
    s: "💧",
    c: 4,
    d: "#1ea6e9"
}, {
    n: "ocean",
    k: [669, 618, 752, 1483, 1249],
    s: "🌊",
    c: 4,
    d: "#a3c3ce"
}, {
    n: "eyeglasses",
    k: [1484, 403, 1405, 1485, 205, 207, 206],
    s: "👓",
    c: 5,
    d: "#525855"
}, {
    n: "dark_sunglasses",
    k: [1486, 19, 201, 1405],
    s: "🕶️",
    c: 5,
    d: "#292a29"
}, {
    n: "goggles",
    k: [49, 1185, 1487],
    s: "🥽",
    c: 5,
    d: "#c4c8c8"
}, {
    n: "lab_coat",
    k: [493, 1488, 1489, 524],
    s: "🥼",
    c: 5,
    d: "#dddfe0"
}, {
    n: "safety_vest",
    k: [1185],
    s: "🦺",
    c: 5,
    d: "#c05427"
}, {
    n: "necktie",
    k: [1490, 1491, 591, 403, 1492, 519],
    s: "👔",
    c: 5,
    d: "#7aa1cd"
}, {
    n: "shirt",
    k: [1490, 1493, 900, 403, 1492, 1494, 1495],
    s: "👕",
    c: 5,
    d: "#77acdb"
}, {
    n: "jeans",
    k: [403, 1282],
    s: "👖",
    c: 5,
    d: "#465998"
}, {
    n: "scarf",
    k: [1496, 665, 1497],
    s: "🧣",
    c: 5,
    d: "#b9302b"
}, {
    n: "gloves",
    k: [305, 665, 1497],
    s: "🧤",
    c: 5,
    d: "#37ba7c"
}, {
    n: "coat",
    k: [1498],
    s: "🧥",
    c: 5,
    d: "#c99e50"
}, {
    n: "socks",
    k: [1499, 1497],
    s: "🧦",
    c: 5,
    d: "#b7a48f"
}, {
    n: "dress",
    k: [1497, 403, 1282],
    s: "👗",
    c: 5,
    d: "#34c1b2"
}, {
    n: "kimono",
    k: [1500, 403, 472, 446, 287],
    s: "👘",
    c: 5,
    d: "#e39926"
}, {
    n: "sari",
    k: [1500],
    s: "🥻",
    c: 5,
    d: "#d16713"
}, {
    n: "one-piece_swimsuit",
    k: [73, 1501, 403],
    s: "🩱",
    c: 5,
    d: "#148d91"
}, {
    n: "briefs",
    k: [1502],
    s: "🩲",
    c: 5,
    d: "#22831f"
}, {
    n: "shorts",
    k: [1502],
    s: "🩳",
    c: 5,
    d: "#e08b12"
}, {
    n: "bikini",
    k: [675, 446, 447, 437, 403, 203, 202],
    s: "👙",
    c: 5,
    d: "#ce6280"
}, {
    n: "womans_clothes",
    k: [447, 1503, 403, 1282, 1504, 446],
    s: "👚",
    c: 5,
    d: "#eb9dd1"
}, {
    n: "purse",
    k: [403, 1405, 80, 1277, 1282],
    s: "👛",
    c: 5,
    d: "#eea1c2"
}, {
    n: "handbag",
    k: [403, 1505, 1405, 1282],
    s: "👜",
    c: 5,
    d: "#a67352"
}, {
    n: "pouch",
    k: [1506, 1507, 1405, 1282],
    s: "👝",
    c: 5,
    d: "#b48c61"
}, {
    n: "shopping_bags",
    k: [1287, 1508, 1509],
    s: "🛍️",
    c: 5,
    d: "#ee65bf"
}, {
    n: "school_satchel",
    k: [956, 1510, 1284, 1285, 1507],
    s: "🎒",
    c: 5,
    d: "#c5332e"
}, {
    n: "thong_sandal",
    k: [1349, 202],
    s: "🩴",
    c: 5,
    d: "#6eaea5"
}, {
    n: "mans_shoe",
    k: [442, 1503, 403, 443],
    s: "👞",
    c: 5,
    d: "#7a4231"
}, {
    n: "athletic_shoe",
    k: [1511, 1512, 656, 1513],
    s: "👟",
    c: 5,
    d: "#aaa8a6"
}, {
    n: "hiking_boot",
    k: [1514, 1304],
    s: "🥾",
    c: 5,
    d: "#58493b"
}, {
    n: "womans_flat_shoe",
    k: [1515, 1516, 1517, 346, 1518],
    s: "🥿",
    c: 5,
    d: "#193b69"
}, {
    n: "high_heel",
    k: [318, 1519, 1520, 403, 1512, 446, 1521, 1522],
    s: "👠",
    c: 5,
    d: "#ca4034"
}, {
    n: "sandal",
    k: [447, 1503, 1512, 403, 1523, 1524],
    s: "👡",
    c: 5,
    d: "#ccac8c"
}, {
    n: "ballet_shoes",
    k: [1200],
    s: "🩰",
    c: 5,
    d: "#e1a990"
}, {
    n: "boot",
    k: [1525, 447, 1503, 1512, 403],
    s: "👢",
    c: 5,
    d: "#c8a474"
}, {
    n: "crown",
    k: [573, 1526, 1527, 570, 1528],
    s: "👑",
    c: 5,
    d: "#c6a02d"
}, {
    n: "womans_hat",
    k: [447, 1503, 403, 1405, 446, 464, 860],
    s: "👒",
    c: 5,
    d: "#c5b67d"
}, {
    n: "tophat",
    k: [1529, 611, 1530, 453, 810],
    s: "🎩",
    c: 5,
    d: "#312e2b"
}, {
    n: "mortar_board",
    k: [1531, 1348, 956, 1532, 1533, 1534, 1535, 551, 497, 1285],
    s: "🎓",
    c: 5,
    d: "#2d2c2b"
}, {
    n: "billed_cap",
    k: [1536],
    s: "🧢",
    c: 5,
    d: "#357ae5"
}, {
    n: "military_helmet",
    k: [1135, 1185],
    s: "🪖",
    c: 5,
    d: "#4a5843"
}, {
    n: "helmet_with_white_cross",
    k: [53, 219, 1537, 511, 1503, 1538, 567],
    s: "⛑️",
    c: 5,
    d: "#a2322d"
}, {
    n: "prayer_beads",
    k: [1539, 1540],
    s: "📿",
    c: 5,
    d: "#924b50"
}, {
    n: "lipstick",
    k: [446, 437, 403, 447],
    s: "💄",
    c: 5,
    d: "#c54c4e"
}, {
    n: "ring",
    k: [589, 1541, 588, 45, 1542, 403, 1543, 1544, 1545],
    s: "💍",
    c: 5,
    d: "#abb6be"
}, {
    n: "gem",
    k: [176, 1546, 1542, 1543],
    s: "💎",
    c: 5,
    d: "#69bcf4"
}, {
    n: "mute",
    k: [1547, 415, 1548, 90, 96],
    s: "🔇",
    c: 5,
    d: "#575255"
}, {
    n: "speaker",
    k: [1549, 1548, 415, 90, 1550],
    s: "🔈",
    c: 5,
    d: "#595c5f"
}, {
    n: "sound",
    k: [415, 1550],
    s: "🔉",
    c: 5,
    d: "#5f6367"
}, {
    n: "loud_sound",
    k: [1551, 415, 1552, 1553, 1550],
    s: "🔊",
    c: 5,
    d: "#5a6267"
}, {
    n: "loudspeaker",
    k: [1548, 415],
    s: "📢",
    c: 5,
    d: "#b4b5b7"
}, {
    n: "mega",
    k: [1554, 415, 1555, 1548],
    s: "📣",
    c: 5,
    d: "#8a6c23"
}, {
    n: "postal_horn",
    k: [1556, 1557],
    s: "📯",
    c: 5,
    d: "#c47b45"
}, {
    n: "bell",
    k: [415, 1558, 602, 601, 1559],
    s: "🔔",
    c: 5,
    d: "#90722d"
}, {
    n: "no_bell",
    k: [116, 415, 1548, 1547, 96, 1560],
    s: "🔕",
    c: 5,
    d: "#98742d"
}, {
    n: "musical_score",
    k: [1561, 1562, 399],
    s: "🎼",
    c: 5,
    d: "#848484"
}, {
    n: "musical_note",
    k: [775, 1563, 415],
    s: "🎵",
    c: 5,
    d: "#3d3f43"
}, {
    n: "notes",
    k: [1557, 775],
    s: "🎶",
    c: 5,
    d: "#484d53"
}, {
    n: "studio_microphone",
    k: [745, 1564, 533, 1565],
    s: "🎙️",
    c: 5,
    d: "#939aa0"
}, {
    n: "level_slider",
    k: [1566],
    s: "🎚️",
    c: 5,
    d: "#999ea1"
}, {
    n: "control_knobs",
    k: [1567],
    s: "🎛️",
    c: 5,
    d: "#a8adaf"
}, {
    n: "microphone",
    k: [415, 1557, 1568, 745, 1565],
    s: "🎤",
    c: 5,
    d: "#5b5c5b"
}, {
    n: "headphones",
    k: [1569, 1557, 775, 1570],
    s: "🎧",
    c: 5,
    d: "#cacbcb"
}, {
    n: "radio",
    k: [1274, 1557, 1571, 1572],
    s: "📻",
    c: 5,
    d: "#9f8b5c"
}, {
    n: "saxophone",
    k: [1557, 1556, 1573, 1574],
    s: "🎷",
    c: 5,
    d: "#bc9f40"
}, {
    n: "accordion",
    k: [1557],
    s: "🪗",
    c: 5,
    d: "#bb4e5c"
}, {
    n: "guitar",
    k: [1557, 1556],
    s: "🎸",
    c: 5,
    d: "#cb4d48"
}, {
    n: "musical_keyboard",
    k: [1575, 1556, 399],
    s: "🎹",
    c: 5,
    d: "#d0d0d0"
}, {
    n: "trumpet",
    k: [1557, 1576],
    s: "🎺",
    c: 5,
    d: "#aa9344"
}, {
    n: "violin",
    k: [1557, 1556, 1577, 1578],
    s: "🎻",
    c: 5,
    d: "#a47147"
}, {
    n: "banjo",
    k: [1557, 1579],
    s: "🪕",
    c: 5,
    d: "#b4a783"
}, {
    n: "drum_with_drumsticks",
    k: [53, 1580, 1557, 1556, 1581],
    s: "🥁",
    c: 5,
    d: "#af5c47"
}, {
    n: "long_drum",
    k: [1557],
    s: "🪘",
    c: 5,
    d: "#86694b"
}, {
    n: "iphone",
    k: [1582, 1583, 1584, 1570, 1567],
    s: "📱",
    c: 5,
    d: "#303434"
}, {
    n: "calling",
    k: [1585, 1582, 1586],
    s: "📲",
    c: 5,
    d: "#2a3d4c"
}, {
    n: "phone",
    k: [405, 1583, 1274, 1567],
    s: "☎️",
    c: 5,
    d: "#c9393d"
}, {
    n: "telephone_receiver",
    k: [1583, 1274, 1567],
    s: "📞",
    c: 5,
    d: "#565758"
}, {
    n: "pager",
    k: [1587, 1401, 1588],
    s: "📟",
    c: 5,
    d: "#308a53"
}, {
    n: "fax",
    k: [1274, 1583],
    s: "📠",
    c: 5,
    d: "#b2ada3"
}, {
    n: "battery",
    k: [571, 1589, 1590],
    s: "🔋",
    c: 5,
    d: "#679e4b"
}, {
    n: "low_battery",
    k: [1591, 271],
    s: "🪫",
    c: 5,
    d: "#c6a3a3"
}, {
    n: "electric_plug",
    k: [1592, 571],
    s: "🔌",
    c: 5,
    d: "#343434"
}, {
    n: "computer",
    k: [301, 1583, 1593, 1594, 1595],
    s: "💻",
    c: 5,
    d: "#2f2f2f"
}, {
    n: "desktop_computer",
    k: [1583, 1596, 1593],
    s: "🖥️",
    c: 5,
    d: "#2f2e2d"
}, {
    n: "printer",
    k: [1597, 1598],
    s: "🖨️",
    c: 5,
    d: "#8a8d90"
}, {
    n: "keyboard",
    k: [1583, 301, 1599, 1600, 1601],
    s: "⌨️",
    c: 5,
    d: "#c1c2c3"
}, {
    n: "three_button_mouse",
    k: [1425, 1602, 1603],
    s: "🖱️",
    c: 5,
    d: "#eff1f2"
}, {
    n: "trackball",
    k: [1583, 1604],
    s: "🖲️",
    c: 5,
    d: "#3d424a"
}, {
    n: "minidisc",
    k: [301, 1605, 1583, 1606, 1607, 1588],
    s: "💽",
    c: 5,
    d: "#c5bc9f"
}, {
    n: "floppy_disk",
    k: [1401, 1583, 1608, 1588, 1609],
    s: "💾",
    c: 5,
    d: "#595b5d"
}, {
    n: "cd",
    k: [1610, 1605, 1583, 1611, 1588],
    s: "💿",
    c: 5,
    d: "#d0cecc"
}, {
    n: "dvd",
    k: [1610, 1605, 1612],
    s: "📀",
    c: 5,
    d: "#d9d1ad"
}, {
    n: "abacus",
    k: [1613],
    s: "🧮",
    c: 5,
    d: "#8b3b16"
}, {
    n: "movie_camera",
    k: [1614, 1606],
    s: "🎥",
    c: 5,
    d: "#4a4c4f"
}, {
    n: "film_frames",
    k: [1017],
    s: "🎞️",
    c: 5,
    d: "#bbaa8b"
}, {
    n: "film_projector",
    k: [1615, 1616, 1606, 1017],
    s: "📽️",
    c: 5,
    d: "#616464"
}, {
    n: "clapper",
    k: [1017, 1614, 1606],
    s: "🎬",
    c: 5,
    d: "#3e3c3c"
}, {
    n: "tv",
    k: [1617, 1583, 1572, 1401, 1618],
    s: "📺",
    c: 5,
    d: "#6e635b"
}, {
    n: "camera",
    k: [1570, 1216],
    s: "📷",
    c: 5,
    d: "#505051"
}, {
    n: "camera_with_flash",
    k: [1216, 1570],
    s: "📸",
    c: 5,
    d: "#545352"
}, {
    n: "video_camera",
    k: [1614, 1606],
    s: "📹",
    c: 5,
    d: "#696b6d"
}, {
    n: "vhs",
    k: [1619, 1606, 1615, 1401, 1588, 1609],
    s: "📼",
    c: 5,
    d: "#4d4e4e"
}, {
    n: "mag",
    k: [1620, 1621, 1622, 1623, 1624],
    s: "🔍",
    c: 5,
    d: "#d1d5d7"
}, {
    n: "mag_right",
    k: [1620, 1621, 1622, 1623, 1624],
    s: "🔎",
    c: 5,
    d: "#d1d4d8"
}, {
    n: "candle",
    k: [547, 1625],
    s: "🕯️",
    c: 5,
    d: "#d8c7b8"
}, {
    n: "bulb",
    k: [1626, 1627],
    s: "💡",
    c: 5,
    d: "#f1e5bf"
}, {
    n: "flashlight",
    k: [1486, 1304, 1628, 151],
    s: "🔦",
    c: 5,
    d: "#727478"
}, {
    n: "izakaya_lantern",
    k: [174, 1597, 1099, 290, 292],
    s: "🏮",
    c: 5,
    d: "#c74715"
}, {
    n: "diya_lamp",
    k: [1629],
    s: "🪔",
    c: 5,
    d: "#984833"
}, {
    n: "notebook_with_decorative_cover",
    k: [1630, 1631, 1606, 1597, 1632],
    s: "📔",
    c: 5,
    d: "#d7b569"
}, {
    n: "closed_book",
    k: [1633, 1634, 1635, 1636, 497],
    s: "📕",
    c: 5,
    d: "#a82f2b"
}, {
    n: "book",
    k: [1633, 1634, 1635, 1637, 497, 1632],
    s: "📖",
    c: 5,
    d: "#d2d3da"
}, {
    n: "green_book",
    k: [1633, 1634, 1635, 1632],
    s: "📗",
    c: 5,
    d: "#7ca839"
}, {
    n: "blue_book",
    k: [1633, 1634, 1635, 497, 1632],
    s: "📘",
    c: 5,
    d: "#3078ae"
}, {
    n: "orange_book",
    k: [1633, 1634, 1635, 1636, 1632],
    s: "📙",
    c: 5,
    d: "#dc8711"
}, {
    n: "books",
    k: [1637, 1634, 1632],
    s: "📚",
    c: 5,
    d: "#708260"
}, {
    n: "notebook",
    k: [397, 1606, 1631, 1597, 1632],
    s: "📓",
    c: 5,
    d: "#696868"
}, {
    n: "ledger",
    k: [1631, 1597],
    s: "📒",
    c: 5,
    d: "#e0c227"
}, {
    n: "page_with_curl",
    k: [1638, 1639, 1597],
    s: "📃",
    c: 5,
    d: "#d3d3d3"
}, {
    n: "scroll",
    k: [1638, 1640, 1260, 1597],
    s: "📜",
    c: 5,
    d: "#bc9c78"
}, {
    n: "page_facing_up",
    k: [1638, 1639, 1597, 481],
    s: "📄",
    c: 5,
    d: "#d7d7d7"
}, {
    n: "newspaper",
    k: [1641, 1642],
    s: "📰",
    c: 5,
    d: "#aeaeae"
}, {
    n: "rolled_up_newspaper",
    k: [1643, 168, 1641, 1642],
    s: "🗞️",
    c: 5,
    d: "#a3a3a2"
}, {
    n: "bookmark_tabs",
    k: [1644, 1608, 1645, 1646],
    s: "📑",
    c: 5,
    d: "#d5d6d7"
}, {
    n: "bookmark",
    k: [1644, 1647, 1608],
    s: "🔖",
    c: 5,
    d: "#e1d8d0"
}, {
    n: "label",
    k: [1648, 1649],
    s: "🏷️",
    c: 5,
    d: "#f6d0a0"
}, {
    n: "moneybag",
    k: [1650, 83, 1651, 1652, 1648],
    s: "💰",
    c: 5,
    d: "#b99950"
}, {
    n: "coin",
    k: [80, 1653],
    s: "🪙",
    c: 5,
    d: "#acb1b3"
}, {
    n: "yen",
    k: [80, 1277, 287, 83, 1653],
    s: "💴",
    c: 5,
    d: "#b1af9e"
}, {
    n: "dollar",
    k: [80, 1277, 1654, 1653],
    s: "💵",
    c: 5,
    d: "#bbb8a2"
}, {
    n: "euro",
    k: [80, 1277, 83, 1653],
    s: "💶",
    c: 5,
    d: "#bac9bb"
}, {
    n: "pound",
    k: [563, 1655, 80, 1277, 1656, 561, 1657, 1653],
    s: "💷",
    c: 5,
    d: "#c5bdbc"
}, {
    n: "money_with_wings",
    k: [83, 1656, 1651, 1648],
    s: "💸",
    c: 5,
    d: "#c0bdaa"
}, {
    n: "credit_card",
    k: [80, 1277, 83, 1654, 1651, 1282],
    s: "💳",
    c: 5,
    d: "#d0cca8"
}, {
    n: "receipt",
    k: [1658, 1659],
    s: "🧾",
    c: 5,
    d: "#dfdfdf"
}, {
    n: "chart",
    k: [166, 760, 1660, 1661, 1662],
    s: "💹",
    c: 5,
    d: "#15b819"
}, {
    n: "email",
    k: [754, 1663, 1664, 1665, 1274],
    s: "✉️",
    c: 5,
    d: "#dedede"
}, {
    n: "e-mail",
    k: [1666, 1667, 1274, 1665],
    s: "📧",
    c: 5,
    d: "#d9d9da"
}, {
    n: "incoming_envelope",
    k: [754, 1665],
    s: "📨",
    c: 5,
    d: "#cfd0cf"
}, {
    n: "envelope_with_arrow",
    k: [754, 1274],
    s: "📩",
    c: 5,
    d: "#dcdada"
}, {
    n: "outbox_tray",
    k: [1665, 754],
    s: "📤",
    c: 5,
    d: "#dddfdf"
}, {
    n: "inbox_tray",
    k: [754, 1638],
    s: "📥",
    c: 5,
    d: "#dcdedf"
}, {
    n: "package",
    k: [1667, 757, 1668, 1669, 1670],
    s: "📦",
    c: 5,
    d: "#a17852"
}, {
    n: "mailbox",
    k: [754, 1665, 1274],
    s: "📫",
    c: 5,
    d: "#4882a2"
}, {
    n: "mailbox_closed",
    k: [754, 1274, 1665],
    s: "📪",
    c: 5,
    d: "#5398b7"
}, {
    n: "mailbox_with_mail",
    k: [1667, 754, 1665, 1274],
    s: "📬",
    c: 5,
    d: "#5f8093"
}, {
    n: "mailbox_with_no_mail",
    k: [116, 1667, 754, 1665],
    s: "📭",
    c: 5,
    d: "#534c53"
}, {
    n: "postbox",
    k: [754, 1663, 755],
    s: "📮",
    c: 5,
    d: "#cd2424"
}, {
    n: "ballot_box_with_ballot",
    k: [1671, 1672],
    s: "🗳️",
    c: 5,
    d: "#73b2c7"
}, {
    n: "pencil2",
    k: [1673, 397, 398, 1597, 1674, 956, 1632],
    s: "✏️",
    c: 5,
    d: "#dbab38"
}, {
    n: "black_nib",
    k: [396, 397, 1674, 398],
    s: "✒️",
    c: 5,
    d: "#545658"
}, {
    n: "lower_left_fountain_pen",
    k: [394, 371, 397, 1674, 398],
    s: "🖋️",
    c: 5,
    d: "#5e6165"
}, {
    n: "lower_left_ballpoint_pen",
    k: [394, 371, 395, 397, 1674, 398],
    s: "🖊️",
    c: 5,
    d: "#4d4f54"
}, {
    n: "lower_left_paintbrush",
    k: [394, 371, 1675, 539, 1217],
    s: "🖌️",
    c: 5,
    d: "#52629f"
}, {
    n: "lower_left_crayon",
    k: [394, 371, 1675, 539],
    s: "🖍️",
    c: 5,
    d: "#c84040"
}, {
    n: "memo",
    k: [1676, 398, 1638, 397, 1597, 1674, 551, 778, 779, 780, 1632, 399],
    s: "📝",
    c: 5,
    d: "#dcd9d7"
}, {
    n: "briefcase",
    k: [519, 1638, 1273, 501, 551, 1677, 1678],
    s: "💼",
    c: 5,
    d: "#674b3b"
}, {
    n: "file_folder",
    k: [1638, 519, 1639],
    s: "📁",
    c: 5,
    d: "#a5adb4"
}, {
    n: "open_file_folder",
    k: [1638, 1679],
    s: "📂",
    c: 5,
    d: "#aab2b9"
}, {
    n: "card_index_dividers",
    k: [1680, 519, 397],
    s: "🗂️",
    c: 5,
    d: "#e0b588"
}, {
    n: "date",
    k: [715, 1415],
    s: "📅",
    c: 5,
    d: "#d0c6c6"
}, {
    n: "calendar",
    k: [1681, 1682, 1415, 715, 1683],
    s: "📆",
    c: 5,
    d: "#bba2a2"
}, {
    n: "spiral_note_pad",
    k: [1684, 1685, 1686, 397],
    s: "🗒️",
    c: 5,
    d: "#dee1e6"
}, {
    n: "spiral_calendar_pad",
    k: [1685, 715, 1415, 1683],
    s: "🗓️",
    c: 5,
    d: "#e3e2e3"
}, {
    n: "card_index",
    k: [519, 397],
    s: "📇",
    c: 5,
    d: "#bab6af"
}, {
    n: "chart_with_upwards_trend",
    k: [53, 1687, 1688, 1660, 1661, 1662, 1689, 519, 1690, 80, 1277, 339, 1691],
    s: "📈",
    c: 5,
    d: "#cfd6de"
}, {
    n: "chart_with_downwards_trend",
    k: [53, 1692, 1688, 1660, 1661, 1662, 1693, 519, 1690, 80, 1277, 609, 1694],
    s: "📉",
    c: 5,
    d: "#cdd7e1"
}, {
    n: "bar_chart",
    k: [1660, 1661, 1662],
    s: "📊",
    c: 5,
    d: "#c9d8df"
}, {
    n: "clipboard",
    k: [397, 1638],
    s: "📋",
    c: 5,
    d: "#d0cdc9"
}, {
    n: "pushpin",
    k: [397, 762, 1695],
    s: "📌",
    c: 5,
    d: "#c03d3f"
}, {
    n: "round_pushpin",
    k: [397, 1241, 1696, 1695],
    s: "📍",
    c: 5,
    d: "#c24d4c"
}, {
    n: "paperclip",
    k: [1638, 397],
    s: "📎",
    c: 5,
    d: "#95a5b7"
}, {
    n: "linked_paperclips",
    k: [1638, 397],
    s: "🖇️",
    c: 5,
    d: "#979ea5"
}, {
    n: "straight_ruler",
    k: [397, 1697, 1698, 1699, 956, 1675, 1700, 1701],
    s: "📏",
    c: 5,
    d: "#9fb0c4"
}, {
    n: "triangular_ruler",
    k: [397, 1699, 1700, 1701],
    s: "📐",
    c: 5,
    d: "#a1b1c6"
}, {
    n: "scissors",
    k: [397, 1702],
    s: "✂️",
    c: 5,
    d: "#d37276"
}, {
    n: "card_file_box",
    k: [519, 397],
    s: "🗃️",
    c: 5,
    d: "#4f4f51"
}, {
    n: "file_cabinet",
    k: [1703, 1680],
    s: "🗄️",
    c: 5,
    d: "#666c6e"
}, {
    n: "wastebasket",
    k: [1704, 1705, 1706, 1707, 1708],
    s: "🗑️",
    c: 5,
    d: "#8e969e"
}, {
    n: "lock",
    k: [1709, 1710, 1711, 1712],
    s: "🔒",
    c: 5,
    d: "#a19a69"
}, {
    n: "unlock",
    k: [1713, 1714, 1710],
    s: "🔓",
    c: 5,
    d: "#a19b6a"
}, {
    n: "lock_with_ink_pen",
    k: [1715, 1598, 1710, 31],
    s: "🔏",
    c: 5,
    d: "#8b8766"
}, {
    n: "closed_lock_with_key",
    k: [79, 1715, 1710, 1714],
    s: "🔐",
    c: 5,
    d: "#b9a053"
}, {
    n: "key",
    k: [1715, 1716, 1711],
    s: "🔑",
    c: 5,
    d: "#d9ac24"
}, {
    n: "old_key",
    k: [1715, 1716, 1711],
    s: "🗝️",
    c: 5,
    d: "#615c5e"
}, {
    n: "hammer",
    k: [1717, 567, 1718],
    s: "🔨",
    c: 5,
    d: "#404144"
}, {
    n: "axe",
    k: [1719, 989, 1702],
    s: "🪓",
    c: 5,
    d: "#6e412c"
}, {
    n: "pick",
    k: [1717, 1720],
    s: "⛏️",
    c: 5,
    d: "#3e3e40"
}, {
    n: "hammer_and_pick",
    k: [1717, 567, 1718],
    s: "⚒️",
    c: 5,
    d: "#434244"
}, {
    n: "hammer_and_wrench",
    k: [1717, 567, 1718],
    s: "🛠️",
    c: 5,
    d: "#5b5c60"
}, {
    n: "dagger_knife",
    k: [1090, 1092],
    s: "🗡️",
    c: 5,
    d: "#989ca3"
}, {
    n: "crossed_swords",
    k: [1092],
    s: "⚔️",
    c: 5,
    d: "#5d575a"
}, {
    n: "gun",
    k: [1721, 368, 1092, 1722],
    s: "🔫",
    c: 5,
    d: "#7adf63"
}, {
    n: "boomerang",
    k: [1092],
    s: "🪃",
    c: 5,
    d: "#ac6d56"
}, {
    n: "bow_and_arrow",
    k: [656],
    s: "🏹",
    c: 5,
    d: "#a38f87"
}, {
    n: "shield",
    k: [1185, 1710],
    s: "🛡️",
    c: 5,
    d: "#b07e75"
}, {
    n: "carpentry_saw",
    k: [1702, 989],
    s: "🪚",
    c: 5,
    d: "#aaa093"
}, {
    n: "wrench",
    k: [1717, 1723, 1724, 1725, 1726],
    s: "🔧",
    c: 5,
    d: "#605c60"
}, {
    n: "screwdriver",
    k: [1717],
    s: "🪛",
    c: 5,
    d: "#59b13f"
}, {
    n: "nut_and_bolt",
    k: [1727, 1717, 1725],
    s: "🔩",
    c: 5,
    d: "#a0a5ab"
}, {
    n: "gear",
    k: [1728],
    s: "⚙️",
    c: 5,
    d: "#9aa0a8"
}, {
    n: "compression",
    k: [1729, 1719],
    s: "🗜️",
    c: 5,
    d: "#6a777f"
}, {
    n: "scales",
    k: [1730, 501, 1731, 679],
    s: "⚖️",
    c: 5,
    d: "#969fa8"
}, {
    n: "probing_cane",
    k: [635, 410],
    s: "🦯",
    c: 5,
    d: "#4b4949"
}, {
    n: "link",
    k: [1732, 1733],
    s: "🔗",
    c: 5,
    d: "#727277"
}, {
    n: "chains",
    k: [1715, 553],
    s: "⛓️",
    c: 5,
    d: "#969a9f"
}, {
    n: "hook",
    k: [1717],
    s: "🪝",
    c: 5,
    d: "#a4884a"
}, {
    n: "toolbox",
    k: [1717, 1723, 1725, 1726, 1734],
    s: "🧰",
    c: 5,
    d: "#d23e37"
}, {
    n: "magnet",
    k: [1735, 1244],
    s: "🧲",
    c: 5,
    d: "#d82d2d"
}, {
    n: "ladder",
    k: [1717],
    s: "🪜",
    c: 5,
    d: "#927659"
}, {
    n: "alembic",
    k: [1736, 1737, 1488, 522],
    s: "⚗️",
    c: 5,
    d: "#bdd8dd"
}, {
    n: "test_tube",
    k: [522, 1488, 1738, 1737],
    s: "🧪",
    c: 5,
    d: "#3da04f"
}, {
    n: "petri_dish",
    k: [925, 1739, 1259, 1738],
    s: "🧫",
    c: 5,
    d: "#cfb6c1"
}, {
    n: "dna",
    k: [523, 1740, 1308],
    s: "🧬",
    c: 5,
    d: "#3b8ab4"
}, {
    n: "microscope",
    k: [1741, 1488, 1742, 1737, 1632],
    s: "🔬",
    c: 5,
    d: "#8e9ca4"
}, {
    n: "telescope",
    k: [1106, 296, 1622, 1737, 1743],
    s: "🔭",
    c: 5,
    d: "#c6c4c2"
}, {
    n: "satellite_antenna",
    k: [1274, 1744, 1745, 296],
    s: "📡",
    c: 5,
    d: "#bec1c5"
}, {
    n: "syringe",
    k: [421, 492, 1746, 615, 943, 1221, 493, 494],
    s: "💉",
    c: 5,
    d: "#aebac0"
}, {
    n: "drop_of_blood",
    k: [1747, 163, 1748, 1749],
    s: "🩸",
    c: 5,
    d: "#dc0c0a"
}, {
    n: "pill",
    k: [421, 943, 493, 1750, 1751],
    s: "💊",
    c: 5,
    d: "#d3a93a"
}, {
    n: "adhesive_bandage",
    k: [1752],
    s: "🩹",
    c: 5,
    d: "#d7d7d7"
}, {
    n: "crutch",
    k: [410, 1753],
    s: "🩼",
    c: 5,
    d: "#8f9397"
}, {
    n: "stethoscope",
    k: [421],
    s: "🩺",
    c: 5,
    d: "#4b4b4c"
}, {
    n: "x-ray",
    k: [1754, 1755, 272, 943],
    s: "🩻",
    c: 5,
    d: "#4197be"
}, {
    n: "door",
    k: [939, 1756, 1757],
    s: "🚪",
    c: 5,
    d: "#955b3b"
}, {
    n: "elevator",
    k: [326],
    s: "🛗",
    c: 5,
    d: "#337fd8"
}, {
    n: "mirror",
    k: [1758],
    s: "🪞",
    c: 5,
    d: "#d1e1ee"
}, {
    n: "window",
    k: [1759],
    s: "🪟",
    c: 5,
    d: "#a06647"
}, {
    n: "bed",
    k: [1451, 148],
    s: "🛏️",
    c: 5,
    d: "#8a6c5c"
}, {
    n: "couch_and_lamp",
    k: [1633, 1760],
    s: "🛋️",
    c: 5,
    d: "#77a4d5"
}, {
    n: "chair",
    k: [1386, 1761],
    s: "🪑",
    c: 5,
    d: "#a76847"
}, {
    n: "toilet",
    k: [1762, 1763, 1764, 710, 1765],
    s: "🚽",
    c: 5,
    d: "#dbdad9"
}, {
    n: "plunger",
    k: [1766],
    s: "🪠",
    c: 5,
    d: "#ab5e45"
}, {
    n: "shower",
    k: [709, 673, 710],
    s: "🚿",
    c: 5,
    d: "#369dab"
}, {
    n: "bathtub",
    k: [709, 122, 710],
    s: "🛁",
    c: 5,
    d: "#c8ced0"
}, {
    n: "mouse_trap",
    k: [855],
    s: "🪤",
    c: 5,
    d: "#e1b880"
}, {
    n: "razor",
    k: [1702],
    s: "🪒",
    c: 5,
    d: "#905840"
}, {
    n: "lotion_bottle",
    k: [1767, 1768],
    s: "🧴",
    c: 5,
    d: "#e6d8cb"
}, {
    n: "safety_pin",
    k: [1769],
    s: "🧷",
    c: 5,
    d: "#798ba0"
}, {
    n: "broom",
    k: [1770, 1771, 613],
    s: "🧹",
    c: 5,
    d: "#886a3c"
}, {
    n: "basket",
    k: [1772],
    s: "🧺",
    c: 5,
    d: "#6b4f33"
}, {
    n: "roll_of_paper",
    k: [],
    s: "🧻",
    c: 5,
    d: "#ceccc4"
}, {
    n: "bucket",
    k: [673, 1056],
    s: "🪣",
    c: 5,
    d: "#367183"
}, {
    n: "soap",
    k: [1173, 1773, 1770, 1774],
    s: "🧼",
    c: 5,
    d: "#74d1a8"
}, {
    n: "bubbles",
    k: [1775, 641, 1776, 1777],
    s: "🫧",
    c: 5,
    d: "#a7bece"
}, {
    n: "toothbrush",
    k: [1778, 1779],
    s: "🪥",
    c: 5,
    d: "#319ac7"
}, {
    n: "sponge",
    k: [1780, 1770, 1781],
    s: "🧽",
    c: 5,
    d: "#e7d93a"
}, {
    n: "fire_extinguisher",
    k: [1782],
    s: "🧯",
    c: 5,
    d: "#ab5554"
}, {
    n: "shopping_trolley",
    k: [1783],
    s: "🛒",
    c: 5,
    d: "#787575"
}, {
    n: "smoking",
    k: [1784, 1785, 1786, 1787, 797],
    s: "🚬",
    c: 5,
    d: "#b4aaa0"
}, {
    n: "coffin",
    k: [865, 271, 1788, 274, 1789, 1790, 1791, 1792, 1793, 1669],
    s: "⚰️",
    c: 5,
    d: "#935b39"
}, {
    n: "headstone",
    k: [274, 1789, 1794],
    s: "🪦",
    c: 5,
    d: "#7b7b78"
}, {
    n: "funeral_urn",
    k: [271, 1788, 274, 1789, 1795],
    s: "⚱️",
    c: 5,
    d: "#c4992a"
}, {
    n: "moyai",
    k: [1796, 345, 1797, 1798],
    s: "🗿",
    c: 5,
    d: "#64645d"
}, {
    n: "placard",
    k: [1799],
    s: "🪧",
    c: 5,
    d: "#dfdfdf"
}, {
    n: "identification_card",
    k: [1800],
    s: "🪪",
    c: 5,
    d: "#c9c7c4"
}, {
    n: "atm",
    k: [80, 1277, 1278, 176, 760, 1651, 1801],
    s: "🏧",
    c: 6,
    d: "#195ead"
}, {
    n: "put_litter_in_its_place",
    k: [1802, 1803, 1138, 176, 760, 468, 805],
    s: "🚮",
    c: 6,
    d: "#7592ad"
}, {
    n: "potable_water",
    k: [176, 760, 1804, 1762, 1770, 1482],
    s: "🚰",
    c: 6,
    d: "#a1b9c5"
}, {
    n: "wheelchair",
    k: [176, 760, 1805, 410],
    s: "♿",
    c: 6,
    d: "#1372dd"
}, {
    n: "mens",
    k: [1806, 471, 1503, 1766, 1762, 1763, 176, 760, 439, 443],
    s: "🚹",
    c: 6,
    d: "#0d70de"
}, {
    n: "womens",
    k: [1807, 472, 1503, 759, 760, 447, 446, 1766, 1808, 1762, 439],
    s: "🚺",
    c: 6,
    d: "#9c42b6"
}, {
    n: "restroom",
    k: [176, 760, 1766, 1809, 1763, 439],
    s: "🚻",
    c: 6,
    d: "#7290ab"
}, {
    n: "baby_symbol",
    k: [953, 760, 435],
    s: "🚼",
    c: 6,
    d: "#f89c11"
}, {
    n: "wc",
    k: [1763, 1766, 1762, 176, 760],
    s: "🚾",
    c: 6,
    d: "#1573dd"
}, {
    n: "passport_control",
    k: [1810, 176, 760],
    s: "🛂",
    c: 6,
    d: "#1373dd"
}, {
    n: "customs",
    k: [1811, 1812, 176, 760],
    s: "🛃",
    c: 6,
    d: "#1373de"
}, {
    n: "baggage_claim",
    k: [176, 760, 1381, 1360],
    s: "🛄",
    c: 6,
    d: "#1a76dd"
}, {
    n: "left_luggage",
    k: [176, 760, 1328],
    s: "🛅",
    c: 6,
    d: "#1a77dd"
}, {
    n: "warning",
    k: [1813, 569, 1364, 1365, 1814, 1815],
    s: "⚠️",
    c: 6,
    d: "#f7cc1d"
}, {
    n: "children_crossing",
    k: [956, 1371, 276, 344, 1368, 935, 1542],
    s: "🚸",
    c: 6,
    d: "#d5b41d"
}, {
    n: "no_entry",
    k: [1402, 1710, 1714, 609, 1816, 316, 1817],
    s: "⛔",
    c: 6,
    d: "#e14b2b"
}, {
    n: "no_entry_sign",
    k: [116, 1756, 344, 1818, 316, 1402, 1816, 1819, 1817],
    s: "🚫",
    c: 6,
    d: "#d9492e"
}, {
    n: "no_bicycles",
    k: [1820, 1821, 1817],
    s: "🚳",
    c: 6,
    d: "#cb4b2f"
}, {
    n: "no_smoking",
    k: [1822, 176, 760, 417, 797],
    s: "🚭",
    c: 6,
    d: "#9b3e2a"
}, {
    n: "do_not_litter",
    k: [1823, 1824, 1825, 1705, 1704, 1707, 1817],
    s: "🚯",
    c: 6,
    d: "#d33e24"
}, {
    n: "non-potable_water",
    k: [1826, 1827, 1058, 1482, 1828, 1817],
    s: "🚱",
    c: 6,
    d: "#d04c2f"
}, {
    n: "no_pedestrians",
    k: [1829, 1830, 624, 1817],
    s: "🚷",
    c: 6,
    d: "#a1402b"
}, {
    n: "no_mobile_phones",
    k: [1582, 1547, 1817],
    s: "📵",
    c: 6,
    d: "#bc4026"
}, {
    n: "underage",
    k: [1831, 1832, 1058, 1069, 151, 1833, 1817],
    s: "🔞",
    c: 6,
    d: "#d1482b"
}, {
    n: "radioactive_sign",
    k: [344, 1834, 276],
    s: "☢️",
    c: 6,
    d: "#f8930f"
}, {
    n: "biohazard_sign",
    k: [344, 276],
    s: "☣️",
    c: 6,
    d: "#f79617"
}, {
    n: "arrow_up",
    k: [176, 760, 1835, 1836, 349],
    s: "⬆️",
    c: 6,
    d: "#7390ab"
}, {
    n: "arrow_upper_right",
    k: [1837, 374, 168, 176, 760, 348, 349, 1838, 1839],
    s: "↗️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrow_right",
    k: [176, 760, 1840],
    s: "➡️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrow_lower_right",
    k: [394, 374, 25, 176, 760, 349, 1838, 1841],
    s: "↘️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrow_down",
    k: [176, 760, 349, 1842],
    s: "⬇️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrow_lower_left",
    k: [394, 371, 25, 176, 760, 349, 1838, 1843],
    s: "↙️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrow_left",
    k: [176, 760, 1844, 1845],
    s: "⬅️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrow_upper_left",
    k: [1837, 371, 168, 176, 760, 348, 349, 1838, 1846],
    s: "↖️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrow_up_down",
    k: [176, 760, 349, 1847, 1848],
    s: "↕️",
    c: 6,
    d: "#7290aa"
}, {
    n: "left_right_arrow",
    k: [1849, 349, 1850, 1851],
    s: "↔️",
    c: 6,
    d: "#7491ab"
}, {
    n: "leftwards_arrow_with_hook",
    k: [1852, 53, 1853, 1845, 1854, 176, 760, 1855, 1856],
    s: "↩️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrow_right_hook",
    k: [1853, 176, 760, 1854, 1857, 349],
    s: "↪️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrow_heading_up",
    k: [1858, 176, 760, 349, 1836],
    s: "⤴️",
    c: 6,
    d: "#7391ac"
}, {
    n: "arrow_heading_down",
    k: [1858, 176, 760, 349, 1842],
    s: "⤵️",
    c: 6,
    d: "#7290ab"
}, {
    n: "arrows_clockwise",
    k: [1859, 1860, 1861, 1862],
    s: "🔃",
    c: 6,
    d: "#7391ab"
}, {
    n: "arrows_counterclockwise",
    k: [176, 760, 1859, 1860],
    s: "🔄",
    c: 6,
    d: "#7491ac"
}, {
    n: "back",
    k: [801, 1854],
    s: "🔙",
    c: 6,
    d: "#464646"
}, {
    n: "end",
    k: [801],
    s: "🔚",
    c: 6,
    d: "#464646"
}, {
    n: "on",
    k: [346, 801],
    s: "🔛",
    c: 6,
    d: "#464646"
}, {
    n: "soon",
    k: [801],
    s: "🔜",
    c: 6,
    d: "#484848"
}, {
    n: "top",
    k: [801, 176, 760],
    s: "🔝",
    c: 6,
    d: "#474747"
}, {
    n: "place_of_worship",
    k: [1184, 1863, 1298, 386],
    s: "🛐",
    c: 6,
    d: "#9c43b6"
}, {
    n: "atom_symbol",
    k: [1737, 1864, 522],
    s: "⚛️",
    c: 6,
    d: "#9d46b6"
}, {
    n: "om_symbol",
    k: [1865, 580, 1866, 1867, 1868],
    s: "🕉️",
    c: 6,
    d: "#9d46b6"
}, {
    n: "star_of_david",
    k: [1297],
    s: "✡️",
    c: 6,
    d: "#9c44b6"
}, {
    n: "wheel_of_dharma",
    k: [580, 1866, 1867, 1868],
    s: "☸️",
    c: 6,
    d: "#9c46b4"
}, {
    n: "yin_yang",
    k: [698],
    s: "☯️",
    c: 6,
    d: "#9b44b5"
}, {
    n: "latin_cross",
    k: [1869],
    s: "✝️",
    c: 6,
    d: "#9c43b6"
}, {
    n: "orthodox_cross",
    k: [1870, 1184],
    s: "☦️",
    c: 6,
    d: "#9c42b6"
}, {
    n: "star_and_crescent",
    k: [1294],
    s: "☪️",
    c: 6,
    d: "#9c43b6"
}, {
    n: "peace_symbol",
    k: [1871],
    s: "☮️",
    c: 6,
    d: "#9c44b5"
}, {
    n: "menorah_with_nine_branches",
    k: [53, 1443, 1872, 1873, 1874, 1299],
    s: "🕎",
    c: 6,
    d: "#9e4bb7"
}, {
    n: "six_pointed_star",
    k: [1434, 1875, 759, 760, 1184, 1299, 1876],
    s: "🔯",
    c: 6,
    d: "#9c44b6"
}, {
    n: "aries",
    k: [344, 759, 760, 1877, 1878],
    s: "♈",
    c: 6,
    d: "#9c43b6"
}, {
    n: "taurus",
    k: [759, 760, 344, 1877, 1878],
    s: "♉",
    c: 6,
    d: "#9c43b6"
}, {
    n: "gemini",
    k: [344, 1877, 759, 760, 1878],
    s: "♊",
    c: 6,
    d: "#9d46b6"
}, {
    n: "cancer",
    k: [344, 1877, 759, 760, 1878],
    s: "♋",
    c: 6,
    d: "#9b42b5"
}, {
    n: "leo",
    k: [344, 759, 760, 1877, 1878],
    s: "♌",
    c: 6,
    d: "#9c43b5"
}, {
    n: "virgo",
    k: [344, 1877, 759, 760, 1878],
    s: "♍",
    c: 6,
    d: "#9d46b6"
}, {
    n: "libra",
    k: [344, 759, 760, 1877, 1878],
    s: "♎",
    c: 6,
    d: "#9d45b6"
}, {
    n: "scorpius",
    k: [1879, 344, 1877, 759, 760, 1878],
    s: "♏",
    c: 6,
    d: "#9d45b6"
}, {
    n: "sagittarius",
    k: [344, 1877, 759, 760, 1878],
    s: "♐",
    c: 6,
    d: "#9d45b6"
}, {
    n: "capricorn",
    k: [344, 1877, 759, 760, 1878],
    s: "♑",
    c: 6,
    d: "#9d45b6"
}, {
    n: "aquarius",
    k: [344, 759, 760, 1877, 1878],
    s: "♒",
    c: 6,
    d: "#9d44b6"
}, {
    n: "pisces",
    k: [759, 760, 344, 1877, 1878],
    s: "♓",
    c: 6,
    d: "#9d44b6"
}, {
    n: "ophiuchus",
    k: [344, 759, 760, 1880, 1878],
    s: "⛎",
    c: 6,
    d: "#9c44b5"
}, {
    n: "twisted_rightwards_arrows",
    k: [980, 1881, 1882, 176, 760, 1557, 1193],
    s: "🔀",
    c: 6,
    d: "#7491ac"
}, {
    n: "repeat",
    k: [1883, 1606],
    s: "🔁",
    c: 6,
    d: "#7491ac"
}, {
    n: "repeat_one",
    k: [73, 176, 760, 1883],
    s: "🔂",
    c: 6,
    d: "#7592ac"
}, {
    n: "arrow_forward",
    k: [1884, 1885, 176, 760, 374, 349],
    s: "▶️",
    c: 6,
    d: "#718faa"
}, {
    n: "fast_forward",
    k: [794, 1885, 176, 760, 300, 1326, 1835],
    s: "⏩",
    c: 6,
    d: "#7390ab"
}, {
    n: "black_right_pointing_double_triangle_with_vertical_bar",
    k: [1210, 374, 1886, 1887, 1888, 53, 1848, 1173, 1885, 176, 760],
    s: "⏭️",
    c: 6,
    d: "#718faa"
}, {
    n: "black_right_pointing_triangle_with_double_vertical_bar",
    k: [1210, 374, 1886, 1888, 53, 1887, 1848, 1173, 176, 760],
    s: "⏯️",
    c: 6,
    d: "#7390ab"
}, {
    n: "arrow_backward",
    k: [1884, 1889, 176, 760, 371, 349],
    s: "◀️",
    c: 6,
    d: "#718faa"
}, {
    n: "rewind",
    k: [1890, 300, 176, 760],
    s: "⏪",
    c: 6,
    d: "#7390ab"
}, {
    n: "black_left_pointing_double_triangle_with_vertical_bar",
    k: [1210, 371, 1886, 1887, 1888, 53, 1848, 1173, 1889],
    s: "⏮️",
    c: 6,
    d: "#718faa"
}, {
    n: "arrow_up_small",
    k: [1884, 168, 76, 176, 760, 1888, 349, 348, 1885, 1836],
    s: "🔼",
    c: 6,
    d: "#7390ac"
}, {
    n: "arrow_double_up",
    k: [1884, 1887, 176, 760, 349, 1836],
    s: "⏫",
    c: 6,
    d: "#7491ac"
}, {
    n: "arrow_down_small",
    k: [1884, 25, 76, 176, 760, 349, 1842],
    s: "🔽",
    c: 6,
    d: "#718faa"
}, {
    n: "arrow_double_down",
    k: [1884, 1887, 176, 760, 349, 1842],
    s: "⏬",
    c: 6,
    d: "#7290aa"
}, {
    n: "double_vertical_bar",
    k: [1887, 1848, 1173, 176, 760],
    s: "⏸️",
    c: 6,
    d: "#7290ab"
}, {
    n: "black_square_for_stop",
    k: [1210, 760, 1891, 176],
    s: "⏹️",
    c: 6,
    d: "#7591ac"
}, {
    n: "black_circle_for_record",
    k: [1210, 1817, 1891, 176, 760],
    s: "⏺️",
    c: 6,
    d: "#7290ab"
}, {
    n: "eject",
    k: [176, 760],
    s: "⏏️",
    c: 6,
    d: "#7391ab"
}, {
    n: "cinema",
    k: [176, 760, 1606, 1614, 1017, 1892, 1893, 1018],
    s: "🎦",
    c: 6,
    d: "#7491ab"
}, {
    n: "low_brightness",
    k: [1549, 1454, 1894, 1895, 1256, 202],
    s: "🔅",
    c: 6,
    d: "#f7b21a"
}, {
    n: "high_brightness",
    k: [318, 1454, 1894, 1099],
    s: "🔆",
    c: 6,
    d: "#f7aa18"
}, {
    n: "signal_strength",
    k: [1367, 1896, 176, 760, 1897, 405, 1238, 1898, 1899, 1900],
    s: "📶",
    c: 6,
    d: "#7592ad"
}, {
    n: "vibration_mode",
    k: [953, 760, 405],
    s: "📳",
    c: 6,
    d: "#f89f18"
}, {
    n: "mobile_phone_off",
    k: [1547, 953, 760, 90, 96],
    s: "📴",
    c: 6,
    d: "#f89e18"
}, {
    n: "transgender_symbol",
    k: [1901],
    s: "⚧️",
    c: 6,
    d: "#7290aa"
}, {
    n: "heavy_multiplication_x",
    k: [761, 1902, 1754, 344, 1699, 1613],
    s: "✖️",
    c: 6,
    d: "#464646"
}, {
    n: "heavy_plus_sign",
    k: [761, 344, 1699, 1613, 1903, 1904, 1905],
    s: "➕",
    c: 6,
    d: "#444444"
}, {
    n: "heavy_minus_sign",
    k: [761, 344, 1699, 1613, 1906, 1907],
    s: "➖",
    c: 6,
    d: "#444444"
}, {
    n: "heavy_division_sign",
    k: [761, 1908, 344, 1699, 1613],
    s: "➗",
    c: 6,
    d: "#444444"
}, {
    n: "heavy_equals_sign",
    k: [1699],
    s: "🟰",
    c: 6,
    d: "#383838"
}, {
    n: "infinity",
    k: [1909],
    s: "♾️",
    c: 6,
    d: "#6f6f6f"
}, {
    n: "bangbang",
    k: [1910, 89],
    s: "‼️",
    c: 6,
    d: "#ea1707"
}, {
    n: "interrobang",
    k: [1911, 1912, 1913, 89],
    s: "⁉️",
    c: 6,
    d: "#de2f08"
}, {
    n: "question",
    k: [491, 188],
    s: "❓",
    c: 6,
    d: "#dd0909"
}, {
    n: "grey_question",
    k: [1914, 1915, 1452, 210, 188],
    s: "❔",
    c: 6,
    d: "#ecebeb"
}, {
    n: "grey_exclamation",
    k: [1914, 89, 1913, 1452, 222, 1371],
    s: "❕",
    c: 6,
    d: "#e2e2e2"
}, {
    n: "exclamation",
    k: [761, 276, 89, 1913, 222, 1371],
    s: "❗",
    c: 6,
    d: "#e20b0b"
}, {
    n: "wavy_dash",
    k: [538, 1916, 200, 450, 1917, 1918],
    s: "〰️",
    c: 6,
    d: "#484848"
}, {
    n: "currency_exchange",
    k: [80, 1277, 83, 1328],
    s: "💱",
    c: 6,
    d: "#4c4c4c"
}, {
    n: "heavy_dollar_sign",
    k: [80, 1277, 1651, 1653, 1919],
    s: "💲",
    c: 6,
    d: "#464646"
}, {
    n: "recycle",
    k: [1920, 1884, 1248, 1707, 1705],
    s: "♻️",
    c: 6,
    d: "#179c1f"
}, {
    n: "fleur_de_lis",
    k: [1921, 1922, 1923, 1924, 1229],
    s: "⚜️",
    c: 6,
    d: "#9b7727"
}, {
    n: "trident",
    k: [1092, 1925],
    s: "🔱",
    c: 6,
    d: "#cc9e1d"
}, {
    n: "name_badge",
    k: [547, 1818],
    s: "📛",
    c: 6,
    d: "#df492d"
}, {
    n: "beginner",
    k: [1926, 1927],
    s: "🔰",
    c: 6,
    d: "#488348"
}, {
    n: "o",
    k: [1097, 1861],
    s: "⭕",
    c: 6,
    d: "#e40505"
}, {
    n: "white_check_mark",
    k: [219, 166, 760, 1928, 360, 1672, 1671, 1929, 1930],
    s: "✅",
    c: 6,
    d: "#0fb814"
}, {
    n: "ballot_box_with_check",
    k: [1931, 1928, 360, 1932, 1210, 760, 1672, 1671, 358, 1930],
    s: "☑️",
    c: 6,
    d: "#6c6c6c"
}, {
    n: "heavy_check_mark",
    k: [761, 1928, 1933, 1929, 358, 1930],
    s: "✔️",
    c: 6,
    d: "#454545"
}, {
    n: "x",
    k: [1754, 116, 1934, 1935, 1936, 174],
    s: "❌",
    c: 6,
    d: "#ed0808"
}, {
    n: "negative_squared_cross_mark",
    k: [1937, 1938, 1754, 166, 760, 116, 1939],
    s: "❎",
    c: 6,
    d: "#0fb714"
}, {
    n: "curly_loop",
    k: [1918, 538, 1849, 1917],
    s: "➰",
    c: 6,
    d: "#424242"
}, {
    n: "loop",
    k: [1616, 1940],
    s: "➿",
    c: 6,
    d: "#494949"
}, {
    n: "part_alternation_mark",
    k: [1660, 1661, 1662, 519, 1690, 609],
    s: "〽️",
    c: 6,
    d: "#fcbe08"
}, {
    n: "eight_spoked_asterisk",
    k: [50, 786, 166, 760],
    s: "✳️",
    c: 6,
    d: "#13b618"
}, {
    n: "eight_pointed_black_star",
    k: [1440, 1875, 1210, 953, 760, 1849, 1941],
    s: "✴️",
    c: 6,
    d: "#f89c13"
}, {
    n: "sparkle",
    k: [1106, 166, 760, 359, 339, 1942],
    s: "❇️",
    c: 6,
    d: "#0fb714"
}, {
    n: "copyright",
    k: [1943, 1944, 1817, 501, 551],
    s: "©️",
    c: 6,
    d: "#4a4a4a"
}, {
    n: "registered",
    k: [1945, 1817],
    s: "®️",
    c: 6,
    d: "#494949"
}, {
    n: "tm",
    k: [1946, 1947, 1948, 501, 551],
    s: "™️",
    c: 6,
    d: "#484848"
}, {
    n: "hash",
    k: [1949, 112, 1865, 176, 760, 1950],
    s: "#️⃣",
    c: 6,
    d: "#7391ab"
}, {
    n: "keycap_star",
    k: [1949, 50, 112],
    s: "*️⃣",
    c: 6,
    d: "#7390ab"
}, {
    n: "zero",
    k: [1951, 776, 176, 760, 1952],
    s: "0️⃣",
    c: 6,
    d: "#7391ac"
}, {
    n: "one",
    k: [73, 176, 760, 776],
    s: "1️⃣",
    c: 6,
    d: "#7290ab"
}, {
    n: "two",
    k: [336, 776, 1953, 176, 760],
    s: "2️⃣",
    c: 6,
    d: "#7391ac"
}, {
    n: "three",
    k: [1425, 776, 1953, 176, 760],
    s: "3️⃣",
    c: 6,
    d: "#7390ac"
}, {
    n: "four",
    k: [1428, 776, 176, 760],
    s: "4️⃣",
    c: 6,
    d: "#7290ab"
}, {
    n: "five",
    k: [319, 776, 176, 760, 1953],
    s: "5️⃣",
    c: 6,
    d: "#728faa"
}, {
    n: "six",
    k: [1434, 776, 176, 760],
    s: "6️⃣",
    c: 6,
    d: "#7290ab"
}, {
    n: "seven",
    k: [1437, 776, 176, 760, 1953],
    s: "7️⃣",
    c: 6,
    d: "#718faa"
}, {
    n: "eight",
    k: [1440, 176, 760, 776],
    s: "8️⃣",
    c: 6,
    d: "#7290ab"
}, {
    n: "nine",
    k: [1443, 176, 760, 776],
    s: "9️⃣",
    c: 6,
    d: "#7390ab"
}, {
    n: "keycap_ten",
    k: [1446, 776, 176, 760],
    s: "🔟",
    c: 6,
    d: "#7290aa"
}, {
    n: "capital_abcd",
    k: [1954, 1955, 1945, 801, 176, 760],
    s: "🔠",
    c: 6,
    d: "#7491ac"
}, {
    n: "abcd",
    k: [1955, 176, 760, 1945],
    s: "🔡",
    c: 6,
    d: "#7491ac"
}, {
    n: "1234",
    k: [1956, 176, 760],
    s: "🔢",
    c: 6,
    d: "#7491ac"
}, {
    n: "symbols",
    k: [176, 760, 1557, 1684, 1957, 1958, 1959, 1960],
    s: "🔣",
    c: 6,
    d: "#7592ad"
}, {
    n: "abc",
    k: [1961, 176, 760, 1945],
    s: "🔤",
    c: 6,
    d: "#7492ad"
}, {
    n: "a",
    k: [174, 760, 1945, 1663],
    s: "🅰️",
    c: 6,
    d: "#e23120"
}, {
    n: "ab",
    k: [1602, 174, 760, 1945],
    s: "🆎",
    c: 6,
    d: "#e13323"
}, {
    n: "b",
    k: [174, 760, 1945, 1663],
    s: "🅱️",
    c: 6,
    d: "#e13221"
}, {
    n: "cl",
    k: [1945, 801, 174, 760],
    s: "🆑",
    c: 6,
    d: "#e23423"
}, {
    n: "cool",
    k: [801, 176, 760],
    s: "🆒",
    c: 6,
    d: "#7593ad"
}, {
    n: "free",
    k: [176, 760, 801],
    s: "🆓",
    c: 6,
    d: "#7593ad"
}, {
    n: "information_source",
    k: [1962, 176, 760, 1945, 1663],
    s: "ℹ️",
    c: 6,
    d: "#7290ac"
}, {
    n: "id",
    k: [759, 760, 801],
    s: "🆔",
    c: 6,
    d: "#9d48b6"
}, {
    n: "m",
    k: [1945, 176, 1817, 1663],
    s: "Ⓜ️",
    c: 6,
    d: "#1166ea"
}, {
    n: "new",
    k: [176, 760, 801, 1963],
    s: "🆕",
    c: 6,
    d: "#7592ad"
}, {
    n: "ng",
    k: [176, 760, 801, 1849, 1964],
    s: "🆖",
    c: 6,
    d: "#7592ac"
}, {
    n: "o2",
    k: [1965, 1945, 174, 760, 1663],
    s: "🅾️",
    c: 6,
    d: "#e13322"
}, {
    n: "ok",
    k: [339, 360, 358, 176, 760],
    s: "🆗",
    c: 6,
    d: "#7592ac"
}, {
    n: "parking",
    k: [1966, 1336, 176, 760, 1945, 1663],
    s: "🅿️",
    c: 6,
    d: "#1070dd"
}, {
    n: "sos",
    k: [1967, 174, 760, 801, 1363, 554],
    s: "🆘",
    c: 6,
    d: "#e13323"
}, {
    n: "up",
    k: [168, 176, 760, 1968, 318],
    s: "🆙",
    c: 6,
    d: "#7592ac"
}, {
    n: "vs",
    k: [801, 953, 760],
    s: "🆚",
    c: 6,
    d: "#f89d14"
}, {
    n: "koko",
    k: [287, 1695, 1602, 176, 760, 1969],
    s: "🈁",
    c: 6,
    d: "#7491ac"
}, {
    n: "sa",
    k: [287, 1396, 1970, 1602, 176, 760],
    s: "🈂️",
    c: 6,
    d: "#1172dd"
}, {
    n: "u6708",
    k: [1971, 1972, 1973, 583, 1974, 1975, 953, 760, 1211],
    s: "🈷️",
    c: 6,
    d: "#f89c13"
}, {
    n: "u6709",
    k: [1976, 287, 1824, 1977, 881, 1970, 1602, 953, 760, 583, 1978, 1211],
    s: "🈶",
    c: 6,
    d: "#f79c14"
}, {
    n: "u6307",
    k: [1979, 1980, 583, 348, 166, 760, 1211],
    s: "🈯",
    c: 6,
    d: "#1eba23"
}, {
    n: "ideograph_advantage",
    k: [1981, 1982, 1983, 583, 1211, 1984, 1985, 1817],
    s: "🉐",
    c: 6,
    d: "#f21d19"
}, {
    n: "u5272",
    k: [1986, 1987, 1702, 1988, 583, 1211, 480, 760],
    s: "🈹",
    c: 6,
    d: "#e13a2a"
}, {
    n: "u7121",
    k: [1989, 1977, 1970, 1990, 583, 1211, 953, 760],
    s: "🈚",
    c: 6,
    d: "#f79e1b"
}, {
    n: "u7981",
    k: [1991, 1821, 1211, 583, 1992, 1402, 1993, 174, 760],
    s: "🈲",
    c: 6,
    d: "#df392a"
}, {
    n: "accept",
    k: [287, 1994, 1602, 1928, 339, 583, 1211, 360, 358, 953, 1817],
    s: "🉑",
    c: 6,
    d: "#f89412"
}, {
    n: "u7533",
    k: [1995, 1996, 583, 1211, 953, 760],
    s: "🈸",
    c: 6,
    d: "#f89c13"
}, {
    n: "u5408",
    k: [1997, 1998, 1999, 583, 2e3, 1211, 174, 760],
    s: "🈴",
    c: 6,
    d: "#e13625"
}, {
    n: "u7a7a",
    k: [2001, 2002, 1211, 583, 2003, 1312, 176, 760],
    s: "🈳",
    c: 6,
    d: "#1774dd"
}, {
    n: "congratulations",
    k: [1105, 287, 1602, 583, 1211, 174, 1817],
    s: "㊗️",
    c: 6,
    d: "#f31b17"
}, {
    n: "secret",
    k: [287, 1602, 1714, 583, 2004, 1211, 174, 1817],
    s: "㊙️",
    c: 6,
    d: "#f31d19"
}, {
    n: "u55b6",
    k: [2005, 287, 169, 1891, 519, 1602, 2006, 2007, 953, 760],
    s: "🈺",
    c: 6,
    d: "#f79d17"
}, {
    n: "u6e80",
    k: [2008, 116, 2002, 2009, 583, 174, 760, 1211],
    s: "🈵",
    c: 6,
    d: "#e0392a"
}, {
    n: "red_circle",
    k: [1849, 1365, 276],
    s: "🔴",
    c: 6,
    d: "#cb1d1c"
}, {
    n: "large_orange_circle",
    k: [74, 1861],
    s: "🟠",
    c: 6,
    d: "#df7f09"
}, {
    n: "large_yellow_circle",
    k: [74, 1861],
    s: "🟡",
    c: 6,
    d: "#fad40c"
}, {
    n: "large_green_circle",
    k: [74, 1861],
    s: "🟢",
    c: 6,
    d: "#07a907"
}, {
    n: "large_blue_circle",
    k: [74, 1849, 1964, 1602],
    s: "🔵",
    c: 6,
    d: "#0a55c4"
}, {
    n: "large_purple_circle",
    k: [74, 1861],
    s: "🟣",
    c: 6,
    d: "#aa2cf5"
}, {
    n: "large_brown_circle",
    k: [74, 1861],
    s: "🟤",
    c: 6,
    d: "#754320"
}, {
    n: "black_circle",
    k: [1849, 1602, 1861],
    s: "⚫",
    c: 6,
    d: "#131313"
}, {
    n: "white_circle",
    k: [1849, 1861],
    s: "⚪",
    c: 6,
    d: "#dcdcdc"
}, {
    n: "large_red_square",
    k: [74],
    s: "🟥",
    c: 6,
    d: "#d52918"
}, {
    n: "large_orange_square",
    k: [74],
    s: "🟧",
    c: 6,
    d: "#fc8d07"
}, {
    n: "large_yellow_square",
    k: [74],
    s: "🟨",
    c: 6,
    d: "#f4be06"
}, {
    n: "large_green_square",
    k: [74],
    s: "🟩",
    c: 6,
    d: "#0ab509"
}, {
    n: "large_blue_square",
    k: [74],
    s: "🟦",
    c: 6,
    d: "#0d62f4"
}, {
    n: "large_purple_square",
    k: [74],
    s: "🟪",
    c: 6,
    d: "#bc35fc"
}, {
    n: "large_brown_square",
    k: [74],
    s: "🟫",
    c: 6,
    d: "#784723"
}, {
    n: "black_large_square",
    k: [1849, 1964, 1602],
    s: "⬛",
    c: 6,
    d: "#141413"
}, {
    n: "white_large_square",
    k: [1849, 1964, 1264, 1602],
    s: "⬜",
    c: 6,
    d: "#dcdcdc"
}, {
    n: "black_medium_square",
    k: [1849, 1602, 1964],
    s: "◼️",
    c: 6,
    d: "#070707"
}, {
    n: "white_medium_square",
    k: [1849, 1264, 1964],
    s: "◻️",
    c: 6,
    d: "#dcdcdc"
}, {
    n: "black_medium_small_square",
    k: [1964, 1849, 1602],
    s: "◾",
    c: 6,
    d: "#080808"
}, {
    n: "white_medium_small_square",
    k: [1849, 1264, 1964, 1602],
    s: "◽",
    c: 6,
    d: "#dcdcdc"
}, {
    n: "black_small_square",
    k: [1849, 1964],
    s: "▪️",
    c: 6,
    d: "#1c1c1b"
}, {
    n: "white_small_square",
    k: [1849, 1964],
    s: "▫️",
    c: 6,
    d: "#dcdcdc"
}, {
    n: "large_orange_diamond",
    k: [1849, 2010, 1544],
    s: "🔶",
    c: 6,
    d: "#f6980a"
}, {
    n: "large_blue_diamond",
    k: [1849, 2010, 1544],
    s: "🔷",
    c: 6,
    d: "#0865c0"
}, {
    n: "small_orange_diamond",
    k: [1849, 2010, 1544],
    s: "🔸",
    c: 6,
    d: "#f7990a"
}, {
    n: "small_blue_diamond",
    k: [1849, 2010, 1544],
    s: "🔹",
    c: 6,
    d: "#0a68c2"
}, {
    n: "small_red_triangle",
    k: [76, 1849, 349, 1836],
    s: "🔺",
    c: 6,
    d: "#e21806"
}, {
    n: "small_red_triangle_down",
    k: [76, 1849, 349, 1842],
    s: "🔻",
    c: 6,
    d: "#ed2e1b"
}, {
    n: "diamond_shape_with_a_dot_inside",
    k: [1849, 2011, 2010, 176, 1544, 2012, 2013],
    s: "💠",
    c: 6,
    d: "#93d0ea"
}, {
    n: "radio_button",
    k: [1600, 460, 1557, 1817],
    s: "🔘",
    c: 6,
    d: "#666666"
}, {
    n: "white_square_button",
    k: [1849, 1600],
    s: "🔳",
    c: 6,
    d: "#111111"
}, {
    n: "black_square_button",
    k: [1849, 1600, 1215],
    s: "🔲",
    c: 6,
    d: "#272727"
}, {
    n: "checkered_flag",
    k: [2014, 1137, 2015, 639, 2016],
    s: "🏁",
    c: 7,
    d: "#595a5a"
}, {
    n: "cn",
    k: [2017, 583, 2018, 1243, 1242, 1120],
    s: "🇨🇳",
    c: 7,
    d: "#be2936"
}, {
    n: "crossed_flags",
    k: [287, 1242, 1243, 1812],
    s: "🎌",
    c: 7,
    d: "#d1cecf"
}, {
    n: "de",
    k: [1922, 2019, 1242, 1243, 1120],
    s: "🇩🇪",
    c: 7,
    d: "#d42c14"
}, {
    n: "es",
    k: [2020, 1242, 1243, 1120],
    s: "🇪🇸",
    c: 7,
    d: "#a74d2c"
}, {
    n: "flag-ac",
    k: [2021],
    s: "🇦🇨",
    c: 7,
    d: "#26437a"
}, {
    n: "flag-ad",
    k: [2022, 1242, 1243, 1120],
    s: "🇦🇩",
    c: 7,
    d: "#dab342"
}, {
    n: "flag-ae",
    k: [2023, 1242, 1243, 1120],
    s: "🇦🇪",
    c: 7,
    d: "#30462f"
}, {
    n: "flag-af",
    k: [2024, 1242, 1243, 1120],
    s: "🇦🇫",
    c: 7,
    d: "#c95044"
}, {
    n: "flag-ag",
    k: [2025, 1242, 1243, 1120],
    s: "🇦🇬",
    c: 7,
    d: "#9f232e"
}, {
    n: "flag-ai",
    k: [2026, 1242, 1243, 1120],
    s: "🇦🇮",
    c: 7,
    d: "#281f64"
}, {
    n: "flag-al",
    k: [2027, 1242, 1243, 1120],
    s: "🇦🇱",
    c: 7,
    d: "#b42f36"
}, {
    n: "flag-am",
    k: [2028, 1242, 1243, 1120],
    s: "🇦🇲",
    c: 7,
    d: "#d6541e"
}, {
    n: "flag-ao",
    k: [2029, 1242, 1243, 1120],
    s: "🇦🇴",
    c: 7,
    d: "#b72e38"
}, {
    n: "flag-aq",
    k: [2030, 1242, 1243, 1120],
    s: "🇦🇶",
    c: 7,
    d: "#4677af"
}, {
    n: "flag-ar",
    k: [2031, 1242, 1243, 1120],
    s: "🇦🇷",
    c: 7,
    d: "#7aa1c5"
}, {
    n: "flag-as",
    k: [2032, 2033, 1242, 1243, 1120],
    s: "🇦🇸",
    c: 7,
    d: "#36265a"
}, {
    n: "flag-at",
    k: [2034, 1242, 1243, 1120],
    s: "🇦🇹",
    c: 7,
    d: "#ce3b36"
}, {
    n: "flag-au",
    k: [2035, 1242, 1243, 1120],
    s: "🇦🇺",
    c: 7,
    d: "#213e7e"
}, {
    n: "flag-aw",
    k: [234, 1242, 1243, 1120],
    s: "🇦🇼",
    c: 7,
    d: "#6683a4"
}, {
    n: "flag-ax",
    k: [2036, 2037, 2038, 1242, 1243, 1120],
    s: "🇦🇽",
    c: 7,
    d: "#1e578f"
}, {
    n: "flag-az",
    k: [2039, 1242, 1243, 1120],
    s: "🇦🇿",
    c: 7,
    d: "#1f938d"
}, {
    n: "flag-ba",
    k: [2040, 1242, 1243, 1120],
    s: "🇧🇦",
    c: 7,
    d: "#282885"
}, {
    n: "flag-bb",
    k: [2041, 1242, 1243, 1120],
    s: "🇧🇧",
    c: 7,
    d: "#142d6c"
}, {
    n: "flag-bd",
    k: [2042, 1242, 1243, 1120],
    s: "🇧🇩",
    c: 7,
    d: "#206753"
}, {
    n: "flag-be",
    k: [2043, 1242, 1243, 1120],
    s: "🇧🇪",
    c: 7,
    d: "#e6d050"
}, {
    n: "flag-bf",
    k: [2044, 1242, 1243, 1120],
    s: "🇧🇫",
    c: 7,
    d: "#d34140"
}, {
    n: "flag-bg",
    k: [2045, 1242, 1243, 1120],
    s: "🇧🇬",
    c: 7,
    d: "#d3d9d6"
}, {
    n: "flag-bh",
    k: [2046, 1242, 1243, 1120],
    s: "🇧🇭",
    c: 7,
    d: "#bf2d3c"
}, {
    n: "flag-bi",
    k: [2047, 1242, 1243, 1120],
    s: "🇧🇮",
    c: 7,
    d: "#d9cdc9"
}, {
    n: "flag-bj",
    k: [2048, 1242, 1243, 1120],
    s: "🇧🇯",
    c: 7,
    d: "#cf4538"
}, {
    n: "flag-bl",
    k: [2049, 2050, 2051, 2052, 1242, 1243, 1120],
    s: "🇧🇱",
    c: 7,
    d: "#d0d0ce"
}, {
    n: "flag-bm",
    k: [2053, 1242, 1243, 1120],
    s: "🇧🇲",
    c: 7,
    d: "#b72a2b"
}, {
    n: "flag-bn",
    k: [2054, 2055, 1242, 1243, 1120],
    s: "🇧🇳",
    c: 7,
    d: "#d4c45c"
}, {
    n: "flag-bo",
    k: [2056, 1242, 1243, 1120],
    s: "🇧🇴",
    c: 7,
    d: "#bb4d3a"
}, {
    n: "flag-bq",
    k: [2057, 2058, 1242, 1243, 1120],
    s: "🇧🇶",
    c: 7,
    d: "#d1cdbb"
}, {
    n: "flag-br",
    k: [2059, 1242, 1243, 1120],
    s: "🇧🇷",
    c: 7,
    d: "#208e63"
}, {
    n: "flag-bs",
    k: [2060, 1242, 1243, 1120],
    s: "🇧🇸",
    c: 7,
    d: "#249fb2"
}, {
    n: "flag-bt",
    k: [2061, 1242, 1243, 1120],
    s: "🇧🇹",
    c: 7,
    d: "#d07a42"
}, {
    n: "flag-bv",
    k: [2062, 2063],
    s: "🇧🇻",
    c: 7,
    d: "#cd3e38"
}, {
    n: "flag-bw",
    k: [2064, 1242, 1243, 1120],
    s: "🇧🇼",
    c: 7,
    d: "#7da1c2"
}, {
    n: "flag-by",
    k: [2065, 1242, 1243, 1120],
    s: "🇧🇾",
    c: 7,
    d: "#bc2725"
}, {
    n: "flag-bz",
    k: [2066, 1242, 1243, 1120],
    s: "🇧🇿",
    c: 7,
    d: "#304971"
}, {
    n: "flag-ca",
    k: [947, 1242, 1243, 1120],
    s: "🇨🇦",
    c: 7,
    d: "#d91a1a"
}, {
    n: "flag-cc",
    k: [2067, 2068, 1242, 1243, 1120],
    s: "🇨🇨",
    c: 7,
    d: "#2c7e28"
}, {
    n: "flag-cd",
    k: [1610, 2069, 2070, 1242, 1243, 1120],
    s: "🇨🇩",
    c: 7,
    d: "#2099c3"
}, {
    n: "flag-cf",
    k: [2071, 1242, 1243, 1120],
    s: "🇨🇫",
    c: 7,
    d: "#bcb374"
}, {
    n: "flag-cg",
    k: [2072, 1242, 1243, 1120],
    s: "🇨🇬",
    c: 7,
    d: "#e0c058"
}, {
    n: "flag-ch",
    k: [2073, 1242, 1243, 1120],
    s: "🇨🇭",
    c: 7,
    d: "#d21919"
}, {
    n: "flag-ci",
    k: [2074, 2075, 2076, 2077, 2078, 2079, 1242, 1243, 1120],
    s: "🇨🇮",
    c: 7,
    d: "#eae7df"
}, {
    n: "flag-ck",
    k: [2080, 1242, 1243, 1120],
    s: "🇨🇰",
    c: 7,
    d: "#2c2268"
}, {
    n: "flag-cl",
    k: [2081, 1242, 1243, 1120],
    s: "🇨🇱",
    c: 7,
    d: "#bf392e"
}, {
    n: "flag-cm",
    k: [2082, 1242, 1243, 1120],
    s: "🇨🇲",
    c: 7,
    d: "#c95f39"
}, {
    n: "flag-co",
    k: [2083, 1242, 1243, 1120],
    s: "🇨🇴",
    c: 7,
    d: "#dfc031"
}, {
    n: "flag-cp",
    k: [2084],
    s: "🇨🇵",
    c: 7,
    d: "#e5dfe2"
}, {
    n: "flag-cr",
    k: [2085, 1242, 1243, 1120],
    s: "🇨🇷",
    c: 7,
    d: "#d3c8d0"
}, {
    n: "flag-cu",
    k: [2086, 1242, 1243, 1120],
    s: "🇨🇺",
    c: 7,
    d: "#994663"
}, {
    n: "flag-cv",
    k: [2087, 2088, 1242, 1243, 1120],
    s: "🇨🇻",
    c: 7,
    d: "#204688"
}, {
    n: "flag-cw",
    k: [2089, 2090, 1242, 1243, 1120],
    s: "🇨🇼",
    c: 7,
    d: "#203e7a"
}, {
    n: "flag-cx",
    k: [2091, 1242, 1243, 1120],
    s: "🇨🇽",
    c: 7,
    d: "#2d5e78"
}, {
    n: "flag-cy",
    k: [2092, 1242, 1243, 1120],
    s: "🇨🇾",
    c: 7,
    d: "#dfdfdc"
}, {
    n: "flag-cz",
    k: [2093, 1242, 1243, 1120],
    s: "🇨🇿",
    c: 7,
    d: "#e3dfe0"
}, {
    n: "flag-dg",
    k: [2094],
    s: "🇩🇬",
    c: 7,
    d: "#9c9baf"
}, {
    n: "flag-dj",
    k: [2095, 1242, 1243, 1120],
    s: "🇩🇯",
    c: 7,
    d: "#6cadb6"
}, {
    n: "flag-dk",
    k: [2096, 1242, 1243, 1120],
    s: "🇩🇰",
    c: 7,
    d: "#b1223c"
}, {
    n: "flag-dm",
    k: [2097, 1242, 1243, 1120],
    s: "🇩🇲",
    c: 7,
    d: "#1c7d46"
}, {
    n: "flag-do",
    k: [1823, 1242, 1243, 1120],
    s: "🇩🇴",
    c: 7,
    d: "#d5c7cc"
}, {
    n: "flag-dz",
    k: [2098, 1242, 1243, 1120],
    s: "🇩🇿",
    c: 7,
    d: "#dfd9d8"
}, {
    n: "flag-ea",
    k: [2099],
    s: "🇪🇦",
    c: 7,
    d: "#a74d2c"
}, {
    n: "flag-ec",
    k: [2100, 1242, 1243, 1120],
    s: "🇪🇨",
    c: 7,
    d: "#cbb334"
}, {
    n: "flag-ee",
    k: [2101, 1242, 1243, 1120],
    s: "🇪🇪",
    c: 7,
    d: "#3a506d"
}, {
    n: "flag-eg",
    k: [2102, 1242, 1243, 1120],
    s: "🇪🇬",
    c: 7,
    d: "#ded0ca"
}, {
    n: "flag-eh",
    k: [2103, 1242, 1243, 1120],
    s: "🇪🇭",
    c: 7,
    d: "#2f4936"
}, {
    n: "flag-england",
    k: [2104],
    s: "🏴󠁧󠁢󠁥󠁮󠁧󠁿",
    c: 7,
    d: "#d9cdcd"
}, {
    n: "flag-er",
    k: [2105, 1242, 1243, 1120],
    s: "🇪🇷",
    c: 7,
    d: "#487e51"
}, {
    n: "flag-et",
    k: [2106, 1242, 1243, 1120],
    s: "🇪🇹",
    c: 7,
    d: "#a55f43"
}, {
    n: "flag-eu",
    k: [2107, 1120],
    s: "🇪🇺",
    c: 7,
    d: "#1e438b"
}, {
    n: "flag-fi",
    k: [2108, 1242, 1243, 1120],
    s: "🇫🇮",
    c: 7,
    d: "#d2d5d8"
}, {
    n: "flag-fj",
    k: [2109, 1242, 1243, 1120],
    s: "🇫🇯",
    c: 7,
    d: "#289ec4"
}, {
    n: "flag-fk",
    k: [2110, 2111, 1242, 1243, 1120],
    s: "🇫🇰",
    c: 7,
    d: "#2c497f"
}, {
    n: "flag-fm",
    k: [2112, 2113, 2114, 1242, 1243, 1120],
    s: "🇫🇲",
    c: 7,
    d: "#78a6c6"
}, {
    n: "flag-fo",
    k: [2115, 1242, 1243, 1120],
    s: "🇫🇴",
    c: 7,
    d: "#d7d6d8"
}, {
    n: "flag-ga",
    k: [2116, 1242, 1243, 1120],
    s: "🇬🇦",
    c: 7,
    d: "#348488"
}, {
    n: "flag-gd",
    k: [2117, 1242, 1243, 1120],
    s: "🇬🇩",
    c: 7,
    d: "#ab4e36"
}, {
    n: "flag-ge",
    k: [2118, 1242, 1243, 1120],
    s: "🇬🇪",
    c: 7,
    d: "#dbc7ca"
}, {
    n: "flag-gf",
    k: [2119, 1242, 1243, 1120],
    s: "🇬🇫",
    c: 7,
    d: "#c5bb24"
}, {
    n: "flag-gg",
    k: [2120, 1242, 1243, 1120],
    s: "🇬🇬",
    c: 7,
    d: "#dad2d3"
}, {
    n: "flag-gh",
    k: [2121, 1242, 1243, 1120],
    s: "🇬🇭",
    c: 7,
    d: "#d2a830"
}, {
    n: "flag-gi",
    k: [2122, 1242, 1243, 1120],
    s: "🇬🇮",
    c: 7,
    d: "#ded1d1"
}, {
    n: "flag-gl",
    k: [2123, 1242, 1243, 1120],
    s: "🇬🇱",
    c: 7,
    d: "#e2d7d9"
}, {
    n: "flag-gm",
    k: [2124, 1242, 1243, 1120],
    s: "🇬🇲",
    c: 7,
    d: "#295c5b"
}, {
    n: "flag-gn",
    k: [2125, 1242, 1243, 1120],
    s: "🇬🇳",
    c: 7,
    d: "#e9c44b"
}, {
    n: "flag-gp",
    k: [2126, 1242, 1243, 1120],
    s: "🇬🇵",
    c: 7,
    d: "#1e2a39"
}, {
    n: "flag-gq",
    k: [2127, 2125, 1242, 1243, 1120],
    s: "🇬🇶",
    c: 7,
    d: "#afc499"
}, {
    n: "flag-gr",
    k: [2128, 1242, 1243, 1120],
    s: "🇬🇷",
    c: 7,
    d: "#343481"
}, {
    n: "flag-gs",
    k: [2129, 1242, 1243, 1120],
    s: "🇬🇸",
    c: 7,
    d: "#2e4576"
}, {
    n: "flag-gt",
    k: [2130, 1242, 1243, 1120],
    s: "🇬🇹",
    c: 7,
    d: "#7aaabd"
}, {
    n: "flag-gu",
    k: [2131, 1242, 1243, 1120],
    s: "🇬🇺",
    c: 7,
    d: "#25609c"
}, {
    n: "flag-gw",
    k: [2132, 2133, 2134, 1242, 1243, 1120],
    s: "🇬🇼",
    c: 7,
    d: "#dfbf36"
}, {
    n: "flag-gy",
    k: [2135, 1242, 1243, 1120],
    s: "🇬🇾",
    c: 7,
    d: "#3aa264"
}, {
    n: "flag-hk",
    k: [2136, 1242, 1243, 1120],
    s: "🇭🇰",
    c: 7,
    d: "#b72535"
}, {
    n: "flag-hm",
    k: [2137],
    s: "🇭🇲",
    c: 7,
    d: "#213e7e"
}, {
    n: "flag-hn",
    k: [2138, 1242, 1243, 1120],
    s: "🇭🇳",
    c: 7,
    d: "#2152a8"
}, {
    n: "flag-hr",
    k: [2139, 1242, 1243, 1120],
    s: "🇭🇷",
    c: 7,
    d: "#d3afb2"
}, {
    n: "flag-ht",
    k: [2140, 1242, 1243, 1120],
    s: "🇭🇹",
    c: 7,
    d: "#422e79"
}, {
    n: "flag-hu",
    k: [2141, 1242, 1243, 1120],
    s: "🇭🇺",
    c: 7,
    d: "#dacac9"
}, {
    n: "flag-ic",
    k: [2142, 1242, 1243, 1120],
    s: "🇮🇨",
    c: 7,
    d: "#c1c7c1"
}, {
    n: "flag-id",
    k: [2143, 1242, 1243, 1120],
    s: "🇮🇩",
    c: 7,
    d: "#c72727"
}, {
    n: "flag-ie",
    k: [2144, 1242, 1243, 1120],
    s: "🇮🇪",
    c: 7,
    d: "#e7eae5"
}, {
    n: "flag-il",
    k: [2145, 1242, 1243, 1120],
    s: "🇮🇱",
    c: 7,
    d: "#ccd0d8"
}, {
    n: "flag-im",
    k: [2146, 1242, 1243, 1120],
    s: "🇮🇲",
    c: 7,
    d: "#b72e3f"
}, {
    n: "flag-in",
    k: [742, 1242, 1243, 1120],
    s: "🇮🇳",
    c: 7,
    d: "#d6cec6"
}, {
    n: "flag-io",
    k: [2147, 1242, 1243, 1120],
    s: "🇮🇴",
    c: 7,
    d: "#9c9baf"
}, {
    n: "flag-iq",
    k: [2148, 1242, 1243, 1120],
    s: "🇮🇶",
    c: 7,
    d: "#d0bfbf"
}, {
    n: "flag-ir",
    k: [2149, 2150, 2070, 1242, 1243, 1120],
    s: "🇮🇷",
    c: 7,
    d: "#b9c8b5"
}, {
    n: "flag-is",
    k: [2151, 1242, 1243, 1120],
    s: "🇮🇸",
    c: 7,
    d: "#224b91"
}, {
    n: "flag-je",
    k: [2152, 1242, 1243, 1120],
    s: "🇯🇪",
    c: 7,
    d: "#ddd1d2"
}, {
    n: "flag-jm",
    k: [2153, 1242, 1243, 1120],
    s: "🇯🇲",
    c: 7,
    d: "#5e8c3a"
}, {
    n: "flag-jo",
    k: [2154, 1242, 1243, 1120],
    s: "🇯🇴",
    c: 7,
    d: "#304633"
}, {
    n: "flag-ke",
    k: [2155, 1242, 1243, 1120],
    s: "🇰🇪",
    c: 7,
    d: "#3f361d"
}, {
    n: "flag-kg",
    k: [2156, 1242, 1243, 1120],
    s: "🇰🇬",
    c: 7,
    d: "#d1283a"
}, {
    n: "flag-kh",
    k: [2157, 1242, 1243, 1120],
    s: "🇰🇭",
    c: 7,
    d: "#ae202d"
}, {
    n: "flag-ki",
    k: [2158, 1242, 1243, 1120],
    s: "🇰🇮",
    c: 7,
    d: "#c94f54"
}, {
    n: "flag-km",
    k: [2159, 1242, 1243, 1120],
    s: "🇰🇲",
    c: 7,
    d: "#dbc68e"
}, {
    n: "flag-kn",
    k: [2160, 2050, 2052, 1242, 1243, 1120],
    s: "🇰🇳",
    c: 7,
    d: "#2d5738"
}, {
    n: "flag-kp",
    k: [2161, 1242, 1243, 1120],
    s: "🇰🇵",
    c: 7,
    d: "#cf4f56"
}, {
    n: "flag-kw",
    k: [2162, 1242, 1243, 1120],
    s: "🇰🇼",
    c: 7,
    d: "#c9d4cf"
}, {
    n: "flag-ky",
    k: [2163, 1242, 1243, 1120],
    s: "🇰🇾",
    c: 7,
    d: "#2b2164"
}, {
    n: "flag-kz",
    k: [2164, 1242, 1243, 1120],
    s: "🇰🇿",
    c: 7,
    d: "#22a3af"
}, {
    n: "flag-la",
    k: [2165, 2166, 2069, 2070, 1242, 1243, 1120],
    s: "🇱🇦",
    c: 7,
    d: "#382d57"
}, {
    n: "flag-lb",
    k: [2167, 1242, 1243, 1120],
    s: "🇱🇧",
    c: 7,
    d: "#dec5bf"
}, {
    n: "flag-lc",
    k: [2168, 2050, 2052, 1242, 1243, 1120],
    s: "🇱🇨",
    c: 7,
    d: "#64b4d6"
}, {
    n: "flag-li",
    k: [2169, 1242, 1243, 1120],
    s: "🇱🇮",
    c: 7,
    d: "#473463"
}, {
    n: "flag-lk",
    k: [2170, 1242, 1243, 1120],
    s: "🇱🇰",
    c: 7,
    d: "#bb6045"
}, {
    n: "flag-lr",
    k: [2171, 1242, 1243, 1120],
    s: "🇱🇷",
    c: 7,
    d: "#c2485b"
}, {
    n: "flag-ls",
    k: [2172, 1242, 1243, 1120],
    s: "🇱🇸",
    c: 7,
    d: "#205c6d"
}, {
    n: "flag-lt",
    k: [2173, 1242, 1243, 1120],
    s: "🇱🇹",
    c: 7,
    d: "#cd9137"
}, {
    n: "flag-lu",
    k: [2174, 1242, 1243, 1120],
    s: "🇱🇺",
    c: 7,
    d: "#d14b4c"
}, {
    n: "flag-lv",
    k: [2175, 1242, 1243, 1120],
    s: "🇱🇻",
    c: 7,
    d: "#802c35"
}, {
    n: "flag-ly",
    k: [2176, 1242, 1243, 1120],
    s: "🇱🇾",
    c: 7,
    d: "#1f3823"
}, {
    n: "flag-ma",
    k: [2177, 1242, 1243, 1120],
    s: "🇲🇦",
    c: 7,
    d: "#cc1625"
}, {
    n: "flag-mc",
    k: [2178, 1242, 1243, 1120],
    s: "🇲🇨",
    c: 7,
    d: "#ba3b4a"
}, {
    n: "flag-md",
    k: [2179, 2070, 1242, 1243, 1120],
    s: "🇲🇩",
    c: 7,
    d: "#d0b62d"
}, {
    n: "flag-me",
    k: [2180, 1242, 1243, 1120],
    s: "🇲🇪",
    c: 7,
    d: "#b41f1c"
}, {
    n: "flag-mf",
    k: [2181, 2050],
    s: "🇲🇫",
    c: 7,
    d: "#e5dfe2"
}, {
    n: "flag-mg",
    k: [2182, 1242, 1243, 1120],
    s: "🇲🇬",
    c: 7,
    d: "#d6635a"
}, {
    n: "flag-mh",
    k: [2183, 1242, 1243, 1120],
    s: "🇲🇭",
    c: 7,
    d: "#2a4e8a"
}, {
    n: "flag-mk",
    k: [2184, 1242, 1243, 1120],
    s: "🇲🇰",
    c: 7,
    d: "#c14137"
}, {
    n: "flag-ml",
    k: [2185, 1242, 1243, 1120],
    s: "🇲🇱",
    c: 7,
    d: "#e6c23d"
}, {
    n: "flag-mm",
    k: [2186, 1242, 1243, 1120],
    s: "🇲🇲",
    c: 7,
    d: "#9eac32"
}, {
    n: "flag-mn",
    k: [2187, 1242, 1243, 1120],
    s: "🇲🇳",
    c: 7,
    d: "#b63433"
}, {
    n: "flag-mo",
    k: [2188, 1242, 1243, 1120],
    s: "🇲🇴",
    c: 7,
    d: "#1b6c59"
}, {
    n: "flag-mp",
    k: [2189, 1242, 1243, 1120],
    s: "🇲🇵",
    c: 7,
    d: "#1d6ca3"
}, {
    n: "flag-mq",
    k: [2190, 1242, 1243, 1120],
    s: "🇲🇶",
    c: 7,
    d: "#495e91"
}, {
    n: "flag-mr",
    k: [2191, 1242, 1243, 1120],
    s: "🇲🇷",
    c: 7,
    d: "#1e9a55"
}, {
    n: "flag-ms",
    k: [2192, 1242, 1243, 1120],
    s: "🇲🇸",
    c: 7,
    d: "#252b6b"
}, {
    n: "flag-mt",
    k: [2193, 1242, 1243, 1120],
    s: "🇲🇹",
    c: 7,
    d: "#b83143"
}, {
    n: "flag-mu",
    k: [2194, 1242, 1243, 1120],
    s: "🇲🇺",
    c: 7,
    d: "#b15255"
}, {
    n: "flag-mv",
    k: [2195, 1242, 1243, 1120],
    s: "🇲🇻",
    c: 7,
    d: "#ad263e"
}, {
    n: "flag-mw",
    k: [2196, 1242, 1243, 1120],
    s: "🇲🇼",
    c: 7,
    d: "#3c3b29"
}, {
    n: "flag-mx",
    k: [2197, 1242, 1243, 1120],
    s: "🇲🇽",
    c: 7,
    d: "#d6d2ce"
}, {
    n: "flag-my",
    k: [2198, 1242, 1243, 1120],
    s: "🇲🇾",
    c: 7,
    d: "#cb8f85"
}, {
    n: "flag-mz",
    k: [2199, 1242, 1243, 1120],
    s: "🇲🇿",
    c: 7,
    d: "#405548"
}, {
    n: "flag-na",
    k: [2200, 1242, 1243, 1120],
    s: "🇳🇦",
    c: 7,
    d: "#22675d"
}, {
    n: "flag-nc",
    k: [2201, 1242, 1243, 1120],
    s: "🇳🇨",
    c: 7,
    d: "#2c5e64"
}, {
    n: "flag-ne",
    k: [2202, 1242, 1243, 1120],
    s: "🇳🇪",
    c: 7,
    d: "#dfd8d0"
}, {
    n: "flag-nf",
    k: [2203, 1242, 1243, 1120],
    s: "🇳🇫",
    c: 7,
    d: "#2b7748"
}, {
    n: "flag-ng",
    k: [2204, 1242, 1243, 1120],
    s: "🇳🇬",
    c: 7,
    d: "#10774e"
}, {
    n: "flag-ni",
    k: [2205, 1242, 1243, 1120],
    s: "🇳🇮",
    c: 7,
    d: "#5c82d3"
}, {
    n: "flag-nl",
    k: [2206, 1242, 1243, 1120],
    s: "🇳🇱",
    c: 7,
    d: "#a1444f"
}, {
    n: "flag-no",
    k: [116, 1242, 1243, 1120],
    s: "🇳🇴",
    c: 7,
    d: "#cd3e38"
}, {
    n: "flag-np",
    k: [2207, 1242, 1243, 1120],
    s: "🇳🇵",
    c: 7,
    d: "#a33d51"
}, {
    n: "flag-nr",
    k: [2208, 1242, 1243, 1120],
    s: "🇳🇷",
    c: 7,
    d: "#213f7a"
}, {
    n: "flag-nu",
    k: [2209, 1242, 1243, 1120],
    s: "🇳🇺",
    c: 7,
    d: "#d5bc3a"
}, {
    n: "flag-nz",
    k: [2210, 1242, 1243, 1120],
    s: "🇳🇿",
    c: 7,
    d: "#1e1c69"
}, {
    n: "flag-om",
    k: [2211, 1865, 1242, 1243, 1120],
    s: "🇴🇲",
    c: 7,
    d: "#da4940"
}, {
    n: "flag-pa",
    k: [2212, 1242, 1243, 1120],
    s: "🇵🇦",
    c: 7,
    d: "#d9d6da"
}, {
    n: "flag-pe",
    k: [2213, 1242, 1243, 1120],
    s: "🇵🇪",
    c: 7,
    d: "#b72433"
}, {
    n: "flag-pf",
    k: [2214, 1242, 1243, 1120],
    s: "🇵🇫",
    c: 7,
    d: "#b53945"
}, {
    n: "flag-pg",
    k: [2215, 1242, 1243, 1120],
    s: "🇵🇬",
    c: 7,
    d: "#ca4644"
}, {
    n: "flag-ph",
    k: [2216, 1242, 1243, 1120],
    s: "🇵🇭",
    c: 7,
    d: "#ac2e43"
}, {
    n: "flag-pk",
    k: [2217, 1242, 1243, 1120],
    s: "🇵🇰",
    c: 7,
    d: "#1f6d1f"
}, {
    n: "flag-pl",
    k: [2218, 1242, 1243, 1120],
    s: "🇵🇱",
    c: 7,
    d: "#e4dfde"
}, {
    n: "flag-pm",
    k: [2219, 2050, 2052, 1242, 1243, 1120],
    s: "🇵🇲",
    c: 7,
    d: "#4f8b97"
}, {
    n: "flag-pn",
    k: [2220, 1242, 1243, 1120],
    s: "🇵🇳",
    c: 7,
    d: "#2f4b74"
}, {
    n: "flag-pr",
    k: [2221, 1242, 1243, 1120],
    s: "🇵🇷",
    c: 7,
    d: "#ae344e"
}, {
    n: "flag-ps",
    k: [2222, 2223, 1242, 1243, 1120],
    s: "🇵🇸",
    c: 7,
    d: "#404b35"
}, {
    n: "flag-pt",
    k: [2224, 1242, 1243, 1120],
    s: "🇵🇹",
    c: 7,
    d: "#d6311d"
}, {
    n: "flag-pw",
    k: [2225, 1242, 1243, 1120],
    s: "🇵🇼",
    c: 7,
    d: "#17a4c3"
}, {
    n: "flag-py",
    k: [2226, 1242, 1243, 1120],
    s: "🇵🇾",
    c: 7,
    d: "#d2bdc1"
}, {
    n: "flag-qa",
    k: [2227, 1242, 1243, 1120],
    s: "🇶🇦",
    c: 7,
    d: "#84374d"
}, {
    n: "flag-re",
    k: [2228, 2229, 1242, 1243, 1120],
    s: "🇷🇪",
    c: 7,
    d: "#2925d3"
}, {
    n: "flag-ro",
    k: [2230, 1242, 1243, 1120],
    s: "🇷🇴",
    c: 7,
    d: "#e2c13e"
}, {
    n: "flag-rs",
    k: [2231, 1242, 1243, 1120],
    s: "🇷🇸",
    c: 7,
    d: "#bd5e5e"
}, {
    n: "flag-rw",
    k: [2232, 1242, 1243, 1120],
    s: "🇷🇼",
    c: 7,
    d: "#2385a7"
}, {
    n: "flag-sa",
    k: [2233, 1242, 1243, 1120],
    s: "🇸🇦",
    c: 7,
    d: "#1d6b44"
}, {
    n: "flag-sb",
    k: [2234, 1242, 1243, 1120],
    s: "🇸🇧",
    c: 7,
    d: "#24615f"
}, {
    n: "flag-sc",
    k: [2235, 1242, 1243, 1120],
    s: "🇸🇨",
    c: 7,
    d: "#c24d47"
}, {
    n: "flag-scotland",
    k: [2236],
    s: "🏴󠁧󠁢󠁳󠁣󠁴󠁿",
    c: 7,
    d: "#2765a5"
}, {
    n: "flag-sd",
    k: [2237, 1242, 1243, 1120],
    s: "🇸🇩",
    c: 7,
    d: "#bd3e55"
}, {
    n: "flag-se",
    k: [2238, 1242, 1243, 1120],
    s: "🇸🇪",
    c: 7,
    d: "#22618b"
}, {
    n: "flag-sg",
    k: [2239, 1242, 1243, 1120],
    s: "🇸🇬",
    c: 7,
    d: "#dbc6c7"
}, {
    n: "flag-sh",
    k: [2240, 2050, 2052, 2241, 2242, 2243, 1242, 1243, 1120],
    s: "🇸🇭",
    c: 7,
    d: "#26437a"
}, {
    n: "flag-si",
    k: [2244, 1242, 1243, 1120],
    s: "🇸🇮",
    c: 7,
    d: "#cf2121"
}, {
    n: "flag-sj",
    k: [2245],
    s: "🇸🇯",
    c: 7,
    d: "#cd3e38"
}, {
    n: "flag-sk",
    k: [2246, 1242, 1243, 1120],
    s: "🇸🇰",
    c: 7,
    d: "#b13142"
}, {
    n: "flag-sl",
    k: [2247, 1242, 1243, 1120],
    s: "🇸🇱",
    c: 7,
    d: "#298c68"
}, {
    n: "flag-sm",
    k: [2248, 1242, 1243, 1120],
    s: "🇸🇲",
    c: 7,
    d: "#247bae"
}, {
    n: "flag-sn",
    k: [2249, 1242, 1243, 1120],
    s: "🇸🇳",
    c: 7,
    d: "#dcd75a"
}, {
    n: "flag-so",
    k: [2250, 1242, 1243, 1120],
    s: "🇸🇴",
    c: 7,
    d: "#4b84c5"
}, {
    n: "flag-sr",
    k: [2251, 1242, 1243, 1120],
    s: "🇸🇷",
    c: 7,
    d: "#bf374b"
}, {
    n: "flag-ss",
    k: [2252, 2237, 1242, 1243, 1120],
    s: "🇸🇸",
    c: 7,
    d: "#204d54"
}, {
    n: "flag-st",
    k: [2050, 2253, 2254, 2255, 1242, 1243, 1120],
    s: "🇸🇹",
    c: 7,
    d: "#339f3c"
}, {
    n: "flag-sv",
    k: [2256, 1242, 1243, 1120],
    s: "🇸🇻",
    c: 7,
    d: "#223693"
}, {
    n: "flag-sx",
    k: [2257, 2258, 1242, 1243, 1120],
    s: "🇸🇽",
    c: 7,
    d: "#c6393f"
}, {
    n: "flag-sy",
    k: [2259, 2260, 2261, 2070, 1242, 1243, 1120],
    s: "🇸🇾",
    c: 7,
    d: "#d4c0c1"
}, {
    n: "flag-sz",
    k: [2262, 1242, 1243, 1120],
    s: "🇸🇿",
    c: 7,
    d: "#934c43"
}, {
    n: "flag-ta",
    k: [2263],
    s: "🇹🇦",
    c: 7,
    d: "#26437a"
}, {
    n: "flag-tc",
    k: [2264, 1242, 1243, 1120],
    s: "🇹🇨",
    c: 7,
    d: "#292164"
}, {
    n: "flag-td",
    k: [2265, 1242, 1243, 1120],
    s: "🇹🇩",
    c: 7,
    d: "#e3bd2d"
}, {
    n: "flag-tf",
    k: [2266, 1242, 1243, 1120],
    s: "🇹🇫",
    c: 7,
    d: "#233e8c"
}, {
    n: "flag-tg",
    k: [2267, 1242, 1243, 1120],
    s: "🇹🇬",
    c: 7,
    d: "#c2ac37"
}, {
    n: "flag-th",
    k: [851, 1242, 1243, 1120],
    s: "🇹🇭",
    c: 7,
    d: "#d7bdc3"
}, {
    n: "flag-tj",
    k: [2268, 1242, 1243, 1120],
    s: "🇹🇯",
    c: 7,
    d: "#e1dbd3"
}, {
    n: "flag-tk",
    k: [2269, 1242, 1243, 1120],
    s: "🇹🇰",
    c: 7,
    d: "#253d73"
}, {
    n: "flag-tl",
    k: [2270, 2271, 2272, 1242, 1243, 1120],
    s: "🇹🇱",
    c: 7,
    d: "#d44b46"
}, {
    n: "flag-tm",
    k: [1946, 1242, 1243, 1120],
    s: "🇹🇲",
    c: 7,
    d: "#1e6b56"
}, {
    n: "flag-tn",
    k: [2273, 1242, 1243, 1120],
    s: "🇹🇳",
    c: 7,
    d: "#cb1825"
}, {
    n: "flag-to",
    k: [2274, 1242, 1243, 1120],
    s: "🇹🇴",
    c: 7,
    d: "#b01919"
}, {
    n: "flag-tr",
    k: [2275, 1242, 1243, 1120],
    s: "🇹🇷",
    c: 7,
    d: "#d13d45"
}, {
    n: "flag-tt",
    k: [2276, 1242, 1243, 1120],
    s: "🇹🇹",
    c: 7,
    d: "#b62836"
}, {
    n: "flag-tv",
    k: [1617, 1242, 1243, 1120],
    s: "🇹🇻",
    c: 7,
    d: "#60869c"
}, {
    n: "flag-tw",
    k: [2277, 1242, 1243, 1120],
    s: "🇹🇼",
    c: 7,
    d: "#d52b49"
}, {
    n: "flag-tz",
    k: [2278, 2279, 2070, 1242, 1243, 1120],
    s: "🇹🇿",
    c: 7,
    d: "#28977e"
}, {
    n: "flag-ua",
    k: [2280, 1242, 1243, 1120],
    s: "🇺🇦",
    c: 7,
    d: "#4d7bb4"
}, {
    n: "flag-ug",
    k: [2281, 1242, 1243, 1120],
    s: "🇺🇬",
    c: 7,
    d: "#af5420"
}, {
    n: "flag-um",
    k: [2282, 2283, 1503],
    s: "🇺🇲",
    c: 7,
    d: "#9c6e89"
}, {
    n: "flag-un",
    k: [2284, 1120],
    s: "🇺🇳",
    c: 7,
    d: "#1ca0d4"
}, {
    n: "flag-uy",
    k: [2285, 1242, 1243, 1120],
    s: "🇺🇾",
    c: 7,
    d: "#babdc5"
}, {
    n: "flag-uz",
    k: [2286, 1242, 1243, 1120],
    s: "🇺🇿",
    c: 7,
    d: "#31956e"
}, {
    n: "flag-va",
    k: [2287, 1242, 1243, 1120],
    s: "🇻🇦",
    c: 7,
    d: "#d1b940"
}, {
    n: "flag-vc",
    k: [2288, 2050, 2052, 1242, 1243, 1120],
    s: "🇻🇨",
    c: 7,
    d: "#20807f"
}, {
    n: "flag-ve",
    k: [2289, 2290, 2070, 1242, 1243, 1120],
    s: "🇻🇪",
    c: 7,
    d: "#c7b24a"
}, {
    n: "flag-vg",
    k: [2291, 2292, 1242, 1243, 1120],
    s: "🇻🇬",
    c: 7,
    d: "#232464"
}, {
    n: "flag-vi",
    k: [2293, 2283, 1503, 2294, 1242, 1243, 1120],
    s: "🇻🇮",
    c: 7,
    d: "#c8c1a2"
}, {
    n: "flag-vn",
    k: [2295, 2296, 2297, 1242, 1243, 1120],
    s: "🇻🇳",
    c: 7,
    d: "#bb2635"
}, {
    n: "flag-vu",
    k: [2298, 1242, 1243, 1120],
    s: "🇻🇺",
    c: 7,
    d: "#2f5327"
}, {
    n: "flag-wales",
    k: [2299],
    s: "🏴󠁧󠁢󠁷󠁬󠁳󠁿",
    c: 7,
    d: "#b04e5c"
}, {
    n: "flag-wf",
    k: [2300, 1242, 1243, 1120],
    s: "🇼🇫",
    c: 7,
    d: "#d1414f"
}, {
    n: "flag-ws",
    k: [2033, 1242, 1243, 1120],
    s: "🇼🇸",
    c: 7,
    d: "#d13a3e"
}, {
    n: "flag-xk",
    k: [2301, 1242, 1243, 1120],
    s: "🇽🇰",
    c: 7,
    d: "#385494"
}, {
    n: "flag-ye",
    k: [2302, 1242, 1243, 1120],
    s: "🇾🇪",
    c: 7,
    d: "#cd4b4b"
}, {
    n: "flag-yt",
    k: [2303, 1242, 1243, 1120],
    s: "🇾🇹",
    c: 7,
    d: "#d2cecf"
}, {
    n: "flag-za",
    k: [2304, 1242, 1243, 1120],
    s: "🇿🇦",
    c: 7,
    d: "#1f575b"
}, {
    n: "flag-zm",
    k: [2305, 1242, 1243, 1120],
    s: "🇿🇲",
    c: 7,
    d: "#31861c"
}, {
    n: "flag-zw",
    k: [2306, 1242, 1243, 1120],
    s: "🇿🇼",
    c: 7,
    d: "#c8b14a"
}, {
    n: "fr",
    k: [2307, 1120, 1242, 978, 1243],
    s: "🇫🇷",
    c: 7,
    d: "#e5dfe2"
}, {
    n: "gb",
    k: [562, 561, 2308, 2309, 2310, 2311, 1242, 1243, 1120, 563, 2312, 2104, 1657, 2313, 1096],
    s: "🇬🇧",
    c: 7,
    d: "#be5262"
}, {
    n: "it",
    k: [2314, 1242, 1243, 1120],
    s: "🇮🇹",
    c: 7,
    d: "#e4e4e1"
}, {
    n: "jp",
    k: [2315, 287, 1242, 1243, 1120],
    s: "🇯🇵",
    c: 7,
    d: "#dbd9d9"
}, {
    n: "kr",
    k: [2316, 1242, 1243, 1120],
    s: "🇰🇷",
    c: 7,
    d: "#d3d1d2"
}, {
    n: "pirate_flag",
    k: [2317, 2318, 1120],
    s: "🏴‍☠️",
    c: 7,
    d: "#343434"
}, {
    n: "rainbow-flag",
    k: [256, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326],
    s: "🏳️‍🌈",
    c: 7,
    d: "#2f85b2"
}, {
    n: "ru",
    k: [2327, 2328, 2329, 1242, 1243, 1120],
    s: "🇷🇺",
    c: 7,
    d: "#d2d1d8"
}, {
    n: "transgender_flag",
    k: [1901],
    s: "🏳️‍⚧️",
    c: 7,
    d: "#d0bdcf"
}, {
    n: "triangular_flag_on_post",
    k: [346, 2330, 762, 2331, 1138],
    s: "🚩",
    c: 7,
    d: "#ac2020"
}, {
    n: "us",
    k: [2294, 2332, 1242, 1243, 1120],
    s: "🇺🇸",
    c: 7,
    d: "#9c6e89"
}, {
    n: "waving_black_flag",
    k: [2333, 279],
    s: "🏴",
    c: 7,
    d: "#303131"
}, {
    n: "waving_white_flag",
    k: [2333, 2334, 2335, 2336, 2337, 2338, 168, 285],
    s: "🏳️",
    c: 7,
    d: "#d3d3d3"
}]
  , K6 = {
    categories: $J,
    keywords: FJ,
    emojis: NJ
}
  , VJ = "emojis"
  , Y6 = `${VJ}:frequencies`;
let Q6, X6, J6;
const BJ = new Intl.DisplayNames(["en"],{
    type: "region"
});
var ev;
(function(t) {
    t.SEARCH = "search",
    t.FREQUENTLY_USED = "frequently_used",
    t.PEOPLE = "people",
    t.ANIMALS_AND_NATURE = "animals_and_nature",
    t.FOOD_AND_DRINK = "food_and_drink",
    t.ACTIVITY = "activity",
    t.TRAVEL_AND_PLACES = "travel_and_places",
    t.OBJECTS = "objects",
    t.SYMBOLS = "symbols",
    t.FLAGS = "flags",
    t.CUSTOM = "custom"
}
)(ev || (ev = {}));
const UJ = new Map([["search", "Search results"], ["frequently_used", "Frequently used"], ["people", "Smileys & People"], ["animals_and_nature", "Animals & Nature"], ["food_and_drink", "Food & Drink"], ["activity", "Activity"], ["travel_and_places", "Travel & Places"], ["objects", "Objects"], ["symbols", "Symbols"], ["flags", "Flags"], ["custom", "Custom"]])
  , ui = class ui extends u_ {
    static loadData() {
        if (Q6)
            return Q6;
        const e = K6.emojis.map(n=>{
            const r = {
                name: n.n,
                symbol: n.s,
                category: K6.categories[n.c],
                keywords: n.k.map(i=>K6.keywords[i]),
                emoticons: n.e ?? [],
                color: n.d
            }
              , s = ui.getCountryNameForEmoji(r);
            return s && r.keywords.push(s),
            r
        }
        );
        return Q6 = e,
        e
    }
    static findNativeByName(e) {
        if (X6)
            return X6[e];
        const n = q6(ui.loadData(), "name");
        return X6 = n,
        n[e]
    }
    static findNativeBySymbol(e) {
        if (J6)
            return J6[e];
        const n = q6(ui.loadData(), "symbol");
        return J6 = n,
        n[e]
    }
    static getFrequentlyUsed(e, n, r) {
        const s = ui.getUsageFrequencies(e)
          , i = q6(n, "name")
          , a = Object.keys(i)
          , o = Object.entries(s.scores).sortBy(([,l])=>-l).filter(([l])=>!!a.includes(l)).map(([l])=>l).slice(0, r);
        return s.lastUsed && !o.includes(s.lastUsed) && (o[o.length - 1] = s.lastUsed),
        o.map(l=>i[l]).filter(Boolean)
    }
    static emojiWasUsed(e, n) {
        const r = ui.getUsageFrequencies(e);
        r.lastUsed = n,
        r.scores[n] || (r.scores[n] = 0),
        r.scores[n] += 1,
        ui.setUsageFrequencies(e, r)
    }
    static getFuzzyMatches(e, n) {
        const r = [];
        return e.forEach(function(s) {
            const i = [s.name, ...s.keywords].reduce((a,o)=>{
                const l = o1.score(o, n);
                return l > a ? l : a
            }
            , 0);
            i > .25 && r.push({
                score: i,
                item: s
            })
        }),
        r.sort(function(s, i) {
            return s.score === i.score ? s.item.name.localeCompare(i.item.name) : i.score - s.score
        }).map(s=>s.item)
    }
    static getCategoryLabel(e) {
        const n = UJ.get(e);
        if (!n)
            throw new Error("Unrecognized Emoji category");
        return n
    }
    static score(e, n) {
        var f;
        const r = "keywords"in e ? e.keywords : []
          , s = "emoticons"in e ? e.emoticons ?? [] : []
          , i = o1.score(e.name, n)
          , a = o1.score(r, n)
          , o = n.length <= 3 ? o1.score(s, `:${n}`) : 0
          , l = Math.max(i, o1.prioritize(o, 1e3), o1.deprioritize(a, 2));
        if (e.name === n && n.length > 3)
            return o1.prioritize(l, 1e3);
        if (ui.COMMON_EMOJIS.indexOf(e.name) > -1)
            return o1.prioritize(l, n.includes(e.name) || e.name.includes(n) ? 100 : 2);
        const u = (f = ui.getCountryNameForEmoji(e)) == null ? void 0 : f.toLowerCase()
          , h = n.toLowerCase();
        return u && (h.length > 3 && u.startsWith(h) || h === u) ? a : l
    }
    static getUsageFrequencies(e) {
        let n = ke.getPersistent(Y6, e);
        return typeof n > "u" && (n = {
            lastUsed: null,
            scores: this.COMMON_EMOJIS.reduce((r,s)=>(r[s] = 1,
            r), {})
        },
        ui.setUsageFrequencies(e, n),
        ke.setPersistent(Y6, e, n)),
        n
    }
    static setUsageFrequencies(e, n) {
        ke.setPersistent(Y6, e, n)
    }
    static getCountryNameForEmoji(e) {
        if (!("keywords"in e) || !e.keywords.includes("country"))
            return null;
        try {
            const n = e.name.split("-")[1] ?? e.name;
            return BJ.of(n.toUpperCase()) ?? null
        } catch {
            return null
        }
    }
}
;
ui.COMMON_EMOJIS = ["+1", "ok_hand", "pray", "heart", "eyes", "white_check_mark", "slightly_smiling_face", "smiley", "smile", "grinning", "thinking_face", "sweat_smile", "warning", "eyes", "confused", "x", "raised_hands", "tada", "wink", "blush", "shrug", "wave", "question"];
let G1 = ui;
const HJ = rn(function({name: e, size: n=14, shouldNotAlign: r, ...s}) {
    var d;
    const i = pl()
      , a = G1.toEmojiName(e)
      , o = (d = i.organization.emojis.find(u=>u.name === a)) == null ? void 0 : d.url;
    if (o)
        return c.jsx(ob, {
            style: r ? void 0 : {
                transform: "translateY(2px)",
                marginTop: -1
            },
            as: "img",
            src: o,
            $size: n,
            ...s
        });
    const l = G1.findNativeByName(a);
    return l ? c.jsx(ob, {
        $size: n,
        ...s,
        "data-type": "emoji",
        children: l.symbol
    }) : c.jsx(c.Fragment, {})
})
  , gh = rn(function(e) {
    const {model: n, fallbackIcon: r, color: s, size: i=16, ...a} = e
      , o = Rp(s || (n == null ? void 0 : n.color))
      , l = c.jsx(ab, {
        icon: r,
        color: o,
        size: i,
        ...a
    });
    return n != null && n.icon ? c_(n.icon) ? c.jsx(ab, {
        icon: n.icon,
        color: o,
        size: i,
        ...a
    }) : n.icon.startsWith(":") && n.icon.endsWith(":") ? c.jsx(HJ, {
        name: n.icon,
        size: i,
        shouldNotAlign: !0,
        ...a
    }) : l : l
})
  , x1 = rn(function(e) {
    const {project: n, ...r} = e;
    return c.jsx(gh, {
        model: n,
        fallbackIcon: j.Project,
        ...r
    })
});
function zJ(t) {
    const {status: e, ...n} = t
      , r = K_(e);
    return c.jsx(SV, {
        ...r,
        ...n
    })
}
function G_(t) {
    const {status: e, ...n} = t
      , r = K_(e);
    return c.jsx(_V, {
        ...r,
        ...n
    })
}
function K_(t) {
    const e = Pt();
    let n, r;
    switch (t) {
    case "done":
        n = e.color.purpleBg,
        r = e.color.purpleBase;
        break;
    case "unstarted":
        n = "none",
        r = e.color.labelMuted;
        break;
    case "next":
        n = "none",
        r = e.color.yellowBase;
        break;
    case "overdue":
        n = e.color.redBase,
        r = e.color.redBase;
        break
    }
    return {
        fill: n,
        stroke: r
    }
}
const ZJ = ()=>pl().user
  , J0 = rn(function(e) {
    const {health: n, age: r=0, isProjectDone: s=!1, ...i} = e
      , a = Pt()
      , o = ZJ().organization
      , l = fs.getHealthIconColors(n === Xi.noUpdate ? {
        theme: a,
        health: Fn.atRisk,
        isMonochrome: !0
    } : {
        health: n,
        theme: a,
        age: r,
        isProjectDone: s,
        reminderFrequency: o.projectUpdateReminderFrequencyInWeeks ?? 0
    })
      , d = fs.updateIsSlightlyStale({
        age: r,
        reminderFrequency: o.projectUpdateReminderFrequencyInWeeks ?? 0
    })
      , u = n === Xi.noUpdate;
    return c.jsx(PV, {
        health: n,
        dashedOutline: d || u,
        ...l,
        ...i
    })
})
  , qJ = rn(function(e) {
    const {projectUpdate: n, className: r, style: s, showAge: i} = e
      , a = Pt()
      , o = n.health
      , l = i ? n.healthAgeInDays : void 0
      , d = y.useMemo(()=>fs.colorForProjectUpdateHealth(l ? {
        theme: a,
        health: o,
        age: l,
        reminderFrequency: n.project.organization.projectUpdateReminderFrequencyInWeeks,
        isProjectDone: n.project.isDone
    } : {
        theme: a,
        health: o
    }), [a, o, l, n.project.isDone]);
    return c.jsxs(WJ, {
        gap: 4,
        align: "center",
        style: s,
        className: r,
        children: [c.jsx(J0, {
            health: o,
            age: l,
            isProjectDone: n.project.isDone
        }), c.jsx(Xe, {
            type: "miniPlus",
            style: {
                color: d
            },
            nowrap: !0,
            selectable: !0,
            children: fs.labelForProjectUpdateHealth(o)
        })]
    })
})
  , WJ = ae(Lt)`
  flex: none;
  border-radius: 100px;
`
  , x2e = rn(function(e) {
    const {project: n, ...r} = e;
    return c.jsx(c5, {
        inline: !0,
        position: "top-start",
        ...r,
        contentFactory: ()=>c.jsx(Y_, {
            project: n
        }),
        interactive: !0
    })
})
  , D2e = ({project: t, hash: e})=>{
    const n = t.documentContent.value;
    if (n) {
        const r = n.comments.find(s=>ch(s.id) === e);
        if (r)
            return c.jsx(wJ, {
                comment: r
            })
    }
    return c.jsx(Y_, {
        project: t
    })
}
  , S2e = rn(function(e) {
    const {projectMilestone: n, ...r} = e;
    return c.jsx(c5, {
        inline: !0,
        position: "top-start",
        ...r,
        contentFactory: ()=>c.jsx(GJ, {
            projectMilestone: n
        }),
        interactive: !0
    })
})
  , Y_ = rn(function(e) {
    const {project: n} = e;
    return c.jsxs(Lt, {
        align: "flex-start",
        style: {
            padding: "6px",
            maxWidth: 350,
            minWidth: 220
        },
        children: [c.jsx(zp, {
            project: n
        }), c.jsxs(Q_, {
            column: !0,
            auto: !0,
            justify: "center",
            align: "flex-start",
            gap: 4,
            children: [c.jsx(L_, {
                as: xl,
                to: bs(n),
                type: "smallPlus",
                truncate: !0,
                color: "labelBase",
                children: c.jsx(C4, {
                    title: n.name
                })
            }), n.description ? c.jsx(Xe, {
                type: "mini",
                color: "labelMuted",
                truncate: 2,
                style: {
                    marginTop: 4
                },
                children: n.description
            }) : null, c.jsxs(Lt, {
                style: {
                    marginTop: 6
                },
                gap: 12,
                align: "center",
                children: [n.lastProjectUpdate ? c.jsxs(c.Fragment, {
                    children: [c.jsx(qJ, {
                        projectUpdate: n.lastProjectUpdate
                    }), c.jsx(Xe, {
                        type: "mini",
                        color: "labelMuted",
                        children: "·"
                    })]
                }) : null, c.jsx(Xe, {
                    type: "mini",
                    color: "labelMuted",
                    nowrap: !0,
                    children: n.status.name
                }), c.jsx(Xe, {
                    type: "mini",
                    color: "labelMuted",
                    children: "·"
                }), c.jsxs(Lt, {
                    align: "center",
                    children: [c.jsx(X_, {
                        progress: n.progress
                    }), c.jsx(Xe, {
                        align: "right",
                        type: "mini",
                        children: n.progressText
                    }), c.jsx(Xe, {
                        type: "mini",
                        color: "labelMuted",
                        style: {
                            marginLeft: 4,
                            marginRight: 2
                        },
                        children: "of"
                    }), c.jsx(J_, {}), c.jsx(Xe, {
                        type: "mini",
                        children: n.totalEstimatePoints
                    })]
                })]
            })]
        })]
    })
})
  , GJ = rn(function(e) {
    const {projectMilestone: n} = e;
    return c.jsxs(Lt, {
        align: "flex-start",
        style: {
            padding: "6px",
            maxWidth: 320,
            minWidth: 200
        },
        children: [c.jsx(G_, {
            status: n.status,
            progress: n.progress
        }), c.jsxs(Q_, {
            column: !0,
            auto: !0,
            justify: "center",
            align: "flex-start",
            gap: 4,
            children: [c.jsx(L_, {
                type: "smallPlus",
                truncate: !0,
                as: xl,
                to: {
                    pathname: bs(n.project),
                    state: {
                        projectMilestoneId: n.id
                    }
                },
                children: n.name
            }), c.jsxs(Lt, {
                style: {
                    marginTop: 6
                },
                gap: 8,
                align: "center",
                children: [c.jsxs(Lt, {
                    align: "center",
                    children: [c.jsx(X_, {
                        progress: n.progress
                    }), c.jsx(Xe, {
                        align: "right",
                        type: "mini",
                        children: n.progressText
                    }), c.jsx(Xe, {
                        type: "mini",
                        color: "labelMuted",
                        style: {
                            marginLeft: 4,
                            marginRight: 2
                        },
                        children: "of"
                    }), c.jsx(J_, {}), c.jsx(Xe, {
                        type: "mini",
                        children: n.totalEstimatePoints
                    })]
                }), c.jsx(Xe, {
                    type: "mini",
                    color: "labelMuted",
                    children: "·"
                }), c.jsx(Xe, {
                    type: "mini",
                    color: "labelMuted",
                    truncate: !0,
                    children: n.targetDate ? Z0(n.targetDate) : n.doneDate ? `Completed ${Z0(n.doneDate)}` : "No target date"
                })]
            })]
        })]
    })
})
  , _2e = rn(function(e) {
    return c.jsx(fh, {
        items: e.projects,
        maxLength: e.maxLength,
        children: n=>c.jsx(c.Fragment, {
            children: n.map(r=>c.jsxs(G4, {
                to: bs(r),
                children: [c.jsx(zp, {
                    project: r
                }), c.jsx(Xe, {
                    type: "smallPlus",
                    children: c.jsx(C4, {
                        title: r.name
                    })
                })]
            }, r.id))
        })
    })
})
  , I2e = rn(function(e) {
    const {project: n} = e
      , r = n.relationsOfType(cr.blocking)
      , s = n.relationsOfType(cr.blockedBy);
    return c.jsx(Lt, {
        column: !0,
        children: c.jsxs(c.Fragment, {
            children: [s.length > 0 ? c.jsxs(c.Fragment, {
                children: [c.jsx(Q0, {
                    children: "Depends on"
                }), c.jsx(fh, {
                    items: s,
                    maxLength: 3,
                    children: i=>i.map(a=>c.jsx(tv, {
                        relation: a.relation,
                        relatedEntity: a.relatedEntity
                    }, a.relation.id))
                })]
            }) : null, s.length > 0 && r.length > 0 ? c.jsx(YJ, {}) : null, r.length > 0 ? c.jsxs(c.Fragment, {
                children: [c.jsx(Q0, {
                    children: "Dependency of"
                }), c.jsx(KJ, {
                    items: r,
                    maxLength: 3,
                    children: i=>i.map(a=>c.jsx(tv, {
                        relation: a.relation,
                        relatedEntity: a.relatedEntity
                    }, a.relation.id))
                })]
            }) : null]
        })
    })
});
function tv(t) {
    const {relation: e, relatedEntity: n} = t;
    return c.jsx(c.Fragment, {
        children: n instanceof ie ? c.jsxs(G4, {
            to: bs(n),
            children: [c.jsx(zp, {
                project: n
            }), c.jsx(Xe, {
                type: "smallPlus",
                children: c.jsx(C4, {
                    title: n.name
                })
            })]
        }, e.id) : c.jsxs(G4, {
            to: Bp(n),
            children: [c.jsx(AV, {
                status: n.status,
                progress: n.progress
            }), c.jsx(Xe, {
                type: "smallPlus",
                children: c.jsx(C4, {
                    title: n.name
                })
            })]
        }, e.id)
    })
}
const Q_ = ae(Lt)`
  padding-left: 12px;
  padding-top: 6px;
  margin-top: -6px;
  overflow: hidden;
`
  , X_ = ae(bV)`
  margin-right: 8px;
`
  , zp = ae(x1)`
  width: 16px;
  height: auto;
`
  , J_ = ae(_D)`
  width: 14px;
  height: 14px;
  margin-right: 2px;
`
  , KJ = ae(fh)`
  gap: 4px;
`
  , YJ = ae.div`
  height: 0px;
  border-top: ${d0("bgBorder")};
  margin-top: 6px;
  margin-bottom: 6px;
  margin-left: -8px;
  margin-right: -8px;
`
  , QJ = ae.span`
  ${t=>t.enableTransitions !== !1 ? "transition: background-color 0.5s;" : ""};
  border-radius: 50%;
  width: 14px;
  height: 14px;
  border: 1px solid ${t=>t.theme.color.bgBase};
  background-color: ${t=>{
    const e = t.theme.isTranslucent && t.theme.baseTheme || t.theme;
    return t.presence === Bi.away ? e.color.yellowBase : t.presence === Bi.offline ? e.color.labelFaint : e.color.greenBase
}
};
  ${t=>t.isGuest ? `
        &::after {
          content: "";
          position: absolute;
          top: 2px;
          left: 2px;
          width: 8px;
          height: 8px;
          border-radius: 50%;
          background-color: ${t.theme.color.bgBase};
        }
      ` : ""}
`
  , XJ = y.createContext(!0);
function JJ() {
    return y.useContext(XJ)
}
const Di = rn(function(e) {
    const n = JJ()
      , {user: r, enableLink: s=!1, enablePopover: i=s, size: a="regular", style: o, disabled: l, className: d, enablePresence: u=n} = e
      , f = $x(r) !== r;
    if (r instanceof qn) {
        const g = c.jsx(Z6, {
            src: r.avatarUrl,
            name: r.displayName,
            "aria-label": r.displayName,
            size: a,
            className: d,
            style: o
        });
        return i !== !1 ? c.jsx(Q4, {
            user: r,
            inline: !0,
            children: g
        }) : g
    }
    if (!eee(r))
        return c.jsx(Z6, {
            src: r.avatarUrl,
            name: r.name,
            "aria-label": r.displayName,
            modelId: r.id,
            size: a,
            className: d,
            style: o
        });
    const p = u && r.isActive ? c.jsx(tee, {
        enableTransitions: !f,
        size: a,
        presence: r.presence,
        isGuest: r.guest
    }) : null;
    let m;
    return s ? m = c.jsxs(E_, {
        as: xl,
        to: su(r),
        tabIndex: -1,
        draggable: !1,
        size: a,
        className: d,
        style: o,
        children: [c.jsx(A_, {
            src: r.avatarUrl,
            name: r.name,
            modelId: r.id,
            isInactive: !r.isActive,
            size: a,
            disabled: l,
            "aria-label": r.displayName
        }), p]
    }) : m = c.jsx(Z6, {
        src: r.avatarUrl,
        name: r.name,
        isInactive: !r.isActive,
        modelId: r.id,
        size: a,
        className: d,
        style: o,
        presenceIndicator: p,
        disabled: l,
        "aria-label": r.displayName
    }),
    i !== !1 ? c.jsx(Q4, {
        user: r,
        inline: !0,
        children: m
    }) : m
})
  , eee = t=>t.firstName !== void 0
  , tee = ae(QJ)`
  position: absolute;
  ${t=>nee(t.size, t.isGuest)}
`;
function nee(t, e) {
    let n;
    switch (t) {
    case "micro":
    case "tiny":
        return n = e ? "8px" : "7px;",
        `
        width: ${n};
        height: ${n};
        bottom: -2px;
        right: -2px;
        &::after {
          top: 1px;
          left: 1px;
          width: 4px;
          height: 4px;
        }
      `;
    case "small":
        return n = e ? "9px" : "8px;",
        `
        width: ${n};
        height: ${n};
        bottom: -2px;
        right: -2px;
        &::after {
          top: 1px;
          left: 1px;
          width: 5px;
          height: 5px;
        }
      `;
    case "regular":
        return n = e ? "9px" : "8px;",
        `
        width: ${n};
        height: ${n};
        bottom: -1px;
        right: -1px;
        &::after {
          top: 1px;
          left: 1px;
          width: 5px;
          height: 5px;
        }
      `;
    case "large":
        return n = e ? "10px" : "9px;",
        `
        width: ${n};
        height: ${n};
        bottom: -1px;
        right: -1px;
        &::after {
          top: 1px;
          left: 1px;
          width: 6px;
          height: 6px;
        }
     `;
    case "huge":
        return n = e ? "19px" : "18px;",
        `
        width: ${n};
        height: ${n};
        bottom: 0px;
        right: 0px;
        &::after {
          top: 3px;
          left: 3px;
          width: 11px;
          height: 11px;
        }
     `;
    default:
        throw void 0
    }
}
const eI = ()=>pl().user.settings
  , Zm = class Zm {
}
;
Zm.getUsername = (e,n)=>e.showFullUserNames ? n.name : n.displayName ?? n.name;
let X4 = Zm;
const ree = rn(function(e) {
    const n = eI()
      , {user: r, enableLink: s, showFullName: i, enablePopover: a, ...o} = e
      , l = a || s && a !== !1;
    if (r instanceof qn) {
        const h = c.jsx(nv, {
            children: r.displayName || r.name
        });
        return l ? c.jsx(Q4, {
            inline: !0,
            user: r,
            children: h
        }) : h
    }
    const d = i === void 0 ? X4.getUsername(n, r) : i ? r.name : r.displayName;
    let u = c.jsx(nv, {
        children: d
    });
    return r.isActive || (u = c.jsx(iee, {
        children: u
    })),
    s && (u = c.jsx(see, {
        to: su(r),
        tabIndex: -1,
        ...o,
        children: u
    })),
    l && (u = c.jsx(Q4, {
        inline: !0,
        user: r,
        children: u
    })),
    u
})
  , see = ae(xl)`
  ${Wf()}

  &:hover {
    outline: none;
  }
`
  , iee = ae.span`
  color: ${ze("labelMuted")};
`
  , nv = ae.span`
  ${Wf()}
  // In flex contexts this is required to allow the span to shrink
  min-width: 0;
  white-space: nowrap;
`
  , S2 = ae("div")`
  width: 12px;
  height: 12px;
  border-radius: 50%;

  ${t=>t.hollow ? `border: solid 1px ${t.color ? t.color : t.theme.color.labelMuted}` : `background: ${t.color ? t.color : t.theme.color.labelMuted}`};

  ${t=>t.size === "tiny" && `
    width: 7px;
    height: 7px;
  `};

  ${t=>t.size === "small" && `
    width: 9px;
    height: 9px;
  `};
`
  , K1 = rn(function(e) {
    let n, r, s;
    if ("state"in e)
        n = e.state,
        s = e.progress;
    else if ("status"in e)
        ({status: r} = e),
        n = r.type,
        s = e.progress ?? r.progress;
    else {
        const d = e.project;
        r = d.status,
        s = d.persisted ? d.progress : d.status.progress,
        n = d.status.type
    }
    const i = Pt()
      , [a,o] = tI(i)[n]
      , l = Rp(e.overrideColor ?? (r == null ? void 0 : r.color) ?? o);
    return c.jsx(a, {
        color: l,
        className: e.className,
        progress: s
    })
});
function tI(t) {
    return {
        [At.backlog]: [tp, t.color.orangeBase],
        [At.planned]: [AD, "#e2e2e2"],
        [At.started]: [xV, t.color.yellowBase],
        [At.paused]: [RV, t.color.labelMuted],
        [At.completed]: [wV, t.color.purpleBase],
        [At.canceled]: [vV, t.color.labelMuted]
    }
}
const aee = (t,e)=>tI(e)[t][1]
  , oee = hl(new Date, 2)
  , nI = xk((t,e,n)=>{
    if (!e)
        return t;
    const r = (n == null ? void 0 : n.sortFn) || cee
      , s = t.map(i=>{
        const a = lee(i, e);
        return {
            project: i,
            relevance: a
        }
    }
    );
    return r(s).map(i=>i.project)
}
, (t,e,n)=>{
    var s;
    const r = [t.map(i=>i.id).join(",")];
    return e && r.push(e.id),
    (s = n == null ? void 0 : n.sortFn) != null && s.name && r.push(n.sortFn.name),
    r.join("-")
}
);
function cee(t) {
    return Gi(t, e=>-e.relevance)
}
function lee(t, e) {
    const {members: n, lead: r} = t
      , s = t.accessibleTeams.map(f=>f.id)
      , i = n.some(f=>f.id === e.id)
      , a = (r == null ? void 0 : r.id) === e.id
      , o = e.teams.some(f=>s.includes(f.id))
      , l = t.createdAt >= oee
      , d = t.isCompleted || t.isCanceled
      , u = t.isActive;
    let h = 0;
    return (a || i) && (a ? h += d ? .25 : 1.25 : i && (h += d ? .2 : 1)),
    o && (h += .3),
    l && (h += .15),
    u && (h += .25),
    d && (h -= 1),
    h
}
const dee = Mt.gql`
  query AttachmentSources($teamId: String) {
    attachmentSources(teamId: $teamId) {
      sources
    }
  }
`
  , uee = async(t,e)=>(await t.query(dee, {
    teamId: e
}, {
    cache: !0,
    cacheKey: "attachmentSources",
    cacheTTL: be.MINUTE * 10
})).attachmentSources.sources
  , hee = t=>{
    const {service: e, monochrome: n, fill: r, ...s} = t
      , i = ()=>{
        switch (e) {
        case G.airbyte:
            return c.jsx(uZ, {
                color: n ? void 0 : r
            });
        case G.discord:
            return c.jsx(XS, {
                color: n ? void 0 : r
            });
        case G.figma:
        case G.figmaPlugin:
            return c.jsx(JS, {
                color: n ? void 0 : r
            });
        case G.front:
            return c.jsx(e_, {
                color: n ? void 0 : r
            });
        case G.github:
        case G.githubEnterpriseServer:
        case G.githubCommit:
        case G.githubImport:
        case G.githubPersonal:
            return c.jsx(p5, {
                color: n ? void 0 : r
            });
        case G.gitlab:
            return c.jsx(_p, {
                color: n ? void 0 : r
            });
        case G.googleCalendarPersonal:
            return c.jsx(pZ, {});
        case G.googleSheets:
            return c.jsx(mZ, {
                color: n ? void 0 : r
            });
        case G.intercom:
            return c.jsx(t_, {
                color: n ? void 0 : r
            });
        case G.jira:
        case G.jiraPersonal:
            return c.jsx(Ip, {
                color: n ? void 0 : r
            });
        case G.launchDarkly:
            return c.jsx(gZ, {
                color: n ? void 0 : r
            });
        case G.loom:
            return c.jsx(yZ, {
                color: n ? void 0 : r
            });
        case G.notion:
            return c.jsx(n_, {
                color: n ? void 0 : r
            });
        case G.opsgenie:
            return c.jsx(vZ, {
                color: n ? void 0 : r
            });
        case G.pagerDuty:
            return c.jsx(wZ, {
                color: n ? void 0 : r
            });
        case G.slackAsks:
            return c.jsx(fZ, {
                color: n ? void 0 : r
            });
        case G.slack:
        case G.slackOrgProjectUpdatesPost:
        case G.slackPersonal:
        case G.slackPost:
        case G.slackProjectPost:
        case G.slackProjectUpdatesPost:
        case G.slackCustomViewNotifications:
            return c.jsx(s_, {
                color: n ? void 0 : r
            });
        case G.sentry:
            return c.jsx(r_, {
                color: n ? void 0 : r
            });
        case G.zendesk:
            return c.jsx(i_, {
                color: n ? void 0 : r
            });
        case G.email:
            return c.jsx(Lp, {
                color: n ? void 0 : r
            });
        default:
            throw void 0
        }
    }
    ;
    return c.jsx(fee, {
        ...s,
        children: i()
    })
}
  , fee = ae.div`
  display: flex;
  align-items: center;
  max-width: 16px;
  max-height: 16px;

  svg,
  img {
    max-width: inherit;
    max-height: inherit;
  }
`
  , pee = {
    inbox: "/:orgKey/inbox",
    triage: "/:orgKey/team/:teamId/triage",
    activeIssues: "/:orgKey/team/:teamId/active",
    backlog: "/:orgKey/team/:teamId/backlog",
    allIssues: "/:orgKey/team/:teamId/all",
    board: "/:orgKey/team/:teamId/board",
    archive: "/:orgKey/team/:teamId/archive/:archiveTab?",
    myIssues: "/:orgKey/my-issues/:viewType?",
    cyclesList: "/:orgKey/team/:teamId/cycles",
    cycle: "/:orgKey/team/:teamId/cycle/:cycleIdentifier",
    project: "/:orgKey/project/:projectId/:teamId?",
    teamLabel: "/:orgKey/team/:teamId/label/:labelName",
    workspaceLabel: "/:orgKey/label/:labelName",
    customViewsList: "/:orgKey/views/:viewType?",
    customView: "/:orgKey/view/:viewId",
    issueQuickView: "/:orgKey/explore/issue",
    projectQuickView: "/:orgKey/explore/project",
    analytics: "/:orgKey/team/:teamId/analytics",
    teams: "/:orgKey/teams",
    teamProjects: "/:orgKey/team/:teamId/projects/:viewType?",
    customRoadmap: "/:orgKey/roadmap/:roadmapId/:viewType?",
    allProjectsRoadmap: "/:orgKey/roadmap/:viewType?"
};
function E2e() {
    const t = Af();
    return ic(t.pathname)
}
const ic = WA(t=>{
    const [e] = Object.entries(pee).find(([n,r])=>!!O1(t, {
        path: r
    })) || [];
    return e
}
);
function A2e(t, e) {
    return !!(t.pathname && O1(t.pathname, {
        path: N_(e)
    }))
}
function j2e(t) {
    return !!(t.pathname && t.pathname.match(mee))
}
function M2e(t, e) {
    return !!(t.pathname && O1(t.pathname, {
        path: sJ(e)
    }))
}
function T2e(t) {
    var e, n;
    return ((n = (e = t.state) == null ? void 0 : e.issueOrigin) == null ? void 0 : n.type) === "inbox"
}
function L2e(t, e, n) {
    var r;
    return !!(e.pathname && (O1(e.pathname, {
        path: Gb(t, {
            modelName: "issue"
        })
    }) || O1(e.pathname, {
        path: Gb(t, {
            modelName: "project"
        })
    })) && ((r = e.state) == null ? void 0 : r.teamKey) === n)
}
function O2e(t) {
    var e, n;
    return ((n = (e = t.state) == null ? void 0 : e.issueOrigin) == null ? void 0 : n.type) === "triage"
}
function R2e(t) {
    var e, n;
    return ((n = (e = t.state) == null ? void 0 : e.issueOrigin) == null ? void 0 : n.type) === "search"
}
const mee = /\/.+\/team\/[A-Z]+\/triage$/;
var na;
(function(t) {
    t[t.Text = 0] = "Text",
    t[t.Date = 1] = "Date",
    t[t.FuzzyDate = 2] = "FuzzyDate"
}
)(na || (na = {}));
const rI = [{
    value: "P1D"
}, {
    value: "P1W"
}, {
    value: "P1M"
}, {
    value: "P3M"
}, {
    inputType: na.FuzzyDate
}]
  , yh = [{
    value: "-P1D"
}, {
    value: "-P1W"
}, {
    value: "-P1M"
}, {
    value: "-P3M"
}, {
    inputType: na.FuzzyDate
}];
function oa(t) {
    const {applicable: e, image: n, hideMatchCount: r, labelForNullFilterMatchValue: s="empty", name: i, blockDefinition: a} = t
      , {defaultCompareOptionForDates: o, property: l, ...d} = a
      , u = o === "before" ? "from now" : "ago"
      , f = (t.options ? t.options : o === "before" ? rI : yh).map(p=>({
        ...p,
        name: p.name || ("value"in p ? rv({
            value: p.value,
            labelPostfix: u,
            labelForNullFilterMatchValue: s
        }) : "Custom date or timeframe…")
    }));
    return {
        ...d,
        applicable: e,
        id: ht(),
        name: i,
        label: p=>{
            var b;
            const m = Wr().organization.fiscalYearStartMonth
              , g = La(p[0]);
            if (Array.isArray(g)) {
                const k = Ys.fromInterval(g, m);
                return k ? Ys.format(k, {
                    fiscalYearStartMonth: m
                }) : g.map(Z0).join(" - ")
            }
            const C = (b = f.find(k=>"value"in k && k.value === g)) == null ? void 0 : b.name;
            return C ? C.charAt(0).toLowerCase() + C.slice(1) : rv({
                value: g,
                labelPostfix: u,
                labelForNullFilterMatchValue: s
            })
        }
        ,
        image: n,
        hideMatchCount: r,
        options: (p,m)=>{
            const g = m ? La(m[0]) : void 0;
            return g && (va(g) || g.length === 2) ? f.filter(b=>"inputType"in b && b.inputType === na.FuzzyDate) : f
        }
        ,
        key: l
    }
}
const rv = t=>{
    const {value: e, labelPostfix: n, labelForNullFilterMatchValue: r} = t;
    return e === Ve ? r : Sn.isDuration(e) ? `${Sn.format(e)} ${n}` : Z0(e)
}
  , Zp = rn(function(e) {
    const {initiative: n, ...r} = e;
    return c.jsx(gh, {
        model: n,
        fallbackIcon: j.Initiative,
        ...r
    })
});
function b5(t, e) {
    const n = t.flatMap(i=>i.users.elements)
      , r = e.organization.allUsers.filter(i=>!i.guest).elements
      , s = new Set;
    for (const i of Gi(n, "name"))
        s.add(i);
    for (const i of Gi(r, "name"))
        s.add(i);
    return Array.from(s).map(i=>({
        value: i.id,
        name: i.name,
        image: c.jsx(Di, {
            size: "tiny",
            user: i,
            enablePresence: !1
        }),
        keywords: i.id === e.id ? `me ${i.displayName}` : i.displayName,
        onlyVisibleThroughSearch: !i.isActive,
        sortPriority: i.isActive ? 0 : -1
    }))
}
function gee(t) {
    var n;
    const e = t.view && "assignees"in t.view ? t.view.assignees || [] : [];
    return (n = t.view) != null && n.persisted && e.length > 0 ? e.map(r=>({
        value: r.id,
        name: r.name,
        image: c.jsx(Di, {
            size: "tiny",
            user: r,
            enablePresence: !1
        }),
        keywords: r.id === t.currentUser.id ? `me ${r.displayName}` : r.displayName,
        onlyVisibleThroughSearch: !r.isActive,
        sortPriority: r.isActive ? 0 : -1
    })) : [{
        name: "No assignee",
        value: Ve,
        image: c.jsx($o, {}, "unassigned")
    }, {
        name: "Current user",
        value: it,
        image: c.jsx(bi, {}, "user")
    }, {
        name: "Suspended user",
        value: qr,
        image: c.jsx(s4, {}, "suspended")
    }].concat(b5(t.teams, t.currentUser))
}
function P2e(t, e) {
    const n = sI(t, e);
    if (n)
        return wo.fromCss(n)
}
const $2e = t=>{
    const e = iI(t);
    if (e)
        return wo.fromCss(e)
}
;
function sI(t, e, n) {
    let r;
    if ((t instanceof ie || t instanceof ne || t instanceof ot || t instanceof Kt) && (t.icon && G1.isEmojiCode(t.icon) ? r = iI(t.icon) : r = t.color),
    (t instanceof Ut || t instanceof cn) && (r = t.color),
    t instanceof re && (r = t.state.color),
    t instanceof hr && (r = aee(t.type, e)),
    r)
        return n != null && n.loweredAlpha && (r = wo.cssWithAlpha(r, e.isDark ? .175 : .125)),
        r
}
function iI(t) {
    if (!t)
        return;
    const e = G1.toEmojiName(t)
      , n = Wr().organization.emojis.find(s=>s.name === e);
    if (n != null && n.color)
        return n.color;
    const r = G1.findNativeByName(e);
    if (r)
        return r.color
}
const qp = rn(function(e) {
    const {team: n, className: r="", background: s="solid", size: i=18} = e
      , a = yee(n, s);
    return c.jsx(Cee, {
        className: r,
        $backgroundColor: a,
        $size: i,
        children: c.jsx(gh, {
            fallbackIcon: j.Team,
            model: n,
            className: "color-override"
        })
    })
})
  , yee = (t,e)=>{
    const n = Pt();
    return $a.useMemo(()=>{
        if (e === "transparent")
            return "none";
        const r = sI(t, n, {
            loweredAlpha: !0
        });
        return r === void 0 ? n.color.controlSelectedBg : r
    }
    , [n, t, t.icon, t.color, e])
}
  , Cee = ae.div`
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  width: ${t=>t.$size}px;
  height: ${t=>t.$size}px;
  flex-shrink: 0;
  background-color: ${t=>t.$backgroundColor};

  svg {
    width: ${t=>Math.floor(t.$size * .8)}px;
    height: auto;
    opacity: ${t=>t.theme.isDark ? .9 : 1};
  }

  img {
    width: ${t=>Math.floor(t.$size * .8)}px;
  }

  [data-type="emoji"] {
    padding-top: 2px;
    font-size: ${t=>Math.floor(t.$size * .8)}px;
  }
`;
function bee(t, e) {
    var s;
    if (t.length === 1)
        return ((s = e.find(i=>i.id === t[0])) == null ? void 0 : s.name) || "Unknown team";
    const n = `${t.length} teams`;
    if (t.length === 0 || t.length > 3)
        return n;
    const r = [];
    for (const i of t) {
        const a = e.find(o=>o.id === i);
        if (!a || !a.identifier)
            return n;
        r.push(a.identifier)
    }
    return r.join(", ")
}
function vee(t, e) {
    if (t.length > 1)
        return null;
    const n = e.find(r=>r.id === t[0]);
    return n ? c.jsx(qp, {
        team: n
    }) : null
}
function wee(t, e) {
    const n = []
      , r = [];
    return t.forEach(s=>{
        s.userIsMember(e) ? n.push(s) : r.push(s)
    }
    ),
    [...Gi(n, "name"), ...Gi(r, "name")].map((s,i)=>({
        value: s.id,
        name: s.name,
        image: c.jsx(qp, {
            team: s
        }),
        divider: i === n.length
    }))
}
const vd = {
    getLabelForTeamBlock: bee,
    getTeamIconForValues: vee,
    getTeamsOptions: wee
}
  , kee = oa({
    blockDefinition: St.createdAt,
    image: c.jsx(Y3, {}),
    name: "Created date"
})
  , xee = oa({
    blockDefinition: St.startedAt,
    image: c.jsx(Y3, {}),
    name: "Started date",
    options: [void 0, ...yh].concrete()
})
  , Dee = oa({
    blockDefinition: St.triagedAt,
    image: c.jsx(Y3, {}),
    name: "Triaged date"
})
  , See = oa({
    blockDefinition: St.updatedAt,
    image: c.jsx(OD, {}),
    name: "Updated date"
})
  , _ee = oa({
    blockDefinition: St.completedAt,
    image: c.jsx(lh, {}),
    name: "Completed date",
    options: [...yh, {
        value: Ve,
        name: "No completed date"
    }]
})
  , Iee = oa({
    blockDefinition: St.dueDate,
    image: c.jsx(__, {}),
    name: "Due date",
    options: [{
        value: "P0D",
        name: "Overdue"
    }, {
        value: "P1D"
    }, {
        value: "P3D"
    }, {
        value: "P1W"
    }, {
        value: "P1M"
    }, {
        value: "P3M"
    }, {
        inputType: na.FuzzyDate
    }, {
        value: Ve,
        name: "No due date"
    }]
})
  , Eee = {
    ...St.slaStatus,
    id: ht(),
    name: "SLA status",
    image: c.jsx(rX, {
        status: Ze.Status.LowRisk
    }),
    label(t) {
        const e = t[0] === Ve ? null : t[0];
        return t.length > 0 ? t.length === 1 ? Ze.getStatusLabel(e) : `${t.length} statuses` : "no SLA selected"
    },
    options: ()=>[{
        value: Ze.Status.Breached,
        name: Ze.getStatusLabel(Ze.Status.Breached)
    }, {
        value: Ze.Status.HighRisk,
        name: Ze.getStatusLabel(Ze.Status.HighRisk)
    }, {
        value: Ze.Status.MediumRisk,
        name: Ze.getStatusLabel(Ze.Status.MediumRisk)
    }, {
        value: Ze.Status.LowRisk,
        name: Ze.getStatusLabel(Ze.Status.LowRisk)
    }, {
        value: Ze.Status.Completed,
        name: Ze.getStatusLabel(Ze.Status.Completed)
    }, {
        value: Ze.Status.Failed,
        name: Ze.getStatusLabel(Ze.Status.Failed)
    }, {
        value: Ve,
        name: Ze.getStatusLabel(null)
    }],
    applicable: t=>t.currentUser.organization.isSlaAccessible,
    key: "slaStatus"
};
function Aee(t, e) {
    for (const n of e) {
        const r = n.allIssueLabels.find(s=>s.name.toLowerCase() === t.toLowerCase());
        if (r)
            return r
    }
}
const _2 = {
    ...St.labels,
    id: ht(),
    name: "Labels",
    image: c.jsx(ID, {}),
    imageForValues(t, e) {
        const n = t.map(r=>Aee(r, e.teams)).concrete();
        if (n.length === 1) {
            const r = n[0];
            return r.isGroup ? c.jsx(V8, {
                color: r.color
            }, r.name) : c.jsx(S2, {
                size: "small",
                color: r.color
            }, r.name)
        }
        return c.jsx(ts, {
            size: 9,
            children: n.slice(0, 3).map(r=>c.jsx(S2, {
                size: "small",
                color: r.color
            }, r.name))
        })
    },
    label(t, e) {
        var n, r;
        return t.length === 1 ? ((r = (n = _2.options) == null ? void 0 : n.call(_2, e).find(s=>"value"in s && s.value.toLowerCase() === t[0].toLowerCase())) == null ? void 0 : r.name) ?? "Unknown label" : `${t.length} labels`
    },
    options(t) {
        const e = t.teams.flatMap(s=>s.allIssueLabels.elements)
          , n = new Set
          , r = [];
        for (const s of e)
            n.has(s.name) || r.push({
                value: s.name,
                name: s.name,
                sortValue: s.parent ? s.parent.name + " " + s.name : s.name,
                label: s.parent ? c.jsxs(c.Fragment, {
                    children: [c.jsx(Xe, {
                        type: "small",
                        color: "labelMuted",
                        children: s.parent.name
                    }), c.jsx(jee, {}), c.jsx(Xe, {
                        type: "small",
                        style: {
                            color: "inherit"
                        },
                        children: s.name
                    })]
                }) : s.name,
                image: s.isGroup ? c.jsx(V8, {
                    color: s.color
                }, s.name) : c.jsx(S2, {
                    size: "small",
                    color: s.color
                }, s.name)
            }),
            n.add(s.name);
        return r.sortBy(s=>s.sortValue)
    },
    key: "labels"
}
  , jee = ae(xD)`
  transform: rotate(-90deg);
  margin: 2px 8px;
`
  , Mee = {
    ...St.projectRoadmap,
    id: ht(),
    name: "Roadmap",
    image: c.jsx(rp, {}),
    label(t, e) {
        var n;
        return t.length === 1 ? ((n = e.currentUser.organization.roadmaps.findById(t[0])) == null ? void 0 : n.name) ?? "Unknown roadmap" : `${t.length} roadmaps`
    },
    options(t) {
        return t.currentUser.organization.roadmaps.map(e=>({
            value: e.id,
            name: e.name
        }))
    },
    applicable(t) {
        return !qe.isEnabled(qe.initiatives) && t.currentUser.organization.roadmapEnabled && ic(t.location.pathname) !== "project"
    },
    key: "project"
}
  , Tee = {
    ...St.projectInitiative,
    id: ht(),
    name: "Initiative",
    image: c.jsx(Zp, {}),
    label(t, e) {
        var n;
        return t.length === 1 ? ((n = e.currentUser.organization.initiatives.findById(t[0])) == null ? void 0 : n.name) ?? "Unknown initiative" : `${t.length} initiatives`
    },
    options(t) {
        return t.currentUser.organization.initiatives.map(e=>({
            value: e.id,
            name: e.name
        }))
    },
    applicable(t) {
        return qe.isEnabled(qe.initiatives) && ic(t.location.pathname) !== "project"
    },
    key: "project"
}
  , Lee = {
    ...St.subscribers,
    id: ht(),
    name: "Subscriber",
    image: c.jsx(TD, {}),
    imageForValues(t, e) {
        return c.jsx(ts, {
            size: 14,
            children: (t == null ? void 0 : t.map(n=>n === it ? it : e.teams[0].organization.users.find(r=>r.id === n)).slice(0, 3).map(n=>n === it ? c.jsx(bi, {}, it) : n ? c.jsx(Di, {
                size: "micro",
                enablePresence: !1,
                user: n
            }, n.id) : c.jsx($o, {}, "unsubscribed"))) ?? c.jsx($o, {}, "unsubscribed")
        })
    },
    label(t, e) {
        var n;
        return t.length === 1 ? t[0] === it ? "Current user" : ((n = e.teams.flatMap(r=>r.users.elements).find(r=>r.id === t[0])) == null ? void 0 : n.name) || "Unknown" : `${t.length} subscribers`
    },
    options(t) {
        return [{
            value: it,
            name: "Current user",
            image: c.jsx(bi, {})
        }].concat(b5(t.teams, t.currentUser))
    },
    key: "subscribers"
};
function Oee(t, e) {
    for (const n of e) {
        const r = n.findWorkflowState(t);
        if (r)
            return r
    }
}
const I2 = {
    ...St.state,
    id: ht(),
    name: "Status",
    image: c.jsx(i4, {}),
    applicable: t=>ic(t.location.pathname) !== "triage",
    imageForValues(t, e) {
        return c.jsx(ts, {
            size: 14,
            children: (t == null ? void 0 : t.map(n=>Oee(n, e.teams)).concrete().slice(0, 3).map(n=>c.jsx(Pb, {
                state: n
            }, n.id))) ?? c.jsx(i4, {})
        })
    },
    label(t, e) {
        var n, r;
        return t.length === 1 ? ((r = (n = I2.options) == null ? void 0 : n.call(I2, e).find(s=>"value"in s && s.value === t[0])) == null ? void 0 : r.name) ?? t[0] : `${t.length} statuses`
    },
    options(t) {
        const e = n5(t.teams.flatMap(r=>r.states.elements), "name")
          , n = e.length;
        return e.filter(t.stateFilter ?? (()=>!0)).sort((r,s)=>Jc.getStateTypeOrder(r.type) * n + r.indexInWorkflow - (Jc.getStateTypeOrder(s.type) * n + s.indexInWorkflow)).map(r=>({
            value: r.name,
            name: r.name,
            image: c.jsx(Pb, {
                state: r
            })
        }))
    },
    key: "state"
}
  , Ree = {
    ...St.stateType,
    id: ht(),
    name: "Status type",
    applicable(t) {
        return ic(t.location.pathname) === "triage" ? !1 : t.teams.some(n=>n.states.length > n.states.map(r=>r.type).distinct().length + 1)
    },
    image: c.jsx(H6, {
        stateType: ye.unstarted
    }),
    imageForValues(t) {
        const e = t.slice(0, 3).map(n=>c.jsx(H6, {
            stateType: n
        }, n));
        return c.jsx(ts, {
            mask: !0,
            size: 14,
            children: e
        })
    },
    label(t) {
        return t.length === 1 ? P8(t[0]) : `${t.length} status types`
    },
    options() {
        return ko.all.map(t=>({
            value: t,
            name: P8(t),
            image: c.jsx(H6, {
                stateType: t
            }, t)
        }))
    },
    key: "state"
}
  , d1 = {
    ...St.cycle,
    id: ht(),
    name: "Cycle",
    image: c.jsx(io, {}),
    imageForValues(t, e) {
        var n, r;
        return t.length === 1 && ((r = (n = d1.options) == null ? void 0 : n.call(d1, e).find(s=>"value"in s && s.value === t[0])) == null ? void 0 : r.image) || null
    },
    label(t, e) {
        var n, r;
        return t.length === 1 ? t[0] === Ve ? "No cycle" : ((r = (n = d1.options) == null ? void 0 : n.call(d1, e).find(s=>"value"in s && s.value === t[0])) == null ? void 0 : r.name) || "Missing cycle" : `${t.length} options`
    },
    options(t) {
        const e = t.teams.some(n=>n.cycleCooldownTime > 0);
        return EQ([{
            name: "No cycle",
            value: Ve,
            image: c.jsx(io, {})
        }, {
            name: "Any past cycle",
            value: P4,
            image: c.jsx(io, {
                cycle: t.teams[0].previousCycle
            })
        }, {
            name: "Previous cycle",
            value: R4,
            image: c.jsx(io, {
                cycle: t.teams[0].previousCycle
            })
        }, {
            name: "Current cycle",
            value: T4,
            image: c.jsx(io, {
                cycle: t.teams[0].activeCycle
            })
        }, e ? {
            name: "In cooldown",
            value: L4,
            image: c.jsx(io, {
                cycle: t.teams[0].activeCycle
            })
        } : void 0, {
            name: "Upcoming cycle",
            value: O4,
            image: c.jsx(io, {
                cycle: t.teams[0].upcomingCycle(0)
            })
        }, {
            name: "Any future cycle",
            value: $4,
            image: c.jsx(io, {
                cycle: t.teams[0].upcomingCycle(0)
            })
        }])
    },
    applicable: t=>t.teams.some(e=>e.cyclesEnabled) && ic(t.location.pathname) !== "cycle",
    key: "cycle"
}
  , Pee = {
    ...St.project,
    id: ht(),
    name: "Project",
    image: c.jsx(x1, {}),
    imageForValues(t, e) {
        const n = e.teams.flatMap(r=>r.projects.elements);
        if (t.length === 1) {
            const r = n.find(s=>s.id === t[0]);
            return r ? c.jsx(ts, {
                mask: !1,
                size: 14,
                children: c.jsx(x1, {
                    project: r
                }, r == null ? void 0 : r.id)
            }) : null
        }
        return null
    },
    applicable: t=>!Wp(t),
    label(t, e) {
        var n;
        return t.length === 1 ? t[0] === Ve ? "No project" : ((n = e.teams.flatMap(r=>r.projects.elements).find(r=>r.id === t[0])) == null ? void 0 : n.name) || "Unknown project" : `${t.length} projects`
    },
    options(t, e=[]) {
        const n = n5(t.teams.flatMap(i=>i.projects.elements), "id")
          , r = nI(n, t.currentUser);
        return [{
            name: "No project",
            value: Ve,
            image: c.jsx(x1, {})
        }, ...r.map(i=>({
            value: i.id,
            onlyVisibleThroughSearch: i.isDone ? !e.some(a=>a === i.id) : void 0,
            sortPriority: i.isDone ? -.3 : 0,
            name: i.name,
            image: c.jsx(x1, {
                project: i
            })
        }))]
    },
    key: "project"
}
  , E2 = {
    ...St.projectStatus,
    id: ht(),
    name: "Project status",
    applicable(t) {
        return !Wp(t)
    },
    image: c.jsx(tp, {}),
    imageForValues(t, e) {
        const n = t == null ? void 0 : t.map(r=>e.currentUser.organization.projectStatuses.findById(r)).concrete().slice(0, 3).map(r=>c.jsx(K1, {
            status: r
        }, r.id));
        return c.jsx(ts, {
            mask: !1,
            size: 14,
            children: n
        })
    },
    label(t, e) {
        var n, r;
        return t.length === 1 ? ((r = (n = E2.options) == null ? void 0 : n.call(E2, e).find(s=>"value"in s && s.value === t[0])) == null ? void 0 : r.name) ?? t[0] : `${t.length} statuses`
    },
    options(t) {
        return t.currentUser.organization.projectStatuses.map(e=>({
            value: e.id,
            name: e.name,
            image: c.jsx(K1, {
                status: e
            })
        }))
    },
    key: "project"
}
  , $ee = {
    ...St.projectStatusType,
    id: ht(),
    name: "Project status type",
    applicable: t=>{
        const e = Wp(t)
          , n = t.currentUser.organization.projectStatuses;
        return !e && n.length > n.map(r=>r.type).distinct().length
    }
    ,
    image: c.jsx(kV, {}),
    imageForValues(t) {
        const e = t.slice(0, 3).map(n=>c.jsx(K1, {
            state: n
        }, n));
        return c.jsx(ts, {
            mask: !1,
            size: 14,
            children: e
        })
    },
    label(t) {
        return t.length === 1 ? wi.labelForProjectState(t[0]) : `${t.length} status types`
    },
    options() {
        return wi.allExceptPaused.map(t=>({
            value: t,
            name: wi.labelForProjectState(t),
            image: c.jsx(K1, {
                state: t
            }, t)
        }))
    },
    key: "project"
}
  , Fee = {
    ...St.projectMilestone,
    id: ht(),
    name: "Project milestone",
    image: c.jsx(zJ, {
        status: "unstarted"
    }),
    applicable: t=>{
        var n;
        return ic(t.location.pathname) === "project" ? !0 : ((n = t.unfilteredItems[0]) == null ? void 0 : n.project) !== void 0 && t.unfilteredItems.every(r=>{
            var s, i, a;
            return ((s = r.project) == null ? void 0 : s.id) === ((a = (i = t.unfilteredItems[0]) == null ? void 0 : i.project) == null ? void 0 : a.id)
        }
        )
    }
    ,
    label(t, e) {
        var n, r;
        if (t.length === 1) {
            if (t[0] === Ve)
                return "No milestone";
            const s = ((n = e.unfilteredItems[0]) == null ? void 0 : n.project) ?? iv(e);
            return ((r = ((s == null ? void 0 : s.projectMilestones.filter(a=>!a.isClone).elements) ?? []).find(a=>a.id === t[0])) == null ? void 0 : r.name) ?? "Unknown milestone"
        }
        return `${t.length} ${t.some(s=>s === Ve) ? "values" : "milestones"}`
    },
    options(t) {
        var r;
        const e = ((r = t.unfilteredItems[0]) == null ? void 0 : r.project) ?? iv(t);
        return [...((e == null ? void 0 : e.projectMilestones.filter(s=>!s.isClone).elements) ?? []).map(s=>({
            value: s.id,
            name: s.name,
            label: s.name,
            image: c.jsx(G_, {
                status: s.status,
                progress: s.progress
            }, s.id)
        })), {
            value: Ve,
            name: "No milestone",
            image: c.jsx(uV, {})
        }]
    },
    key: "projectMilestone"
}
  , aI = {
    ...St.team,
    id: ht(),
    key: "team",
    name: "Team",
    image: c.jsx(ip, {}),
    imageForValues(t, e) {
        return vd.getTeamIconForValues(t, e.teams)
    },
    label(t, e) {
        return vd.getLabelForTeamBlock(t, e.teams)
    },
    options(t) {
        return vd.getTeamsOptions(t.teams, t.currentUser)
    },
    applicable(t) {
        return t.teams.length > 1
    }
}
  , oI = {
    ...St.assignee,
    id: ht(),
    name: "Assignee",
    image: c.jsx(bi, {}),
    imageForValues(t, e) {
        return c.jsx(ts, {
            size: 14,
            children: (t == null ? void 0 : t.map(n=>n === it ? it : n === qr ? qr : e.teams[0].organization.users.find(r=>r.id === n)).slice(0, 3).map(n=>n === it ? c.jsx(bi, {}, it) : n === qr ? c.jsx(s4, {}, "suspended") : n ? c.jsx(Di, {
                size: "micro",
                enablePresence: !1,
                user: n
            }, n.id) : c.jsx($o, {}, "unassigned"))) ?? c.jsx($o, {}, "unassigned")
        })
    },
    label(t, e) {
        var n;
        return t.length === 1 ? t[0] === Ve ? "No assignee" : t[0] === it ? "Current user" : t[0] === qr ? "Suspended user" : `${((n = e.teams[0].organization.users.find(r=>r.id === t[0])) == null ? void 0 : n.name) || "Unknown"}` : `${t.length} assignees`
    },
    options(t) {
        return gee(t)
    },
    key: "assignee"
}
  , Nee = {
    ...St.creator,
    id: ht(),
    name: "Creator",
    image: c.jsx(qN, {}),
    imageForValues(t, e) {
        return c.jsx(ts, {
            size: 14,
            children: (t == null ? void 0 : t.map(n=>n === it ? it : n === qr ? qr : e.teams[0].organization.users.find(r=>r.id === n)).slice(0, 3).map(n=>n === it ? c.jsx(bi, {}, "user") : n === qr ? c.jsx(s4, {}, "suspended") : n ? c.jsx(Di, {
                size: "micro",
                enablePresence: !1,
                user: n
            }, n.id) : null)) ?? null
        })
    },
    label(t, e) {
        var n;
        return t.length === 1 ? t[0] === Ve ? "No creator" : t[0] === it ? "Current user" : t[0] === qr ? "Suspended user" : `${((n = e.teams[0].organization.users.find(r=>r.id === t[0])) == null ? void 0 : n.name) || "Unknown"}` : `${t.length} users`
    },
    options(t) {
        return [{
            name: "Current user",
            value: it,
            image: c.jsx(bi, {}, "user"),
            keywords: "me"
        }, {
            name: "Suspended user",
            value: qr,
            image: c.jsx(s4, {}, "suspended")
        }].concat(b5(t.teams, t.currentUser))
    },
    key: "creator"
}
  , Vee = {
    ...St.searchableContent,
    id: ht(),
    name: "Content",
    image: c.jsx(ZN, {}),
    label(t) {
        return t.length === 1 ? t[t.length - 1] : "Invalid content"
    },
    options: ()=>[{
        name: "Filter by content…",
        inputType: na.Text
    }],
    key: "searchableContent"
}
  , Bee = {
    ...St.attachments,
    id: ht(),
    name: "Links",
    image: c.jsx(nV, {}),
    imageForValues(t, e) {
        const n = e.attachmentSources ?? [];
        if (t.length === 1) {
            const r = n.find(s=>s.type === t[0]);
            if (r) {
                const s = {
                    source: r == null ? void 0 : r.source,
                    title: r == null ? void 0 : r.type,
                    url: "",
                    metadata: {}
                };
                return c.jsx($b, {
                    attachment: s
                })
            }
        }
        return null
    },
    label(t, e) {
        const n = e.attachmentSources ?? [];
        if (t.length === 1) {
            const r = n.find(i=>i.type === t[0])
              , s = {
                source: r == null ? void 0 : r.source,
                title: r == null ? void 0 : r.type,
                url: "",
                metadata: {}
            };
            return r ? f0.userVisibleSourceName(s) : "1 link"
        }
        return `${t.length} links`
    },
    options(t) {
        return (t.attachmentSources ?? []).map(({source: n, type: r})=>{
            const s = {
                source: n,
                title: r,
                url: "",
                metadata: {}
            };
            return {
                value: r,
                name: f0.userVisibleSourceName(s),
                image: c.jsx($b, {
                    attachment: s
                })
            }
        }
        )
    },
    async additionalContext(t) {
        const e = Wr()
          , n = t.teams.length === 1 ? t.teams[0].id : void 0;
        return {
            attachmentSources: await uee(e.graphQLClient, n)
        }
    },
    key: "attachments"
}
  , Uee = {
    ...St.parentIssue,
    id: ht(),
    name: "Parent issues",
    image: c.jsx(hV, {}),
    label() {
        return "parent issue"
    },
    key: "children"
}
  , Hee = {
    ...St.subIssue,
    id: ht(),
    name: "Sub-issues",
    image: c.jsx(zV, {}),
    label() {
        return "sub-issue"
    },
    key: "parent"
}
  , zee = {
    ...St.relatedRelation,
    id: ht(),
    name: "Issues with references",
    keywords: "relations related",
    image: c.jsx(D_, {}),
    label() {
        return "issue with relations"
    },
    key: "hasRelatedRelations"
}
  , Zee = {
    ...St.duplicateRelation,
    id: ht(),
    name: "Duplicates",
    image: c.jsx(GN, {}),
    label() {
        return "issue with duplicate"
    },
    key: "hasDuplicateRelations"
}
  , qee = {
    ...St.blockingRelation,
    id: ht(),
    name: "Blocking issues",
    image: c.jsx(hh, {
        monochrome: !0
    }),
    label() {
        return "blocking"
    },
    key: "hasBlockingRelations"
}
  , Wee = {
    ...St.blockedRelation,
    id: ht(),
    name: "Blocked issues",
    image: c.jsx(uh, {
        monochrome: !0
    }),
    label() {
        return "blocked"
    },
    key: "hasBlockedByRelations"
}
  , Gee = {
    ...St.autoClosedAt,
    id: ht(),
    name: "Auto-closed",
    image: c.jsx(sp, {}),
    label() {
        return "auto-closed"
    },
    key: "autoClosedAt"
}
  , Kee = {
    ...St.estimate,
    id: ht(),
    name: "Estimate",
    image: c.jsx(_D, {}),
    label(t, e) {
        const n = t[0];
        if (t.length !== 1)
            return `${t.length} estimates`;
        if (n === Ve)
            return "No estimate";
        {
            const r = e.teams.some(i=>i.issueEstimationType === $i.tShirt)
              , s = r && e.teams.every(i=>i.issueEstimationType === $i.tShirt || i.issueEstimationType === $i.notUsed);
            return Ma.labelsForValues([n], s ? "only" : r ? "some" : "none")[0]
        }
    },
    applicable: t=>t.teams.some(e=>e.estimationEnabled),
    options(t) {
        let e = !1
          , n = !0;
        const r = new Set;
        for (const a of t.teams)
            if (a.issueEstimationType !== $i.notUsed) {
                a.issueEstimationType === $i.tShirt ? e = !0 : n = !1;
                for (const o of Ma.valuesForType(a.issueEstimationType, a.issueEstimationAllowZero, a.issueEstimationExtended))
                    r.add(o)
            }
        if (r.size === 0)
            return [];
        const s = Array.from(r);
        s.sort((a,o)=>a - o);
        const i = Ma.labelsForValues(s, e ? n ? "only" : "some" : "none");
        return [{
            name: "No estimate",
            value: Ve,
            image: !1
        }, ...i.map((a,o)=>({
            name: a,
            image: !1,
            value: s[o]
        }))]
    },
    key: "estimate"
}
  , Yee = {
    ...St.priority,
    id: ht(),
    name: "Priority",
    image: c.jsx(CV, {}),
    imageForValues(t) {
        return t.length === 1 ? c.jsx(Rb, {
            priority: Nr.createFromPriority(t[0])
        }, t[0]) : null
    },
    label(t) {
        return t.length === 1 ? t[0] === 0 ? "No priority" : Nr.createFromPriority(t[0]).name : `${t.length} priorities`
    },
    options() {
        return Nr.allPriorities.map(t=>({
            name: t.name,
            image: c.jsx(Rb, {
                priority: t
            }),
            value: t.priority
        }))
    },
    key: "priority"
}
  , Qee = {
    ...St.sourceMetadata,
    id: ht(),
    name: "External source",
    image: c.jsx(rV, {}),
    label(t) {
        return t.length === 1 ? t[0] === Ve ? "No source" : h0.getDisplayName(t[0]) ?? "Unknown source" : `${t.length} ${t.some(e=>e === Ve) ? "values" : "sources"}`
    },
    applicable(t) {
        return t.currentUser.organization.integrations.filter(e=>Wy.includes(e.service)).length > 0 || t.currentUser.organization.emailIntakeAddresses.length > 0
    },
    options(t) {
        const e = n5(t.currentUser.organization.integrations.filter(n=>Wy.includes(n.service)).map(n=>({
            name: h0.getDisplayName(n.service),
            value: n.service,
            image: c.jsx(hee, {
                service: n.service,
                monochrome: !0
            })
        })), "value");
        return t.currentUser.organization.emailIntakeAddresses.length > 0 && e.push({
            name: "Email",
            value: "email",
            image: c.jsx(Lp, {})
        }),
        e.push({
            value: Ve,
            name: "No source",
            image: c.jsx(dV, {})
        }),
        e
    },
    key: "sourceMetadata"
}
  , Xee = {
    ...St.lastAppliedTemplate,
    id: ht(),
    name: "Template",
    image: c.jsx(LD, {}),
    label(t, e) {
        var r;
        const n = sv(e.unfilteredItems, e.currentUser.organization);
        return t.length === 1 ? t[0] === Ve ? "No template" : `${((r = n.find(s=>s.id === t[0])) == null ? void 0 : r.name) ?? "Template"}` : `${t.length} templates`
    },
    options(t) {
        const e = sv(t.unfilteredItems, t.currentUser.organization);
        return [{
            name: "No template",
            value: Ve
        }].concat(e.map(n=>{
            var r;
            return {
                value: n.id,
                name: n.name,
                label: c.jsxs(c.Fragment, {
                    children: [c.jsx(Xe, {
                        type: "small",
                        style: {
                            color: "inherit"
                        },
                        children: n.name
                    }), (r = n.team) != null && r.name ? c.jsxs(c.Fragment, {
                        children: [" ", c.jsx(Xe, {
                            type: "small",
                            color: "labelMuted",
                            children: n.team.name
                        })]
                    }) : null]
                })
            }
        }
        ))
    },
    key: "lastAppliedTemplate"
};
function sv(t, e) {
    const r = (t.length > 0 ? t.map(s=>s.team).distinct() : e.accessibleTeams).map(s=>s.issueTemplates.elements).flat();
    return e.issueTemplates.elements.concat(r)
}
const F2e = [kee, xee, Dee, See, _ee, Iee, Eee, _2, Mee, Tee, Lee, I2, Ree, d1, Qee, Pee, E2, $ee, Fee, aI, oI, Nee, Vee, Bee, Uee, Hee, zee, Zee, qee, Wee, Gee, Kee, Yee, Xee];
function Wp(t) {
    const e = ic(t.location.pathname)
      , n = t.view instanceof Ke ? t.view.facet : void 0
      , r = n == null ? void 0 : n.sourceProject;
    return e === "project" || r !== void 0
}
function iv(t) {
    var e;
    return t.view instanceof Ke ? (e = t.view.facet) == null ? void 0 : e.sourceProject : void 0
}
var Gt;
(function(t) {
    const e = [v({
        and: le(v({
            id: v({
                eq: Se()
            })
        }))
    }), v({
        or: le(v({
            id: v({
                eq: Se()
            })
        }))
    }), v({
        or: le(Oe([v({
            every: v({
                id: v({
                    neq: Se()
                })
            })
        }), v({
            length: v({
                eq: Pn()
            })
        })]))
    }), v({
        or: le(Oe([v({
            every: v({
                id: v({
                    nin: le(Se())
                })
            })
        }), v({
            length: v({
                eq: Pn()
            })
        })]))
    })];
    v({
        id: Oe([v({
            in: le(Se())
        }), v({
            nin: le(Se())
        })])
    }),
    t.id = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "is" ? {
                id: {
                    in: s
                }
            } : {
                id: {
                    nin: s
                }
            }
        }
        ,
        match: r=>"id"in r,
        getCompareOption: r=>"nin"in r.id ? "not" : "is",
        selectedValues(r) {
            return "nin"in r.id ? r.id.nin : r.id.in
        }
    },
    v({
        status: v({
            id: Oe([v({
                in: le(Se())
            }), v({
                nin: le(Se())
            })])
        })
    }),
    t.status = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return {
                status: {
                    id: i === "is" ? {
                        in: s
                    } : {
                        nin: s
                    }
                }
            }
        }
        ,
        match: r=>ir(r, ["status", "id"]),
        getCompareOption: r=>"in"in r.status.id ? "is" : "not",
        selectedValues(r) {
            return "in"in r.status.id ? r.status.id.in : r.status.id.nin
        }
    },
    v({
        status: v({
            type: Oe([v({
                in: le(Se())
            }), v({
                nin: le(Se())
            })])
        })
    }),
    t.statusType = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return {
                status: {
                    type: i === "is" ? {
                        in: s
                    } : {
                        nin: s
                    }
                }
            }
        }
        ,
        match: r=>ir(r, ["status", "type"]),
        getCompareOption: r=>"in"in r.status.type ? "is" : "not",
        selectedValues(r) {
            return "in"in r.status.type ? r.status.type.in : r.status.type.nin
        }
    },
    Oe(e),
    t.roadmaps = {
        compareOptions: "collection",
        defaultCompareOption: "any",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "all" ? {
                roadmaps: {
                    and: s.map(a=>({
                        id: {
                            eq: a
                        }
                    }))
                }
            } : i === "any" ? {
                roadmaps: {
                    or: s.map(a=>({
                        id: {
                            eq: a
                        }
                    }))
                }
            } : i === "notAll" ? {
                roadmaps: {
                    or: [...s.map(a=>({
                        every: {
                            id: {
                                neq: a
                            }
                        }
                    })), {
                        length: {
                            eq: 0
                        }
                    }]
                }
            } : {
                roadmaps: {
                    or: [{
                        every: {
                            id: {
                                nin: s
                            }
                        }
                    }, {
                        length: {
                            eq: 0
                        }
                    }]
                }
            }
        }
        ,
        match: r=>"roadmaps"in r,
        getCompareOption: r=>{
            const s = "length"in r.roadmaps || "and"in r.roadmaps || r.roadmaps.or.find(a=>ir(a, ["every", "id", "neq"])) !== void 0
              , i = "length"in r.roadmaps || "and"in r.roadmaps || "or"in r.roadmaps && "id"in (r.roadmaps.or[0] || {});
            return s ? i ? "all" : "notAll" : i ? "any" : "neither"
        }
        ,
        selectedValues(r) {
            return "length"in r.roadmaps ? [] : "and"in r.roadmaps ? r.roadmaps.and.map(s=>s.id.eq) : r.roadmaps.or.flatMap(s=>{
                if ("id"in s)
                    return s.id.eq;
                if ("every"in s)
                    return "nin"in s.every.id ? s.every.id.nin : s.every.id.neq
            }
            ).filter(Boolean)
        }
    },
    Oe(e),
    t.initiatives = {
        compareOptions: "collection",
        defaultCompareOption: "any",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "all" ? {
                initiatives: {
                    and: s.map(a=>({
                        id: {
                            eq: a
                        }
                    }))
                }
            } : i === "any" ? {
                initiatives: {
                    or: s.map(a=>({
                        id: {
                            eq: a
                        }
                    }))
                }
            } : i === "notAll" ? {
                initiatives: {
                    or: [...s.map(a=>({
                        every: {
                            id: {
                                neq: a
                            }
                        }
                    })), {
                        length: {
                            eq: 0
                        }
                    }]
                }
            } : {
                initiatives: {
                    or: [{
                        every: {
                            id: {
                                nin: s
                            }
                        }
                    }, {
                        length: {
                            eq: 0
                        }
                    }]
                }
            }
        }
        ,
        match: r=>"initiatives"in r && !t.initiativeStatus.match(r),
        getCompareOption: r=>{
            const s = "length"in r.initiatives || "and"in r.initiatives || r.initiatives.or.find(a=>{
                var o, l;
                return ((l = (o = a.every) == null ? void 0 : o.id) == null ? void 0 : l.neq) !== void 0
            }
            ) !== void 0
              , i = "length"in r.initiatives || "and"in r.initiatives || "or"in r.initiatives && "id"in (r.initiatives.or[0] || {});
            return s ? i ? "all" : "notAll" : i ? "any" : "neither"
        }
        ,
        selectedValues(r) {
            return "length"in r.initiatives ? [] : "and"in r.initiatives ? r.initiatives.and.map(s=>s.id.eq) : r.initiatives.or.flatMap(s=>{
                if ("id"in s)
                    return s.id.eq;
                if ("every"in s)
                    return "nin"in s.every.id ? s.every.id.nin : s.every.id.neq
            }
            ).filter(Boolean)
        }
    };
    const n = [v({
        and: le(v({
            status: v({
                eq: Se()
            })
        }))
    }), v({
        or: le(v({
            status: v({
                eq: Se()
            })
        }))
    }), v({
        or: le(Oe([v({
            every: v({
                status: v({
                    neq: Se()
                })
            })
        }), v({
            length: v({
                eq: Pn()
            })
        })]))
    }), v({
        or: le(Oe([v({
            every: v({
                status: v({
                    nin: le(Se())
                })
            })
        }), v({
            length: v({
                eq: Pn()
            })
        })]))
    })];
    Oe(n),
    t.initiativeStatus = {
        compareOptions: "collection",
        defaultCompareOption: "any",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "all" ? {
                initiatives: {
                    and: s.map(a=>({
                        status: {
                            eq: a
                        }
                    }))
                }
            } : i === "any" ? {
                initiatives: {
                    or: s.map(a=>({
                        status: {
                            eq: a
                        }
                    }))
                }
            } : i === "notAll" ? {
                initiatives: {
                    or: [...s.map(a=>({
                        every: {
                            status: {
                                neq: a
                            }
                        }
                    })), {
                        length: {
                            eq: 0
                        }
                    }]
                }
            } : {
                initiatives: {
                    or: [{
                        every: {
                            status: {
                                nin: s
                            }
                        }
                    }, {
                        length: {
                            eq: 0
                        }
                    }]
                }
            }
        }
        ,
        match: r=>ir(r, ["initiatives", "or", 0, "status"]) || ir(r, ["initiatives", "and", 0, "status"]) || ir(r, ["initiatives", "or", 0, "every", "status"]),
        getCompareOption: r=>{
            const s = "length"in r.initiatives || "and"in r.initiatives || r.initiatives.or.find(a=>{
                var o, l;
                return ((l = (o = a.every) == null ? void 0 : o.status) == null ? void 0 : l.neq) !== void 0
            }
            ) !== void 0
              , i = "length"in r.initiatives || "and"in r.initiatives || "or"in r.initiatives && "status"in (r.initiatives.or[0] || {});
            return s ? i ? "all" : "notAll" : i ? "any" : "neither"
        }
        ,
        selectedValues(r) {
            return "length"in r.initiatives ? [] : "and"in r.initiatives ? r.initiatives.and.map(s=>s.status.eq) : r.initiatives.or.flatMap(s=>{
                if ("status"in s)
                    return s.status.eq;
                if ("every"in s)
                    return "nin"in s.every.status ? s.every.status.nin : s.every.status.neq
            }
            ).filter(Boolean)
        }
    },
    v({
        searchableContent: Oe([v({
            contains: Se()
        }), v({
            notContains: Se()
        })])
    }),
    t.searchableContent = {
        compareOptions: "containsValue",
        defaultCompareOption: "contains",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "contains" ? {
                searchableContent: {
                    contains: s[s.length - 1]
                }
            } : {
                searchableContent: {
                    notContains: s[s.length - 1]
                }
            }
        }
        ,
        match: r=>"searchableContent"in r,
        getCompareOption: r=>"contains"in r.searchableContent ? "contains" : "notContains",
        selectedValues(r) {
            return "contains"in r.searchableContent ? [r.searchableContent.contains] : [r.searchableContent.notContains]
        }
    },
    v({
        lead: Oe([v({
            id: v({
                in: le(Se())
            })
        }), v({
            id: v({
                nin: le(Se())
            })
        }), v({
            or: le(Oe([v({
                id: v({
                    in: le(Se())
                })
            }), v({
                null: Ye(!0)
            }), v({
                isMe: v({
                    eq: Ye(!0)
                })
            })]))
        }), v({
            and: le(Oe([v({
                id: v({
                    nin: le(Se())
                })
            }), v({
                null: Ye(!1)
            }), v({
                or: le(Oe([v({
                    null: Ye(!0)
                }), v({
                    isMe: v({
                        eq: Ye(!1)
                    })
                })]))
            })]))
        })])
    }),
    t.lead = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = [];
            let o = !1
              , l = !1;
            for (const d of s)
                d === Ve ? o = !0 : d === it ? l = !0 : a.push(d);
            if (i === "is") {
                const d = {
                    or: []
                };
                return o && d.or.push({
                    null: !0
                }),
                l && d.or.push({
                    isMe: {
                        eq: !0
                    }
                }),
                a.length && d.or.push({
                    id: {
                        in: a
                    }
                }),
                {
                    lead: d
                }
            } else {
                const d = {
                    and: a.length ? [{
                        id: {
                            nin: a
                        }
                    }] : []
                };
                return o && d.and.push({
                    null: !1
                }),
                l && d.and.push({
                    or: [{
                        null: !0
                    }, {
                        isMe: {
                            eq: !1
                        }
                    }]
                }),
                {
                    lead: d
                }
            }
        }
        ,
        match: r=>"lead"in r,
        getCompareOption: r=>"or"in r.lead || "id"in r.lead && "in"in r.lead.id ? "is" : "not",
        selectedValues(r) {
            if ("id"in r.lead)
                return "in"in r.lead.id ? r.lead.id.in : r.lead.id.nin;
            if ("or"in r.lead) {
                const s = [];
                for (const i of r.lead.or)
                    "id"in i ? s.push(...i.id.in) : "null"in i ? s.push(Ve) : "isMe"in i && s.push(it);
                return s
            } else if ("and"in r.lead) {
                const s = [];
                for (const i of r.lead.and)
                    "id"in i ? s.push(...i.id.nin) : "null"in i ? s.push(Ve) : "or"in i && s.push(it);
                return s
            }
            return []
        }
    },
    v({
        members: Oe([v({
            or: le(Oe([v({
                every: v({
                    and: le(Oe([v({
                        id: v({
                            nin: le(Se())
                        })
                    }), v({
                        isMe: v({
                            eq: br()
                        })
                    })]))
                })
            }), v({
                length: v({
                    eq: Pn()
                })
            })]))
        }), v({
            or: le(Oe([v({
                id: v({
                    in: le(Se())
                })
            }), v({
                isMe: v({
                    eq: br()
                })
            })]))
        })])
    }),
    t.members = {
        compareOptions: "containsValue",
        defaultCompareOption: "contains",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = s.includes(it);
            if (i === "contains")
                if (a) {
                    const o = s.filter(l=>l !== it);
                    return {
                        members: {
                            or: [{
                                isMe: {
                                    eq: !0
                                }
                            }, {
                                id: {
                                    in: o
                                }
                            }]
                        }
                    }
                } else
                    return {
                        members: {
                            or: [{
                                id: {
                                    in: s
                                }
                            }]
                        }
                    };
            else {
                const o = s.filter(l=>l !== it);
                return {
                    members: {
                        or: [{
                            every: {
                                and: Jee([{
                                    id: {
                                        nin: o
                                    }
                                }, a ? {
                                    isMe: {
                                        eq: !1
                                    }
                                } : void 0])
                            }
                        }, {
                            length: {
                                eq: 0
                            }
                        }]
                    }
                }
            }
        }
        ,
        match: r=>"members"in r,
        getCompareOption: r=>{
            var s;
            return (s = r.members.or) != null && s.some(i=>"length"in i) ? "notContains" : "contains"
        }
        ,
        selectedValues(r) {
            const s = this.getCompareOption(r);
            let i, a;
            return s === "contains" ? (a = r.members.or.filter(o=>!("isMe"in o))[0].id.in,
            i = r.members.or.some(o=>"isMe"in o) ? it : void 0) : (a = r.members.or[0].every.and[0].id.nin,
            i = r.members.or[0].every.and[1] !== void 0 ? it : void 0),
            i ? [i].concat(a) : a
        }
    },
    Oe([...e, v({
        length: v({
            eq: Pn().int().min(0)
        })
    })]),
    t.teams = {
        compareOptions: "collection",
        defaultCompareOption: "any",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return s.length === 0 && ["all", "any"].indexOf(i) > -1 ? {
                accessibleTeams: {
                    length: {
                        eq: 0
                    }
                }
            } : i === "all" ? {
                accessibleTeams: {
                    and: s.map(a=>({
                        id: {
                            eq: a
                        }
                    }))
                }
            } : i === "any" ? {
                accessibleTeams: {
                    or: s.map(a=>({
                        id: {
                            eq: a
                        }
                    }))
                }
            } : i === "notAll" ? {
                accessibleTeams: {
                    or: [...s.map(a=>({
                        every: {
                            id: {
                                neq: a
                            }
                        }
                    })), {
                        length: {
                            eq: 0
                        }
                    }]
                }
            } : {
                accessibleTeams: {
                    or: [{
                        every: {
                            id: {
                                nin: s
                            }
                        }
                    }, {
                        length: {
                            eq: 0
                        }
                    }]
                }
            }
        }
        ,
        match: r=>"accessibleTeams"in r,
        getCompareOption: r=>{
            const s = "length"in r.accessibleTeams || "and"in r.accessibleTeams || r.accessibleTeams.or.find(a=>{
                var o, l;
                return ((l = (o = a.every) == null ? void 0 : o.id) == null ? void 0 : l.neq) !== void 0
            }
            ) !== void 0
              , i = "length"in r.accessibleTeams || "and"in r.accessibleTeams || "or"in r.accessibleTeams && "id"in (r.accessibleTeams.or[0] || {});
            return s ? i ? "all" : "notAll" : i ? "any" : "neither"
        }
        ,
        selectedValues(r) {
            return "length"in r.accessibleTeams ? [] : "and"in r.accessibleTeams ? r.accessibleTeams.and.map(s=>s.id.eq) : r.accessibleTeams.or.flatMap(s=>{
                if ("id"in s)
                    return s.id.eq;
                if ("every"in s)
                    return "nin"in s.every.id ? s.every.id.nin : s.every.id.neq
            }
            ).filter(Boolean)
        }
    },
    t.completedAt = zs({
        defaultCompareOptionForDates: "after",
        property: "completedAt",
        nullable: !0
    }),
    t.updatedAt = zs({
        defaultCompareOptionForDates: "after",
        property: "updatedAt",
        nullable: !1
    }),
    t.startDate = zs({
        defaultCompareOptionForDates: "before",
        property: "startDate",
        nullable: !0
    }),
    t.targetDate = zs({
        defaultCompareOptionForDates: "before",
        property: "targetDate",
        nullable: !0
    }),
    t.createdAt = zs({
        defaultCompareOptionForDates: "after",
        property: "createdAt",
        nullable: !1
    }),
    v({
        projectUpdates: Oe([v({
            some: v({
                createdAt: v({
                    gte: Ab
                })
            })
        }), v({
            every: v({
                createdAt: v({
                    lt: Ab
                })
            })
        }), v({
            length: v({
                eq: Pn()
            })
        }), v({
            length: v({
                gt: Pn()
            })
        })])
    }),
    t.lastProjectUpdateAt = {
        compareOptions: r=>r[0] === Ve ? "equalValue" : "date",
        defaultCompareOption: r=>r[0] === Ve ? "is" : "after",
        allowMultiSelect: !1,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return s[0] === Ve ? i === "is" ? {
                projectUpdates: {
                    length: {
                        eq: 0
                    }
                }
            } : {
                projectUpdates: {
                    length: {
                        gt: 0
                    }
                }
            } : i === "before" ? {
                projectUpdates: {
                    every: {
                        createdAt: {
                            lt: s[0]
                        }
                    }
                }
            } : {
                projectUpdates: {
                    some: {
                        createdAt: {
                            gte: s[0]
                        }
                    }
                }
            }
        }
        ,
        match: r=>"projectUpdates"in r,
        getCompareOption: r=>"length"in r.projectUpdates ? "eq"in r.projectUpdates.length ? "is" : "not" : "some"in r.projectUpdates ? "after" : "before",
        selectedValues(r) {
            return "length"in r.projectUpdates ? [Ve] : "some"in r.projectUpdates ? [r.projectUpdates.some.createdAt.gte] : "every"in r.projectUpdates ? [r.projectUpdates.every.createdAt.lt] : []
        }
    },
    v({
        health: Oe([v({
            in: le(_a(Fn))
        }), v({
            nin: le(_a(Fn))
        })])
    }),
    t.health = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return {
                health: i === "is" ? {
                    in: s
                } : {
                    nin: s
                }
            }
        }
        ,
        match: r=>"health"in r,
        getCompareOption: r=>"in"in r.health ? "is" : "not",
        selectedValues(r) {
            return "in"in r.health ? r.health.in : r.health.nin
        }
    },
    t.healthWithAge = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r;
            return {
                healthWithAge: i === "is" ? {
                    in: s
                } : {
                    nin: s
                }
            }
        }
        ,
        match: r=>"healthWithAge"in r,
        getCompareOption: r=>"in"in r.healthWithAge ? "is" : "not",
        selectedValues(r) {
            return "in"in r.healthWithAge ? r.healthWithAge.in : r.healthWithAge.nin
        }
    },
    v({
        hasRelatedRelations: v({
            eq: br()
        })
    }),
    t.relatedRelations = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                hasRelatedRelations: {
                    eq: s === "is"
                }
            }
        }
        ,
        match: r=>"hasRelatedRelations"in r,
        getCompareOption: r=>r.hasRelatedRelations.eq ? "is" : "not"
    },
    v({
        hasDependedOnByRelations: v({
            eq: br()
        })
    }),
    t.dependedOnByRelations = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                hasDependedOnByRelations: {
                    eq: s === "is"
                }
            }
        }
        ,
        match: r=>"hasDependedOnByRelations"in r,
        getCompareOption: r=>r.hasDependedOnByRelations.eq ? "is" : "not"
    },
    v({
        hasDependsOnRelations: v({
            eq: br()
        })
    }),
    t.dependsOnRelations = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                hasDependsOnRelations: {
                    eq: s === "is"
                }
            }
        }
        ,
        match: r=>"hasDependsOnRelations"in r,
        getCompareOption: r=>r.hasDependsOnRelations.eq ? "is" : "not"
    },
    v({
        hasBlockingRelations: v({
            eq: br()
        })
    }),
    t.blockingRelations = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                hasBlockingRelations: {
                    eq: s === "is"
                }
            }
        }
        ,
        match: r=>"hasBlockingRelations"in r,
        getCompareOption: r=>r.hasBlockingRelations.eq ? "is" : "not"
    },
    v({
        hasBlockedByRelations: v({
            eq: br()
        })
    }),
    t.blockedByRelations = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        create: r=>{
            const {compareOption: s} = r;
            return {
                hasBlockedByRelations: {
                    eq: s === "is"
                }
            }
        }
        ,
        match: r=>"hasBlockedByRelations"in r,
        getCompareOption: r=>r.hasBlockedByRelations.eq ? "is" : "not"
    },
    v({
        nextProjectMilestone: Oe([v({
            name: v({
                contains: Se()
            })
        }), v({
            or: sr([v({
                name: v({
                    notContains: Se()
                })
            }), v({
                null: Ye(!0)
            })])
        })])
    }),
    t.nextMilestone = {
        compareOptions: "containsValue",
        defaultCompareOption: "contains",
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "contains" ? {
                nextProjectMilestone: {
                    name: {
                        contains: s[0]
                    }
                }
            } : {
                nextProjectMilestone: {
                    or: [{
                        name: {
                            notContains: s[0]
                        }
                    }, {
                        null: !0
                    }]
                }
            }
        }
        ,
        match: r=>"nextProjectMilestone"in r,
        getCompareOption: r=>"name"in r.nextProjectMilestone ? "contains" : "notContains",
        selectedValues(r) {
            return "name"in r.nextProjectMilestone ? [r.nextProjectMilestone.name.contains] : [r.nextProjectMilestone.or[0].name.notContains]
        }
    },
    v({
        completedProjectMilestones: Oe([v({
            some: v({
                name: v({
                    contains: Se()
                })
            })
        }), v({
            or: sr([v({
                every: v({
                    name: v({
                        notContains: Se()
                    })
                })
            }), v({
                length: v({
                    eq: Pn()
                })
            })])
        })])
    }),
    t.completedMilestones = {
        compareOptions: "containsValue",
        defaultCompareOption: "contains",
        create: r=>{
            const {values: s, compareOption: i} = r;
            return i === "contains" ? {
                completedProjectMilestones: {
                    some: {
                        name: {
                            contains: s[0]
                        }
                    }
                }
            } : {
                completedProjectMilestones: {
                    or: [{
                        every: {
                            name: {
                                notContains: s[0]
                            }
                        }
                    }, {
                        length: {
                            eq: 0
                        }
                    }]
                }
            }
        }
        ,
        match: r=>"completedProjectMilestones"in r,
        getCompareOption: r=>"some"in r.completedProjectMilestones ? "contains" : "notContains",
        selectedValues(r) {
            return "some"in r.completedProjectMilestones ? [r.completedProjectMilestones.some.name.contains] : [r.completedProjectMilestones.or[0].every.name.notContains]
        }
    },
    v({
        lastAppliedTemplate: Oe([v({
            id: v({
                in: le(Se())
            })
        }), v({
            id: v({
                nin: le(Se())
            })
        }), v({
            or: le(Oe([v({
                id: v({
                    in: le(Se())
                })
            }), v({
                null: Ye(!0)
            })]))
        }), v({
            and: le(Oe([v({
                id: v({
                    nin: le(Se())
                })
            }), v({
                null: Ye(!1)
            })]))
        })])
    }),
    t.lastAppliedTemplate = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: r=>{
            const {values: s, compareOption: i} = r
              , a = [];
            let o = !1;
            for (const l of s)
                l === Ve ? o = !0 : a.push(l);
            if (i === "is") {
                const l = {
                    or: []
                };
                return o && l.or.push({
                    null: !0
                }),
                a.length && l.or.push({
                    id: {
                        in: a
                    }
                }),
                {
                    lastAppliedTemplate: l
                }
            } else {
                const l = {
                    and: a.length ? [{
                        id: {
                            nin: a
                        }
                    }] : []
                };
                return o && l.and.push({
                    null: !1
                }),
                {
                    lastAppliedTemplate: l
                }
            }
        }
        ,
        match: r=>"lastAppliedTemplate"in r,
        getCompareOption: r=>"or"in r.lastAppliedTemplate || "id"in r.lastAppliedTemplate && "in"in r.lastAppliedTemplate.id ? "is" : "not",
        selectedValues(r) {
            if ("id"in r.lastAppliedTemplate)
                return "in"in r.lastAppliedTemplate.id ? r.lastAppliedTemplate.id.in : r.lastAppliedTemplate.id.nin;
            if ("or"in r.lastAppliedTemplate) {
                const s = [];
                for (const i of r.lastAppliedTemplate.or)
                    "id"in i ? s.push(...i.id.in) : "null"in i && s.push(Ve);
                return s
            } else if ("and"in r.lastAppliedTemplate) {
                const s = [];
                for (const i of r.lastAppliedTemplate.and)
                    "id"in i ? s.push(...i.id.nin) : "null"in i && s.push(Ve);
                return s
            }
            return []
        }
    }
}
)(Gt || (Gt = {}));
const Jee = t=>t.filter(e=>e !== void 0)
  , e7 = rn(function(e) {
    const {status: n} = e
      , r = Pt();
    switch (n) {
    case Ao.Planned:
        return c.jsx(tV, {
            color: x2(r, "#949698"),
            className: e.className
        });
    case Ao.Active:
        return c.jsx(XN, {
            color: x2(r, "#F2C94C"),
            className: e.className
        });
    case Ao.Completed:
        return c.jsx(JN, {
            color: x2(r, "#5E68D0"),
            className: e.className
        });
    default:
        throw void 0
    }
})
  , ete = {
    ...Gt.id,
    id: ht(),
    name: "Specific projects",
    hideMatchCount: !0,
    image: c.jsx(x1, {}),
    label(t, e) {
        var n;
        return t.length === 1 && ((n = e.unfilteredItems.find(r=>r.id === t[0])) == null ? void 0 : n.name) || `${t.length} ${dd("project", t.length)}`
    },
    options(t, e=[]) {
        const n = n5(t.teams.flatMap(s=>s.projects.elements), "id");
        return nI(n, t.currentUser).map(s=>({
            value: s.id,
            onlyVisibleThroughSearch: s.isDone ? !e.some(i=>i === s.id) : void 0,
            sortPriority: s.isDone ? -.3 : 0,
            name: s.name,
            image: c.jsx(x1, {
                project: s
            })
        }))
    },
    key: "id"
}
  , tte = oa({
    blockDefinition: Gt.createdAt,
    image: c.jsx(Y3, {}),
    name: "Created date"
})
  , nte = oa({
    blockDefinition: Gt.targetDate,
    applicable: t=>t.unfilteredItems.some(e=>e.targetDate !== void 0) ?? !0,
    image: c.jsx(__, {}),
    name: "Target date",
    options: [{
        value: "P0D",
        name: "Overdue"
    }, ...rI, {
        value: Ve,
        name: "No target date"
    }]
})
  , rte = oa({
    blockDefinition: Gt.startDate,
    applicable: t=>t.unfilteredItems.some(e=>e.startDate !== void 0) ?? !0,
    image: c.jsx(lh, {}),
    name: "Start date",
    options: [...yh, {
        value: Ve,
        name: "No start date"
    }]
})
  , ste = oa({
    blockDefinition: Gt.updatedAt,
    image: c.jsx(OD, {}),
    name: "Updated date"
})
  , ite = oa({
    blockDefinition: Gt.completedAt,
    image: c.jsx(lh, {}),
    name: "Completed date"
})
  , ate = {
    ...Gt.lastProjectUpdateAt,
    id: ht(),
    name: "Latest project update",
    image: c.jsx(np, {}),
    label(t) {
        return t[0] === Ve ? "never" : Sn.isDuration(t[0]) ? `${Sn.format(t[0])} ago` : Mu(t[0])
    },
    options: ()=>[{
        value: "-P1D",
        name: `${Sn.format("-P1D")} ago`
    }, {
        value: "-P2D",
        name: `${Sn.format("-P2D")} ago`
    }, {
        value: "-P3D",
        name: `${Sn.format("-P3D")} ago`
    }, {
        value: "-P5D",
        name: `${Sn.format("-P5D")} ago`
    }, {
        value: "-P1W",
        name: `${Sn.format("-P1W")} ago`
    }, {
        value: "-P2W",
        name: `${Sn.format("-P2W")} ago`
    }, {
        value: "-P3W",
        name: `${Sn.format("-P3W")} ago`
    }, {
        value: "-P1M",
        name: `${Sn.format("-P1M")} ago`
    }, {
        value: "-P2M",
        name: `${Sn.format("-P2M")} ago`
    }, {
        value: "-P3M",
        name: `${Sn.format("-P3M")} ago`
    }, {
        value: "-P6M",
        name: `${Sn.format("-P6M")} ago`
    }, {
        value: "-P1Y",
        name: `${Sn.format("-P1Y")} ago`
    }, {
        value: Ve,
        name: "Never"
    }, {
        inputType: na.Date,
        name: "Custom…"
    }],
    applicable: t=>t.unfilteredItems.some(e=>e.projectUpdates.length > 0),
    key: "projectUpdates"
}
  , A2 = {
    ...Gt.status,
    id: ht(),
    name: "Status",
    image: c.jsx(tp, {}),
    imageForValues(t, e) {
        return c.jsx(ts, {
            size: 14,
            children: t == null ? void 0 : t.map(n=>e.currentUser.organization.projectStatuses.findById(n)).concrete().slice(0, 3).map(n=>c.jsx(K1, {
                status: n
            }, n.id))
        })
    },
    label(t, e) {
        var n, r;
        return t.length === 1 ? ((r = (n = A2.options) == null ? void 0 : n.call(A2, e).find(s=>"value"in s && s.value === t[0])) == null ? void 0 : r.name) ?? t[0] : `${t.length} statuses`
    },
    options(t) {
        return t.currentUser.organization.projectStatuses.map(n=>({
            value: n.id,
            name: n.name,
            image: c.jsx(K1, {
                status: n
            })
        }))
    },
    key: "status"
}
  , j2 = {
    ...Gt.statusType,
    id: ht(),
    name: "Status type",
    applicable(t) {
        const e = t.currentUser.organization.projectStatuses;
        return e.length > e.map(n=>n.type).distinct().length + 1
    },
    image: c.jsx(AD, {}),
    imageForValues(t) {
        return c.jsx(ts, {
            size: 14,
            children: t == null ? void 0 : t.concrete().slice(0, 3).map(e=>c.jsx(K1, {
                state: e
            }, e))
        })
    },
    label(t, e) {
        var n, r;
        return t.length === 1 ? ((r = (n = j2.options) == null ? void 0 : n.call(j2, e).find(s=>"value"in s && s.value === t[0])) == null ? void 0 : r.name) ?? t[0] : `${t.length} status types`
    },
    options() {
        return wi.allExceptPaused.map(t=>({
            value: t,
            name: P8(t),
            image: c.jsx(K1, {
                state: t
            })
        }))
    },
    key: "status"
}
  , M2 = {
    ...Gt.initiativeStatus,
    id: ht(),
    name: "Initiative status",
    applicable(t) {
        return qe.isEnabled(qe.initiatives) && t.currentUser.organization.roadmapEnabled && t.currentUser.organization.initiatives.length > 0
    },
    image: c.jsx(e7, {
        status: Ao.Planned
    }),
    imageForValues(t) {
        return c.jsx(ts, {
            size: 14,
            children: t == null ? void 0 : t.concrete().map(e=>c.jsx(e7, {
                status: e,
                className: "color-override"
            }))
        })
    },
    label(t, e) {
        var n, r;
        return t.length === 1 ? ((r = (n = M2.options) == null ? void 0 : n.call(M2, e).find(s=>"value"in s && s.value === t[0])) == null ? void 0 : r.name) ?? t[0] : `${t.length} statuses`
    },
    options() {
        return Object.values(Ao).map(t=>({
            value: t,
            name: t,
            image: c.jsx(e7, {
                status: t
            })
        }))
    },
    key: "initiatives"
}
  , Hc = {
    ...Gt.health,
    id: ht(),
    name: "Health",
    image: c.jsx(np, {}),
    applicable: ()=>!1,
    imageForValues(t) {
        return c.jsx(ts, {
            size: 14,
            children: t.map(e=>c.jsx(J0, {
                health: e
            }, e))
        })
    },
    label(t, e) {
        var n, r;
        return t.length === 1 ? ((r = (n = Hc.options) == null ? void 0 : n.call(Hc, e).find(s=>"value"in s && s.value === t[0])) == null ? void 0 : r.name) ?? t[0] : `${t.length} values`
    },
    options() {
        return Ad.all.map(t=>({
            value: t,
            name: fs.labelForProjectUpdateHealth(t),
            image: c.jsx(J0, {
                health: t
            })
        }))
    },
    key: "health"
}
  , ote = {
    ...Gt.healthWithAge,
    id: ht(),
    name: "Health",
    image: c.jsx(np, {}),
    imageForValues(t) {
        return c.jsx(ts, {
            size: 14,
            children: t.map(e=>c.jsx(J0, {
                health: e
            }, e))
        })
    },
    label(t, e) {
        var n, r;
        return t.length === 1 ? ((r = (n = Hc.options) == null ? void 0 : n.call(Hc, e).find(s=>"value"in s && s.value === t[0])) == null ? void 0 : r.name) ?? t[0] : `${t.length} values`
    },
    options() {
        return Ad.allWithAged.map(t=>({
            value: t,
            name: fs.labelForProjectUpdateHealth(t),
            image: c.jsx(J0, {
                health: t
            })
        }))
    },
    key: "healthWithAge"
}
  , cte = {
    ...Gt.relatedRelations,
    id: ht(),
    name: "Has dependencies",
    keywords: "relations related blocked blocking",
    image: c.jsx(D_, {}),
    applicable: ()=>qe.isEnabled(qe.projectDependencies),
    label() {
        return "project with dependencies"
    },
    key: "hasRelatedRelations"
}
  , lte = {
    ...Gt.dependedOnByRelations,
    id: ht(),
    name: "Depended on by others",
    keywords: "dependency blocking blocked relation",
    image: c.jsx(hh, {
        monochrome: !0
    }),
    applicable: ()=>qe.isEnabled(qe.projectDependencies),
    label() {
        return "depended on by others"
    },
    key: "hasDependedOnByRelations"
}
  , dte = {
    ...Gt.dependsOnRelations,
    id: ht(),
    name: "Dependent on others",
    keywords: "dependency blocked blocking relation",
    image: c.jsx(uh, {
        monochrome: !0
    }),
    applicable: ()=>qe.isEnabled(qe.projectDependencies),
    label() {
        return "dependent on others"
    },
    key: "hasDependsOnRelations"
}
  , ute = {
    ...Gt.blockingRelations,
    id: ht(),
    name: "Blocking projects",
    keywords: "dependency",
    image: c.jsx(hh, {
        monochrome: !0
    }),
    applicable: ()=>qe.isEnabled(qe.projectDependencies),
    label() {
        return "blocking"
    },
    key: "hasBlockingRelations"
}
  , hte = {
    ...Gt.blockedByRelations,
    id: ht(),
    name: "Blocked projects",
    keywords: "dependency",
    image: c.jsx(uh, {
        monochrome: !0
    }),
    applicable: ()=>qe.isEnabled(qe.projectDependencies),
    label() {
        return "blocked"
    },
    key: "hasBlockedByRelations"
}
  , fte = {
    ...Gt.members,
    id: ht(),
    name: "Members",
    image: c.jsx(iV, {}),
    imageForValues(t, e) {
        return c.jsx(ts, {
            size: 14,
            children: (t == null ? void 0 : t.map(n=>n === it ? it : e.teams[0].organization.activeUsers.find(r=>r.id === n)).slice(0, 3).map(n=>n === it ? c.jsx(bi, {}, it) : n ? c.jsx(Di, {
                size: "micro",
                enablePresence: !1,
                user: n
            }, n.id) : c.jsx($o, {}, "no-user"))) ?? c.jsx($o, {}, "no-user")
        })
    },
    label(t, e) {
        var n;
        return t.length === 1 ? t[0] === it ? "Current user" : ((n = e.teams.flatMap(r=>r.users.elements).find(r=>r.id === t[0])) == null ? void 0 : n.name) || "Unknown" : `${t.length} members`
    },
    options(t) {
        return [{
            value: it,
            name: "Current user",
            image: c.jsx(bi, {})
        }].concat(b5(t.teams, t.currentUser))
    },
    key: "members"
}
  , cI = {
    ...Gt.roadmaps,
    id: ht(),
    name: "Roadmap",
    image: c.jsx(rp, {}),
    label(t, e) {
        var n;
        return t.length === 1 ? ((n = e.teams[0].organization.roadmaps.filter(r=>r.persisted && !r.isClone).find(r=>r.id === t[0])) == null ? void 0 : n.name) || "Unknown" : `${t.length} roadmaps`
    },
    applicable: t=>{
        const e = qe.isEnabled(qe.initiatives)
          , n = t.teams[0].organization;
        return !e && n.roadmapEnabled && n.roadmaps.length > 0
    }
    ,
    options(t) {
        return t.teams[0].organization.roadmaps.filter(n=>n.persisted && !n.isClone).map(n=>({
            value: n.id,
            name: n.name,
            image: !1
        }))
    },
    match: (...t)=>qe.isEnabled(qe.initiatives) ? !1 : Gt.roadmaps.match(...t),
    key: "roadmaps"
}
  , lI = {
    ...Gt.initiatives,
    id: ht(),
    name: "Initiative",
    image: c.jsx(Zp, {}),
    label(t, e) {
        var n;
        return t.length === 1 ? ((n = e.teams[0].organization.initiatives.filter(r=>r.persisted && !r.isClone).find(r=>r.id === t[0])) == null ? void 0 : n.name) || "Unknown" : `${t.length} initiatives`
    },
    applicable: t=>{
        const e = qe.isEnabled(qe.initiatives)
          , n = t.teams[0].organization;
        return e && n.roadmapEnabled && n.initiatives.length > 0
    }
    ,
    options(t) {
        return t.teams[0].organization.initiatives.filter(n=>n.persisted && !n.isClone).map(n=>({
            value: n.id,
            name: n.name,
            image: !1
        }))
    },
    key: "initiatives"
}
  , dI = {
    ...Gt.teams,
    id: ht(),
    name: "Teams",
    image: c.jsx(ip, {}),
    imageForValues(t, e) {
        return vd.getTeamIconForValues(t, e.teams)
    },
    label(t, e) {
        return vd.getLabelForTeamBlock(t, e.teams)
    },
    options(t) {
        return vd.getTeamsOptions(t.teams, t.currentUser)
    },
    applicable(t) {
        return t.teams.length > 1
    },
    key: "accessibleTeams"
}
  , pte = {
    ...Gt.lead,
    id: ht(),
    name: "Lead",
    image: c.jsx(bi, {}),
    imageForValues(t, e) {
        return c.jsx(ts, {
            size: 14,
            children: (t == null ? void 0 : t.map(n=>n === it ? n : e.teams[0].organization.users.find(r=>r.id === n)).map(n=>n === it ? c.jsx(bi, {}, it) : n ? c.jsx(Di, {
                size: "micro",
                enablePresence: !1,
                user: n
            }, n.id) : null)) ?? c.jsx($o, {}, "unassigned")
        })
    },
    label(t, e) {
        var n;
        return t.length === 1 ? t[0] === Ve ? "No lead" : t[0] === it ? "Current user" : `${((n = e.teams[0].organization.users.find(r=>r.id === t[0])) == null ? void 0 : n.name) || "Unknown"}` : `${t.length} leads`
    },
    options(t) {
        return [{
            value: Ve,
            name: "No lead",
            image: c.jsx($o, {})
        }, {
            name: "Current user",
            value: it,
            image: c.jsx(bi, {}, "user")
        }].concat(b5(t.teams, t.currentUser))
    },
    key: "lead"
}
  , mte = {
    ...Gt.nextMilestone,
    id: ht(),
    name: "Next milestone",
    image: c.jsx(cV, {}),
    label(t) {
        return t.length === 1 ? t[0] : "Invalid value"
    },
    options: ()=>[{
        name: "Next milestone contains…",
        inputType: na.Text
    }],
    key: "nextProjectMilestone"
}
  , gte = {
    ...Gt.completedMilestones,
    id: ht(),
    name: "Completed milestones",
    image: c.jsx(oV, {}),
    label(t) {
        return t.length === 1 ? t[0] : "Invalid value"
    },
    options: ()=>[{
        name: "Completed milestone contains…",
        inputType: na.Text
    }],
    key: "completedProjectMilestones"
}
  , yte = {
    ...Gt.searchableContent,
    id: ht(),
    name: "Title & description",
    image: c.jsx(a_, {}),
    label(t) {
        return t.length === 1 ? t[0] : "Invalid content"
    },
    options: ()=>[{
        name: "Filter by title & description…",
        inputType: na.Text
    }],
    key: "searchableContent"
}
  , Cte = {
    ...Gt.lastAppliedTemplate,
    id: ht(),
    name: "Template",
    image: c.jsx(LD, {}),
    label(t, e) {
        var r;
        const n = av(e.unfilteredItems, e.currentUser.organization);
        return t.length === 1 ? t[0] === Ve ? "No template" : `${((r = n.find(s=>s.id === t[0])) == null ? void 0 : r.name) ?? "Template"}` : `${t.length} templates`
    },
    options(t) {
        const e = av(t.unfilteredItems, t.currentUser.organization);
        return [{
            name: "No template",
            value: Ve
        }].concat(e.map(n=>{
            var r;
            return {
                value: n.id,
                name: n.name,
                label: c.jsxs(c.Fragment, {
                    children: [c.jsx(Xe, {
                        type: "small",
                        style: {
                            color: "inherit"
                        },
                        children: n.name
                    }), " ", (r = n.team) != null && r.name ? c.jsxs(c.Fragment, {
                        children: [" ", c.jsx(Xe, {
                            type: "small",
                            color: "labelMuted",
                            children: n.team.name
                        })]
                    }) : null]
                })
            }
        }
        ))
    },
    key: "lastAppliedTemplate"
};
function av(t, e) {
    const n = t.map(r=>r.accessibleTeams.elements).flat().distinct().map(r=>r.projectTemplates.elements).flat();
    return e.projectTemplates.elements.concat(n)
}
const N2e = [ete, tte, nte, rte, ste, ite, ate, A2, j2, Hc, ote, cte, lte, dte, hte, ute, fte, cI, lI, M2, dI, pte, mte, gte, yte, Cte];
var di;
(function(t) {
    t.team = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        create: e=>{
            const {values: n, compareOption: r} = e;
            return r === "is" ? {
                team: {
                    id: {
                        in: n
                    }
                }
            } : {
                team: {
                    id: {
                        nin: n
                    }
                }
            }
        }
        ,
        match: e=>"team"in e,
        selectedValues(e) {
            return "in"in e.team.id ? e.team.id.in : e.team.id.nin
        },
        getCompareOption: e=>"in"in e.team.id ? "is" : "not"
    },
    t.createdAt = zs({
        defaultCompareOptionForDates: "after",
        property: "createdAt",
        nullable: !1
    }),
    t.updatedAt = zs({
        defaultCompareOptionForDates: "after",
        property: "updatedAt",
        nullable: !1
    }),
    t.creator = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        selectedValues(e) {
            if ("or"in e.creator) {
                const n = [];
                for (const r of e.creator.or)
                    "id"in r ? n.push(...r.id.in) : "isMe"in r && n.push(it);
                return n
            } else if ("and"in e.creator) {
                const n = [];
                for (const r of e.creator.and)
                    "id"in r ? n.push(...r.id.nin) : "isMe"in r && n.push(it);
                return n
            }
            return []
        },
        getCompareOption: e=>"or"in e.creator ? "is" : "not",
        create: e=>{
            const {values: n, compareOption: r} = e
              , s = [];
            let i = !1;
            for (const a of n)
                a === it ? i = !0 : s.push(a);
            if (r === "is") {
                const a = {
                    or: [{
                        id: {
                            in: s
                        }
                    }]
                };
                return i && a.or.push({
                    isMe: {
                        eq: !0
                    }
                }),
                {
                    creator: a
                }
            } else {
                const a = {
                    and: s.length ? [{
                        id: {
                            nin: s
                        }
                    }] : []
                };
                return i && a.and.push({
                    isMe: {
                        eq: !1
                    }
                }),
                {
                    creator: a
                }
            }
        }
        ,
        match: e=>"creator"in e
    },
    t.assignee = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        selectedValues(e) {
            if ("or"in e.assignee) {
                const n = [];
                for (const r of e.assignee.or)
                    "id"in r ? n.push(...r.id.in) : "null"in r ? n.push(Ve) : "isMe"in r && n.push(it);
                return n
            } else if ("and"in e.assignee) {
                const n = [];
                for (const r of e.assignee.and)
                    "id"in r ? n.push(...r.id.nin) : "null"in r ? n.push(Ve) : "isMe"in r && n.push(it);
                return n
            }
            return []
        },
        getCompareOption: e=>"or"in e.assignee ? "is" : "not",
        create: e=>{
            const {values: n, compareOption: r} = e
              , s = [];
            let i = !1
              , a = !1;
            for (const o of n)
                o === Ve ? i = !0 : o === it ? a = !0 : s.push(o);
            if (r === "is") {
                const o = {
                    or: []
                };
                return i && o.or.push({
                    null: !0
                }),
                a && o.or.push({
                    isMe: {
                        eq: !0
                    }
                }),
                s.length && o.or.push({
                    id: {
                        in: s
                    }
                }),
                {
                    assignee: o
                }
            } else {
                const o = {
                    and: s.length ? [{
                        id: {
                            nin: s
                        }
                    }] : []
                };
                return i && o.and.push({
                    null: !1
                }),
                a && o.and.push({
                    isMe: {
                        eq: !1
                    }
                }),
                {
                    assignee: o
                }
            }
        }
        ,
        match: e=>"assignee"in e
    },
    t.statusType = {
        compareOptions: "equalValue",
        defaultCompareOption: "is",
        allowMultiSelect: !0,
        selectedValues(e) {
            return "in"in e.statusType ? e.statusType.in : e.statusType.nin
        },
        getCompareOption: e=>"in"in e.statusType ? "is" : "not",
        create: e=>{
            const {values: n, compareOption: r} = e;
            return r === "is" ? {
                statusType: {
                    in: n
                }
            } : {
                statusType: {
                    nin: n
                }
            }
        }
        ,
        match: e=>"statusType"in e
    }
}
)(di || (di = {}));
class bte {
    static addBlock(e, n, r) {
        r ?? (r = this.getActiveKey(e));
        const s = e[r];
        return {
            ...e,
            [r]: s ? [...s, n] : [n]
        }
    }
    static removeMatchingBlock(e, n) {
        const r = this.getActiveKey(n)
          , s = n[r] ?? [];
        return {
            ...n,
            [r]: s.filter(a=>!e(a))
        }
    }
    static replaceBlockAtIndex(e, n, r) {
        const s = this.getActiveKey(e)
          , i = e[s];
        let a = e;
        return i ? (i[n] = r,
        a = {
            ...e,
            [s]: i
        }) : n === 0 && (a = {
            ...e,
            [s]: [r]
        }),
        a
    }
    static removeAtIndex(e, n) {
        var i;
        if (this.isEmpty(n))
            return n;
        const r = this.getActiveKey(n);
        return {
            ...n,
            [r]: (i = n[r]) == null ? void 0 : i.filter((a,o)=>o !== e)
        }
    }
    static getActiveKey(e) {
        return e.or ? "or" : "and"
    }
    static setActiveKey(e, n) {
        const r = this.getActiveKey(e);
        return {
            [n]: e[r]
        }
    }
    static findBlocks(e, n) {
        return (e[this.getActiveKey(e)] ?? []).map(i=>[n.find(a=>a.match(i)), i]).filter(([i])=>i)
    }
    static findBlock(e, n) {
        var r;
        return (r = this.findBlocks(e, [n])[0]) == null ? void 0 : r[1]
    }
    static hasBlock(e, n) {
        return !!this.findBlock(e, n)
    }
    static hasExtraFilters(e, n) {
        var i;
        const r = n[this.getActiveKey(n)] ?? [];
        return Object.keys(n).length > 1 || r.length > 0 && (((i = this.findBlocks(n, e)) == null ? void 0 : i.length) ?? 0) < r.length
    }
    static isEmpty(e) {
        var r, s;
        const n = Object.keys(e).length;
        return n === 0 || n === 1 && (((r = e.and) == null ? void 0 : r.length) === 0 || ((s = e.or) == null ? void 0 : s.length) === 0)
    }
    static isValid(e, n) {
        return e.isValid ? e.isValid(n) : e.allowMultiSelect && e.selectedValues ? e.selectedValues(n).length > 0 : !0
    }
    static getBlockDefByName(e, n) {
        if (typeof e == "object" && e && n in e)
            return e[n]
    }
    static convertFilterToModel(e, n, r) {
        if (n.toString() === r.toString() || this.isEmpty(e))
            return [e, {}];
        const s = [{
            Issue: St.team,
            Project: Gt.teams,
            SearchResult: di.team,
            Document: di.team
        }, {
            Issue: St.stateType,
            Project: Gt.statusType,
            SearchResult: di.statusType
        }, {
            Issue: St.assignee,
            Project: Gt.lead,
            SearchResult: di.assignee
        }, {
            Issue: St.creator,
            SearchResult: di.creator,
            Document: di.creator
        }, {
            Issue: St.updatedAt,
            Project: Gt.updatedAt,
            SearchResult: di.updatedAt,
            Document: di.updatedAt
        }, {
            Issue: St.createdAt,
            Project: Gt.createdAt,
            SearchResult: di.createdAt,
            Document: di.createdAt
        }]
          , i = a=>{
            for (const o of s) {
                const l = o[n]
                  , d = o[r];
                if (!l || !d || !l.match(a))
                    continue;
                const u = l.selectedValues(a);
                let h = l.getCompareOption(a);
                const f = typeof d.compareOptions == "string" ? d.compareOptions : d.compareOptions(u);
                if ((typeof l.compareOptions == "string" ? l.compareOptions : l.compareOptions(u)) !== f) {
                    const m = [[["all", "any"], "is"], [["neither", "notAll"], "not"], [["is"], "any"], [["not"], "neither"]];
                    for (const [g,C] of m)
                        if (g.includes(h)) {
                            h = C;
                            break
                        }
                }
                if (u.length)
                    return d.create({
                        values: u,
                        compareOption: h
                    })
            }
        }
        ;
        try {
            const a = this.getActiveKey(e)
              , o = e[a] ?? [];
            let l = {}
              , d = {};
            l[a] = [],
            d[a] = [];
            for (const u of o) {
                const h = i(u);
                h ? l = this.addBlock(l, h) : d = this.addBlock(d, u)
            }
            return [l, d]
        } catch {
            return [{}, e]
        }
    }
}
const r2 = Symbol("FILTER_METADATA")
  , _3 = class _3 extends bte {
    static setMetadata(e, n, r) {
        return lt(()=>(e[r2] || (e[r2] = {}),
        Object.assign(e[r2], {
            [n]: r
        }),
        e))
    }
    static getMetadata(e, n) {
        var r;
        return (r = e[r2]) == null ? void 0 : r[n]
    }
    static filtersCanBeCombined(e, n) {
        var i;
        const r = !!(e != null && e.filter.and) || ((i = e == null ? void 0 : e.filter.or) == null ? void 0 : i.length) === 1 || M4(n)
          , s = !!(n != null && n.and) || ((n == null ? void 0 : n.or) ?? []).length <= 1;
        return r && s
    }
}
;
_3.combineFilters = (e,n)=>{
    if (!_3.filtersCanBeCombined(e, n))
        return n ?? {};
    if (n === void 0 || M4(n))
        return (e == null ? void 0 : e.filter) ?? {};
    const r = (n == null ? void 0 : n.and) ?? (n != null && n.or ? [n == null ? void 0 : n.or[0]] : [n])
      , s = (e == null ? void 0 : e.filter.and) ?? [((e == null ? void 0 : e.filter.or) ?? [])[0]];
    return {
        and: [...r, ...s]
    }
}
;
let F9 = _3;
function Nl(t, e) {
    return F9.findBlocks(e, t).reduce((r,[s,i])=>{
        var a;
        try {
            const o = s.getCompareOption(i)
              , l = ["all", "any", "is", "contains"].indexOf(o) > -1
              , d = (a = s.selectedValues) == null ? void 0 : a.call(s, i);
            return !l || !d ? r : mA(r[s.key]) ? {
                ...r,
                [s.key]: [...r[s.key], ...d]
            } : {
                ...r,
                [s.key]: d
            }
        } catch {
            return r
        }
    }
    , {})
}
function vte(t, e) {
    return t.filter(n=>uI(n, e))
}
function uI(t, e) {
    return e == null ? void 0 : e.some(n=>n === O4 ? t.isNext : n === T4 ? t.isActive : n === R4 ? t.isPrevious : n === L4 ? t.isInCooldown : n === $4 ? t.isFuture : n === P4 ? t.isPast : t.id === n)
}
const wte = {
    getCyclesMatchingFilters: vte,
    isCycleMatchingFilters: uI
};
function wt(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const kte = 5e3
  , xte = 1e4;
class Ke extends It {
    static create(e) {
        const n = Ke.createEmpty();
        return n.creator = e.creator,
        n.team = e.team,
        n.shared = e.shared,
        n.owner = e.creator,
        n.name = e.name ?? "",
        e.issueFilterData ? n.filterData = e.issueFilterData : e.projectFilterData && (n.projectFilterData = e.projectFilterData),
        n.organization = e.creator.organization,
        n
    }
    get shareType() {
        return this.shared ? this.team ? "team" : "workspace" : "personal"
    }
    get modelType() {
        return this.projectFilterData !== void 0 ? "project" : "issue"
    }
    get viewPreferences() {
        let e = this._viewPreferences.find(r=>r.type === Ks.organization)
          , n = this._viewPreferences.find(r=>r.type === Ks.user);
        if (!e) {
            const r = new Ot;
            r.customView = this,
            r.organization = this.organization,
            r.viewType = Ae.customView,
            r.type = Ks.organization,
            e = r
        }
        if (!n) {
            const r = new Ot;
            r.customView = this,
            r.organization = this.organization,
            r.viewType = Ae.customView,
            r.type = Ks.user,
            n = r
        }
        return n.organizationViewPreferences = e,
        n
    }
    get targetedUnfilteredProjects() {
        var e;
        return (e = this.facet) != null && e.projects ? this.facet.projects : this.team ? this.team.projects : this.organization.projects
    }
    get targetedUnfilteredIssues() {
        var e;
        if ((e = this.facet) != null && e.issues)
            return this.facet.issues;
        if (this.team)
            return this.team.issues;
        {
            const n = this.teams.map(r=>r.issues);
            return new te(void 0,n.flatMap(r=>r.elements))
        }
    }
    matchInlineFind(e) {
        return ml(this.name + " " + this.description).toLowerCase().indexOf(e) !== -1
    }
    get projects() {
        return this.targetedUnfilteredProjects.filter(this.projectFilter)
    }
    get issues() {
        const e = this.checkIsServerBacked();
        return e && !this.serverHydrationStatus ? new te : e && this.serverHydrationStatus ? this.targetedUnfilteredIssues.filter(n=>{
            var r;
            return ((r = this.serverHydrationIds) == null ? void 0 : r.has(n.id)) || !1
        }
        ) : this.targetedUnfilteredIssues.filter(this.filter)
    }
    get filter() {
        return this.issueUniversalCollectionFilter === void 0 && (this.issueUniversalCollectionFilter = new T1({
            filter: this.filterData
        })),
        this.issueUniversalCollectionFilter.filter = this.filterData,
        this.issueUniversalCollectionFilter
    }
    get projectFilter() {
        return this.projectUniversalCollectionFilter === void 0 && (this.projectUniversalCollectionFilter = new T1({
            filter: this.projectFilterData
        })),
        this.projectFilterData && (this.projectUniversalCollectionFilter.filter = this.projectFilterData),
        this.projectUniversalCollectionFilter
    }
    get stateFilter() {
        const e = "and"in this.filterData && this.filter.matchingFilterForKey("state");
        return e ? n=>T1.filterElement(e, n) : void 0
    }
    get teams() {
        if (this.team)
            return [this.team];
        if (this.project)
            return this.project.accessibleTeams.elements;
        {
            const e = this.modelType === "issue" ? this.issueFilterValueForKey("team") : this.projectFilterValueForKey("accessibleTeams")
              , n = e && e.length > 0 ? this.organization.accessibleTeams.filter(s=>e.indexOf(s.id) > -1) : this.organization.accessibleTeams
              , r = this.store.user;
            return n.orderBy(new de(s=>r.memberOf(s) ? 0 : -1,"desc").and("name", "asc")).elements
        }
    }
    get cycles() {
        const e = this.issueFilterValueForKey("cycle") || [];
        return e.length > 0 ? this.teams.reduce((n,r)=>[...n, ...wte.getCyclesMatchingFilters(r.cycles.elements, e)], []) : void 0
    }
    get assignees() {
        const e = this.modelType === "issue" ? this.issueFilterValueForKey("assignee") : void 0;
        return e && e.length > 0 ? e.map(n=>n === it ? this.store.user : this.organization.allUsers.findById(n)).concrete() : void 0
    }
    constructor(e=!0) {
        super(e),
        this.name = "",
        this.filterData = {},
        this.shared = !1,
        this._viewPreferences = new te,
        this.lastServerIssueCount = -1,
        e && this.makeObservable()
    }
    toggleFavorite() {
        if (this.favorite)
            return this.favorite.delete(),
            !1;
        {
            const e = Rt.create({
                reference: this
            });
            return e.save(!0),
            e
        }
    }
    issueFilterValueForKey(e) {
        var n;
        if (!("or"in this.filter.filter && (((n = this.filter.filter.or) == null ? void 0 : n.length) ?? 0) > 1))
            switch (e) {
            case "assignee":
                return Nl([oI], this.filter.filter).assignee;
            case "cycle":
                return Nl([d1], this.filter.filter).cycle;
            case "team":
                return Nl([aI], this.filter.filter).team;
            default:
                return
            }
    }
    projectFilterValueForKey(e) {
        var n;
        if (!("or"in this.filter.filter && (((n = this.filter.filter.or) == null ? void 0 : n.length) ?? 0) > 1))
            switch (e) {
            case "accessibleTeams":
                return Nl([dI], this.projectFilter.filter).accessibleTeams;
            case "roadmaps":
                return Nl([cI], this.projectFilter.filter).roadmaps;
            case "initiatives":
                return Nl([lI], this.projectFilter.filter).initiatives;
            default:
                return
            }
    }
    hydrateIssues(e) {
        var a, o, l, d;
        const n = this.checkIsServerBacked()
          , r = Wr().user.subscriptions.find(u=>{
            var h;
            return ((h = u.customView) == null ? void 0 : h.id) === this.id
        }
        )
          , s = (((a = r == null ? void 0 : r.notifications) == null ? void 0 : a.length) ?? 0) > 0 ? r == null ? void 0 : r.notifications.elements.at(-1) : void 0;
        let i = [];
        if (n) {
            const u = this.project ? {
                project: {
                    id: {
                        eq: this.project.id
                    }
                }
            } : void 0
              , h = !u && this.teams.length > 0 ? {
                team: {
                    id: {
                        in: this.teams.map(p=>p.id)
                    }
                }
            } : void 0;
            i = [this.filter.filter, e == null ? void 0 : e.filter, h, u].concrete();
            const f = JSON.stringify(i);
            (!this.serverHydrationStatus || ((o = this.previousServerHydrationState) == null ? void 0 : o.filters) !== f || (((l = this.previousServerHydrationState) == null ? void 0 : l.when) ?? 0) < Date.now() - 15 * be.MINUTE || s && (((d = this.previousServerHydrationState) == null ? void 0 : d.when) ?? 0) < ((s == null ? void 0 : s.updatedAt.getTime()) ?? 0)) && (this.latestHydrationPromise = void 0),
            this.previousServerHydrationState = {
                filters: f,
                when: Date.now()
            }
        } else
            this.serverHydrationStatus && (this.latestHydrationPromise = void 0),
            this.serverHydrationStatus = void 0,
            this.serverHydrationIds = void 0,
            this.previousServerHydrationState = void 0;
        return this.latestHydrationPromise || (this.latestHydrationPromise = n ? this.hydrateFromServer(i) : this.hydrateFromClient()),
        [this.latestHydrationPromise]
    }
    get hasTooManyIssues() {
        return this.maxIssueCount === 0 || this.modelType !== "issue" ? !1 : (this.isServerBacked ? this.lastServerIssueCount : this.issues.length) > this.maxIssueCount
    }
    get hasAllIssues() {
        return !(this.isServerBacked && this.lastServerIssueCount > this.maxIssueCount)
    }
    get issueCount() {
        return this.hasAllIssues ? this.issues.length : this.lastServerIssueCount
    }
    get isServerBackedEnabled() {
        const e = Wr();
        return e.organization.approximateIssueCount > xte || e.organization.isSuperuserWorkspace
    }
    get isServerBacked() {
        return this.checkIsServerBacked()
    }
    checkIsServerBacked() {
        if (this.isFilteringOnNonHydratedModels(this.filter))
            return !0;
        const e = this.teams.length === 1;
        return this.isServerBackedEnabled && !e && !this.teams.every(n=>n.issues.isHydrated())
    }
    get maxIssueCount() {
        return kte
    }
    hydrateFromClient() {
        return this.serverHydrationStatus = void 0,
        this.serverHydrationIds = void 0,
        new Jt(async(e,n)=>{
            if (this.team && this.team.issues.isHydrated() || this.teams.every(s=>s.issues.isHydrated()))
                return e();
            try {
                await Jt.allResolved(this.teams.map(s=>s.issues.hydrate())),
                e()
            } catch (s) {
                n(s)
            }
        }
        )
    }
    hydrateFromServer(e) {
        const n = Z4(e) ? La(e) : e
          , r = Wr();
        this.serverHydrationStatus = "hydrating",
        this.serverHydrationIds = void 0;
        const s = new Jt(async i=>{
            let a;
            try {
                const o = "/models/issues"
                  , l = {
                    filter: {
                        and: n
                    },
                    limit: this.maxIssueCount > 0 ? this.maxIssueCount : void 0,
                    lastSyncId: r.getLastSyncId()
                };
                a = await r.graphQLClient.restModelsJsonStream(o, {
                    method: "POST",
                    body: JSON.stringify(l)
                })
            } catch (o) {
                F.error("Error hydrating custom view from server", o, {
                    filters: JSON.stringify(n),
                    customViewId: this.id
                })
            }
            this.latestHydrationPromise === s && lt(()=>{
                var o;
                if (!a) {
                    this.serverHydrationStatus = "error";
                    return
                }
                if (a.metadata.error === "Too many results")
                    this.lastServerIssueCount = ((o = a.metadata.returnedModelsCount) == null ? void 0 : o.Issue) ?? 0;
                else {
                    const l = a.models ?? [];
                    this.serverHydrationIds = new Set(l.map(d=>d.id)),
                    l && r.applyModelData(l),
                    this.lastServerIssueCount = -1
                }
                this.serverHydrationStatus = "success"
            }
            ),
            i()
        }
        );
        return s
    }
    static isProjectView(e) {
        return e.modelType === "project"
    }
    static isIssueView(e) {
        return e.modelType === "issue"
    }
    isFilteringOnNonHydratedModels(e) {
        return Ste(e) ? !this.teams.every(s=>s.issues.isHydrated() && s.issues.every(i=>i.isHydrated())) : !1
    }
}
wt([w()], Ke.prototype, "name", void 0);
wt([w()], Ke.prototype, "description", void 0);
wt([w()], Ke.prototype, "icon", void 0);
wt([w()], Ke.prototype, "color", void 0);
wt([pe(()=>he, "allCustomViews", {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], Ke.prototype, "organization", void 0);
wt([pe(()=>ne, "customViews", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ke.prototype, "team", void 0);
wt([Ue(()=>K, {
    optional: !1,
    nullable: !1,
    persistance: ee.none
})], Ke.prototype, "creator", void 0);
wt([Ue(()=>K, {
    nullable: !0
})], Ke.prototype, "updatedBy", void 0);
wt([pe(()=>K, "customViews", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Ke.prototype, "owner", void 0);
wt([w({
    serializer: Yi
})], Ke.prototype, "filterData", void 0);
wt([w({
    serializer: Yi
})], Ke.prototype, "projectFilterData", void 0);
wt([w()], Ke.prototype, "shared", void 0);
wt([Dt({
    nullable: !0
})], Ke.prototype, "favorite", void 0);
wt([Dt({
    nullable: !0
})], Ke.prototype, "subscription", void 0);
wt([Dt({
    nullable: !0
})], Ke.prototype, "integrationsSettings", void 0);
wt([xe()], Ke.prototype, "_viewPreferences", void 0);
wt([pe(()=>ie, "customViews", {
    optional: !0,
    nullable: !1,
    indexed: !0,
    persistance: ee.createAndUpdate
})], Ke.prototype, "project", void 0);
wt([pe(()=>ot, "customViews", {
    optional: !0,
    nullable: !1,
    indexed: !0,
    persistance: ee.createAndUpdate
})], Ke.prototype, "initiative", void 0);
wt([Dt({
    nullable: !0
})], Ke.prototype, "facet", void 0);
wt([w({
    persistance: ee.none
})], Ke.prototype, "traits", void 0);
wt([O], Ke.prototype, "shareType", null);
wt([O], Ke.prototype, "modelType", null);
wt([O], Ke.prototype, "viewPreferences", null);
wt([O], Ke.prototype, "targetedUnfilteredProjects", null);
wt([O], Ke.prototype, "targetedUnfilteredIssues", null);
wt([O], Ke.prototype, "projects", null);
wt([O], Ke.prototype, "issues", null);
wt([O], Ke.prototype, "filter", null);
wt([O], Ke.prototype, "projectFilter", null);
wt([O], Ke.prototype, "stateFilter", null);
wt([O], Ke.prototype, "teams", null);
wt([O], Ke.prototype, "cycles", null);
wt([O], Ke.prototype, "assignees", null);
wt([rt], Ke.prototype, "toggleFavorite", null);
wt([rt], Ke.prototype, "hydrateIssues", null);
wt([O], Ke.prototype, "hasTooManyIssues", null);
wt([O], Ke.prototype, "hasAllIssues", null);
wt([O], Ke.prototype, "issueCount", null);
wt([m_()], Ke.prototype, "serverHydrationStatus", void 0);
wt([O], Ke.prototype, "isServerBacked", null);
wt([O], Ke.prototype, "maxIssueCount", null);
wt([m_()], Ke.prototype, "lastServerIssueCount", void 0);
wt([rt], Ke.prototype, "hydrateFromServer", null);
Ke = wt([We("CustomView")], Ke);
const Dte = ["searchableContent", "attachments"];
function Ste(t) {
    const e = t instanceof T1 ? t.filter : t.universal.filter;
    return Dte.some(n=>N9(e, n))
}
function N9(t, e) {
    var n, r;
    return t[e] ? !0 : ((n = t.and) == null ? void 0 : n.some(s=>N9(s, e))) || ((r = t.or) == null ? void 0 : r.some(s=>N9(s, e))) || !1
}
const ov = t=>t.priority.priority
  , cv = t=>t.priority.isNoPriority ? Nr.allPriorities.length : t.priority.priority
  , ks = {
    manualSortOrder: new de("sortOrder","asc").and("createdAt", "desc"),
    manualSubIssueOrder: new de("subIssueSortOrder","asc").and("createdAt", "desc"),
    priorityDefaultOrder: new de(ov,"asc").and("sortOrder", "asc"),
    priorityAlternativeOrder: new de(cv,"asc").and("sortOrder", "asc"),
    titleOrder: new de("title"),
    assigneeOrder: new de(t=>{
        var e;
        return ((e = t.assignee) == null ? void 0 : e.name) ?? ""
    }
    ),
    dateCreatedOrder: new de("createdAt","desc"),
    reverseDateCreatedOrder: new de("createdAt","asc"),
    completionOrder: new de("completedAt","desc"),
    cancellationOrder: new de("canceledAt","desc"),
    dateUpdatedOrder: new de("updatedAt","desc"),
    dateMyActivityOrder: new de("lastActivityAt","desc"),
    dueDateOrder: new de(t=>{
        var e;
        return t.slaBreachesAt ?? ((e = t.dueDate) == null ? void 0 : e.toLocalDate())
    }
    ,"asc").and(t=>t.priority.priority, "asc").and("sortOrder", "asc"),
    workflowStateOrder: new de(t=>ko.customStatusOrdering[t.state.type]).and(t=>t.state.isClosed ? -t.state.position : t.state.position, "desc").and(t=>t.team.issueOrderingNoPriorityFirst ? ov(t) : cv(t), "asc").and("sortOrder", "asc"),
    linkCountOrder: new de(t=>t.attachments.filter(e=>{
        var n;
        return ((n = e.source) == null ? void 0 : n.type) !== "sentry"
    }
    ).length,"desc").and("sortOrder", "asc"),
    estimateOrder: new de(t=>t.estimate ?? -1,"desc").and("sortOrder", "asc")
};
function nn(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const t7 = {
    measure: gY.id,
    dimension: b9.stateName,
    subDimension: void 0,
    dimensionDateAggregation: C9.month,
    segment: void 0,
    subSegment: void 0,
    includeArchived: !1,
    hideEmptyDimension: !1,
    hideEmptySegment: !1,
    colorScale: k9.default
};
class Ot extends It {
    setPreference(e, n) {
        const r = {
            ...this.preferences
        };
        this.preferences[e] = n,
        this.markPropertyChanged("preferences", r)
    }
    setPreferencesInBulk(e) {
        const n = {
            ...this.preferences
        };
        Object.keys(e).forEach(r=>{
            this.preferences[r] = e[r]
        }
        ),
        this.markPropertyChanged("preferences", n)
    }
    setAndSavePreference(e, n) {
        this.setPreference(e, n),
        this.viewType !== Ae.quickView && (this.parentModel && this.parentModel.persisted === !1 || M4(this.preferences) && !this.persisted || this.save(!0))
    }
    get currentInsight() {
        return {
            measure: this.getInsightPreference("measure"),
            dimension: this.getInsightPreference("dimension"),
            subDimension: this.getInsightPreference("subDimension"),
            dimensionDateAggregation: this.getInsightPreference("dimensionDateAggregation"),
            segment: this.getInsightPreference("segment"),
            subSegment: this.getInsightPreference("subSegment"),
            includeArchived: this.getInsightPreference("includeArchived"),
            hideEmptyDimension: this.getInsightPreference("hideEmptyDimension"),
            hideEmptySegment: this.getInsightPreference("hideEmptySegment"),
            colorScale: this.getInsightPreference("colorScale")
        }
    }
    setInsights(e) {
        (this.isUserType || this.viewType === Ae.quickView) && (this.insights = e)
    }
    updateInsights(e) {
        (this.isUserType || this.viewType === Ae.quickView) && this.setInsights({
            ...this.currentInsight,
            ...e
        })
    }
    setAndSaveInsightPreference(e, n) {
        if ((this.isUserType || this.viewType === Ae.quickView) && (this.insights == null || this.insights[e] !== n)) {
            if (this.updateInsights({
                [e]: n
            }),
            this.viewType === Ae.quickView)
                return;
            this.save(!0)
        }
    }
    get issuePreFilter() {
        var d;
        const e = this.getPreference("showSubIssues")
          , n = this.getPreference("showCompletedIssues")
          , r = this.getPreference("showSnoozedItems")
          , i = ((d = this.customView) == null ? void 0 : d.stateFilter) !== void 0 || this.viewType === Ae.triage || this.viewType === Ae.search || this.viewType === Ae.splitSearch || (this.getPreference("showTriageIssues") ?? !1)
          , a = new bo(u=>!u.state.isTriage)
          , o = new bo(u=>!u.isClone && u.persisted)
          , l = new bo(u=>u.activities.length > 0);
        return [o, this.viewType === Ae.triage && !r ? bY : void 0, e ? void 0 : vY, i ? void 0 : a, n ? xY(n) : void 0, this.viewType === Ae.myIssuesActivity ? l : void 0].concrete()
    }
    get issueOrder() {
        var i, a;
        const e = this.viewType === Ae.triage ? this.getPreference("triageViewOrdering") : this.getPreference("viewOrdering")
          , s = (this.team ? [this.team] : ((i = this.customView) == null ? void 0 : i.teams) ?? ((a = this.project) == null ? void 0 : a.accessibleTeams) ?? this.store.user.teams).reduce((o,l)=>l.issueOrderingNoPriorityFirst ? o - 1 : o + 1, 0) > 0 ? ks.priorityAlternativeOrder : ks.priorityDefaultOrder;
        switch (e) {
        case void 0:
            return ks.dateCreatedOrder;
        case "priority":
            return s;
        case "estimate":
            return ks.estimateOrder;
        case "manual":
            return ks.manualSortOrder;
        case "dateCreated":
            return ks.dateCreatedOrder;
        case "dateUpdated":
            return ks.dateUpdatedOrder;
        case "dateMyActivity":
            return ks.dateMyActivityOrder;
        case "dueDate":
            return ks.dueDateOrder;
        case "linkCount":
            return ks.linkCountOrder;
        case "workflowState":
            return ks.workflowStateOrder;
        case "reverseDateCreated":
            return ks.reverseDateCreatedOrder;
        case "title":
            return ks.titleOrder;
        case "assignee":
            return ks.assigneeOrder;
        default:
            return s
        }
    }
    projectsViewFilter(e) {
        return [n=>{
            switch (e) {
            case Ui.active:
                return n.isPlanned || n.isActive;
            case Ui.closed:
                return n.isDone;
            case Ui.backlog:
                return n.isBacklog;
            case Ui.all:
                return !0;
            default:
                return !0
            }
        }
        ]
    }
    get projectPreFilter() {
        const e = this.getPreference("showCompletedProjects");
        return [new bo(r=>!r.isClone && r.persisted), e ? wY(e) : void 0].concrete()
    }
    projectOrder(e) {
        switch (this.getPreference("projectViewOrdering")) {
        case void 0:
        case "sortOrder":
            return e instanceof cn ? new de(r=>{
                var s;
                return ((s = r.roadmapToProjects.find(i=>i.roadmap === e)) == null ? void 0 : s.sortOrder) ?? r.sortOrder
            }
            ,"asc") : e instanceof ot ? new de(r=>{
                var s;
                return ((s = r.initiativeToProjects.find(i=>i.initiative === e)) == null ? void 0 : s.sortOrder) ?? r.sortOrder
            }
            ,"asc") : new de("sortOrder","asc");
        case "name":
            return new de("name");
        case "createdAt":
            return new de("createdAt","desc");
        case "startDate":
            return new de("startDate","asc").and("targetDate", "asc").and("updatedAt", "asc");
        case "status":
            return new de(r=>_te[r.status.type]).and(r=>r.status.type === At.canceled || r.status.type === At.completed ? r.status.position : -r.status.position);
        case "targetDate":
            return new de("targetDate","asc").and("startDate", "asc").and("updatedAt", "asc");
        case "updatedAt":
            return new de("lastIssueUpdate","desc").and("updatedAt", "desc");
        default:
            return new de("sortOrder","asc")
        }
    }
    get teamOrder() {
        const e = this.getPreference("teamViewOrdering")
          , n = new de("name");
        switch (e) {
        case void 0:
        case "name":
            return n;
        case "createdAt":
            return new de("createdAt","desc");
        case "updatedAt":
            return new de("updatedAt","desc");
        default:
            return n
        }
    }
    get customViewsOrder() {
        const e = this.getPreference("customViewsOrdering")
          , n = new de("name");
        switch (e) {
        case void 0:
        case "name":
            return n;
        case "createdAt":
            return new de("createdAt","desc");
        case "updatedAt":
            return new de("updatedAt","desc");
        case "owner":
            return new de(r=>r.owner.name ?? "");
        default:
            return n
        }
    }
    get isUserType() {
        return this.type === Ks.user
    }
    get hasUserChanges() {
        return this.viewType === Ae.quickView ? !1 : this.isUserType && this.organizationViewPreferences !== void 0 && Object.keys(this.preferences).find(e=>{
            var s;
            const n = this.preferences[e]
              , r = (s = this.organizationViewPreferences) == null ? void 0 : s.getPreference(e);
            return Array.isArray(n) || Array.isArray(r) ? !Yo(new Set(Array.isArray(n) ? n : []), new Set(Array.isArray(r) ? r : [])) : n !== r
        }
        ) !== void 0
    }
    get combinedUserAndOrgPreferences() {
        var e;
        return Object.keys({
            ...(e = this.organizationViewPreferences) == null ? void 0 : e.preferences,
            ...this.preferences
        }).reduce((n,r)=>({
            ...n,
            [r]: this.getPreference(r)
        }), {})
    }
    get serializedSettings() {
        return JSON.stringify(this.combinedUserAndOrgPreferences)
    }
    constructor(e=!0) {
        super(e),
        this.getInsightPreference = n=>{
            var r, s;
            return this.insights != null ? this.insights[n] ?? t7[n] : this.isUserType && ((r = this.organizationViewPreferences) == null ? void 0 : r.insights) != null ? ((s = this.organizationViewPreferences) == null ? void 0 : s.insights[n]) ?? t7[n] : t7[n]
        }
        ,
        this.getPreference = n=>this.commonViewPreferences[n],
        this.setPreferencesAsDefaultForOrganization = ()=>{
            this.isUserType && this.organizationViewPreferences && (this.organizationViewPreferences.setPreferencesInBulk(this.preferences),
            this.organizationViewPreferences.save(!0),
            this.clearPreferencesOrDelete())
        }
        ,
        this.updateInsightOrganizationSettings = ()=>{
            this.isUserType && this.insights && this.organizationViewPreferences && (this.organizationViewPreferences.insights = this.insights,
            this.organizationViewPreferences.save(!0),
            this.clearInsightsOrDelete())
        }
        ,
        this.disregardSettings = ()=>{
            this.isUserType && this.organizationViewPreferences && this.hasUserChanges && this.clearPreferencesOrDelete()
        }
        ,
        this.disregardInsightsSettings = ()=>{
            this.isUserType && this.insights != null && this.clearInsightsOrDelete()
        }
        ,
        this.preferences = {},
        e && (this.organization = this.store.organization,
        this.makeObservable())
    }
    getLabelGroupsForTeams(e) {
        const n = []
          , r = this.organization.issueLabels.filter(s=>s.isGroup);
        r.length > 0 && n.push({
            title: "Workspace",
            labels: r.elements
        });
        for (const s of e) {
            const i = s.issueLabels.filter(a=>a.isGroup);
            i.length > 0 && n.push({
                title: s.name,
                labels: i.elements
            })
        }
        return n
    }
    getLabelGroupOrFallback(e, n="grouping") {
        const r = this.getPreference(n === "grouping" ? "issueGroupingLabelGroupId" : "issueSubGroupingLabelGroupId");
        let s = r ? this.organization.allIssueLabels.findById(r) : void 0;
        if (s || (s = this.organization.issueLabels.find(i=>i.isGroup),
        s))
            return s;
        for (const i of e)
            if (s = i.issueLabels.find(a=>a.isGroup),
            s)
                return s
    }
    get shareableProperties() {
        return CY.reduce((e,n)=>({
            ...e,
            [n]: this.getPreference(n)
        }), {})
    }
    get modelType() {
        var e;
        switch (this.viewType) {
        case Ae.customView:
        case Ae.quickView:
            return (e = this.customView) == null ? void 0 : e.modelType;
        case Ae.inbox:
        case Ae.myIssues:
        case Ae.myIssuesActivity:
        case Ae.myIssuesCreatedByMe:
        case Ae.userProfileCreatedByUser:
        case Ae.userProfile:
        case Ae.activeIssues:
        case Ae.backlog:
        case Ae.allIssues:
        case Ae.triage:
        case Ae.label:
        case Ae.project:
        case Ae.cycle:
        case Ae.completedCycle:
            return "issue";
        case Ae.projects:
        case Ae.projectsAll:
        case Ae.projectsBacklog:
        case Ae.projectsClosed:
        case Ae.roadmapAll:
        case Ae.roadmapBacklog:
        case Ae.roadmapClosed:
        case Ae.customRoadmap:
        case Ae.roadmap:
            return "project";
        case Ae.roadmaps:
        case Ae.board:
        case Ae.search:
        case Ae.customViews:
        case Ae.teams:
        case Ae.archive:
        default:
            return
        }
    }
    get saveDialogTitle() {
        let e = "Save display options for ";
        return this.customView ? e += `"${this.customView.name}"?` : this.project ? e += "this project?" : this.team ? e += "this team?" : this.initiative ? e += "this initiative?" : this.user ? e += "this profile page?" : this.label ? e += "this label page?" : e += "this view?",
        e
    }
    get saveDialogDescription() {
        let e = "Publishing the configuration will make it the default";
        if (this.customView)
            switch (this.customView.shareType) {
            case "personal":
                e += ".";
                break;
            case "team":
                e += " for everyone in the team.";
                break;
            case "workspace":
                e += " for everyone in the workspace.";
                break;
            default:
                Gc(this.customView.shareType)
            }
        else if (this.project) {
            const n = this.project.accessibleTeams.every(r=>r.private);
            e += n ? " for all team members." : " for everyone in the workspace."
        } else
            this.team ? e += this.team.private ? " for everyone in the team." : " for everyone in the workspace." : e += " for everyone in the workspace.";
        return e
    }
    get commonViewPreferences() {
        var e, n;
        return new yY(this.type,this.viewType,this.preferences,(e = this.organizationViewPreferences) == null ? void 0 : e.preferences,((n = this.project) == null ? void 0 : n.isArchived) ?? !1,this.team ? this.team.slaEnabled : this.organization.isSlaAccessible,this.organization.roadmapEnabled)
    }
    get parentModel() {
        return this.customView ?? this.project ?? this.roadmap ?? this.label ?? this.user ?? this.team
    }
    clearPreferencesOrDelete() {
        this.insights == null ? this.delete() : (this.preferences = {},
        this.save())
    }
    clearInsightsOrDelete() {
        M4(this.preferences) ? this.delete() : (this.insights = void 0,
        this.save())
    }
}
nn([w({
    enum: Ks,
    persistance: ee.createOnly
})], Ot.prototype, "type", void 0);
nn([w({
    enum: Ae
})], Ot.prototype, "viewType", void 0);
nn([Ue(()=>ne, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ot.prototype, "team", void 0);
nn([Ue(()=>ie, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ot.prototype, "project", void 0);
nn([Ue(()=>cn, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ot.prototype, "roadmap", void 0);
nn([Ue(()=>ot, {
    optional: !0,
    nullable: !1,
    onDelete: "NO ACTION"
})], Ot.prototype, "initiative", void 0);
nn([Ue(()=>Ut, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ot.prototype, "label", void 0);
nn([Ue(()=>K, {
    optional: !0,
    nullable: !1
})], Ot.prototype, "user", void 0);
nn([pe(()=>Ke, "_viewPreferences", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ot.prototype, "customView", void 0);
nn([pe(()=>he, "viewPreferences", {
    optional: !1,
    nullable: !1,
    persistance: ee.none
})], Ot.prototype, "organization", void 0);
nn([rt], Ot.prototype, "setPreference", null);
nn([rt], Ot.prototype, "setPreferencesInBulk", null);
nn([rt], Ot.prototype, "setAndSavePreference", null);
nn([O], Ot.prototype, "currentInsight", null);
nn([rt], Ot.prototype, "setInsights", null);
nn([rt], Ot.prototype, "updateInsights", null);
nn([rt], Ot.prototype, "setAndSaveInsightPreference", null);
nn([O], Ot.prototype, "issuePreFilter", null);
nn([O], Ot.prototype, "issueOrder", null);
nn([O], Ot.prototype, "projectPreFilter", null);
nn([O], Ot.prototype, "teamOrder", null);
nn([O], Ot.prototype, "customViewsOrder", null);
nn([O], Ot.prototype, "hasUserChanges", null);
nn([rt], Ot.prototype, "setPreferencesAsDefaultForOrganization", void 0);
nn([rt], Ot.prototype, "updateInsightOrganizationSettings", void 0);
nn([O], Ot.prototype, "combinedUserAndOrgPreferences", null);
nn([O], Ot.prototype, "serializedSettings", null);
nn([O], Ot.prototype, "shareableProperties", null);
nn([O], Ot.prototype, "modelType", null);
nn([O], Ot.prototype, "commonViewPreferences", null);
nn([w({
    serializer: hn
})], Ot.prototype, "preferences", void 0);
nn([w({
    serializer: hn
})], Ot.prototype, "insights", void 0);
Ot = nn([We("ViewPreferences")], Ot);
const _te = {
    started: 0,
    paused: 1,
    planned: 2,
    backlog: 3,
    completed: 4,
    canceled: 5
};
function ns(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class cn extends It {
    static create(e) {
        const n = cn.createEmpty();
        return n.temporaryViewPreferences = e.viewPreferences,
        n.creator = e.creator,
        n.organization = e.creator.organization,
        n
    }
    get slug() {
        return `${wl(this.name)}-${this.slugId}`
    }
    get viewPreferences() {
        const e = this.organization.viewPreferences.find(n=>n.roadmap === this && n.type === Ks.organization);
        return e || (this.temporaryViewPreferences ? this.temporaryViewPreferences : lt(()=>{
            const n = new Ot;
            return n.roadmap = this,
            n.organization = this.organization,
            n.viewType = Ae.roadmap,
            n.type = Ks.organization,
            this.temporaryViewPreferences = n,
            n
        }
        ))
    }
    get projects() {
        return te.of(this.roadmapToProjects.map(e=>e.project))
    }
    get teams() {
        return te.of(this.projects.flatMap(e=>e.accessibleTeams.elements).distinct().sortBy(e=>-this.projects.filter(n=>n.accessibleTeams.elements.includes(e)).length))
    }
    get searchableContent() {
        return `${this.name} ${this.description ?? ""}`
    }
    constructor(e=!0) {
        super(e),
        this.name = "",
        this.sortOrder = 0,
        this.color = "#bec2c8",
        this.roadmapToProjects = new te(new de("sortOrder")),
        e && this.makeObservable()
    }
    toggleFavorite() {
        if (this.favorite)
            return this.favorite.delete(),
            !1;
        {
            const e = Rt.create({
                reference: this
            });
            return e.save(!0),
            e
        }
    }
    relevanceForUser(e) {
        const n = this.favorite ? 2e3 : this.creator === e ? 2.5 * Math.max(6, this.projects.length) : 0;
        return this.projects.length === 0 ? n : this.favorite ? 200 * this.projects.length : this.projects.reduce((s,i)=>i.lead === e ? s + 15 : i.members.contains(e) ? s + 5 : i.accessibleTeams.some(a=>e.teams.contains(a)) ? s + 1 : s + 0, n) / this.projects.length
    }
    matchInlineFind(e) {
        var r, s;
        const n = ml([this.name].concat([(r = this.owner) == null ? void 0 : r.name, (s = this.owner) == null ? void 0 : s.displayName].concrete()).join(" ")).toLowerCase();
        return e.split(" ").reduce((i,a)=>i && n.indexOf(a) !== -1, !0)
    }
}
ns([w()], cn.prototype, "name", void 0);
ns([w()], cn.prototype, "description", void 0);
ns([w({
    persistance: ee.none
})], cn.prototype, "slugId", void 0);
ns([w()], cn.prototype, "sortOrder", void 0);
ns([w()], cn.prototype, "color", void 0);
ns([pe(()=>he, "roadmaps", {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], cn.prototype, "organization", void 0);
ns([pe(()=>K, "roadmaps", {
    optional: !1,
    nullable: !1,
    persistance: ee.updateOnly
})], cn.prototype, "creator", void 0);
ns([pe(()=>K, "roadmaps", {
    nullable: !0,
    persistance: ee.updateOnly
})], cn.prototype, "owner", void 0);
ns([Dt({
    nullable: !0
})], cn.prototype, "favorite", void 0);
ns([xe()], cn.prototype, "roadmapToProjects", void 0);
ns([O], cn.prototype, "viewPreferences", null);
ns([O], cn.prototype, "projects", null);
ns([O], cn.prototype, "teams", null);
ns([O], cn.prototype, "searchableContent", null);
ns([rt], cn.prototype, "toggleFavorite", null);
cn = ns([We("Roadmap")], cn);
function v5(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const qm = class qm extends at {
    constructor(e=!0) {
        super(e),
        this.actors = new te,
        e && this.makeObservable()
    }
}
;
qm.loadStrategy = dn.explicitlyRequested;
let Ha = qm;
v5([Ue(()=>en, {
    nullable: !1,
    optional: !1,
    indexed: !0
})], Ha.prototype, "documentContent", void 0);
v5([w({
    serializer: hn,
    shallowObservation: !0
})], Ha.prototype, "contentData", void 0);
v5([ii(()=>K)], Ha.prototype, "actors", void 0);
v5([w({
    serializer: bt
})], Ha.prototype, "contentDataSnapshotAt", void 0);
Ha = v5([We("DocumentContentHistory")], Ha);
const Ite = {
    optimizeCreate: t=>{
        const e = new b4;
        e.applyUpdate(Aa.deserialize(t));
        const n = Aa.serialize(e.getFlattenedState());
        return n.length < t.length ? n : t
    }
    ,
    optimizeUpdate: (t,e)=>{
        const n = new b4;
        n.applyUpdate(Aa.deserialize(t));
        const r = n.encodeStateVector();
        return n.applyUpdate(Aa.deserialize(e)),
        Aa.serialize(n.encodeStateAsUpdate(r))
    }
};
var lr;
(function(t) {
    t[t.noArchivedModels = 0] = "noArchivedModels",
    t[t.noTempModels = 1] = "noTempModels",
    t[t.onlyRegularModels = 2] = "onlyRegularModels",
    t[t.onlyArchivedModels = 3] = "onlyArchivedModels",
    t[t.allModels = 4] = "allModels"
}
)(lr || (lr = {}));
class Ete extends te {
    get elements() {
        return this.isHydrated() || this.hydrate(),
        super.elements
    }
    get length() {
        return this.isHydrated() || this.hydrate(),
        super.length
    }
    constructor(e, n, r, s) {
        if (super(s),
        this.modelClass = e,
        this.parent = n,
        this.index = r,
        e.loadStrategy !== dn.explicitlyRequested)
            throw new Error("RequestCollection can only be used with models that have loadStrategy explicitlyRequested")
    }
    isHydrated() {
        return !!(this.hydrationPromise && !this.hydrationPromise.isPending)
    }
    hydrate() {
        return this.hydrationPromise && this.hydrationPromiseParentUpdatedAt && this.hydrationPromiseParentUpdatedAt >= this.parent.updatedAt ? this.hydrationPromise : (this.hydrationPromise = new Jt(async(e,n)=>{
            var r;
            try {
                await at.store.batchModelLoader.addRequest({
                    modelClass: this.modelClass,
                    indexedKey: this.index,
                    keyValue: this.parent.id,
                    skipSavingModelsInDatabase: !0
                });
                const s = at.store.syncClient.allModelsOfType(this.modelClass, lr.onlyRegularModels).filter(i=>i[this.index] === this.parent.id);
                this.updateRawModels(s),
                e()
            } catch (s) {
                F.error("Hydration failed", s, {
                    modelClass: this.modelClass.modelName,
                    key: this.index,
                    keyValue: (r = this.parent) == null ? void 0 : r.id
                }),
                this.invalidateRejectedWhenRequested(),
                n(new Ed(this.modelClass,s))
            }
        }
        ),
        this.hydrationPromiseParentUpdatedAt = this.parent.updatedAt,
        this.hydrationPromise)
    }
    invalidateRejectedHydrationPromises() {
        var e;
        (e = this.hydrationPromise) != null && e.error && (this.hydrationPromise = void 0,
        this.hydrationPromiseParentUpdatedAt = void 0),
        super.invalidateRejectedHydrationPromises()
    }
    updateRawModels(e) {
        lt(()=>{
            this.setElementIds(e.map(n=>n.id)),
            this.rawElements = e,
            this.idLookup = {};
            for (const n of e)
                this.idLookup[n.id] = n,
                this.elementsObserved && n.observePropertyChanges()
        }
        )
    }
}
function kr(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
/** Model DocumentContent */
const t0 = class t0 extends at {
    get contentData() {
        return this.contentState ? this.createYjsDocument().asProsemirrorData() : void 0
    }
    get activeCommentThreadCount() {
        return this.contentData ? q7(this.activeCommentsForContent(this.contentData.content)).length : 0
    }
    get resolvedCommentThreadCount() {
        return this.contentData ? q7(this.resolvedCommentsForContent(this.contentData.content)).length : 0
    }
    get removedCommentThreadCount() {
        return this.comments.length - this.activeCommentThreadCount - this.resolvedCommentThreadCount
    }
    get markdownContent() {
        return this.contentData ? Po.serialize(this.contentData) : ""
    }
    get hasContent() {
        var n;
        const e = this.contentData;
        return !e || !((n = e.content) != null && n.length) ? !1 : !(e.content.length === 1 && e.content[0].type === "paragraph" && (!e.content[0].content || e.content[0].content.length === 0 || e.content[0].content.length === 1 && e.content[0].content[0].type === "text" && e.content[0].content[0].text === ""))
    }
    get documentVersion() {
        return this.createYjsDocument().documentVersion
    }
    get parent() {
        var e;
        return ((e = this.issue) == null ? void 0 : e.value) || this.project || this.projectMilestone || this.document || this.initiative
    }
    set parent(e) {
        e instanceof re ? this.issue = Qn.wrap(e) : e instanceof ie ? this.project = e : e instanceof qt ? this.projectMilestone = e : e instanceof Kt ? this.document = e : e instanceof ot && (this.initiative = e)
    }
    get parentType() {
        if (this.issue)
            return "issue";
        if (this.project)
            return "project";
        if (this.projectMilestone)
            return "projectMilestone";
        if (this.document)
            return "document";
        if (this.initiative)
            return "initiative"
    }
    hasContentEqualTo(e) {
        return Yo(Bd(Fa(this.contentData)), Bd(Fa(e)))
    }
    get parentPersisted() {
        var e;
        return ((e = this.parent) == null ? void 0 : e.persisted) ?? !1
    }
    createYjsDocument() {
        try {
            const e = new b4;
            if (this.contentState) {
                const n = Aa.deserialize(this.contentState);
                e.applyUpdate(n)
            } else
                e.updateToProsemirrorData(G3());
            return e
        } catch (e) {
            return F.error("Error converting contentState to Yjs doc", e),
            new b4
        }
    }
    replaceWithContent(e) {
        const n = this.createYjsDocument();
        this.persisted ? (n.updateToProsemirrorData(e),
        this.contentState = Aa.serialize(n.encodeStateAsUpdate())) : (n.updateToProsemirrorData(e),
        this.contentState = Aa.serialize(n.getFlattenedState()))
    }
    applyState(e) {
        const n = this.createYjsDocument();
        n.applyUpdate(Aa.deserialize(e)),
        this.contentState = Aa.serialize(n.encodeStateAsUpdate())
    }
    get textContent() {
        if (!this.contentData)
            return "";
        const e = j1.nodeFromJSON(this.contentData);
        return uz(e, 0, e.content.size, {})
    }
    constructor(e=!0) {
        super(e),
        this.lastUpdatedByUsers = new te,
        this.comments = new Et(nt,this,"documentContentId"),
        this.history = new Ete(Ha,this,"documentContentId",new de("createdAt","desc")),
        e && this.makeObservable()
    }
    static getOrCreateFrom(e, n="attach") {
        const r = Le(s=>{
            if (s.documentContent.value)
                return s.documentContent.value;
            const i = new t0;
            return i.parent = s,
            n === "attach" && (s.documentContent = Lu.wrap(i)),
            i
        }
        );
        if (e.isHydrated()) {
            const s = r(e);
            return e.documentContent.value,
            s
        } else
            return e.hydrate().then(s=>r(s))
    }
    activeCommentsForContent(e) {
        const n = [];
        for (const r of e)
            n.push(...this.activeCommentsForNode(r));
        return n
    }
    activeCommentsForNode(e) {
        const n = [];
        return e.content && n.push(...this.activeCommentsForContent(e.content)),
        e.marks && n.push(...e.marks.filter(r=>{
            var s, i, a, o;
            return r.type === "inlineComment" && !((s = r.attrs) != null && s.createdBy) && ((i = r.attrs) == null ? void 0 : i.resolved) !== !0 && ((a = r.attrs) == null ? void 0 : a.resolved) !== "true" && ((o = r.attrs) == null ? void 0 : o.commentId)
        }
        ).map(r=>{
            var s;
            return (s = r.attrs) == null ? void 0 : s.commentId
        }
        )),
        n
    }
    resolvedCommentsForContent(e) {
        const n = [];
        for (const r of e)
            n.push(...this.resolvedCommentsForNode(r));
        return n
    }
    resolvedCommentsForNode(e) {
        const n = [];
        return e.content && n.push(...this.resolvedCommentsForContent(e.content)),
        e.marks && n.push(...e.marks.filter(r=>{
            var s, i, a;
            return r.type === "inlineComment" && (((s = r.attrs) == null ? void 0 : s.resolved) === !0 || ((i = r.attrs) == null ? void 0 : i.resolved) === "true") && ((a = r.attrs) == null ? void 0 : a.commentId)
        }
        ).map(r=>{
            var s;
            return (s = r.attrs) == null ? void 0 : s.commentId
        }
        )),
        n
    }
}
;
t0.loadStrategy = dn.partial,
t0.partialLoadMode = ki.regular;
/** Model DocumentContent */
let en = t0;
kr([w({
    optimizer: Ite
})], en.prototype, "contentState", void 0);
kr([w()], en.prototype, "restoredAt", void 0);
kr([kl(()=>re, "documentContent", { // a back reference to Issue
    optional: !0,
    nullable: !1,
    indexed: !0,
    cascadeHydration: !0 // when the issue hydrates, the documentContent hydrates as well
})], en.prototype, "issue", void 0);
kr([Dt(()=>ie, "documentContent", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], en.prototype, "project", void 0);
kr([Dt(()=>qt, "documentContent", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], en.prototype, "projectMilestone", void 0);
kr([Dt(()=>Kt, "documentContent", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], en.prototype, "document", void 0);
kr([Dt(()=>ot, "documentContent", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], en.prototype, "initiative", void 0);
kr([ii(()=>K, void 0, {
    persistance: ee.none
})], en.prototype, "lastUpdatedByUsers", void 0);
kr([Nt()], en.prototype, "comments", void 0);
kr([O], en.prototype, "contentData", null);
kr([O], en.prototype, "activeCommentThreadCount", null);
kr([O], en.prototype, "resolvedCommentThreadCount", null);
kr([O], en.prototype, "removedCommentThreadCount", null);
kr([O], en.prototype, "markdownContent", null);
kr([O], en.prototype, "hasContent", null);
kr([O], en.prototype, "documentVersion", null);
kr([rt], en.prototype, "replaceWithContent", null);
kr([rt], en.prototype, "applyState", null);
en = kr([We("DocumentContent")], en);
function Bd(t) {
    if (!Yo(t, G3())) {
        if (Array.isArray(t))
            t.forEach(Bd);
        else if (typeof t == "object" && t !== null) {
            t.attrs && (t.attrs.language === null && delete t.attrs.language,
            Object.keys(t.attrs).length === 0 && delete t.attrs);
            for (const e in t)
                t[e] === void 0 || t[e] === null ? delete t[e] : Bd(t[e])
        }
        return t
    }
}
function Ch(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Bo extends It {
    static create(e) {
        const n = Bo.createEmpty();
        return n.project = e.project,
        n.roadmap = e.roadmap,
        n.sortOrder = ur.lastSortOrder(e.roadmap.roadmapToProjects, "sortOrder"),
        n
    }
    constructor(e=!0) {
        super(e),
        this.sortOrder = 0,
        e && this.makeObservable()
    }
}
Ch([pe(()=>cn, "roadmapToProjects", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Bo.prototype, "roadmap", void 0);
Ch([pe(()=>ie, "roadmapToProjects", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Bo.prototype, "project", void 0);
Ch([w()], Bo.prototype, "sortOrder", void 0);
Bo = Ch([We("RoadmapToProject")], Bo);
function bh(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Uo extends It {
    static create(e) {
        const n = Uo.createEmpty();
        return n.project = e.project,
        n.initiative = e.initiative,
        n.sortOrder = ur.lastSortOrder(e.initiative.initiativeToProjects, "sortOrder"),
        n
    }
    constructor(e=!0) {
        super(e),
        this.sortOrder = 0,
        e && this.makeObservable()
    }
}
bh([pe(()=>ot, "initiativeToProjects", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Uo.prototype, "initiative", void 0);
bh([pe(()=>ie, "initiativeToProjects", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Uo.prototype, "project", void 0);
bh([w()], Uo.prototype, "sortOrder", void 0);
Uo = bh([We("InitiativeToProject")], Uo);
function Re(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const I3 = class I3 extends Xc {
    get dependedOnByRelations() {
        return this.relations.hydratedElements.filter(e=>e.description === cr.blocking)
    }
    get dependsOnRelations() {
        return this.inverseRelations.hydratedElements.filter(e=>e.inverseDescription === cr.blockedBy)
    }
    get blockingRelations() {
        return this.relations.hydratedElements.filter(e=>e.description === cr.blocking && e.isViolated)
    }
    get blockedByRelations() {
        return this.inverseRelations.hydratedElements.filter(e=>e.inverseDescription === cr.blockedBy && e.isViolated)
    }
    get hasDependedOnByRelations() {
        return this.dependedOnByRelations.length > 0
    }
    get hasDependsOnRelations() {
        return this.dependsOnRelations.length > 0
    }
    get hasBlockingRelations() {
        return this.blockingRelations.length > 0
    }
    get hasBlockedByRelations() {
        return this.blockedByRelations.length > 0
    }
    get hasRelatedRelations() {
        return this.relations.length > 0 || this.inverseRelations.length > 0
    }
    relationsOfType(e) {
        return [...this.relations.filter(r=>r.description === e).map(r=>({
            relation: r,
            relatedEntity: r.relatedProject,
            inverse: !1
        })), ...this.inverseRelations.filter(r=>r.inverseDescription === e).map(r=>({
            relation: r,
            relatedEntity: r.project,
            inverse: !0
        }))]
    }
    get roadmaps() {
        return te.of(this.roadmapToProjects.map(e=>e.roadmap))
    }
    get initiatives() {
        return te.of(this.initiativeToProjects.map(e=>e.initiative), new de("sortOrder"))
    }
    isPartOfInitiative(e) {
        return this.initiatives.some(n=>n === e)
    }
    get nextProjectMilestone() {
        return this.projectMilestones.find(e=>e.status !== "done")
    }
    get completedProjectMilestones() {
        return this.projectMilestones.filter(e=>e.status === "done")
    }
    get activeMilestone() {
        const e = this.nextProjectMilestone ?? this.projectMilestones.first;
        return (e == null ? void 0 : e.status) === "done" ? void 0 : e
    }
    get accessibleTeams() {
        return this.teams.filter(e=>e.userCanAccessTeam(he.store.user))
    }
    get administrableTeams() {
        return this.teams
    }
    get nonCloneIssues() {
        return this.issues.filter(e=>!e.isClone)
    }
    get progress() {
        const e = this.nonCloneIssues.elements
          , n = e.filter(r=>!r.state);
        return n.length > 0 && F.error("Project issues without state", void 0, {
            project: {
                id: this.id
            },
            issues: n.slice(0, 10).map(r=>({
                id: r.id,
                teamId: r.team.id,
                stateId: r.state.id
            }))
        }),
        er.progress(e)
    }
    get progressEstimatePoints() {
        return er.progressEstimatePoints(this.nonCloneIssues.elements)
    }
    get inProgressEstimatePoints() {
        return er.inProgressEstimatePoints(this.nonCloneIssues.elements)
    }
    get completedEstimatePoints() {
        return er.completedEstimatePoints(this.nonCloneIssues.elements)
    }
    get totalEstimatePoints() {
        return er.totalEstimatePoints(this.nonCloneIssues.elements)
    }
    get lastIssueUpdate() {
        const e = this.nonCloneIssues.elements.sortBy(n=>n.updatedAt.valueOf())[0];
        return e ? e.updatedAt.valueOf() || e.createdAt.valueOf() : 0
    }
    get lastProjectUpdate() {
        return this.projectUpdates.first
    }
    get isPrivate() {
        return this.teams.every(e=>e.private)
    }
    get progressPercent() {
        return Math.round(this.progress * 100)
    }
    get progressText() {
        return this.progressPercent + "%"
    }
    get isActive() {
        return At.started === this.status.type
    }
    get isBacklog() {
        return At.backlog === this.status.type
    }
    get isPlanned() {
        return At.planned === this.status.type
    }
    get isDone() {
        return [At.completed, At.canceled].includes(this.status.type)
    }
    get doneAt() {
        return this.isCompleted ? this.completedAt : this.canceledAt
    }
    get isCompleted() {
        return At.completed === this.status.type
    }
    get isCanceled() {
        return At.canceled === this.status.type
    }
    get slug() {
        return `${wl(this.name)}-${this.slugId}`
    }
    get searchableContent() {
        return `${this.name} ${this.description ?? ""}`
    }
    static get defaultColor() {
        return y9.colors.lightGrey.color
    }
    get allDocumentTemplates() {
        return new te(new de(n=>!n.isTeamTemplate).and(n=>n.name.toLowerCase())).concat(this.accessibleTeams.reduce((n,r)=>n.concat(r.documentTemplates.elements), [])).concat(this.organization.documentTemplates.elements)
    }
    get predictedCompletionDates() {
        if (!this.startedAt)
            return {
                type: "notStarted"
            };
        if (this.completedAt)
            return {
                type: "completed"
            };
        if (this.issueCountHistory.length === 0 || this.issues.length === 0)
            return {
                type: "tooEarly"
            };
        if (this.progressVelocity === 0)
            return {
                type: "stale"
            };
        if (this.completedScopeHistory.length >= 3) {
            const i = this.completedScopeHistory.length;
            if (this.completedScopeHistory[i - 1] <= this.completedScopeHistory[i - 3] && this.progressEstimatePoints <= this.completedScopeHistory[i - 1])
                return {
                    type: "stale"
                }
        }
        const e = Math.max(this.progressVelocity, 2)
          , n = this.totalEstimatePoints - this.progressEstimatePoints;
        if (n <= 0)
            return {
                type: "completed"
            };
        const r = new Date().offsetByDays(7 * n / e)
          , s = new Date().daysTo(r);
        return {
            type: "prediction",
            optimisticCompletion: r.offsetByDays(-s / 2.5),
            predictedCompletion: r,
            pessimisticCompletion: r.offsetByDays(s / 2.5)
        }
    }
    get predictedCompletionDate() {
        var r;
        const e = this.predictedCompletionDates;
        if (e.type === "prediction")
            return e.predictedCompletion;
        const n = ((r = this.startDate) == null ? void 0 : r.toLocalDate()) ?? this.startedAt;
        if (n && this.progress > 0) {
            const s = Math.abs(new Date().daysTo(n));
            return new Date().offsetByDays(s * (1 / this.progress - 1))
        }
    }
    isWayBehindDate(e) {
        const n = this.predictedCompletionDates;
        return n.type === "prediction" ? Dd(e, n.optimisticCompletion) : !1
    }
    isSlightlyBehindDate(e) {
        const n = this.predictedCompletionDates;
        return n.type === "prediction" ? Dd(e, n.predictedCompletion) : !1
    }
    get isStale() {
        return this.predictedCompletionDates.type === "stale"
    }
    get health() {
        var e;
        return (e = this.lastProjectUpdate) == null ? void 0 : e.health
    }
    get healthWithAge() {
        const e = this.health;
        return e ? e === Fn.onTrack && this.healthIsStale ? Xi.outdated : e : Xi.noUpdate
    }
    get healthAgeInDays() {
        var e;
        return (e = this.lastProjectUpdate) == null ? void 0 : e.healthAgeInDays
    }
    get healthCreatedAt() {
        var e;
        return (e = this.lastProjectUpdate) == null ? void 0 : e.createdAt
    }
    get healthIsStale() {
        var e;
        return ((e = this.lastProjectUpdate) == null ? void 0 : e.isStale) ?? !1
    }
    get healthIsSlightlyStale() {
        var e;
        return ((e = this.lastProjectUpdate) == null ? void 0 : e.isSlightlyStale) ?? !1
    }
    get progressVelocity() {
        if (this.completedScopeHistory.length === 0)
            return this.progressEstimatePoints;
        const e = this.completedScopeHistory.length;
        if (this.completedScopeHistory.length === 1)
            return Math.round(Math.max(this.completedScopeHistory[0], this.progressEstimatePoints - this.completedScopeHistory[0]));
        const n = this.completedScopeHistory.map((a,o)=>o === 0 ? this.completedScopeHistory[0] : this.completedScopeHistory[o] - this.completedScopeHistory[o - 1])
          , r = this.progressEstimatePoints - this.completedScopeHistory[e - 1];
        n[n.length - 1] <= r && n.push(r);
        let s = 0
          , i = 0;
        return n.forEach((a,o)=>{
            const l = Math.max(0, o + 6 - this.completedScopeHistory.length);
            s += a * l,
            i += l
        }
        ),
        Math.max(Math.round(s / i), 0)
    }
    get currentVelocity() {
        if (this.completedScopeHistory.length === 0)
            return this.progressEstimatePoints;
        const e = this.completedScopeHistory.length;
        if (this.completedScopeHistory.length === 1)
            return Math.round(Math.max(this.completedScopeHistory[0], this.progressEstimatePoints - this.completedScopeHistory[0]));
        const n = this.completedScopeHistory.map((a,o)=>o === 0 ? this.completedScopeHistory[0] : this.completedScopeHistory[o] - this.completedScopeHistory[o - 1])
          , r = this.progressEstimatePoints - this.completedScopeHistory[e - 1];
        n[n.length - 1] <= r && n.push(r);
        let s = 0
          , i = 0;
        return [n[n.length - 2,
        n.length - 1]].forEach((a,o)=>{
            const l = o + 1;
            s += a * l,
            i += l
        }
        ),
        Math.max(Math.round(s / i), 0)
    }
    get activity() {
        return this.currentVelocity === 0 || !this.isActive ? 0 : this.currentVelocity / this.organization.averageProjectVelocity
    }
    get showGraph() {
        return !!(this.startedAt && this.issues.length > 0 && this.scopeHistory.length === this.completedScopeHistory.length && this.totalEstimatePoints > 0 && !this.isPlanned && !this.isBacklog)
    }
    get nonLeadMembers() {
        return this.members.filter(e=>e !== this.lead)
    }
    constructor(e=!0) {
        super(e),
        this.name = "",
        this.description = "",
        this.projectLinks = new te(new de(n=>n.createdAt.valueOf(),"desc")),
        this.links = new te(new de(n=>n.createdAt.valueOf(),"desc")),
        this.reminders = new te(new de(n=>n.createdAt.valueOf(),"desc")),
        this.documents = new te(new de(n=>n.createdAt.valueOf(),"desc")),
        this.projectMilestones = new te(new de("sortOrder")),
        this.notifications = new te,
        this.projectUpdates = new te(new de(n=>n.createdAt.valueOf(),"desc")),
        this.draftProjectUpdates = new te,
        this.favorites = new te,
        this.issues = new Et(re,this,"projectId",new de("sortOrder"),{
            canSkipNetworkHydration: ()=>this.store.syncClient.hasModelsForPartialIndexValues(re.modelName, this.accessibleTeams.map(n=>Zn.createPartialIndexValue({
                modelClass: ne,
                syncGroup: n.id // n is team here
            })), {
                requireAll: !0
            })
        }),
        this.history = new Et(H1,this,"projectId"),
        this.facets = new Et(kn,this,"sourceProjectId",new de("sortOrder")),
        this.members = new te,
        this.sortOrder = 0,
        this.issueCountHistory = [],
        this.completedIssueCountHistory = [],
        this.scopeHistory = [],
        this.completedScopeHistory = [],
        this.inProgressScopeHistory = [],
        this.teams = new te,
        this.roadmapToProjects = new te,
        this.initiativeToProjects = new te,
        this.customViews = new te(new de("name"),void 0),
        this.relations = new te(new de("type").and("createdAt", "desc")),
        this.inverseRelations = new te(new de("type").and("createdAt", "desc")),
        this.toggleFavorite = (n={})=>{
            const {projectTab: r} = n
              , s = r ? this.favorites.filter(i=>i.projectTab === r) : this.favorites.filter(i=>i.projectTab == null);
            if (s.length > 0)
                return s.forEach(i=>i.delete()),
                !1;
            {
                const i = Rt.create({
                    reference: this,
                    projectTab: r
                });
                return i.save(!0),
                i
            }
        }
        ,
        e && this.makeObservable()
    }
    isUnchangedTemplate() {
        if (!this.lastAppliedTemplate)
            return !1;
        const e = he.store.user
          , n = this.lastAppliedTemplate.templateData
          , r = this.getDataForTemplate(this.lastAppliedTemplate);
        function s(i, a) {
            var d;
            let o = i;
            const l = (d = i.initialIssues) == null ? void 0 : d.map((u,h)=>{
                var f, p;
                if (((p = (f = a.initialIssues) == null ? void 0 : f[h]) == null ? void 0 : p.teamId) === null) {
                    const {stateId: m, projectId: g, projectMilestoneId: C, teamId: b, ...k} = u;
                    return {
                        ...k,
                        teamId: null
                    }
                }
                return u
            }
            );
            return o = Ic(o, "teamIds"),
            !a.color && i.color === I3.defaultColor && (o = Ic(o, "color")),
            !a.leadId && i.leadId === e.id && (o = Ic(o, "leadId")),
            pd({
                ...o,
                initialIssues: l
            }, u=>u !== void 0)
        }
        return Yo(Ic(n, "teamIds"), s(r, n))
    }
    get isRootFavorited() {
        return this.favorites.some(e=>e.projectTab == null)
    }
    applyTemplate(e, n, r={}) {
        var d, u, h, f, p, m, g;
        const s = e.templateData;
        if (!s)
            return;
        this.lastAppliedTemplate && this.isClone && this.clearTemplate(this.lastAppliedTemplate);
        const i = this.administrableTeams.first;
        if (s.description && (this.description = s.description),
        s.title && (this.name = s.title),
        s.icon && (this.icon = s.icon),
        s.color && (this.color = s.color),
        s.statusId) {
            const C = this.store.findById(hr, s.statusId);
            if (!C)
                throw new Error("Could not find a project status to use");
            this.status = C
        }
        if (s.leadId) {
            const C = this.store.findById(K, s.leadId);
            C && (this.lead = C)
        }
        if ((d = s.descriptionData) != null && d.content) {
            const C = en.getOrCreateFrom(this);
            !C.contentData || !C.hasContent || r.overwrite ? C.replaceWithContent(s.descriptionData) : C.replaceWithContent({
                ...C.contentData,
                content: [...C.contentData.content, ...s.descriptionData.content]
            })
        }
        const a = (u = s.teamIds) == null ? void 0 : u.map(C=>this.store.findById(ne, C)).filter(Boolean);
        if (a != null && a.length) {
            this.administrableTeams.forEach(C=>{
                this.issues.some(b=>b.team === C) || this.administrableTeams.remove(C)
            }
            );
            for (const C of a)
                this.administrableTeams.add(C)
        }
        const o = (h = s.memberIds) == null ? void 0 : h.map(C=>this.store.findById(K, C)).filter(Boolean);
        if (o != null && o.length)
            for (const C of o)
                this.members.add(C);
        const l = (s.roadmapIds ?? []).filter(C=>!this.roadmaps.some(b=>b.id === C)).map(C=>this.store.findById(cn, C)).filter(Boolean);
        if (qe.isEnabled(qe.initiatives)) {
            const C = (s.initiativeIds ?? []).filter(S=>!this.initiatives.some(D=>D.id === S)).map(S=>this.store.findById(ot, S)).filter(Boolean)
              , b = l.map(S=>this.organization.initiatives.find(D=>D.roadmap === S)).filter(Boolean).filter(S=>!this.initiatives.some(D=>D.id === S.id))
              , k = [...new Set([...C, ...b])];
            for (const S of k)
                Uo.create({
                    initiative: S,
                    project: this
                }).save(!0)
        } else
            for (const C of l)
                Bo.create({
                    roadmap: C,
                    project: this
                }).save(!0);
        if ((f = s.projectMilestones) != null && f.length)
            for (const C of s.projectMilestones) {
                const b = new qt;
                b.name = C.name,
                b.project = this,
                b.sortOrder = ur.lastSortOrder(this.projectMilestones, "sortOrder"),
                b.save(!0)
            }
        if ((p = s.initialIssues) != null && p.length)
            for (const C of s.initialIssues) {
                const b = re.createEmpty()
                  , k = C.teamId ? this.store.findById(ne, C.teamId) : null
                  , S = k ?? i ?? this.accessibleTeams.first ?? e.team ?? this.organization.accessibleTeams.first;
                if (!S)
                    throw new Error("Could not find a team to use");
                b.team = S,
                b.isTemplateWithNoDefaultTeam = r.allowTemplateWithNoDefaultTeam ? !k : !1;
                const D = new On;
                D.templateData = C,
                b.applyTemplate(D, n, r),
                C.lastAppliedTemplateId ? b.lastAppliedTemplate = this.store.findById(On, C.lastAppliedTemplateId) : b.lastAppliedTemplate = void 0,
                C.projectMilestoneIndex !== void 0 && (b.projectMilestone = this.projectMilestones.elements[C.projectMilestoneIndex]),
                b.project = this,
                b.sortOrder = ur.lastSortOrder(this.issues, "sortOrder"),
                b.save(!0),
                (g = (m = b.documentContent) == null ? void 0 : m.value) == null || g.save(!0)
            }
        return this.lastAppliedTemplate = e,
        this
    }
    clearTemplate(e) {
        var r, s, i, a, o, l, d;
        const n = e.templateData;
        n && (n.title === this.name && (this.name = ""),
        n.description === this.description && (this.description = ""),
        (r = this.documentContent.value) != null && r.hasContentEqualTo(n.descriptionData) && this.documentContent.value.replaceWithContent(G3()),
        n.icon === this.icon && n.color === this.color && (this.icon = void 0,
        this.color = void 0),
        n.statusId === this.status.id && (this.status = this.organization.projectStatuses.find(u=>u.type === At.backlog)),
        n.leadId === ((s = this.lead) == null ? void 0 : s.id) && (this.lead = void 0),
        (i = n.teamIds) == null || i.forEach(u=>{
            const h = this.store.findById(ne, u);
            h && this.administrableTeams.remove(h)
        }
        ),
        (a = n.memberIds) == null || a.forEach(u=>{
            const h = this.store.findById(K, u);
            h && this.members.remove(h)
        }
        ),
        (o = n.roadmapIds) == null || o.map(u=>{
            const h = this.store.findById(cn, u)
              , f = this.roadmapToProjects.find(p=>p.roadmap === h);
            f && (this.roadmapToProjects.remove(f),
            f.delete())
        }
        ),
        (l = n.projectMilestones) == null || l.map(u=>{
            const h = this.projectMilestones.find(f=>f.name === u.name);
            h && (this.projectMilestones.remove(h),
            h.delete())
        }
        ),
        (d = n.initialIssues) == null || d.forEach(u=>{
            const h = this.issues.find(f=>{
                var C, b;
                const p = f.title === u.title
                  , m = !u.descriptionData && !((C = f.documentContent.value) != null && C.hasContent)
                  , g = !!((b = f.documentContent.value) != null && b.hasContentEqualTo(u.descriptionData));
                return p && (m || g)
            }
            );
            h && h.trash()
        }
        ),
        this.lastAppliedTemplate = void 0)
    }
    getDataForTemplate(e) {
        var r, s;
        const n = {
            icon: this.icon,
            color: this.color,
            description: this.description,
            descriptionData: (r = this.documentContent.value) == null ? void 0 : r.contentData,
            title: this.name,
            leadId: (s = this.lead) == null ? void 0 : s.id,
            statusId: this.status.id,
            roadmapIds: this.roadmaps.map(i=>i.id),
            initiativeIds: this.initiatives.map(i=>i.id),
            memberIds: this.members.map(i=>i.id),
            teamIds: this.administrableTeams.map(i=>i.id),
            projectMilestones: this.projectMilestones.map(i=>({
                name: i.name
            })),
            initialIssues: this.issues.map(i=>{
                let a = i.getDataForTemplate(e);
                if (i.projectMilestone) {
                    const o = this.projectMilestones.findIndex(l=>{
                        var d;
                        return l.name === ((d = i.projectMilestone) == null ? void 0 : d.name)
                    }
                    );
                    a = {
                        ...a,
                        projectMilestoneIndex: o !== -1 ? o : void 0,
                        projectMilestoneId: void 0
                    }
                }
                return pd({
                    ...a,
                    projectId: void 0
                }, o=>o !== void 0)
            }
            )
        };
        return pd(n, i=>i !== void 0)
    }
    matchInlineFind(e) {
        var r, s;
        const n = ml([this.name].concat(this.members.map(i=>i.name + " " + i.displayName)).concat([(r = this.lead) == null ? void 0 : r.name, (s = this.lead) == null ? void 0 : s.displayName].concrete()).join(" ")).toLowerCase();
        return e.split(" ").reduce((i,a)=>i && n.indexOf(a) !== -1, !0)
    }
    markNotificationAsRead(e) {
        const n = this.notifications.find(s=>s.id === e);
        if (!n)
            return;
        const r = n == null ? void 0 : n.groupingEntityId;
        this.notifications.forEach(s=>{
            s.readAt === void 0 && s.groupingEntityId === r && (s.markAsRead(),
            s.save())
        }
        )
    }
    hydrate(e, n) {
        const r = super.hydrate(e);
        return n == null ? r : n.tab === "all" || n.tab === $d.documents ? new Jt((s,i)=>{
            r.then(a=>{
                const o = []
                  , l = a.documentContent.value;
                l && o.push(l.hydrate(e)),
                a.projectMilestones.forEach(d=>{
                    o.push(d.hydrate(e).then(u=>{
                        const h = u.documentContent.value;
                        if (h)
                            return h.hydrate(e)
                    }
                    ).catch(u=>{
                        throw u
                    }
                    ))
                }
                ),
                Promise.all(o).then(()=>{
                    s(a)
                }
                ).catch(d=>{
                    i(d)
                }
                )
            }
            ).catch(a=>{
                i(a)
            }
            )
        }
        ) : r
    }
    findProjectMilestone(e) {
        return this.projectMilestones.find(n=>n.id === e || n.name.toLowerCase() === e.toLowerCase())
    }
}
;
I3.usedForPartialIndexes = !0;
/** Project */
let ie = I3;
Re([w()], ie.prototype, "name", void 0);
Re([w()], ie.prototype, "description", void 0);
Re([w({
    persistance: ee.none
})], ie.prototype, "slugId", void 0);
Re([w()], ie.prototype, "icon", void 0);
Re([w()], ie.prototype, "color", void 0);
Re([pe(()=>hr, "projects", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], ie.prototype, "status", void 0);
Re([xe()], ie.prototype, "projectLinks", void 0);
Re([xe()], ie.prototype, "links", void 0);
Re([xe()], ie.prototype, "reminders", void 0);
Re([xe()], ie.prototype, "documents", void 0);
Re([xe()], ie.prototype, "projectMilestones", void 0);
Re([xe()], ie.prototype, "notifications", void 0);
Re([xe()], ie.prototype, "projectUpdates", void 0);
Re([xe()], ie.prototype, "draftProjectUpdates", void 0);
Re([w({
    serializer: bt
})], ie.prototype, "projectUpdateRemindersPausedUntilAt", void 0);
Re([xe()], ie.prototype, "favorites", void 0);
Re([Dt({
    nullable: !0
})], ie.prototype, "subscription", void 0);
Re([Dt({
    nullable: !0
})], ie.prototype, "integrationsSettings", void 0);
Re([Nt()], ie.prototype, "issues", void 0);
Re([Nt()], ie.prototype, "history", void 0);
Re([Nt()], ie.prototype, "facets", void 0);
Re([Ue(()=>K, {
    persistance: ee.none,
    nullable: !0
})], ie.prototype, "creator", void 0);
Re([Ue(()=>K, {
    nullable: !0
})], ie.prototype, "lead", void 0);
Re([ii(()=>K)], ie.prototype, "members", void 0);
Re([pe(()=>he, "projects", {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], ie.prototype, "organization", void 0);
Re([w({
    serializer: Jo
})], ie.prototype, "startDate", void 0);
Re([w()], ie.prototype, "startDateResolution", void 0);
Re([w({
    serializer: Jo
})], ie.prototype, "targetDate", void 0);
Re([w()], ie.prototype, "targetDateResolution", void 0);
Re([w({
    serializer: bt,
    persistance: ee.none
})], ie.prototype, "startedAt", void 0);
Re([w({
    serializer: bt,
    persistance: ee.updateOnly
})], ie.prototype, "completedAt", void 0);
Re([w({
    serializer: bt,
    persistance: ee.updateOnly
})], ie.prototype, "canceledAt", void 0);
Re([w()], ie.prototype, "sortOrder", void 0);
Re([w({
    persistance: ee.updateOnly
})], ie.prototype, "trashed", void 0);
Re([Ue(()=>re, {
    nullable: !0,
    indexed: !0
})], ie.prototype, "convertedFromIssue", void 0);
Re([Ue(()=>On, {
    nullable: !0,
    indexed: !0
})], ie.prototype, "lastAppliedTemplate", void 0);
Re([w({
    persistance: ee.none
})], ie.prototype, "issueCountHistory", void 0);
Re([w({
    persistance: ee.none
})], ie.prototype, "completedIssueCountHistory", void 0);
Re([w({
    persistance: ee.none
})], ie.prototype, "scopeHistory", void 0);
Re([w({
    persistance: ee.none
})], ie.prototype, "completedScopeHistory", void 0);
Re([w({
    persistance: ee.none
})], ie.prototype, "inProgressScopeHistory", void 0);
Re([w({
    persistance: ee.updateOnly
})], ie.prototype, "slackNewIssue", void 0);
Re([w({
    persistance: ee.updateOnly
})], ie.prototype, "slackIssueComments", void 0);
Re([w({
    persistance: ee.updateOnly
})], ie.prototype, "slackIssueStatuses", void 0);
Re([ii(()=>ne, "projects", {
    onDelete: "REMOVE AND CASCADE WHEN EMPTY",
    updateOnSyncGroupChange: !0,
    indexed: !0
})], ie.prototype, "teams", void 0);
Re([xe()], ie.prototype, "roadmapToProjects", void 0);
Re([xe()], ie.prototype, "initiativeToProjects", void 0);
Re([kl({
    nullable: !0
})], ie.prototype, "documentContent", void 0);
Re([xe()], ie.prototype, "customViews", void 0);
Re([xe()], ie.prototype, "relations", void 0);
Re([xe()], ie.prototype, "inverseRelations", void 0);
Re([O], ie.prototype, "dependedOnByRelations", null);
Re([O], ie.prototype, "dependsOnRelations", null);
Re([O], ie.prototype, "blockingRelations", null);
Re([O], ie.prototype, "blockedByRelations", null);
Re([O], ie.prototype, "roadmaps", null);
Re([O], ie.prototype, "initiatives", null);
Re([O], ie.prototype, "nextProjectMilestone", null);
Re([O], ie.prototype, "completedProjectMilestones", null);
Re([O], ie.prototype, "activeMilestone", null);
Re([O], ie.prototype, "accessibleTeams", null);
Re([O], ie.prototype, "nonCloneIssues", null);
Re([O], ie.prototype, "progress", null);
Re([O], ie.prototype, "progressEstimatePoints", null);
Re([O], ie.prototype, "inProgressEstimatePoints", null);
Re([O], ie.prototype, "completedEstimatePoints", null);
Re([O], ie.prototype, "totalEstimatePoints", null);
Re([O], ie.prototype, "lastIssueUpdate", null);
Re([O], ie.prototype, "slug", null);
Re([O], ie.prototype, "searchableContent", null);
Re([O], ie.prototype, "allDocumentTemplates", null);
Re([O], ie.prototype, "predictedCompletionDates", null);
Re([O], ie.prototype, "progressVelocity", null);
Re([O], ie.prototype, "currentVelocity", null);
Re([O], ie.prototype, "activity", null);
Re([O], ie.prototype, "showGraph", null);
Re([O], ie.prototype, "nonLeadMembers", null);
Re([O], ie.prototype, "isRootFavorited", null);
Re([rt], ie.prototype, "applyTemplate", null);
Re([rt], ie.prototype, "clearTemplate", null);
Re([rt], ie.prototype, "markNotificationAsRead", null);
ie = Re([We("Project")], ie);
function Wn(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
/** Document */
let Kt = class V9 extends Xc {
    get slug() {
        return `${wl(this.title || "untitled")}-${this.slugId}`
    }
    get displayTitle() {
        return this.title || "New document"
    }
    get markdownContent() {
        return this.contentData ? Po.serialize(this.contentData) : ""
    }
    static create(e) {
        const n = V9.createEmpty();
        return n.title = e.title,
        e.project ? n.project = e.project : e.initiative && (n.initiative = e.initiative),
        n.creator = e.creator,
        n.updatedBy = e.updatedBy ?? e.creator,
        n
    }
    duplicate(e) {
        var r;
        const n = V9.createEmpty();
        return n.project = this.project,
        n.initiative = this.initiative,
        n.creator = e || this.creator,
        n.updatedBy = e || this.updatedBy,
        n.title = this.title,
        n.icon = this.icon,
        n.color = this.color,
        (r = this.documentContent.value) != null && r.contentData && en.getOrCreateFrom(n).replaceWithContent(Fa(this.documentContent.value.contentData)),
        n
    }
    markNotificationAsRead(e) {
        const n = this.notifications.find(s=>s.id === e);
        if (!n)
            return;
        const r = n == null ? void 0 : n.groupingEntityId;
        this.notifications.forEach(s=>{
            s.readAt === void 0 && s.groupingEntityId === r && (s.markAsRead(),
            s.save())
        }
        )
    }
    toggleFavorite() {
        if (this.favorite)
            return this.favorite.delete(),
            !1;
        const e = Rt.create({
            reference: this
        });
        return e.save(!0),
        e
    }
    beforeSave(e) { // e should be nullable
        super.beforeSave(e),
        this.title || (this.title = ""),
        this.title = this.title.trim(),
        e === !1 && this.title === "" && (this.title = "New document") // title should not be empty
    }
    applyTemplate(e) {
        const n = e.templateData;
        if (!n)
            return;
        const r = en.getOrCreateFrom(this);
        if (n.descriptionData && r && r.replaceWithContent(n.descriptionData),
        this.icon = n.icon,
        this.color = n.color,
        n.title && (this.title = n.title),
        n.projectId) {
            const s = this.store.findById(ie, n.projectId);
            s && (this.project = s)
        }
        return this.lastAppliedTemplate = e,
        this
    }
    get parent() {
        return this.project || this.initiative
    }
    get parentId() {
        var e, n;
        return ((e = this.project) == null ? void 0 : e.id) || ((n = this.initiative) == null ? void 0 : n.id)
    }
    get parentLabel() {
        return this.project ? "Project" : "Initiative"
    }
    get accessibleTeams() {
        return this.parent.accessibleTeams
    }
    constructor(e=!0) {
        super(e),
        this.notifications = new te,
        this.isTemplate = !1,
        this.reminders = new te(new de(n=>n.createdAt.valueOf(),"desc")),
        e && this.makeObservable()
    }
}
;
Wn([w()], Kt.prototype, "title", void 0);
Wn([w({
    persistance: ee.none
})], Kt.prototype, "slugId", void 0);
Wn([w()], Kt.prototype, "icon", void 0);
Wn([w()], Kt.prototype, "color", void 0);
Wn([w()], Kt.prototype, "sortOrder", void 0);
Wn([w({
    persistance: ee.updateOnly
})], Kt.prototype, "trashed", void 0);
Wn([kl({
    nullable: !0
})], Kt.prototype, "documentContent", void 0);
Wn([w({
    serializer: hn,
    shallowObservation: !0
})], Kt.prototype, "contentData", void 0);
Wn([pe(()=>ie, "documents", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Kt.prototype, "project", void 0);
Wn([pe(()=>ot, "documents", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Kt.prototype, "initiative", void 0);
Wn([Ue(()=>K, {
    nullable: !0,
    persistance: ee.none
})], Kt.prototype, "creator", void 0);
Wn([Ue(()=>K, {
    nullable: !0,
    persistance: ee.none
})], Kt.prototype, "updatedBy", void 0);
Wn([Ue(()=>On, {
    nullable: !0,
    indexed: !0
})], Kt.prototype, "lastAppliedTemplate", void 0);
Wn([w({
    serializer: bt
})], Kt.prototype, "hiddenAt", void 0);
Wn([Dt({
    nullable: !0
})], Kt.prototype, "favorite", void 0);
Wn([xe()], Kt.prototype, "notifications", void 0);
Wn([w({
    persistance: ee.none
})], Kt.prototype, "isTemplate", void 0);
Wn([xe()], Kt.prototype, "reminders", void 0);
Wn([O], Kt.prototype, "markdownContent", null);
Wn([rt], Kt.prototype, "markNotificationAsRead", null);
Wn([rt], Kt.prototype, "toggleFavorite", null);
Wn([rt], Kt.prototype, "applyTemplate", null);
Kt = Wn([We("Document")], Kt);
var B9;
(function(t) {
    t.maxLabelLength = 64,
    t.signatureKeyLength = 44,
    t.signatureKeyPrefix = "lin_wh_",
    t.maxUrlLength = 1e3,
    t.maxSecretLength = 256,
    t.disallowedHosts = /((^127|^10)(\.[0-9]{1,3}){3})|(^((172\.1[6-9])|(172\.2[0-9])|(172\.3[0-1]))(\.[0-9]{1,3}){2})|(^192\.168(\.[0-9]{1,3}){2})|(^(.*\.)?linear\.app)/i;
    let e;
    (function(r) {
        r.Issue = "Issue",
        r.Comment = "Comment",
        r.Attachment = "Attachment",
        r.Reaction = "Reaction",
        r.Project = "Project",
        r.ProjectUpdate = "ProjectUpdate",
        r.Cycle = "Cycle",
        r.IssueLabel = "IssueLabel"
    }
    )(e = t.EntityResourceType || (t.EntityResourceType = {}));
    let n;
    (function(r) {
        r.IssueSLA = "IssueSLA"
    }
    )(n = t.CustomResourceType || (t.CustomResourceType = {})),
    t.entityResourceTypes = Object.values(e),
    t.customResourceTypes = Object.values(n),
    t.resourceTypes = [...t.entityResourceTypes, ...t.customResourceTypes],
    t.labelForResourceType = r=>{
        switch (r) {
        case "Issue":
            return "Issues";
        case "Comment":
            return "Comments";
        case "Attachment":
            return "Issue attachments";
        case "Reaction":
            return "Emoji reactions";
        case "IssueLabel":
            return "Labels";
        case "Project":
            return "Projects";
        case "ProjectUpdate":
            return "Project updates";
        case "Cycle":
            return "Cycles";
        case "IssueSLA":
            return "Issue SLA";
        default:
            throw new zt(r)
        }
    }
}
)(B9 || (B9 = {}));
function Ka(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const E3 = class E3 extends It {
    constructor(e=!0) {
        super(e),
        this.enabled = !0,
        this.resourceTypes = [B9.EntityResourceType.Issue],
        this.allPublicTeams = !1,
        e && this.makeObservable()
    }
}
;
E3.loadStrategy = mn.getValue(mn.newPartialModels, ["_"]).includes("Webhook") ? dn.partial : dn.instant,
E3.partialLoadMode = ki.full;
let Xr = E3;
Ka([w()], Xr.prototype, "label", void 0);
Ka([w()], Xr.prototype, "url", void 0);
Ka([w()], Xr.prototype, "enabled", void 0);
Ka([w()], Xr.prototype, "secret", void 0);
Ka([Ue(()=>K, {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], Xr.prototype, "creator", void 0);
Ka([w()], Xr.prototype, "resourceTypes", void 0);
Ka([pe(()=>he, "webhooks", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Xr.prototype, "organization", void 0);
Ka([w()], Xr.prototype, "allPublicTeams", void 0);
Ka([pe(()=>ne, "webhooks", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Xr.prototype, "team", void 0);
Xr = Ka([We("Webhook")], Xr);
function Fe(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
/** Organization */
class he extends si {
    get projectsPageFacets() {
        return this.facets.filter(e=>e.sourcePage === "projects")
    }
    get isSingletonModel() {
        return !0
    }
    get planFeatureOverridesArray() {
        var e;
        return ((e = this.planFeatureOverrides) == null ? void 0 : e.filter(n=>!n.expiresAt || n.expiresAt > Date.now()).map(n=>n.feature)) ?? []
    }
    get issueLabels() {
        return this.allIssueLabels.filter(e=>e.isTeamLabel === !1)
    }
    get templates() {
        return this.allTemplates.filter(e=>e.isTeamTemplate === !1 && e.isClone === !1)
    }
    get customViews() {
        return this.allCustomViews.filter(e=>e.team === void 0 && cD(e.traits, f9.hasFacet) === !1)
    }
    get averageProjectVelocity() {
        const e = this.projects.filter(n=>n.isActive && n.currentVelocity > 0);
        return e.reduce((n,r)=>n + r.currentVelocity, 0) / e.length
    }
    get workflowDefinitions() {
        return this.allWorkflowDefinitions.filter(e=>e.isTeamWorkflow === !1)
    }
    get issueTemplates() {
        return this.templates.filter(e=>e.type === qi.issue)
    }
    get documentTemplates() {
        return this.templates.filter(e=>e.type === qi.document)
    }
    get projectTemplates() {
        return this.templates.filter(e=>e.type === qi.project)
    }
    get accessibleTeams() {
        if (!he.store.user.isAdmin)
            return this.teams;
        const e = he.store.user;
        return this.teams.filter(n=>!n.private || n.userIsMember(e))
    }
    get activePublicTeams() {
        return this.teams.filter(e=>!e.private && !e.archivedAt)
    }
    get administrableTeams() {
        return this.teams
    }
    get activeSubscription() {
        return this.subscriptions.find(e=>e.isActive)
    }
    get isFreePlan() {
        if (this.isInTrial === !0)
            return !1;
        const e = this.activeSubscription;
        return e ? Is.planForSubscription(e == null ? void 0 : e.type) === $e.free : !0
    }
    get activeUsers() {
        return this.users.filter(e=>e.isActive)
    }
    get suspendedUsers() {
        return this.users.filter(e=>!e.isActive)
    }
    get allUsers() {
        return this.users.filter(e=>!e.hasLeftWorkspace)
    }
    get allAdmins() {
        return this.users.filter(e=>e.isAdmin)
    }
    authServiceAllowed(e) {
        return this.allowedAuthServices.length === 0 ? !0 : this.allowedAuthServices.indexOf(e) > -1
    }
    allowedDomains(e) {
        return (e ? this.domains.filter(r=>r.authType === e) : this.domains).map(r=>r.name)
    }
    get githubConnected() {
        return this.integrations.find(e=>e.service === G.github) !== void 0
    }
    get documents() {
        var e;
        return te.of(((e = this.store) == null ? void 0 : e.allModelsOfType(Kt)) || [])
    }
    constructor(e=!0) {
        super(e),
        this.name = "",
        this.active = !1,
        this.periodUploadVolume = 0,
        this.users = new te(new de("name")),
        this.externalUsers = new Et(qn,this,"organizationId",new de("name")),
        this.facets = new Et(kn,this,"sourceOrganizationId",new de("sortOrder")),
        this.projects = new te(new de("sortOrder")),
        this.projectStatuses = new te(new de(n=>h9.getStatusOrder(n.type)).and("position")),
        this.integrations = new te,
        this.oauthClients = new te,
        this.oauthClientApprovals = new te,
        this.emojis = new te(new de("createdAt")),
        this.invites = new te,
        this.viewPreferences = new te,
        this.roadmaps = new te(new de("name")),
        this.initiatives = new te(new de("sortOrder")),
        this.domains = new te(new de("name")),
        this.webhooks = new Et(Xr,this,"organizationId"),
        this.emailIntakeAddresses = new te(new de("address")),
        this.timeSchedules = new te,
        this.allIssueLabels = new te(new de("name")),
        this.allTemplates = new te(new de("sortOrder").and("name")),
        this.allCustomViews = new te(new de("name")),
        this.allWorkflowDefinitions = new te(new de("sortOrder")),
        this.subscriptions = new te(new de("isActive","desc").and("createdAt", "desc")),
        this.issueImports = new Et(Rn,this,"organizationId"),
        this.roadmapEnabled = !1,
        this.projectUpdatesReminderFrequency = Pd.never,
        this.projectUpdateRemindersDay = _1.Friday,
        this.projectUpdateRemindersHour = 14,
        this.samlEnabled = !1,
        this.scimEnabled = !1,
        this.reducedPersonalInformation = !1,
        this.oauthAppReview = !1,
        this.allowedAuthServices = [],
        this.previousUrlKeys = [],
        this.approximateIssueCount = 0,
        this.fiscalYearStartMonth = 0,
        this.teams = new te(new de("name")),
        this.allowMembersToInvite = !1,
        e && this.makeObservable()
    }
    canAccess(e, n) {
        if (this.planFeatureOverridesArray.includes(e))
            return !0;
        const r = this.isInTrial ? this.trialPlanType ?? $e.business : this.activeSubscription ? Is.planForSubscription(this.activeSubscription.type) : $e.free;
        return Vc.canAccess(e, r, n)
    }
    canAccessSome(e) {
        return e.map(r=>this.canAccess(r)).some(r=>r)
    }
    findUser(e) {
        return this.activeUsers.find(n=>n.id === e || n.name.toLowerCase() === e.toLowerCase() || n.displayName.toLowerCase() === e)
    }
    findTeamByKey(e) {
        const n = re.teamKeyFromIdentifier(e);
        return this.teams.find(r=>r.key === n || r.keys.find(s=>n === s.name) !== void 0)
    }
    get isSuperuserWorkspace() {
        return E0.superUserUrlKeys.includes(this.urlKey)
    }
    get isInTrial() {
        return this.activeSubscription && Vc.isPlanEqualOrBetterThan(Is.planForSubscription(this.activeSubscription.type), this.trialPlanType ?? $e.business) ? !1 : this.trialEndsAt && this.trialEndsAt > new Date(pi())
    }
    get isTrialAvailable() {
        const e = this.activeSubscription ? Is.planForSubscription(this.activeSubscription.type) : $e.free;
        return !this.trialEndsAt && !Vc.isPlanEqualOrBetterThan(e, $e.business)
    }
    get createdDaysAgo() {
        return s5(new Date, this.createdAt)
    }
    get dangerousAllIssues() {
        return new Jt(async(e,n)=>{
            try {
                await this.store.syncClient.loadPartialModels(re, this.accessibleTeams.map(r=>r.id)),
                await Promise.all(this.accessibleTeams.map(r=>r.issues.hydrate())),
                e(this.accessibleTeams.reduce((r,s)=>r.concat(s.issues.elements), []))
            } catch (r) {
                n(r)
            }
        }
        )
    }
    get showProjectsPage() {
        return !this.store.user.guest
    }
    get isSlaAccessible() {
        return !!this.slaEnabled && this.canAccess(j0.sla)
    }
    setSlaEnabled(e) {
        this.slaEnabled = e
    }
    numProjectStatusesOfType(e) {
        return this.numProjectStatusesPerType[e]
    }
    get numProjectStatusesPerType() {
        return wi.allExceptPaused.reduce((e,n)=>(e[n] = this.projectStatuses.filter(r=>r.type === n).length,
        e), {
            [At.backlog]: 0,
            [At.planned]: 0,
            [At.started]: 0,
            [At.completed]: 0,
            [At.canceled]: 0
        })
    }
    get defaultProjectStatus() {
        return this.firstProjectStatusForType(At.backlog)
    }
    firstProjectStatusForType(e) {
        const n = e === At.paused ? At.started : e
          , s = this.projectStatuses.filter(i=>!i.isArchived).find(i=>i.type === n);
        if (!s)
            throw new Error(`Could not find project status for type ${n}`);
        return s
    }
}
Fe([w()], he.prototype, "name", void 0);
Fe([w()], he.prototype, "urlKey", void 0);
Fe([w()], he.prototype, "logoUrl", void 0);
Fe([w()], he.prototype, "active", void 0);
Fe([w()], he.prototype, "periodUploadVolume", void 0);
Fe([w({
    serializer: bt
})], he.prototype, "deletionRequestedAt", void 0);
Fe([w({
    serializer: bt
})], he.prototype, "trialEndsAt", void 0);
Fe([w()], he.prototype, "trialPlanType", void 0);
Fe([xe()], he.prototype, "users", void 0);
Fe([Nt()], he.prototype, "externalUsers", void 0);
Fe([Nt()], he.prototype, "facets", void 0);
Fe([O], he.prototype, "projectsPageFacets", null);
Fe([xe()], he.prototype, "projects", void 0);
Fe([xe()], he.prototype, "projectStatuses", void 0);
Fe([xe()], he.prototype, "integrations", void 0);
Fe([xe()], he.prototype, "oauthClients", void 0);
Fe([xe()], he.prototype, "oauthClientApprovals", void 0);
Fe([xe()], he.prototype, "emojis", void 0);
Fe([xe()], he.prototype, "invites", void 0);
Fe([xe()], he.prototype, "viewPreferences", void 0);
Fe([xe()], he.prototype, "roadmaps", void 0);
Fe([xe()], he.prototype, "initiatives", void 0);
Fe([xe()], he.prototype, "domains", void 0);
Fe([Nt()], he.prototype, "webhooks", void 0);
Fe([xe()], he.prototype, "emailIntakeAddresses", void 0);
Fe([xe()], he.prototype, "timeSchedules", void 0);
Fe([xe()], he.prototype, "allIssueLabels", void 0);
Fe([xe()], he.prototype, "allTemplates", void 0);
Fe([xe()], he.prototype, "allCustomViews", void 0);
Fe([xe()], he.prototype, "allWorkflowDefinitions", void 0);
Fe([xe()], he.prototype, "subscriptions", void 0);
Fe([Nt()], he.prototype, "issueImports", void 0);
Fe([w()], he.prototype, "gitBranchFormat", void 0);
Fe([w()], he.prototype, "gitLinkbackMessagesEnabled", void 0);
Fe([w()], he.prototype, "gitPublicLinkbackMessagesEnabled", void 0);
Fe([w()], he.prototype, "roadmapEnabled", void 0);
Fe([w()], he.prototype, "projectUpdateReminderFrequencyInWeeks", void 0);
Fe([w({
    enum: Pd
})], he.prototype, "projectUpdatesReminderFrequency", void 0);
Fe([w({
    enum: _1
})], he.prototype, "projectUpdateRemindersDay", void 0);
Fe([w()], he.prototype, "projectUpdateRemindersHour", void 0);
Fe([w({
    persistance: ee.none
})], he.prototype, "samlEnabled", void 0);
Fe([w({
    serializer: hn,
    persistance: ee.none
})], he.prototype, "samlSettings", void 0);
Fe([w({
    persistance: ee.none
})], he.prototype, "scimEnabled", void 0);
Fe([w()], he.prototype, "reducedPersonalInformation", void 0);
Fe([w()], he.prototype, "oauthAppReview", void 0);
Fe([w()], he.prototype, "allowedAuthServices", void 0);
Fe([w({
    persistance: ee.updateOnly
})], he.prototype, "ipRestrictions", void 0);
Fe([w()], he.prototype, "previousUrlKeys", void 0);
Fe([w()], he.prototype, "approximateIssueCount", void 0);
Fe([w({
    enum: u9
})], he.prototype, "slaDayCount", void 0);
Fe([w()], he.prototype, "fiscalYearStartMonth", void 0);
Fe([xe()], he.prototype, "teams", void 0);
Fe([w()], he.prototype, "allowMembersToInvite", void 0);
Fe([w()], he.prototype, "slaEnabled", void 0);
Fe([w({
    serializer: hn,
    persistance: ee.none
})], he.prototype, "planFeatureOverrides", void 0);
Fe([O], he.prototype, "planFeatureOverridesArray", null);
Fe([O], he.prototype, "issueLabels", null);
Fe([O], he.prototype, "templates", null);
Fe([O], he.prototype, "customViews", null);
Fe([O], he.prototype, "averageProjectVelocity", null);
Fe([O], he.prototype, "workflowDefinitions", null);
Fe([O], he.prototype, "issueTemplates", null);
Fe([O], he.prototype, "documentTemplates", null);
Fe([O], he.prototype, "projectTemplates", null);
Fe([O], he.prototype, "accessibleTeams", null);
Fe([O], he.prototype, "activePublicTeams", null);
Fe([O], he.prototype, "activeUsers", null);
Fe([O], he.prototype, "suspendedUsers", null);
Fe([O], he.prototype, "allUsers", null);
Fe([O], he.prototype, "allAdmins", null);
Fe([O], he.prototype, "isSuperuserWorkspace", null);
Fe([O], he.prototype, "isInTrial", null);
Fe([O], he.prototype, "isTrialAvailable", null);
Fe([O], he.prototype, "createdDaysAgo", null);
Fe([O], he.prototype, "dangerousAllIssues", null);
Fe([w()], he.prototype, "releaseChannel", void 0);
Fe([O], he.prototype, "showProjectsPage", null);
Fe([O], he.prototype, "isSlaAccessible", null);
he = Fe([We("Organization")], he);
function rs(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const Wm = class Wm extends si {
    get isConfigurable() {
        return this.status === oo.inProgress && this.mapping !== void 0
    }
    get isComplete() {
        return this.status === oo.complete
    }
    get isDeletable() {
        return (this.status === oo.error || this.status === oo.complete || this.isConfigurable) && Er(this.createdAt).diff(Er(), "day") <= 14
    }
    get hasProgress() {
        return this.progress === void 0 || this.progress === null ? !1 : this.status === oo.inProcess || this.status === oo.deleting
    }
    get isFetching() {
        return this.status === oo.inProgress && this.mapping === void 0
    }
    constructor(e=!0) {
        super(e),
        this.issues = new te,
        e && this.makeObservable()
    }
    isDeletableBy(e) {
        return this.isDeletable ? e.isAdmin || this.creator.id === e.id : !1
    }
    supportsRichFetchProgress() {
        return this.service === Zs.jira || this.service === Zs.asana
    }
    hasGatheredBasicWorkspaceInfo() {
        var e;
        return ((e = this.fetchProgress) == null ? void 0 : e.ImportIssueData) !== void 0
    }
}
;
Wm.loadStrategy = dn.partial;
let Rn = Wm;
rs([w()], Rn.prototype, "teamName", void 0);
rs([w()], Rn.prototype, "service", void 0);
rs([w()], Rn.prototype, "status", void 0);
rs([w()], Rn.prototype, "error", void 0);
rs([w()], Rn.prototype, "progress", void 0);
rs([w()], Rn.prototype, "stats", void 0);
rs([w({
    serializer: hn
})], Rn.prototype, "mapping", void 0);
rs([pe(()=>K, "issueImports", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Rn.prototype, "creator", void 0);
rs([w()], Rn.prototype, "csvFileUrl", void 0);
rs([pe(()=>ne, "issueImports", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rn.prototype, "team", void 0);
rs([pe(()=>he, "issueImports", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Rn.prototype, "organization", void 0);
rs([xe()], Rn.prototype, "issues", void 0);
rs([w()], Rn.prototype, "fetchProgress", void 0);
rs([w()], Rn.prototype, "errorMetadata", void 0);
rs([w()], Rn.prototype, "serviceMetadata", void 0);
Rn = rs([We("IssueImport")], Rn);
async function Ate(t, e) {
    const n = Mt.gql`
    query ($teamId: String!) {
      team(id: $teamId) {
        issueCount(includeArchived: true)
      }
    }
  `;
    return t.query(n, {
        teamId: e
    })
}
function je(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const Gm = class Gm extends It {
    get teamEmailIntakeAddresses() {
        return this.emailIntakeAddresses.filter(e=>!e.template)
    }
    get issueTemplates() {
        return this.templates.filter(e=>e.type === qi.issue && e.isClone === !1)
    }
    get documentTemplates() {
        return this.templates.filter(e=>e.type === qi.document && e.isClone === !1)
    }
    get projectTemplates() {
        return this.templates.filter(e=>e.type === qi.project && e.isClone === !1)
    }
    get allIssueTemplates() {
        return new te(new de(n=>!n.isTeamTemplate).and("sortOrder").and(n=>n.name.toLowerCase())).concat(this.issueTemplates.elements).concat(this.organization.issueTemplates.elements)
    }
    get allDocumentTemplates() {
        return new te(new de(n=>!n.isTeamTemplate).and("sortOrder").and(n=>n.name.toLowerCase())).concat(this.documentTemplates.elements).concat(this.organization.documentTemplates.elements)
    }
    get allProjectTemplates() {
        return new te(new de(n=>!n.isTeamTemplate).and("sortOrder").and(n=>n.name.toLowerCase())).concat(this.projectTemplates.elements).concat(this.organization.projectTemplates.elements)
    }
    get documents() {
        return this.projects.map(e=>e.documents.elements).flat()
    }
    get projectsPageFacets() {
        return this.facets.filter(e=>e.sourcePage === "projects")
    }
    get allIssueLabels() {
        return this.issueLabels.concat(this.organization.issueLabels.elements).orderBy(new de("name"))
    }
    get isScimManaged() {
        return this.scimManaged && this.organization.scimEnabled
    }
    get users() {
        return te.of(this.memberships.map(e=>e.user))
    }
    get activeUsers() {
        return this.users.filter(e=>e.isActive)
    }
    get activeProjects() {
        return this.projects.filter(e=>e.isActive)
    }
    get owners() {
        return te.of(this.memberships.filter(e=>e.user.isActive && e.owner).map(e=>e.user))
    }
    constructor(e=!0) {
        super(e),
        this.keys = new te,
        this.issues = new Et(re,this,"teamId",void 0,{
            customNetworkHydration: ()=>[{
                modelClass: re,
                syncGroup: this.id
            }, {
                modelClass: mr,
                syncGroup: this.id
            }]
        }),
        this.emailIntakeAddresses = new te(new de("address")),
        this.templates = new te(new de("sortOrder").and("name")),
        this.webhooks = new Et(Xr,this,"teamId"),
        this.cycles = new te(new de("number","desc")),
        this.projects = new te(new de(n=>n.isActive,"desc").and(n=>n.isDone, "asc").and(n=>!n.targetDate, "asc").and(n=>n.targetDate ? n.targetDate : 0, "asc").and("createdAt", "desc")),
        this.memberships = new te(new de(n=>{
            const r = n.user;
            return r === void 0 ? (F.error("Membership didn't have a user", void 0, {
                id: n.id
            }),
            "~") : r.name
        }
        ,"asc")),
        this.facets = new Et(kn,this,"sourceTeamId",new de("sortOrder")),
        this.issueLabels = new te(new de("name")),
        this.states = new te(new de(n=>Jc.getStateTypeOrder(n.type)).and("position")),
        this.gitAutomationTargetBranches = new te,
        this.gitAutomationStates = new te,
        this.defaultGitAutomationStates = this.gitAutomationStates.filter(n=>!n.targetBranch),
        this.workflowDefinitions = new te(new de(n=>(n.createdAt,
        "asc"))),
        this.workflowCronJobDefinitions = new te(new de(n=>(n.createdAt,
        "asc"))),
        this.customViews = new te(new de("name")),
        this.issueImports = new Et(Rn,this,"teamId"),
        this.cyclesEnabled = !1,
        this.cycleStartDay = _1.Monday,
        this.cycleDuration = 2,
        this.cycleCooldownTime = 2,
        this.cycleIssueAutoAssignStarted = !0,
        this.cycleIssueAutoAssignCompleted = !0,
        this.cycleLockToActive = !1,
        this.upcomingCycleCount = 2,
        this.issueOrderingNoPriorityFirst = !0,
        this.issueEstimationType = $i.notUsed,
        this.issueEstimationAllowZero = !1,
        this.issueEstimationExtended = !1,
        this.setIssueSortOrderOnStateChange = n4.first,
        this.defaultIssueEstimate = 1,
        this.triageEnabled = !1,
        this.requirePriorityToLeaveTriage = !1,
        this.private = !1,
        this.scimManaged = !1,
        this.groupIssueHistory = !0,
        e && this.makeObservable()
    }
    userCanChangeIssueStatus(e) {
        return !this.triageEnabled || this.userIsMember(e)
    }
    userCanAccessTeam(e) {
        return !this.private && !e.guest || this.userIsMember(e)
    }
    userCanAdministrateTeam(e, n, r) {
        if (e.guest)
            return !1;
        switch (n) {
        case Jl.userManagement:
            if (!r)
                throw new Error("User to manage must be provided");
            return !this.private && r.guest ? e.isAdmin || this.owners.contains(e) : !this.private || e.isAdmin || this.owners.contains(e);
        case Jl.configuration:
            return !0;
        case Jl.publicity:
            return e.isAdmin || this.owners.contains(e);
        case Jl.delete:
            return e.isAdmin || this.owners.contains(e);
        default:
            return !1
        }
    }
    get slaEnabled() {
        return this.organization.isSlaAccessible ?? !1
    }
    userIsMember(e) {
        return e.teamMemberships.find(n=>n.team === this) !== void 0
    }
    get activeStates() {
        return this.states.filter(e=>e.isActive)
    }
    get backlogStates() {
        return this.states.filter(e=>e.isBacklog)
    }
    get startedStates() {
        return this.states.filter(e=>e.isStarted)
    }
    get activeIssues() {
        return this.issues.filter(e=>e.state.isActive)
    }
    get unsnoozedTriageIssues() {
        var e;
        return (e = this.triageIssueState) == null ? void 0 : e.issues.filter(n=>!n.snoozedUntilAt)
    }
    get autoCloseEnabled() {
        return this.autoClosePeriod !== void 0 && this.autoClosePeriod > 0
    }
    get autoArchiveEnabled() {
        return this.autoArchivePeriod !== void 0 && this.autoArchivePeriod > 0
    }
    get url() {
        return ti(this)
    }
    get colorForIcon() {
        return this.icon && u_.isEmojiCode(this.icon) ? void 0 : this.color
    }
    matches(e) {
        return this.name.match(e) !== null
    }
    get identifier() {
        return `${this.key}`
    }
    get nextIssueNumber() {
        return 1 + this.issues.reduce((e,n)=>n.number ? Math.max(e, n.number) : e, 0)
    }
    defaultState(e, n={}) {
        const r = this.states.find(i=>i.type === ye.triage)
          , s = n.preferredState;
        if (!s && r && (e === void 0 || !this.userCanChangeIssueStatus(e)))
            return r;
        if (s) {
            if (s.team.id === this.id)
                return s;
            {
                let i = this.states.find(a=>a.type === s.type && a.name.toLowerCase() === s.name.toLowerCase());
                if (i || (i = this.states.find(a=>a.type === s.type)),
                i)
                    return i;
                F.error("Team.defaultState: invalid preferred state, it belongs to another team", void 0, {
                    teamId: this.id,
                    preferredStateId: s.id,
                    preferredStateTeamId: s.team.id
                })
            }
        }
        return this.defaultIssueState || this.defaultStateForType(ye.backlog) || this.defaultStateForType(ye.unstarted)
    }
    get defaultActiveState() {
        return this.defaultStateForType(ye.unstarted)
    }
    get defaultBacklogState() {
        return this.defaultStateForType(ye.backlog)
    }
    get defaultCanceledState() {
        return this.defaultStateForType(ye.canceled)
    }
    defaultStateForType(e) {
        if (e === ye.triage)
            return this.triageIssueState || this.defaultStateForType(ye.backlog);
        const n = this.defaultIssueState;
        return n && n.type === e ? n : this.states.find(r=>r.type === e)
    }
    statesOfType(e) {
        return this.states.filter(n=>n.type === e)
    }
    get activeCycle() {
        if (this.cyclesEnabled === !1)
            return;
        const e = new Date;
        return this.cycles.find(n=>n.completedAt === void 0 && n.startsAt <= e && e < n.endsAt)
    }
    get previousCycle() {
        if (this.cyclesEnabled !== !1)
            return this.cycles.filter(e=>e.isCompleted).orderBy("completedAt", "desc").first
    }
    inCycleCooldown() {
        if (!this.cyclesEnabled || this.activeCycle)
            return !1;
        const e = this.previousCycle
          , n = this.upcomingCycle(0);
        if (!(e != null && e.completedAt) || !n)
            return !1;
        const r = new Date;
        return e.completedAt < r && r < n.startsAt
    }
    get cycleVelocity() {
        const e = [];
        let n = this.previousCycle;
        for (; n && e.length < 3; )
            n.isCompleted && e.push(n),
            n = n.previousCycle;
        if (e.length === 0) {
            const r = this.estimationEnabled ? 15 : 5;
            return {
                velocity: Math.max(1, r * this.cycleDuration * this.memberships.length),
                type: "estimate"
            }
        } else
            return {
                velocity: Math.max(1, Math.floor(e.reduce((r,s)=>r + s.progressEstimatePoints, 0) / e.length)),
                type: "historic"
            }
    }
    get estimationEnabled() {
        return this.issueEstimationType !== $i.notUsed
    }
    upcomingCycle(e) {
        const n = new Date;
        return this.cycles.orderBy("endsAt", "asc").filter(s=>s.completedAt === void 0 && n < s.startsAt).elements[e]
    }
    async totalIssueCount() {
        try {
            return (await Ate(this.store.graphQLClient, this.id)).team.issueCount
        } catch (e) {
            F.error("Fetching issues count failed", e, {
                teamId: this.id
            });
            return
        }
    }
    findWorkflowState(e) {
        return this.states.find(n=>n.id === e || n.name.toLowerCase() === e.toLowerCase())
    }
    findEstimate(e) {
        if (!this.estimationEnabled)
            return;
        const n = Ma.valuesForType(this.issueEstimationType, this.issueEstimationAllowZero, this.issueEstimationExtended)
          , r = Ma.labelsForType(this.issueEstimationType, this.issueEstimationAllowZero, this.issueEstimationExtended).map(s=>s.toLowerCase()).indexOf(e.toLowerCase());
        return r !== -1 ? n[r] : n.find(s=>s === Number(e))
    }
    findLabel(e) {
        return this.allIssueLabels.find(n=>n.id === e || d9.labelNamesMatch(n.name, e))
    }
    findCycle(e) {
        return this.cycles.find(n=>n.id === e || n.number + "" === e || n.displayName.toLowerCase() === e.toLocaleLowerCase())
    }
    findProject(e) {
        return this.projects.find(n=>n.id === e || n.name.toLowerCase() === e.toLowerCase())
    }
    isDefaultTeamForAsksSlackChannel(e) {
        return e.id !== Pi.Asks.APP_HOME_ID && (e.autoCreateTemplateId ? !!this.templates.findById(e.autoCreateTemplateId) || Pi.Asks.generateGeneralAskTemplateIdForTeamId(this.id) === e.autoCreateTemplateId : e.teams.length > 0 && this.id === e.teams[0].id)
    }
    sortedIssueTemplates() {
        return Of(this.issueTemplates.elements, [e=>{
            var n;
            return (n = e.team) == null ? void 0 : n.name
        }
        , "sortOrder", "createdAt"], ["asc", "asc", "asc"])
    }
    save(e=!1, n) {
        return super.save(e, n)
    }
    matchInlineFind(e) {
        return ml(this.name).toLowerCase().indexOf(e) !== -1
    }
}
;
Gm.usedForPartialIndexes = !0;
let ne = Gm;
je([w()], ne.prototype, "name", void 0);
je([w()], ne.prototype, "description", void 0);
je([w()], ne.prototype, "icon", void 0);
je([w()], ne.prototype, "color", void 0);
je([xe()], ne.prototype, "keys", void 0);
je([Nt()], ne.prototype, "issues", void 0); // Team lazy references a collection of Issues
je([xe()], ne.prototype, "emailIntakeAddresses", void 0);
je([O], ne.prototype, "teamEmailIntakeAddresses", null);
je([xe()], ne.prototype, "templates", void 0);
je([O], ne.prototype, "issueTemplates", null);
je([O], ne.prototype, "documentTemplates", null);
je([O], ne.prototype, "projectTemplates", null);
je([O], ne.prototype, "allIssueTemplates", null);
je([O], ne.prototype, "allDocumentTemplates", null);
je([O], ne.prototype, "allProjectTemplates", null);
je([O], ne.prototype, "documents", null);
je([Nt()], ne.prototype, "webhooks", void 0);
je([xe()], ne.prototype, "cycles", void 0);
je([xe()], ne.prototype, "projects", void 0);
je([xe()], ne.prototype, "memberships", void 0);
je([Nt()], ne.prototype, "facets", void 0);
je([O], ne.prototype, "projectsPageFacets", null);
je([xe()], ne.prototype, "issueLabels", void 0);
je([O], ne.prototype, "allIssueLabels", null);
je([xe()], ne.prototype, "states", void 0);
je([xe()], ne.prototype, "gitAutomationTargetBranches", void 0);
je([xe()], ne.prototype, "gitAutomationStates", void 0);
je([xe()], ne.prototype, "workflowDefinitions", void 0);
je([xe()], ne.prototype, "workflowCronJobDefinitions", void 0);
je([xe()], ne.prototype, "customViews", void 0);
je([Nt()], ne.prototype, "issueImports", void 0);
je([pe(()=>ne, "teams", {
    optional: !1,
    nullable: !1
})], ne.prototype, "organization", void 0);
je([w()], ne.prototype, "key", void 0);
je([w()], ne.prototype, "cyclesEnabled", void 0);
je([w()], ne.prototype, "cycleStartDay", void 0);
je([w()], ne.prototype, "cycleDuration", void 0);
je([w()], ne.prototype, "cycleCooldownTime", void 0);
je([w()], ne.prototype, "cycleIssueAutoAssignStarted", void 0);
je([w()], ne.prototype, "cycleIssueAutoAssignCompleted", void 0);
je([w()], ne.prototype, "cycleLockToActive", void 0);
je([w({
    persistance: ee.updateOnly
})], ne.prototype, "cycleEnabledStartDate", void 0);
je([w()], ne.prototype, "upcomingCycleCount", void 0);
je([w()], ne.prototype, "timezone", void 0);
je([w()], ne.prototype, "issueOrderingNoPriorityFirst", void 0);
je([w()], ne.prototype, "inviteHash", void 0);
je([w()], ne.prototype, "issueEstimationType", void 0);
je([w()], ne.prototype, "issueEstimationAllowZero", void 0);
je([w()], ne.prototype, "issueEstimationExtended", void 0);
je([w()], ne.prototype, "setIssueSortOrderOnStateChange", void 0);
je([w()], ne.prototype, "defaultIssueEstimate", void 0);
je([Dt({
    nullable: !0
})], ne.prototype, "subscription", void 0);
je([Dt({
    nullable: !0
})], ne.prototype, "integrationsSettings", void 0);
je([w()], ne.prototype, "slackNewIssue", void 0);
je([w()], ne.prototype, "slackIssueComments", void 0);
je([w()], ne.prototype, "slackIssueStatuses", void 0);
je([w()], ne.prototype, "triageEnabled", void 0);
je([Dt({
    nullable: !0
})], ne.prototype, "triageResponsibility", void 0);
je([w()], ne.prototype, "requirePriorityToLeaveTriage", void 0);
je([Ue(()=>on, {
    nullable: !0,
    indexed: !0
})], ne.prototype, "triageIssueState", void 0);
je([Ue(()=>on, {
    nullable: !0,
    indexed: !0
})], ne.prototype, "defaultIssueState", void 0);
je([Ue(()=>On, {
    nullable: !0,
    indexed: !0
})], ne.prototype, "defaultTemplateForMembers", void 0);
je([Ue(()=>On, {
    nullable: !0,
    indexed: !0
})], ne.prototype, "defaultTemplateForNonMembers", void 0);
je([Ue(()=>On, {
    nullable: !0,
    indexed: !0
})], ne.prototype, "defaultProjectTemplate", void 0);
je([w()], ne.prototype, "private", void 0);
je([w({
    persistance: ee.updateOnly
})], ne.prototype, "scimManaged", void 0);
je([w()], ne.prototype, "groupIssueHistory", void 0);
je([w()], ne.prototype, "autoClosePeriod", void 0);
je([w()], ne.prototype, "autoArchivePeriod", void 0);
je([Ue(()=>on, {
    nullable: !0,
    indexed: !0
})], ne.prototype, "autoCloseState", void 0);
je([Ue(()=>on, {
    nullable: !0,
    indexed: !0
})], ne.prototype, "markedAsDuplicateWorkflowState", void 0);
je([w()], ne.prototype, "joinByDefault", void 0);
je([O], ne.prototype, "isScimManaged", null);
je([O], ne.prototype, "users", null);
je([O], ne.prototype, "activeUsers", null);
je([O], ne.prototype, "activeProjects", null);
je([O], ne.prototype, "owners", null);
je([O], ne.prototype, "activeStates", null);
je([O], ne.prototype, "backlogStates", null);
je([O], ne.prototype, "startedStates", null);
je([O], ne.prototype, "activeIssues", null);
je([O], ne.prototype, "unsnoozedTriageIssues", null);
je([O], ne.prototype, "defaultActiveState", null);
je([O], ne.prototype, "defaultBacklogState", null);
je([O], ne.prototype, "defaultCanceledState", null);
je([O], ne.prototype, "activeCycle", null);
je([O], ne.prototype, "previousCycle", null);
ne = je([We("Team")], ne);
function $t(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const Km = class Km extends at {
    getFavorite() {
        return this.favorite ?? this.store.user.favorites.find(e=>e.predefinedViewTeam === this.team && this.favoriteViewType === e.predefinedViewType)
    }
    get numberName() {
        return `Cycle ${this.displayNumber}`
    }
    get displayName() {
        return this.name ? this.name : this.numberName
    }
    get displayNumber() {
        if (!this.name)
            return this.number;
        const e = l9.parseCycleNameAndNumber(this.name);
        if (!e)
            return this.number;
        const n = new Date().getFullYear();
        return e.number > n - 5 && e.number < n + 5 ? this.number : e.number
    }
    get shortCycleName() {
        return this.displayNumber === this.number && this.name && this.name !== `Cycle ${this.displayNumber}` ? this.displayName : `${this.displayNumber}`
    }
    get identifier() {
        return `${this.number}`
    }
    get statusTitle() {
        return this.isActive ? "Current" : this.isNext ? "Upcoming" : this.isPlanned ? "Planned" : "Completed"
    }
    get weekDaysLeft() {
        const e = pi(be.MINUTE);
        let n = this.calendarDaysLeft;
        const r = Math.floor(n / 7);
        n -= r * 7;
        let s = r * 5;
        for (let i = 0; i < n; i++) {
            const a = new Date(e + i * be.DAY).getDay();
            a !== 0 && a !== 6 && (s += 1)
        }
        return s
    }
    get calendarDaysLeft() {
        if (this.isCompleted || this.isPlanned)
            return 0;
        const e = Math.ceil((this.endsAt.getTime() - pi(be.MINUTE)) / be.DAY);
        return e <= 0 ? 0 : e
    }
    get progress() {
        return this.totalEstimatePoints === 0 ? 0 : Math.min(1, this.progressEstimatePoints / this.totalEstimatePoints)
    }
    get capacityFilled() {
        const e = this.team.cycleVelocity;
        return this.totalEstimatePoints / e.velocity
    }
    get inProgressEstimatePoints() {
        return this.useHistoricComputations ? this.inProgressScopeHistory[this.inProgressScopeHistory.length - 1] || 0 : er.inProgressEstimatePoints(this.issues.elements)
    }
    get completedEstimatePoints() {
        return this.useHistoricComputations ? this.completedScopeHistory[this.completedScopeHistory.length - 1] || 0 : er.completedEstimatePoints(this.issues.elements)
    }
    get progressEstimatePoints() {
        return this.useHistoricComputations ? this.completedScopeHistory[this.completedScopeHistory.length - 1] || 0 : er.progressEstimatePoints(this.issues.elements)
    }
    get totalEstimatePoints() {
        return this.useHistoricComputations ? this.scopeHistory[this.scopeHistory.length - 1] || 0 : er.totalEstimatePoints(this.issues.elements.concat(this.uncompletedIssuesUponClose.elements))
    }
    get hasStartedLine() {
        return this.inProgressScopeHistory.length > 0 || this.startsAt > new Date("2022-08-18")
    }
    get openIssues() {
        return this.issues.filter(e=>e.state.type === ye.backlog || e.state.type === ye.unstarted || e.state.type === ye.started)
    }
    get completedIssues() {
        return this.issues.filter(e=>e.state.type === ye.completed)
    }
    get canceledIssues() {
        return this.issues.filter(e=>e.state.type === ye.canceled)
    }
    get progressPercent() {
        return Math.round(this.progress * 100)
    }
    get progressText() {
        return this.progressPercent + "%"
    }
    get dates() {
        return this.startsAt > GA(new Date(pi(be.MINUTE)), 1) ? Mu(this.displayedStartsAt) + " - " + Mu(this.displayedEndsAt) : E9(this.displayedStartsAt) + " - " + E9(this.displayedEndsAt)
    }
    get isPlanned() {
        return new Date(pi(be.MINUTE)) < this.startsAt && !this.completedAt
    }
    get formattedStartDate() {
        return Mu(this.displayedStartsAt)
    }
    get formattedEndDate() {
        return Mu(this.displayedEndsAt)
    }
    get isNext() {
        return this.team.upcomingCycle(0) === this
    }
    get isPrevious() {
        return this.team.previousCycle === this
    }
    get isPast() {
        return this.completedAt !== void 0
    }
    get isFuture() {
        return this.startsAt >= new Date(pi(be.MINUTE))
    }
    get isActive() {
        return this.team.activeCycle === this
    }
    get isCompleted() {
        return this.completedAt !== void 0
    }
    get isInCooldown() {
        if (!this.isCompleted)
            return !1;
        const e = this.nextCycle;
        if (!e)
            return !1;
        const n = new Date;
        return n > this.endsAt && n < e.startsAt
    }
    get previousCycle() {
        const e = this.team.cycles.indexOf(this);
        return e >= 0 ? this.team.cycles.elements[e + 1] : void 0
    }
    get nextCycle() {
        const e = this.team.cycles.indexOf(this);
        return e >= 0 ? this.team.cycles.elements[e - 1] : void 0
    }
    get displayedStartsAt() {
        return this.convertTeamMidnightToLocal(this.startsAt)
    }
    get actualLocalEndsAt() {
        return this.convertTeamMidnightToLocal(this.endsAt)
    }
    get displayedEndsAt() {
        return Sd(this.convertTeamMidnightToLocal(this.endsAt), {
            minutes: 1
        })
    }
    constructor(e=!0) {
        super(e),
        this.issues = new Et(re,this,"cycleId",new de("sortOrder")), // reference collection as issue
        this.uncompletedIssuesUponClose = new Et(re),
        this.issueCountHistory = [],
        this.completedIssueCountHistory = [],
        this.scopeHistory = [],
        this.completedScopeHistory = [],
        this.inProgressScopeHistory = [],
        this.toggleFavorite = ()=>{
            const n = this.getFavorite();
            if (n)
                return n.delete(),
                !1;
            {
                const r = Rt.create(this.favoriteViewType ? {
                    predefinedViewTeam: this.team,
                    predefinedViewType: this.favoriteViewType
                } : {
                    reference: this
                });
                return r.save(!0),
                r
            }
        }
        ,
        e && this.makeObservable()
    }
    get favoriteViewType() {
        return this.isActive ? S4.activeCycle : this.isNext ? S4.upcomingCycle : void 0
    }
    get useHistoricComputations() {
        return !(!this.completedAt || this.completedScopeHistory.length === 0 || this.completedIssueCountHistory.length === 0 || this.completedScopeHistory[this.completedScopeHistory.length - 1] === 0 && this.completedIssueCountHistory[this.completedIssueCountHistory.length - 1] > 0)
    }
    convertTeamMidnightToLocal(e) {
        const n = C5()
          , r = U1.getOffset(n) || 0
          , s = U1.getOffset(this.team.timezone) || 0;
        return r === s ? e.nearestMidnight() : Sd(e, {
            hours: r - s
        }).nearestMidnight()
    }
}
;
Km.usedForPartialIndexes = !0;
let ct = Km;
$t([w()], ct.prototype, "number", void 0);
$t([w()], ct.prototype, "name", void 0);
$t([w()], ct.prototype, "description", void 0);
$t([w({
    serializer: bt
})], ct.prototype, "startsAt", void 0);
$t([w({
    serializer: bt
})], ct.prototype, "endsAt", void 0);
$t([w({
    serializer: bt
})], ct.prototype, "completedAt", void 0);
$t([pe(()=>ne, "cycles", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], ct.prototype, "team", void 0);
$t([Dt({
    nullable: !0
})], ct.prototype, "favorite", void 0);
$t([Nt()], ct.prototype, "issues", void 0);
$t([ii(()=>re, void 0, {
    persistance: ee.none,
    onDelete: "NO ACTION",
    indexed: !0,
    lazy: !0
})], ct.prototype, "uncompletedIssuesUponClose", void 0);
$t([w()], ct.prototype, "issueCountHistory", void 0);
$t([w()], ct.prototype, "completedIssueCountHistory", void 0);
$t([w()], ct.prototype, "scopeHistory", void 0);
$t([w()], ct.prototype, "completedScopeHistory", void 0);
$t([w()], ct.prototype, "inProgressScopeHistory", void 0);
$t([O], ct.prototype, "numberName", null);
$t([O], ct.prototype, "displayName", null);
$t([O], ct.prototype, "displayNumber", null);
$t([O], ct.prototype, "statusTitle", null);
$t([O], ct.prototype, "weekDaysLeft", null);
$t([O], ct.prototype, "calendarDaysLeft", null);
$t([O], ct.prototype, "progress", null);
$t([O], ct.prototype, "capacityFilled", null);
$t([O], ct.prototype, "inProgressEstimatePoints", null);
$t([O], ct.prototype, "completedEstimatePoints", null);
$t([O], ct.prototype, "progressEstimatePoints", null);
$t([O], ct.prototype, "totalEstimatePoints", null);
$t([O], ct.prototype, "hasStartedLine", null);
$t([O], ct.prototype, "openIssues", null);
$t([O], ct.prototype, "completedIssues", null);
$t([O], ct.prototype, "canceledIssues", null);
$t([O], ct.prototype, "dates", null);
$t([O], ct.prototype, "isPlanned", null);
$t([O], ct.prototype, "formattedStartDate", null);
$t([O], ct.prototype, "formattedEndDate", null);
$t([O], ct.prototype, "isInCooldown", null);
$t([O], ct.prototype, "previousCycle", null);
$t([O], ct.prototype, "nextCycle", null);
ct = $t([We("Cycle")], ct);
function tr(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Rt extends It {
    get isActive() {
        const e = (qe.isEnabled(qe.initiatives) ? this.initiative : this.roadmap) || this.customView || this.document || this.issue || this.project || this.facet || this.cycle || this.label || this.user || this.folderName || this.predefinedViewTeam && this.predefinedViewType
          , n = e instanceof at && e.isClone;
        return e !== void 0 && !n
    }
    moveFromFolder() {
        this.parent = void 0
    }
    moveToFolder(e) {
        if (e.type !== "folder")
            throw new Error("Favorite item as a folder should have type=folder");
        this.parent = e
    }
    static createFolder(e) {
        const n = new Rt
          , r = Wr().user;
        return n.owner = r,
        n.sortOrder = ur.firstSortOrder(r.activeFavorites, "sortOrder"),
        n.folderName = e.folderName,
        n.type = os.folder,
        n
    }
    static create(e) {
        const n = Rt.createEmpty()
          , r = Wr().user;
        return n.owner = r,
        n.sortOrder = ur.firstSortOrder(r.activeFavorites, "sortOrder"),
        e.predefinedViewTeam && e.predefinedViewType ? (n.type = os.predefinedView,
        n.predefinedViewTeam = e.predefinedViewTeam,
        n.predefinedViewType = e.predefinedViewType) : e.reference instanceof ct ? (n.type = os.cycle,
        n.cycle = e.reference) : e.reference instanceof Ut ? (n.type = os.label,
        n.label = e.reference) : e.reference instanceof re ? (n.type = os.issue,
        n.issue = Qn.wrap(e.reference)) : e.reference instanceof ie ? (n.type = os.project,
        n.project = e.reference,
        n.projectTab = e.projectTab) : e.reference instanceof cn ? (n.type = os.roadmap,
        n.roadmap = e.reference) : e.reference instanceof ot ? (n.type = os.initiative,
        n.initiative = e.reference,
        n.initiativeTab = e.initiativeTab) : e.reference instanceof Ke ? (n.type = os.customView,
        n.customView = e.reference) : e.reference instanceof Kt ? (n.type = os.document,
        n.document = e.reference) : e.reference instanceof K ? (n.type = os.user,
        n.user = e.reference) : e.reference instanceof kn ? (n.type = os.facet,
        n.facet = e.reference) : e.reference !== void 0 && (e.reference,
        void 0),
        e.parent && (n.parent = e.parent),
        n
    }
    constructor(e=!0) {
        super(e),
        this.children = new te,
        e && this.makeObservable()
    }
}
tr([w({
    persistance: ee.none
})], Rt.prototype, "type", void 0);
tr([pe(()=>Rt, "children", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "parent", void 0);
tr([xe()], Rt.prototype, "children", void 0);
tr([w()], Rt.prototype, "folderName", void 0);
tr([w()], Rt.prototype, "sortOrder", void 0);
tr([kl(()=>re, "favorite", {
    optional: !0,
    nullable: !1,
    cascadeHydration: !0,
    indexed: !0
})], Rt.prototype, "issue", void 0);
tr([Ue(()=>ne, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "predefinedViewTeam", void 0);
tr([w()], Rt.prototype, "predefinedViewType", void 0);
tr([pe(()=>ie, "favorites", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "project", void 0);
tr([w()], Rt.prototype, "projectTab", void 0);
tr([Dt(()=>kn, "favorite", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "facet", void 0);
tr([Dt(()=>ct, "favorite", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "cycle", void 0);
tr([Dt(()=>Ke, "favorite", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "customView", void 0);
tr([Dt(()=>Kt, "favorite", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "document", void 0);
tr([Dt(()=>cn, "favorite", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "roadmap", void 0);
tr([pe(()=>ot, "favorites", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "initiative", void 0);
tr([w()], Rt.prototype, "initiativeTab", void 0);
tr([Dt(()=>Ut, "favorite", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Rt.prototype, "label", void 0);
tr([Dt(()=>K, "favorite", {
    optional: !0,
    nullable: !1
})], Rt.prototype, "user", void 0);
tr([pe(()=>K, "favorites", {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], Rt.prototype, "owner", void 0);
tr([O], Rt.prototype, "isActive", null);
Rt = tr([We("Favorite")], Rt);
class jte extends te {
    get elements() {
        return super.elements.filter(e=>e.team ? !0 : (this.errorReported || (this.errorReported = !0,
        F.error("User had TeamMembership without Team", void 0, {
            membershipId: e.id,
            teamId: e.teamId
        })),
        !1))
    }
    constructor(...e) {
        super(...e),
        this.errorReported = !1
    }
}
async function Mte(t, e) {
    const n = Mt.gql`
    mutation UserDemoteAdmin($id: String!) {
      userDemoteAdmin(id: $id) {
        success
      }
    }
  `;
    return t.mutate(n, e)
}
async function Tte(t, e) {
    const n = Mt.gql`
    mutation UserDemoteMember($id: String!) {
      userDemoteMember(id: $id) {
        success
      }
    }
  `;
    return t.mutate(n, e)
}
async function Lte(t, e) {
    const n = Mt.gql`
    mutation UserPromoteAdmin($id: String!) {
      userPromoteAdmin(id: $id) {
        success
      }
    }
  `;
    return t.mutate(n, e)
}
async function Ote(t, e) {
    const n = Mt.gql`
    mutation UserPromoteMember($id: String!) {
      userPromoteMember(id: $id) {
        success
      }
    }
  `;
    return t.mutate(n, e)
}
async function Rte(t, e) {
    const n = Mt.gql`
    mutation UserSuspend($id: String!) {
      userSuspend(id: $id) {
        success
      }
    }
  `;
    return t.mutate(n, e)
}
async function Pte(t, e) {
    const n = Mt.gql`
    mutation UserUnsuspend($id: String!) {
      userUnsuspend(id: $id) {
        success
      }
    }
  `;
    return t.mutate(n, e)
}
function w5(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Y1 extends at {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
w5([pe(()=>K, "calendarEvents", {
    optional: !1,
    nullable: !1
})], Y1.prototype, "user", void 0);
w5([w({
    serializer: bt
})], Y1.prototype, "startsAt", void 0);
w5([w({
    serializer: bt
})], Y1.prototype, "endsAt", void 0);
w5([w()], Y1.prototype, "type", void 0);
Y1 = w5([We("CalendarEvent")], Y1);
function st(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const lv = be.MINUTE * 5
  , $te = be.HOUR * 2
  , A3 = class A3 extends at { // A3 or K is "User"
    get initials() {
        return d_(this.name)
    }
    get isMe() {
        return this === he.store.user
    }
    get firstName() {
        return this.name.split(" ").shift() || this.name
    }
    get teams() {
        return te.of(this.teamMemberships.map(e=>e.team))
    }
    get nonMemberTeams() {
        return this.organization.accessibleTeams.filter(e=>!this.memberOf(e))
    }
    memberOf(e) {
        return !!this.teamMemberships.find(n=>n.team === e)
    }
    get canJoinAnotherTeam() {
        return this.organization.accessibleTeams.length > this.teamMemberships.length
    }
    get unreadNotificationCount() {
        const e = this.notifications.filter(s=>{
            var i, a, o, l, d, u, h, f, p, m;
            return !(s.isHydrated() && ((i = s.comment) != null && i.id && !((a = s.comment) != null && a.value) || (o = s.document) != null && o.id && !s.document || (l = s.issue) != null && l.id && !((d = s.issue) != null && d.value) || (u = s.initiative) != null && u.id && !s.initiative || (h = s.oauthClientApproval) != null && h.id && !s.oauthClientApproval || (f = s.project) != null && f.id && !s.project || (p = s.projectUpdate) != null && p.id && !s.projectUpdate || (m = s.projectMilestone) != null && m.id && !s.projectMilestone))
        }
        )
          , n = new Set;
        let r = 0;
        return e.forEach(s=>{
            if (!s.readAt && !s.snoozedUntilAt) {
                const i = s.groupingEntityId;
                n.has(i) || (r++,
                n.add(i))
            }
        }
        ),
        r
    }
    get isNewInboxBehaviorEnabled() {
        return qe.isEnabled(qe.newInboxBehavior)
    }
    get activeFavorites() {
        return this.favorites.filter(e=>e.isActive)
    }
    get hasFavoriteFolders() {
        return this.activeFavorites.some(e=>e.type === os.folder)
    }
    get isAdmin() {
        return (this.developerUserRoleOverrideValue || this.role) === Cr.admin
    }
    get guest() {
        return (this.developerUserRoleOverrideValue || this.role) === Cr.guest
    }
    get developerUserRoleOverrideValue() {
        return this.isMe && this.settings ? this.settings.developerUserRoleOverrideValue : void 0
    }
    get unsafeUserRole() {
        return this.role
    }
    get isUser() {
        return !this.isAdmin && !this.guest
    }
    setRole(e) {
        if (this.store) {
            if (e === Cr.admin && this.role === Cr.user)
                return Lte(this.store.graphQLClient, {
                    id: this.id
                });
            if (e === Cr.user && this.role === Cr.admin)
                return Mte(this.store.graphQLClient, {
                    id: this.id
                });
            if (e === Cr.user && this.role === Cr.guest)
                return Ote(this.store.graphQLClient, {
                    id: this.id
                });
            if (e === Cr.guest && this.role === Cr.user)
                return Tte(this.store.graphQLClient, {
                    id: this.id
                })
        }
    }
    get isActive() {
        return this.active
    }
    setActive() {
        if (this.store)
            return Pte(this.store.graphQLClient, {
                id: this.id
            })
    }
    setDisabled() {
        if (this.store)
            return Rte(this.store.graphQLClient, {
                id: this.id
            })
    }
    get isSuspended() {
        return !this.isActive && this.disableReason && [ba.adminSuspended, ba.downgraded].includes(this.disableReason)
    }
    get isDowngraded() {
        return !this.isActive && this.disableReason === ba.downgraded
    }
    get hasLeftWorkspace() {
        return !this.isActive && this.disableReason === ba.leftWorkspace
    }
    get isSuperuser() {
        return this.guest && !this.developerUserRoleOverrideValue ? !1 : E0.superUserDomains.includes(this.domain) && E0.superUserUrlKeys.includes(this.organization.urlKey)
    }
    get canInviteUsers() {
        return this.organization.scimEnabled || this.guest ? !1 : this.isUser ? this.organization.allowMembersToInvite : !0
    }
    get canManageInviteLink() {
        return !(!this.isAdmin || this.organization.scimEnabled || this.organization.samlEnabled || this.organization.createdAt < $K)
    }
    get hasMultipleWorkspaces() {
        var e;
        return (((e = C3().users) == null ? void 0 : e.length) || 0) > 1
    }
    get disabledReasonExplanation() {
        switch (this.disableReason) {
        case ba.adminSuspended:
            return "User suspended by workspace admin.";
        case ba.downgraded:
            return "Guest user suspended due to workspace subscription downgrade.";
        case ba.leftWorkspace:
            return "User left workspace.";
        case ba.notInGoogleHostedDomain:
            return "User disabled as email does not belong to the Google workspace.";
        case void 0:
            return "";
        default:
            return this.disableReason,
            ""
        }
    }
    get groupedAccessibleViews() {
        return [this.customViews.elements.filter(e=>!e.shared), Gi(this.teams.reduce((e,n)=>e.concat(n.customViews.filter(r=>r.shared).elements), []), e=>e.name.toLowerCase()), this.organization.customViews.elements.filter(e=>e.shared)]
    }
    get presence() {
        if (this.isMe)
            return Bi.online;
        pi(lv / 4);
        const e = this.lastUserInteraction && this.lastUserInteraction.getTime();
        return !e || e < Date.now() - $te ? Bi.offline : e > Date.now() - lv ? Bi.online : Bi.away
    }
    get isOutOfOffice() {
        const e = this.outOfOfficeIntervalAt(new Date);
        return !!(e && fo(e.end, new Date) > $u.LEAVING_OOO_THRESHOLD_HOURS)
    }
    get defaultTeamForIssues() {
        var n;
        const e = ((n = this.teamMemberships.first) == null ? void 0 : n.team) ?? this.organization.accessibleTeams.first;
        if (!e)
            throw new Error("User has no accessible teams");
        return e
    }
    outOfOfficeIntervalAt(e) {
        const n = this.calendarEvents.filter(r=>r.type === D4.outOfOffice).elements;
        return $u.getEventsIntervalAtDate(e, n)
    }
    get outOfOfficeUntil() {
        const e = this.outOfOfficeIntervalAt(new Date);
        return e ? new Date(e == null ? void 0 : e.end) : void 0
    }
    get outOfOfficeUntilFormatted() {
        var n;
        const e = (n = this.outOfOfficeUntil) == null ? void 0 : n.toTimelessDate();
        return e ? PK.formatAbsoluteDate(e, "E, MMM d") : void 0
    }
    get outOfOfficeStatusFormatted() {
        if (this.isMe)
            return;
        pi(be.MINUTE * 15);
        const e = this.calendarEvents.filter(r=>r.type === D4.outOfOffice).elements
          , n = $u.humanizeEventsInterval(new Date, e, this.timezone);
        return n ? "Away " + n : void 0
    }
    get allowSessionRecording() {
        return !!(ft.COUNTRY_CODE === "US" && this.createdDaysAgo <= 1 && this.organization.isFreePlan && this.organization.users.length <= 10 && this.organization.createdDaysAgo <= 2)
    }
    get createdDaysAgo() {
        return s5(new Date, this.createdAt)
    }
    showOnboarding(e) {
        return e < 2 && !this.hasMultipleWorkspaces && this.settings.getFlag(Rd.completedOnboarding) === 0
    }
    async canSkipNetworkHydration(e) { // e for the referenced model's class
        return await this.store.syncClient.hasModelsForPartialIndexValues(Me.getClassName(e), this.organization.accessibleTeams.map(n=>Zn.createPartialIndexValue({
            modelClass: ne,
            syncGroup: n.id
        })), {
            requireAll: !0
        })
    }
    get domain() {
        return c9.parseDomain(this.email)
    }
    constructor(e=!0) {
        super(e),
        this.name = "",
        this.displayName = "",
        this.email = "",
        this.notifications = new te,
        this.reminders = new te,
        this.pushSubscriptions = new te,
        this.apiKeys = new te,
        this.assignedIssues = new Et(re,this,"assigneeId",void 0,{ // Assigned issues is a LazyReferenceCollection of User.
            canSkipNetworkHydration: ()=>this.canSkipNetworkHydration(re) // Tell if can skip network hydration of "Issue".
        }),
        this.createdIssues = new Et(re,this,"creatorId",void 0,{
            canSkipNetworkHydration: ()=>this.canSkipNetworkHydration(re)
        }),
        this.calendarEvents = new Et(Y1,this,"userId",new de("startsAt","asc"),{}),
        this.subscribedIssues = new Et(re,this,"subscriberIds",void 0,{
            canSkipNetworkHydration: ()=>this.canSkipNetworkHydration(re)
        }),
        this.facets = new Et(kn,this,"creatorId"),
        this.issueDrafts = new te(new de("updatedAt","desc")),
        this.drafts = new te(new de("updatedAt","desc")),
        this.issueImports = new Et(Rn,this,"creatorId"),
        this.favorites = new te(new de("sortOrder")),
        this.diaryEntries = new te(new de("date","desc")),
        this.subscriptions = new te(new de("createdAt")),
        this.teamMemberships = new jte(new de("sortOrder")),
        this.customViews = new te(new de("name")),
        this.roadmaps = new te(new de("name")),
        this.initiatives = new te(new de("sortOrder")),
        this.activities = new te(new de("updatedAt","asc")),
        this.isAnonymous = !1,
        this.toggleFavorite = ()=>{
            if (this.favorite)
                return this.favorite.delete(),
                !1;
            {
                const n = Rt.create({
                    reference: this
                });
                return n.save(!0),
                n
            }
        }
        ,
        e && this.makeObservable()
    }
}
;
A3.usedForPartialIndexes = !0,
A3.suspendedUserFilterMatchValue = "____suspended____";
let K = A3;
st([w()], K.prototype, "name", void 0);
st([w()], K.prototype, "displayName", void 0);
st([w()], K.prototype, "email", void 0);
st([w()], K.prototype, "avatarUrl", void 0);
st([w()], K.prototype, "inviteHash", void 0);
st([w()], K.prototype, "mobileBeta", void 0);
st([pe(()=>he, "users", {
    optional: !1,
    nullable: !1
})], K.prototype, "organization", void 0);
st([xe()], K.prototype, "notifications", void 0);
st([xe()], K.prototype, "reminders", void 0);
st([xe()], K.prototype, "pushSubscriptions", void 0);
st([xe()], K.prototype, "apiKeys", void 0);
st([Nt()], K.prototype, "assignedIssues", void 0); // Lazy reference to issues. Note that Nt() has no parameter!
st([Nt()], K.prototype, "createdIssues", void 0);
st([Nt()], K.prototype, "calendarEvents", void 0);
st([Nt()], K.prototype, "subscribedIssues", void 0);
st([Nt()], K.prototype, "facets", void 0);
st([xe()], K.prototype, "issueDrafts", void 0);
st([xe()], K.prototype, "drafts", void 0);
st([Nt()], K.prototype, "issueImports", void 0);
st([xe()], K.prototype, "favorites", void 0);
st([xe()], K.prototype, "diaryEntries", void 0);
st([Dt({
    nullable: !0
})], K.prototype, "favorite", void 0);
st([xe()], K.prototype, "subscriptions", void 0);
st([Dt({
    nullable: !0
})], K.prototype, "subscription", void 0);
st([Dt({
    nullable: !0
})], K.prototype, "settings", void 0);
st([xe()], K.prototype, "teamMemberships", void 0);
st([xe()], K.prototype, "customViews", void 0);
st([xe()], K.prototype, "roadmaps", void 0);
st([xe()], K.prototype, "initiatives", void 0);
st([xe()], K.prototype, "activities", void 0);
st([w()], K.prototype, "disableReason", void 0);
st([w({
    persistance: ee.none,
    serializer: bt
})], K.prototype, "lastSeen", void 0);
st([w()], K.prototype, "description", void 0);
st([w()], K.prototype, "statusEmoji", void 0);
st([w()], K.prototype, "statusLabel", void 0);
st([w({
    serializer: bt
})], K.prototype, "statusUntilAt", void 0);
st([w()], K.prototype, "timezone", void 0);
st([w()], K.prototype, "externalUserMapping", void 0);
st([w()], K.prototype, "userAccountId", void 0);
st([g_()], K.prototype, "currentlyViewingDocumentContentId", void 0);
st([g_({
    serializer: bt
})], K.prototype, "lastUserInteraction", void 0);
st([rt], K.prototype, "toggleFavorite", void 0);
st([O], K.prototype, "canJoinAnotherTeam", null);
st([O], K.prototype, "unreadNotificationCount", null);
st([O], K.prototype, "isNewInboxBehaviorEnabled", null);
st([O], K.prototype, "activeFavorites", null);
st([O], K.prototype, "hasFavoriteFolders", null);
st([O], K.prototype, "groupedAccessibleViews", null);
st([O], K.prototype, "presence", null);
st([O], K.prototype, "outOfOfficeStatusFormatted", null);
st([O], K.prototype, "allowSessionRecording", null);
st([O], K.prototype, "createdDaysAgo", null);
st([w()], K.prototype, "role", void 0);
st([w()], K.prototype, "active", void 0);
K = st([We("User")], K);
function ca(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const ad = class ad extends It {
    static createFromDraftAttachment(e, n) {
        const r = ad.create({
            url: e.url,
            title: e.title,
            issue: n
        });
        return r.save(),
        r
    }
    get sourceType() {
        return f0.getSourceType(this)
    }
    get isPullRequest() {
        return (this.sourceType === G.gitlab || this.sourceType === G.github) && !!this.source && "pullRequestId"in this.source
    }
    get isJiraIssue() {
        return this.sourceType === G.jira
    }
    get syncErrorCommentId() {
        var e, n;
        if (((e = this == null ? void 0 : this.source) == null ? void 0 : e.type) === G.jira)
            return (n = this.source) == null ? void 0 : n.syncErrorCommentId
    }
    get isSynced() {
        return this.isSyncedGithubIssue || this.isSyncedJiraIssue || !!this.syncedSlackComment()
    }
    get isSyncedJiraIssue() {
        return !!(this.isJiraIssue && this.issue.externalEntityRelations.find(e=>e.externalEntityType === x4.jiraIssue))
    }
    get isSyncedGithubIssue() {
        const e = Pi.GitHub.parseIssueUrl(this.url);
        if (!e)
            return !1;
        const {owner: n, repo: r, number: s} = e;
        return !!(this.isGithubIssue && this.issue.externalEntityRelations.find(i=>{
            var a, o, l, d, u, h;
            return i.externalEntityType === x4.githubIssue && ((o = (a = i.metadata) == null ? void 0 : a.githubIssueMetadata) == null ? void 0 : o.number) === s && ((d = (l = i.metadata) == null ? void 0 : l.githubIssueMetadata) == null ? void 0 : d.owner) === n && ((h = (u = i.metadata) == null ? void 0 : u.githubIssueMetadata) == null ? void 0 : h.repo) === r
        }
        ))
    }
    get isGithubIssue() {
        return this.sourceType === G.github && !this.isPullRequest
    }
    get isGithubCommit() {
        return this.sourceType === G.githubCommit
    }
    get pullRequestAttachment() {
        if (this != null && this.isPullRequest)
            return this.metadata
    }
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
    static create(e) {
        const {url: n, title: r, issue: s} = e
          , i = ad.createEmpty();
        i.issue = s,
        i.url = n,
        i.title = r,
        i.metadata = {
            title: r,
            messages: []
        };
        const o = s.team.organization.integrations.filter(u=>Pi.AttachmentLinkIntegrations.find(h=>h === u.service) !== void 0)
          , l = o.reduce((u,h)=>{
            var f, p;
            return h.service === G.gitlab && (u[h.service] = (p = (f = h.settings) == null ? void 0 : f.gitLab) == null ? void 0 : p.url),
            u
        }
        , {})
          , d = Pi.findIntegrationMatches(n, o.map(u=>u.service), l);
        if (d != null && d.match) {
            const {match: u, integrationType: h} = d;
            switch (h) {
            case G.discord:
                const [f,p] = u;
                i.source = {
                    type: G.discord,
                    channelId: f,
                    messageId: p
                };
                break;
            case G.front:
                i.source = {
                    type: G.front,
                    conversationId: u
                };
                break;
            case G.intercom:
                i.source = {
                    type: G.intercom
                };
                break;
            case G.zendesk:
                i.source = {
                    type: G.zendesk
                };
                break;
            case G.gitlab:
                i.source = {
                    type: h,
                    pullRequestId: String(u.number)
                };
                break;
            case G.github:
                {
                    d.type === "pr" ? i.source = {
                        type: h,
                        pullRequestId: String(u.number)
                    } : qe.isEnabled(qe.gitHubSync) && (i.source = {
                        type: h
                    });
                    break
                }
            }
        }
        return i
    }
    createMutation(e) {
        var s;
        let n;
        function r(i, a) {
            const o = Object.entries(a).map(([l,d])=>`${l}: ${JSON.stringify(d)}`).join(", ");
            return `${i}(${o}) { lastSyncId }`
        }
        switch ((s = this.source) == null ? void 0 : s.type) {
        case G.discord:
            {
                n = r("attachmentLinkDiscord", {
                    id: this.id,
                    messageId: this.source.messageId,
                    channelId: this.source.channelId,
                    url: this.url,
                    issueId: this.issue.id,
                    title: this.title
                });
                break
            }
        case G.front:
            {
                const i = this.source.conversationId;
                if (!i)
                    throw new Error("invariant: expected conversationId for front");
                n = r("attachmentLinkFront", {
                    id: this.id,
                    issueId: this.issue.id,
                    conversationId: i,
                    title: this.title
                });
                break
            }
        case G.zendesk:
            {
                const i = Pi.Zendesk.parseTicketUrl(this.url);
                if (!i)
                    throw new Error("invariant: expected ticketId for Zendesk");
                n = r("attachmentLinkZendesk", {
                    id: this.id,
                    ticketId: i,
                    issueId: this.issue.id,
                    title: this.title
                });
                break
            }
        case G.intercom:
            {
                const i = Pi.Intercom.parseConversationUrl(this.url);
                if (!i)
                    throw new Error("invariant: expected conversationId for Intercom");
                n = r("attachmentLinkIntercom", {
                    id: this.id,
                    conversationId: i,
                    issueId: this.issue.id,
                    title: this.title
                });
                break
            }
        case G.github:
            {
                if (Pi.GitHub.parsePullRequestUrl(this.url)) {
                    n = r("attachmentLinkGitHubPR", {
                        id: this.id,
                        issueId: this.issue.id,
                        title: this.title,
                        url: this.url
                    });
                    break
                }
                if (Pi.GitHub.parseIssueUrl(this.url)) {
                    n = r("attachmentLinkGitHubIssue", {
                        id: this.id,
                        issueId: this.issue.id,
                        url: this.url
                    });
                    break
                }
                throw new Error("invariant: expected owner, repo and number for GitHub")
            }
        default:
            {
                n = r("attachmentLinkURL", {
                    url: this.url,
                    title: this.title,
                    issueId: this.issue.id,
                    id: this.id
                });
                break
            }
        }
        return this.observePropertyChanges(),
        n
    }
    syncedSlackComment() {
        return this.issue.comments.find(e=>{
            var n, r;
            return e.isRootSlackSyncedComment && ((r = (n = e.sourceMetadata) == null ? void 0 : n.slackSyncMetadata) == null ? void 0 : r.messageUrl) === this.url && !e.isRootUnsyncedSlackComment
        }
        )
    }
    formatSubtitle() {
        if (!this.subtitle)
            return this.subtitle;
        const e = (r,s,i)=>{
            const a = this.metadata[s];
            return a ? i(new Date(a)) ?? r : r
        }
        ;
        return this.subtitle.replace(/{(\w+?)__since}/gm, (r,s)=>e(r, s, Op)).replace(/{(\w+?)__relativeTimestamp}/gm, (r,s)=>e(r, s, WQ))
    }
}
;
ad.loadStrategy = dn.partial,
ad.partialLoadMode = ki.regular;
let mr = ad;
ca([w()], mr.prototype, "title", void 0);
ca([w()], mr.prototype, "subtitle", void 0);
ca([w()], mr.prototype, "url", void 0);
ca([w()], mr.prototype, "metadata", void 0);
ca([w()], mr.prototype, "source", void 0);
ca([w()], mr.prototype, "groupBySource", void 0);
ca([pe(()=>re, "attachments", {
    persistance: ee.none,
    optional: !1,
    nullable: !1,
    indexed: !0
})], mr.prototype, "issue", void 0);
ca([Dt({
    nullable: !0
})], mr.prototype, "comment", void 0);
ca([Ue(()=>K, {
    persistance: ee.none,
    nullable: !0
})], mr.prototype, "creator", void 0);
ca([w()], mr.prototype, "sourceMetadata", void 0);
mr = ca([We("Attachment")], mr);
function Yt(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const _c = class _c extends It {
    get author() {
        var e;
        return this.user ?? ((e = this.externalUser) == null ? void 0 : e.value)
    }
    get threadComments() {
        const e = this.root;
        return te.of([...new Set([e, ...e.children])])
    }
    get root() {
        return this.parent ?? this
    }
    get threadNotifications() {
        return te.of(this.threadComments.flatMap(e=>e.notifications.elements))
    }
    get parentModel() {
        var e;
        if (this.issue)
            return this.issue;
        if (this.projectUpdate)
            return this.projectUpdate;
        if ((e = this.documentContent) != null && e.value)
            return this.documentContent.value;
        throw new Error("Comment does not belong to any related model")
    }
    allowEdit(e) {
        var n, r;
        return this.user === e && ((r = (n = this.sourceMetadata) == null ? void 0 : n.slackSyncMetadata) == null ? void 0 : r.commentSource) !== k4.Slack
    }
    allowDelete(e) {
        var n, r;
        return (this.user === e || e.organization.activeSubscription !== void 0 && e.isAdmin) && (((r = (n = this.sourceMetadata) == null ? void 0 : n.slackSyncMetadata) == null ? void 0 : r.commentSource) !== k4.Slack || this.isRootUnsyncedSlackComment)
    }
    get isEmoji() {
        if (this.bodyData) {
            const e = j1.nodeFromJSON(this.bodyData)
              , {textContent: n, childCount: r} = e;
            if (r === 1) {
                const i = e.child(0);
                if (i.type.name === "paragraph" && i.childCount > 0) {
                    let a = !0;
                    if (i.content.forEach(o=>{
                        o.type.name !== "emoji" && (a = !1)
                    }
                    ),
                    a)
                        return !0
                }
            }
            return !!(e.content.content.length === 1 && e.content.content[0].isTextblock) && n.length > 0 && n.replace(oD(), "") === ""
        }
        return !1
    }
    get isResolved() {
        return !!this.resolvedAt
    }
    async markNotificationsAsRead() {
        var s, i, a, o, l, d;
        const e = this.id
          , n = (s = this.parent) == null ? void 0 : s.id
          , r = u=>{
            u.forEach(h=>{
                var f, p, m;
                (f = h.comment) != null && f.id && (((p = h.comment) == null ? void 0 : p.id) === e || ((m = h.comment) == null ? void 0 : m.id) === n) && (h.markAsRead(),
                h.save())
            }
            )
        }
        ;
        if (this.issue) {
            r(this.issue.notifications.elements);
            return
        }
        if (this.projectUpdate) {
            r(this.projectUpdate.notifications.elements);
            return
        }
        if ((i = this.documentContent) != null && i.value) {
            const u = this.documentContent.value.parentType;
            if (!u)
                return;
            switch (u) {
            case "issue":
                return;
            case "document":
                r(((a = this.documentContent.value.document) == null ? void 0 : a.notifications.elements) || []);
                return;
            case "initiative":
                r(((o = this.documentContent.value.initiative) == null ? void 0 : o.notifications.elements) || []);
                return;
            case "project":
                r(((l = this.documentContent.value.project) == null ? void 0 : l.notifications.elements) || []);
                return;
            case "projectMilestone":
                r(((d = this.documentContent.value.projectMilestone) == null ? void 0 : d.notifications.elements) || []);
                return;
            default:
                return
            }
        }
    }
    resolve(e, n) {
        this.resolvingUser = e,
        this.resolvingComment = n,
        this.save()
    }
    unresolve() {
        this.resolvedAt = null,
        this.resolvingUser = null,
        this.resolvingComment = null,
        this.save()
    }
    get bodyMarkdown() {
        return this.bodyData ? Po.serialize(this.bodyData) : ""
    }
    get bodyTextContent() {
        if (this.bodyData) {
            const e = j1.nodeFromJSON(this.bodyData);
            return gF(e)
        }
        return ""
    }
    get notificationText() {
        if (this.bodyData) {
            const e = j1.nodeFromJSON(this.bodyData);
            return $N(e)
        }
    }
    get isThread() {
        return !!this.parent || this.children.length > 0
    }
    get isSlackSynced() {
        var e, n;
        return (e = this.parent) != null && e.isSlackSynced ? !0 : ((n = this.sourceMetadata) == null ? void 0 : n.slackSyncMetadata) !== void 0
    }
    get isRootSlackSyncedComment() {
        return this.isSlackSynced && this.isSyncedExternalThreadRoot
    }
    get isRootUnsyncedSlackComment() {
        var e, n;
        return this.isRootSlackSyncedComment && ((n = (e = this.sourceMetadata) == null ? void 0 : e.slackSyncMetadata) == null ? void 0 : n.unsynced) === !0
    }
    get isSyncedExternalThreadRoot() {
        var e;
        return !!((e = this.sourceMetadata) != null && e.externalSyncRoot)
    }
    get threadSubscribers() {
        return this.root.subscribers
    }
    userIsSubscribedToThread(e) {
        return this.threadSubscribers.contains(e)
    }
    async unsyncSlack(e) {
        if (!this.isRootSlackSyncedComment)
            throw new Error("Attachment is not a synced Slack thread");
        return await e.store.mutate(_c, "rootCommentUnsyncSlack", {
            id: this.id
        })
    }
    constructor(e=!0) {
        super(e),
        this.skipUpdatedAtKeys = new Set(["subscriberIds"]),
        this.reactionData = [],
        this.children = new Et(_c,this,"parentId",Fte),
        this.draftReplies = new te,
        this.externalEntityRelations = new Et(Qr,this,"commentId"),
        this.createdIssues = new Et(re,this,"sourceCommentId"),
        this.notifications = new te,
        this.subscribers = new te,
        e && this.makeObservable()
    }
    static create(e) {
        const {parentModel: n, user: r, bodyData: s, parent: i, quotedText: a} = e
          , o = _c.createEmpty();
        if (o.user = r,
        n instanceof re)
            o.issue = n;
        else if (n instanceof un)
            o.projectUpdate = n;
        else if (n instanceof en)
            o.documentContent = Qn.wrap(n);
        else
            throw new Error("Invalid entity model");
        return o.parent = i || void 0,
        o.bodyData = s,
        o.quotedText = a,
        o
    }
}
;
_c.loadStrategy = dn.partial,
_c.partialLoadMode = ki.lowPriority;
let nt = _c;
Yt([w({
    serializer: hn,
    shallowObservation: !0
})], nt.prototype, "bodyData", void 0);
Yt([w({
    serializer: bt,
    persistance: ee.none
})], nt.prototype, "editedAt", void 0);
Yt([w({
    persistance: ee.none,
    serializer: hn
})], nt.prototype, "reactionData", void 0);
Yt([pe(()=>re, "comments", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], nt.prototype, "issue", void 0); // Comment also reference an issue
Yt([Hr(()=>en, "comments", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], nt.prototype, "documentContent", void 0);
Yt([pe(()=>un, "comments", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], nt.prototype, "projectUpdate", void 0);
Yt([pe(()=>nt, "children", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], nt.prototype, "parent", void 0);
Yt([Nt()], nt.prototype, "children", void 0);
Yt([xe()], nt.prototype, "draftReplies", void 0);
Yt([Ue(()=>K, {
    nullable: !0
})], nt.prototype, "resolvingUser", void 0);
Yt([Ue(()=>nt, {
    nullable: !0,
    indexed: !0
})], nt.prototype, "resolvingComment", void 0);
Yt([w()], nt.prototype, "quotedText", void 0);
Yt([w({
    serializer: bt,
    persistance: ee.none
})], nt.prototype, "resolvedAt", void 0);
Yt([Dt(()=>mr, "comment", {
    persistance: ee.none,
    optional: !0,
    nullable: !1,
    indexed: !0
})], nt.prototype, "attachment", void 0);
Yt([Ue(()=>K, {
    persistance: ee.none,
    optional: !0,
    nullable: !1
})], nt.prototype, "user", void 0);
Yt([Nt()], nt.prototype, "externalEntityRelations", void 0);
Yt([g5(()=>qn, {
    nullable: !0,
    indexed: !0
})], nt.prototype, "externalUser", void 0);
Yt([Nt()], nt.prototype, "createdIssues", void 0);
Yt([w()], nt.prototype, "sourceMetadata", void 0);
Yt([w()], nt.prototype, "doNotSubscribeToIssue", void 0);
Yt([xe()], nt.prototype, "notifications", void 0);
Yt([ii(()=>K)], nt.prototype, "subscribers", void 0);
Yt([O], nt.prototype, "threadComments", null);
Yt([O], nt.prototype, "root", null);
Yt([O], nt.prototype, "threadNotifications", null);
Yt([O], nt.prototype, "isEmoji", null);
Yt([rt], nt.prototype, "markNotificationsAsRead", null);
Yt([rt], nt.prototype, "resolve", null);
Yt([rt], nt.prototype, "unresolve", null);
Yt([O], nt.prototype, "bodyMarkdown", null);
Yt([O], nt.prototype, "bodyTextContent", null);
Yt([O], nt.prototype, "notificationText", null);
Yt([rt], nt, "create", null);
nt = Yt([We("Comment")], nt);
const Fte = new de("createdAt");
function dt(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
var dv;
(function(t) {
    t[t.Unknown = 0] = "Unknown",
    t[t.Cycle = 1] = "Cycle"
}
)(dv || (dv = {}));
const j3 = class j3 extends at {
    get numberOfChanges() {
        var e, n, r, s, i, a, o, l;
        return [this.updatedDescription, this.issueImport !== void 0, this.attachment !== void 0, this.fromTitle !== this.toTitle, this.fromAssigneeId !== this.toAssigneeId, this.fromPriority !== this.toPriority, this.fromEstimate !== this.toEstimate, this.fromTeamId !== this.toTeamId, this.fromStateId !== this.toStateId, this.fromParentId !== this.toParentId, this.fromCycle !== this.toCycle, this.fromProjectId !== this.toProjectId, this.toConvertedProject !== void 0, this.archived !== void 0, this.trashed !== void 0, this.addedLabels.length > 0, this.removedLabels.length > 0, this.fromDueDate !== this.toDueDate, ((e = this.changes) == null ? void 0 : e.fromSlaBreachesAt) !== ((n = this.changes) == null ? void 0 : n.toSlaBreachesAt), ((r = this.changes) == null ? void 0 : r.fromSlaBreached) === !1 && ((s = this.changes) == null ? void 0 : s.toSlaBreached) === !0, ((i = this.changes) == null ? void 0 : i.toProjectMilestoneId) !== ((a = this.changes) == null ? void 0 : a.fromProjectMilestoneId), ((o = this.changes) == null ? void 0 : o.triageResponsibilityAutoAssigned) !== void 0, ((l = this.changes) == null ? void 0 : l.triageResponsibilityNotifiedUserIds) !== void 0, this.relationChanges !== void 0 && this.relationChanges.length > 0].reduce((d,u)=>u === !0 ? d + 1 : d, 0)
    }
    get actors() {
        var r, s, i;
        const e = (r = this.sourceMetadata) == null ? void 0 : r.externalUserId
          , n = e ? this.store.findById(qn, e) : void 0;
        return (((i = (s = this.changes) == null ? void 0 : s.descriptionUpdatedByIds) == null ? void 0 : i.map(a=>this.store.findById(K, a))) || [this.actor ?? n]).concrete()
    }
    get hasChanges() {
        return this.numberOfChanges > 0
    }
    get type() {
        return this.fromCycle !== this.toCycle ? 1 : 0
    }
    get isGroupable() {
        return this.numberOfChanges > 1 ? !1 : this.type === 1 ? !!this.fromCycle && !!this.toCycle : !1
    }
    constructor(e=!0) {
        super(e),
        this.addedLabels = new te,
        this.removedLabels = new te,
        e && this.makeObservable()
    }
    getUserOrExternalUserActor() {
        var n;
        if (this.actor)
            return this.actor;
        const e = (n = this.sourceMetadata) == null ? void 0 : n.externalUserId;
        return e ? this.store.findById(qn, e) : void 0
    }
}
;
j3.loadStrategy = dn.partial,
j3.partialLoadMode = ki.lowPriority;
let tt = j3;
dt([pe(()=>re, "history", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], tt.prototype, "issue", void 0);
dt([w()], tt.prototype, "actorId", void 0);
dt([Ue(()=>K, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "actor", void 0);
dt([w()], tt.prototype, "sourceMetadata", void 0);
dt([w()], tt.prototype, "updatedDescription", void 0);
dt([w()], tt.prototype, "fromTitle", void 0);
dt([w()], tt.prototype, "toTitle", void 0);
dt([w()], tt.prototype, "fromAssigneeId", void 0);
dt([Ue(()=>K, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "fromAssignee", void 0);
dt([w()], tt.prototype, "toAssigneeId", void 0);
dt([Ue(()=>K, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "toAssignee", void 0);
dt([w()], tt.prototype, "fromPriority", void 0);
dt([w()], tt.prototype, "toPriority", void 0);
dt([w()], tt.prototype, "fromTeamId", void 0);
dt([Ue(()=>ne, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "fromTeam", void 0);
dt([w()], tt.prototype, "toTeamId", void 0);
dt([Ue(()=>ne, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "toTeam", void 0);
dt([w()], tt.prototype, "fromParentId", void 0);
dt([Ue(()=>re, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "fromParent", void 0);
dt([w()], tt.prototype, "toParentId", void 0);
dt([Ue(()=>re, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "toParent", void 0);
dt([w()], tt.prototype, "fromStateId", void 0);
dt([Ue(()=>on, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "fromState", void 0);
dt([w()], tt.prototype, "toStateId", void 0);
dt([Ue(()=>on, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "toState", void 0);
dt([w()], tt.prototype, "fromCycleId", void 0);
dt([Ue(()=>ct, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "fromCycle", void 0);
dt([w()], tt.prototype, "toCycleId", void 0);
dt([Ue(()=>ct, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "toCycle", void 0);
dt([w()], tt.prototype, "fromProjectId", void 0);
dt([Ue(()=>ie, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "fromProject", void 0);
dt([w()], tt.prototype, "toProjectId", void 0);
dt([Ue(()=>ie, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "toProject", void 0);
dt([Ue(()=>ie, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "toConvertedProject", void 0);
dt([w()], tt.prototype, "fromEstimate", void 0);
dt([w()], tt.prototype, "toEstimate", void 0);
dt([w()], tt.prototype, "archived", void 0);
dt([w()], tt.prototype, "trashed", void 0);
dt([g5(()=>Rn, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "issueImport", void 0);
dt([Ue(()=>mr, {
    nullable: !0,
    onDelete: "NO ACTION"
})], tt.prototype, "attachment", void 0);
dt([ii(()=>Ut, void 0, {
    onDelete: "NO ACTION"
})], tt.prototype, "addedLabels", void 0);
dt([ii(()=>Ut, void 0, {
    onDelete: "NO ACTION"
})], tt.prototype, "removedLabels", void 0);
dt([w({
    serializer: hn,
    persistance: ee.none
})], tt.prototype, "relationChanges", void 0);
dt([w()], tt.prototype, "autoClosed", void 0);
dt([w()], tt.prototype, "autoArchived", void 0);
dt([w({
    serializer: Jo
})], tt.prototype, "fromDueDate", void 0);
dt([w({
    serializer: Jo
})], tt.prototype, "toDueDate", void 0);
dt([w({
    serializer: OO({
        fromSlaBreachesAt: {
            serializer: bt,
            nullable: !0
        },
        toSlaBreachesAt: {
            serializer: bt,
            nullable: !0
        },
        fromSlaStartedAt: {
            serializer: bt,
            nullable: !0
        },
        toSlaStartedAt: {
            serializer: bt,
            nullable: !0
        }
    }),
    shallowObservation: !0
})], tt.prototype, "changes", void 0);
dt([O], tt.prototype, "numberOfChanges", null);
dt([O], tt.prototype, "actors", null);
tt = dt([We("IssueHistory")], tt);
function uv(t) {
    return c.jsx(x, {
        ...t,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "m8.83 7 1.641.523c.974.31 2.022.302 2.991-.023l.833-.28a.5.5 0 0 1 .66.475v3.946a.5.5 0 0 1-.34.474l-1.138.385a4.77 4.77 0 0 1-2.964.03l-1.059-.334v2.054a.75.75 0 0 1-.648.743L8.704 15a.75.75 0 0 1-.743-.648l-.007-.102v-6.5a.75.75 0 0 1 .876-.74V7Zm3.874-6a2.25 2.25 0 0 1 2.25 2.25V5a.75.75 0 0 1-1.5 0V3.25a.75.75 0 0 0-.75-.75h-6.5a.75.75 0 0 0-.75.75v.775h4.491c1.09 0 1.974.883 1.974 1.973a.75.75 0 0 1-1.493.102l-.007-.102-.008-.085a.474.474 0 0 0-.38-.38l-.086-.008H3.25a.75.75 0 0 0-.743.648l-.007.102v6.475c0 .38.282.694.648.743l.102.007h2.975a.75.75 0 0 1 .102 1.493L6.225 15H3.25a2.25 2.25 0 0 1-2.245-2.096L1 12.75V6.275A2.25 2.25 0 0 1 3.096 4.03l.154-.005.706-.001L3.954 4v-.75A2.25 2.25 0 0 1 6.204 1h6.5Z"
            })
        })
    })
}
function hv(t) {
    const {relationRemoved: e, ...n} = t;
    return c.jsx(x, {
        ...n,
        color: e ? "labelFaint" : n.color,
        children: c.jsx("svg", {
            children: c.jsx("path", {
                d: "m8.88 7 1.641.523c.974.31 2.022.302 2.991-.023l.833-.28a.5.5 0 0 1 .66.475v3.946a.5.5 0 0 1-.34.474l-1.138.385a4.77 4.77 0 0 1-2.964.03l-1.059-.333v2.053a.75.75 0 0 1-1.493.102l-.007-.102v-6.5a.75.75 0 0 1 .876-.74V7ZM4.75 1h6a3.75 3.75 0 0 1 3.745 3.55l.005.2v.496a.75.75 0 0 1-1.493.101L13 5.246V4.75a2.25 2.25 0 0 0-2.096-2.245L10.75 2.5h-6a2.25 2.25 0 0 0-2.245 2.096L2.5 4.75v6.22a2.25 2.25 0 0 0 2.096 2.245l.154.005h1.306a.75.75 0 0 1 .102 1.494l-.102.006H4.75a3.75 3.75 0 0 1-3.745-3.55L1 10.97V4.75a3.75 3.75 0 0 1 3.55-3.745L4.75 1h6-6Z"
            })
        })
    })
}
function vh(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class cl extends It {
    get supportsUndoCreatedAtArguments() {
        return !0
    }
    get description() {
        var n;
        const e = (n = this.relatedIssue.value) == null ? void 0 : n.identifier;
        switch (this.type) {
        case _n.blocks:
            return `Blocked issue ${e}`.trim();
        case _n.duplicate:
            return `Merged duplicate ${e}`.trim();
        case _n.related:
            return `Related issue ${e}`.trim();
        default:
            return this.type,
            ""
        }
    }
    get inverseDescription() {
        var n;
        const e = (n = this.issue.value) == null ? void 0 : n.identifier;
        switch (this.type) {
        case _n.blocks:
            return `Blocking issue ${e}`.trim();
        case _n.duplicate:
            return `Duplicate of ${e}`.trim();
        case _n.related:
            return `Related issue ${e}`.trim();
        default:
            return this.type,
            ""
        }
    }
    get icon() {
        var e, n, r, s, i, a;
        switch (this.type) {
        case _n.blocks:
            return c.jsx(hh, {
                relationClosed: !((e = this.issue.value) != null && e.isOpen) || !((n = this.relatedIssue.value) != null && n.isOpen),
                monochrome: ((s = (r = this.issue.value) == null ? void 0 : r.state) == null ? void 0 : s.isCanceled) || ((a = (i = this.relatedIssue.value) == null ? void 0 : i.state) == null ? void 0 : a.isCanceled)
            });
        case _n.duplicate:
            return c.jsx(uv, {});
        case _n.related:
            return c.jsx(hv, {});
        default:
            return this.type,
            null
        }
    }
    get inverseIcon() {
        var e, n, r, s, i, a;
        switch (this.type) {
        case _n.blocks:
            return c.jsx(uh, {
                relationClosed: !((e = this.issue.value) != null && e.isOpen) || !((n = this.relatedIssue.value) != null && n.isOpen),
                monochrome: ((s = (r = this.issue.value) == null ? void 0 : r.state) == null ? void 0 : s.isCanceled) || ((a = (i = this.relatedIssue.value) == null ? void 0 : i.state) == null ? void 0 : a.isCanceled)
            });
        case _n.duplicate:
            return c.jsx(uv, {});
        case _n.related:
            return c.jsx(hv, {});
        default:
            return this.type,
            null
        }
    }
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
vh([w({
    enum: _n
})], cl.prototype, "type", void 0);
vh([Hr(()=>re, "relations", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], cl.prototype, "issue", void 0);
vh([Hr(()=>re, "inverseRelations", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], cl.prototype, "relatedIssue", void 0);
cl = vh([We("IssueRelation")], cl);
var Ns;
(function(t) {
    t.root = "root",
    t.parent = "parent",
    t.subIssue = "subIssue",
    t.blocking = "blocking",
    t.blocked = "blocked",
    t.notBlocked = "notBlocked",
    t.related = "related",
    t.duplicateOf = "duplicateOf",
    t.hasDuplicates = "hasDuplicates"
}
)(Ns || (Ns = {}));
function Dl(t) {
    this._maxSize = t,
    this.clear()
}
Dl.prototype.clear = function() {
    this._size = 0,
    this._values = Object.create(null)
}
;
Dl.prototype.get = function(t) {
    return this._values[t]
}
;
Dl.prototype.set = function(t, e) {
    return this._size >= this._maxSize && this.clear(),
    t in this._values || this._size++,
    this._values[t] = e
}
;
var Nte = /[^.^\]^[]+|(?=\[\]|\.\.)/g
  , hI = /^\d+$/
  , Vte = /^\d/
  , Bte = /[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g
  , Ute = /^\s*(['"]?)(.*?)(\1)\s*$/
  , Gp = 512
  , fv = new Dl(Gp)
  , pv = new Dl(Gp)
  , mv = new Dl(Gp)
  , zc = {
    Cache: Dl,
    split: U9,
    normalizePath: n7,
    setter: function(t) {
        var e = n7(t);
        return pv.get(t) || pv.set(t, function(r, s) {
            for (var i = 0, a = e.length, o = r; i < a - 1; ) {
                var l = e[i];
                if (l === "__proto__" || l === "constructor" || l === "prototype")
                    return r;
                o = o[e[i++]]
            }
            o[e[i]] = s
        })
    },
    getter: function(t, e) {
        var n = n7(t);
        return mv.get(t) || mv.set(t, function(s) {
            for (var i = 0, a = n.length; i < a; )
                if (s != null || !e)
                    s = s[n[i++]];
                else
                    return;
            return s
        })
    },
    join: function(t) {
        return t.reduce(function(e, n) {
            return e + (Kp(n) || hI.test(n) ? "[" + n + "]" : (e ? "." : "") + n)
        }, "")
    },
    forEach: function(t, e, n) {
        Hte(Array.isArray(t) ? t : U9(t), e, n)
    }
};
function n7(t) {
    return fv.get(t) || fv.set(t, U9(t).map(function(e) {
        return e.replace(Ute, "$2")
    }))
}
function U9(t) {
    return t.match(Nte) || [""]
}
function Hte(t, e, n) {
    var r = t.length, s, i, a, o;
    for (i = 0; i < r; i++)
        s = t[i],
        s && (qte(s) && (s = '"' + s + '"'),
        o = Kp(s),
        a = !o && /^\d+$/.test(s),
        e.call(n, s, o, a, i, t))
}
function Kp(t) {
    return typeof t == "string" && t && ["'", '"'].indexOf(t.charAt(0)) !== -1
}
function zte(t) {
    return t.match(Vte) && !t.match(hI)
}
function Zte(t) {
    return Bte.test(t)
}
function qte(t) {
    return !Kp(t) && (zte(t) || Zte(t))
}
const Wte = /[A-Z\xc0-\xd6\xd8-\xde]?[a-z\xdf-\xf6\xf8-\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde]|$)|(?:[A-Z\xc0-\xd6\xd8-\xde]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde](?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])|$)|[A-Z\xc0-\xd6\xd8-\xde]?(?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\xc0-\xd6\xd8-\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\d*(?:1ST|2ND|3RD|(?![123])\dTH)(?=\b|[a-z_])|\d*(?:1st|2nd|3rd|(?![123])\dth)(?=\b|[A-Z_])|\d+|(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?(?:\u200d(?:[^\ud800-\udfff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?)*/g
  , wh = t=>t.match(Wte) || []
  , kh = t=>t[0].toUpperCase() + t.slice(1)
  , Yp = (t,e)=>wh(t).join(e).toLowerCase()
  , fI = t=>wh(t).reduce((e,n)=>`${e}${e ? n[0].toUpperCase() + n.slice(1).toLowerCase() : n.toLowerCase()}`, "")
  , Gte = t=>kh(fI(t))
  , Kte = t=>Yp(t, "_")
  , Yte = t=>Yp(t, "-")
  , Qte = t=>kh(Yp(t, " "))
  , Xte = t=>wh(t).map(kh).join(" ");
var r7 = {
    words: wh,
    upperFirst: kh,
    camelCase: fI,
    pascalCase: Gte,
    snakeCase: Kte,
    kebabCase: Yte,
    sentenceCase: Qte,
    titleCase: Xte
}
  , Qp = {
    exports: {}
};
Qp.exports = function(t) {
    return pI(Jte(t), t)
}
;
Qp.exports.array = pI;
function pI(t, e) {
    var n = t.length
      , r = new Array(n)
      , s = {}
      , i = n
      , a = ene(e)
      , o = tne(t);
    for (e.forEach(function(d) {
        if (!o.has(d[0]) || !o.has(d[1]))
            throw new Error("Unknown node. There is an unknown node in the supplied edges.")
    }); i--; )
        s[i] || l(t[i], i, new Set);
    return r;
    function l(d, u, h) {
        if (h.has(d)) {
            var f;
            try {
                f = ", node was:" + JSON.stringify(d)
            } catch {
                f = ""
            }
            throw new Error("Cyclic dependency" + f)
        }
        if (!o.has(d))
            throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: " + JSON.stringify(d));
        if (!s[u]) {
            s[u] = !0;
            var p = a.get(d) || new Set;
            if (p = Array.from(p),
            u = p.length) {
                h.add(d);
                do {
                    var m = p[--u];
                    l(m, o.get(m), h)
                } while (u);
                h.delete(d)
            }
            r[--n] = d
        }
    }
}
function Jte(t) {
    for (var e = new Set, n = 0, r = t.length; n < r; n++) {
        var s = t[n];
        e.add(s[0]),
        e.add(s[1])
    }
    return Array.from(e)
}
function ene(t) {
    for (var e = new Map, n = 0, r = t.length; n < r; n++) {
        var s = t[n];
        e.has(s[0]) || e.set(s[0], new Set),
        e.has(s[1]) || e.set(s[1], new Set),
        e.get(s[0]).add(s[1])
    }
    return e
}
function tne(t) {
    for (var e = new Map, n = 0, r = t.length; n < r; n++)
        e.set(t[n], n);
    return e
}
var nne = Qp.exports;
const rne = Cn(nne)
  , sne = Object.prototype.toString
  , ine = Error.prototype.toString
  , ane = RegExp.prototype.toString
  , one = typeof Symbol < "u" ? Symbol.prototype.toString : ()=>""
  , cne = /^Symbol\((.*)\)(.*)$/;
function lne(t) {
    return t != +t ? "NaN" : t === 0 && 1 / t < 0 ? "-0" : "" + t
}
function gv(t, e=!1) {
    if (t == null || t === !0 || t === !1)
        return "" + t;
    const n = typeof t;
    if (n === "number")
        return lne(t);
    if (n === "string")
        return e ? `"${t}"` : t;
    if (n === "function")
        return "[Function " + (t.name || "anonymous") + "]";
    if (n === "symbol")
        return one.call(t).replace(cne, "Symbol($1)");
    const r = sne.call(t).slice(8, -1);
    return r === "Date" ? isNaN(t.getTime()) ? "" + t : t.toISOString(t) : r === "Error" || t instanceof Error ? "[" + ine.call(t) + "]" : r === "RegExp" ? ane.call(t) : null
}
function jo(t, e) {
    let n = gv(t, e);
    return n !== null ? n : JSON.stringify(t, function(r, s) {
        let i = gv(this[r], e);
        return i !== null ? i : s
    }, 2)
}
function mI(t) {
    return t == null ? [] : [].concat(t)
}
let gI, dne = /\$\{\s*(\w+)\s*\}/g;
gI = Symbol.toStringTag;
class As extends Error {
    static formatError(e, n) {
        const r = n.label || n.path || "this";
        return r !== n.path && (n = Object.assign({}, n, {
            path: r
        })),
        typeof e == "string" ? e.replace(dne, (s,i)=>jo(n[i])) : typeof e == "function" ? e(n) : e
    }
    static isError(e) {
        return e && e.name === "ValidationError"
    }
    constructor(e, n, r, s, i) {
        super(),
        this.value = void 0,
        this.path = void 0,
        this.type = void 0,
        this.errors = void 0,
        this.params = void 0,
        this.inner = void 0,
        this[gI] = "Error",
        this.name = "ValidationError",
        this.value = n,
        this.path = r,
        this.type = s,
        this.errors = [],
        this.inner = [],
        mI(e).forEach(a=>{
            if (As.isError(a)) {
                this.errors.push(...a.errors);
                const o = a.inner.length ? a.inner : [a];
                this.inner.push(...o)
            } else
                this.errors.push(a)
        }
        ),
        this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0],
        !i && Error.captureStackTrace && Error.captureStackTrace(this, As)
    }
}
let Da = {
    default: "${path} is invalid",
    required: "${path} is a required field",
    defined: "${path} must be defined",
    notNull: "${path} cannot be null",
    oneOf: "${path} must be one of the following values: ${values}",
    notOneOf: "${path} must not be one of the following values: ${values}",
    notType: ({path: t, type: e, value: n, originalValue: r})=>{
        const s = r != null && r !== n ? ` (cast from the value \`${jo(r, !0)}\`).` : ".";
        return e !== "mixed" ? `${t} must be a \`${e}\` type, but the final value was: \`${jo(n, !0)}\`` + s : `${t} must match the configured type. The validated value was: \`${jo(n, !0)}\`` + s
    }
}
  , Ti = {
    length: "${path} must be exactly ${length} characters",
    min: "${path} must be at least ${min} characters",
    max: "${path} must be at most ${max} characters",
    matches: '${path} must match the following: "${regex}"',
    email: "${path} must be a valid email",
    url: "${path} must be a valid URL",
    uuid: "${path} must be a valid UUID",
    trim: "${path} must be a trimmed string",
    lowercase: "${path} must be a lowercase string",
    uppercase: "${path} must be a upper case string"
}
  , c1 = {
    min: "${path} must be greater than or equal to ${min}",
    max: "${path} must be less than or equal to ${max}",
    lessThan: "${path} must be less than ${less}",
    moreThan: "${path} must be greater than ${more}",
    positive: "${path} must be a positive number",
    negative: "${path} must be a negative number",
    integer: "${path} must be an integer"
}
  , H9 = {
    min: "${path} field must be later than ${min}",
    max: "${path} field must be at earlier than ${max}"
}
  , z9 = {
    isValue: "${path} field must be ${value}"
}
  , Z9 = {
    noUnknown: "${path} field has unspecified keys: ${unknown}"
}
  , T2 = {
    min: "${path} field must have at least ${min} items",
    max: "${path} field must have less than or equal to ${max} items",
    length: "${path} must have ${length} items"
}
  , une = {
    notType: t=>{
        const {path: e, value: n, spec: r} = t
          , s = r.types.length;
        if (Array.isArray(n)) {
            if (n.length < s)
                return `${e} tuple value has too few items, expected a length of ${s} but got ${n.length} for value: \`${jo(n, !0)}\``;
            if (n.length > s)
                return `${e} tuple value has too many items, expected a length of ${s} but got ${n.length} for value: \`${jo(n, !0)}\``
        }
        return As.formatError(Da.notType, t)
    }
};
Object.assign(Object.create(null), {
    mixed: Da,
    string: Ti,
    number: c1,
    date: H9,
    object: Z9,
    array: T2,
    boolean: z9,
    tuple: une
});
const xh = t=>t && t.__isYupSchema__;
class J4 {
    static fromOptions(e, n) {
        if (!n.then && !n.otherwise)
            throw new TypeError("either `then:` or `otherwise:` is required for `when()` conditions");
        let {is: r, then: s, otherwise: i} = n
          , a = typeof r == "function" ? r : (...o)=>o.every(l=>l === r);
        return new J4(e,(o,l)=>{
            var d;
            let u = a(...o) ? s : i;
            return (d = u == null ? void 0 : u(l)) != null ? d : l
        }
        )
    }
    constructor(e, n) {
        this.fn = void 0,
        this.refs = e,
        this.refs = e,
        this.fn = n
    }
    resolve(e, n) {
        let r = this.refs.map(i=>i.getValue(n == null ? void 0 : n.value, n == null ? void 0 : n.parent, n == null ? void 0 : n.context))
          , s = this.fn(r, e, n);
        if (s === void 0 || s === e)
            return e;
        if (!xh(s))
            throw new TypeError("conditions must return a schema object");
        return s.resolve(n)
    }
}
const s2 = {
    context: "$",
    value: "."
};
class Sl {
    constructor(e, n={}) {
        if (this.key = void 0,
        this.isContext = void 0,
        this.isValue = void 0,
        this.isSibling = void 0,
        this.path = void 0,
        this.getter = void 0,
        this.map = void 0,
        typeof e != "string")
            throw new TypeError("ref must be a string, got: " + e);
        if (this.key = e.trim(),
        e === "")
            throw new TypeError("ref must be a non-empty string");
        this.isContext = this.key[0] === s2.context,
        this.isValue = this.key[0] === s2.value,
        this.isSibling = !this.isContext && !this.isValue;
        let r = this.isContext ? s2.context : this.isValue ? s2.value : "";
        this.path = this.key.slice(r.length),
        this.getter = this.path && zc.getter(this.path, !0),
        this.map = n.map
    }
    getValue(e, n, r) {
        let s = this.isContext ? r : this.isValue ? e : n;
        return this.getter && (s = this.getter(s || {})),
        this.map && (s = this.map(s)),
        s
    }
    cast(e, n) {
        return this.getValue(e, n == null ? void 0 : n.parent, n == null ? void 0 : n.context)
    }
    resolve() {
        return this
    }
    describe() {
        return {
            type: "ref",
            key: this.key
        }
    }
    toString() {
        return `Ref(${this.key})`
    }
    static isRef(e) {
        return e && e.__isYupRef
    }
}
Sl.prototype.__isYupRef = !0;
const zi = t=>t == null;
function Vl(t) {
    function e({value: n, path: r="", options: s, originalValue: i, schema: a}, o, l) {
        const {name: d, test: u, params: h, message: f, skipAbsent: p} = t;
        let {parent: m, context: g, abortEarly: C=a.spec.abortEarly, disableStackTrace: b=a.spec.disableStackTrace} = s;
        function k(me) {
            return Sl.isRef(me) ? me.getValue(n, m, g) : me
        }
        function S(me={}) {
            var _e;
            const I = Object.assign({
                value: n,
                originalValue: i,
                label: a.spec.label,
                path: me.path || r,
                spec: a.spec
            }, h, me.params);
            for (const P of Object.keys(I))
                I[P] = k(I[P]);
            const Q = new As(As.formatError(me.message || f, I),n,I.path,me.type || d,(_e = me.disableStackTrace) != null ? _e : b);
            return Q.params = I,
            Q
        }
        const D = C ? o : l;
        let R = {
            path: r,
            parent: m,
            type: d,
            from: s.from,
            createError: S,
            resolve: k,
            options: s,
            originalValue: i,
            schema: a
        };
        const T = me=>{
            As.isError(me) ? D(me) : me ? l(null) : D(S())
        }
          , B = me=>{
            As.isError(me) ? D(me) : o(me)
        }
        ;
        if (p && zi(n))
            return T(!0);
        let W;
        try {
            var fe;
            if (W = u.call(R, n, R),
            typeof ((fe = W) == null ? void 0 : fe.then) == "function") {
                if (s.sync)
                    throw new Error(`Validation test of type: "${R.type}" returned a Promise during a synchronous validate. This test will finish after the validate call has returned`);
                return Promise.resolve(W).then(T, B)
            }
        } catch (me) {
            B(me);
            return
        }
        T(W)
    }
    return e.OPTIONS = t,
    e
}
function hne(t, e, n, r=n) {
    let s, i, a;
    return e ? (zc.forEach(e, (o,l,d)=>{
        let u = l ? o.slice(1, o.length - 1) : o;
        t = t.resolve({
            context: r,
            parent: s,
            value: n
        });
        let h = t.type === "tuple"
          , f = d ? parseInt(u, 10) : 0;
        if (t.innerType || h) {
            if (h && !d)
                throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part "${a}" must contain an index to the tuple element, e.g. "${a}[0]"`);
            if (n && f >= n.length)
                throw new Error(`Yup.reach cannot resolve an array item at index: ${o}, in the path: ${e}. because there is no value at that index. `);
            s = n,
            n = n && n[f],
            t = h ? t.spec.types[f] : t.innerType
        }
        if (!d) {
            if (!t.fields || !t.fields[u])
                throw new Error(`The schema does not contain the path: ${e}. (failed at: ${a} which is a type: "${t.type}")`);
            s = n,
            n = n && n[u],
            t = t.fields[u]
        }
        i = u,
        a = l ? "[" + o + "]" : "." + o
    }
    ),
    {
        schema: t,
        parent: s,
        parentPath: i
    }) : {
        parent: s,
        parentPath: e,
        schema: t
    }
}
class e3 extends Set {
    describe() {
        const e = [];
        for (const n of this.values())
            e.push(Sl.isRef(n) ? n.describe() : n);
        return e
    }
    resolveAll(e) {
        let n = [];
        for (const r of this.values())
            n.push(e(r));
        return n
    }
    clone() {
        return new e3(this.values())
    }
    merge(e, n) {
        const r = this.clone();
        return e.forEach(s=>r.add(s)),
        n.forEach(s=>r.delete(s)),
        r
    }
}
function td(t, e=new Map) {
    if (xh(t) || !t || typeof t != "object")
        return t;
    if (e.has(t))
        return e.get(t);
    let n;
    if (t instanceof Date)
        n = new Date(t.getTime()),
        e.set(t, n);
    else if (t instanceof RegExp)
        n = new RegExp(t),
        e.set(t, n);
    else if (Array.isArray(t)) {
        n = new Array(t.length),
        e.set(t, n);
        for (let r = 0; r < t.length; r++)
            n[r] = td(t[r], e)
    } else if (t instanceof Map) {
        n = new Map,
        e.set(t, n);
        for (const [r,s] of t.entries())
            n.set(r, td(s, e))
    } else if (t instanceof Set) {
        n = new Set,
        e.set(t, n);
        for (const r of t)
            n.add(td(r, e))
    } else if (t instanceof Object) {
        n = {},
        e.set(t, n);
        for (const [r,s] of Object.entries(t))
            n[r] = td(s, e)
    } else
        throw Error(`Unable to clone ${t}`);
    return n
}
class Ls {
    constructor(e) {
        this.type = void 0,
        this.deps = [],
        this.tests = void 0,
        this.transforms = void 0,
        this.conditions = [],
        this._mutate = void 0,
        this.internalTests = {},
        this._whitelist = new e3,
        this._blacklist = new e3,
        this.exclusiveTests = Object.create(null),
        this._typeCheck = void 0,
        this.spec = void 0,
        this.tests = [],
        this.transforms = [],
        this.withMutation(()=>{
            this.typeError(Da.notType)
        }
        ),
        this.type = e.type,
        this._typeCheck = e.check,
        this.spec = Object.assign({
            strip: !1,
            strict: !1,
            abortEarly: !0,
            recursive: !0,
            disableStackTrace: !1,
            nullable: !1,
            optional: !0,
            coerce: !0
        }, e == null ? void 0 : e.spec),
        this.withMutation(n=>{
            n.nonNullable()
        }
        )
    }
    get _type() {
        return this.type
    }
    clone(e) {
        if (this._mutate)
            return e && Object.assign(this.spec, e),
            this;
        const n = Object.create(Object.getPrototypeOf(this));
        return n.type = this.type,
        n._typeCheck = this._typeCheck,
        n._whitelist = this._whitelist.clone(),
        n._blacklist = this._blacklist.clone(),
        n.internalTests = Object.assign({}, this.internalTests),
        n.exclusiveTests = Object.assign({}, this.exclusiveTests),
        n.deps = [...this.deps],
        n.conditions = [...this.conditions],
        n.tests = [...this.tests],
        n.transforms = [...this.transforms],
        n.spec = td(Object.assign({}, this.spec, e)),
        n
    }
    label(e) {
        let n = this.clone();
        return n.spec.label = e,
        n
    }
    meta(...e) {
        if (e.length === 0)
            return this.spec.meta;
        let n = this.clone();
        return n.spec.meta = Object.assign(n.spec.meta || {}, e[0]),
        n
    }
    withMutation(e) {
        let n = this._mutate;
        this._mutate = !0;
        let r = e(this);
        return this._mutate = n,
        r
    }
    concat(e) {
        if (!e || e === this)
            return this;
        if (e.type !== this.type && this.type !== "mixed")
            throw new TypeError(`You cannot \`concat()\` schema's of different types: ${this.type} and ${e.type}`);
        let n = this
          , r = e.clone();
        const s = Object.assign({}, n.spec, r.spec);
        return r.spec = s,
        r.internalTests = Object.assign({}, n.internalTests, r.internalTests),
        r._whitelist = n._whitelist.merge(e._whitelist, e._blacklist),
        r._blacklist = n._blacklist.merge(e._blacklist, e._whitelist),
        r.tests = n.tests,
        r.exclusiveTests = n.exclusiveTests,
        r.withMutation(i=>{
            e.tests.forEach(a=>{
                i.test(a.OPTIONS)
            }
            )
        }
        ),
        r.transforms = [...n.transforms, ...r.transforms],
        r
    }
    isType(e) {
        return e == null ? !!(this.spec.nullable && e === null || this.spec.optional && e === void 0) : this._typeCheck(e)
    }
    resolve(e) {
        let n = this;
        if (n.conditions.length) {
            let r = n.conditions;
            n = n.clone(),
            n.conditions = [],
            n = r.reduce((s,i)=>i.resolve(s, e), n),
            n = n.resolve(e)
        }
        return n
    }
    resolveOptions(e) {
        var n, r, s, i;
        return Object.assign({}, e, {
            from: e.from || [],
            strict: (n = e.strict) != null ? n : this.spec.strict,
            abortEarly: (r = e.abortEarly) != null ? r : this.spec.abortEarly,
            recursive: (s = e.recursive) != null ? s : this.spec.recursive,
            disableStackTrace: (i = e.disableStackTrace) != null ? i : this.spec.disableStackTrace
        })
    }
    cast(e, n={}) {
        let r = this.resolve(Object.assign({
            value: e
        }, n))
          , s = n.assert === "ignore-optionality"
          , i = r._cast(e, n);
        if (n.assert !== !1 && !r.isType(i)) {
            if (s && zi(i))
                return i;
            let a = jo(e)
              , o = jo(i);
            throw new TypeError(`The value of ${n.path || "field"} could not be cast to a value that satisfies the schema type: "${r.type}". 

attempted value: ${a} 
` + (o !== a ? `result of cast: ${o}` : ""))
        }
        return i
    }
    _cast(e, n) {
        let r = e === void 0 ? e : this.transforms.reduce((s,i)=>i.call(this, s, e, this), e);
        return r === void 0 && (r = this.getDefault(n)),
        r
    }
    _validate(e, n={}, r, s) {
        let {path: i, originalValue: a=e, strict: o=this.spec.strict} = n
          , l = e;
        o || (l = this._cast(l, Object.assign({
            assert: !1
        }, n)));
        let d = [];
        for (let u of Object.values(this.internalTests))
            u && d.push(u);
        this.runTests({
            path: i,
            value: l,
            originalValue: a,
            options: n,
            tests: d
        }, r, u=>{
            if (u.length)
                return s(u, l);
            this.runTests({
                path: i,
                value: l,
                originalValue: a,
                options: n,
                tests: this.tests
            }, r, s)
        }
        )
    }
    runTests(e, n, r) {
        let s = !1
          , {tests: i, value: a, originalValue: o, path: l, options: d} = e
          , u = g=>{
            s || (s = !0,
            n(g, a))
        }
          , h = g=>{
            s || (s = !0,
            r(g, a))
        }
          , f = i.length
          , p = [];
        if (!f)
            return h([]);
        let m = {
            value: a,
            originalValue: o,
            path: l,
            options: d,
            schema: this
        };
        for (let g = 0; g < i.length; g++) {
            const C = i[g];
            C(m, u, function(k) {
                k && (Array.isArray(k) ? p.push(...k) : p.push(k)),
                --f <= 0 && h(p)
            })
        }
    }
    asNestedTest({key: e, index: n, parent: r, parentPath: s, originalParent: i, options: a}) {
        const o = e ?? n;
        if (o == null)
            throw TypeError("Must include `key` or `index` for nested validations");
        const l = typeof o == "number";
        let d = r[o];
        const u = Object.assign({}, a, {
            strict: !0,
            parent: r,
            value: d,
            originalValue: i[o],
            key: void 0,
            [l ? "index" : "key"]: o,
            path: l || o.includes(".") ? `${s || ""}[${d ? o : `"${o}"`}]` : (s ? `${s}.` : "") + e
        });
        return (h,f,p)=>this.resolve(u)._validate(d, u, f, p)
    }
    validate(e, n) {
        var r;
        let s = this.resolve(Object.assign({}, n, {
            value: e
        }))
          , i = (r = n == null ? void 0 : n.disableStackTrace) != null ? r : s.spec.disableStackTrace;
        return new Promise((a,o)=>s._validate(e, n, (l,d)=>{
            As.isError(l) && (l.value = d),
            o(l)
        }
        , (l,d)=>{
            l.length ? o(new As(l,d,void 0,void 0,i)) : a(d)
        }
        ))
    }
    validateSync(e, n) {
        var r;
        let s = this.resolve(Object.assign({}, n, {
            value: e
        })), i, a = (r = n == null ? void 0 : n.disableStackTrace) != null ? r : s.spec.disableStackTrace;
        return s._validate(e, Object.assign({}, n, {
            sync: !0
        }), (o,l)=>{
            throw As.isError(o) && (o.value = l),
            o
        }
        , (o,l)=>{
            if (o.length)
                throw new As(o,e,void 0,void 0,a);
            i = l
        }
        ),
        i
    }
    isValid(e, n) {
        return this.validate(e, n).then(()=>!0, r=>{
            if (As.isError(r))
                return !1;
            throw r
        }
        )
    }
    isValidSync(e, n) {
        try {
            return this.validateSync(e, n),
            !0
        } catch (r) {
            if (As.isError(r))
                return !1;
            throw r
        }
    }
    _getDefault(e) {
        let n = this.spec.default;
        return n == null ? n : typeof n == "function" ? n.call(this, e) : td(n)
    }
    getDefault(e) {
        return this.resolve(e || {})._getDefault(e)
    }
    default(e) {
        return arguments.length === 0 ? this._getDefault() : this.clone({
            default: e
        })
    }
    strict(e=!0) {
        return this.clone({
            strict: e
        })
    }
    nullability(e, n) {
        const r = this.clone({
            nullable: e
        });
        return r.internalTests.nullable = Vl({
            message: n,
            name: "nullable",
            test(s) {
                return s === null ? this.schema.spec.nullable : !0
            }
        }),
        r
    }
    optionality(e, n) {
        const r = this.clone({
            optional: e
        });
        return r.internalTests.optionality = Vl({
            message: n,
            name: "optionality",
            test(s) {
                return s === void 0 ? this.schema.spec.optional : !0
            }
        }),
        r
    }
    optional() {
        return this.optionality(!0)
    }
    defined(e=Da.defined) {
        return this.optionality(!1, e)
    }
    nullable() {
        return this.nullability(!0)
    }
    nonNullable(e=Da.notNull) {
        return this.nullability(!1, e)
    }
    required(e=Da.required) {
        return this.clone().withMutation(n=>n.nonNullable(e).defined(e))
    }
    notRequired() {
        return this.clone().withMutation(e=>e.nullable().optional())
    }
    transform(e) {
        let n = this.clone();
        return n.transforms.push(e),
        n
    }
    test(...e) {
        let n;
        if (e.length === 1 ? typeof e[0] == "function" ? n = {
            test: e[0]
        } : n = e[0] : e.length === 2 ? n = {
            name: e[0],
            test: e[1]
        } : n = {
            name: e[0],
            message: e[1],
            test: e[2]
        },
        n.message === void 0 && (n.message = Da.default),
        typeof n.test != "function")
            throw new TypeError("`test` is a required parameters");
        let r = this.clone()
          , s = Vl(n)
          , i = n.exclusive || n.name && r.exclusiveTests[n.name] === !0;
        if (n.exclusive && !n.name)
            throw new TypeError("Exclusive tests must provide a unique `name` identifying the test");
        return n.name && (r.exclusiveTests[n.name] = !!n.exclusive),
        r.tests = r.tests.filter(a=>!(a.OPTIONS.name === n.name && (i || a.OPTIONS.test === s.OPTIONS.test))),
        r.tests.push(s),
        r
    }
    when(e, n) {
        !Array.isArray(e) && typeof e != "string" && (n = e,
        e = ".");
        let r = this.clone()
          , s = mI(e).map(i=>new Sl(i));
        return s.forEach(i=>{
            i.isSibling && r.deps.push(i.key)
        }
        ),
        r.conditions.push(typeof n == "function" ? new J4(s,n) : J4.fromOptions(s, n)),
        r
    }
    typeError(e) {
        let n = this.clone();
        return n.internalTests.typeError = Vl({
            message: e,
            name: "typeError",
            skipAbsent: !0,
            test(r) {
                return this.schema._typeCheck(r) ? !0 : this.createError({
                    params: {
                        type: this.schema.type
                    }
                })
            }
        }),
        n
    }
    oneOf(e, n=Da.oneOf) {
        let r = this.clone();
        return e.forEach(s=>{
            r._whitelist.add(s),
            r._blacklist.delete(s)
        }
        ),
        r.internalTests.whiteList = Vl({
            message: n,
            name: "oneOf",
            skipAbsent: !0,
            test(s) {
                let i = this.schema._whitelist
                  , a = i.resolveAll(this.resolve);
                return a.includes(s) ? !0 : this.createError({
                    params: {
                        values: Array.from(i).join(", "),
                        resolved: a
                    }
                })
            }
        }),
        r
    }
    notOneOf(e, n=Da.notOneOf) {
        let r = this.clone();
        return e.forEach(s=>{
            r._blacklist.add(s),
            r._whitelist.delete(s)
        }
        ),
        r.internalTests.blacklist = Vl({
            message: n,
            name: "notOneOf",
            test(s) {
                let i = this.schema._blacklist
                  , a = i.resolveAll(this.resolve);
                return a.includes(s) ? this.createError({
                    params: {
                        values: Array.from(i).join(", "),
                        resolved: a
                    }
                }) : !0
            }
        }),
        r
    }
    strip(e=!0) {
        let n = this.clone();
        return n.spec.strip = e,
        n
    }
    describe(e) {
        const n = (e ? this.resolve(e) : this).clone()
          , {label: r, meta: s, optional: i, nullable: a} = n.spec;
        return {
            meta: s,
            label: r,
            optional: i,
            nullable: a,
            default: n.getDefault(e),
            type: n.type,
            oneOf: n._whitelist.describe(),
            notOneOf: n._blacklist.describe(),
            tests: n.tests.map(l=>({
                name: l.OPTIONS.name,
                params: l.OPTIONS.params
            })).filter((l,d,u)=>u.findIndex(h=>h.name === l.name) === d)
        }
    }
}
Ls.prototype.__isYupSchema__ = !0;
for (const t of ["validate", "validateSync"])
    Ls.prototype[`${t}At`] = function(e, n, r={}) {
        const {parent: s, parentPath: i, schema: a} = hne(this, e, n, r.context);
        return a[t](s && s[i], Object.assign({}, r, {
            parent: s,
            path: e
        }))
    }
    ;
for (const t of ["equals", "is"])
    Ls.prototype[t] = Ls.prototype.oneOf;
for (const t of ["not", "nope"])
    Ls.prototype[t] = Ls.prototype.notOneOf;
const fne = ()=>!0;
function pne(t) {
    return new yI(t)
}
class yI extends Ls {
    constructor(e) {
        super(typeof e == "function" ? {
            type: "mixed",
            check: e
        } : Object.assign({
            type: "mixed",
            check: fne
        }, e))
    }
}
pne.prototype = yI.prototype;
function mne() {
    return new CI
}
class CI extends Ls {
    constructor() {
        super({
            type: "boolean",
            check(e) {
                return e instanceof Boolean && (e = e.valueOf()),
                typeof e == "boolean"
            }
        }),
        this.withMutation(()=>{
            this.transform((e,n,r)=>{
                if (r.spec.coerce && !r.isType(e)) {
                    if (/^(true|1)$/i.test(String(e)))
                        return !0;
                    if (/^(false|0)$/i.test(String(e)))
                        return !1
                }
                return e
            }
            )
        }
        )
    }
    isTrue(e=z9.isValue) {
        return this.test({
            message: e,
            name: "is-value",
            exclusive: !0,
            params: {
                value: "true"
            },
            test(n) {
                return zi(n) || n === !0
            }
        })
    }
    isFalse(e=z9.isValue) {
        return this.test({
            message: e,
            name: "is-value",
            exclusive: !0,
            params: {
                value: "false"
            },
            test(n) {
                return zi(n) || n === !1
            }
        })
    }
    default(e) {
        return super.default(e)
    }
    defined(e) {
        return super.defined(e)
    }
    optional() {
        return super.optional()
    }
    required(e) {
        return super.required(e)
    }
    notRequired() {
        return super.notRequired()
    }
    nullable() {
        return super.nullable()
    }
    nonNullable(e) {
        return super.nonNullable(e)
    }
    strip(e) {
        return super.strip(e)
    }
}
mne.prototype = CI.prototype;
let gne = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/
  , yne = /^((https?|ftp):)?\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i
  , Cne = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i
  , bne = t=>zi(t) || t === t.trim()
  , vne = {}.toString();
function bI() {
    return new vI
}
class vI extends Ls {
    constructor() {
        super({
            type: "string",
            check(e) {
                return e instanceof String && (e = e.valueOf()),
                typeof e == "string"
            }
        }),
        this.withMutation(()=>{
            this.transform((e,n,r)=>{
                if (!r.spec.coerce || r.isType(e) || Array.isArray(e))
                    return e;
                const s = e != null && e.toString ? e.toString() : e;
                return s === vne ? e : s
            }
            )
        }
        )
    }
    required(e) {
        return super.required(e).withMutation(n=>n.test({
            message: e || Da.required,
            name: "required",
            skipAbsent: !0,
            test: r=>!!r.length
        }))
    }
    notRequired() {
        return super.notRequired().withMutation(e=>(e.tests = e.tests.filter(n=>n.OPTIONS.name !== "required"),
        e))
    }
    length(e, n=Ti.length) {
        return this.test({
            message: n,
            name: "length",
            exclusive: !0,
            params: {
                length: e
            },
            skipAbsent: !0,
            test(r) {
                return r.length === this.resolve(e)
            }
        })
    }
    min(e, n=Ti.min) {
        return this.test({
            message: n,
            name: "min",
            exclusive: !0,
            params: {
                min: e
            },
            skipAbsent: !0,
            test(r) {
                return r.length >= this.resolve(e)
            }
        })
    }
    max(e, n=Ti.max) {
        return this.test({
            name: "max",
            exclusive: !0,
            message: n,
            params: {
                max: e
            },
            skipAbsent: !0,
            test(r) {
                return r.length <= this.resolve(e)
            }
        })
    }
    matches(e, n) {
        let r = !1, s, i;
        return n && (typeof n == "object" ? {excludeEmptyString: r=!1, message: s, name: i} = n : s = n),
        this.test({
            name: i || "matches",
            message: s || Ti.matches,
            params: {
                regex: e
            },
            skipAbsent: !0,
            test: a=>a === "" && r || a.search(e) !== -1
        })
    }
    email(e=Ti.email) {
        return this.matches(gne, {
            name: "email",
            message: e,
            excludeEmptyString: !0
        })
    }
    url(e=Ti.url) {
        return this.matches(yne, {
            name: "url",
            message: e,
            excludeEmptyString: !0
        })
    }
    uuid(e=Ti.uuid) {
        return this.matches(Cne, {
            name: "uuid",
            message: e,
            excludeEmptyString: !1
        })
    }
    ensure() {
        return this.default("").transform(e=>e === null ? "" : e)
    }
    trim(e=Ti.trim) {
        return this.transform(n=>n != null ? n.trim() : n).test({
            message: e,
            name: "trim",
            test: bne
        })
    }
    lowercase(e=Ti.lowercase) {
        return this.transform(n=>zi(n) ? n : n.toLowerCase()).test({
            message: e,
            name: "string_case",
            exclusive: !0,
            skipAbsent: !0,
            test: n=>zi(n) || n === n.toLowerCase()
        })
    }
    uppercase(e=Ti.uppercase) {
        return this.transform(n=>zi(n) ? n : n.toUpperCase()).test({
            message: e,
            name: "string_case",
            exclusive: !0,
            skipAbsent: !0,
            test: n=>zi(n) || n === n.toUpperCase()
        })
    }
}
bI.prototype = vI.prototype;
let wne = t=>t != +t;
function kne() {
    return new wI
}
class wI extends Ls {
    constructor() {
        super({
            type: "number",
            check(e) {
                return e instanceof Number && (e = e.valueOf()),
                typeof e == "number" && !wne(e)
            }
        }),
        this.withMutation(()=>{
            this.transform((e,n,r)=>{
                if (!r.spec.coerce)
                    return e;
                let s = e;
                if (typeof s == "string") {
                    if (s = s.replace(/\s/g, ""),
                    s === "")
                        return NaN;
                    s = +s
                }
                return r.isType(s) || s === null ? s : parseFloat(s)
            }
            )
        }
        )
    }
    min(e, n=c1.min) {
        return this.test({
            message: n,
            name: "min",
            exclusive: !0,
            params: {
                min: e
            },
            skipAbsent: !0,
            test(r) {
                return r >= this.resolve(e)
            }
        })
    }
    max(e, n=c1.max) {
        return this.test({
            message: n,
            name: "max",
            exclusive: !0,
            params: {
                max: e
            },
            skipAbsent: !0,
            test(r) {
                return r <= this.resolve(e)
            }
        })
    }
    lessThan(e, n=c1.lessThan) {
        return this.test({
            message: n,
            name: "max",
            exclusive: !0,
            params: {
                less: e
            },
            skipAbsent: !0,
            test(r) {
                return r < this.resolve(e)
            }
        })
    }
    moreThan(e, n=c1.moreThan) {
        return this.test({
            message: n,
            name: "min",
            exclusive: !0,
            params: {
                more: e
            },
            skipAbsent: !0,
            test(r) {
                return r > this.resolve(e)
            }
        })
    }
    positive(e=c1.positive) {
        return this.moreThan(0, e)
    }
    negative(e=c1.negative) {
        return this.lessThan(0, e)
    }
    integer(e=c1.integer) {
        return this.test({
            name: "integer",
            message: e,
            skipAbsent: !0,
            test: n=>Number.isInteger(n)
        })
    }
    truncate() {
        return this.transform(e=>zi(e) ? e : e | 0)
    }
    round(e) {
        var n;
        let r = ["ceil", "floor", "round", "trunc"];
        if (e = ((n = e) == null ? void 0 : n.toLowerCase()) || "round",
        e === "trunc")
            return this.truncate();
        if (r.indexOf(e.toLowerCase()) === -1)
            throw new TypeError("Only valid options for round() are: " + r.join(", "));
        return this.transform(s=>zi(s) ? s : Math[e](s))
    }
}
kne.prototype = wI.prototype;
const xne = /^(\d{4}|[+-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2}):?(\d{2})(?::?(\d{2})(?:[,.](\d{1,}))?)?(?:(Z)|([+-])(\d{2})(?::?(\d{2}))?)?)?$/;
function to(t, e=0) {
    return Number(t) || e
}
function Dne(t) {
    const e = xne.exec(t);
    if (!e)
        return Date.parse ? Date.parse(t) : Number.NaN;
    const n = {
        year: to(e[1]),
        month: to(e[2], 1) - 1,
        day: to(e[3], 1),
        hour: to(e[4]),
        minute: to(e[5]),
        second: to(e[6]),
        millisecond: e[7] ? to(e[7].substring(0, 3)) : 0,
        z: e[8] || void 0,
        plusMinus: e[9] || void 0,
        hourOffset: to(e[10]),
        minuteOffset: to(e[11])
    };
    if (n.z === void 0 && n.plusMinus === void 0)
        return new Date(n.year,n.month,n.day,n.hour,n.minute,n.second,n.millisecond).valueOf();
    let r = 0;
    return n.z !== "Z" && n.plusMinus !== void 0 && (r = n.hourOffset * 60 + n.minuteOffset,
    n.plusMinus === "+" && (r = 0 - r)),
    Date.UTC(n.year, n.month, n.day, n.hour, n.minute + r, n.second, n.millisecond)
}
let Sne = new Date("")
  , _ne = t=>Object.prototype.toString.call(t) === "[object Date]";
class Dh extends Ls {
    constructor() {
        super({
            type: "date",
            check(e) {
                return _ne(e) && !isNaN(e.getTime())
            }
        }),
        this.withMutation(()=>{
            this.transform((e,n,r)=>!r.spec.coerce || r.isType(e) || e === null ? e : (e = Dne(e),
            isNaN(e) ? Dh.INVALID_DATE : new Date(e)))
        }
        )
    }
    prepareParam(e, n) {
        let r;
        if (Sl.isRef(e))
            r = e;
        else {
            let s = this.cast(e);
            if (!this._typeCheck(s))
                throw new TypeError(`\`${n}\` must be a Date or a value that can be \`cast()\` to a Date`);
            r = s
        }
        return r
    }
    min(e, n=H9.min) {
        let r = this.prepareParam(e, "min");
        return this.test({
            message: n,
            name: "min",
            exclusive: !0,
            params: {
                min: e
            },
            skipAbsent: !0,
            test(s) {
                return s >= this.resolve(r)
            }
        })
    }
    max(e, n=H9.max) {
        let r = this.prepareParam(e, "max");
        return this.test({
            message: n,
            name: "max",
            exclusive: !0,
            params: {
                max: e
            },
            skipAbsent: !0,
            test(s) {
                return s <= this.resolve(r)
            }
        })
    }
}
Dh.INVALID_DATE = Sne;
Dh.prototype;
function Ine(t, e=[]) {
    let n = []
      , r = new Set
      , s = new Set(e.map(([a,o])=>`${a}-${o}`));
    function i(a, o) {
        let l = zc.split(a)[0];
        r.add(l),
        s.has(`${o}-${l}`) || n.push([o, l])
    }
    for (const a of Object.keys(t)) {
        let o = t[a];
        r.add(a),
        Sl.isRef(o) && o.isSibling ? i(o.path, a) : xh(o) && "deps"in o && o.deps.forEach(l=>i(l, a))
    }
    return rne.array(Array.from(r), n).reverse()
}
function yv(t, e) {
    let n = 1 / 0;
    return t.some((r,s)=>{
        var i;
        if ((i = e.path) != null && i.includes(r))
            return n = s,
            !0
    }
    ),
    n
}
function kI(t) {
    return (e,n)=>yv(t, e) - yv(t, n)
}
const xI = (t,e,n)=>{
    if (typeof t != "string")
        return t;
    let r = t;
    try {
        r = JSON.parse(t)
    } catch {}
    return n.isType(r) ? r : t
}
;
function L2(t) {
    if ("fields"in t) {
        const e = {};
        for (const [n,r] of Object.entries(t.fields))
            e[n] = L2(r);
        return t.setFields(e)
    }
    if (t.type === "array") {
        const e = t.optional();
        return e.innerType && (e.innerType = L2(e.innerType)),
        e
    }
    return t.type === "tuple" ? t.optional().clone({
        types: t.spec.types.map(L2)
    }) : "optional"in t ? t.optional() : t
}
const Ene = (t,e)=>{
    const n = [...zc.normalizePath(e)];
    if (n.length === 1)
        return n[0]in t;
    let r = n.pop()
      , s = zc.getter(zc.join(n), !0)(t);
    return !!(s && r in s)
}
;
let Cv = t=>Object.prototype.toString.call(t) === "[object Object]";
function Ane(t, e) {
    let n = Object.keys(t.fields);
    return Object.keys(e).filter(r=>n.indexOf(r) === -1)
}
const jne = kI([]);
function DI(t) {
    return new SI(t)
}
class SI extends Ls {
    constructor(e) {
        super({
            type: "object",
            check(n) {
                return Cv(n) || typeof n == "function"
            }
        }),
        this.fields = Object.create(null),
        this._sortErrors = jne,
        this._nodes = [],
        this._excludedEdges = [],
        this.withMutation(()=>{
            e && this.shape(e)
        }
        )
    }
    _cast(e, n={}) {
        var r;
        let s = super._cast(e, n);
        if (s === void 0)
            return this.getDefault(n);
        if (!this._typeCheck(s))
            return s;
        let i = this.fields
          , a = (r = n.stripUnknown) != null ? r : this.spec.noUnknown
          , o = [].concat(this._nodes, Object.keys(s).filter(h=>!this._nodes.includes(h)))
          , l = {}
          , d = Object.assign({}, n, {
            parent: l,
            __validating: n.__validating || !1
        })
          , u = !1;
        for (const h of o) {
            let f = i[h]
              , p = h in s;
            if (f) {
                let m, g = s[h];
                d.path = (n.path ? `${n.path}.` : "") + h,
                f = f.resolve({
                    value: g,
                    context: n.context,
                    parent: l
                });
                let C = f instanceof Ls ? f.spec : void 0
                  , b = C == null ? void 0 : C.strict;
                if (C != null && C.strip) {
                    u = u || h in s;
                    continue
                }
                m = !n.__validating || !b ? f.cast(s[h], d) : s[h],
                m !== void 0 && (l[h] = m)
            } else
                p && !a && (l[h] = s[h]);
            (p !== h in l || l[h] !== s[h]) && (u = !0)
        }
        return u ? l : s
    }
    _validate(e, n={}, r, s) {
        let {from: i=[], originalValue: a=e, recursive: o=this.spec.recursive} = n;
        n.from = [{
            schema: this,
            value: a
        }, ...i],
        n.__validating = !0,
        n.originalValue = a,
        super._validate(e, n, r, (l,d)=>{
            if (!o || !Cv(d)) {
                s(l, d);
                return
            }
            a = a || d;
            let u = [];
            for (let h of this._nodes) {
                let f = this.fields[h];
                !f || Sl.isRef(f) || u.push(f.asNestedTest({
                    options: n,
                    key: h,
                    parent: d,
                    parentPath: n.path,
                    originalParent: a
                }))
            }
            this.runTests({
                tests: u,
                value: d,
                originalValue: a,
                options: n
            }, r, h=>{
                s(h.sort(this._sortErrors).concat(l), d)
            }
            )
        }
        )
    }
    clone(e) {
        const n = super.clone(e);
        return n.fields = Object.assign({}, this.fields),
        n._nodes = this._nodes,
        n._excludedEdges = this._excludedEdges,
        n._sortErrors = this._sortErrors,
        n
    }
    concat(e) {
        let n = super.concat(e)
          , r = n.fields;
        for (let[s,i] of Object.entries(this.fields)) {
            const a = r[s];
            r[s] = a === void 0 ? i : a
        }
        return n.withMutation(s=>s.setFields(r, [...this._excludedEdges, ...e._excludedEdges]))
    }
    _getDefault(e) {
        if ("default"in this.spec)
            return super._getDefault(e);
        if (!this._nodes.length)
            return;
        let n = {};
        return this._nodes.forEach(r=>{
            var s;
            const i = this.fields[r];
            let a = e;
            (s = a) != null && s.value && (a = Object.assign({}, a, {
                parent: a.value,
                value: a.value[r]
            })),
            n[r] = i && "getDefault"in i ? i.getDefault(a) : void 0
        }
        ),
        n
    }
    setFields(e, n) {
        let r = this.clone();
        return r.fields = e,
        r._nodes = Ine(e, n),
        r._sortErrors = kI(Object.keys(e)),
        n && (r._excludedEdges = n),
        r
    }
    shape(e, n=[]) {
        return this.clone().withMutation(r=>{
            let s = r._excludedEdges;
            return n.length && (Array.isArray(n[0]) || (n = [n]),
            s = [...r._excludedEdges, ...n]),
            r.setFields(Object.assign(r.fields, e), s)
        }
        )
    }
    partial() {
        const e = {};
        for (const [n,r] of Object.entries(this.fields))
            e[n] = "optional"in r && r.optional instanceof Function ? r.optional() : r;
        return this.setFields(e)
    }
    deepPartial() {
        return L2(this)
    }
    pick(e) {
        const n = {};
        for (const r of e)
            this.fields[r] && (n[r] = this.fields[r]);
        return this.setFields(n, this._excludedEdges.filter(([r,s])=>e.includes(r) && e.includes(s)))
    }
    omit(e) {
        const n = [];
        for (const r of Object.keys(this.fields))
            e.includes(r) || n.push(r);
        return this.pick(n)
    }
    from(e, n, r) {
        let s = zc.getter(e, !0);
        return this.transform(i=>{
            if (!i)
                return i;
            let a = i;
            return Ene(i, e) && (a = Object.assign({}, i),
            r || delete a[e],
            a[n] = s(i)),
            a
        }
        )
    }
    json() {
        return this.transform(xI)
    }
    noUnknown(e=!0, n=Z9.noUnknown) {
        typeof e != "boolean" && (n = e,
        e = !0);
        let r = this.test({
            name: "noUnknown",
            exclusive: !0,
            message: n,
            test(s) {
                if (s == null)
                    return !0;
                const i = Ane(this.schema, s);
                return !e || i.length === 0 || this.createError({
                    params: {
                        unknown: i.join(", ")
                    }
                })
            }
        });
        return r.spec.noUnknown = e,
        r
    }
    unknown(e=!0, n=Z9.noUnknown) {
        return this.noUnknown(!e, n)
    }
    transformKeys(e) {
        return this.transform(n=>{
            if (!n)
                return n;
            const r = {};
            for (const s of Object.keys(n))
                r[e(s)] = n[s];
            return r
        }
        )
    }
    camelCase() {
        return this.transformKeys(r7.camelCase)
    }
    snakeCase() {
        return this.transformKeys(r7.snakeCase)
    }
    constantCase() {
        return this.transformKeys(e=>r7.snakeCase(e).toUpperCase())
    }
    describe(e) {
        const n = (e ? this.resolve(e) : this).clone()
          , r = super.describe(e);
        r.fields = {};
        for (const [i,a] of Object.entries(n.fields)) {
            var s;
            let o = e;
            (s = o) != null && s.value && (o = Object.assign({}, o, {
                parent: o.value,
                value: o.value[i]
            })),
            r.fields[i] = a.describe(o)
        }
        return r
    }
}
DI.prototype = SI.prototype;
function Mne(t) {
    return new _I(t)
}
class _I extends Ls {
    constructor(e) {
        super({
            type: "array",
            spec: {
                types: e
            },
            check(n) {
                return Array.isArray(n)
            }
        }),
        this.innerType = void 0,
        this.innerType = e
    }
    _cast(e, n) {
        const r = super._cast(e, n);
        if (!this._typeCheck(r) || !this.innerType)
            return r;
        let s = !1;
        const i = r.map((a,o)=>{
            const l = this.innerType.cast(a, Object.assign({}, n, {
                path: `${n.path || ""}[${o}]`
            }));
            return l !== a && (s = !0),
            l
        }
        );
        return s ? i : r
    }
    _validate(e, n={}, r, s) {
        var i;
        let a = this.innerType
          , o = (i = n.recursive) != null ? i : this.spec.recursive;
        n.originalValue != null && n.originalValue,
        super._validate(e, n, r, (l,d)=>{
            var u;
            if (!o || !a || !this._typeCheck(d)) {
                s(l, d);
                return
            }
            let h = new Array(d.length);
            for (let p = 0; p < d.length; p++) {
                var f;
                h[p] = a.asNestedTest({
                    options: n,
                    index: p,
                    parent: d,
                    parentPath: n.path,
                    originalParent: (f = n.originalValue) != null ? f : e
                })
            }
            this.runTests({
                value: d,
                tests: h,
                originalValue: (u = n.originalValue) != null ? u : e,
                options: n
            }, r, p=>s(p.concat(l), d))
        }
        )
    }
    clone(e) {
        const n = super.clone(e);
        return n.innerType = this.innerType,
        n
    }
    json() {
        return this.transform(xI)
    }
    concat(e) {
        let n = super.concat(e);
        return n.innerType = this.innerType,
        e.innerType && (n.innerType = n.innerType ? n.innerType.concat(e.innerType) : e.innerType),
        n
    }
    of(e) {
        let n = this.clone();
        if (!xh(e))
            throw new TypeError("`array.of()` sub-schema must be a valid yup schema not: " + jo(e));
        return n.innerType = e,
        n.spec = Object.assign({}, n.spec, {
            types: e
        }),
        n
    }
    length(e, n=T2.length) {
        return this.test({
            message: n,
            name: "length",
            exclusive: !0,
            params: {
                length: e
            },
            skipAbsent: !0,
            test(r) {
                return r.length === this.resolve(e)
            }
        })
    }
    min(e, n) {
        return n = n || T2.min,
        this.test({
            message: n,
            name: "min",
            exclusive: !0,
            params: {
                min: e
            },
            skipAbsent: !0,
            test(r) {
                return r.length >= this.resolve(e)
            }
        })
    }
    max(e, n) {
        return n = n || T2.max,
        this.test({
            message: n,
            name: "max",
            exclusive: !0,
            params: {
                max: e
            },
            skipAbsent: !0,
            test(r) {
                return r.length <= this.resolve(e)
            }
        })
    }
    ensure() {
        return this.default(()=>[]).transform((e,n)=>this._typeCheck(e) ? e : n == null ? [] : [].concat(n))
    }
    compact(e) {
        let n = e ? (r,s,i)=>!e(r, s, i) : r=>!!r;
        return this.transform(r=>r != null ? r.filter(n) : r)
    }
    describe(e) {
        const n = (e ? this.resolve(e) : this).clone()
          , r = super.describe(e);
        if (n.innerType) {
            var s;
            let i = e;
            (s = i) != null && s.value && (i = Object.assign({}, i, {
                parent: i.value,
                value: i.value[0]
            })),
            r.innerType = n.innerType.describe(i)
        }
        return r
    }
}
Mne.prototype = _I.prototype;
const Tne = t=>{
    const [e,n] = y.useState(!1);
    return y.useEffect(()=>{
        if (t.delay) {
            const r = setTimeout(()=>n(!0), t.delay);
            return ()=>clearTimeout(r)
        } else {
            n(!0);
            return
        }
    }
    , [t.delay]),
    e ? c.jsx(c.Fragment, {
        children: t.children
    }) : null
}
  , Xp = t=>{
    const {inline: e, children: n, delay: r, ...s} = t;
    return n ? c.jsx(Tne, {
        delay: r,
        children: c.jsx(Lne, {
            inline: e,
            align: "center",
            ...s,
            children: c.jsx(Xe, {
                type: "micro",
                color: "redText",
                children: n
            })
        })
    }) : c.jsx(c.Fragment, {})
}
  , Lne = ae(Lt)`
  @keyframes fadeIn {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  animation: fadeIn 0.2s cubic-bezier(0.165, 0.84, 0.44, 1) both;

  ${t=>t.inline === !0 ? `background: ${t.theme.color.redBg};
         padding: 0 8px;
         border-radius: 4px;
         position: absolute;
         right: 4px;
         top: 5px;
         bottom: 5px;
         line-height: 100%;
  ` : `margin-top: 8px;
         padding-left: 2px;
  `}
`
  , Sh = y.forwardRef((t,e)=>{
    const {onSave: n, onCancel: r, onSubmit: s, onKeyDown: i, ...a} = t
      , o = d=>{
        const u = d.nativeEvent.isComposing;
        t.disabled || (Fc.isModKey(d.nativeEvent) && d.key === "Enter" && (d.preventDefault(),
        d.stopPropagation(),
        t.onSubmit(d)),
        n && !u && Fc.isModKey(d.nativeEvent) && d.key === "s" && (d.preventDefault(),
        d.stopPropagation(),
        n()),
        r && Fc.isEscape(d) && (d.preventDefault(),
        d.stopPropagation(),
        r()),
        i && i(d))
    }
      , l = d=>{
        d.preventDefault(),
        t.disabled || s(d)
    }
    ;
    return c.jsx("form", {
        ...a,
        onKeyDown: o,
        onSubmit: l,
        ref: e
    })
}
);
function bv(t, [e,n]) {
    return Math.min(n, Math.max(e, t))
}
function One(t, e=globalThis == null ? void 0 : globalThis.document) {
    const n = Zc(t);
    y.useEffect(()=>{
        const r = s=>{
            s.key === "Escape" && n(s)
        }
        ;
        return e.addEventListener("keydown", r),
        ()=>e.removeEventListener("keydown", r)
    }
    , [n, e])
}
const q9 = "dismissableLayer.update"
  , Rne = "dismissableLayer.pointerDownOutside"
  , Pne = "dismissableLayer.focusOutside";
let vv;
const $ne = y.createContext({
    layers: new Set,
    layersWithOutsidePointerEventsDisabled: new Set,
    branches: new Set
})
  , Fne = y.forwardRef((t,e)=>{
    var n;
    const {disableOutsidePointerEvents: r=!1, onEscapeKeyDown: s, onPointerDownOutside: i, onFocusOutside: a, onInteractOutside: o, onDismiss: l, ...d} = t
      , u = y.useContext($ne)
      , [h,f] = y.useState(null)
      , p = (n = h == null ? void 0 : h.ownerDocument) !== null && n !== void 0 ? n : globalThis == null ? void 0 : globalThis.document
      , [,m] = y.useState({})
      , g = Rs(e, z=>f(z))
      , C = Array.from(u.layers)
      , [b] = [...u.layersWithOutsidePointerEventsDisabled].slice(-1)
      , k = C.indexOf(b)
      , S = h ? C.indexOf(h) : -1
      , D = u.layersWithOutsidePointerEventsDisabled.size > 0
      , R = S >= k
      , T = Nne(z=>{
        const W = z.target
          , fe = [...u.branches].some(me=>me.contains(W));
        !R || fe || (i == null || i(z),
        o == null || o(z),
        z.defaultPrevented || l == null || l())
    }
    , p)
      , B = Vne(z=>{
        const W = z.target;
        [...u.branches].some(me=>me.contains(W)) || (a == null || a(z),
        o == null || o(z),
        z.defaultPrevented || l == null || l())
    }
    , p);
    return One(z=>{
        S === u.layers.size - 1 && (s == null || s(z),
        !z.defaultPrevented && l && (z.preventDefault(),
        l()))
    }
    , p),
    y.useEffect(()=>{
        if (h)
            return r && (u.layersWithOutsidePointerEventsDisabled.size === 0 && (vv = p.body.style.pointerEvents,
            p.body.style.pointerEvents = "none"),
            u.layersWithOutsidePointerEventsDisabled.add(h)),
            u.layers.add(h),
            wv(),
            ()=>{
                r && u.layersWithOutsidePointerEventsDisabled.size === 1 && (p.body.style.pointerEvents = vv)
            }
    }
    , [h, p, r, u]),
    y.useEffect(()=>()=>{
        h && (u.layers.delete(h),
        u.layersWithOutsidePointerEventsDisabled.delete(h),
        wv())
    }
    , [h, u]),
    y.useEffect(()=>{
        const z = ()=>m({});
        return document.addEventListener(q9, z),
        ()=>document.removeEventListener(q9, z)
    }
    , []),
    y.createElement(vr.div, O3({}, d, {
        ref: g,
        style: {
            pointerEvents: D ? R ? "auto" : "none" : void 0,
            ...t.style
        },
        onFocusCapture: Fr(t.onFocusCapture, B.onFocusCapture),
        onBlurCapture: Fr(t.onBlurCapture, B.onBlurCapture),
        onPointerDownCapture: Fr(t.onPointerDownCapture, T.onPointerDownCapture)
    }))
}
);
function Nne(t, e=globalThis == null ? void 0 : globalThis.document) {
    const n = Zc(t)
      , r = y.useRef(!1)
      , s = y.useRef(()=>{}
    );
    return y.useEffect(()=>{
        const i = o=>{
            if (o.target && !r.current) {
                let d = function() {
                    II(Rne, n, l, {
                        discrete: !0
                    })
                };
                const l = {
                    originalEvent: o
                };
                o.pointerType === "touch" ? (e.removeEventListener("click", s.current),
                s.current = d,
                e.addEventListener("click", s.current, {
                    once: !0
                })) : d()
            }
            r.current = !1
        }
          , a = window.setTimeout(()=>{
            e.addEventListener("pointerdown", i)
        }
        , 0);
        return ()=>{
            window.clearTimeout(a),
            e.removeEventListener("pointerdown", i),
            e.removeEventListener("click", s.current)
        }
    }
    , [e, n]),
    {
        onPointerDownCapture: ()=>r.current = !0
    }
}
function Vne(t, e=globalThis == null ? void 0 : globalThis.document) {
    const n = Zc(t)
      , r = y.useRef(!1);
    return y.useEffect(()=>{
        const s = i=>{
            i.target && !r.current && II(Pne, n, {
                originalEvent: i
            }, {
                discrete: !1
            })
        }
        ;
        return e.addEventListener("focusin", s),
        ()=>e.removeEventListener("focusin", s)
    }
    , [e, n]),
    {
        onFocusCapture: ()=>r.current = !0,
        onBlurCapture: ()=>r.current = !1
    }
}
function wv() {
    const t = new CustomEvent(q9);
    document.dispatchEvent(t)
}
function II(t, e, n, {discrete: r}) {
    const s = n.originalEvent.target
      , i = new CustomEvent(t,{
        bubbles: !1,
        cancelable: !0,
        detail: n
    });
    e && s.addEventListener(t, e, {
        once: !0
    }),
    r ? KA(s, i) : s.dispatchEvent(i)
}
let s7 = 0;
function Bne() {
    y.useEffect(()=>{
        var t, e;
        const n = document.querySelectorAll("[data-radix-focus-guard]");
        return document.body.insertAdjacentElement("afterbegin", (t = n[0]) !== null && t !== void 0 ? t : kv()),
        document.body.insertAdjacentElement("beforeend", (e = n[1]) !== null && e !== void 0 ? e : kv()),
        s7++,
        ()=>{
            s7 === 1 && document.querySelectorAll("[data-radix-focus-guard]").forEach(r=>r.remove()),
            s7--
        }
    }
    , [])
}
function kv() {
    const t = document.createElement("span");
    return t.setAttribute("data-radix-focus-guard", ""),
    t.tabIndex = 0,
    t.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none",
    t
}
const i7 = "focusScope.autoFocusOnMount"
  , a7 = "focusScope.autoFocusOnUnmount"
  , xv = {
    bubbles: !1,
    cancelable: !0
}
  , Une = y.forwardRef((t,e)=>{
    const {loop: n=!1, trapped: r=!1, onMountAutoFocus: s, onUnmountAutoFocus: i, ...a} = t
      , [o,l] = y.useState(null)
      , d = Zc(s)
      , u = Zc(i)
      , h = y.useRef(null)
      , f = Rs(e, g=>l(g))
      , p = y.useRef({
        paused: !1,
        pause() {
            this.paused = !0
        },
        resume() {
            this.paused = !1
        }
    }).current;
    y.useEffect(()=>{
        if (r) {
            let g = function(b) {
                if (p.paused || !o)
                    return;
                const k = b.target;
                o.contains(k) ? h.current = k : mc(h.current, {
                    select: !0
                })
            }
              , C = function(b) {
                p.paused || !o || o.contains(b.relatedTarget) || mc(h.current, {
                    select: !0
                })
            };
            return document.addEventListener("focusin", g),
            document.addEventListener("focusout", C),
            ()=>{
                document.removeEventListener("focusin", g),
                document.removeEventListener("focusout", C)
            }
        }
    }
    , [r, o, p.paused]),
    y.useEffect(()=>{
        if (o) {
            Sv.add(p);
            const g = document.activeElement;
            if (!o.contains(g)) {
                const b = new CustomEvent(i7,xv);
                o.addEventListener(i7, d),
                o.dispatchEvent(b),
                b.defaultPrevented || (Hne(Gne(EI(o)), {
                    select: !0
                }),
                document.activeElement === g && mc(o))
            }
            return ()=>{
                o.removeEventListener(i7, d),
                setTimeout(()=>{
                    const b = new CustomEvent(a7,xv);
                    o.addEventListener(a7, u),
                    o.dispatchEvent(b),
                    b.defaultPrevented || mc(g ?? document.body, {
                        select: !0
                    }),
                    o.removeEventListener(a7, u),
                    Sv.remove(p)
                }
                , 0)
            }
        }
    }
    , [o, d, u, p]);
    const m = y.useCallback(g=>{
        if (!n && !r || p.paused)
            return;
        const C = g.key === "Tab" && !g.altKey && !g.ctrlKey && !g.metaKey
          , b = document.activeElement;
        if (C && b) {
            const k = g.currentTarget
              , [S,D] = zne(k);
            S && D ? !g.shiftKey && b === D ? (g.preventDefault(),
            n && mc(S, {
                select: !0
            })) : g.shiftKey && b === S && (g.preventDefault(),
            n && mc(D, {
                select: !0
            })) : b === k && g.preventDefault()
        }
    }
    , [n, r, p.paused]);
    return y.createElement(vr.div, O3({
        tabIndex: -1
    }, a, {
        ref: f,
        onKeyDown: m
    }))
}
);
function Hne(t, {select: e=!1}={}) {
    const n = document.activeElement;
    for (const r of t)
        if (mc(r, {
            select: e
        }),
        document.activeElement !== n)
            return
}
function zne(t) {
    const e = EI(t)
      , n = Dv(e, t)
      , r = Dv(e.reverse(), t);
    return [n, r]
}
function EI(t) {
    const e = []
      , n = document.createTreeWalker(t, NodeFilter.SHOW_ELEMENT, {
        acceptNode: r=>{
            const s = r.tagName === "INPUT" && r.type === "hidden";
            return r.disabled || r.hidden || s ? NodeFilter.FILTER_SKIP : r.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP
        }
    });
    for (; n.nextNode(); )
        e.push(n.currentNode);
    return e
}
function Dv(t, e) {
    for (const n of t)
        if (!Zne(n, {
            upTo: e
        }))
            return n
}
function Zne(t, {upTo: e}) {
    if (getComputedStyle(t).visibility === "hidden")
        return !0;
    for (; t; ) {
        if (e !== void 0 && t === e)
            return !1;
        if (getComputedStyle(t).display === "none")
            return !0;
        t = t.parentElement
    }
    return !1
}
function qne(t) {
    return t instanceof HTMLInputElement && "select"in t
}
function mc(t, {select: e=!1}={}) {
    if (t && t.focus) {
        const n = document.activeElement;
        t.focus({
            preventScroll: !0
        }),
        t !== n && qne(t) && e && t.select()
    }
}
const Sv = Wne();
function Wne() {
    let t = [];
    return {
        add(e) {
            const n = t[0];
            e !== n && (n == null || n.pause()),
            t = _v(t, e),
            t.unshift(e)
        },
        remove(e) {
            var n;
            t = _v(t, e),
            (n = t[0]) === null || n === void 0 || n.resume()
        }
    }
}
function _v(t, e) {
    const n = [...t]
      , r = n.indexOf(e);
    return r !== -1 && n.splice(r, 1),
    n
}
function Gne(t) {
    return t.filter(e=>e.tagName !== "A")
}
function _l(t) {
    return t.split("-")[0]
}
function k5(t) {
    return t.split("-")[1]
}
function iu(t) {
    return ["top", "bottom"].includes(_l(t)) ? "x" : "y"
}
function Jp(t) {
    return t === "y" ? "height" : "width"
}
function Iv(t, e, n) {
    let {reference: r, floating: s} = t;
    const i = r.x + r.width / 2 - s.width / 2
      , a = r.y + r.height / 2 - s.height / 2
      , o = iu(e)
      , l = Jp(o)
      , d = r[l] / 2 - s[l] / 2
      , u = o === "x";
    let h;
    switch (_l(e)) {
    case "top":
        h = {
            x: i,
            y: r.y - s.height
        };
        break;
    case "bottom":
        h = {
            x: i,
            y: r.y + r.height
        };
        break;
    case "right":
        h = {
            x: r.x + r.width,
            y: a
        };
        break;
    case "left":
        h = {
            x: r.x - s.width,
            y: a
        };
        break;
    default:
        h = {
            x: r.x,
            y: r.y
        }
    }
    switch (k5(e)) {
    case "start":
        h[o] -= d * (n && u ? -1 : 1);
        break;
    case "end":
        h[o] += d * (n && u ? -1 : 1)
    }
    return h
}
const Kne = async(t,e,n)=>{
    const {placement: r="bottom", strategy: s="absolute", middleware: i=[], platform: a} = n
      , o = await (a.isRTL == null ? void 0 : a.isRTL(e));
    let l = await a.getElementRects({
        reference: t,
        floating: e,
        strategy: s
    })
      , {x: d, y: u} = Iv(l, r, o)
      , h = r
      , f = {}
      , p = 0;
    for (let m = 0; m < i.length; m++) {
        const {name: g, fn: C} = i[m]
          , {x: b, y: k, data: S, reset: D} = await C({
            x: d,
            y: u,
            initialPlacement: r,
            placement: h,
            strategy: s,
            middlewareData: f,
            rects: l,
            platform: a,
            elements: {
                reference: t,
                floating: e
            }
        });
        d = b ?? d,
        u = k ?? u,
        f = {
            ...f,
            [g]: {
                ...f[g],
                ...S
            }
        },
        D && p <= 50 && (p++,
        typeof D == "object" && (D.placement && (h = D.placement),
        D.rects && (l = D.rects === !0 ? await a.getElementRects({
            reference: t,
            floating: e,
            strategy: s
        }) : D.rects),
        {x: d, y: u} = Iv(l, h, o)),
        m = -1)
    }
    return {
        x: d,
        y: u,
        placement: h,
        strategy: s,
        middlewareData: f
    }
}
;
function AI(t) {
    return typeof t != "number" ? function(e) {
        return {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            ...e
        }
    }(t) : {
        top: t,
        right: t,
        bottom: t,
        left: t
    }
}
function t3(t) {
    return {
        ...t,
        top: t.y,
        left: t.x,
        right: t.x + t.width,
        bottom: t.y + t.height
    }
}
async function e5(t, e) {
    var n;
    e === void 0 && (e = {});
    const {x: r, y: s, platform: i, rects: a, elements: o, strategy: l} = t
      , {boundary: d="clippingAncestors", rootBoundary: u="viewport", elementContext: h="floating", altBoundary: f=!1, padding: p=0} = e
      , m = AI(p)
      , g = o[f ? h === "floating" ? "reference" : "floating" : h]
      , C = t3(await i.getClippingRect({
        element: (n = await (i.isElement == null ? void 0 : i.isElement(g))) == null || n ? g : g.contextElement || await (i.getDocumentElement == null ? void 0 : i.getDocumentElement(o.floating)),
        boundary: d,
        rootBoundary: u,
        strategy: l
    }))
      , b = t3(i.convertOffsetParentRelativeRectToViewportRelativeRect ? await i.convertOffsetParentRelativeRectToViewportRelativeRect({
        rect: h === "floating" ? {
            ...a.floating,
            x: r,
            y: s
        } : a.reference,
        offsetParent: await (i.getOffsetParent == null ? void 0 : i.getOffsetParent(o.floating)),
        strategy: l
    }) : a[h]);
    return {
        top: C.top - b.top + m.top,
        bottom: b.bottom - C.bottom + m.bottom,
        left: C.left - b.left + m.left,
        right: b.right - C.right + m.right
    }
}
const Yne = Math.min
  , gc = Math.max;
function W9(t, e, n) {
    return gc(t, Yne(e, n))
}
const Ev = t=>({
    name: "arrow",
    options: t,
    async fn(e) {
        const {element: n, padding: r=0} = t ?? {}
          , {x: s, y: i, placement: a, rects: o, platform: l} = e;
        if (n == null)
            return {};
        const d = AI(r)
          , u = {
            x: s,
            y: i
        }
          , h = iu(a)
          , f = k5(a)
          , p = Jp(h)
          , m = await l.getDimensions(n)
          , g = h === "y" ? "top" : "left"
          , C = h === "y" ? "bottom" : "right"
          , b = o.reference[p] + o.reference[h] - u[h] - o.floating[p]
          , k = u[h] - o.reference[h]
          , S = await (l.getOffsetParent == null ? void 0 : l.getOffsetParent(n));
        let D = S ? h === "y" ? S.clientHeight || 0 : S.clientWidth || 0 : 0;
        D === 0 && (D = o.floating[p]);
        const R = b / 2 - k / 2
          , T = d[g]
          , B = D - m[p] - d[C]
          , z = D / 2 - m[p] / 2 + R
          , W = W9(T, z, B)
          , fe = (f === "start" ? d[g] : d[C]) > 0 && z !== W && o.reference[p] <= o.floating[p];
        return {
            [h]: u[h] - (fe ? z < T ? T - z : B - z : 0),
            data: {
                [h]: W,
                centerOffset: z - W
            }
        }
    }
})
  , Qne = {
    left: "right",
    right: "left",
    bottom: "top",
    top: "bottom"
};
function n3(t) {
    return t.replace(/left|right|bottom|top/g, e=>Qne[e])
}
function Xne(t, e, n) {
    n === void 0 && (n = !1);
    const r = k5(t)
      , s = iu(t)
      , i = Jp(s);
    let a = s === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
    return e.reference[i] > e.floating[i] && (a = n3(a)),
    {
        main: a,
        cross: n3(a)
    }
}
const Jne = {
    start: "end",
    end: "start"
};
function Av(t) {
    return t.replace(/start|end/g, e=>Jne[e])
}
const jI = ["top", "right", "bottom", "left"];
jI.reduce((t,e)=>t.concat(e, e + "-start", e + "-end"), []);
const ere = function(t) {
    return t === void 0 && (t = {}),
    {
        name: "flip",
        options: t,
        async fn(e) {
            var n;
            const {placement: r, middlewareData: s, rects: i, initialPlacement: a, platform: o, elements: l} = e
              , {mainAxis: d=!0, crossAxis: u=!0, fallbackPlacements: h, fallbackStrategy: f="bestFit", flipAlignment: p=!0, ...m} = t
              , g = _l(r)
              , C = h || (g === a || !p ? [n3(a)] : function(z) {
                const W = n3(z);
                return [Av(z), W, Av(W)]
            }(a))
              , b = [a, ...C]
              , k = await e5(e, m)
              , S = [];
            let D = ((n = s.flip) == null ? void 0 : n.overflows) || [];
            if (d && S.push(k[g]),
            u) {
                const {main: z, cross: W} = Xne(r, i, await (o.isRTL == null ? void 0 : o.isRTL(l.floating)));
                S.push(k[z], k[W])
            }
            if (D = [...D, {
                placement: r,
                overflows: S
            }],
            !S.every(z=>z <= 0)) {
                var R, T;
                const z = ((R = (T = s.flip) == null ? void 0 : T.index) != null ? R : 0) + 1
                  , W = b[z];
                if (W)
                    return {
                        data: {
                            index: z,
                            overflows: D
                        },
                        reset: {
                            placement: W
                        }
                    };
                let fe = "bottom";
                switch (f) {
                case "bestFit":
                    {
                        var B;
                        const me = (B = D.map(_e=>[_e, _e.overflows.filter(I=>I > 0).reduce((I,Q)=>I + Q, 0)]).sort((_e,I)=>_e[1] - I[1])[0]) == null ? void 0 : B[0].placement;
                        me && (fe = me);
                        break
                    }
                case "initialPlacement":
                    fe = a
                }
                if (r !== fe)
                    return {
                        reset: {
                            placement: fe
                        }
                    }
            }
            return {}
        }
    }
};
function jv(t, e) {
    return {
        top: t.top - e.height,
        right: t.right - e.width,
        bottom: t.bottom - e.height,
        left: t.left - e.width
    }
}
function Mv(t) {
    return jI.some(e=>t[e] >= 0)
}
const tre = function(t) {
    let {strategy: e="referenceHidden", ...n} = t === void 0 ? {} : t;
    return {
        name: "hide",
        async fn(r) {
            const {rects: s} = r;
            switch (e) {
            case "referenceHidden":
                {
                    const i = jv(await e5(r, {
                        ...n,
                        elementContext: "reference"
                    }), s.reference);
                    return {
                        data: {
                            referenceHiddenOffsets: i,
                            referenceHidden: Mv(i)
                        }
                    }
                }
            case "escaped":
                {
                    const i = jv(await e5(r, {
                        ...n,
                        altBoundary: !0
                    }), s.floating);
                    return {
                        data: {
                            escapedOffsets: i,
                            escaped: Mv(i)
                        }
                    }
                }
            default:
                return {}
            }
        }
    }
}
  , nre = function(t) {
    return t === void 0 && (t = 0),
    {
        name: "offset",
        options: t,
        async fn(e) {
            const {x: n, y: r} = e
              , s = await async function(i, a) {
                const {placement: o, platform: l, elements: d} = i
                  , u = await (l.isRTL == null ? void 0 : l.isRTL(d.floating))
                  , h = _l(o)
                  , f = k5(o)
                  , p = iu(o) === "x"
                  , m = ["left", "top"].includes(h) ? -1 : 1
                  , g = u && p ? -1 : 1
                  , C = typeof a == "function" ? a(i) : a;
                let {mainAxis: b, crossAxis: k, alignmentAxis: S} = typeof C == "number" ? {
                    mainAxis: C,
                    crossAxis: 0,
                    alignmentAxis: null
                } : {
                    mainAxis: 0,
                    crossAxis: 0,
                    alignmentAxis: null,
                    ...C
                };
                return f && typeof S == "number" && (k = f === "end" ? -1 * S : S),
                p ? {
                    x: k * g,
                    y: b * m
                } : {
                    x: b * m,
                    y: k * g
                }
            }(e, t);
            return {
                x: n + s.x,
                y: r + s.y,
                data: s
            }
        }
    }
};
function MI(t) {
    return t === "x" ? "y" : "x"
}
const rre = function(t) {
    return t === void 0 && (t = {}),
    {
        name: "shift",
        options: t,
        async fn(e) {
            const {x: n, y: r, placement: s} = e
              , {mainAxis: i=!0, crossAxis: a=!1, limiter: o={
                fn: C=>{
                    let {x: b, y: k} = C;
                    return {
                        x: b,
                        y: k
                    }
                }
            }, ...l} = t
              , d = {
                x: n,
                y: r
            }
              , u = await e5(e, l)
              , h = iu(_l(s))
              , f = MI(h);
            let p = d[h]
              , m = d[f];
            if (i) {
                const C = h === "y" ? "bottom" : "right";
                p = W9(p + u[h === "y" ? "top" : "left"], p, p - u[C])
            }
            if (a) {
                const C = f === "y" ? "bottom" : "right";
                m = W9(m + u[f === "y" ? "top" : "left"], m, m - u[C])
            }
            const g = o.fn({
                ...e,
                [h]: p,
                [f]: m
            });
            return {
                ...g,
                data: {
                    x: g.x - n,
                    y: g.y - r
                }
            }
        }
    }
}
  , sre = function(t) {
    return t === void 0 && (t = {}),
    {
        options: t,
        fn(e) {
            const {x: n, y: r, placement: s, rects: i, middlewareData: a} = e
              , {offset: o=0, mainAxis: l=!0, crossAxis: d=!0} = t
              , u = {
                x: n,
                y: r
            }
              , h = iu(s)
              , f = MI(h);
            let p = u[h]
              , m = u[f];
            const g = typeof o == "function" ? o({
                ...i,
                placement: s
            }) : o
              , C = typeof g == "number" ? {
                mainAxis: g,
                crossAxis: 0
            } : {
                mainAxis: 0,
                crossAxis: 0,
                ...g
            };
            if (l) {
                const R = h === "y" ? "height" : "width"
                  , T = i.reference[h] - i.floating[R] + C.mainAxis
                  , B = i.reference[h] + i.reference[R] - C.mainAxis;
                p < T ? p = T : p > B && (p = B)
            }
            if (d) {
                var b, k, S, D;
                const R = h === "y" ? "width" : "height"
                  , T = ["top", "left"].includes(_l(s))
                  , B = i.reference[f] - i.floating[R] + (T && (b = (k = a.offset) == null ? void 0 : k[f]) != null ? b : 0) + (T ? 0 : C.crossAxis)
                  , z = i.reference[f] + i.reference[R] + (T ? 0 : (S = (D = a.offset) == null ? void 0 : D[f]) != null ? S : 0) - (T ? C.crossAxis : 0);
                m < B ? m = B : m > z && (m = z)
            }
            return {
                [h]: p,
                [f]: m
            }
        }
    }
}
  , ire = function(t) {
    return t === void 0 && (t = {}),
    {
        name: "size",
        options: t,
        async fn(e) {
            const {placement: n, rects: r, platform: s, elements: i} = e
              , {apply: a, ...o} = t
              , l = await e5(e, o)
              , d = _l(n)
              , u = k5(n);
            let h, f;
            d === "top" || d === "bottom" ? (h = d,
            f = u === (await (s.isRTL == null ? void 0 : s.isRTL(i.floating)) ? "start" : "end") ? "left" : "right") : (f = d,
            h = u === "end" ? "top" : "bottom");
            const p = gc(l.left, 0)
              , m = gc(l.right, 0)
              , g = gc(l.top, 0)
              , C = gc(l.bottom, 0)
              , b = {
                availableHeight: r.floating.height - (["left", "right"].includes(n) ? 2 * (g !== 0 || C !== 0 ? g + C : gc(l.top, l.bottom)) : l[h]),
                availableWidth: r.floating.width - (["top", "bottom"].includes(n) ? 2 * (p !== 0 || m !== 0 ? p + m : gc(l.left, l.right)) : l[f])
            }
              , k = await s.getDimensions(i.floating);
            a == null || a({
                ...e,
                ...b
            });
            const S = await s.getDimensions(i.floating);
            return k.width !== S.width || k.height !== S.height ? {
                reset: {
                    rects: !0
                }
            } : {}
        }
    }
};
function TI(t) {
    return t && t.document && t.location && t.alert && t.setInterval
}
function n1(t) {
    if (t == null)
        return window;
    if (!TI(t)) {
        const e = t.ownerDocument;
        return e && e.defaultView || window
    }
    return t
}
function x5(t) {
    return n1(t).getComputedStyle(t)
}
function Mo(t) {
    return TI(t) ? "" : t ? (t.nodeName || "").toLowerCase() : ""
}
function LI() {
    const t = navigator.userAgentData;
    return t != null && t.brands ? t.brands.map(e=>e.brand + "/" + e.version).join(" ") : navigator.userAgent
}
function za(t) {
    return t instanceof n1(t).HTMLElement
}
function Q1(t) {
    return t instanceof n1(t).Element
}
function em(t) {
    return typeof ShadowRoot > "u" ? !1 : t instanceof n1(t).ShadowRoot || t instanceof ShadowRoot
}
function _h(t) {
    const {overflow: e, overflowX: n, overflowY: r} = x5(t);
    return /auto|scroll|overlay|hidden/.test(e + r + n)
}
function are(t) {
    return ["table", "td", "th"].includes(Mo(t))
}
function Tv(t) {
    const e = /firefox/i.test(LI())
      , n = x5(t);
    return n.transform !== "none" || n.perspective !== "none" || n.contain === "paint" || ["transform", "perspective"].includes(n.willChange) || e && n.willChange === "filter" || e && !!n.filter && n.filter !== "none"
}
function OI() {
    return !/^((?!chrome|android).)*safari/i.test(LI())
}
const Lv = Math.min
  , Vu = Math.max
  , r3 = Math.round;
function To(t, e, n) {
    var r, s, i, a;
    e === void 0 && (e = !1),
    n === void 0 && (n = !1);
    const o = t.getBoundingClientRect();
    let l = 1
      , d = 1;
    e && za(t) && (l = t.offsetWidth > 0 && r3(o.width) / t.offsetWidth || 1,
    d = t.offsetHeight > 0 && r3(o.height) / t.offsetHeight || 1);
    const u = Q1(t) ? n1(t) : window
      , h = !OI() && n
      , f = (o.left + (h && (r = (s = u.visualViewport) == null ? void 0 : s.offsetLeft) != null ? r : 0)) / l
      , p = (o.top + (h && (i = (a = u.visualViewport) == null ? void 0 : a.offsetTop) != null ? i : 0)) / d
      , m = o.width / l
      , g = o.height / d;
    return {
        width: m,
        height: g,
        top: p,
        right: f + m,
        bottom: p + g,
        left: f,
        x: f,
        y: p
    }
}
function L1(t) {
    return (e = t,
    (e instanceof n1(e).Node ? t.ownerDocument : t.document) || window.document).documentElement;
    var e
}
function Ih(t) {
    return Q1(t) ? {
        scrollLeft: t.scrollLeft,
        scrollTop: t.scrollTop
    } : {
        scrollLeft: t.pageXOffset,
        scrollTop: t.pageYOffset
    }
}
function RI(t) {
    return To(L1(t)).left + Ih(t).scrollLeft
}
function ore(t, e, n) {
    const r = za(e)
      , s = L1(e)
      , i = To(t, r && function(l) {
        const d = To(l);
        return r3(d.width) !== l.offsetWidth || r3(d.height) !== l.offsetHeight
    }(e), n === "fixed");
    let a = {
        scrollLeft: 0,
        scrollTop: 0
    };
    const o = {
        x: 0,
        y: 0
    };
    if (r || !r && n !== "fixed")
        if ((Mo(e) !== "body" || _h(s)) && (a = Ih(e)),
        za(e)) {
            const l = To(e, !0);
            o.x = l.x + e.clientLeft,
            o.y = l.y + e.clientTop
        } else
            s && (o.x = RI(s));
    return {
        x: i.left + a.scrollLeft - o.x,
        y: i.top + a.scrollTop - o.y,
        width: i.width,
        height: i.height
    }
}
function PI(t) {
    return Mo(t) === "html" ? t : t.assignedSlot || t.parentNode || (em(t) ? t.host : null) || L1(t)
}
function Ov(t) {
    return za(t) && getComputedStyle(t).position !== "fixed" ? t.offsetParent : null
}
function G9(t) {
    const e = n1(t);
    let n = Ov(t);
    for (; n && are(n) && getComputedStyle(n).position === "static"; )
        n = Ov(n);
    return n && (Mo(n) === "html" || Mo(n) === "body" && getComputedStyle(n).position === "static" && !Tv(n)) ? e : n || function(r) {
        let s = PI(r);
        for (em(s) && (s = s.host); za(s) && !["html", "body"].includes(Mo(s)); ) {
            if (Tv(s))
                return s;
            s = s.parentNode
        }
        return null
    }(t) || e
}
function Rv(t) {
    if (za(t))
        return {
            width: t.offsetWidth,
            height: t.offsetHeight
        };
    const e = To(t);
    return {
        width: e.width,
        height: e.height
    }
}
function $I(t) {
    const e = PI(t);
    return ["html", "body", "#document"].includes(Mo(e)) ? t.ownerDocument.body : za(e) && _h(e) ? e : $I(e)
}
function s3(t, e) {
    var n;
    e === void 0 && (e = []);
    const r = $I(t)
      , s = r === ((n = t.ownerDocument) == null ? void 0 : n.body)
      , i = n1(r)
      , a = s ? [i].concat(i.visualViewport || [], _h(r) ? r : []) : r
      , o = e.concat(a);
    return s ? o : o.concat(s3(a))
}
function Pv(t, e, n) {
    return e === "viewport" ? t3(function(r, s) {
        const i = n1(r)
          , a = L1(r)
          , o = i.visualViewport;
        let l = a.clientWidth
          , d = a.clientHeight
          , u = 0
          , h = 0;
        if (o) {
            l = o.width,
            d = o.height;
            const f = OI();
            (f || !f && s === "fixed") && (u = o.offsetLeft,
            h = o.offsetTop)
        }
        return {
            width: l,
            height: d,
            x: u,
            y: h
        }
    }(t, n)) : Q1(e) ? function(r, s) {
        const i = To(r, !1, s === "fixed")
          , a = i.top + r.clientTop
          , o = i.left + r.clientLeft;
        return {
            top: a,
            left: o,
            x: o,
            y: a,
            right: o + r.clientWidth,
            bottom: a + r.clientHeight,
            width: r.clientWidth,
            height: r.clientHeight
        }
    }(e, n) : t3(function(r) {
        var s;
        const i = L1(r)
          , a = Ih(r)
          , o = (s = r.ownerDocument) == null ? void 0 : s.body
          , l = Vu(i.scrollWidth, i.clientWidth, o ? o.scrollWidth : 0, o ? o.clientWidth : 0)
          , d = Vu(i.scrollHeight, i.clientHeight, o ? o.scrollHeight : 0, o ? o.clientHeight : 0);
        let u = -a.scrollLeft + RI(r);
        const h = -a.scrollTop;
        return x5(o || i).direction === "rtl" && (u += Vu(i.clientWidth, o ? o.clientWidth : 0) - l),
        {
            width: l,
            height: d,
            x: u,
            y: h
        }
    }(L1(t)))
}
function cre(t) {
    const e = s3(t)
      , n = ["absolute", "fixed"].includes(x5(t).position) && za(t) ? G9(t) : t;
    return Q1(n) ? e.filter(r=>Q1(r) && function(s, i) {
        const a = i.getRootNode == null ? void 0 : i.getRootNode();
        if (s.contains(i))
            return !0;
        if (a && em(a)) {
            let o = i;
            do {
                if (o && s === o)
                    return !0;
                o = o.parentNode || o.host
            } while (o)
        }
        return !1
    }(r, n) && Mo(r) !== "body") : []
}
const lre = {
    getClippingRect: function(t) {
        let {element: e, boundary: n, rootBoundary: r, strategy: s} = t;
        const i = [...n === "clippingAncestors" ? cre(e) : [].concat(n), r]
          , a = i[0]
          , o = i.reduce((l,d)=>{
            const u = Pv(e, d, s);
            return l.top = Vu(u.top, l.top),
            l.right = Lv(u.right, l.right),
            l.bottom = Lv(u.bottom, l.bottom),
            l.left = Vu(u.left, l.left),
            l
        }
        , Pv(e, a, s));
        return {
            width: o.right - o.left,
            height: o.bottom - o.top,
            x: o.left,
            y: o.top
        }
    },
    convertOffsetParentRelativeRectToViewportRelativeRect: function(t) {
        let {rect: e, offsetParent: n, strategy: r} = t;
        const s = za(n)
          , i = L1(n);
        if (n === i)
            return e;
        let a = {
            scrollLeft: 0,
            scrollTop: 0
        };
        const o = {
            x: 0,
            y: 0
        };
        if ((s || !s && r !== "fixed") && ((Mo(n) !== "body" || _h(i)) && (a = Ih(n)),
        za(n))) {
            const l = To(n, !0);
            o.x = l.x + n.clientLeft,
            o.y = l.y + n.clientTop
        }
        return {
            ...e,
            x: e.x - a.scrollLeft + o.x,
            y: e.y - a.scrollTop + o.y
        }
    },
    isElement: Q1,
    getDimensions: Rv,
    getOffsetParent: G9,
    getDocumentElement: L1,
    getElementRects: t=>{
        let {reference: e, floating: n, strategy: r} = t;
        return {
            reference: ore(e, G9(n), r),
            floating: {
                ...Rv(n),
                x: 0,
                y: 0
            }
        }
    }
    ,
    getClientRects: t=>Array.from(t.getClientRects()),
    isRTL: t=>x5(t).direction === "rtl"
};
function dre(t, e, n, r) {
    r === void 0 && (r = {});
    const {ancestorScroll: s=!0, ancestorResize: i=!0, elementResize: a=!0, animationFrame: o=!1} = r
      , l = s && !o
      , d = i && !o
      , u = l || d ? [...Q1(t) ? s3(t) : [], ...s3(e)] : [];
    u.forEach(m=>{
        l && m.addEventListener("scroll", n, {
            passive: !0
        }),
        d && m.addEventListener("resize", n)
    }
    );
    let h, f = null;
    if (a) {
        let m = !0;
        f = new ResizeObserver(()=>{
            m || n(),
            m = !1
        }
        ),
        Q1(t) && !o && f.observe(t),
        f.observe(e)
    }
    let p = o ? To(t) : null;
    return o && function m() {
        const g = To(t);
        !p || g.x === p.x && g.y === p.y && g.width === p.width && g.height === p.height || n(),
        p = g,
        h = requestAnimationFrame(m)
    }(),
    n(),
    ()=>{
        var m;
        u.forEach(g=>{
            l && g.removeEventListener("scroll", n),
            d && g.removeEventListener("resize", n)
        }
        ),
        (m = f) == null || m.disconnect(),
        f = null,
        o && cancelAnimationFrame(h)
    }
}
const ure = (t,e,n)=>Kne(t, e, {
    platform: lre,
    ...n
});
var K9 = typeof document < "u" ? y.useLayoutEffect : y.useEffect;
function Y9(t, e) {
    if (t === e)
        return !0;
    if (typeof t != typeof e)
        return !1;
    if (typeof t == "function" && t.toString() === e.toString())
        return !0;
    let n, r, s;
    if (t && e && typeof t == "object") {
        if (Array.isArray(t)) {
            if (n = t.length,
            n != e.length)
                return !1;
            for (r = n; r-- !== 0; )
                if (!Y9(t[r], e[r]))
                    return !1;
            return !0
        }
        if (s = Object.keys(t),
        n = s.length,
        n !== Object.keys(e).length)
            return !1;
        for (r = n; r-- !== 0; )
            if (!Object.prototype.hasOwnProperty.call(e, s[r]))
                return !1;
        for (r = n; r-- !== 0; ) {
            const i = s[r];
            if (!(i === "_owner" && t.$$typeof) && !Y9(t[i], e[i]))
                return !1
        }
        return !0
    }
    return t !== t && e !== e
}
function hre(t) {
    const e = y.useRef(t);
    return K9(()=>{
        e.current = t
    }
    ),
    e
}
function fre(t) {
    let {middleware: e, placement: n="bottom", strategy: r="absolute", whileElementsMounted: s} = t === void 0 ? {} : t;
    const i = y.useRef(null)
      , a = y.useRef(null)
      , o = hre(s)
      , l = y.useRef(null)
      , [d,u] = y.useState({
        x: null,
        y: null,
        strategy: r,
        placement: n,
        middlewareData: {}
    })
      , [h,f] = y.useState(e);
    Y9(h == null ? void 0 : h.map(S=>{
        let {options: D} = S;
        return D
    }
    ), e == null ? void 0 : e.map(S=>{
        let {options: D} = S;
        return D
    }
    )) || f(e);
    const p = y.useCallback(()=>{
        !i.current || !a.current || ure(i.current, a.current, {
            middleware: h,
            placement: n,
            strategy: r
        }).then(S=>{
            m.current && Kd.flushSync(()=>{
                u(S)
            }
            )
        }
        )
    }
    , [h, n, r]);
    K9(()=>{
        m.current && p()
    }
    , [p]);
    const m = y.useRef(!1);
    K9(()=>(m.current = !0,
    ()=>{
        m.current = !1
    }
    ), []);
    const g = y.useCallback(()=>{
        if (typeof l.current == "function" && (l.current(),
        l.current = null),
        i.current && a.current)
            if (o.current) {
                const S = o.current(i.current, a.current, p);
                l.current = S
            } else
                p()
    }
    , [p, o])
      , C = y.useCallback(S=>{
        i.current = S,
        g()
    }
    , [g])
      , b = y.useCallback(S=>{
        a.current = S,
        g()
    }
    , [g])
      , k = y.useMemo(()=>({
        reference: i,
        floating: a
    }), []);
    return y.useMemo(()=>({
        ...d,
        update: p,
        refs: k,
        reference: C,
        floating: b
    }), [d, p, k, C, b])
}
const pre = t=>{
    const {element: e, padding: n} = t;
    function r(s) {
        return Object.prototype.hasOwnProperty.call(s, "current")
    }
    return {
        name: "arrow",
        options: t,
        fn(s) {
            return r(e) ? e.current != null ? Ev({
                element: e.current,
                padding: n
            }).fn(s) : {} : e ? Ev({
                element: e,
                padding: n
            }).fn(s) : {}
        }
    }
}
;
function mre(t) {
    const [e,n] = y.useState(void 0);
    return Ws(()=>{
        if (t) {
            n({
                width: t.offsetWidth,
                height: t.offsetHeight
            });
            const r = new ResizeObserver(s=>{
                if (!Array.isArray(s) || !s.length)
                    return;
                const i = s[0];
                let a, o;
                if ("borderBoxSize"in i) {
                    const l = i.borderBoxSize
                      , d = Array.isArray(l) ? l[0] : l;
                    a = d.inlineSize,
                    o = d.blockSize
                } else
                    a = t.offsetWidth,
                    o = t.offsetHeight;
                n({
                    width: a,
                    height: o
                })
            }
            );
            return r.observe(t, {
                box: "border-box"
            }),
            ()=>r.unobserve(t)
        } else
            n(void 0)
    }
    , [t]),
    e
}
const FI = "Popper"
  , [tm,NI] = Lk(FI)
  , [gre,VI] = tm(FI)
  , yre = t=>{
    const {__scopePopper: e, children: n} = t
      , [r,s] = y.useState(null);
    return y.createElement(gre, {
        scope: e,
        anchor: r,
        onAnchorChange: s
    }, n)
}
  , Cre = "PopperAnchor"
  , bre = y.forwardRef((t,e)=>{
    const {__scopePopper: n, virtualRef: r, ...s} = t
      , i = VI(Cre, n)
      , a = y.useRef(null)
      , o = Rs(e, a);
    return y.useEffect(()=>{
        i.onAnchorChange((r == null ? void 0 : r.current) || a.current)
    }
    ),
    r ? null : y.createElement(vr.div, O3({}, s, {
        ref: o
    }))
}
)
  , i3 = "PopperContent"
  , [vre,V2e] = tm(i3)
  , [wre,kre] = tm(i3, {
    hasParent: !1,
    positionUpdateFns: new Set
})
  , xre = y.forwardRef((t,e)=>{
    var n, r, s, i, a, o, l, d;
    const {__scopePopper: u, side: h="bottom", sideOffset: f=0, align: p="center", alignOffset: m=0, arrowPadding: g=0, collisionBoundary: C=[], collisionPadding: b=0, sticky: k="partial", hideWhenDetached: S=!1, avoidCollisions: D=!0, onPlaced: R, ...T} = t
      , B = VI(i3, u)
      , [z,W] = y.useState(null)
      , fe = Rs(e, ha=>W(ha))
      , [me,_e] = y.useState(null)
      , I = mre(me)
      , Q = (n = I == null ? void 0 : I.width) !== null && n !== void 0 ? n : 0
      , P = (r = I == null ? void 0 : I.height) !== null && r !== void 0 ? r : 0
      , A = h + (p !== "center" ? "-" + p : "")
      , E = typeof b == "number" ? b : {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
        ...b
    }
      , V = Array.isArray(C) ? C : [C]
      , X = V.length > 0
      , L = {
        padding: E,
        boundary: V.filter(Sre),
        altBoundary: X
    }
      , {reference: q, floating: oe, strategy: we, x: _, y: M, placement: Z, middlewareData: U, update: ce} = fre({
        strategy: "fixed",
        placement: A,
        whileElementsMounted: dre,
        middleware: [_re(), nre({
            mainAxis: f + P,
            alignmentAxis: m
        }), D ? rre({
            mainAxis: !0,
            crossAxis: !1,
            limiter: k === "partial" ? sre() : void 0,
            ...L
        }) : void 0, me ? pre({
            element: me,
            padding: g
        }) : void 0, D ? ere({
            ...L
        }) : void 0, ire({
            ...L,
            apply: ({elements: ha, availableWidth: Hh, availableHeight: du})=>{
                ha.floating.style.setProperty("--radix-popper-available-width", `${Hh}px`),
                ha.floating.style.setProperty("--radix-popper-available-height", `${du}px`)
            }
        }), Ire({
            arrowWidth: Q,
            arrowHeight: P
        }), S ? tre({
            strategy: "referenceHidden"
        }) : void 0].filter(Dre)
    });
    Ws(()=>{
        q(B.anchor)
    }
    , [q, B.anchor]);
    const De = _ !== null && M !== null
      , [Ce,Ie] = BI(Z)
      , ge = Zc(R);
    Ws(()=>{
        De && (ge == null || ge())
    }
    , [De, ge]);
    const Te = (s = U.arrow) === null || s === void 0 ? void 0 : s.x
      , Ge = (i = U.arrow) === null || i === void 0 ? void 0 : i.y
      , ln = ((a = U.arrow) === null || a === void 0 ? void 0 : a.centerOffset) !== 0
      , [xr,Vn] = y.useState();
    Ws(()=>{
        z && Vn(window.getComputedStyle(z).zIndex)
    }
    , [z]);
    const {hasParent: Bn, positionUpdateFns: nr} = kre(i3, u)
      , Un = !Bn;
    y.useLayoutEffect(()=>{
        if (!Un)
            return nr.add(ce),
            ()=>{
                nr.delete(ce)
            }
    }
    , [Un, nr, ce]),
    Ws(()=>{
        Un && De && Array.from(nr).reverse().forEach(ha=>requestAnimationFrame(ha))
    }
    , [Un, De, nr]);
    const ua = {
        "data-side": Ce,
        "data-align": Ie,
        ...T,
        ref: fe,
        style: {
            ...T.style,
            animation: De ? void 0 : "none",
            opacity: (o = U.hide) !== null && o !== void 0 && o.referenceHidden ? 0 : void 0
        }
    };
    return y.createElement("div", {
        ref: oe,
        "data-radix-popper-content-wrapper": "",
        style: {
            position: we,
            left: 0,
            top: 0,
            transform: De ? `translate3d(${Math.round(_)}px, ${Math.round(M)}px, 0)` : "translate3d(0, -200%, 0)",
            minWidth: "max-content",
            zIndex: xr,
            "--radix-popper-transform-origin": [(l = U.transformOrigin) === null || l === void 0 ? void 0 : l.x, (d = U.transformOrigin) === null || d === void 0 ? void 0 : d.y].join(" ")
        },
        dir: t.dir
    }, y.createElement(vre, {
        scope: u,
        placedSide: Ce,
        onArrowChange: _e,
        arrowX: Te,
        arrowY: Ge,
        shouldHideArrow: ln
    }, Un ? y.createElement(wre, {
        scope: u,
        hasParent: !0,
        positionUpdateFns: nr
    }, y.createElement(vr.div, ua)) : y.createElement(vr.div, ua)))
}
);
function Dre(t) {
    return t !== void 0
}
function Sre(t) {
    return t !== null
}
const _re = ()=>({
    name: "anchorCssProperties",
    fn(t) {
        const {rects: e, elements: n} = t
          , {width: r, height: s} = e.reference;
        return n.floating.style.setProperty("--radix-popper-anchor-width", `${r}px`),
        n.floating.style.setProperty("--radix-popper-anchor-height", `${s}px`),
        {}
    }
})
  , Ire = t=>({
    name: "transformOrigin",
    options: t,
    fn(e) {
        var n, r, s, i, a;
        const {placement: o, rects: l, middlewareData: d} = e
          , h = ((n = d.arrow) === null || n === void 0 ? void 0 : n.centerOffset) !== 0
          , f = h ? 0 : t.arrowWidth
          , p = h ? 0 : t.arrowHeight
          , [m,g] = BI(o)
          , C = {
            start: "0%",
            center: "50%",
            end: "100%"
        }[g]
          , b = ((r = (s = d.arrow) === null || s === void 0 ? void 0 : s.x) !== null && r !== void 0 ? r : 0) + f / 2
          , k = ((i = (a = d.arrow) === null || a === void 0 ? void 0 : a.y) !== null && i !== void 0 ? i : 0) + p / 2;
        let S = ""
          , D = "";
        return m === "bottom" ? (S = h ? C : `${b}px`,
        D = `${-p}px`) : m === "top" ? (S = h ? C : `${b}px`,
        D = `${l.floating.height + p}px`) : m === "right" ? (S = `${-p}px`,
        D = h ? C : `${k}px`) : m === "left" && (S = `${l.floating.width + p}px`,
        D = h ? C : `${k}px`),
        {
            data: {
                x: S,
                y: D
            }
        }
    }
});
function BI(t) {
    const [e,n="center"] = t.split("-");
    return [e, n]
}
const Ere = yre
  , Are = bre
  , jre = xre
  , Mre = y.forwardRef((t,e)=>{
    var n;
    const {container: r=globalThis == null || (n = globalThis.document) === null || n === void 0 ? void 0 : n.body, ...s} = t;
    return r ? YA.createPortal(y.createElement(vr.div, O3({}, s, {
        ref: e
    })), r) : null
}
);
function Tre(t) {
    const e = y.useRef({
        value: t,
        previous: t
    });
    return y.useMemo(()=>(e.current.value !== t && (e.current.previous = e.current.value,
    e.current.value = t),
    e.current.previous), [t])
}
function Q9() {
    return Q9 = Object.assign ? Object.assign.bind() : function(t) {
        for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
                Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r])
        }
        return t
    }
    ,
    Q9.apply(this, arguments)
}
const Lre = y.forwardRef((t,e)=>y.createElement(vr.span, Q9({}, t, {
    ref: e,
    style: {
        position: "absolute",
        border: 0,
        width: 1,
        height: 1,
        padding: 0,
        margin: -1,
        overflow: "hidden",
        clip: "rect(0, 0, 0, 0)",
        whiteSpace: "nowrap",
        wordWrap: "normal",
        ...t.style
    }
})));
var Ore = function(t) {
    if (typeof document > "u")
        return null;
    var e = Array.isArray(t) ? t[0] : t;
    return e.ownerDocument.body
}
  , Bl = new WeakMap
  , i2 = new WeakMap
  , a2 = {}
  , o7 = 0
  , Rre = function(t, e, n, r) {
    var s = Array.isArray(t) ? t : [t];
    a2[n] || (a2[n] = new WeakMap);
    var i = a2[n]
      , a = []
      , o = new Set
      , l = new Set(s)
      , d = function(h) {
        !h || o.has(h) || (o.add(h),
        d(h.parentNode))
    };
    s.forEach(d);
    var u = function(h) {
        !h || l.has(h) || Array.prototype.forEach.call(h.children, function(f) {
            if (o.has(f))
                u(f);
            else {
                var p = f.getAttribute(r)
                  , m = p !== null && p !== "false"
                  , g = (Bl.get(f) || 0) + 1
                  , C = (i.get(f) || 0) + 1;
                Bl.set(f, g),
                i.set(f, C),
                a.push(f),
                g === 1 && m && i2.set(f, !0),
                C === 1 && f.setAttribute(n, "true"),
                m || f.setAttribute(r, "true")
            }
        })
    };
    return u(e),
    o.clear(),
    o7++,
    function() {
        a.forEach(function(h) {
            var f = Bl.get(h) - 1
              , p = i.get(h) - 1;
            Bl.set(h, f),
            i.set(h, p),
            f || (i2.has(h) || h.removeAttribute(r),
            i2.delete(h)),
            p || h.removeAttribute(n)
        }),
        o7--,
        o7 || (Bl = new WeakMap,
        Bl = new WeakMap,
        i2 = new WeakMap,
        a2 = {})
    }
}
  , Pre = function(t, e, n) {
    n === void 0 && (n = "data-aria-hidden");
    var r = Array.from(Array.isArray(t) ? t : [t])
      , s = e || Ore(t);
    return s ? (r.push.apply(r, Array.from(s.querySelectorAll("[aria-live]"))),
    Rre(r, s, n, "aria-hidden")) : function() {
        return null
    }
}
  , X9 = function(t, e) {
    return X9 = Object.setPrototypeOf || {
        __proto__: []
    }instanceof Array && function(n, r) {
        n.__proto__ = r
    }
    || function(n, r) {
        for (var s in r)
            Object.prototype.hasOwnProperty.call(r, s) && (n[s] = r[s])
    }
    ,
    X9(t, e)
};
function B2e(t, e) {
    if (typeof e != "function" && e !== null)
        throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
    X9(t, e);
    function n() {
        this.constructor = t
    }
    t.prototype = e === null ? Object.create(e) : (n.prototype = e.prototype,
    new n)
}
var ja = function() {
    return ja = Object.assign || function(e) {
        for (var n, r = 1, s = arguments.length; r < s; r++) {
            n = arguments[r];
            for (var i in n)
                Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
        }
        return e
    }
    ,
    ja.apply(this, arguments)
};
function UI(t, e) {
    var n = {};
    for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
    if (t != null && typeof Object.getOwnPropertySymbols == "function")
        for (var s = 0, r = Object.getOwnPropertySymbols(t); s < r.length; s++)
            e.indexOf(r[s]) < 0 && Object.prototype.propertyIsEnumerable.call(t, r[s]) && (n[r[s]] = t[r[s]]);
    return n
}
function U2e(t, e, n, r) {
    function s(i) {
        return i instanceof n ? i : new n(function(a) {
            a(i)
        }
        )
    }
    return new (n || (n = Promise))(function(i, a) {
        function o(u) {
            try {
                d(r.next(u))
            } catch (h) {
                a(h)
            }
        }
        function l(u) {
            try {
                d(r.throw(u))
            } catch (h) {
                a(h)
            }
        }
        function d(u) {
            u.done ? i(u.value) : s(u.value).then(o, l)
        }
        d((r = r.apply(t, e || [])).next())
    }
    )
}
function H2e(t, e) {
    var n = {
        label: 0,
        sent: function() {
            if (i[0] & 1)
                throw i[1];
            return i[1]
        },
        trys: [],
        ops: []
    }, r, s, i, a;
    return a = {
        next: o(0),
        throw: o(1),
        return: o(2)
    },
    typeof Symbol == "function" && (a[Symbol.iterator] = function() {
        return this
    }
    ),
    a;
    function o(d) {
        return function(u) {
            return l([d, u])
        }
    }
    function l(d) {
        if (r)
            throw new TypeError("Generator is already executing.");
        for (; a && (a = 0,
        d[0] && (n = 0)),
        n; )
            try {
                if (r = 1,
                s && (i = d[0] & 2 ? s.return : d[0] ? s.throw || ((i = s.return) && i.call(s),
                0) : s.next) && !(i = i.call(s, d[1])).done)
                    return i;
                switch (s = 0,
                i && (d = [d[0] & 2, i.value]),
                d[0]) {
                case 0:
                case 1:
                    i = d;
                    break;
                case 4:
                    return n.label++,
                    {
                        value: d[1],
                        done: !1
                    };
                case 5:
                    n.label++,
                    s = d[1],
                    d = [0];
                    continue;
                case 7:
                    d = n.ops.pop(),
                    n.trys.pop();
                    continue;
                default:
                    if (i = n.trys,
                    !(i = i.length > 0 && i[i.length - 1]) && (d[0] === 6 || d[0] === 2)) {
                        n = 0;
                        continue
                    }
                    if (d[0] === 3 && (!i || d[1] > i[0] && d[1] < i[3])) {
                        n.label = d[1];
                        break
                    }
                    if (d[0] === 6 && n.label < i[1]) {
                        n.label = i[1],
                        i = d;
                        break
                    }
                    if (i && n.label < i[2]) {
                        n.label = i[2],
                        n.ops.push(d);
                        break
                    }
                    i[2] && n.ops.pop(),
                    n.trys.pop();
                    continue
                }
                d = e.call(t, n)
            } catch (u) {
                d = [6, u],
                s = 0
            } finally {
                r = i = 0
            }
        if (d[0] & 5)
            throw d[1];
        return {
            value: d[0] ? d[1] : void 0,
            done: !0
        }
    }
}
function z2e(t) {
    var e = typeof Symbol == "function" && Symbol.iterator
      , n = e && t[e]
      , r = 0;
    if (n)
        return n.call(t);
    if (t && typeof t.length == "number")
        return {
            next: function() {
                return t && r >= t.length && (t = void 0),
                {
                    value: t && t[r++],
                    done: !t
                }
            }
        };
    throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
}
function $re(t, e) {
    var n = typeof Symbol == "function" && t[Symbol.iterator];
    if (!n)
        return t;
    var r = n.call(t), s, i = [], a;
    try {
        for (; (e === void 0 || e-- > 0) && !(s = r.next()).done; )
            i.push(s.value)
    } catch (o) {
        a = {
            error: o
        }
    } finally {
        try {
            s && !s.done && (n = r.return) && n.call(r)
        } finally {
            if (a)
                throw a.error
        }
    }
    return i
}
function Z2e() {
    for (var t = [], e = 0; e < arguments.length; e++)
        t = t.concat($re(arguments[e]));
    return t
}
function Fre(t, e, n) {
    if (n || arguments.length === 2)
        for (var r = 0, s = e.length, i; r < s; r++)
            (i || !(r in e)) && (i || (i = Array.prototype.slice.call(e, 0, r)),
            i[r] = e[r]);
    return t.concat(i || Array.prototype.slice.call(e))
}
var O2 = "right-scroll-bar-position"
  , R2 = "width-before-scroll-bar"
  , Nre = "with-scroll-bars-hidden"
  , Vre = "--removed-body-scroll-bar-size";
function Bre(t, e) {
    return typeof t == "function" ? t(e) : t && (t.current = e),
    t
}
function Ure(t, e) {
    var n = y.useState(function() {
        return {
            value: t,
            callback: e,
            facade: {
                get current() {
                    return n.value
                },
                set current(r) {
                    var s = n.value;
                    s !== r && (n.value = r,
                    n.callback(r, s))
                }
            }
        }
    })[0];
    return n.callback = e,
    n.facade
}
function Hre(t, e) {
    return Ure(e || null, function(n) {
        return t.forEach(function(r) {
            return Bre(r, n)
        })
    })
}
function zre(t) {
    return t
}
function Zre(t, e) {
    e === void 0 && (e = zre);
    var n = []
      , r = !1
      , s = {
        read: function() {
            if (r)
                throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
            return n.length ? n[n.length - 1] : t
        },
        useMedium: function(i) {
            var a = e(i, r);
            return n.push(a),
            function() {
                n = n.filter(function(o) {
                    return o !== a
                })
            }
        },
        assignSyncMedium: function(i) {
            for (r = !0; n.length; ) {
                var a = n;
                n = [],
                a.forEach(i)
            }
            n = {
                push: function(o) {
                    return i(o)
                },
                filter: function() {
                    return n
                }
            }
        },
        assignMedium: function(i) {
            r = !0;
            var a = [];
            if (n.length) {
                var o = n;
                n = [],
                o.forEach(i),
                a = n
            }
            var l = function() {
                var u = a;
                a = [],
                u.forEach(i)
            }
              , d = function() {
                return Promise.resolve().then(l)
            };
            d(),
            n = {
                push: function(u) {
                    a.push(u),
                    d()
                },
                filter: function(u) {
                    return a = a.filter(u),
                    n
                }
            }
        }
    };
    return s
}
function qre(t) {
    t === void 0 && (t = {});
    var e = Zre(null);
    return e.options = ja({
        async: !0,
        ssr: !1
    }, t),
    e
}
var HI = function(t) {
    var e = t.sideCar
      , n = UI(t, ["sideCar"]);
    if (!e)
        throw new Error("Sidecar: please provide `sideCar` property to import the right car");
    var r = e.read();
    if (!r)
        throw new Error("Sidecar medium not found");
    return y.createElement(r, ja({}, n))
};
HI.isSideCarExport = !0;
function Wre(t, e) {
    return t.useMedium(e),
    HI
}
var zI = qre()
  , c7 = function() {}
  , Eh = y.forwardRef(function(t, e) {
    var n = y.useRef(null)
      , r = y.useState({
        onScrollCapture: c7,
        onWheelCapture: c7,
        onTouchMoveCapture: c7
    })
      , s = r[0]
      , i = r[1]
      , a = t.forwardProps
      , o = t.children
      , l = t.className
      , d = t.removeScrollBar
      , u = t.enabled
      , h = t.shards
      , f = t.sideCar
      , p = t.noIsolation
      , m = t.inert
      , g = t.allowPinchZoom
      , C = t.as
      , b = C === void 0 ? "div" : C
      , k = UI(t, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"])
      , S = f
      , D = Hre([n, e])
      , R = ja(ja({}, k), s);
    return y.createElement(y.Fragment, null, u && y.createElement(S, {
        sideCar: zI,
        removeScrollBar: d,
        shards: h,
        noIsolation: p,
        inert: m,
        setCallbacks: i,
        allowPinchZoom: !!g,
        lockRef: n
    }), a ? y.cloneElement(y.Children.only(o), ja(ja({}, R), {
        ref: D
    })) : y.createElement(b, ja({}, R, {
        className: l,
        ref: D
    }), o))
});
Eh.defaultProps = {
    enabled: !0,
    removeScrollBar: !0,
    inert: !1
};
Eh.classNames = {
    fullWidth: R2,
    zeroRight: O2
};
var $v, Gre = function() {
    if ($v)
        return $v;
    if (typeof __webpack_nonce__ < "u")
        return __webpack_nonce__
};
function Kre() {
    if (!document)
        return null;
    var t = document.createElement("style");
    t.type = "text/css";
    var e = Gre();
    return e && t.setAttribute("nonce", e),
    t
}
function Yre(t, e) {
    t.styleSheet ? t.styleSheet.cssText = e : t.appendChild(document.createTextNode(e))
}
function Qre(t) {
    var e = document.head || document.getElementsByTagName("head")[0];
    e.appendChild(t)
}
var Xre = function() {
    var t = 0
      , e = null;
    return {
        add: function(n) {
            t == 0 && (e = Kre()) && (Yre(e, n),
            Qre(e)),
            t++
        },
        remove: function() {
            t--,
            !t && e && (e.parentNode && e.parentNode.removeChild(e),
            e = null)
        }
    }
}
  , Jre = function() {
    var t = Xre();
    return function(e, n) {
        y.useEffect(function() {
            return t.add(e),
            function() {
                t.remove()
            }
        }, [e && n])
    }
}
  , ZI = function() {
    var t = Jre()
      , e = function(n) {
        var r = n.styles
          , s = n.dynamic;
        return t(r, s),
        null
    };
    return e
}
  , ese = {
    left: 0,
    top: 0,
    right: 0,
    gap: 0
}
  , l7 = function(t) {
    return parseInt(t || "", 10) || 0
}
  , tse = function(t) {
    var e = window.getComputedStyle(document.body)
      , n = e[t === "padding" ? "paddingLeft" : "marginLeft"]
      , r = e[t === "padding" ? "paddingTop" : "marginTop"]
      , s = e[t === "padding" ? "paddingRight" : "marginRight"];
    return [l7(n), l7(r), l7(s)]
}
  , nse = function(t) {
    if (t === void 0 && (t = "margin"),
    typeof window > "u")
        return ese;
    var e = tse(t)
      , n = document.documentElement.clientWidth
      , r = window.innerWidth;
    return {
        left: e[0],
        top: e[1],
        right: e[2],
        gap: Math.max(0, r - n + e[2] - e[0])
    }
}
  , rse = ZI()
  , sse = function(t, e, n, r) {
    var s = t.left
      , i = t.top
      , a = t.right
      , o = t.gap;
    return n === void 0 && (n = "margin"),
    `
  .`.concat(Nre, ` {
   overflow: hidden `).concat(r, `;
   padding-right: `).concat(o, "px ").concat(r, `;
  }
  body {
    overflow: hidden `).concat(r, `;
    overscroll-behavior: contain;
    `).concat([e && "position: relative ".concat(r, ";"), n === "margin" && `
    padding-left: `.concat(s, `px;
    padding-top: `).concat(i, `px;
    padding-right: `).concat(a, `px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(o, "px ").concat(r, `;
    `), n === "padding" && "padding-right: ".concat(o, "px ").concat(r, ";")].filter(Boolean).join(""), `
  }
  
  .`).concat(O2, ` {
    right: `).concat(o, "px ").concat(r, `;
  }
  
  .`).concat(R2, ` {
    margin-right: `).concat(o, "px ").concat(r, `;
  }
  
  .`).concat(O2, " .").concat(O2, ` {
    right: 0 `).concat(r, `;
  }
  
  .`).concat(R2, " .").concat(R2, ` {
    margin-right: 0 `).concat(r, `;
  }
  
  body {
    `).concat(Vre, ": ").concat(o, `px;
  }
`)
}
  , ise = function(t) {
    var e = t.noRelative
      , n = t.noImportant
      , r = t.gapMode
      , s = r === void 0 ? "margin" : r
      , i = y.useMemo(function() {
        return nse(s)
    }, [s]);
    return y.createElement(rse, {
        styles: sse(i, !e, s, n ? "" : "!important")
    })
}
  , J9 = !1;
if (typeof window < "u")
    try {
        var o2 = Object.defineProperty({}, "passive", {
            get: function() {
                return J9 = !0,
                !0
            }
        });
        window.addEventListener("test", o2, o2),
        window.removeEventListener("test", o2, o2)
    } catch {
        J9 = !1
    }
var Ul = J9 ? {
    passive: !1
} : !1
  , ase = function(t) {
    return t.tagName === "TEXTAREA"
}
  , qI = function(t, e) {
    var n = window.getComputedStyle(t);
    return n[e] !== "hidden" && !(n.overflowY === n.overflowX && !ase(t) && n[e] === "visible")
}
  , ose = function(t) {
    return qI(t, "overflowY")
}
  , cse = function(t) {
    return qI(t, "overflowX")
}
  , Fv = function(t, e) {
    var n = e;
    do {
        typeof ShadowRoot < "u" && n instanceof ShadowRoot && (n = n.host);
        var r = WI(t, n);
        if (r) {
            var s = GI(t, n)
              , i = s[1]
              , a = s[2];
            if (i > a)
                return !0
        }
        n = n.parentNode
    } while (n && n !== document.body);
    return !1
}
  , lse = function(t) {
    var e = t.scrollTop
      , n = t.scrollHeight
      , r = t.clientHeight;
    return [e, n, r]
}
  , dse = function(t) {
    var e = t.scrollLeft
      , n = t.scrollWidth
      , r = t.clientWidth;
    return [e, n, r]
}
  , WI = function(t, e) {
    return t === "v" ? ose(e) : cse(e)
}
  , GI = function(t, e) {
    return t === "v" ? lse(e) : dse(e)
}
  , use = function(t, e) {
    return t === "h" && e === "rtl" ? -1 : 1
}
  , hse = function(t, e, n, r, s) {
    var i = use(t, window.getComputedStyle(e).direction)
      , a = i * r
      , o = n.target
      , l = e.contains(o)
      , d = !1
      , u = a > 0
      , h = 0
      , f = 0;
    do {
        var p = GI(t, o)
          , m = p[0]
          , g = p[1]
          , C = p[2]
          , b = g - C - i * m;
        (m || b) && WI(t, o) && (h += b,
        f += m),
        o = o.parentNode
    } while (!l && o !== document.body || l && (e.contains(o) || e === o));
    return (u && (s && h === 0 || !s && a > h) || !u && (s && f === 0 || !s && -a > f)) && (d = !0),
    d
}
  , c2 = function(t) {
    return "changedTouches"in t ? [t.changedTouches[0].clientX, t.changedTouches[0].clientY] : [0, 0]
}
  , Nv = function(t) {
    return [t.deltaX, t.deltaY]
}
  , Vv = function(t) {
    return t && "current"in t ? t.current : t
}
  , fse = function(t, e) {
    return t[0] === e[0] && t[1] === e[1]
}
  , pse = function(t) {
    return `
  .block-interactivity-`.concat(t, ` {pointer-events: none;}
  .allow-interactivity-`).concat(t, ` {pointer-events: all;}
`)
}
  , mse = 0
  , Hl = [];
function gse(t) {
    var e = y.useRef([])
      , n = y.useRef([0, 0])
      , r = y.useRef()
      , s = y.useState(mse++)[0]
      , i = y.useState(function() {
        return ZI()
    })[0]
      , a = y.useRef(t);
    y.useEffect(function() {
        a.current = t
    }, [t]),
    y.useEffect(function() {
        if (t.inert) {
            document.body.classList.add("block-interactivity-".concat(s));
            var g = Fre([t.lockRef.current], (t.shards || []).map(Vv), !0).filter(Boolean);
            return g.forEach(function(C) {
                return C.classList.add("allow-interactivity-".concat(s))
            }),
            function() {
                document.body.classList.remove("block-interactivity-".concat(s)),
                g.forEach(function(C) {
                    return C.classList.remove("allow-interactivity-".concat(s))
                })
            }
        }
    }, [t.inert, t.lockRef.current, t.shards]);
    var o = y.useCallback(function(g, C) {
        if ("touches"in g && g.touches.length === 2)
            return !a.current.allowPinchZoom;
        var b = c2(g), k = n.current, S = "deltaX"in g ? g.deltaX : k[0] - b[0], D = "deltaY"in g ? g.deltaY : k[1] - b[1], R, T = g.target, B = Math.abs(S) > Math.abs(D) ? "h" : "v";
        if ("touches"in g && B === "h" && T.type === "range")
            return !1;
        var z = Fv(B, T);
        if (!z)
            return !0;
        if (z ? R = B : (R = B === "v" ? "h" : "v",
        z = Fv(B, T)),
        !z)
            return !1;
        if (!r.current && "changedTouches"in g && (S || D) && (r.current = R),
        !R)
            return !0;
        var W = r.current || R;
        return hse(W, C, g, W === "h" ? S : D, !0)
    }, [])
      , l = y.useCallback(function(g) {
        var C = g;
        if (!(!Hl.length || Hl[Hl.length - 1] !== i)) {
            var b = "deltaY"in C ? Nv(C) : c2(C)
              , k = e.current.filter(function(R) {
                return R.name === C.type && R.target === C.target && fse(R.delta, b)
            })[0];
            if (k && k.should) {
                C.cancelable && C.preventDefault();
                return
            }
            if (!k) {
                var S = (a.current.shards || []).map(Vv).filter(Boolean).filter(function(R) {
                    return R.contains(C.target)
                })
                  , D = S.length > 0 ? o(C, S[0]) : !a.current.noIsolation;
                D && C.cancelable && C.preventDefault()
            }
        }
    }, [])
      , d = y.useCallback(function(g, C, b, k) {
        var S = {
            name: g,
            delta: C,
            target: b,
            should: k
        };
        e.current.push(S),
        setTimeout(function() {
            e.current = e.current.filter(function(D) {
                return D !== S
            })
        }, 1)
    }, [])
      , u = y.useCallback(function(g) {
        n.current = c2(g),
        r.current = void 0
    }, [])
      , h = y.useCallback(function(g) {
        d(g.type, Nv(g), g.target, o(g, t.lockRef.current))
    }, [])
      , f = y.useCallback(function(g) {
        d(g.type, c2(g), g.target, o(g, t.lockRef.current))
    }, []);
    y.useEffect(function() {
        return Hl.push(i),
        t.setCallbacks({
            onScrollCapture: h,
            onWheelCapture: h,
            onTouchMoveCapture: f
        }),
        document.addEventListener("wheel", l, Ul),
        document.addEventListener("touchmove", l, Ul),
        document.addEventListener("touchstart", u, Ul),
        function() {
            Hl = Hl.filter(function(g) {
                return g !== i
            }),
            document.removeEventListener("wheel", l, Ul),
            document.removeEventListener("touchmove", l, Ul),
            document.removeEventListener("touchstart", u, Ul)
        }
    }, []);
    var p = t.removeScrollBar
      , m = t.inert;
    return y.createElement(y.Fragment, null, m ? y.createElement(i, {
        styles: pse(s)
    }) : null, p ? y.createElement(ise, {
        gapMode: "margin"
    }) : null)
}
const yse = Wre(zI, gse);
var KI = y.forwardRef(function(t, e) {
    return y.createElement(Eh, ja({}, t, {
        ref: e,
        sideCar: yse
    }))
});
KI.classNames = Eh.classNames;
const Cse = KI
  , bse = [" ", "Enter", "ArrowUp", "ArrowDown"]
  , vse = [" ", "Enter"]
  , Ah = "Select"
  , [jh,Mh,wse] = QA(Ah)
  , [au,q2e] = Lk(Ah, [wse, NI])
  , nm = NI()
  , [kse,Il] = au(Ah)
  , [xse,Dse] = au(Ah)
  , Sse = t=>{
    const {__scopeSelect: e, children: n, open: r, defaultOpen: s, onOpenChange: i, value: a, defaultValue: o, onValueChange: l, dir: d, name: u, autoComplete: h, disabled: f, required: p} = t
      , m = nm(e)
      , [g,C] = y.useState(null)
      , [b,k] = y.useState(null)
      , [S,D] = y.useState(!1)
      , R = XA(d)
      , [T=!1,B] = bg({
        prop: r,
        defaultProp: s,
        onChange: i
    })
      , [z,W] = bg({
        prop: a,
        defaultProp: o,
        onChange: l
    })
      , fe = y.useRef(null)
      , me = g ? !!g.closest("form") : !0
      , [_e,I] = y.useState(new Set)
      , Q = Array.from(_e).map(P=>P.props.value).join(";");
    return y.createElement(Ere, m, y.createElement(kse, {
        required: p,
        scope: e,
        trigger: g,
        onTriggerChange: C,
        valueNode: b,
        onValueNodeChange: k,
        valueNodeHasChildren: S,
        onValueNodeHasChildrenChange: D,
        contentId: Mf(),
        value: z,
        onValueChange: W,
        open: T,
        onOpenChange: B,
        dir: R,
        triggerPointerDownPosRef: fe,
        disabled: f
    }, y.createElement(jh.Provider, {
        scope: e
    }, y.createElement(xse, {
        scope: t.__scopeSelect,
        onNativeOptionAdd: y.useCallback(P=>{
            I(A=>new Set(A).add(P))
        }
        , []),
        onNativeOptionRemove: y.useCallback(P=>{
            I(A=>{
                const E = new Set(A);
                return E.delete(P),
                E
            }
            )
        }
        , [])
    }, n)), me ? y.createElement(JI, {
        key: Q,
        "aria-hidden": !0,
        required: p,
        tabIndex: -1,
        name: u,
        autoComplete: h,
        value: z,
        onChange: P=>W(P.target.value),
        disabled: f
    }, z === void 0 ? y.createElement("option", {
        value: ""
    }) : null, Array.from(_e)) : null))
}
  , _se = "SelectTrigger"
  , Ise = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, disabled: r=!1, ...s} = t
      , i = nm(n)
      , a = Il(_se, n)
      , o = a.disabled || r
      , l = Rs(e, a.onTriggerChange)
      , d = Mh(n)
      , [u,h,f] = eE(m=>{
        const g = d().filter(k=>!k.disabled)
          , C = g.find(k=>k.value === a.value)
          , b = tE(g, m, C);
        b !== void 0 && a.onValueChange(b.value)
    }
    )
      , p = ()=>{
        o || (a.onOpenChange(!0),
        f())
    }
    ;
    return y.createElement(Are, fr({
        asChild: !0
    }, i), y.createElement(vr.button, fr({
        type: "button",
        role: "combobox",
        "aria-controls": a.contentId,
        "aria-expanded": a.open,
        "aria-required": a.required,
        "aria-autocomplete": "none",
        dir: a.dir,
        "data-state": a.open ? "open" : "closed",
        disabled: o,
        "data-disabled": o ? "" : void 0,
        "data-placeholder": a.value === void 0 ? "" : void 0
    }, s, {
        ref: l,
        onClick: Fr(s.onClick, m=>{
            m.currentTarget.focus()
        }
        ),
        onPointerDown: Fr(s.onPointerDown, m=>{
            const g = m.target;
            g.hasPointerCapture(m.pointerId) && g.releasePointerCapture(m.pointerId),
            m.button === 0 && m.ctrlKey === !1 && (p(),
            a.triggerPointerDownPosRef.current = {
                x: Math.round(m.pageX),
                y: Math.round(m.pageY)
            },
            m.preventDefault())
        }
        ),
        onKeyDown: Fr(s.onKeyDown, m=>{
            const g = u.current !== "";
            !(m.ctrlKey || m.altKey || m.metaKey) && m.key.length === 1 && h(m.key),
            !(g && m.key === " ") && bse.includes(m.key) && (p(),
            m.preventDefault())
        }
        )
    })))
}
)
  , Ese = "SelectValue"
  , Ase = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, className: r, style: s, children: i, placeholder: a, ...o} = t
      , l = Il(Ese, n)
      , {onValueNodeHasChildrenChange: d} = l
      , u = i !== void 0
      , h = Rs(e, l.onValueNodeChange);
    return Ws(()=>{
        d(u)
    }
    , [d, u]),
    y.createElement(vr.span, fr({}, o, {
        ref: h,
        style: {
            pointerEvents: "none"
        }
    }), l.value === void 0 && a !== void 0 ? a : i)
}
)
  , jse = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, children: r, ...s} = t;
    return y.createElement(vr.span, fr({
        "aria-hidden": !0
    }, s, {
        ref: e
    }), r || "▼")
}
)
  , Mse = t=>y.createElement(Mre, fr({
    asChild: !0
}, t))
  , Ud = "SelectContent"
  , Tse = y.forwardRef((t,e)=>{
    const n = Il(Ud, t.__scopeSelect)
      , [r,s] = y.useState();
    if (Ws(()=>{
        s(new DocumentFragment)
    }
    , []),
    !n.open) {
        const i = r;
        return i ? Kd.createPortal(y.createElement(YI, {
            scope: t.__scopeSelect
        }, y.createElement(jh.Slot, {
            scope: t.__scopeSelect
        }, y.createElement("div", null, t.children))), i) : null
    }
    return y.createElement(Lse, fr({}, t, {
        ref: e
    }))
}
)
  , lo = 10
  , [YI,El] = au(Ud)
  , Lse = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, position: r="item-aligned", onCloseAutoFocus: s, onEscapeKeyDown: i, onPointerDownOutside: a, side: o, sideOffset: l, align: d, alignOffset: u, arrowPadding: h, collisionBoundary: f, collisionPadding: p, sticky: m, hideWhenDetached: g, avoidCollisions: C, ...b} = t
      , k = Il(Ud, n)
      , [S,D] = y.useState(null)
      , [R,T] = y.useState(null)
      , B = Rs(e, U=>D(U))
      , [z,W] = y.useState(null)
      , [fe,me] = y.useState(null)
      , _e = Mh(n)
      , [I,Q] = y.useState(!1)
      , P = y.useRef(!1);
    y.useEffect(()=>{
        if (S)
            return Pre(S)
    }
    , [S]),
    Bne();
    const A = y.useCallback(U=>{
        const [ce,...De] = _e().map(ge=>ge.ref.current)
          , [Ce] = De.slice(-1)
          , Ie = document.activeElement;
        for (const ge of U)
            if (ge === Ie || (ge == null || ge.scrollIntoView({
                block: "nearest"
            }),
            ge === ce && R && (R.scrollTop = 0),
            ge === Ce && R && (R.scrollTop = R.scrollHeight),
            ge == null || ge.focus(),
            document.activeElement !== Ie))
                return
    }
    , [_e, R])
      , E = y.useCallback(()=>A([z, S]), [A, z, S]);
    y.useEffect(()=>{
        I && E()
    }
    , [I, E]);
    const {onOpenChange: V, triggerPointerDownPosRef: X} = k;
    y.useEffect(()=>{
        if (S) {
            let U = {
                x: 0,
                y: 0
            };
            const ce = Ce=>{
                var Ie, ge, Te, Ge;
                U = {
                    x: Math.abs(Math.round(Ce.pageX) - ((Ie = (ge = X.current) === null || ge === void 0 ? void 0 : ge.x) !== null && Ie !== void 0 ? Ie : 0)),
                    y: Math.abs(Math.round(Ce.pageY) - ((Te = (Ge = X.current) === null || Ge === void 0 ? void 0 : Ge.y) !== null && Te !== void 0 ? Te : 0))
                }
            }
              , De = Ce=>{
                U.x <= 10 && U.y <= 10 ? Ce.preventDefault() : S.contains(Ce.target) || V(!1),
                document.removeEventListener("pointermove", ce),
                X.current = null
            }
            ;
            return X.current !== null && (document.addEventListener("pointermove", ce),
            document.addEventListener("pointerup", De, {
                capture: !0,
                once: !0
            })),
            ()=>{
                document.removeEventListener("pointermove", ce),
                document.removeEventListener("pointerup", De, {
                    capture: !0
                })
            }
        }
    }
    , [S, V, X]),
    y.useEffect(()=>{
        const U = ()=>V(!1);
        return window.addEventListener("blur", U),
        window.addEventListener("resize", U),
        ()=>{
            window.removeEventListener("blur", U),
            window.removeEventListener("resize", U)
        }
    }
    , [V]);
    const [L,q] = eE(U=>{
        const ce = _e().filter(Ie=>!Ie.disabled)
          , De = ce.find(Ie=>Ie.ref.current === document.activeElement)
          , Ce = tE(ce, U, De);
        Ce && setTimeout(()=>Ce.ref.current.focus())
    }
    )
      , oe = y.useCallback((U,ce,De)=>{
        const Ce = !P.current && !De;
        (k.value !== void 0 && k.value === ce || Ce) && (W(U),
        Ce && (P.current = !0))
    }
    , [k.value])
      , we = y.useCallback(()=>S == null ? void 0 : S.focus(), [S])
      , _ = y.useCallback((U,ce,De)=>{
        const Ce = !P.current && !De;
        (k.value !== void 0 && k.value === ce || Ce) && me(U)
    }
    , [k.value])
      , M = r === "popper" ? Bv : Ose
      , Z = M === Bv ? {
        side: o,
        sideOffset: l,
        align: d,
        alignOffset: u,
        arrowPadding: h,
        collisionBoundary: f,
        collisionPadding: p,
        sticky: m,
        hideWhenDetached: g,
        avoidCollisions: C
    } : {};
    return y.createElement(YI, {
        scope: n,
        content: S,
        viewport: R,
        onViewportChange: T,
        itemRefCallback: oe,
        selectedItem: z,
        onItemLeave: we,
        itemTextRefCallback: _,
        focusSelectedItem: E,
        selectedItemText: fe,
        position: r,
        isPositioned: I,
        searchRef: L
    }, y.createElement(Cse, {
        as: JA,
        allowPinchZoom: !0
    }, y.createElement(Une, {
        asChild: !0,
        trapped: k.open,
        onMountAutoFocus: U=>{
            U.preventDefault()
        }
        ,
        onUnmountAutoFocus: Fr(s, U=>{
            var ce;
            (ce = k.trigger) === null || ce === void 0 || ce.focus({
                preventScroll: !0
            }),
            U.preventDefault()
        }
        )
    }, y.createElement(Fne, {
        asChild: !0,
        disableOutsidePointerEvents: !0,
        onEscapeKeyDown: i,
        onPointerDownOutside: a,
        onFocusOutside: U=>U.preventDefault(),
        onDismiss: ()=>k.onOpenChange(!1)
    }, y.createElement(M, fr({
        role: "listbox",
        id: k.contentId,
        "data-state": k.open ? "open" : "closed",
        dir: k.dir,
        onContextMenu: U=>U.preventDefault()
    }, b, Z, {
        onPlaced: ()=>Q(!0),
        ref: B,
        style: {
            display: "flex",
            flexDirection: "column",
            outline: "none",
            ...b.style
        },
        onKeyDown: Fr(b.onKeyDown, U=>{
            const ce = U.ctrlKey || U.altKey || U.metaKey;
            if (U.key === "Tab" && U.preventDefault(),
            !ce && U.key.length === 1 && q(U.key),
            ["ArrowUp", "ArrowDown", "Home", "End"].includes(U.key)) {
                let Ce = _e().filter(Ie=>!Ie.disabled).map(Ie=>Ie.ref.current);
                if (["ArrowUp", "End"].includes(U.key) && (Ce = Ce.slice().reverse()),
                ["ArrowUp", "ArrowDown"].includes(U.key)) {
                    const Ie = U.target
                      , ge = Ce.indexOf(Ie);
                    Ce = Ce.slice(ge + 1)
                }
                setTimeout(()=>A(Ce)),
                U.preventDefault()
            }
        }
        )
    }))))))
}
)
  , Ose = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, onPlaced: r, ...s} = t
      , i = Il(Ud, n)
      , a = El(Ud, n)
      , [o,l] = y.useState(null)
      , [d,u] = y.useState(null)
      , h = Rs(e, B=>u(B))
      , f = Mh(n)
      , p = y.useRef(!1)
      , m = y.useRef(!0)
      , {viewport: g, selectedItem: C, selectedItemText: b, focusSelectedItem: k} = a
      , S = y.useCallback(()=>{
        if (i.trigger && i.valueNode && o && d && g && C && b) {
            const B = i.trigger.getBoundingClientRect()
              , z = d.getBoundingClientRect()
              , W = i.valueNode.getBoundingClientRect()
              , fe = b.getBoundingClientRect();
            if (i.dir !== "rtl") {
                const Ie = fe.left - z.left
                  , ge = W.left - Ie
                  , Te = B.left - ge
                  , Ge = B.width + Te
                  , ln = Math.max(Ge, z.width)
                  , xr = window.innerWidth - lo
                  , Vn = bv(ge, [lo, xr - ln]);
                o.style.minWidth = Ge + "px",
                o.style.left = Vn + "px"
            } else {
                const Ie = z.right - fe.right
                  , ge = window.innerWidth - W.right - Ie
                  , Te = window.innerWidth - B.right - ge
                  , Ge = B.width + Te
                  , ln = Math.max(Ge, z.width)
                  , xr = window.innerWidth - lo
                  , Vn = bv(ge, [lo, xr - ln]);
                o.style.minWidth = Ge + "px",
                o.style.right = Vn + "px"
            }
            const me = f()
              , _e = window.innerHeight - lo * 2
              , I = g.scrollHeight
              , Q = window.getComputedStyle(d)
              , P = parseInt(Q.borderTopWidth, 10)
              , A = parseInt(Q.paddingTop, 10)
              , E = parseInt(Q.borderBottomWidth, 10)
              , V = parseInt(Q.paddingBottom, 10)
              , X = P + A + I + V + E
              , L = Math.min(C.offsetHeight * 5, X)
              , q = window.getComputedStyle(g)
              , oe = parseInt(q.paddingTop, 10)
              , we = parseInt(q.paddingBottom, 10)
              , _ = B.top + B.height / 2 - lo
              , M = _e - _
              , Z = C.offsetHeight / 2
              , U = C.offsetTop + Z
              , ce = P + A + U
              , De = X - ce;
            if (ce <= _) {
                const Ie = me.length > 0 && C === me[me.length - 1].ref.current;
                o.style.bottom = "0px";
                const ge = d.clientHeight - g.offsetTop - g.offsetHeight
                  , Te = Math.max(M, Z + (Ie ? we : 0) + ge + E)
                  , Ge = ce + Te;
                o.style.height = Ge + "px"
            } else {
                const Ie = me.length > 0 && C === me[0].ref.current;
                o.style.top = "0px";
                const Te = Math.max(_, P + g.offsetTop + (Ie ? oe : 0) + Z) + De;
                o.style.height = Te + "px",
                g.scrollTop = ce - _ + g.offsetTop
            }
            o.style.margin = `${lo}px 0`,
            o.style.minHeight = L + "px",
            o.style.maxHeight = _e + "px",
            r == null || r(),
            requestAnimationFrame(()=>p.current = !0)
        }
    }
    , [f, i.trigger, i.valueNode, o, d, g, C, b, i.dir, r]);
    Ws(()=>S(), [S]);
    const [D,R] = y.useState();
    Ws(()=>{
        d && R(window.getComputedStyle(d).zIndex)
    }
    , [d]);
    const T = y.useCallback(B=>{
        B && m.current === !0 && (S(),
        k == null || k(),
        m.current = !1)
    }
    , [S, k]);
    return y.createElement(Rse, {
        scope: n,
        contentWrapper: o,
        shouldExpandOnScrollRef: p,
        onScrollButtonChange: T
    }, y.createElement("div", {
        ref: l,
        style: {
            display: "flex",
            flexDirection: "column",
            position: "fixed",
            zIndex: D
        }
    }, y.createElement(vr.div, fr({}, s, {
        ref: h,
        style: {
            boxSizing: "border-box",
            maxHeight: "100%",
            ...s.style
        }
    }))))
}
)
  , Bv = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, align: r="start", collisionPadding: s=lo, ...i} = t
      , a = nm(n);
    return y.createElement(jre, fr({}, a, i, {
        ref: e,
        align: r,
        collisionPadding: s,
        style: {
            boxSizing: "border-box",
            ...i.style,
            "--radix-select-content-transform-origin": "var(--radix-popper-transform-origin)",
            "--radix-select-content-available-width": "var(--radix-popper-available-width)",
            "--radix-select-content-available-height": "var(--radix-popper-available-height)",
            "--radix-select-trigger-width": "var(--radix-popper-anchor-width)",
            "--radix-select-trigger-height": "var(--radix-popper-anchor-height)"
        }
    }))
}
)
  , [Rse,rm] = au(Ud, {})
  , Uv = "SelectViewport"
  , Pse = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, ...r} = t
      , s = El(Uv, n)
      , i = rm(Uv, n)
      , a = Rs(e, s.onViewportChange)
      , o = y.useRef(0);
    return y.createElement(y.Fragment, null, y.createElement("style", {
        dangerouslySetInnerHTML: {
            __html: "[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}"
        }
    }), y.createElement(jh.Slot, {
        scope: n
    }, y.createElement(vr.div, fr({
        "data-radix-select-viewport": "",
        role: "presentation"
    }, r, {
        ref: a,
        style: {
            position: "relative",
            flex: 1,
            overflow: "auto",
            ...r.style
        },
        onScroll: Fr(r.onScroll, l=>{
            const d = l.currentTarget
              , {contentWrapper: u, shouldExpandOnScrollRef: h} = i;
            if (h != null && h.current && u) {
                const f = Math.abs(o.current - d.scrollTop);
                if (f > 0) {
                    const p = window.innerHeight - lo * 2
                      , m = parseFloat(u.style.minHeight)
                      , g = parseFloat(u.style.height)
                      , C = Math.max(m, g);
                    if (C < p) {
                        const b = C + f
                          , k = Math.min(p, b)
                          , S = b - k;
                        u.style.height = k + "px",
                        u.style.bottom === "0px" && (d.scrollTop = S > 0 ? S : 0,
                        u.style.justifyContent = "flex-end")
                    }
                }
            }
            o.current = d.scrollTop
        }
        )
    }))))
}
)
  , $se = "SelectGroup"
  , [Fse,Nse] = au($se)
  , Vse = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, ...r} = t
      , s = Mf();
    return y.createElement(Fse, {
        scope: n,
        id: s
    }, y.createElement(vr.div, fr({
        role: "group",
        "aria-labelledby": s
    }, r, {
        ref: e
    })))
}
)
  , Bse = "SelectLabel"
  , Use = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, ...r} = t
      , s = Nse(Bse, n);
    return y.createElement(vr.div, fr({
        id: s.id
    }, r, {
        ref: e
    }))
}
)
  , ef = "SelectItem"
  , [Hse,QI] = au(ef)
  , zse = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, value: r, disabled: s=!1, textValue: i, ...a} = t
      , o = Il(ef, n)
      , l = El(ef, n)
      , d = o.value === r
      , [u,h] = y.useState(i ?? "")
      , [f,p] = y.useState(!1)
      , m = Rs(e, b=>{
        var k;
        return (k = l.itemRefCallback) === null || k === void 0 ? void 0 : k.call(l, b, r, s)
    }
    )
      , g = Mf()
      , C = ()=>{
        s || (o.onValueChange(r),
        o.onOpenChange(!1))
    }
    ;
    return y.createElement(Hse, {
        scope: n,
        value: r,
        disabled: s,
        textId: g,
        isSelected: d,
        onItemTextChange: y.useCallback(b=>{
            h(k=>{
                var S;
                return k || ((S = b == null ? void 0 : b.textContent) !== null && S !== void 0 ? S : "").trim()
            }
            )
        }
        , [])
    }, y.createElement(jh.ItemSlot, {
        scope: n,
        value: r,
        disabled: s,
        textValue: u
    }, y.createElement(vr.div, fr({
        role: "option",
        "aria-labelledby": g,
        "data-highlighted": f ? "" : void 0,
        "aria-selected": d && f,
        "data-state": d ? "checked" : "unchecked",
        "aria-disabled": s || void 0,
        "data-disabled": s ? "" : void 0,
        tabIndex: s ? void 0 : -1
    }, a, {
        ref: m,
        onFocus: Fr(a.onFocus, ()=>p(!0)),
        onBlur: Fr(a.onBlur, ()=>p(!1)),
        onPointerUp: Fr(a.onPointerUp, C),
        onPointerMove: Fr(a.onPointerMove, b=>{
            if (s) {
                var k;
                (k = l.onItemLeave) === null || k === void 0 || k.call(l)
            } else
                b.currentTarget.focus({
                    preventScroll: !0
                })
        }
        ),
        onPointerLeave: Fr(a.onPointerLeave, b=>{
            if (b.currentTarget === document.activeElement) {
                var k;
                (k = l.onItemLeave) === null || k === void 0 || k.call(l)
            }
        }
        ),
        onKeyDown: Fr(a.onKeyDown, b=>{
            var k;
            ((k = l.searchRef) === null || k === void 0 ? void 0 : k.current) !== "" && b.key === " " || (vse.includes(b.key) && C(),
            b.key === " " && b.preventDefault())
        }
        )
    }))))
}
)
  , l2 = "SelectItemText"
  , Zse = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, className: r, style: s, ...i} = t
      , a = Il(l2, n)
      , o = El(l2, n)
      , l = QI(l2, n)
      , d = Dse(l2, n)
      , [u,h] = y.useState(null)
      , f = Rs(e, b=>h(b), l.onItemTextChange, b=>{
        var k;
        return (k = o.itemTextRefCallback) === null || k === void 0 ? void 0 : k.call(o, b, l.value, l.disabled)
    }
    )
      , p = u == null ? void 0 : u.textContent
      , m = y.useMemo(()=>y.createElement("option", {
        key: l.value,
        value: l.value,
        disabled: l.disabled
    }, p), [l.disabled, l.value, p])
      , {onNativeOptionAdd: g, onNativeOptionRemove: C} = d;
    return Ws(()=>(g(m),
    ()=>C(m)), [g, C, m]),
    y.createElement(y.Fragment, null, y.createElement(vr.span, fr({
        id: l.textId
    }, i, {
        ref: f
    })), l.isSelected && a.valueNode && !a.valueNodeHasChildren ? Kd.createPortal(i.children, a.valueNode) : null)
}
)
  , qse = "SelectItemIndicator"
  , Wse = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, ...r} = t;
    return QI(qse, n).isSelected ? y.createElement(vr.span, fr({
        "aria-hidden": !0
    }, r, {
        ref: e
    })) : null
}
)
  , Hv = "SelectScrollUpButton"
  , Gse = y.forwardRef((t,e)=>{
    const n = El(Hv, t.__scopeSelect)
      , r = rm(Hv, t.__scopeSelect)
      , [s,i] = y.useState(!1)
      , a = Rs(e, r.onScrollButtonChange);
    return Ws(()=>{
        if (n.viewport && n.isPositioned) {
            let l = function() {
                const d = o.scrollTop > 0;
                i(d)
            };
            const o = n.viewport;
            return l(),
            o.addEventListener("scroll", l),
            ()=>o.removeEventListener("scroll", l)
        }
    }
    , [n.viewport, n.isPositioned]),
    s ? y.createElement(XI, fr({}, t, {
        ref: a,
        onAutoScroll: ()=>{
            const {viewport: o, selectedItem: l} = n;
            o && l && (o.scrollTop = o.scrollTop - l.offsetHeight)
        }
    })) : null
}
)
  , zv = "SelectScrollDownButton"
  , Kse = y.forwardRef((t,e)=>{
    const n = El(zv, t.__scopeSelect)
      , r = rm(zv, t.__scopeSelect)
      , [s,i] = y.useState(!1)
      , a = Rs(e, r.onScrollButtonChange);
    return Ws(()=>{
        if (n.viewport && n.isPositioned) {
            let l = function() {
                const d = o.scrollHeight - o.clientHeight
                  , u = Math.ceil(o.scrollTop) < d;
                i(u)
            };
            const o = n.viewport;
            return l(),
            o.addEventListener("scroll", l),
            ()=>o.removeEventListener("scroll", l)
        }
    }
    , [n.viewport, n.isPositioned]),
    s ? y.createElement(XI, fr({}, t, {
        ref: a,
        onAutoScroll: ()=>{
            const {viewport: o, selectedItem: l} = n;
            o && l && (o.scrollTop = o.scrollTop + l.offsetHeight)
        }
    })) : null
}
)
  , XI = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, onAutoScroll: r, ...s} = t
      , i = El("SelectScrollButton", n)
      , a = y.useRef(null)
      , o = Mh(n)
      , l = y.useCallback(()=>{
        a.current !== null && (window.clearInterval(a.current),
        a.current = null)
    }
    , []);
    return y.useEffect(()=>()=>l(), [l]),
    Ws(()=>{
        var d;
        const u = o().find(h=>h.ref.current === document.activeElement);
        u == null || (d = u.ref.current) === null || d === void 0 || d.scrollIntoView({
            block: "nearest"
        })
    }
    , [o]),
    y.createElement(vr.div, fr({
        "aria-hidden": !0
    }, s, {
        ref: e,
        style: {
            flexShrink: 0,
            ...s.style
        },
        onPointerMove: Fr(s.onPointerMove, ()=>{
            var d;
            (d = i.onItemLeave) === null || d === void 0 || d.call(i),
            a.current === null && (a.current = window.setInterval(r, 50))
        }
        ),
        onPointerLeave: Fr(s.onPointerLeave, ()=>{
            l()
        }
        )
    }))
}
)
  , Yse = y.forwardRef((t,e)=>{
    const {__scopeSelect: n, ...r} = t;
    return y.createElement(vr.div, fr({
        "aria-hidden": !0
    }, r, {
        ref: e
    }))
}
)
  , JI = y.forwardRef((t,e)=>{
    const {value: n, ...r} = t
      , s = y.useRef(null)
      , i = Rs(e, s)
      , a = Tre(n);
    return y.useEffect(()=>{
        const o = s.current
          , l = window.HTMLSelectElement.prototype
          , u = Object.getOwnPropertyDescriptor(l, "value").set;
        if (a !== n && u) {
            const h = new Event("change",{
                bubbles: !0
            });
            u.call(o, n),
            o.dispatchEvent(h)
        }
    }
    , [a, n]),
    y.createElement(Lre, {
        asChild: !0
    }, y.createElement("select", fr({}, r, {
        ref: i,
        defaultValue: n
    })))
}
);
JI.displayName = "BubbleSelect";
function eE(t) {
    const e = Zc(t)
      , n = y.useRef("")
      , r = y.useRef(0)
      , s = y.useCallback(a=>{
        const o = n.current + a;
        e(o),
        function l(d) {
            n.current = d,
            window.clearTimeout(r.current),
            d !== "" && (r.current = window.setTimeout(()=>l(""), 1e3))
        }(o)
    }
    , [e])
      , i = y.useCallback(()=>{
        n.current = "",
        window.clearTimeout(r.current)
    }
    , []);
    return y.useEffect(()=>()=>window.clearTimeout(r.current), []),
    [n, s, i]
}
function tE(t, e, n) {
    const s = e.length > 1 && Array.from(e).every(d=>d === e[0]) ? e[0] : e
      , i = n ? t.indexOf(n) : -1;
    let a = Qse(t, Math.max(i, 0));
    s.length === 1 && (a = a.filter(d=>d !== n));
    const l = a.find(d=>d.textValue.toLowerCase().startsWith(s.toLowerCase()));
    return l !== n ? l : void 0
}
function Qse(t, e) {
    return t.map((n,r)=>t[(e + r) % t.length])
}
const Xse = Sse
  , Jse = Ase
  , eie = jse
  , tie = Mse
  , nie = Tse
  , rie = Pse
  , sie = Vse
  , iie = Use
  , aie = zse
  , oie = Zse
  , cie = Wse
  , lie = Gse
  , die = Kse
  , uie = Yse
  , hie = ae(eie)`
  position: absolute;
  right: 10px;
  top: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  svg {
    vertical-align: middle;
    width: 10px;
    fill: ${t=>t.theme.color.labelMuted};
  }

  [data-select-variant="default"] & {
    right: 10px;
  }

  [data-select-variant="compact"] & {
    right: 5px;
  }
`
  , fie = ej`
  /* hack to prevent scrollbars blink with custom radix select */
  body.preventScrollbarBlink:not(.layoutScrollbarObtrusive) *::-webkit-scrollbar {
    display: none;
  }
`
  , pie = y.forwardRef(function(e, n) {
    const {id: r, children: s, className: i, style: a, defaultValue: o, value: l, disabled: d, onValueChange: u, defaultOpen: h, open: f, onOpenChange: p, placeholder: m, variant: g="default", side: C, stretched: b, portalContainer: k, ...S} = e;
    y.useEffect(()=>()=>{
        self.document.body.classList.remove("preventScrollbarBlink")
    }
    , []);
    const D = y.useContext(tD);
    return c.jsxs(Xse, {
        ...S,
        defaultValue: o,
        value: l,
        onValueChange: u,
        defaultOpen: h,
        open: f,
        onOpenChange: R=>{
            R ? self.document.body.classList.add("preventScrollbarBlink") : self.document.body.classList.remove("preventScrollbarBlink"),
            p == null || p(R)
        }
        ,
        children: [Qd ? c.jsx(fie, {}) : null, c.jsx(mie, {
            id: r,
            placeholder: m,
            "data-select-variant": g,
            ref: n,
            className: i,
            style: a,
            disabled: d,
            stretched: b
        }), c.jsx(tie, {
            container: k || D,
            children: c.jsx(Cie, {
                "data-select-variant": g,
                position: C ? "popper" : "item-aligned",
                side: C,
                sideOffset: C ? 5 : void 0,
                children: s
            })
        })]
    })
})
  , mie = y.forwardRef(function(e, n) {
    const {disabled: r, placeholder: s, ...i} = e;
    return c.jsxs(Sie, {
        ref: n,
        ...i,
        disabled: r,
        children: [c.jsx(Jse, {
            placeholder: s
        }), c.jsx(hie, {
            children: c.jsx(xD, {})
        })]
    })
})
  , gie = y.forwardRef(function(e, n) {
    const {children: r, label: s, ...i} = e;
    return c.jsxs(sie, {
        ...i,
        ref: n,
        children: [c.jsx(jie, {
            asChild: !0,
            children: c.jsx(Xe, {
                type: "microPlus",
                color: "labelMuted",
                truncate: !0,
                children: s
            })
        }), r]
    })
})
  , yie = y.forwardRef(function(e, n) {
    const {children: r, disabled: s, image: i, renderText: a, ...o} = e
      , l = c.jsx(Eie, {
        type: "small",
        color: "currentColor",
        truncate: !0,
        children: a ? a() : r
    });
    return c.jsxs(Aie, {
        ...o,
        disabled: s,
        ref: n,
        textValue: r,
        "data-prevent-global-listener": !0,
        children: [c.jsx(oie, {
            asChild: !0,
            children: i ? c.jsxs(Lt, {
                align: "center",
                children: [c.jsx(Mie, {
                    "aria-hidden": "true",
                    children: i
                }), l]
            }) : l
        }), c.jsx(Tie, {
            children: c.jsx(aV, {})
        })]
    })
})
  , Cie = y.forwardRef(function(e, n) {
    const {children: r, ...s} = e
      , i = eD();
    return c.jsx(nie, {
        ...s,
        asChild: !0,
        "data-prevent-global-listener": !0,
        ref: n,
        children: c.jsxs(_ie, {
            $isDialog: i,
            $isPopper: s.position === "popper",
            $disableFocusRing: !0,
            children: [c.jsx(Lie, {
                children: c.jsx(UN, {})
            }), c.jsx(Iie, {
                $isDialog: i,
                children: r
            }), c.jsx(Oie, {
                children: c.jsx(BN, {})
            })]
        })
    })
})
  , bie = ae(uie)`
  height: ${F1()};
  background-color: ${t=>t.theme.color.bgBorderThin};
  margin: 5px 0;
`
  , vie = ()=>c.jsx(bie, {})
  , Th = pie;
Th.Separator = vie;
Th.Group = gie;
Th.Option = yie;
const wie = y.forwardRef(function(e, n) {
    const {id: r, children: s, className: i, style: a, defaultValue: o, placeholder: l, value: d, disabled: u, onValueChange: h, variant: f="default"} = e;
    return c.jsx(jR, {
        id: r,
        ref: n,
        disabled: u,
        className: i,
        defaultValue: o,
        value: d,
        style: a,
        placeholder: l,
        onChange: p=>{
            h && h(p.target.value)
        }
        ,
        appearance: f === "compact" ? "small" : "normal",
        children: s
    })
})
  , kie = y.forwardRef(function(e, n) {
    const {children: r, disabled: s, image: i, renderText: a, ...o} = e;
    return c.jsx("option", {
        disabled: s,
        ...o,
        ref: n,
        children: r
    })
})
  , xie = y.forwardRef((t,e)=>{
    const {children: n, label: r} = t;
    return c.jsx("optgroup", {
        ref: e,
        label: r,
        children: n
    })
}
)
  , Lh = wie;
Lh.Separator = ()=>c.jsx(c.Fragment, {});
Lh.Group = xie;
Lh.Option = kie;
const nE = us
  , tf = nE ? Lh : Th;
tf.isNative = nE;
const Die = Qt`
  position: relative;
  display: flex;
  box-sizing: border-box;
  align-items: center;
  user-select: none;
  transition-duration: ${pn("highlightFadeOut")};
  transition-property: background-color, border, color, box-shadow;
  overflow: hidden;
  -webkit-app-region: no-drag;
  cursor: var(--pointer);
  padding-left: 10px;
  border: 1px solid transparent;
  background-color: ${t=>t.theme.color.controlSecondary};
  border-radius: ${t=>t.theme.inputBorderRadius};
  font-size: ${Pc("small")};
  color: ${t=>t.theme.color.labelBase};
  box-shadow: 0 0 0 1px ${t=>t.theme.color.bgBorderSolid};
  max-width: 100%;

  > span {
    overflow: hidden;
  }

  &[data-placeholder] {
    color: ${t=>t.theme.color.labelMuted};
  }
  &[aria-expanded="true"] {
    outline: none;
  }

  &[data-select-variant="large"] {
    height: 44px;
    margin-top: 1px;
    margin-bottom: 1px;
    padding-right: 28px;
  }

  &[data-select-variant="default"] {
    height: 30px;
    margin-top: 1px;
    margin-bottom: 1px;
    padding-right: 28px;
  }

  &[data-select-variant="compact"] {
    height: 22px;
    margin-top: 1px;
    margin-bottom: 1px;
    padding-right: 20px;
  }

  &:disabled {
    opacity: 0.5;
  }

  &:hover:not(:disabled) {
    transition: none;
    box-shadow: 0 0 0 1px ${t=>t.theme.highlightVariant(t.theme.color.bgBorderSolid)};
  }
`
  , Sie = ae(Ise)`
  ${Die}
  ${t=>t.stretched ? "width: 100%;" : ""};
`
  , _ie = ae(ep)`
  /* When the Select is opened and there's a draggable region below it, the items become difficult to click */
  ${Qf()}
  border-color: ${t=>t.theme.color.bgBorderSolid};
  overflow: hidden;
  box-shadow: ${t=>t.theme.shadowMedium};
  border-radius: 8px;
  z-index: ${t=>t.$isDialog ? vo.popoverInDialog : vo.popover};

  ${t=>t.$isPopper ? `
        min-width: var(--radix-select-trigger-width);
        max-height: var(--radix-select-content-available-height);
      ` : ""}
`
  , Iie = ae(rie)`
  padding: 4px 0;

  & > *:hover:not(:disabled) {
    ${t=>t.$isDialog ? `background-color: ${t.theme.color.bgShade}` : ""}
  }
`
  , Eie = ae(Xe)`
  display: block;
`
  , Aie = ae(aie)`
  all: unset;
  box-sizing: border-box;
  padding: 0 35px 0 10px;
  position: relative;
  user-select: none;

  display: flex;
  width: 100%;
  align-items: center;
  overflow: hidden;
  cursor: var(--pointer);
  box-shadow: none;

  &,
  &:focus-visible {
    outline: none;
  }

  [data-select-variant="large"] & {
    height: 44px;
  }

  [data-select-variant="default"] & {
    height: 32px;
  }

  [data-select-variant="compact"] & {
    height: 28px;
  }

  color: ${t=>t.theme.color.labelBase};

  &[data-disabled] {
    pointer-events: none;
    color: ${t=>t.theme.color.labelFaint};
  }

  > * {
    z-index: 0;
  }

  &:focus,
  &:focus-visible,
  &[data-highlighted] {
    box-shadow: none;

    &:before {
      content: "";
      position: absolute;
      top: 0;
      bottom: 0;
      left: 4px;
      right: 4px;
      background-color: ${t=>t.theme.color.bgFocus};
      border-radius: 6px;
    }
  }
`
  , jie = ae(iie)`
  padding: 4px 25px 6px 10px;
  display: flex;

  &:first-child {
    padding-top: 8px;
  }
`
  , Mie = ae.div`
  display: flex;
  align-items: center;
  margin-right: 5px;
  justify-content: center;
`
  , Tie = ae(cie)`
  position: absolute;
  right: 2px;
  width: 25px;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  [data-select-variant="default"] & {
    svg {
      width: 16px;
      height: auto;
    }
  }

  [data-select-variant="compact"] & {
    svg {
      width: 14px;
      height: auto;
    }
  }
`
  , rE = Qt`
  display: flex;
  align-items: center;
  justify-content: center;
  height: 25px;
  background-color: ${t=>t.theme.color.bgBase};
  cursor: default;
  color: ${t=>t.theme.color.labelFaint};

  svg {
    width: 14px;
    height: auto;
  }
`
  , Lie = ae(lie)`
  ${rE}
`
  , Oie = ae(die)`
  ${rE}
`
  , Rie = ae.div`
  position: relative;
`
  , Pie = y.forwardRef(function(e, n) {
    const {onChange: r, onInvalid: s, onFocus: i, onKeyDown: a, onMouseDown: o, onBlur: l, value: d, appearance: u, autoFocus: h, name: f, tabIndex: p, disabled: m, min: g=new Date("1970-01-01").toTimelessDate(), max: C=new Date("2099-12-31").toTimelessDate(), className: b} = e
      , k = y.useRef(1)
      , S = D=>{
        const R = D.currentTarget.value;
        r(R.length > 0 ? R : void 0)
    }
    ;
    return c.jsx($ie, {
        className: b,
        type: "date",
        autoComplete: "off",
        ref: n,
        onFocus: i,
        onClick: D=>us ? !0 : D.preventDefault(),
        onMouseDown: o,
        onKeyDown: a,
        onBlur: l,
        onChange: S,
        name: f,
        disabled: m,
        min: g,
        max: C,
        tabIndex: p,
        appearance: u,
        autoFocus: h,
        value: d || "",
        hasValue: d !== void 0,
        onInvalid: s
    }, k.current)
})
  , $ie = ae(nc)`
  color: ${t=>t.hasValue ? ze("labelTitle") : ze("labelMuted")};
  text-transform: uppercase;
  -moz-appearance: textfield;
  padding-right: 6px;

  &:focus {
    color: ${ze("labelTitle")};
  }

  &::-webkit-inner-spin-button,
  &::-webkit-calendar-picker-indicator {
    display: none;
    -webkit-appearance: none;
  }
`
  , Fie = y.forwardRef((t,e)=>{
    const {appearance: n, value: r, placement: s, autoFocus: i, name: a, tabIndex: o, min: l=new Date("1970-01-01").toTimelessDate(), max: d=new Date("2099-12-31").toTimelessDate(), inlineError: u=!0, customDatePickerContainer: h, blurOnSubmit: f=!1, useOverlay: p=!1, placeholder: m, onChange: g, onClear: C, onFocus: b, onBlur: k, disabled: S, onEscape: D, className: R} = t
      , T = Ff || t.disablePicker
      , B = y.useRef(null)
      , z = y.useRef(null)
      , [W,fe] = y.useState(r == null ? void 0 : r.toLocalDate().toTimelessDate());
    y.useEffect(()=>{
        var Z;
        i && ((Z = z.current) == null || Z.onShow())
    }
    , []),
    y.useLayoutEffect(()=>{
        const Z = r == null ? void 0 : r.toLocalDate().toTimelessDate();
        W !== Z && fe(Z)
    }
    , [r]);
    const me = y.useRef(1)
      , [_e,I] = y.useState(!1)
      , Q = l && W && W.toLocalDate() < l.toLocalDate() ? l : void 0
      , P = d && W && W.toLocalDate() > d.toLocalDate() ? d : void 0
      , A = Z=>{
        fe(Z),
        I(!1)
    }
      , E = ()=>{
        var Z, U;
        (Z = B.current) == null || Z.focus(),
        (U = z.current) == null || U.onShow()
    }
      , V = Z=>{
        B.current && (Z.key === "Escape" && (fe(r),
        D == null || D(Z)),
        Z.key === "Enter" && X(W),
        Z.key.indexOf("Arrow") === 0 && Z.stopPropagation(),
        /^[0-9]$/i.test(Z.key) && Z.stopPropagation())
    }
      , X = Z=>{
        var U;
        _(Z),
        f && ((U = B.current) == null || U.blur())
    }
      , L = Z=>{
        _(W),
        k == null || k(Z)
    }
      , q = Z=>{
        var U;
        (U = z.current) == null || U.onShow(),
        b == null || b(Z)
    }
      , oe = ()=>{
        _(void 0),
        C == null || C()
    }
      , we = Z=>{
        I(!0),
        Z.preventDefault()
    }
      , _ = Z=>{
        var ce;
        const U = (Z == null ? void 0 : Z.split("-").length) !== 3 ? void 0 : Z;
        W !== U && (fe(U),
        me.current++),
        Q || P ? I(!0) : U !== r && g(U),
        (ce = z.current) == null || ce.onHide()
    }
      , M = _e && c.jsx(Xp, {
        inline: u,
        children: P ? `Needs to be below ${P}` : Q ? `Needs to be above ${Q}` : "Invalid date"
    });
    return c.jsxs(c.Fragment, {
        children: [c.jsx(Nie, {
            children: c.jsxs(Rie, {
                children: [c.jsx(Vie, {
                    appearance: n,
                    className: R,
                    onFocus: q,
                    ref: Kc([B, e]),
                    onMouseDown: E,
                    onKeyDown: V,
                    onBlur: L,
                    onChange: A,
                    name: a,
                    disabled: S,
                    min: l,
                    max: d,
                    tabIndex: o,
                    autoFocus: i,
                    value: W,
                    onInvalid: we
                }, me.current), r && !S ? c.jsx(Hd, {
                    onMouseDown: oe,
                    children: c.jsx(DD, {})
                }) : null, u && M]
            })
        }), !u && M, T ? null : c.jsx(Uie, {
            placement: s,
            ref: z,
            value: W ?? m,
            onChange: X,
            targetRef: B,
            customDatePickerContainer: h,
            disableClickAway: !p,
            defaultMonth: t.defaultMonth
        })]
    })
}
)
  , Hd = ae.div`
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 50%;
  transform: translateY(-50%);
  right: 8px;
  width: 13px;
  height: 13px;
  border-radius: 50%;
  background-color: ${t=>t.theme.color.labelFaint};
  ${w8(6, 6, 6, 6, !1)}

  svg {
    fill: ${t=>t.theme.color.controlLabel};
    width: 9px;
    height: 9px;
  }

  @media (any-hover: hover) {
    opacity: 0;
    transition-property: opacity;
    transition-duration: ${pn("highlightFadeOut")};

    &:hover {
      opacity: 1;
      background-color: ${t=>t.theme.color.labelMuted};
    }
  }
`
  , Nie = ae.div`
  position: relative;
`
  , Vie = ae(Pie)`
  &:${gs} + ${Hd}, &:focus + ${Hd} {
    transition-duration: ${pn("highlightFadeIn")};
    opacity: 1;
  }
`
  , Bie = "date-input-popover"
  , Uie = y.forwardRef(function(e, n) {
    const {onChange: r, value: s, placement: i="bottom-start", targetRef: a, min: o=new Date("1970-01-01").toTimelessDate(), max: l=new Date("2099-12-31").toTimelessDate(), customDatePickerContainer: d, showInput: u, disableClickAway: h, focusTrap: f} = e
      , p = y.useRef(null)
      , m = o && s && s.toLocalDate() < o.toLocalDate() ? o : void 0
      , g = l && s && s.toLocalDate() > l.toLocalDate() ? l : void 0
      , {onHide: C, onShow: b, popoverProps: k} = Jx({
        targetRef: a,
        popoverRef: p,
        options: {
            strategy: "absolute",
            placement: i
        }
    });
    y.useImperativeHandle(n, ()=>({
        onShow: b,
        onHide: C
    }));
    const S = B=>{
        const z = (B == null ? void 0 : B.split("-").length) !== 3 ? void 0 : B;
        m || g || r(z),
        C()
    }
      , D = B=>{
        var z;
        (z = a.current) == null || z.blur(),
        S(B.toTimelessDate())
    }
      , R = d || Lt
      , T = B=>f ? c.jsx(Oz, {
        focusTrapOptions: {
            clickOutsideDeactivates: !h
        },
        active: f && k.lifecycle === Zr.open,
        children: B
    }) : B;
    return c.jsx(nD, {
        contextualPortal: !0,
        ref: p,
        component: Hie,
        onRequestClose: C,
        disableClickAway: h,
        ...k,
        children: ()=>{
            var B;
            return T(c.jsxs(R, {
                gap: 16,
                column: !0,
                children: [u && c.jsx(Zie, {
                    disablePicker: !0,
                    value: s,
                    onChange: S
                }), c.jsx(um, {
                    onDayClick: D,
                    defaultMonth: s ? s.toLocalDate() : (B = e.defaultMonth) == null ? void 0 : B.toLocalDate(),
                    selected: s ? [s.toLocalDate()] : [],
                    showOutsideDays: !0,
                    initialFocus: f
                })]
            }))
        }
    })
})
  , Hie = t=>c.jsx(zie, {
    onMouseDown: e=>e.preventDefault(),
    ...t,
    id: Bie
})
  , zie = ae(ep)`
  box-shadow: ${t=>t.theme.shadowMedium};
  border-radius: 8px;
  padding: 8px;
`
  , Zie = ae(Fie)`
  width: 100%;
`;
var gt = function() {
    return gt = Object.assign || function(e) {
        for (var n, r = 1, s = arguments.length; r < s; r++) {
            n = arguments[r];
            for (var i in n)
                Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i])
        }
        return e
    }
    ,
    gt.apply(this, arguments)
};
function qie(t, e) {
    var n = {};
    for (var r in t)
        Object.prototype.hasOwnProperty.call(t, r) && e.indexOf(r) < 0 && (n[r] = t[r]);
    if (t != null && typeof Object.getOwnPropertySymbols == "function")
        for (var s = 0, r = Object.getOwnPropertySymbols(t); s < r.length; s++)
            e.indexOf(r[s]) < 0 && Object.prototype.propertyIsEnumerable.call(t, r[s]) && (n[r[s]] = t[r[s]]);
    return n
}
function sE(t, e, n) {
    if (n || arguments.length === 2)
        for (var r = 0, s = e.length, i; r < s; r++)
            (i || !(r in e)) && (i || (i = Array.prototype.slice.call(e, 0, r)),
            i[r] = e[r]);
    return t.concat(i || Array.prototype.slice.call(e))
}
var iE = {
    exports: {}
}
  , bu = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Zv;
function Wie() {
    if (Zv)
        return bu;
    Zv = 1;
    var t = $a
      , e = Symbol.for("react.element")
      , n = Symbol.for("react.fragment")
      , r = Object.prototype.hasOwnProperty
      , s = t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner
      , i = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
    };
    function a(o, l, d) {
        var u, h = {}, f = null, p = null;
        d !== void 0 && (f = "" + d),
        l.key !== void 0 && (f = "" + l.key),
        l.ref !== void 0 && (p = l.ref);
        for (u in l)
            r.call(l, u) && !i.hasOwnProperty(u) && (h[u] = l[u]);
        if (o && o.defaultProps)
            for (u in l = o.defaultProps,
            l)
                h[u] === void 0 && (h[u] = l[u]);
        return {
            $$typeof: e,
            type: o,
            key: f,
            ref: p,
            props: h,
            _owner: s.current
        }
    }
    return bu.Fragment = n,
    bu.jsx = a,
    bu.jsxs = a,
    bu
}
iE.exports = Wie();
var ve = iE.exports;
function D5(t) {
    return t.mode === "multiple"
}
function S5(t) {
    return t.mode === "range"
}
function Oh(t) {
    return t.mode === "single"
}
var Gie = {
    root: "rdp",
    multiple_months: "rdp-multiple_months",
    with_weeknumber: "rdp-with_weeknumber",
    vhidden: "rdp-vhidden",
    button_reset: "rdp-button_reset",
    button: "rdp-button",
    caption: "rdp-caption",
    caption_start: "rdp-caption_start",
    caption_end: "rdp-caption_end",
    caption_between: "rdp-caption_between",
    caption_label: "rdp-caption_label",
    caption_dropdowns: "rdp-caption_dropdowns",
    dropdown: "rdp-dropdown",
    dropdown_month: "rdp-dropdown_month",
    dropdown_year: "rdp-dropdown_year",
    dropdown_icon: "rdp-dropdown_icon",
    months: "rdp-months",
    month: "rdp-month",
    table: "rdp-table",
    tbody: "rdp-tbody",
    tfoot: "rdp-tfoot",
    head: "rdp-head",
    head_row: "rdp-head_row",
    head_cell: "rdp-head_cell",
    nav: "rdp-nav",
    nav_button: "rdp-nav_button",
    nav_button_previous: "rdp-nav_button_previous",
    nav_button_next: "rdp-nav_button_next",
    nav_icon: "rdp-nav_icon",
    row: "rdp-row",
    weeknumber: "rdp-weeknumber",
    cell: "rdp-cell",
    day: "rdp-day",
    day_today: "rdp-day_today",
    day_outside: "rdp-day_outside",
    day_selected: "rdp-day_selected",
    day_disabled: "rdp-day_disabled",
    day_hidden: "rdp-day_hidden",
    day_range_start: "rdp-day_range_start",
    day_range_end: "rdp-day_range_end",
    day_range_middle: "rdp-day_range_middle"
};
function Kie(t, e) {
    return Mr(t, "LLLL y", e)
}
function Yie(t, e) {
    return Mr(t, "d", e)
}
function Qie(t, e) {
    return Mr(t, "LLLL", e)
}
function Xie(t) {
    return "".concat(t)
}
function Jie(t, e) {
    return Mr(t, "cccccc", e)
}
function eae(t, e) {
    return Mr(t, "yyyy", e)
}
var tae = Object.freeze({
    __proto__: null,
    formatCaption: Kie,
    formatDay: Yie,
    formatMonthCaption: Qie,
    formatWeekNumber: Xie,
    formatWeekdayName: Jie,
    formatYearCaption: eae
})
  , nae = function(t, e, n) {
    return Mr(t, "do MMMM (EEEE)", n)
}
  , rae = function() {
    return "Month: "
}
  , sae = function() {
    return "Go to next month"
}
  , iae = function() {
    return "Go to previous month"
}
  , aae = function(t, e) {
    return Mr(t, "cccc", e)
}
  , oae = function(t) {
    return "Week n. ".concat(t)
}
  , cae = function() {
    return "Year: "
}
  , lae = Object.freeze({
    __proto__: null,
    labelDay: nae,
    labelMonthDropdown: rae,
    labelNext: sae,
    labelPrevious: iae,
    labelWeekNumber: oae,
    labelWeekday: aae,
    labelYearDropdown: cae
});
function dae() {
    var t = "buttons"
      , e = Gie
      , n = Mk
      , r = {}
      , s = {}
      , i = 1
      , a = {}
      , o = new Date;
    return {
        captionLayout: t,
        classNames: e,
        formatters: tae,
        labels: lae,
        locale: n,
        modifiersClassNames: r,
        modifiers: s,
        numberOfMonths: i,
        styles: a,
        today: o,
        mode: "default"
    }
}
function uae(t) {
    var e = t.fromYear
      , n = t.toYear
      , r = t.fromMonth
      , s = t.toMonth
      , i = t.fromDate
      , a = t.toDate;
    return r ? i = ps(r) : e && (i = new Date(e,0,1)),
    s ? a = Sa(s) : n && (a = new Date(n,11,31)),
    {
        fromDate: i ? N2(i) : void 0,
        toDate: a ? N2(a) : void 0
    }
}
var aE = y.createContext(void 0);
function hae(t) {
    var e, n = t.initialProps, r = dae(), s = uae(n), i = s.fromDate, a = s.toDate, o = (e = n.captionLayout) !== null && e !== void 0 ? e : r.captionLayout;
    o !== "buttons" && (!i || !a) && (o = "buttons");
    var l;
    (Oh(n) || D5(n) || S5(n)) && (l = n.onSelect);
    var d = gt(gt(gt({}, r), n), {
        captionLayout: o,
        classNames: gt(gt({}, r.classNames), n.classNames),
        components: gt({}, n.components),
        formatters: gt(gt({}, r.formatters), n.formatters),
        fromDate: i,
        labels: gt(gt({}, r.labels), n.labels),
        mode: n.mode || r.mode,
        modifiers: gt(gt({}, r.modifiers), n.modifiers),
        modifiersClassNames: gt(gt({}, r.modifiersClassNames), n.modifiersClassNames),
        onSelect: l,
        styles: gt(gt({}, r.styles), n.styles),
        toDate: a
    });
    return ve.jsx(aE.Provider, {
        value: d,
        children: t.children
    })
}
function An() {
    var t = y.useContext(aE);
    if (!t)
        throw new Error("useDayPicker must be used within a DayPickerProvider.");
    return t
}
function oE(t) {
    var e = An()
      , n = e.locale
      , r = e.classNames
      , s = e.styles
      , i = e.formatters.formatCaption;
    return ve.jsx("div", {
        className: r.caption_label,
        style: s.caption_label,
        "aria-live": "polite",
        role: "presentation",
        id: t.id,
        children: i(t.displayMonth, {
            locale: n
        })
    })
}
function fae(t) {
    return ve.jsx("svg", gt({
        width: "8px",
        height: "8px",
        viewBox: "0 0 120 120",
        "data-testid": "iconDropdown"
    }, t, {
        children: ve.jsx("path", {
            d: "M4.22182541,48.2218254 C8.44222828,44.0014225 15.2388494,43.9273804 19.5496459,47.9996989 L19.7781746,48.2218254 L60,88.443 L100.221825,48.2218254 C104.442228,44.0014225 111.238849,43.9273804 115.549646,47.9996989 L115.778175,48.2218254 C119.998577,52.4422283 120.07262,59.2388494 116.000301,63.5496459 L115.778175,63.7781746 L67.7781746,111.778175 C63.5577717,115.998577 56.7611506,116.07262 52.4503541,112.000301 L52.2218254,111.778175 L4.22182541,63.7781746 C-0.0739418023,59.4824074 -0.0739418023,52.5175926 4.22182541,48.2218254 Z",
            fill: "currentColor",
            fillRule: "nonzero"
        })
    }))
}
function cE(t) {
    var e, n, r = t.onChange, s = t.value, i = t.children, a = t.caption, o = t.className, l = t.style, d = An(), u = (n = (e = d.components) === null || e === void 0 ? void 0 : e.IconDropdown) !== null && n !== void 0 ? n : fae;
    return ve.jsxs("div", {
        className: o,
        style: l,
        children: [ve.jsx("span", {
            className: d.classNames.vhidden,
            children: t["aria-label"]
        }), ve.jsx("select", {
            name: t.name,
            "aria-label": t["aria-label"],
            className: d.classNames.dropdown,
            style: d.styles.dropdown,
            value: s,
            onChange: r,
            children: i
        }), ve.jsxs("div", {
            className: d.classNames.caption_label,
            style: d.styles.caption_label,
            "aria-hidden": "true",
            children: [a, ve.jsx(u, {
                className: d.classNames.dropdown_icon,
                style: d.styles.dropdown_icon
            })]
        })]
    })
}
function pae(t) {
    var e, n = An(), r = n.fromDate, s = n.toDate, i = n.styles, a = n.locale, o = n.formatters.formatMonthCaption, l = n.classNames, d = n.components, u = n.labels.labelMonthDropdown;
    if (!r)
        return ve.jsx(ve.Fragment, {});
    if (!s)
        return ve.jsx(ve.Fragment, {});
    var h = [];
    if (Ef(r, s))
        for (var f = ps(r), p = r.getMonth(); p <= s.getMonth(); p++)
            h.push(Zh(f, p));
    else
        for (var f = ps(new Date), p = 0; p <= 11; p++)
            h.push(Zh(f, p));
    var m = function(C) {
        var b = Number(C.target.value)
          , k = Zh(ps(t.displayMonth), b);
        t.onChange(k)
    }
      , g = (e = d == null ? void 0 : d.Dropdown) !== null && e !== void 0 ? e : cE;
    return ve.jsx(g, {
        name: "months",
        "aria-label": u(),
        className: l.dropdown_month,
        style: i.dropdown_month,
        onChange: m,
        value: t.displayMonth.getMonth(),
        caption: o(t.displayMonth, {
            locale: a
        }),
        children: h.map(function(C) {
            return ve.jsx("option", {
                value: C.getMonth(),
                children: o(C, {
                    locale: a
                })
            }, C.getMonth())
        })
    })
}
function mae(t) {
    var e, n = t.displayMonth, r = An(), s = r.fromDate, i = r.toDate, a = r.locale, o = r.styles, l = r.classNames, d = r.components, u = r.formatters.formatYearCaption, h = r.labels.labelYearDropdown, f = [];
    if (!s)
        return ve.jsx(ve.Fragment, {});
    if (!i)
        return ve.jsx(ve.Fragment, {});
    for (var p = s.getFullYear(), m = i.getFullYear(), g = p; g <= m; g++)
        f.push(vg(xu(new Date), g));
    var C = function(k) {
        var S = vg(ps(n), Number(k.target.value));
        t.onChange(S)
    }
      , b = (e = d == null ? void 0 : d.Dropdown) !== null && e !== void 0 ? e : cE;
    return ve.jsx(b, {
        name: "years",
        "aria-label": h(),
        className: l.dropdown_year,
        style: o.dropdown_year,
        onChange: C,
        value: n.getFullYear(),
        caption: u(n, {
            locale: a
        }),
        children: f.map(function(k) {
            return ve.jsx("option", {
                value: k.getFullYear(),
                children: u(k, {
                    locale: a
                })
            }, k.getFullYear())
        })
    })
}
function gae(t, e) {
    var n = y.useState(t)
      , r = n[0]
      , s = n[1]
      , i = e === void 0 ? r : e;
    return [i, s]
}
function yae(t) {
    var e = t.month
      , n = t.defaultMonth
      , r = t.today
      , s = e || n || r || new Date
      , i = t.toDate
      , a = t.fromDate
      , o = t.numberOfMonths
      , l = o === void 0 ? 1 : o;
    if (i && s0(i, s) < 0) {
        var d = -1 * (l - 1);
        s = $n(i, d)
    }
    return a && s0(s, a) < 0 && (s = a),
    ps(s)
}
function Cae() {
    var t = An()
      , e = yae(t)
      , n = gae(e, t.month)
      , r = n[0]
      , s = n[1]
      , i = function(a) {
        var o;
        if (!t.disableNavigation) {
            var l = ps(a);
            s(l),
            (o = t.onMonthChange) === null || o === void 0 || o.call(t, l)
        }
    };
    return [r, i]
}
function bae(t, e) {
    for (var n = e.reverseMonths, r = e.numberOfMonths, s = ps(t), i = ps($n(s, r)), a = s0(i, s), o = [], l = 0; l < a; l++) {
        var d = $n(s, l);
        o.push(d)
    }
    return n && (o = o.reverse()),
    o
}
function vae(t, e) {
    if (!e.disableNavigation) {
        var n = e.toDate
          , r = e.pagedNavigation
          , s = e.numberOfMonths
          , i = s === void 0 ? 1 : s
          , a = r ? i : 1
          , o = ps(t);
        if (!n)
            return $n(o, a);
        var l = s0(n, t);
        if (!(l < i))
            return $n(o, a)
    }
}
function wae(t, e) {
    if (!e.disableNavigation) {
        var n = e.fromDate
          , r = e.pagedNavigation
          , s = e.numberOfMonths
          , i = s === void 0 ? 1 : s
          , a = r ? i : 1
          , o = ps(t);
        if (!n)
            return $n(o, -a);
        var l = s0(o, n);
        if (!(l <= 0))
            return $n(o, -a)
    }
}
var lE = y.createContext(void 0);
function kae(t) {
    var e = An()
      , n = Cae()
      , r = n[0]
      , s = n[1]
      , i = bae(r, e)
      , a = vae(r, e)
      , o = wae(r, e)
      , l = function(h) {
        return i.some(function(f) {
            return R3(h, f)
        })
    }
      , d = function(h, f) {
        l(h) || (f && Dd(h, f) ? s($n(h, 1 + e.numberOfMonths * -1)) : s(h))
    }
      , u = {
        currentMonth: r,
        displayMonths: i,
        goToMonth: s,
        goToDate: d,
        previousMonth: o,
        nextMonth: a,
        isDateDisplayed: l
    };
    return ve.jsx(lE.Provider, {
        value: u,
        children: t.children
    })
}
function _5() {
    var t = y.useContext(lE);
    if (!t)
        throw new Error("useNavigation must be used within a NavigationProvider");
    return t
}
function qv(t) {
    var e, n = An(), r = n.classNames, s = n.styles, i = n.components, a = _5().goToMonth, o = function(u) {
        a($n(u, t.displayIndex ? -t.displayIndex : 0))
    }, l = (e = i == null ? void 0 : i.CaptionLabel) !== null && e !== void 0 ? e : oE, d = ve.jsx(l, {
        id: t.id,
        displayMonth: t.displayMonth
    });
    return ve.jsxs("div", {
        className: r.caption_dropdowns,
        style: s.caption_dropdowns,
        children: [ve.jsx("div", {
            className: r.vhidden,
            children: d
        }), ve.jsx(pae, {
            onChange: o,
            displayMonth: t.displayMonth
        }), ve.jsx(mae, {
            onChange: o,
            displayMonth: t.displayMonth
        })]
    })
}
function xae(t) {
    return ve.jsx("svg", gt({
        width: "16px",
        height: "16px",
        viewBox: "0 0 120 120"
    }, t, {
        children: ve.jsx("path", {
            d: "M69.490332,3.34314575 C72.6145263,0.218951416 77.6798462,0.218951416 80.8040405,3.34314575 C83.8617626,6.40086786 83.9268205,11.3179931 80.9992143,14.4548388 L80.8040405,14.6568542 L35.461,60 L80.8040405,105.343146 C83.8617626,108.400868 83.9268205,113.317993 80.9992143,116.454839 L80.8040405,116.656854 C77.7463184,119.714576 72.8291931,119.779634 69.6923475,116.852028 L69.490332,116.656854 L18.490332,65.6568542 C15.4326099,62.5991321 15.367552,57.6820069 18.2951583,54.5451612 L18.490332,54.3431458 L69.490332,3.34314575 Z",
            fill: "currentColor",
            fillRule: "nonzero"
        })
    }))
}
function Dae(t) {
    return ve.jsx("svg", gt({
        width: "16px",
        height: "16px",
        viewBox: "0 0 120 120"
    }, t, {
        children: ve.jsx("path", {
            d: "M49.8040405,3.34314575 C46.6798462,0.218951416 41.6145263,0.218951416 38.490332,3.34314575 C35.4326099,6.40086786 35.367552,11.3179931 38.2951583,14.4548388 L38.490332,14.6568542 L83.8333725,60 L38.490332,105.343146 C35.4326099,108.400868 35.367552,113.317993 38.2951583,116.454839 L38.490332,116.656854 C41.5480541,119.714576 46.4651794,119.779634 49.602025,116.852028 L49.8040405,116.656854 L100.804041,65.6568542 C103.861763,62.5991321 103.926821,57.6820069 100.999214,54.5451612 L100.804041,54.3431458 L49.8040405,3.34314575 Z",
            fill: "currentColor"
        })
    }))
}
var a3 = y.forwardRef(function(t, e) {
    var n = An()
      , r = n.classNames
      , s = n.styles
      , i = [r.button_reset, r.button];
    t.className && i.push(t.className);
    var a = i.join(" ")
      , o = gt(gt({}, s.button_reset), s.button);
    return t.style && Object.assign(o, t.style),
    ve.jsx("button", gt({}, t, {
        ref: e,
        type: "button",
        className: a,
        style: o
    }))
});
function Sae(t) {
    var e, n, r = An(), s = r.dir, i = r.locale, a = r.classNames, o = r.styles, l = r.labels, d = l.labelPrevious, u = l.labelNext, h = r.components;
    if (!t.nextMonth && !t.previousMonth)
        return ve.jsx(ve.Fragment, {});
    var f = d(t.previousMonth, {
        locale: i
    })
      , p = [a.nav_button, a.nav_button_previous].join(" ")
      , m = u(t.nextMonth, {
        locale: i
    })
      , g = [a.nav_button, a.nav_button_next].join(" ")
      , C = (e = h == null ? void 0 : h.IconRight) !== null && e !== void 0 ? e : Dae
      , b = (n = h == null ? void 0 : h.IconLeft) !== null && n !== void 0 ? n : xae;
    return ve.jsxs("div", {
        className: a.nav,
        style: o.nav,
        children: [!t.hidePrevious && ve.jsx(a3, {
            name: "previous-month",
            "aria-label": f,
            className: p,
            style: o.nav_button_previous,
            disabled: !t.previousMonth,
            onClick: t.onPreviousClick,
            children: s === "rtl" ? ve.jsx(C, {
                className: a.nav_icon,
                style: o.nav_icon
            }) : ve.jsx(b, {
                className: a.nav_icon,
                style: o.nav_icon
            })
        }), !t.hideNext && ve.jsx(a3, {
            name: "next-month",
            "aria-label": m,
            className: g,
            style: o.nav_button_next,
            disabled: !t.nextMonth,
            onClick: t.onNextClick,
            children: s === "rtl" ? ve.jsx(b, {
                className: a.nav_icon,
                style: o.nav_icon
            }) : ve.jsx(C, {
                className: a.nav_icon,
                style: o.nav_icon
            })
        })]
    })
}
function Wv(t) {
    var e = An().numberOfMonths
      , n = _5()
      , r = n.previousMonth
      , s = n.nextMonth
      , i = n.goToMonth
      , a = n.displayMonths
      , o = a.findIndex(function(m) {
        return R3(t.displayMonth, m)
    })
      , l = o === 0
      , d = o === a.length - 1
      , u = e > 1 && (l || !d)
      , h = e > 1 && (d || !l)
      , f = function() {
        r && i(r)
    }
      , p = function() {
        s && i(s)
    };
    return ve.jsx(Sae, {
        displayMonth: t.displayMonth,
        hideNext: u,
        hidePrevious: h,
        nextMonth: s,
        previousMonth: r,
        onPreviousClick: f,
        onNextClick: p
    })
}
function _ae(t) {
    var e, n = An(), r = n.classNames, s = n.disableNavigation, i = n.styles, a = n.captionLayout, o = n.components, l = (e = o == null ? void 0 : o.CaptionLabel) !== null && e !== void 0 ? e : oE, d;
    return s ? d = ve.jsx(l, {
        id: t.id,
        displayMonth: t.displayMonth
    }) : a === "dropdown" ? d = ve.jsx(qv, {
        displayMonth: t.displayMonth,
        id: t.id
    }) : a === "dropdown-buttons" ? d = ve.jsxs(ve.Fragment, {
        children: [ve.jsx(qv, {
            displayMonth: t.displayMonth,
            displayIndex: t.displayIndex,
            id: t.id
        }), ve.jsx(Wv, {
            displayMonth: t.displayMonth,
            displayIndex: t.displayIndex,
            id: t.id
        })]
    }) : d = ve.jsxs(ve.Fragment, {
        children: [ve.jsx(l, {
            id: t.id,
            displayMonth: t.displayMonth,
            displayIndex: t.displayIndex
        }), ve.jsx(Wv, {
            displayMonth: t.displayMonth,
            id: t.id
        })]
    }),
    ve.jsx("div", {
        className: r.caption,
        style: i.caption,
        children: d
    })
}
function Iae(t) {
    var e = An()
      , n = e.footer
      , r = e.styles
      , s = e.classNames.tfoot;
    return n ? ve.jsx("tfoot", {
        className: s,
        style: r.tfoot,
        children: ve.jsx("tr", {
            children: ve.jsx("td", {
                colSpan: 8,
                children: n
            })
        })
    }) : ve.jsx(ve.Fragment, {})
}
function Eae(t, e, n) {
    for (var r = n ? Tf(new Date) : P3(new Date, {
        locale: t,
        weekStartsOn: e
    }), s = [], i = 0; i < 7; i++) {
        var a = _s(r, i);
        s.push(a)
    }
    return s
}
function Aae() {
    var t = An()
      , e = t.classNames
      , n = t.styles
      , r = t.showWeekNumber
      , s = t.locale
      , i = t.weekStartsOn
      , a = t.ISOWeek
      , o = t.formatters.formatWeekdayName
      , l = t.labels.labelWeekday
      , d = Eae(s, i, a);
    return ve.jsxs("tr", {
        style: n.head_row,
        className: e.head_row,
        children: [r && ve.jsx("td", {
            style: n.head_cell,
            className: e.head_cell
        }), d.map(function(u, h) {
            return ve.jsx("th", {
                scope: "col",
                className: e.head_cell,
                style: n.head_cell,
                "aria-label": l(u, {
                    locale: s
                }),
                children: o(u, {
                    locale: s
                })
            }, h)
        })]
    })
}
function jae() {
    var t, e = An(), n = e.classNames, r = e.styles, s = e.components, i = (t = s == null ? void 0 : s.HeadRow) !== null && t !== void 0 ? t : Aae;
    return ve.jsx("thead", {
        style: r.head,
        className: n.head,
        children: ve.jsx(i, {})
    })
}
function Mae(t) {
    var e = An()
      , n = e.locale
      , r = e.formatters.formatDay;
    return ve.jsx(ve.Fragment, {
        children: r(t.date, {
            locale: n
        })
    })
}
var sm = y.createContext(void 0);
function Tae(t) {
    if (!D5(t.initialProps)) {
        var e = {
            selected: void 0,
            modifiers: {
                disabled: []
            }
        };
        return ve.jsx(sm.Provider, {
            value: e,
            children: t.children
        })
    }
    return ve.jsx(Lae, {
        initialProps: t.initialProps,
        children: t.children
    })
}
function Lae(t) {
    var e = t.initialProps
      , n = t.children
      , r = e.selected
      , s = e.min
      , i = e.max
      , a = function(d, u, h) {
        var f, p;
        (f = e.onDayClick) === null || f === void 0 || f.call(e, d, u, h);
        var m = !!(u.selected && s && (r == null ? void 0 : r.length) === s);
        if (!m) {
            var g = !!(!u.selected && i && (r == null ? void 0 : r.length) === i);
            if (!g) {
                var C = r ? sE([], r, !0) : [];
                if (u.selected) {
                    var b = C.findIndex(function(k) {
                        return Ts(d, k)
                    });
                    C.splice(b, 1)
                } else
                    C.push(d);
                (p = e.onSelect) === null || p === void 0 || p.call(e, C, d, u, h)
            }
        }
    }
      , o = {
        disabled: []
    };
    r && o.disabled.push(function(d) {
        var u = i && r.length > i - 1
          , h = r.some(function(f) {
            return Ts(f, d)
        });
        return !!(u && !h)
    });
    var l = {
        selected: r,
        onDayClick: a,
        modifiers: o
    };
    return ve.jsx(sm.Provider, {
        value: l,
        children: n
    })
}
function im() {
    var t = y.useContext(sm);
    if (!t)
        throw new Error("useSelectMultiple must be used within a SelectMultipleProvider");
    return t
}
function Oae(t, e) {
    var n = e || {}
      , r = n.from
      , s = n.to;
    return r && s ? Ts(s, t) && Ts(r, t) ? void 0 : Ts(s, t) ? {
        from: s,
        to: void 0
    } : Ts(r, t) ? void 0 : Do(r, t) ? {
        from: t,
        to: s
    } : {
        from: r,
        to: t
    } : s ? Do(t, s) ? {
        from: s,
        to: t
    } : {
        from: t,
        to: s
    } : r ? Dd(t, r) ? {
        from: t,
        to: r
    } : {
        from: r,
        to: t
    } : {
        from: t,
        to: void 0
    }
}
var am = y.createContext(void 0);
function Rae(t) {
    if (!S5(t.initialProps)) {
        var e = {
            selected: void 0,
            modifiers: {
                range_start: [],
                range_end: [],
                range_middle: [],
                disabled: []
            }
        };
        return ve.jsx(am.Provider, {
            value: e,
            children: t.children
        })
    }
    return ve.jsx(Pae, {
        initialProps: t.initialProps,
        children: t.children
    })
}
function Pae(t) {
    var e = t.initialProps
      , n = t.children
      , r = e.selected
      , s = r || {}
      , i = s.from
      , a = s.to
      , o = e.min
      , l = e.max
      , d = function(p, m, g) {
        var C, b;
        (C = e.onDayClick) === null || C === void 0 || C.call(e, p, m, g);
        var k = Oae(p, r);
        (b = e.onSelect) === null || b === void 0 || b.call(e, k, p, m, g)
    }
      , u = {
        range_start: [],
        range_end: [],
        range_middle: [],
        disabled: []
    };
    if (i ? (u.range_start = [i],
    a ? (u.range_end = [a],
    Ts(i, a) || (u.range_middle = [{
        after: i,
        before: a
    }])) : u.range_end = [i]) : a && (u.range_start = [a],
    u.range_end = [a]),
    o && (i && !a && u.disabled.push({
        after: zh(i, o - 1),
        before: _s(i, o - 1)
    }),
    i && a && u.disabled.push({
        after: i,
        before: _s(i, o - 1)
    }),
    !i && a && u.disabled.push({
        after: zh(a, o - 1),
        before: _s(a, o - 1)
    })),
    l) {
        if (i && !a && (u.disabled.push({
            before: _s(i, -l + 1)
        }),
        u.disabled.push({
            after: _s(i, l - 1)
        })),
        i && a) {
            var h = Fi(a, i) + 1
              , f = l - h;
            u.disabled.push({
                before: zh(i, f)
            }),
            u.disabled.push({
                after: _s(a, f)
            })
        }
        !i && a && (u.disabled.push({
            before: _s(a, -l + 1)
        }),
        u.disabled.push({
            after: _s(a, l - 1)
        }))
    }
    return ve.jsx(am.Provider, {
        value: {
            selected: r,
            onDayClick: d,
            modifiers: u
        },
        children: n
    })
}
function om() {
    var t = y.useContext(am);
    if (!t)
        throw new Error("useSelectRange must be used within a SelectRangeProvider");
    return t
}
function P2(t) {
    return Array.isArray(t) ? sE([], t, !0) : t !== void 0 ? [t] : []
}
function $ae(t) {
    var e = {};
    return Object.entries(t).forEach(function(n) {
        var r = n[0]
          , s = n[1];
        e[r] = P2(s)
    }),
    e
}
var ra;
(function(t) {
    t.Outside = "outside",
    t.Disabled = "disabled",
    t.Selected = "selected",
    t.Hidden = "hidden",
    t.Today = "today",
    t.RangeStart = "range_start",
    t.RangeEnd = "range_end",
    t.RangeMiddle = "range_middle"
}
)(ra || (ra = {}));
var Fae = ra.Selected
  , no = ra.Disabled
  , Nae = ra.Hidden
  , Vae = ra.Today
  , d7 = ra.RangeEnd
  , u7 = ra.RangeMiddle
  , h7 = ra.RangeStart
  , Bae = ra.Outside;
function Uae(t, e, n) {
    var r, s = (r = {},
    r[Fae] = P2(t.selected),
    r[no] = P2(t.disabled),
    r[Nae] = P2(t.hidden),
    r[Vae] = [t.today],
    r[d7] = [],
    r[u7] = [],
    r[h7] = [],
    r[Bae] = [],
    r);
    return t.fromDate && s[no].push({
        before: t.fromDate
    }),
    t.toDate && s[no].push({
        after: t.toDate
    }),
    D5(t) ? s[no] = s[no].concat(e.modifiers[no]) : S5(t) && (s[no] = s[no].concat(n.modifiers[no]),
    s[h7] = n.modifiers[h7],
    s[u7] = n.modifiers[u7],
    s[d7] = n.modifiers[d7]),
    s
}
var dE = y.createContext(void 0);
function Hae(t) {
    var e = An()
      , n = im()
      , r = om()
      , s = Uae(e, n, r)
      , i = $ae(e.modifiers)
      , a = gt(gt({}, s), i);
    return ve.jsx(dE.Provider, {
        value: a,
        children: t.children
    })
}
function uE() {
    var t = y.useContext(dE);
    if (!t)
        throw new Error("useModifiers must be used within a ModifiersProvider");
    return t
}
function zae(t) {
    return !!(t && typeof t == "object" && "before"in t && "after"in t)
}
function Zae(t) {
    return !!(t && typeof t == "object" && "from"in t)
}
function qae(t) {
    return !!(t && typeof t == "object" && "after"in t)
}
function Wae(t) {
    return !!(t && typeof t == "object" && "before"in t)
}
function Gae(t) {
    return !!(t && typeof t == "object" && "dayOfWeek"in t)
}
function Kae(t, e) {
    var n, r = e.from, s = e.to;
    if (r && s) {
        var i = Fi(s, r) < 0;
        i && (n = [s, r],
        r = n[0],
        s = n[1]);
        var a = Fi(t, r) >= 0 && Fi(s, t) >= 0;
        return a
    }
    return s ? Ts(s, t) : r ? Ts(r, t) : !1
}
function Yae(t) {
    return $k(t)
}
function Qae(t) {
    return Array.isArray(t) && t.every($k)
}
function Xae(t, e) {
    return e.some(function(n) {
        if (typeof n == "boolean")
            return n;
        if (Yae(n))
            return Ts(t, n);
        if (Qae(n))
            return n.includes(t);
        if (Zae(n))
            return Kae(t, n);
        if (Gae(n))
            return n.dayOfWeek.includes(t.getDay());
        if (zae(n)) {
            var r = Fi(n.before, t)
              , s = Fi(n.after, t)
              , i = r > 0
              , a = s < 0
              , o = Do(n.before, n.after);
            return o ? a && i : i || a
        }
        return qae(n) ? Fi(t, n.after) > 0 : Wae(n) ? Fi(n.before, t) > 0 : typeof n == "function" ? n(t) : !1
    })
}
function cm(t, e, n) {
    var r = Object.keys(e).reduce(function(i, a) {
        var o = e[a];
        return Xae(t, o) && i.push(a),
        i
    }, [])
      , s = {};
    return r.forEach(function(i) {
        return s[i] = !0
    }),
    n && !R3(t, n) && (s.outside = !0),
    s
}
function Jae(t, e) {
    for (var n = ps(t[0]), r = Sa(t[t.length - 1]), s, i, a = n; a <= r; ) {
        var o = cm(a, e)
          , l = !o.disabled && !o.hidden;
        if (!l) {
            a = _s(a, 1);
            continue
        }
        if (o.selected)
            return a;
        o.today && !i && (i = a),
        s || (s = a),
        a = _s(a, 1)
    }
    return i || s
}
var eoe = 365;
function hE(t, e) {
    var n = e.moveBy
      , r = e.direction
      , s = e.context
      , i = e.modifiers
      , a = e.retry
      , o = a === void 0 ? {
        count: 0,
        lastFocused: t
    } : a
      , l = s.weekStartsOn
      , d = s.fromDate
      , u = s.toDate
      , h = s.locale
      , f = {
        day: _s,
        week: W7,
        month: $n,
        year: Fk,
        startOfWeek: function(C) {
            return s.ISOWeek ? Tf(C) : P3(C, {
                locale: h,
                weekStartsOn: l
            })
        },
        endOfWeek: function(C) {
            return s.ISOWeek ? Ok(C) : Rk(C, {
                locale: h,
                weekStartsOn: l
            })
        }
    }
      , p = f[n](t, r === "after" ? 1 : -1);
    r === "before" && d ? p = rj([d, p]) : r === "after" && u && (p = sj([u, p]));
    var m = !0;
    if (i) {
        var g = cm(p, i);
        m = !g.disabled && !g.hidden
    }
    return m ? p : o.count > eoe ? o.lastFocused : hE(p, {
        moveBy: n,
        direction: r,
        context: s,
        modifiers: i,
        retry: gt(gt({}, o), {
            count: o.count + 1
        })
    })
}
var fE = y.createContext(void 0);
function toe(t) {
    var e = _5()
      , n = uE()
      , r = y.useState()
      , s = r[0]
      , i = r[1]
      , a = y.useState()
      , o = a[0]
      , l = a[1]
      , d = Jae(e.displayMonths, n)
      , u = s ?? (o && e.isDateDisplayed(o)) ? o : d
      , h = function() {
        l(s),
        i(void 0)
    }
      , f = function(C) {
        i(C)
    }
      , p = An()
      , m = function(C, b) {
        if (s) {
            var k = hE(s, {
                moveBy: C,
                direction: b,
                context: p,
                modifiers: n
            });
            Ts(s, k) || (e.goToDate(k, s),
            f(k))
        }
    }
      , g = {
        focusedDay: s,
        focusTarget: u,
        blur: h,
        focus: f,
        focusDayAfter: function() {
            return m("day", "after")
        },
        focusDayBefore: function() {
            return m("day", "before")
        },
        focusWeekAfter: function() {
            return m("week", "after")
        },
        focusWeekBefore: function() {
            return m("week", "before")
        },
        focusMonthBefore: function() {
            return m("month", "before")
        },
        focusMonthAfter: function() {
            return m("month", "after")
        },
        focusYearBefore: function() {
            return m("year", "before")
        },
        focusYearAfter: function() {
            return m("year", "after")
        },
        focusStartOfWeek: function() {
            return m("startOfWeek", "before")
        },
        focusEndOfWeek: function() {
            return m("endOfWeek", "after")
        }
    };
    return ve.jsx(fE.Provider, {
        value: g,
        children: t.children
    })
}
function lm() {
    var t = y.useContext(fE);
    if (!t)
        throw new Error("useFocusContext must be used within a FocusProvider");
    return t
}
function noe(t, e) {
    var n = uE()
      , r = cm(t, n, e);
    return r
}
var dm = y.createContext(void 0);
function roe(t) {
    if (!Oh(t.initialProps)) {
        var e = {
            selected: void 0
        };
        return ve.jsx(dm.Provider, {
            value: e,
            children: t.children
        })
    }
    return ve.jsx(soe, {
        initialProps: t.initialProps,
        children: t.children
    })
}
function soe(t) {
    var e = t.initialProps
      , n = t.children
      , r = function(i, a, o) {
        var l, d, u;
        if ((l = e.onDayClick) === null || l === void 0 || l.call(e, i, a, o),
        a.selected && !e.required) {
            (d = e.onSelect) === null || d === void 0 || d.call(e, void 0, i, a, o);
            return
        }
        (u = e.onSelect) === null || u === void 0 || u.call(e, i, i, a, o)
    }
      , s = {
        selected: e.selected,
        onDayClick: r
    };
    return ve.jsx(dm.Provider, {
        value: s,
        children: n
    })
}
function pE() {
    var t = y.useContext(dm);
    if (!t)
        throw new Error("useSelectSingle must be used within a SelectSingleProvider");
    return t
}
function ioe(t, e) {
    var n = An()
      , r = pE()
      , s = im()
      , i = om()
      , a = lm()
      , o = a.focusDayAfter
      , l = a.focusDayBefore
      , d = a.focusWeekAfter
      , u = a.focusWeekBefore
      , h = a.blur
      , f = a.focus
      , p = a.focusMonthBefore
      , m = a.focusMonthAfter
      , g = a.focusYearBefore
      , C = a.focusYearAfter
      , b = a.focusStartOfWeek
      , k = a.focusEndOfWeek
      , S = function(E) {
        var V, X, L, q;
        Oh(n) ? (V = r.onDayClick) === null || V === void 0 || V.call(r, t, e, E) : D5(n) ? (X = s.onDayClick) === null || X === void 0 || X.call(s, t, e, E) : S5(n) ? (L = i.onDayClick) === null || L === void 0 || L.call(i, t, e, E) : (q = n.onDayClick) === null || q === void 0 || q.call(n, t, e, E)
    }
      , D = function(E) {
        var V;
        f(t),
        (V = n.onDayFocus) === null || V === void 0 || V.call(n, t, e, E)
    }
      , R = function(E) {
        var V;
        h(),
        (V = n.onDayBlur) === null || V === void 0 || V.call(n, t, e, E)
    }
      , T = function(E) {
        var V;
        (V = n.onDayMouseEnter) === null || V === void 0 || V.call(n, t, e, E)
    }
      , B = function(E) {
        var V;
        (V = n.onDayMouseLeave) === null || V === void 0 || V.call(n, t, e, E)
    }
      , z = function(E) {
        var V;
        (V = n.onDayPointerEnter) === null || V === void 0 || V.call(n, t, e, E)
    }
      , W = function(E) {
        var V;
        (V = n.onDayPointerLeave) === null || V === void 0 || V.call(n, t, e, E)
    }
      , fe = function(E) {
        var V;
        (V = n.onDayTouchCancel) === null || V === void 0 || V.call(n, t, e, E)
    }
      , me = function(E) {
        var V;
        (V = n.onDayTouchEnd) === null || V === void 0 || V.call(n, t, e, E)
    }
      , _e = function(E) {
        var V;
        (V = n.onDayTouchMove) === null || V === void 0 || V.call(n, t, e, E)
    }
      , I = function(E) {
        var V;
        (V = n.onDayTouchStart) === null || V === void 0 || V.call(n, t, e, E)
    }
      , Q = function(E) {
        var V;
        (V = n.onDayKeyUp) === null || V === void 0 || V.call(n, t, e, E)
    }
      , P = function(E) {
        var V;
        switch (E.key) {
        case "ArrowLeft":
            E.preventDefault(),
            E.stopPropagation(),
            n.dir === "rtl" ? o() : l();
            break;
        case "ArrowRight":
            E.preventDefault(),
            E.stopPropagation(),
            n.dir === "rtl" ? l() : o();
            break;
        case "ArrowDown":
            E.preventDefault(),
            E.stopPropagation(),
            d();
            break;
        case "ArrowUp":
            E.preventDefault(),
            E.stopPropagation(),
            u();
            break;
        case "PageUp":
            E.preventDefault(),
            E.stopPropagation(),
            E.shiftKey ? g() : p();
            break;
        case "PageDown":
            E.preventDefault(),
            E.stopPropagation(),
            E.shiftKey ? C() : m();
            break;
        case "Home":
            E.preventDefault(),
            E.stopPropagation(),
            b();
            break;
        case "End":
            E.preventDefault(),
            E.stopPropagation(),
            k();
            break
        }
        (V = n.onDayKeyDown) === null || V === void 0 || V.call(n, t, e, E)
    }
      , A = {
        onClick: S,
        onFocus: D,
        onBlur: R,
        onKeyDown: P,
        onKeyUp: Q,
        onMouseEnter: T,
        onMouseLeave: B,
        onPointerEnter: z,
        onPointerLeave: W,
        onTouchCancel: fe,
        onTouchEnd: me,
        onTouchMove: _e,
        onTouchStart: I
    };
    return A
}
function aoe() {
    var t = An()
      , e = pE()
      , n = im()
      , r = om()
      , s = Oh(t) ? e.selected : D5(t) ? n.selected : S5(t) ? r.selected : void 0;
    return s
}
function ooe(t) {
    return Object.values(ra).includes(t)
}
function coe(t, e) {
    var n = [t.classNames.day];
    return Object.keys(e).forEach(function(r) {
        var s = t.modifiersClassNames[r];
        if (s)
            n.push(s);
        else if (ooe(r)) {
            var i = t.classNames["day_".concat(r)];
            i && n.push(i)
        }
    }),
    n
}
function loe(t, e) {
    var n = gt({}, t.styles.day);
    return Object.keys(e).forEach(function(r) {
        var s;
        n = gt(gt({}, n), (s = t.modifiersStyles) === null || s === void 0 ? void 0 : s[r])
    }),
    n
}
function doe(t, e, n) {
    var r, s, i, a = An(), o = lm(), l = noe(t, e), d = ioe(t, l), u = aoe(), h = !!(a.onDayClick || a.mode !== "default");
    y.useEffect(function() {
        var T;
        l.outside || o.focusedDay && h && Ts(o.focusedDay, t) && ((T = n.current) === null || T === void 0 || T.focus())
    }, [o.focusedDay, t, n, h, l.outside]);
    var f = coe(a, l).join(" ")
      , p = loe(a, l)
      , m = !!(l.outside && !a.showOutsideDays || l.hidden)
      , g = (i = (s = a.components) === null || s === void 0 ? void 0 : s.DayContent) !== null && i !== void 0 ? i : Mae
      , C = ve.jsx(g, {
        date: t,
        displayMonth: e,
        activeModifiers: l
    })
      , b = {
        style: p,
        className: f,
        children: C,
        role: "gridcell"
    }
      , k = o.focusTarget && Ts(o.focusTarget, t) && !l.outside
      , S = o.focusedDay && Ts(o.focusedDay, t)
      , D = gt(gt(gt({}, b), (r = {
        disabled: l.disabled,
        role: "gridcell"
    },
    r["aria-selected"] = l.selected,
    r.tabIndex = S || k ? 0 : -1,
    r)), d)
      , R = {
        isButton: h,
        isHidden: m,
        activeModifiers: l,
        selectedDays: u,
        buttonProps: D,
        divProps: b
    };
    return R
}
function uoe(t) {
    var e = y.useRef(null)
      , n = doe(t.date, t.displayMonth, e);
    return n.isHidden ? ve.jsx("div", {
        role: "gridcell"
    }) : n.isButton ? ve.jsx(a3, gt({
        name: "day",
        ref: e
    }, n.buttonProps)) : ve.jsx("div", gt({}, n.divProps))
}
function hoe(t) {
    var e = t.number
      , n = t.dates
      , r = An()
      , s = r.onWeekNumberClick
      , i = r.styles
      , a = r.classNames
      , o = r.locale
      , l = r.labels.labelWeekNumber
      , d = r.formatters.formatWeekNumber
      , u = d(Number(e), {
        locale: o
    });
    if (!s)
        return ve.jsx("span", {
            className: a.weeknumber,
            style: i.weeknumber,
            children: u
        });
    var h = l(Number(e), {
        locale: o
    })
      , f = function(p) {
        s(e, n, p)
    };
    return ve.jsx(a3, {
        name: "week-number",
        "aria-label": h,
        className: a.weeknumber,
        style: i.weeknumber,
        onClick: f,
        children: u
    })
}
function foe(t) {
    var e, n, r = An(), s = r.styles, i = r.classNames, a = r.showWeekNumber, o = r.components, l = (e = o == null ? void 0 : o.Day) !== null && e !== void 0 ? e : uoe, d = (n = o == null ? void 0 : o.WeekNumber) !== null && n !== void 0 ? n : hoe, u;
    return a && (u = ve.jsx("td", {
        className: i.cell,
        style: s.cell,
        children: ve.jsx(d, {
            number: t.weekNumber,
            dates: t.dates
        })
    })),
    ve.jsxs("tr", {
        className: i.row,
        style: s.row,
        children: [u, t.dates.map(function(h) {
            return ve.jsx("td", {
                className: i.cell,
                style: s.cell,
                role: "presentation",
                children: ve.jsx(l, {
                    displayMonth: t.displayMonth,
                    date: h
                })
            }, tj(h))
        })]
    })
}
function Gv(t, e, n) {
    for (var r = n != null && n.ISOWeek ? Ok(e) : Rk(e, n), s = n != null && n.ISOWeek ? Tf(t) : P3(t, n), i = Fi(r, s), a = [], o = 0; o <= i; o++)
        a.push(_s(s, o));
    var l = a.reduce(function(d, u) {
        var h = n != null && n.ISOWeek ? ij(u) : Pk(u, n)
          , f = d.find(function(p) {
            return p.weekNumber === h
        });
        return f ? (f.dates.push(u),
        d) : (d.push({
            weekNumber: h,
            dates: [u]
        }),
        d)
    }, []);
    return l
}
function poe(t, e) {
    var n = Gv(ps(t), Sa(t), e);
    if (e != null && e.useFixedWeeks) {
        var r = nj(t, e);
        if (r < 6) {
            var s = n[n.length - 1]
              , i = s.dates[s.dates.length - 1]
              , a = W7(i, 6 - r)
              , o = Gv(W7(i, 1), a, e);
            n.push.apply(n, o)
        }
    }
    return n
}
function moe(t) {
    var e, n, r, s = An(), i = s.locale, a = s.classNames, o = s.styles, l = s.hideHead, d = s.fixedWeeks, u = s.components, h = s.weekStartsOn, f = s.firstWeekContainsDate, p = s.ISOWeek, m = poe(t.displayMonth, {
        useFixedWeeks: !!d,
        ISOWeek: p,
        locale: i,
        weekStartsOn: h,
        firstWeekContainsDate: f
    }), g = (e = u == null ? void 0 : u.Head) !== null && e !== void 0 ? e : jae, C = (n = u == null ? void 0 : u.Row) !== null && n !== void 0 ? n : foe, b = (r = u == null ? void 0 : u.Footer) !== null && r !== void 0 ? r : Iae;
    return ve.jsxs("table", {
        id: t.id,
        className: a.table,
        style: o.table,
        role: "grid",
        "aria-labelledby": t["aria-labelledby"],
        children: [!l && ve.jsx(g, {}), ve.jsx("tbody", {
            className: a.tbody,
            style: o.tbody,
            children: m.map(function(k) {
                return ve.jsx(C, {
                    displayMonth: t.displayMonth,
                    dates: k.dates,
                    weekNumber: k.weekNumber
                }, k.weekNumber)
            })
        }), ve.jsx(b, {
            displayMonth: t.displayMonth
        })]
    })
}
function goe() {
    return !!(typeof window < "u" && window.document && window.document.createElement)
}
var yoe = goe() ? y.useLayoutEffect : y.useEffect
  , f7 = !1
  , Coe = 0;
function Kv() {
    return "react-day-picker-".concat(++Coe)
}
function boe(t) {
    var e, n = t ?? (f7 ? Kv() : null), r = y.useState(n), s = r[0], i = r[1];
    return yoe(function() {
        s === null && i(Kv())
    }, []),
    y.useEffect(function() {
        f7 === !1 && (f7 = !0)
    }, []),
    (e = t ?? s) !== null && e !== void 0 ? e : void 0
}
function voe(t) {
    var e, n, r = An(), s = r.dir, i = r.classNames, a = r.styles, o = r.components, l = _5().displayMonths, d = boe(r.id ? "".concat(r.id, "-").concat(t.displayIndex) : void 0), u = r.id ? "".concat(r.id, "-grid-").concat(t.displayIndex) : void 0, h = [i.month], f = a.month, p = t.displayIndex === 0, m = t.displayIndex === l.length - 1, g = !p && !m;
    s === "rtl" && (e = [p, m],
    m = e[0],
    p = e[1]),
    p && (h.push(i.caption_start),
    f = gt(gt({}, f), a.caption_start)),
    m && (h.push(i.caption_end),
    f = gt(gt({}, f), a.caption_end)),
    g && (h.push(i.caption_between),
    f = gt(gt({}, f), a.caption_between));
    var C = (n = o == null ? void 0 : o.Caption) !== null && n !== void 0 ? n : _ae;
    return ve.jsxs("div", {
        className: h.join(" "),
        style: f,
        children: [ve.jsx(C, {
            id: d,
            displayMonth: t.displayMonth,
            displayIndex: t.displayIndex
        }), ve.jsx(moe, {
            id: u,
            "aria-labelledby": d,
            displayMonth: t.displayMonth
        })]
    }, t.displayIndex)
}
function woe(t) {
    var e = An()
      , n = e.classNames
      , r = e.styles;
    return ve.jsx("div", {
        className: n.months,
        style: r.months,
        children: t.children
    })
}
function koe(t) {
    var e, n, r = t.initialProps, s = An(), i = lm(), a = _5(), o = y.useState(!1), l = o[0], d = o[1];
    y.useEffect(function() {
        s.initialFocus && i.focusTarget && (l || (i.focus(i.focusTarget),
        d(!0)))
    }, [s.initialFocus, l, i.focus, i.focusTarget, i]);
    var u = [s.classNames.root, s.className];
    s.numberOfMonths > 1 && u.push(s.classNames.multiple_months),
    s.showWeekNumber && u.push(s.classNames.with_weeknumber);
    var h = gt(gt({}, s.styles.root), s.style)
      , f = Object.keys(r).filter(function(m) {
        return m.startsWith("data-")
    }).reduce(function(m, g) {
        var C;
        return gt(gt({}, m), (C = {},
        C[g] = r[g],
        C))
    }, {})
      , p = (n = (e = r.components) === null || e === void 0 ? void 0 : e.Months) !== null && n !== void 0 ? n : woe;
    return ve.jsx("div", gt({
        className: u.join(" "),
        style: h,
        dir: s.dir,
        id: s.id,
        nonce: r.nonce,
        title: r.title,
        lang: r.lang
    }, f, {
        children: ve.jsx(p, {
            children: a.displayMonths.map(function(m, g) {
                return ve.jsx(voe, {
                    displayIndex: g,
                    displayMonth: m
                }, g)
            })
        })
    }))
}
function xoe(t) {
    var e = t.children
      , n = qie(t, ["children"]);
    return ve.jsx(hae, {
        initialProps: n,
        children: ve.jsx(kae, {
            children: ve.jsx(roe, {
                initialProps: n,
                children: ve.jsx(Tae, {
                    initialProps: n,
                    children: ve.jsx(Rae, {
                        initialProps: n,
                        children: ve.jsx(Hae, {
                            children: ve.jsx(toe, {
                                children: e
                            })
                        })
                    })
                })
            })
        })
    })
}
function Doe(t) {
    return ve.jsx(xoe, gt({}, t, {
        children: ve.jsx(koe, {
            initialProps: t
        })
    }))
}
function um(t) {
    const {modifiers: e={
        weekends: {
            dayOfWeek: [0, 6]
        }
    }} = t
      , n = eI()
      , r = {
        ...e
    };
    Object.entries(e).forEach(([i,a])=>{
        const o = Array.isArray(a) ? a.length > 0 ? a[0] : void 0 : a;
        if (!o)
            return;
        const l = o.from;
        l && (r[`${i}_start`] = l);
        const d = o.to;
        d && (r[`${i}_end`] = d)
    }
    );
    const s = {};
    return Object.keys(r).forEach(i=>{
        s[i] = `rdp-day_${i}`
    }
    ),
    c.jsx(Soe, {
        outsideDays: t.showOutsideDays,
        weekStartsOn: n.firstDayOfWeekAsNumber,
        ...t,
        modifiers: r,
        modifiersClassNames: s,
        onDayClick: (i,a,o)=>{
            var l;
            if (a.disabled) {
                o.preventDefault();
                return
            }
            (l = t.onDayClick) == null || l.call(t, i, a, o)
        }
    })
}
const Soe = ae(Doe)`
  font-size: 0.75rem;
  color: ${ze("labelBase")};

  .rdp-caption {
    height: 36px;
    padding: 0 8px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .rdp-caption_label {
    font-size: ${Pc("small")};
    font-weight: 500;
  }

  .rdp-months {
    display: flex;
    flex-wrap: nowrap;
    position: relative;
    justify-content: space-between;
  }

  .rdp-month:only-child {
    width: 100%;
  }

  .rdp-table {
    border-collapse: unset;
    border-spacing: 8px;
    width: 100%;
  }

  .rdp-head {
    position: relative;
    width: 100%;
  }

  .rdp-head::after {
    content: "";
    left: 0;
    right: 0;
    bottom: 0;
    position: absolute;
    height: ${F1()};
    background: ${ze("bgBorder")};
  }

  .rdp-head_cell {
    font-size: ${Pc("small")};
    color: ${ze("labelMuted")};
    padding: 0;
    text-transform: none;
    font-weight: inherit;
  }

  .rdp-cell {
    text-align: center;
  }

  .rdp-day {
    -webkit-appearance: none;
    appearance: none;
    color: inherit; /* override iOS default blue */
    border: 0;
    background: transparent;
    font-size: ${Pc("small")};
    cursor: var(--pointer);
    border-radius: 50%;
    width: 26px;
    height: 26px;
    position: relative;
    line-height: 20px;
    padding: 0 !important;
    ${w8(5)}
  }

  /* Elevated border colors are transparent, we need to use base theme */
  --rpd-day-highlighted-color: ${t=>{
    var e;
    return t.theme.isDark ? (e = t.theme.baseTheme) == null ? void 0 : e.color.bgBorderSolid : t.theme.color.bgBorder
}
};

  .rdp-day_today {
    background: var(--rpd-day-highlighted-color);
    border: 1px solid ${ze("labelFaint")};
    font-weight: 500;
    color: ${ze("labelTitle")};
  }

  .rdp-day:not(.rdp-day_disabled):not(.rdp-day_selected):hover {
    background-color: ${ze("controlPrimary")} !important;
    color: ${ze("controlLabel")} !important;
  }

  .rdp-day_selected:hover {
    background-color: ${ze("controlPrimaryHover")} !important;
  }

  .rdp-day_selected:not(.rdp-day_outside) {
    background-color: ${ze("controlPrimary")} !important;
    color: ${ze("controlLabel")} !important;
  }

  .rdp-day_weekends {
    color: ${ze("labelFaint")};
  }

  .rdp-day_disabled {
    cursor: not-allowed;
    color: ${ze("labelFaint")};
    opacity: 0.4;
  }

  .rdp-day_outside {
    color: ${ze("labelFaint")} !important;
    pointer-events: none;
    opacity: 0.3;
  }

  // Highlighted date range formatting, to highlight the background of the date range and round the corners at the start
  // and end
  .rdp-cell:has(.rdp-day_highlighted) {
    position: relative;
  }
  .rdp-cell:has(.rdp-day_highlighted) {
    &::before {
      content: "";
      position: absolute;
      height: 100%;
      background-color: var(--rpd-day-highlighted-color);
      z-index: -1;
      border-radius: 50%; // Round by default to support standalone highlighted days
      transform: scale(1.25);
      aspect-ratio: 1/1;
      border-right: 4px solid var(--rpd-day-highlighted-color);
    }
    &:last-child::before {
      border-right: 0;
    }
  }
  // Select all of the highlighted dates and unround the corners
  .rdp-cell:has(.rdp-day_highlighted_start) {
    &::before {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
  // Select all of the highlighted dates that are not the first in the row and undo the corner rounding
  .rdp-cell:has(.rdp-day_highlighted) ~ .rdp-cell:has(.rdp-day_highlighted) {
    &::before {
      border-radius: 0px;
    }
  }
  // Select the last highlighted date in the row and round the corners
  .rdp-cell:has(.rdp-day_highlighted_end) {
    &::before {
      border-top-right-radius: 50% !important;
      border-bottom-right-radius: 50% !important;
      border-right: none;
    }
  }
  // If the first day in the row is highlighted, unround the right corners
  .rdp-cell:has(.rdp-day_highlighted):first-child {
    &::before {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
  // If the last day in the row is highlighted, round the right corners
  .rdp-cell:has(.rdp-day_highlighted):last-child {
    &::before {
      border-top-right-radius: 50% !important;
      border-bottom-right-radius: 50% !important;
    }
  }
  // Fade out the background of the highlighted date range if it extends in a different month
  .rdp-cell:has(.rdp-day_highlighted):has(:not(.rdp-day_outside))
    + .rdp-cell:has(.rdp-day_highlighted.rdp-day_outside) {
    &::before {
      background: transparent;
      background-image: linear-gradient(to right, ${ze("bgBorder")} 0%, transparent 50%);
    }
  }
  .rdp-cell:has(.rdp-day_highlighted.rdp-day_outside) {
    &::before {
      background: transparent;
      border-right: 0 solid transparent;
    }
  }
  .rdp-cell:has(.rdp-day_highlighted.rdp-day_outside)
    + .rdp-cell:has(.rdp-day_highlighted):has(:not(.rdp-day_outside)) {
    &::before {
      background: transparent;
      left: -10%;
      background-image: linear-gradient(to left, ${ze("bgBorder")} 50%, transparent 100%);
    }
  }

  .rdp-nav_button {
    position: absolute;
    top: 10px;
    -webkit-appearance: none;
    appearance: none;
    border: 0;
    background: transparent;
    width: 16px;
    height: 16px;
    background-size: 7px 12px;
    background-position: center;
    background-repeat: no-repeat;
    cursor: pointer;
    ${w8(12, 8, 12, 8, !1)}
    // Hide default chevrons
    svg {
      display: none;
    }
  }

  .rdp-nav_button_previous {
    right: 30px;
    background-image: ${t=>`url("${Yv(t.theme.color.labelFaint)}")`};

    /* prettier-ignore */
    &:${gs} {
      background-image: ${t=>`url("${Yv(t.theme.color.labelTitle)}")`};
    }
  }

  .rdp-nav_button_next {
    right: 8px;
    background-image: ${t=>`url("${Qv(t.theme.color.labelFaint)}")`};

    /* prettier-ignore */
    &:${gs} {
      background-image: ${t=>`url("${Qv(t.theme.color.labelTitle)}")`};
    }
  }
`;
function Yv(t) {
    return encodeURI('data:image/svg+xml;utf8,<svg width="7" height="12" viewBox="0 0 7 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 11L1.70711 6.70711C1.31658 6.31658 1.31658 5.68342 1.70711 5.29289L6 1" stroke="color" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>').replace("color", t.replace("#", "%23"))
}
function Qv(t) {
    return encodeURI(`data:image/svg+xml;utf8,<svg width="7" height="12" viewBox="0 0 7 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 1L5.29289 5.29289C5.68342 5.68342 5.68342 6.31658 5.29289 6.70711L1 11" stroke="color" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>
  `).replace("color", t.replace("#", "%23"))
}
var Bu;
(function(t) {
    t.Root = y.forwardRef(function(C, b) {
        const {children: k, ...S} = C;
        return c.jsx(aj, {
            ref: b,
            activationMode: "manual",
            ...S,
            children: k
        })
    }),
    t.List = y.forwardRef(function(C, b) {
        const {children: k, fullWidth: S, ...D} = C;
        return S ? c.jsx(f, {
            ref: b,
            loop: !1,
            ...D,
            children: k
        }) : c.jsx(d, {
            ref: b,
            loop: !1,
            ...D,
            children: k
        })
    }),
    t.Trigger = y.forwardRef(function(C, b) {
        const {children: k, before: S, after: D, ...R} = C;
        return c.jsxs(u, {
            ref: b,
            ...R,
            $hasAdornment: !!(S || D),
            children: [S, y.Children.map(k, T=>typeof T == "string" ? c.jsx(m, {
                type: "miniPlus",
                color: "currentColor",
                children: T
            }) : T), D]
        })
    }),
    t.Content = y.forwardRef(function(C, b) {
        const {children: k, ...S} = C;
        return c.jsx(p, {
            ref: b,
            ...S,
            children: k
        })
    }),
    t.TriggerLikeButton = y.forwardRef(function(C, b) {
        const {children: k, ...S} = C;
        return c.jsx(h, {
            ref: b,
            ...S,
            children: y.Children.map(k, D=>typeof D == "string" ? c.jsx(Xe, {
                type: "miniPlus",
                color: "currentColor",
                children: D
            }) : D)
        })
    });
    const e = 5
      , n = 0
      , r = 1
      , s = 12
      , i = 8
      , a = 24;
    function o(g, C=0, b=0) {
        return g - Math.max(1, C / 2 - b / 2)
    }
    function l(g, C) {
        return C ? g.isDark ? g.color.bgBorder : g.color.bgBase : g.isDark ? g.color.bgBase : g.color.bgSub
    }
    const d = ae(oj)`
    isolation: isolate; // Make sure to create a new stacking context
    background-color: ${g=>l(g.theme, !1)};
    ${g=>g.theme.isDark ? `box-shadow: 0 0 0 ${F1()} ${g.theme.color.bgBorderThin} inset, 0px 1px 4px 0 #00000020 inset;` : "box-shadow: 0px 1px 1px 0 #0000000a inset;"}
    width: fit-content;
    padding: ${F1()};

    border-radius: ${e}px;
    display: flex;
    flex-direction: row;
    align-items: center;
    height: fit-content;
    padding: ${n}px;
    position: relative;
  `
      , u = ae(cj)`
    max-width: 200px;
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 6px;
    flex: none;
    font-size: var(--font-size-miniPlus);
    padding: 4px ${g=>g.$hasAdornment ? i : s}px;
    border-radius: ${e}px;
    height: ${a}px;
    border-width: 0px;
    border-style: solid;

    transition-property: background-color, color;
    transition-duration: ${pn("highlightFadeOut")};

    svg {
      transition-property: fill;
      transition-duration: ${pn("highlightFadeOut")};
    }

    &:focus-visible {
      outline-offset: -1px;
      z-index: 1;
    }

    &[data-state="inactive"] {
      border-color: transparent;
      background-color: transparent;
      color: ${g=>g.theme.color.labelMuted};
      // prettier-ignore
      &:${gs} {
        transition-duration: ${pn("highlightFadeIn")};
        color: ${g=>g.theme.color.labelBase};

        svg:not(.color-override) {
          transition-duration: ${pn("highlightFadeIn")};
          fill: ${g=>g.theme.color.labelBase};
        }
      }
    }
    border: ${jc("transparent")};
    &[data-state="active"] {
      ${g=>js.kindCss({
        kind: "secondary",
        active: g.theme.isDark
    })}
      border-color: ${g=>g.theme.color.bgBorderThin};
      box-shadow: none;
      border-radius: ${4 + kR()}px;
    }
    flex-grow: 1;
    align-items: center;
    justify-content: center;
  `
      , h = ae.button`
    position: relative;
    display: inline-flex;
    max-width: 200px;
    height: ${a}px;
    align-items: center;
    justify-content: center;
    gap: 6px;
    flex: none;
    flex-grow: 1;
    font-size: var(--font-size-miniPlus);
    padding: 4px ${s}px;
    border-width: 0px;
    border-style: solid;

    border-radius: ${o(e, n, r)}px;
    background-color: transparent;
    color: ${g=>g.theme.color.labelMuted};

    transition-property: background-color, color;
    transition-duration: ${pn("highlightFadeOut")};

    svg {
      transition-property: fill;
      transition-duration: ${pn("highlightFadeOut")};
    }

    &:focus-visible {
      z-index: 1;
    }

    // prettier-ignore
    &:${gs} {
      transition-duration: ${pn("highlightFadeIn")};
      color: ${g=>g.theme.color.labelBase};

      svg:not(.color-override) {
        transition-duration: ${pn("highlightFadeIn")};
        fill: ${g=>g.theme.color.labelBase};
      }
    }
  `
      , f = ae(d)`
    width: 100%;

    & > ${u} {
      flex: auto;
      justify-content: center;
      max-width: unset;
    }
  `
      , p = ae(lj)``
      , m = ae(Xe)`
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  `
}
)(Bu || (Bu = {}));
const Ym = class Ym {
    static get isLibraryLoaded() {
        return !!this.library
    }
    static async loadLibrary() {
        if (!this.library)
            return this.loadingLibraryPromise || (this.loadingLibraryPromise = new Promise(async(e,n)=>{
                try {
                    const r = (await H2(()=>import("./three.hash-adZAlL6m.js"), __vite__mapDeps([]), import.meta.url)).default
                      , s = await H2(()=>import("./plugin.hash-B-rrflHg.js"), __vite__mapDeps([0, 1, 2, 3]), import.meta.url);
                    r.extend(s.default),
                    this.library = r,
                    e()
                } catch (r) {
                    F.info("Failed to load nlp library", r),
                    n(r),
                    this.loadingLibraryPromise = void 0
                }
            }
            )),
            this.loadingLibraryPromise
    }
    static getDocument(e) {
        if (this.loadLibrary(),
        !(!e || !this.library))
            return this.library(e)
    }
    static getDates(e) {
        var i;
        if (this.loadLibrary(),
        !e || !this.library)
            return [];
        const n = new Date
          , r = this.getDateContext(n);
        let s = e;
        if (this.dateRegex.test(s)) {
            const a = s.match(this.dateRegex);
            if (a && a.length >= 3) {
                const o = a[0];
                let l = a[1]
                  , d = a[2]
                  , u = a[3];
                !l.startsWith("0") && parseInt(l) < 10 && (l = `0${l}`),
                !d.startsWith("0") && parseInt(d) < 10 && (d = `0${d}`),
                (!u || u.length === 2) && (u = u ? `20${u}` : String(n.getFullYear()));
                let h = `${l}/${d}/${u}`;
                new Date(h) < N2(n) && (u = String(n.getFullYear() + 1),
                h = `${l}/${d}/${u}`),
                s = s.replace(o, h)
            }
        }
        return ((i = this.getDocument(s)) == null ? void 0 : i.dates(r).get()) ?? []
    }
    static getDateContext(e) {
        return {
            timezone: C5(),
            today: e,
            dayStart: "9:00am",
            dayEnd: "5:00pm"
        }
    }
}
;
Ym.dateRegex = /^(\d{1,2})[\/-](\d{1,2})[\/-]?((?:20)?\d*)?/i;
let o3 = Ym;
const bc = {
    yearHeaderHeight: 14,
    dateItemRowHeight: 24,
    dateItemGap: 8,
    spaceBetweenForResolutionGroups: 16
};
let p7;
const _oe = t=>{
    const {fiscalYearStartMonth: e, minYear: n, maxYear: r} = t
      , s = e === 0 ? n : n + 1
      , i = Array(r - n + 1).fill(s).map((d,u)=>d + u)
      , a = d=>e === 0 ? d : hl(d, 12 - e)
      , o = d=>H3(new Date(d,0,1), {
        fiscalYearStartMonth: e
    })
      , l = {
        [mt.month]: {
            dateItemColumns: 3,
            yearItemHeight: 0,
            yearItems: i.map(d=>({
                label: d.toString(),
                dateItems: f8.map((u,h)=>{
                    const f = new Date(d,h,1);
                    return {
                        label: u,
                        value: f
                    }
                }
                )
            }))
        },
        [mt.quarter]: {
            dateItemColumns: 4,
            yearItemHeight: 0,
            yearItems: i.map(d=>({
                label: o(d),
                dateItems: [1, 2, 3, 4].map(u=>{
                    const h = new Date(d,(u - 1) * 3,1);
                    return {
                        label: `Q${u}`,
                        value: a(h)
                    }
                }
                )
            }))
        },
        [mt.halfYear]: {
            dateItemColumns: 2,
            yearItemHeight: 0,
            yearItems: i.map(d=>({
                label: o(d),
                dateItems: [1, 2].map(u=>{
                    const h = new Date(d,u === 1 ? 0 : 6,1);
                    return {
                        label: `H${u}`,
                        value: a(h)
                    }
                }
                )
            }))
        },
        [mt.year]: {
            dateItemColumns: 1,
            yearItemHeight: 0,
            yearItems: i.map(d=>{
                const u = new Date(d,0,1);
                return {
                    label: o(d),
                    dateItems: [{
                        label: o(d),
                        value: a(u)
                    }]
                }
            }
            )
        }
    };
    return Object.values(l).forEach(d=>{
        d.yearItemHeight = Eoe(d)
    }
    ),
    l
}
  , m7 = (t,e,n,r)=>{
    for (let s = 0; s < t.length; s++) {
        const a = t[s].dateItems.findIndex(o=>gE(o.value, e, n, r));
        if (a >= 0)
            return [s, a]
    }
    return [-1, -1]
}
;
var e, n, r;
const sn = class sn {
    static convert(e, n) {
        const r = this.parseToDate(e);
        return r ? {
            date: r.toTimelessDate()
        } : this.matchStandardLabels(e, n) || this.matchUsingNlp(e, n)
    }
    static adjust(e, n, r, s) {
        if (!this.convert(e, s))
            return;
        const a = this.extractAdjustableNumberAtPosition(e, n);
        if (!a)
            return;
        const o = parseInt(a.number);
        if (isNaN(o))
            return;
        const d = (r === "up" ? o + 1 : o - 1).toString().padStart(a.number.length, "0")
          , u = `${e.slice(0, a.numberIndex)}${d}${e.slice(a.numberIndex + a.number.length)}`;
        if (this.convert(u, s))
            return u
    }
    static get canParseLocalDateFormat() {
        return this.localDateFormatString !== void 0
    }
    static matchStandardLabels(e, {fiscalYearStartMonth: n}) {
        const r = e.trim().match(this.yearAndPeriodRegExp);
        if (!r)
            return;
        const [s,i,a,o,l,d] = r
          , u = a || o || l
          , h = i || d || void 0;
        if (!h && !u || i && d)
            return;
        const f = s.trim().at(-1);
        if (f && [".", "-", "/", ","].includes(f) || h && s.trim() === h && h.length === 2)
            return;
        const p = new Date;
        let m, g, C, b = !1;
        if (h) {
            const S = h.trim();
            let D = S.length === 2 ? `20${S}` : S;
            if (n !== 0 && (D = D.toLowerCase().replace("fy", "20")),
            C = parseInt(D),
            isNaN(C))
                return;
            n !== 0 && (C = hl(new Date(C,0,1), n).getFullYear())
        } else
            C = p.getFullYear(),
            b = !0;
        if (l) {
            if (g = mt.month,
            (h == null ? void 0 : h.length) !== 4)
                return;
            const S = f8.indexOf(l.slice(0, 3).toLowerCase().capitalize());
            if (S < 0)
                return;
            m = new Date(C,S,1)
        } else if (o) {
            g = mt.quarter;
            const S = parseInt(o.toLowerCase().startsWith("q") ? o[1] : o[0]);
            m = new Date(C,(S - 1) * 3,1)
        } else if (a) {
            g = mt.halfYear;
            const S = parseInt(a.toLowerCase().startsWith("h") ? a[1] : a[0]);
            m = new Date(C,S === 1 ? 0 : 6,1)
        } else
            g = mt.year,
            m = new Date(C,0,1);
        if (!g || !m || isNaN(m.getTime()))
            return;
        let k = m;
        return n !== 0 && g !== mt.month && (k = $n(k, n)),
        b && k < p && (gE(k, p, g, n) || (k = Fk(k, 1))),
        {
            date: k == null ? void 0 : k.toTimelessDate(),
            resolution: g
        }
    }
    static parseToDate(e) {
        const n = e.replace(",", "").trim();
        for (const r of this.dateFnsDateFormats) {
            const s = dj(n, r, new Date);
            if (s instanceof Date && !isNaN(s.getTime()) && s.getFullYear() > 1970 && s.getFullYear() < 2090)
                return s
        }
    }
    static matchUsingNlp(e, {fiscalYearStartMonth: n}) {
        if (this.skipNlpPattern.test(e))
            return;
        const r = o3.getDates(e)[0];
        if (!r || !r.start)
            return;
        const {start: s, duration: i} = r;
        let a = n0(s), o;
        if (i.years > 0)
            o = mt.year;
        else if (i.months >= 11)
            o = mt.year;
        else if (i.months > 1 && i.months <= 3)
            o = mt.quarter;
        else if (i.days >= 28 && i.days <= 31)
            o = mt.month;
        else {
            const l = e.trim().match(this.monthAndDayRegExp);
            if (l) {
                const [,d,u,h] = l;
                if ((d || h) && typeof u == "string") {
                    const f = Number.parseInt(u);
                    if (!isNaN(f) && f !== uj(a))
                        return
                }
            }
        }
        return n !== 0 && o && o !== mt.month && (a = $n(a, n)),
        {
            date: a.toTimelessDate(),
            resolution: o
        }
    }
    static extractAdjustableNumberAtPosition(e, n) {
        const r = /([q|h])?\d+([q|h])?/gi;
        let s;
        for (; (s = r.exec(e)) !== null; )
            if (s.index <= n && n <= s.index + s[0].length) {
                const [i,a,o] = s
                  , l = (a == null ? void 0 : a.length) || 0
                  , d = i.length - ((o == null ? void 0 : o.length) || 0);
                return {
                    number: i.slice(l, d),
                    numberIndex: s.index + l,
                    prefix: a,
                    postfix: o
                }
            }
    }
}
;
sn.yearPattern = "((?:19|20|fy)?\\d{2})",
sn.halfYearPattern = "(?:1H|H1|2H|H2)",
sn.quarterPattern = "(?:Q[1-4]|[1-4]Q)",
sn.monthPattern = `(?:(?:${f8.join("|")})[A-Za-z]*)`,
sn.periodPattern = `(?:(${sn.halfYearPattern})|(${sn.quarterPattern})|(${sn.monthPattern}))`,
sn.spacePattern = "[-., ]*",
sn.yearAndPeriodRegExp = new RegExp(`^${sn.yearPattern}?${sn.spacePattern}${sn.periodPattern}?${sn.spacePattern}${sn.yearPattern}?$`,"i"),
sn.monthAndDayRegExp = new RegExp(`^(${sn.monthPattern})?[ ]*(\\d+)[ ]*(${sn.monthPattern})?$`,"i"),
sn.skipNlpPattern = /\d{3}/,
sn.localDateFormatString = Ioe(),
sn.fallbackDateFnsFormat = "yyyy-MM-dd",
sn.dateFnsDateFormats = [sn.localDateFormatString, sn.fallbackDateFnsFormat, "MMMM d yyyy", "MMM d yyyy", (e = sn.localDateFormatString) == null ? void 0 : e.replace("yyyy", "yy"), (n = sn.localDateFormatString) != null && n.includes("/") ? sn.localDateFormatString.replace(/[/]/g, "-") : void 0, (r = sn.localDateFormatString) != null && r.includes("/") ? sn.localDateFormatString.replace(/[/]/g, ".") : void 0].concrete();
let D1 = sn;
function mE(t, e) {
    return e ? new Intl.DateTimeFormat(e,{
        year: "numeric",
        month: "2-digit",
        day: "2-digit"
    }).format(t) : (p7 == null && (p7 = new Intl.DateTimeFormat(void 0,{
        year: "numeric",
        month: "2-digit",
        day: "2-digit"
    })),
    p7.format(t))
}
const Xv = D1.canParseLocalDateFormat ? mE : t=>Mr(t, D1.fallbackDateFnsFormat);
function Ioe(t) {
    const e = new Date("2030-11-22")
      , n = hj(e, e.getTimezoneOffset())
      , r = mE(n, t);
    if (r.includes("2030") && r.includes("11") && r.includes("22"))
        return `${r.replace("2030", "yyyy").replace("11", "MM").replace("22", "dd")}`
}
function Eoe({dateItemColumns: t, yearItems: e}) {
    const n = e[0].dateItems
      , r = Math.ceil(n.length / t)
      , s = bc.dateItemGap + r * bc.dateItemRowHeight + (r - 1) * bc.dateItemGap;
    return n.length === 1 ? s + 4 : s + bc.yearHeaderHeight + bc.spaceBetweenForResolutionGroups
}
const Aoe = (t,e)=>t.getFullYear() === e.getFullYear() && t.getMonth() < 6 == e.getMonth() < 6
  , Jv = (t,e)=>hl(t, e);
function gE(t, e, n, r) {
    if (n === mt.month)
        return R3(t, e);
    const s = Jv(t, r)
      , i = Jv(e, r);
    switch (n) {
    case mt.quarter:
        return fj(s, i);
    case mt.halfYear:
        return Aoe(s, i);
    case mt.year:
        return s.getFullYear() === i.getFullYear();
    default:
        throw new zt(n)
    }
}
const joe = y.forwardRef((t,e)=>{
    const {config: n, onBlur: r, onChange: s, onClear: i, onSubmit: a, value: o} = t
      , l = y.useRef(!0);
    y.useEffect(()=>{
        l.current && (l.current = !1,
        setTimeout(()=>{
            var k;
            (k = e.current) == null || k.select()
        }
        ))
    }
    , [e]);
    const [d,u] = y.useState("")
      , [h,f] = y.useState("")
      , p = o != null && o.date ? Ys.format({
        date: o.date,
        resolution: o.resolution
    }, {
        dateFormat: Xv,
        fiscalYearStartMonth: n.fiscalYearStartMonth
    }) : "";
    y.useEffect(()=>{
        Ys.isEqual(D1.convert(d, n), o) || (u(p),
        f(""))
    }
    , [o]),
    y.useEffect(()=>{
        o3.loadLibrary()
    }
    , []);
    const m = k=>{
        u(k),
        h && f("");
        const S = D1.convert(k, n);
        g(S, k) || s(S)
    }
      , g = (k,S)=>{
        const D = k == null ? void 0 : k.date;
        if (D) {
            const R = Number.parseInt(D.slice(0, 4))
              , T = R < n.minYear
              , B = R > n.maxYear;
            if (T)
                return `Should be after ${n.minYear}`;
            if (B)
                return `Should be before ${n.maxYear}`
        } else if (S.trim().length > 0)
            return "Unsupported date format"
    }
      , C = y.useCallback(k=>{
        const S = D1.convert(k, n)
          , D = g(S, k);
        return D ? (f(D),
        {
            isValid: !1
        }) : (f(""),
        {
            isValid: !0,
            value: S
        })
    }
    , [n])
      , b = y.useMemo(()=>{
        const k = new Date().getFullYear() + 1
          , S = Xv(new Date(k,4,20));
        return `Try: May ${k}, Q4, ${S}`
    }
    , []);
    return c.jsxs("div", {
        style: {
            position: "relative",
            display: "flex",
            flexGrow: 1
        },
        children: [c.jsx(Loe, {
            appearance: "normal",
            autoComplete: "off",
            maxLength: 16,
            type: "text",
            value: d,
            placeholder: b,
            ref: e,
            onChange: k=>{
                m(k.currentTarget.value)
            }
            ,
            onKeyDown: k=>{
                var S;
                if ((k.key === "ArrowLeft" || k.key === "ArrowRight") && k.stopPropagation(),
                k.key === "ArrowUp" || k.key === "ArrowDown") {
                    k.stopPropagation(),
                    k.preventDefault();
                    const D = k.currentTarget.selectionStart;
                    if (D !== null) {
                        const R = D1.adjust(d, D, k.key === "ArrowUp" ? "up" : "down", n);
                        R && (Kd.flushSync(()=>{
                            m(R)
                        }
                        ),
                        (S = e.current) == null || S.setSelectionRange(D, D))
                    }
                }
                if (k.key === "Enter") {
                    k.stopPropagation();
                    const D = C(d);
                    D.isValid && a(D.value)
                }
            }
            ,
            onBlur: ()=>{
                C(d),
                r == null || r()
            }
            ,
            tabIndex: 0
        }), h ? c.jsx(Moe, {
            inline: !0,
            children: h
        }) : null, d && !h ? c.jsx(Toe, {
            onMouseDown: ()=>{
                u(""),
                f(""),
                i(),
                setTimeout(()=>{
                    var k;
                    (k = e.current) == null || k.select()
                }
                )
            }
            ,
            $hasError: !!h,
            children: c.jsx(DD, {})
        }) : null]
    })
}
)
  , Moe = ae(Xp)`
  background: ${t=>t.theme.inputBackground};
`
  , Toe = ae(Hd)`
  opacity: ${t=>t.$hasError ? 1 : 0};
`
  , Loe = ae(nc)`
  width: 100%;
  border-width: ${F1()};
  font-size: ${Ni("miniPlus")};

  &:${gs} + ${Hd}, &:focus + ${Hd} {
    transition-duration: ${pn("highlightFadeIn")};
    opacity: 1;
  }

  &::placeholder {
    color: ${t=>t.theme.color.labelMuted};
  }
`;
var v1;
(function(t) {
    t.smaller = "smaller",
    t.small = "small",
    t.default = "default",
    t.large = "large",
    t.larger = "larger"
}
)(v1 || (v1 = {}));
const W2e = t=>{
    switch (t) {
    case "smaller":
        return "Smaller";
    case "small":
        return "Small";
    case "default":
        return "Default";
    case "large":
        return "Large";
    case "larger":
        return "Larger";
    default:
        throw new zt(t)
    }
}
  , G2e = t=>{
    switch (t) {
    case "smaller":
        return 14;
    case "small":
        return 15;
    case "default":
        return 16;
    case "large":
        return 18;
    case "larger":
        return 20;
    default:
        throw new zt(t)
    }
}
;
function yE(t, e=!1, n) {
    const [,r] = If(()=>({
        immediate: !1,
        offset: 0,
        onChange: ({value: s})=>{
            if (t.current) {
                let i = {};
                e ? i = {
                    left: s.offset
                } : i = {
                    top: s.offset
                },
                t.current.scrollTo(i)
            }
        }
        ,
        config: n ?? {
            tension: 280,
            friction: 30
        }
    }));
    return y.useCallback(({currentOffset: s, targetOffset: i})=>(r.start({
        offset: s,
        immediate: !0
    }),
    Promise.all(r.start({
        offset: i
    }))), [r])
}
function Ooe(t, e) {
    const {itemKey: n, itemData: r, itemCount: s, itemSize: i, headerIndexes: a, stickyHeaders: o, invertStickyPosition: l, initialScrollOffset: d, initialVisibleItemIndex: u, scrollBehavior: h, paddingStart: f=0, paddingEnd: p=0} = t
      , m = t.layout === "horizontal"
      , g = t.direction === "rtl"
      , C = t.overscanCount ?? 1
      , b = t.headerSize ?? i
      , k = m ? t.width : t.height
      , S = y.useRef(null)
      , D = t.externalContainerRef ?? S
      , [R,T] = y.useState(()=>u !== void 0 ? l3(u, "start", 0, s, i, k, f, p) : d ?? 0)
      , B = y.useRef(R)
      , z = y.useRef(R)
      , [W,fe] = y.useState(!1)
      , me = yE(D, m)
      , _e = y.useMemo(()=>new Set(a ?? []), [a])
      , I = y.useCallback(Ce=>{
        kE(S, t.outerRef, Ce)
    }
    , [t.outerRef])
      , Q = y.useRef(0)
      , P = y.useCallback(function() {
        if (D.current) {
            const Ie = bE(m, D.current);
            z.current !== Ie && (z.current = Ie,
            fe(!0),
            T(Ie))
        }
        Q.current = requestAnimationFrame(P)
    }, [m, g, i])
      , A = y.useCallback(()=>{
        Q.current && (cancelAnimationFrame(Q.current),
        Q.current = 0),
        fe(!1)
    }
    , []);
    y.useEffect(()=>{
        var Ie;
        const Ce = ()=>{
            Q.current || P()
        }
        ;
        return (Ie = D.current) == null || Ie.addEventListener("scroll", Ce, {
            passive: !0
        }),
        ()=>{
            var ge;
            return (ge = D.current) == null ? void 0 : ge.removeEventListener("scroll", Ce)
        }
    }
    , []);
    const E = b - i;
    function V(Ce, Ie) {
        return Ce * i + Ie * E
    }
    let X, L, q, oe = 0;
    if (a && E !== 0) {
        let Ce, Ie, ge, Te;
        for (let Ge = 0, ln = a.length; Ge < ln; ++Ge) {
            const xr = a[Ge]
              , Vn = V(xr, Ge) + f
              , Bn = Vn + b;
            if (Ce == null) {
                const nr = R;
                let Un;
                Vn > nr ? Un = nr : Bn > nr && (Un = Vn),
                Un != null && (Ce = Un,
                ge = Ge)
            }
            if (Ie == null) {
                const nr = R + k;
                let Un;
                if (Vn > nr ? Un = nr : Bn > nr && (Un = Vn),
                Un != null) {
                    Ie = Un,
                    Te = Ge;
                    break
                }
            }
        }
        (Ce == null || ge == null) && (Ce = R,
        ge = a.length),
        (Ie == null || Te == null) && (Ie = R + k,
        Te = a.length),
        X = Math.min(Math.floor(Math.max(0, Ce - f - ge * E) / i), s - 1),
        L = Math.min(Math.floor(Math.max(0, Ie - f - Te * E) / i), s - 1),
        o && (q = a[ge - 1]),
        oe = ge;
        for (let Ge = oe - 1; Ge >= 0; --Ge) {
            const ln = a[Ge];
            if (X - ln <= C)
                --oe;
            else
                break
        }
    } else if (X = Math.min(Math.floor(Math.max(0, R - f) / i), s - 1),
    L = Math.min(Math.floor(Math.max(0, R + k - f) / i), s - 1),
    o && a) {
        for (let Ce = 0, Ie = a.length; Ce < Ie; ++Ce) {
            const ge = a[Ce]
              , Te = V(ge, Ce) + f
              , Ge = Te + b;
            if (!l && Te >= R) {
                q = a[Ce - 1];
                break
            }
            if (l && Ge >= R + k) {
                q = a[Ce];
                break
            }
        }
        q == null && (q = a[a.length - 1])
    }
    const we = Math.max(0, X - C)
      , _ = Math.min(L + C, s - 1);
    y.useEffect(()=>{
        if (d || u !== void 0) {
            const Ce = D.current;
            Ce && c3(Ce, R, m)
        }
    }
    , []),
    CE(t, A, B, R),
    y.useEffect(()=>{
        var Ce;
        (Ce = t.onItemsRendered) == null || Ce.call(t, {
            visibleStartIndex: X,
            visibleStopIndex: L,
            overscanStartIndex: we,
            overscanStopIndex: _
        })
    }
    , [X, L, we, _]),
    y.useImperativeHandle(e, ()=>{
        function Ce(ge, Te) {
            if (t.externalContainerRef)
                throw new Error("Cannot use imperative API when using externalContainerRef");
            const Ge = B.current
              , ln = Math.max(0, ge);
            (Te ?? h ?? "instant") === "smooth" ? me({
                targetOffset: ln,
                currentOffset: Ge
            }) : D.current && (c3(D.current, ln, m),
            ln !== Ge && T(ln))
        }
        function Ie(ge, Te="auto") {
            return {
                offsetForItem: l3(ge, Te, B.current, s, i, k, f, p),
                currentOffset: B.current
            }
        }
        return {
            scrollTo: Ce,
            scrollBy(ge, Te) {
                Ce(z.current + ge, Te)
            },
            getScrollOffsetForItem: Ie,
            scrollToItem(ge, Te="auto", Ge) {
                const ln = Ie(ge, Te);
                Ce(ln.offsetForItem, Ge)
            }
        }
    }
    , [s, i, k, h, f, p]);
    let M = 0;
    const Z = o === !0 && a != null && a.length > 0;
    let U;
    Z && (m ? g ? U = l ? ew : tw : U = l ? tw : ew : U = l ? Noe : Foe);
    const ce = [];
    if (s > 0) {
        if (!l && q !== void 0 && q < we) {
            M = V(q, oe - 1),
            ce.push(y.createElement(t.children, {
                index: q,
                style: U,
                data: r,
                key: n(q, r)
            }));
            const Ce = V(we - q - 1, 0);
            if (Ce > 0) {
                const Ie = m ? {
                    width: Ce
                } : {
                    height: Ce
                };
                ce.push(c.jsx("div", {
                    style: Ie
                }, "list-spacer-sticky"))
            }
        }
        ce.length === 0 && (M = V(we, oe));
        for (let Ce = we; Ce <= _; ++Ce) {
            let Ie;
            Z && _e.has(Ce) && (l ? (Ie = {
                ...U
            },
            Ie.zIndex = _ - Ce) : Ie = U),
            ce.push(y.createElement(t.children, {
                index: Ce,
                style: Ie,
                data: r,
                key: n(Ce, r)
            }))
        }
        l && q !== void 0 && q > _ && ce.push(y.createElement(t.children, {
            index: q,
            style: U,
            data: r,
            key: n(q, r)
        }))
    }
    const De = y.createElement(t.innerElementType || "div", {
        ref: t.innerRef,
        style: wE({
            isHorizontal: m,
            isRtl: g,
            isScrolling: W,
            size: V(s, (a == null ? void 0 : a.length) ?? 0) + f + p,
            paddingStart: M + f,
            paddingEnd: void 0,
            orthogonalSize: t.externalContainerRef ? m ? t.height : t.width : "100%",
            minOrthogonalSize: m ? t.minHeight : t.minWidth
        })
    }, ce);
    return t.externalContainerRef ? De : y.createElement(t.outerElementType || "div", {
        ref: I,
        className: t.className,
        style: vE(t),
        ...t.outerElementAttributes
    }, De)
}
const Roe = y.memo(y.forwardRef(Ooe));
function Poe(t, e) {
    const {itemKey: n, itemData: r, itemCount: s, initialScrollOffset: i, initialVisibleItemIndex: a, itemEstimatedSize: o, scrollBehavior: l, paddingStart: d=0, paddingEnd: u=0} = t
      , h = t.layout === "horizontal"
      , f = t.direction === "rtl"
      , p = t.overscanCount ?? 1
      , m = h ? t.width : t.height
      , [g,C] = y.useState(o)
      , b = y.useRef(null)
      , [k,S] = y.useState(()=>a !== void 0 ? l3(a, "start", 0, s, g, m, d, u) : i ?? 0)
      , D = y.useRef(k)
      , R = y.useRef(k)
      , [T,B] = y.useState(!1)
      , z = yE(b, h)
      , [W,fe] = y.useState(()=>nw(s, m, p, g, k, 0))
      , me = y.useRef(W)
      , [_e,I] = y.useState(0)
      , Q = y.useRef(_e);
    y.useLayoutEffect(()=>{
        if (i) {
            const _ = b.current;
            _ && c3(_, i, h)
        }
    }
    , []),
    y.useLayoutEffect(()=>{
        C(o)
    }
    , [o]),
    y.useLayoutEffect(()=>{
        if (_e === 0) {
            const _ = W.overscanStopIndex - W.overscanStartIndex
              , M = g7(b);
            if (_ > 0 && M) {
                const Z = M[0]
                  , U = M[M.length - 1]
                  , ce = d3(U, h) - d3(Z, h) + nf(U, h);
                C(Math.round(ce / _))
            }
        }
    }
    , [_e === 0]);
    const P = y.useCallback(_=>nw(s, m, p, g, _, Q.current), [s, m, p, g]);
    y.useLayoutEffect(()=>{
        const _ = P(k);
        (_.overscanStartIndex !== W.overscanStartIndex || _.overscanStopIndex !== W.overscanStopIndex) && fe(_)
    }
    , [P]);
    const A = y.useCallback(()=>B(!1), []);
    CE(t, A, D, k),
    y.useEffect(()=>{
        var _;
        me.current = W,
        (_ = t.onItemsRendered) == null || _.call(t, W)
    }
    , [W]),
    y.useImperativeHandle(e, ()=>{
        function _(Z, U) {
            const ce = D.current
              , De = Math.max(0, Z);
            if ((U ?? l ?? "instant") === "smooth")
                z({
                    targetOffset: De,
                    currentOffset: ce
                });
            else if (b.current && (c3(b.current, De, h),
            De !== ce)) {
                S(De);
                const Ie = P(De);
                fe(Ie),
                I(0),
                Q.current = 0
            }
        }
        function M(Z, U="auto") {
            const ce = D.current;
            let De;
            const Ce = me.current;
            if (Z >= Ce.overscanStartIndex && Z <= Ce.overscanStopIndex) {
                const Ie = g7(b)
                  , ge = Ie == null ? void 0 : Ie[Z - Ce.overscanStartIndex];
                Ie && ge && (De = Voe(Z, U, ce, s, g, m, d, u, ge, Ie[Ie.length - 1], h))
            }
            return De == null && (De = l3(Z, U, ce, s, g, m, d, u)),
            {
                offsetForItem: De,
                currentOffset: D.current
            }
        }
        return {
            scrollTo: _,
            scrollBy(Z, U) {
                _(R.current + Z, U)
            },
            getScrollOffsetForItem: M,
            scrollToItem(Z, U="auto", ce) {
                const De = M(Z, U);
                _(De.offsetForItem, ce)
            }
        }
    }
    , [P, l, d, u]);
    const E = y.useCallback(_=>{
        kE(b, t.outerRef, _)
    }
    , [t.outerRef])
      , [V,X] = y.useState(void 0);
    y.useLayoutEffect(()=>{
        if (!V)
            return;
        const _ = g7(b);
        if (!_)
            return;
        const {from: M, to: Z} = V
          , U = rw(g, _, Z - M);
        U !== 0 && (I(ce=>ce - U),
        Q.current -= U)
    }
    , [V]);
    const L = y.useCallback(function(M) {
        const Z = M.currentTarget
          , U = bE(h, Z);
        if (R.current === U)
            return;
        R.current = U;
        const ce = me.current
          , De = P(U);
        let Ce = 0
          , Ie = 0
          , ge = !1
          , Te = 1;
        De.overscanStartIndex === 0 ? ge = !0 : De.overscanStartIndex === ce.overscanStartIndex || (De.overscanStartIndex > ce.overscanStartIndex && De.overscanStartIndex <= ce.overscanStopIndex ? (Ce = ce.overscanStartIndex,
        Ie = De.overscanStartIndex) : De.overscanStartIndex < ce.overscanStartIndex && De.overscanStopIndex <= ce.overscanStopIndex ? (Te = -1,
        Ce = De.overscanStartIndex,
        Ie = ce.overscanStartIndex) : ge = !0);
        function Ge() {
            B(!0),
            S(U),
            fe(De)
        }
        if (ge)
            Ge(),
            I(0),
            Q.current = 0;
        else if (Te === 1) {
            Ge();
            const ln = Z.children[0].children
              , xr = rw(g, ln, Ie - Ce);
            xr !== 0 && (I(Vn=>Vn + xr),
            Q.current += xr)
        } else
            Ge(),
            X({
                from: Ce,
                to: Ie
            })
    }, [P])
      , q = [];
    if (s > 0)
        for (let _ = W.overscanStartIndex; _ <= W.overscanStopIndex; ++_)
            q.push(y.createElement(t.children, {
                index: _,
                style: $oe,
                data: r,
                key: n(_, r)
            }));
    const oe = W.overscanStartIndex * g + _e
      , we = (s - W.overscanStopIndex - 1) * g;
    return y.createElement(t.outerElementType || "div", {
        ref: E,
        className: t.className,
        style: vE(t),
        onScroll: L,
        ...t.outerElementAttributes
    }, y.createElement(t.innerElementType || "div", {
        ref: t.innerRef,
        style: wE({
            isHorizontal: h,
            isRtl: f,
            isScrolling: T,
            size: void 0,
            paddingStart: oe + d,
            paddingEnd: we + u,
            orthogonalSize: "100%"
        })
    }, q))
}
const K2e = y.memo(y.forwardRef(Poe));
function CE(t, e, n, r) {
    y.useEffect(()=>{
        var i;
        n.current = r,
        (i = t.onScroll) == null || i.call(t, {
            scrollOffset: r
        });
        const s = zoe(()=>{
            e()
        }
        , 150);
        return ()=>{
            Hoe(s)
        }
    }
    , [r])
}
function bE(t, e) {
    if (t) {
        const {clientWidth: n, scrollWidth: r, scrollLeft: s} = e;
        return Math.max(0, Math.min(s, r - n))
    } else {
        const {clientHeight: n, scrollHeight: r, scrollTop: s} = e;
        return Math.max(0, Math.min(s, r - n))
    }
}
function c3(t, e, n, r) {
    const s = n ? {
        left: e,
        behavior: r
    } : {
        top: e,
        behavior: r
    };
    t.scrollTo(s)
}
function vE(t) {
    return {
        position: "relative",
        width: t.width,
        height: t.height,
        overflow: "auto",
        WebkitOverflowScrolling: "touch",
        direction: t.direction,
        ...t.style
    }
}
function wE({isHorizontal: t, isRtl: e, isScrolling: n, size: r, paddingStart: s, paddingEnd: i, orthogonalSize: a, minOrthogonalSize: o}) {
    return {
        display: "flex",
        flexDirection: t ? "row" : "column",
        height: t ? a : r,
        width: t ? r : a,
        minHeight: t ? o : void 0,
        minWidth: t ? void 0 : o,
        pointerEvents: n ? "none" : void 0,
        paddingTop: t ? void 0 : s,
        paddingBottom: t ? void 0 : i,
        paddingLeft: t ? e ? i : s : void 0,
        paddingRight: t ? e ? s : i : void 0
    }
}
const $oe = {
    overflowAnchor: "none"
}
  , Foe = {
    position: "sticky",
    zIndex: 1,
    top: 0,
    overflowAnchor: "none"
}
  , Noe = {
    position: "sticky",
    zIndex: 1,
    bottom: 0,
    overflowAnchor: "none"
}
  , ew = {
    position: "sticky",
    zIndex: 1,
    left: 0,
    overflowAnchor: "none"
}
  , tw = {
    position: "sticky",
    zIndex: 1,
    right: 0,
    overflowAnchor: "none"
};
function kE(t, e, n) {
    t.current = n,
    e && (typeof e == "function" ? e(n) : e.current = n)
}
function xE(t, e, n, r, s, i) {
    const a = Math.min(s, r)
      , o = Math.max(0, Math.min(i, r));
    switch (t === "smart" && (e >= o - n && e <= a + n ? t = "auto" : t = "center"),
    t) {
    case "start":
        return a;
    case "end":
        return o;
    case "center":
        {
            const l = Math.round(o + (a - o) / 2);
            return l < Math.ceil(n / 2) ? 0 : l > r - Math.floor(n / 2) ? r : l
        }
    case "auto":
    default:
        return e >= o && e <= a ? e : e < o ? o : a
    }
}
function Voe(t, e, n, r, s, i, a, o, l, d, u) {
    const h = r * s + a + o - i
      , f = d3(l, u) + nf(l, u) + o - i
      , p = Math.max(0, h, f)
      , m = d3(l, u)
      , g = nf(l, u)
      , C = m - (t === 0 ? a : 0)
      , b = m - i + g + (t === r - 1 ? o : 0);
    return xE(e, n, i, p, C, b)
}
function l3(t, e, n, r, s, i, a, o) {
    const l = Math.max(0, r * s + a + o - i)
      , d = t * s + (t === 0 ? 0 : a)
      , u = t * s + a - i + s + (t === r - 1 ? o : 0);
    return xE(e, n, i, l, d, u)
}
function nw(t, e, n, r, s, i) {
    const a = s === 0 ? 0 : Math.max(0, Math.min(Math.floor((s - i) / r), t - 1))
      , o = Math.max(0, a - n)
      , l = Math.min(a + Math.ceil(e / r), t - 1)
      , d = Math.min(l + n, t - 1);
    return {
        overscanStartIndex: o,
        overscanStopIndex: d,
        visibleStartIndex: a,
        visibleStopIndex: l
    }
}
function d3(t, e) {
    return e ? t.offsetLeft : t.offsetTop
}
function nf(t, e) {
    return e ? t.offsetWidth : t.offsetHeight
}
function Boe(t) {
    var e;
    return (e = t.current) == null ? void 0 : e.children[0]
}
function g7(t) {
    var e;
    return (e = Boe(t)) == null ? void 0 : e.children
}
function rw(t, e, n) {
    if (n === 0)
        return 0;
    let r = 0;
    for (let s = 0, i = Math.min(n, e.length); s < i; ++s) {
        const a = e[s].offsetHeight;
        r += a - t
    }
    return r
}
const Uoe = typeof performance == "object" && typeof performance.now == "function"
  , sw = Uoe ? ()=>performance.now() : ()=>Date.now();
function Hoe(t) {
    cancelAnimationFrame(t.id)
}
function zoe(t, e) {
    const n = sw();
    function r() {
        sw() - n >= e ? t.call(null) : s.id = requestAnimationFrame(r)
    }
    const s = {
        id: requestAnimationFrame(r)
    };
    return s
}
const iw = rn(function(e) {
    return c.jsx(Zoe, {
        className: e.isFocused ? "focus-visible" : e.isHighlighted ? "highlighted" : "",
        kind: e.isSelected ? "primary" : "borderless",
        onClick: e.onClick,
        size: "small",
        tabIndex: -1,
        type: "button",
        children: e.children
    })
})
  , Zoe = ae(Qi)`
  border-width: ${F1()};
  box-shadow: none;
  font-size: ${Ni("miniPlus")};

  &.focus-visible,
  &:focus-visible {
    ${Px}
  }

  &.highlighted {
    ${t=>t.kind !== "primary" ? `
          background-color: ${t.theme.color.bgShade};
          box-shadow: 0 0 0 1px ${t.theme.color.controlPrimary};
          ` : ""}
  }

  ${t=>t.kind === "primary" && `&.focus-visible,&:focus-visible {
      outline-offset: 2px;
    }`}

  &:not(:disabled):${gs} {
    ${t=>`background-color: ${t.kind === "primary" ? t.theme.color.controlPrimaryHover : t.theme.color.bgShadeHover};`}
  }

  ${t=>t.kind !== "primary" ? `border: ${jc(t.theme.color.bgBorderSolid)};` : ""}
`
  , qoe = y.forwardRef((t,e)=>{
    const {config: n, containerHeight: r, highlightedDate: s, onChange: i, resolution: a, value: o} = t;
    if (!a)
        return null;
    const l = (o == null ? void 0 : o.resolution) === a ? o.date.toLocalDate() : void 0
      , d = n.options[a];
    return c.jsx(Woe, {
        style: {
            height: r
        },
        children: c.jsx(Koe, {
            onChange: u=>{
                i(u ? {
                    date: u,
                    resolution: a
                } : void 0)
            }
            ,
            highlightedDate: s == null ? void 0 : s.toLocalDate(),
            selectedDate: l,
            containerHeight: r,
            ref: e,
            fiscalYearStartMonth: n.fiscalYearStartMonth,
            resolution: a,
            ...d
        })
    })
}
)
  , Uu = 4
  , Woe = ae.div`
  overflow: hidden;
  display: flex;
  flex-direction: column;
  flex-shrink: 1;
  flex-grow: 1;
  min-width: 0;
  margin: 0 -${Uu}px;

  &:focus-visible {
    outline: none;
  }

  * {
    ${vR()}
  }
`
  , Goe = ae(Lt).attrs({
    column: !0,
    gap: 8
})`
  position: relative;
  overflow-y: auto;
  will-change: transform;
  direction: ltr;
`
  , Koe = y.forwardRef((t,e)=>{
    const {dateItemColumns: n, fiscalYearStartMonth: r, highlightedDate: s, onChange: i, resolution: a, selectedDate: o, yearItemHeight: l, yearItems: d} = t
      , u = y.useRef(null)
      , h = e || u
      , f = y.useRef(null)
      , [p,m] = y.useState(!1)
      , [g,C] = y.useState([-1, -1])
      , b = y.useMemo(()=>o ? m7(d, o, a, r) : [-1, -1], [r, a, d, o])
      , k = y.useMemo(()=>s ? m7(d, s, a, r) : [-1, -1], [r, a, d, s])
      , S = $x(d);
    y.useLayoutEffect(()=>{
        const W = S !== d
          , fe = W ? new Date(new Date().getFullYear(),0,1) : void 0
          , me = s || o || fe
          , _e = me ? m7(d, me, a, r) : void 0;
        _e && D(_e, W ? "start" : "smart", "instant")
    }
    , [a, r, d, o, s]);
    const D = y.useCallback((W,fe="smart",me="smooth")=>{
        var I;
        C(W);
        const _e = W[0];
        (I = f.current) == null || I.scrollToItem(_e, fe, me)
    }
    , [])
      , R = y.useCallback(W=>{
        W.target === h.current && m(!0)
    }
    , [])
      , T = y.useCallback(()=>{
        m(!1)
    }
    , [])
      , B = y.useCallback(W=>{
        if (g === void 0 || W.metaKey || W.altKey || W.ctrlKey || W.shiftKey)
            return;
        const [fe,me] = g
          , _e = d[0].dateItems.length
          , I = Math.ceil(_e / n)
          , Q = _e / I
          , P = me < Q
          , A = me >= _e - Q
          , E = me % Q === 0
          , V = me % Q === Q - 1
          , X = Math.max(fe - 1, 0)
          , L = Math.min(fe + 1, d.length - 1);
        switch (W.key) {
        case "ArrowDown":
            W.preventDefault(),
            W.stopPropagation(),
            A ? L > fe && D([L, me % n]) : D([fe, me + n]);
            break;
        case "ArrowUp":
            W.preventDefault(),
            W.stopPropagation(),
            P ? X < fe && D([X, _e - Q + me]) : D([fe, me - n]);
            break;
        case "ArrowLeft":
            W.preventDefault(),
            W.stopPropagation(),
            E && P && X < fe ? D([X, _e - 1]) : D([fe, Math.max(me - 1, 0)]);
            break;
        case "ArrowRight":
            W.preventDefault(),
            W.stopPropagation(),
            V && A && L > fe ? D([L, 0]) : D([fe, Math.min(me + 1, _e - 1)]);
            break;
        case "Enter":
            W.preventDefault(),
            W.stopPropagation(),
            i(d[fe].dateItems[me].value.toTimelessDate());
            break
        }
    }
    , [n, g, d])
      , z = y.useCallback(W=>W, [d]);
    return c.jsx(Goe, {
        onKeyDown: B,
        onBlur: T,
        onFocus: R,
        tabIndex: 0,
        ref: h,
        children: c.jsx(Roe, {
            ref: f,
            width: "100%",
            height: t.containerHeight,
            itemSize: l,
            itemCount: d.length,
            itemKey: z,
            itemData: {
                dateItemColumns: n,
                focusedIndex: g,
                highlightedIndex: k,
                isFocusVisible: p,
                onChange: i,
                selectedIndex: b,
                yearItemHeight: l,
                yearItems: d
            },
            layout: "vertical",
            overscanCount: 4,
            initialScrollOffset: 0,
            paddingEnd: Uu * 3,
            children: Yoe
        })
    })
}
)
  , Yoe = ({index: t, data: e})=>{
    const {dateItemColumns: n, focusedIndex: r, highlightedIndex: s, isFocusVisible: i, onChange: a, selectedIndex: o} = e
      , {label: l, dateItems: d} = e.yearItems[t];
    let u;
    if (n === 1) {
        const h = d[0]
          , f = o[0] === t
          , p = i && r[0] === t
          , m = !i && s[0] === t;
        u = c.jsx(iw, {
            onClick: ()=>a(h.value.toTimelessDate()),
            isFocused: p,
            isHighlighted: m,
            isSelected: f,
            children: h.label
        }, h.label)
    } else
        u = c.jsxs(c.Fragment, {
            children: [c.jsx(Xe, {
                type: "miniPlus",
                align: "left",
                color: "labelMuted",
                children: l
            }), c.jsx(Qoe, {
                $columns: n,
                children: d.map((h,f)=>{
                    const p = o[0] === t && o[1] === f
                      , m = i && r[0] === t && r[1] === f
                      , g = !i && s[0] === t && s[1] === f;
                    return c.jsx(iw, {
                        isFocused: m,
                        isHighlighted: g,
                        isSelected: p,
                        onClick: ()=>{
                            a(h.value.toTimelessDate())
                        }
                        ,
                        children: h.label
                    }, h.label + h.value)
                }
                )
            })]
        });
    return c.jsx(Lt, {
        align: "center",
        style: {
            height: e.yearItemHeight,
            paddingLeft: Uu,
            paddingRight: Uu,
            paddingTop: Uu * 2
        },
        children: c.jsx(Lt, {
            column: !0,
            gap: bc.dateItemGap,
            grow: 1,
            children: u
        })
    })
}
  , Qoe = ae.div`
  display: grid;
  grid-template-columns: ${t=>`repeat(${t.$columns}, 1fr)`};
  gap: ${bc.dateItemGap}px;
`
  , Xoe = t=>{
    var A;
    const {inputLabel: e, minYear: n=2018, maxYear: r=new Date().getFullYear() + 5, renderingContext: s, onChange: i, trailingDateValue: a, value: o} = t
      , l = Wr().user.settings.fontSize
      , d = Wr().organization.fiscalYearStartMonth
      , u = Cc(Y2.phone)
      , h = y.useRef(null)
      , [f,p] = y.useState()
      , [m,g] = y.useState(o ?? t.placeholder)
      , C = E=>{
        g(E),
        R(!0),
        p(void 0)
    }
      , b = y.useMemo(()=>lR(C, 350), [])
      , [k,S] = y.useState(t.placeholder)
      , [D,R] = y.useState(!1)
      , T = (A = o == null ? void 0 : o.date) == null ? void 0 : A.toLocalDate()
      , B = (o == null ? void 0 : o.date) !== (m == null ? void 0 : m.date) || D ? m == null ? void 0 : m.date : void 0
      , z = B == null ? void 0 : B.toLocalDate()
      , W = f || (z && Joe(z, n, r) ? z : T);
    y.useEffect(()=>{
        t.onInternalValueChange && t.onInternalValueChange(m)
    }
    , [m]);
    const fe = y.useMemo(()=>({
        options: _oe({
            fiscalYearStartMonth: d,
            minYear: n,
            maxYear: r
        }),
        minYear: n,
        maxYear: r,
        fiscalYearStartMonth: d
    }), [d, n, r])
      , me = E=>{
        E !== (m == null ? void 0 : m.resolution) && C({
            ...m,
            resolution: E
        })
    }
      , _e = (E,V)=>{
        let X = E;
        if (E != null && E.date && E.resolution) {
            const {resolution: L, date: q} = E;
            X = {
                date: (a ? Ys.trailingDateInInterval({
                    date: q,
                    resolution: L,
                    fiscalYearStartMonth: d
                }) : Ys.leadingDateInInterval({
                    date: q,
                    resolution: L,
                    fiscalYearStartMonth: d
                })).toTimelessDate(),
                resolution: L
            }
        }
        i(X, V),
        C(X),
        S(void 0)
    }
      , I = c.jsx(joe, {
        config: fe,
        onClear: ()=>{
            _e(void 0, !1),
            C({
                ...m,
                date: void 0
            })
        }
        ,
        onSubmit: E=>{
            _e(E, !0)
        }
        ,
        onChange: E=>{
            E ? (E == null ? void 0 : E.resolution) !== (m == null ? void 0 : m.resolution) ? b(E) : (b.cancel(),
            C(E)) : (C({
                ...m,
                date: void 0
            }),
            b.cancel())
        }
        ,
        value: m ?? k,
        ref: h
    })
      , Q = c.jsxs(c.Fragment, {
        children: [c.jsxs(Lt, {
            column: !0,
            gap: 8,
            style: {
                marginBottom: 16
            },
            children: [c.jsx(Xe, {
                type: "miniPlus",
                color: "labelMuted",
                style: {
                    flexShrink: 0
                },
                children: e
            }), u ? null : I]
        }), c.jsx(e1e, {
            compact: s === "popover" || u,
            handleChangeResolution: me,
            selectedResolution: m == null ? void 0 : m.resolution,
            renderingContext: s
        }), c.jsx(a1e, {
            $large: s === "dialog"
        })]
    })
      , P = s === "dialog" && !u;
    return c.jsxs(c.Fragment, {
        children: [Q, m != null && m.resolution ? c.jsx(qoe, {
            config: fe,
            containerHeight: s === "dialog" ? DE : r1e,
            highlightedDate: B,
            onChange: E=>{
                _e(E, !0)
            }
            ,
            resolution: m == null ? void 0 : m.resolution,
            value: o
        }) : c.jsx(s1e, {
            modifiers: {
                weekends: {
                    dayOfWeek: [0, 6]
                },
                highlighted: [{
                    from: z,
                    to: z
                }].concrete()
            },
            numberOfMonths: P ? 2 : 1,
            fixedWeeks: !0,
            month: W,
            onDayClick: E=>{
                _e({
                    date: E.toTimelessDate()
                }, !0)
            }
            ,
            onMonthChange: E=>{
                p(E)
            }
            ,
            selected: T ? [T] : [],
            showOutsideDays: !0,
            renderingContext: s,
            fontSize: l
        })]
    })
}
  , Joe = (t,e,n)=>{
    const r = t.getFullYear()
      , s = r < e
      , i = r > n;
    return !s && !i
}
  , e1e = t=>{
    const {compact: e, handleChangeResolution: n, selectedResolution: r} = t
      , s = a=>{
        a in mt ? n(a) : n(void 0)
    }
      , i = (r == null ? void 0 : r.toString()) || "";
    return c.jsx(Bu.Root, {
        value: i,
        onValueChange: s,
        children: c.jsx(Bu.List, {
            fullWidth: e,
            children: n1e.map(a=>{
                var l;
                const o = ((l = a.value) == null ? void 0 : l.toString()) || "";
                return c.jsx(Bu.Trigger, {
                    value: o,
                    style: e ? {
                        padding: "4px"
                    } : {},
                    children: c.jsx(t1e, {
                        type: "miniPlus",
                        color: "currentColor",
                        children: a.label
                    })
                }, o)
            }
            )
        })
    })
}
  , t1e = ae(Xe)`
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
`
  , n1e = [{
    label: "Day",
    value: void 0
}, {
    label: "Month",
    value: mt.month
}, {
    label: "Quarter",
    value: mt.quarter
}, {
    label: "Half-year",
    value: mt.halfYear
}, {
    label: "Year",
    value: mt.year
}]
  , r1e = 198
  , DE = 298
  , s1e = ae(um)`
  padding-top: 8px;
  height: ${DE}px;

  .rdp-day_highlighted {
    outline: 1px solid ${ze("controlPrimaryHover")};
    background: ${ze("bgSelected")} !important;
    color: ${ze("labelBase")};
  }
  .rdp-day_highlighted::before {
    background: initial !important;
  }
  .rdp-day_today {
    background-color: inherit !important;
    border-width: ${F1()};
  }
  .rdp-caption .rdp-caption_label {
    font-size: ${Ni("miniPlus")};
    color: ${ze("labelMuted")};
  }
  .rdp-nav_button_previous {
    right: 34px;
  }
  .rdp-nav_button_next {
    right: 12px;
  }
  &:focus-within .rdp-day_highlighted {
    outline: none;
    background-color: inherit !important;
  }

  ${t=>t.renderingContext === "dialog" && t.numberOfMonths === 1 && Qt`
      width: calc(100%);
    `}
  ${t=>t.renderingContext === "popover" && Qt`
      margin-left: -15px;
      width: calc(100% + 30px);

      .rdp-caption {
        margin-left: 9px;
      }

      .rdp-months {
        justify-content: flex-start;
      }

      .rdp-month {
        border-spacing: ${i1e[t.fontSize]}rem 0.5rem;
        width: 100%;
      }
    `}
`
  , i1e = {
    [v1.smaller]: .8,
    [v1.small]: .82,
    [v1.default]: .96,
    [v1.large]: .98,
    [v1.larger]: 1.05
}
  , a1e = ae.div`
  border-top: ${d0("bgBorder")};
  margin: ${t=>t.$large ? "16px -32px 0 -32px" : "16px -16px 0 -16px"};
`
  , o1e = t=>{
    const {customView: e, ...n} = t;
    return c.jsx(gh, {
        model: e,
        fallbackIcon: j.CustomView,
        ...n
    })
}
  , c1e = t=>{
    const {model: e} = t;
    switch (Me.getModelClass(e.modelName)) {
    case ie:
        return c.jsx(x1, {
            project: e
        });
    case Ke:
        return c.jsx(o1e, {
            customView: e
        });
    case cn:
        return c.jsx(rp, {
            color: e.color,
            className: "color-override"
        });
    case ot:
        return c.jsx(Zp, {
            initiative: e,
            className: "color-override"
        });
    case ne:
        return c.jsx(qp, {
            team: e
        });
    case ct:
        return c.jsx(io, {
            cycle: e,
            strongColors: !0
        });
    case Ut:
        const r = e;
        return r.isGroup ? c.jsx(V8, {
            color: r.color
        }) : c.jsx(S2, {
            size: "small",
            color: r.color
        });
    case K:
        return c.jsx(Di, {
            size: "small",
            user: e,
            enableLink: !1,
            enablePopover: !1
        });
    default:
        return null
    }
}
;
class l1e {
    constructor(e) {
        const {inputType: n="string", ...r} = e;
        this.inputType = n,
        this.props = {
            ...r,
            onResult: ()=>{}
        }
    }
    show() {
        const e = (()=>{
            switch (this.inputType) {
            case "date":
                return c.jsx(d1e, {
                    ...this.props
                });
            case "dateOrInterval":
                return c.jsx(h1e, {
                    ...this.props
                });
            case "string":
                return c.jsx(f1e, {
                    ...this.props
                });
            case "dropdown":
                return c.jsx(p1e, {
                    ...this.props
                });
            default:
                throw new zt(this.inputType)
            }
        }
        )();
        return new Promise(n=>{
            Q2.show(e, this.props.dialogOptions).then(r=>{
                n(r)
            }
            )
        }
        )
    }
}
function d1e(t) {
    const {onResult: e, options: n} = t
      , r = Cc(Y2.phone)
      , s = d=>{
        e == null || e(d.selectedDate)
    }
      , i = ()=>{
        e == null || e()
    }
      , a = n == null ? void 0 : n.minDate
      , o = n == null ? void 0 : n.maxDate
      , l = a && o ? {
        before: a,
        after: o
    } : a ? {
        before: a
    } : o ? {
        after: o
    } : void 0;
    return c.jsx($3, {
        initialValues: {
            selectedDate: (n == null ? void 0 : n.selectedDate) || new Date
        },
        validateOnBlur: !1,
        onSubmit: s,
        children: d=>c.jsxs(Sh, {
            onSubmit: d.handleSubmit,
            children: [c.jsxs(Rh, {
                column: !0,
                children: [c.jsx(Ph, {
                    type: "regularPlus",
                    children: t.title
                }), t.description && c.jsx(Xe, {
                    type: "regular",
                    color: "labelMuted",
                    children: t.description
                }), c.jsx(F3, {
                    name: "selectedDate",
                    children: ({field: u, form: h})=>c.jsx(u1e, {
                        fixedWeeks: !0,
                        numberOfMonths: r ? 1 : 2,
                        onDayClick: async f=>{
                            await h.setFieldValue(u.name, f)
                        }
                        ,
                        defaultMonth: (n == null ? void 0 : n.defaultMonth) ?? u.value,
                        selected: u.value ? [u.value] : [],
                        showOutsideDays: !0,
                        disabled: l,
                        fromMonth: n == null ? void 0 : n.minDate,
                        toMonth: n == null ? void 0 : n.maxDate,
                        modifiers: n != null && n.highlightedMinDate && n.highlightedMaxDate ? {
                            highlighted: [{
                                from: n.highlightedMinDate,
                                to: n.highlightedMaxDate
                            }]
                        } : void 0
                    })
                })]
            }), c.jsxs($h, {
                justify: "flex-end",
                children: [t.cancelButtonTitle && c.jsx(Qi, {
                    kind: "secondary",
                    onClick: i,
                    children: t.cancelButtonTitle
                }), c.jsx(Qi, {
                    type: "submit",
                    kind: n != null && n.dangerous ? "dangerous" : "primary",
                    children: t.confirmButtonTitle
                })]
            })]
        })
    })
}
const u1e = ae(um)`
  margin-right: -8px;
  margin-left: -8px;
`;
function h1e(t) {
    var l;
    const {onResult: e, options: n} = t
      , r = pl()
      , {fiscalYearStartMonth: s} = r.organization
      , i = ({selectedDate: d})=>{
        if (!d || !d.date) {
            e == null || e();
            return
        }
        const {date: u, resolution: h} = d;
        if (!h) {
            e == null || e(u);
            return
        }
        const f = Ys.toInterval({
            date: u,
            resolution: h
        }, s);
        e == null || e(f)
    }
      , a = ()=>{
        e == null || e()
    }
      , o = ((l = n == null ? void 0 : n.selectedDate) == null ? void 0 : l.resolution) ?? mt.quarter;
    return c.jsx($3, {
        initialValues: {
            selectedDate: n == null ? void 0 : n.selectedDate
        },
        validateOnBlur: !1,
        onSubmit: i,
        children: d=>{
            var u, h, f;
            return c.jsxs(Sh, {
                onSubmit: d.handleSubmit,
                children: [c.jsxs(Rh, {
                    column: !0,
                    style: {
                        paddingBottom: 0
                    },
                    children: [c.jsxs(Ph, {
                        type: "regularPlus",
                        children: [c.jsx(Xe, {
                            type: "regularPlus",
                            children: t.title
                        }), " ", c.jsx(Xe, {
                            type: "regularPlus",
                            color: "labelMuted",
                            children: !d.values.selectedDate || (u = d.values.selectedDate) != null && u.resolution ? (h = t.options) == null ? void 0 : h.compareOptionForRange : (f = t.options) == null ? void 0 : f.compareOptionForDate
                        })]
                    }), t.description && c.jsx(Xe, {
                        type: "regular",
                        color: "labelMuted",
                        children: t.description
                    }), c.jsx(F3, {
                        name: "selectedDate",
                        children: ({field: p, form: m})=>c.jsx(Xoe, {
                            renderingContext: "dialog",
                            inputLabel: "",
                            onChange: async(g,C)=>{
                                await m.setFieldValue(p.name, g),
                                C && m.submitForm()
                            }
                            ,
                            onInternalValueChange: async g=>{
                                await m.setFieldValue(p.name, g)
                            }
                            ,
                            trailingDateValue: !1,
                            placeholder: {
                                resolution: o
                            },
                            value: n == null ? void 0 : n.selectedDate
                        })
                    })]
                }), c.jsxs($h, {
                    justify: "flex-end",
                    $divider: !0,
                    children: [t.cancelButtonTitle && c.jsx(Qi, {
                        kind: "secondary",
                        onClick: a,
                        children: t.cancelButtonTitle
                    }), c.jsx(Qi, {
                        type: "submit",
                        kind: n != null && n.dangerous ? "dangerous" : "primary",
                        children: t.confirmButtonTitle
                    })]
                })]
            })
        }
    })
}
function f1e(t) {
    const {onResult: e, options: n} = t
      , {validationRegex: r, validationMessage: s, placeholder: i} = n || {}
      , a = y.useRef(null)
      , o = y.useRef(null);
    y.useEffect(()=>{
        setTimeout(()=>{
            var u, h, f, p;
            n != null && n.selectedText ? (u = a.current) == null || u.select() : (h = a.current) == null || h.focus(),
            n != null && n.selectedText ? (f = o.current) == null || f.select() : (p = o.current) == null || p.focus()
        }
        , 0)
    }
    );
    const l = u=>{
        e == null || e(u.input)
    }
      , d = ()=>{
        e == null || e()
    }
    ;
    return c.jsx($3, {
        initialValues: {
            input: (n == null ? void 0 : n.selectedText) || ""
        },
        validationSchema: m1e(r, s, n),
        validateOnBlur: !1,
        validateOnChange: (n == null ? void 0 : n.validationBehavior) === "change",
        onSubmit: l,
        children: u=>c.jsxs(Sh, {
            onSubmit: u.handleSubmit,
            autoComplete: n != null && n.enableAutocomplete ? void 0 : "off",
            children: [c.jsxs(Rh, {
                column: !0,
                children: [c.jsx(Ph, {
                    type: "regularPlus",
                    children: t.title
                }), t.description && c.jsx(Xe, {
                    type: "regular",
                    color: "labelMuted",
                    children: t.description
                }), c.jsx(F3, {
                    name: "input",
                    children: ({field: h, form: f})=>c.jsxs(c.Fragment, {
                        children: [n != null && n.multiline ? c.jsx(y1e, {
                            placeholder: i,
                            autoFocus: !0,
                            ref: o,
                            ...h
                        }) : c.jsx(g1e, {
                            placeholder: i,
                            autoFocus: !0,
                            ref: a,
                            ...h
                        }), c.jsx(Xp, {
                            children: f.touched.input && f.errors.input && f.errors.input
                        })]
                    })
                })]
            }), c.jsxs($h, {
                justify: "flex-end",
                children: [t.cancelButtonTitle && c.jsx(Qi, {
                    kind: "secondary",
                    onClick: d,
                    children: t.cancelButtonTitle
                }), c.jsx(Qi, {
                    type: "submit",
                    kind: n != null && n.dangerous ? "dangerous" : "primary",
                    children: t.confirmButtonTitle
                })]
            })]
        })
    })
}
function p1e(t) {
    const {options: e} = t
      , {dropdownOptions: n=[], selectedText: r, disableOnDefaultValue: s} = e
      , i = y.useCallback(h=>{
        if (h)
            return n == null ? void 0 : n.find(f=>f.id === h)
    }
    , [n])
      , [a,o] = y.useState(i(r))
      , l = y.useCallback(h=>{
        o(i(h))
    }
    , [])
      , d = y.useRef(a)
      , u = ()=>{
        var h;
        (h = t.onResult) == null || h.call(t)
    }
    ;
    return c.jsx($3, {
        initialValues: {
            value: a == null ? void 0 : a.id
        },
        validateOnBlur: !1,
        onSubmit: ()=>{
            var h;
            (h = t.onResult) == null || h.call(t, a == null ? void 0 : a.value)
        }
        ,
        children: h=>c.jsxs(Sh, {
            onSubmit: h.handleSubmit,
            children: [c.jsxs(Rh, {
                column: !0,
                children: [c.jsx(Ph, {
                    type: "regularPlus",
                    children: t.title
                }), t.description && c.jsx(Xe, {
                    type: "regular",
                    color: "labelMuted",
                    children: t.description
                }), c.jsx(F3, {
                    name: "value",
                    children: ({field: f})=>c.jsx(tf, {
                        ...f,
                        style: {
                            marginTop: 16
                        },
                        onValueChange: l,
                        value: a == null ? void 0 : a.id,
                        children: n.map(p=>c.jsx(tf.Option, {
                            value: p.id,
                            image: "icon"in p ? p.icon : c.jsx(c1e, {
                                model: p.model
                            }),
                            children: p.label
                        }, p.id))
                    })
                })]
            }), c.jsxs($h, {
                justify: "flex-end",
                children: [t.cancelButtonTitle && c.jsx(Qi, {
                    kind: "secondary",
                    onClick: u,
                    children: t.cancelButtonTitle
                }), c.jsx(Qi, {
                    type: "submit",
                    kind: "primary",
                    disabled: !!s && a === d.current,
                    children: t.confirmButtonTitle
                })]
            })]
        })
    })
}
const m1e = (t,e,n)=>{
    const r = bI().min(1).matches(t || /.*/, e || "Invalid value.");
    return DI().shape({
        input: n != null && n.optional ? r : r.required("Required")
    })
}
  , Rh = ae(Lt)`
  padding: 32px 32px 0 32px;
  width: 100%;
`
  , g1e = ae(nc)`
  margin-top: 12px;
  margin-bottom: 3px;
`
  , y1e = ae(AR)`
  margin-top: 12px;
  margin-bottom: 3px;
`
  , Ph = ae(Xe)`
  margin-bottom: 6px;
  pointer-events: none;
`
  , $h = ae(Lt)`
  padding: 16px 32px 32px 32px;
  margin-bottom: -4px;
  & button {
    margin: 4px;
    margin-right: 16px;
    &:last-child {
      margin-right: 0;
    }
  }
  ${t=>t.$divider && `border-top: 1px solid ${t.theme.color.bgBorder};`}
`;
function C1e(t, e) {
    const n = SE(e.action);
    return t.query(b1e, {
        minSimilarity: n,
        ...e
    }, {
        cache: e.useCache !== void 0 ? e.useCache : !0
    })
}
const b1e = Mt.gql`
  query SimilarIssues($issueId: String, $text: String, $topK: Int = 5, $minSimilarity: Float) {
    similarIssueIds(issueId: $issueId, text: $text, first: $topK, minSimilarity: $minSimilarity) {
      id
      metadata
    }
  }
`;
function Y2e(t, e) {
    const n = SE(e.action);
    return t.query(v1e, {
        ...e,
        minSimilarity: n
    }, {
        cache: e.useCache !== void 0 ? e.useCache : !0
    })
}
const v1e = Mt.gql`
  query SimilarIssuesBatch($issueIds: [String!]!, $topK: Int = 5, $minSimilarity: Float) {
    similarIssueIdsBatch(issueIds: $issueIds, first: $topK, minSimilarity: $minSimilarity) {
      id
      results {
        id
        metadata
      }
    }
  }
`
  , y7 = {
    creation: .9,
    triage: .875,
    markDuplicate: .8
};
var u3;
(function(t) {
    t.creation = "creation",
    t.triage = "triage",
    t.markDuplicate = "markDuplicate"
}
)(u3 || (u3 = {}));
const SE = t=>{
    switch (t) {
    case "creation":
        return mn.getValue(mn.similarIssuesCreationMinSimilarity, y7.creation);
    case "triage":
        return mn.getValue(mn.similarIssuesTriageMinSimilarity, y7.triage);
    case "markDuplicate":
        return mn.getValue(mn.similarIssuesMarkDuplicateMinSimilarity, y7.markDuplicate);
    default:
        return .8
    }
}
;
// wzhudev's note: In this file Linear compiles decorator util function for 74 times :)
// Each decorator maps 
// Better to extract them to a single file.
function Pe(t, e, n, r) {
    // Search this line for other decorators.
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
// Model definition: issues
const Vs = class Vs extends Xc {
    static teamKeyFromIdentifier(e) {
        return e.split("-")[0].toUpperCase()
    }
    static issueNumberFromIdentifier(e) {
        const n = Number(e.split("-")[1]);
        return Number.isNaN(n) || n === 0 ? void 0 : n
    }
    get author() {
        var e;
        return this.creator ?? ((e = this.externalUserCreator) == null ? void 0 : e.value)
    }
    get identifier() {
        return `${this.team.key}-${this.number || this.team.nextIssueNumber}`
    }
    get availableLabels() {
        return this.team.allIssueLabels.filter(e=>this.labels.indexOf(e) < 0)
    }
    get assignedToSuspendedUser() {
        return this.assignee ? !this.assignee.isActive : !1
    }
    get triageIssueSource() {
        const e = [G.front, G.zendesk, G.intercom];
        return !!(this.sourceMetadata && (this.sourceMetadata.type === "integration" && this.sourceMetadata.subType && e.includes(this.sourceMetadata.subType) || this.sourceMetadata.type === "oauthClient"))
    }
    get relationshipType() {
        return this.parent ? Ns.subIssue : Ns.root
    }
    get dueDateQualifier() {
        return _u.qualifierForDueDate(this.dueDate)
    }
    get isImported() {
        return !!this.issueImport
    }
    get searchableContent() {
        var e;
        return this.title + " " + (((e = this.documentContent.value) == null ? void 0 : e.markdownContent) || "")
    }
    get isAutoClosed() {
        return this.autoClosedAt ? "true" : "false"
    }
    get isAutoArchived() {
        return this.autoArchivedAt ? "true" : "false"
    }
    get isReadOnly() {
        return this.isArchived || this.trashed === !0
    }
    get isAsksIssue() {
        var e;
        return ((e = this.sourceMetadata) == null ? void 0 : e.subType) === G.slackAsks
    }
    get slaStatus() {
        return q0.status(this)
    }
    get isSlaBreached() {
        return this.completedAt ? this.slaBreachesAt ? this.completedAt.getTime() > this.slaBreachesAt.getTime() : !1 : this.slaBreachesAt ? pi() > this.slaBreachesAt.getTime() : !1
    }
    get lastActivityAt() {
        var e;
        return (e = this.activities.last) == null ? void 0 : e.updatedAt
    }
    get activeSubscribers() {
        return this.subscribers.filter(e=>e.isActive)
    }
    get leadTime() {
        if (this.completedAt != null)
            return this.completedAt.getTime() - this.createdAt.getTime()
    }
    get cycleTime() {
        if (!(this.completedAt == null || this.startedAt == null))
            return this.completedAt.getTime() - this.startedAt.getTime()
    }
    get ageTime() {
        if (!(this.completedAt != null || this.canceledAt != null))
            return Date.now() - this.createdAt.getTime()
    }
    get triageTime() {
        if (!(this.startedTriageAt == null || this.triagedAt == null))
            return this.triagedAt.getTime() - this.startedTriageAt.getTime()
    }
    isSaved() {
        return this.number !== void 0
    }
    clone(e) {
        const n = super.clone(e);
        return lt(()=>{
            n.lastAppliedTemplate = this.lastAppliedTemplate
        }
        ),
        n
    }
    constructor(e=!0) {
        super(e),
        this.skipUpdatedAtKeys = new Set(["cycleId", "sortOrder", "subIssueSortOrder", "subscriberIds"]),
        this.title = "",
        this.externalEntityRelations = new Et(Qr,this,"issueId"),
        this.children = new Et(Vs,this,"parentId",new de("subIssueSortOrder").and("createdAt"),{
            canSkipHydration: ()=>!this.getTrait(T8.hasChildren)
        }),
        this.draftChildren = new te(new de("createdAt","asc")),
        this.reminders = new te(new de(n=>n.createdAt.valueOf(),"desc")),
        this.notifications = new te,
        this.activities = new te(new de("updatedAt","asc")),
        this.subscribers = new te,
        this.sortOrder = 0,
        this.previousIdentifiers = [],
        this.labels = new te(new de(n=>`${n.parent ? `0${n.parent.name}` : 1}${n.name}`)),
        this.comments = new Et(nt,this,"issueId"), // Here LazyReferenceCollectionImpl is manually constructed
        this.draftComments = new te(new de("createdAt","asc")),
        this.history = new Et(tt,this,"issueId"),
        this.attachments = new Et(mr,this,"issueId"),
        this.relations = new te(new de("type").and("createdAt", "desc")),
        this.inverseRelations = new te(new de("type").and("createdAt", "desc")),
        this.preserveSortOrderOnCreate = !1,
        this.reactionData = [],
        this.similarIssuesHydratedAt = null,
        this.similarIssues = new te,
        this.similarIssuesMetadata = {},
        this.isTemplateWithNoDefaultTeam = !1,
        this.toggleFavorite = ()=>{
            if (this.favorite)
                return this.favorite.delete(),
                !1;
            const n = Rt.create({
                reference: this
            });
            return n.save(!0),
            n
        }
        ,
        e && this.makeObservable()
    }
    asksIssueRequester() {
        var e, n;
        if (((e = this.sourceMetadata) == null ? void 0 : e.subType) === G.slackAsks && ((n = this.sourceMetadata) != null && n.asksMetadata)) {
            if (this.sourceMetadata.asksMetadata.requesterUserId)
                return this.store.findById(K, this.sourceMetadata.asksMetadata.requesterUserId);
            if (this.sourceMetadata.asksMetadata.requesterExternalUserId)
                return this.store.findById(qn, this.sourceMetadata.asksMetadata.requesterExternalUserId)
        }
    }
    hasRelationCharacteristicType(e) {
        switch (e) {
        case Ns.root:
            return this.parent === void 0;
        case Ns.parent:
            return this.children.length !== 0;
        case Ns.subIssue:
            return this.parent !== void 0;
        case Ns.blocking:
            return this.blockingRelations.length !== 0;
        case Ns.blocked:
            return this.blockedByRelations.length !== 0;
        case Ns.notBlocked:
            return this.blockedByRelations.length === 0;
        case Ns.related:
            return this.relatedRelations.length !== 0;
        case Ns.duplicateOf:
            return this.duplicateOfRelation !== void 0;
        case Ns.hasDuplicates:
            return this.duplicateRelations.length !== 0;
        default:
            return !1
        }
    }
    hasDueDateQualifierType(e) {
        const n = this.dueDateQualifier;
        return e === mo.due ? n !== mo.none : n === e
    }
    get isOpen() {
        return !this.state.isClosed
    }
    get doneAt() {
        return this.isOpen ? void 0 : this.completedAt || this.canceledAt || this.autoClosedAt
    }
    get initiatives() {
        var e, n;
        return (((e = this.project) == null ? void 0 : e.initiatives.length) ?? 0) > 0 ? (n = this.project) == null ? void 0 : n.initiatives : void 0
    }
    get blockingRelations() {
        return this.relations.hydratedElements.filter(e=>e.type === _n.blocks && e.issue.value.isOpen === !0 && e.relatedIssue.value.isOpen === !0).map(e=>({
            issue: e.relatedIssue.value,
            relation: e,
            inverse: !1,
            icon: e.icon,
            inverseIcon: e.inverseIcon
        }))
    }
    get blockedByRelations() {
        return this.isOpen ? this.inverseRelations.hydratedElements.filter(e=>{
            var n;
            return e.type === _n.blocks && ((n = e.issue.value) == null ? void 0 : n.isOpen) === !0
        }
        ).map(e=>({
            issue: e.issue.value,
            relation: e,
            inverse: !0,
            icon: e.inverseIcon,
            inverseIcon: e.icon
        })) : []
    }
    get relatedRelations() {
        return this.relations.hydratedElements.filter(e=>e.type === _n.related || e.type === _n.blocks && (!e.issue.value.isOpen || !e.relatedIssue.value.isOpen)).map(e=>({
            issue: e.relatedIssue.value,
            relation: e,
            inverse: !1,
            icon: e.icon,
            inverseIcon: e.inverseIcon
        })).concat(this.inverseRelations.hydratedElements.filter(e=>e.type === _n.related || e.type === _n.blocks && (!e.issue.value.isOpen || !e.relatedIssue.value.isOpen)).map(e=>({
            issue: e.issue.value,
            relation: e,
            inverse: !0,
            icon: e.inverseIcon,
            inverseIcon: e.icon
        })))
    }
    get duplicateRelations() {
        return this.inverseRelations.hydratedElements.filter(e=>e.type === _n.duplicate).map(e=>({
            issue: e.issue.value,
            relation: e,
            inverse: !0,
            icon: e.inverseIcon,
            inverseIcon: e.icon
        }))
    }
    get duplicateOfRelation() {
        return this.relations.hydratedElements.filter(e=>e.type === _n.duplicate).map(e=>({
            issue: e.relatedIssue.value,
            relation: e,
            inverse: !1,
            icon: e.icon,
            inverseIcon: e.inverseIcon
        }))[0]
    }
    get hasBlockingRelations() {
        return this.blockingRelations.length > 0
    }
    get hasBlockedByRelations() {
        return this.blockedByRelations.length > 0
    }
    get hasRelatedRelations() {
        return this.relatedRelations.length > 0
    }
    get hasDuplicateRelations() {
        return this.duplicateRelations.length > 0 || this.duplicateOfRelation !== void 0
    }
    get allChildren() {
        return this.children.reduce((e,n)=>e.concat(n, ...n.allChildren), [])
    }
    get subIssueProgress() {
        if (this.children.length !== 0)
            return er.progress(this.children.elements)
    }
    get totalSubIssueEstimatePoints() {
        return er.totalEstimatePoints(this.children.elements)
    }
    get branchName() {
        var n;
        if (this.attachments.length === 1 && ((n = this.attachments.first) != null && n.isPullRequest)) {
            const s = this.attachments.first.metadata;
            if (s != null && s.branch && (s == null ? void 0 : s.linkKind) !== a9.links)
                return s.branch
        }
        const e = this.team.organization.gitBranchFormat || t4.defaultFormat;
        return t4.branchName(e, {
            username: Wr().user.displayName,
            issueIdentifier: this.identifier,
            issueTitle: this.title
        })
    }
    get parents() {
        if (!this.parent)
            return new Jt([]);
        if (this.parent.value) {
            const e = [];
            let n = this.parent.value;
            for (; n; )
                if (e.push(n),
                n.parent)
                    if (n.parent.value)
                        n = n.parent.value;
                    else
                        break;
                else
                    return new Jt(e)
        }
        return new Jt(async(e,n)=>{
            try {
                const r = await this.parent;
                if (!r)
                    e([]);
                else {
                    const s = await r.parents;
                    e([r, ...s])
                }
            } catch (r) {
                n(r)
            }
        }
        )
    }
    getTrait(e) {
        return cD(this.traits, e)
    }
    static createSubIssue({team: e, user: n, parentIssue: r, previousIssue: s, baseIssue: i}) {
        return Vs.create(n, {
            team: e,
            parentIssue: r,
            skipDefaultTemplate: !0,
            project: r.project,
            subIssueSortOrder: ur.lastSortOrder(r.children, "subIssueSortOrder"),
            baseIssue: i,
            ...s ? {
                estimate: s.estimate,
                assignee: s.assignee,
                labels: s.labels.elements,
                cycle: s.cycle,
                priority: s.priority
            } : {}
        })
    }
    static create(e, n) {
        var P;
        const {team: r, baseIssue: s, title: i, descriptionData: a, priority: o, assignee: l, estimate: d, parentIssue: u, cycle: h, project: f, projectMilestone: p, state: m, labels: g, template: C, lastAppliedTemplate: b, referenceComment: k, skipDefaultTemplate: S, skipStateOverride: D, overrideTemplateFields: R, createdFromDraftId: T, referencedCommentId: B, sourceComment: z, subIssueSortOrder: W, relatedIssue: fe, relatedIssueType: me="reference", subIssues: _e=[]} = n
          , I = s ?? Vs.createEmpty();
        if (I.title = i || "",
        I.team = r ?? e.defaultTeamForIssues,
        I.isTemplateWithNoDefaultTeam = !r,
        I.state = m && r === m.team && (r.userCanChangeIssueStatus(e) || D) ? m : m ? I.team.defaultStateForType(m.type) : I.team.defaultState(e),
        I.priority = o || I.priority || Nr.createFromPriority(0),
        l && (I.assignee = l),
        W && (I.subIssueSortOrder = W),
        B && (I.referenceComment = this.store.findById(nt, B)),
        I.estimate = d,
        I.referenceComment = k,
        I.createdFromDraftId = T,
        u) {
            if (I.parent = Qn.wrap(u),
            I.priority = o || u.priority,
            !I.assignee && u.assignee && u.children.length > 0 && u.children.elements.every(A=>A.assignee === u.assignee) && (I.assignee = u.assignee),
            !D && I.team.userCanChangeIssueStatus(e))
                switch (u.state.type) {
                case ye.started:
                case ye.unstarted:
                case ye.completed:
                    I.state = I.team.defaultActiveState;
                    break;
                case ye.triage:
                    I.state = I.team.triageIssueState || I.team.defaultBacklogState;
                    break;
                case ye.canceled:
                case ye.backlog:
                    I.state = I.team.defaultBacklogState;
                    break;
                default:
                    new zt(u.state.type)
                }
            I.team.cyclesEnabled && u.team === r && I.state.isActive && u.cycle && !u.cycle.isCompleted && I.addToCycle(u.cycle),
            u.project && I.team.projects.contains(u.project) && I.setProjectAndMilestone(u.project, u.projectMilestone)
        }
        if (fe) {
            const A = new cl;
            me === "blockedBy" ? (A.type = _n.blocks,
            A.issue = Qn.wrap(fe),
            A.relatedIssue = Qn.wrap(I),
            A.save(!0)) : me === "blocks" ? (A.type = _n.blocks,
            A.issue = Qn.wrap(I),
            A.relatedIssue = Qn.wrap(fe),
            A.save(!0)) : (A.type = _n.related,
            A.issue = Qn.wrap(I),
            A.relatedIssue = Qn.wrap(fe),
            A.save(!0))
        }
        z && (I.sourceComment = Qn.wrap(z)),
        !I.assignee && l !== null && e.settings.autoAssignToSelf && !I.state.isTriage && (I.project && I.project.members.length > 0 ? I.project.members.contains(e) && (I.assignee = e) : I.assignee = e),
        I.team.cyclesEnabled && !I.cycle && (I.team.userCanChangeIssueStatus(e) && h && !h.isCompleted ? I.addToCycle(h) : I.team.cycleLockToActive && I.state.isActive && I.addToCycle(I.team.activeCycle ?? I.team.upcomingCycle(0))),
        f && f.accessibleTeams.contains(I.team) && (I.project = f,
        p && ((P = I.project) != null && P.projectMilestones.contains(p)) && (I.projectMilestone = p));
        const Q = C || (S ? void 0 : e.memberOf(I.team) ? I.team.defaultTemplateForMembers : I.team.defaultTemplateForNonMembers);
        g && g.filter(A=>!A.team || A.team === r).forEach(A=>I.labels.add(A)),
        Q && I.applyTemplate(Q, e),
        !Q && b && (I.lastAppliedTemplate = b),
        R == null || R.forEach(A=>{
            n[A] && (I[A] = n[A])
        }
        ),
        a && en.getOrCreateFrom(I).replaceWithContent(a);
        for (const A of _e)
            Vs.create(e, {
                parentIssue: I,
                ...A,
                team: r
            }).save(!0);
        return I
    }
    prepareForAdd() {
        this.state || (this.state = this.cycle ? this.team.defaultActiveState : this.team.defaultState(this.creator)),
        this.preserveSortOrderOnCreate || (this.sortOrder = this.state.firstSortOrder()),
        this.number = this.team.nextIssueNumber,
        this.creator = Wr().user
    }
    moveToTeam(e, n, r={}) {
        var d, u, h;
        const {skipSortOrderChange: s} = r
          , i = this.identifier
          , a = v4.getPossiblePreviousIssueNumberForTeam(this.previousIdentifiers, e.key);
        let o;
        a ? o = a : o = ((d = this.clonedFromModel) == null ? void 0 : d.team) === e ? this.clonedFromModel.number : e.nextIssueNumber,
        this.team = e;
        let l = e.defaultState(n, {
            preferredState: e.states.find(f=>{
                var p;
                return f.filterMatchValue === ((p = this.state) == null ? void 0 : p.filterMatchValue)
            }
            ) || e.states.find(f=>{
                var p;
                return f.type === ((p = this.state) == null ? void 0 : p.type)
            }
            )
        });
        n && e.triageEnabled && !l.isTriage && !this.team.userIsMember(n) && e.triageIssueState && (l = e.triageIssueState),
        this.assignToState(l, void 0, {
            skipSortOrderChange: s
        }),
        (u = this.state) != null && u.isActive && e.cycleLockToActive ? this.addToCycle(e.activeCycle, {
            skipSortOrderChange: s
        }) : this.addToCycle(void 0, {
            skipSortOrderChange: s
        }),
        (h = this.project) != null && h.accessibleTeams.contains(e) || (this.project && !this.project.persisted ? this.project.administrableTeams.add(e) : this.project ? new k8({
            title: `${this.team.name} team is not in ${this.project.name}`,
            description: `The ${this.team.name} team is not currently part of the project. Would you like to add ${this.team.name} to the project? If not, this issue must be created outside the project.`,
            confirmButtonTitle: "Add team",
            cancelButtonTitle: "Create issue outside project"
        }).show().then(f=>{
            f === u0.confirm && this.project ? (this.project.administrableTeams.add(this.team),
            this.project.save(),
            this.setProjectAndMilestone(this.project, this.projectMilestone)) : this.setProjectAndMilestone(void 0, void 0)
        }
        ) : this.setProjectAndMilestone(void 0)),
        this.number && (this.previousIdentifiers.includes(i) || this.previousIdentifiers.push(i),
        this.number = o)
    }
    assignToState(e, n, r={}) {
        const s = this.state;
        if (e === s)
            return;
        e.isActive && this.cycle === void 0 && this.team.cycleLockToActive && this.addToCycle(this.team.activeCycle);
        const i = s && Jc.isStateBefore(e, s);
        if (r.skipSortOrderChange || this.team.setIssueSortOrderOnStateChange === Gy.noAction)
            this.sortOrder = this.sortOrder + Math.random() * 1e-4;
        else {
            const a = i || e.isClosed;
            this.sortOrder = n === void 0 ? this.team.setIssueSortOrderOnStateChange === Gy.last && !a ? e.lastSortOrder() : e.firstSortOrder() : e.sortOrderForIssueDropLocation(n)
        }
        this.state = e,
        (e.isBacklog || e.isTriage) && this.cycle && this.addToCycle(void 0)
    }
    applyTemplate(e, n, r={}) {
        var l;
        const {overwrite: s=!1, subIssuesInheritParentProperties: i=!0} = r
          , a = e.templateData
          , o = this.team;
        if (a && this.store) {
            if (this.lastAppliedTemplate && this.isClone && this.clearTemplate(this.lastAppliedTemplate),
            a.title && (!this.title || s) && (this.title = a.title),
            this.applyIssueTemplateFields(this, n, a, {
                ...r,
                templateTeam: e.team
            }),
            (l = a.descriptionData) != null && l.content) {
                const d = en.getOrCreateFrom(this);
                !d.contentData || !d.hasContent || s ? d.replaceWithContent(a.descriptionData) : d.replaceWithContent({
                    ...d.contentData,
                    content: [...d.contentData.content, ...a.descriptionData.content]
                })
            }
            a.children && a.children.map(d=>{
                var h, f, p, m;
                const u = Vs.createEmpty();
                u.team = o,
                u.title = d.title || "",
                this.applyIssueTemplateFields(u, n, Object.assign({}, d, i ? {
                    projectId: d.projectId ?? ((h = this.project) == null ? void 0 : h.id),
                    projectMilestoneId: d.projectMilestoneId ?? ((f = this.projectMilestone) == null ? void 0 : f.id)
                } : {}), r),
                d.descriptionData && en.getOrCreateFrom(u).replaceWithContent(d.descriptionData),
                u.parent = Qn.wrap(this),
                u.subIssueSortOrder = ur.lastSortOrder(this.children, "subIssueSortOrder"),
                d.lastAppliedTemplateId && (u.lastAppliedTemplate = this.store.findById(On, d.lastAppliedTemplateId)),
                u.save(!0),
                (m = (p = u.documentContent) == null ? void 0 : p.value) == null || m.save(!0)
            }
            ),
            this.lastAppliedTemplate = e
        }
    }
    clearTemplate(e) {
        var r, s, i;
        const n = e.templateData;
        n && (n.title === this.title && (this.title = ""),
        (r = this.documentContent.value) != null && r.hasContentEqualTo(n.descriptionData) && this.documentContent.value.replaceWithContent(G3()),
        n.labelIds && n.labelIds.length > 0 && n.labelIds.forEach(a=>{
            const o = this.team.allIssueLabels.findById(a);
            o && this.labels.remove(o)
        }
        ),
        n.priority !== void 0 && n.priority === this.priority.priority && (this.priority = Nr.createFromPriority(0)),
        n.assigneeId && n.assigneeId === ((s = this.assignee) == null ? void 0 : s.id) && (this.assignee = void 0),
        this.state.id === n.stateId && this.assignToState(this.team.defaultState(), void 0, {
            skipSortOrderChange: !0
        }),
        n.projectId === ((i = this.project) == null ? void 0 : i.id) && this.setProjectAndMilestone(void 0),
        n.children && n.children.forEach(a=>{
            const o = this.children.find(l=>{
                var f, p;
                const d = l.title === a.title
                  , u = !a.descriptionData && !((f = l.documentContent.value) != null && f.hasContent)
                  , h = !!((p = l.documentContent.value) != null && p.hasContentEqualTo(a.descriptionData));
                return d && (u || h)
            }
            );
            o && o.trash()
        }
        ),
        this.lastAppliedTemplate = void 0)
    }
    addToCycle(e, n={}) {
        var r;
        n.skipSortOrderChange && (this.sortOrder = this.sortOrder + Math.random()),
        e === void 0 || (e == null ? void 0 : e.team) === this.team ? (this.cycle = e,
        e && (!this.state || this.state.isBacklog || this.state.isTriage) && (this.state = this.team.defaultActiveState),
        this.team.cycleLockToActive && e === void 0 && ((r = this.state) != null && r.isActive) && this.team.activeCycle && (this.state = this.team.defaultBacklogState)) : this.cycle = void 0
    }
    addToProjectMilestone(e) {
        return e ? (this.setProjectAndMilestone(this.project, e),
        !0) : (this.setProjectAndMilestone(this.project, void 0),
        !1)
    }
    async addToProject(e, n, r) {
        if (!e)
            return this.setProjectAndMilestone(void 0, void 0),
            !1;
        const s = e.accessibleTeams;
        if (s.contains(this.team))
            return this.setProjectAndMilestone(e, n),
            !0;
        if (r != null && r.addTeamToProject)
            return e.administrableTeams.add(this.team),
            e.save(),
            this.setProjectAndMilestone(e, n),
            !0;
        const i = await new l1e({
            title: `${this.team.name} team is not in ${e.name}`,
            description: `The ${this.team.name} team is not currently part of the project. Would you like to add ${this.team.name} to the project? If not, you must change the issue's team.`,
            confirmButtonTitle: "Confirm",
            cancelButtonTitle: "Cancel",
            inputType: "dropdown",
            options: {
                selectedText: "addTeam",
                dropdownOptions: [{
                    id: "addTeam",
                    value: "addTeam",
                    label: `Add ${this.team.name} to the project`,
                    model: this.team
                }, ...s.map(o=>({
                    id: o.id,
                    value: o.id,
                    label: `Move issue to ${o.name}`,
                    model: o
                }))]
            }
        }).show();
        if (i === void 0)
            return !1;
        if (i === "addTeam")
            return e.administrableTeams.add(this.team),
            e.save(),
            this.setProjectAndMilestone(e, n),
            !0;
        const a = e.accessibleTeams.findById(i);
        return a ? (this.moveToTeam(a),
        this.setProjectAndMilestone(e, n),
        !0) : !1
    }
    setProjectAndMilestone(e, n) {
        if (!e) {
            this.project = void 0,
            this.projectMilestone = void 0;
            return
        }
        if (n && e.id !== n.project.id)
            throw new Error("Project milestone does not belong to the given project");
        this.project = e,
        this.projectMilestone = n
    }
    setEstimate(e) {
        this.estimate = e
    }
    get eligibleForDraft() {
        var e;
        return (this.title.length > 0 || (((e = this.documentContent.value) == null ? void 0 : e.hasContent) ?? !1)) && !this.isUnchangedTemplate()
    }
    applyDraftValues(e, n) {
        const {title: r, descriptionData: s, teamId: i, priority: a, assigneeId: o, estimate: l, parentIssue: d, projectId: u, projectMilestoneId: h, stateId: f, cycleId: p, labels: m, attachments: g, dueDate: C, lastAppliedTemplate: b} = e
          , k = i ? this.store.findById(ne, i) : void 0;
        k && k !== this.team && (this.team ? this.moveToTeam(k) : this.team = k),
        this.title = r,
        this.priority = a,
        this.estimate = l,
        this.dueDate = C;
        const S = o ? this.store.findById(K, o) : void 0;
        this.assignee = S;
        const D = u ? this.store.findById(ie, u) : void 0
          , R = h ? this.store.findById(qt, h) : void 0;
        this.setProjectAndMilestone(D, R);
        const T = f ? this.store.findById(on, f) : void 0;
        T && T !== this.state && T.team === this.team && this.assignToState(T);
        const B = p ? this.store.findById(ct, p) : void 0;
        B && B.team === this.team && this.addToCycle(B);
        const z = this.labels.map(fe=>fe.id);
        for (const fe of m.elements)
            !fe.isArchived && !z.includes(fe.id) && (!fe.team || fe.team === this.team) && this.labels.add(fe);
        const W = this.attachments.map(fe=>fe.url);
        if (g) {
            for (const fe of g)
                if (!W.includes(fe.url)) {
                    const me = mr.createFromDraftAttachment(fe, this);
                    this.attachments.add(me)
                }
        }
        this.createdFromDraftId = e.id,
        this.parent = n ? Qn.wrap(n) : d ? Qn.wrap(d) : void 0,
        s && en.getOrCreateFrom(this).replaceWithContent(s),
        b && (this.lastAppliedTemplate = b);
        for (const fe of e.children.elements) {
            const me = Vs.createEmpty();
            me.applyDraftValues(fe, this),
            me.subIssueSortOrder = ur.lastSortOrder(this.children, "subIssueSortOrder"),
            me.save(!0)
        }
    }
    markNotificationAsRead(e) {
        const n = this.notifications.find(s=>s.id === e || s.groupingEntityId === e);
        if (!n)
            return;
        const r = n == null ? void 0 : n.groupingEntityId;
        this.notifications.forEach(s=>{
            s.readAt === void 0 && s.groupingEntityId === r && (s.markAsRead(),
            s.save())
        }
        )
    }
    markNonImportantNotificationsAsRead() {
        const e = n=>n.type === $.issueSlaBreached || n.type === $.issueSlaHighRisk || n.type === $.issueReminder || n.type === $.issuePriorityUrgent;
        this.notifications.forEach(n=>n.commentId || e(n) ? !1 : (n.markAsRead(),
        n.save(),
        !0))
    }
    matchInlineFind(e) {
        return ml(this.identifier + " " + this.title).toLowerCase().indexOf(e) !== -1
    }
    async hydrateSimilarIssues(e) {
        if (!this.shouldHydrateSimilarIssues())
            return this.similarIssues;
        e ? this.similarIssuesHydratedAt = void 0 : this.similarIssuesHydratedAt = new Date;
        try {
            const n = await C1e(this.store.graphQLClient, {
                ...e ? {
                    text: e
                } : {
                    issueId: this.id
                },
                topK: 3,
                action: e ? u3.creation : u3.triage,
                useCache: this.store.user.settings.debugShowSimilarIssues ? !1 : void 0
            });
            await this.setSimilarIssueResults(n.similarIssueIds)
        } catch (n) {
            F.error("Similar issues hydration failed", n, {
                issueId: this.id
            })
        }
        return this.similarIssues
    }
    resetSimilarIssues() {
        this.similarIssues.clear(),
        this.similarIssuesHydratedAt = void 0
    }
    async hydrateSimilarIssuesFromBatch(e) {
        return this.similarIssuesHydratedAt = new Date,
        await this.setSimilarIssueResults(e),
        this.similarIssues
    }
    shouldHydrateSimilarIssues() {
        const e = this.team.organization.approximateIssueCount > 150;
        return this.store.user.settings.debugShowSimilarIssues || e && (!this.similarIssuesHydratedAt || this.similarIssuesHydratedAt < pj(new Date, 24) || this.updatedAt > this.similarIssuesHydratedAt)
    }
    isUnchangedTemplate() {
        if (!this.lastAppliedTemplate)
            return !1;
        function e(o, l) {
            var h;
            let d = o;
            const u = (h = o.children) == null ? void 0 : h.map((f,p)=>{
                var m;
                return e(f, (m = l == null ? void 0 : l.children) == null ? void 0 : m[p])
            }
            );
            if (o.teamId && (l == null ? void 0 : l.teamId) === null) {
                const {stateId: f, projectId: p, projectMilestoneId: m, teamId: g, ...C} = o;
                d = {
                    ...C,
                    teamId: l == null ? void 0 : l.teamId
                }
            }
            return pd({
                ...d,
                lastAppliedTemplateId: void 0,
                descriptionData: Bd(d.descriptionData),
                children: u
            }, f=>f !== void 0)
        }
        function n(o, l) {
            var p, m;
            const d = (p = o.children) == null ? void 0 : p.map(g=>n(g, l))
              , u = o.teamId ? l.store.findById(ne, o.teamId) ?? l.team : l.team
              , h = (m = o.labelIds) == null ? void 0 : m.filter(g=>!!u.allIssueLabels.findById(g))
              , f = o.stateId ? !!u.states.findById(o.stateId) : !1;
            return pd({
                ...o,
                descriptionData: Bd(o.descriptionData),
                children: d,
                stateId: f ? o.stateId : void 0,
                labelIds: (h == null ? void 0 : h.length) !== 0 ? h : void 0,
                teamId: o.teamId === null ? null : u.id,
                lastAppliedTemplateId: void 0
            }, g=>g !== void 0)
        }
        const r = this.lastAppliedTemplate.templateData
          , s = n(Fa(r), this)
          , i = this.getDataForTemplate(this.lastAppliedTemplate)
          , a = e(i, s);
        return Yo(s, a)
    }
    getDataForTemplate(e) {
        var n, r, s, i, a;
        return pd({
            title: this.title,
            descriptionData: (n = this.documentContent.value) == null ? void 0 : n.contentData,
            priority: this.priority.priority,
            assigneeId: (r = this.assignee) == null ? void 0 : r.id,
            labelIds: this.labels.length ? this.labels.map(o=>o.id) : void 0,
            stateId: this.isTemplateWithNoDefaultTeam ? void 0 : this.state.id,
            projectId: this.isTemplateWithNoDefaultTeam || (s = this.project) == null ? void 0 : s.id,
            projectMilestoneId: (i = this.projectMilestone) == null ? void 0 : i.id,
            teamId: this.isTemplateWithNoDefaultTeam ? null : this.team.id,
            children: this.children.length ? this.children.map(o=>o.getDataForTemplate(e)) : void 0,
            lastAppliedTemplateId: (a = this.lastAppliedTemplate) == null ? void 0 : a.id
        }, o=>o !== void 0)
    }
    applyIssueTemplateFields(e, n, r, s) {
        const i = this.store;
        if (e.isTemplateWithNoDefaultTeam = !1,
        r.teamId && r.teamId !== e.team.id) {
            const a = i.findById(ne, r.teamId);
            a && (e.team ? e.moveToTeam(a) : e.team = a)
        }
        if (r.teamId === void 0 && (s != null && s.templateTeam) && s.templateTeam !== e.team && e.moveToTeam(s.templateTeam),
        r.teamId === null && (s != null && s.allowTemplateWithNoDefaultTeam) && (e.isTemplateWithNoDefaultTeam = !0),
        r.teamId === void 0 && !(s != null && s.templateTeam) && (s != null && s.allowTemplateWithNoDefaultTeam) && (e.isTemplateWithNoDefaultTeam = !0),
        r.labelIds && r.labelIds.length > 0 && r.labelIds.forEach(a=>{
            const o = e.team.allIssueLabels.findById(a);
            !o || o.team && o.team !== e.team || (o.parent && e.labels.filter(l=>l.parent === o.parent).forEach(l=>{
                e.labels.remove(l)
            }
            ),
            !o.isGroup && e.labels.add(o))
        }
        ),
        r.priority !== void 0 && (e.priority = Nr.createFromPriority(r.priority)),
        r.assigneeId && (e.assignee = i.findById(K, r.assigneeId)),
        r.stateId) {
            const a = e.team.states.findById(r.stateId);
            a && e.team === a.team && e.assignToState(a)
        }
        if ((!e.state || e.state.team !== e.team) && e.assignToState(e.team.defaultState(n)),
        r.projectId) {
            const a = i.findById(ie, r.projectId)
              , o = r.projectMilestoneId ? i.findById(qt, r.projectMilestoneId) : void 0;
            e.setProjectAndMilestone(a, o)
        }
    }
    async setSimilarIssueResults(e) {
        const n = e.map(r=>r.id);
        if (e && n && n.length > 0) {
            const r = (await Promise.all(n.map(i=>this.store.hydrateModel(Vs, i)))).concrete()
              , s = oF(n, r.map(i=>i.id));
            if (s.length > 0) {
                const i = (await Promise.all(s.map(a=>this.store.findArchivedById(Vs, a)))).concrete();
                r.push(...i)
            }
            this.similarIssues.clear(),
            r.forEach(i=>{
                this.similarIssues.add(i)
            }
            ),
            this.similarIssuesMetadata = e.reduce((i,a)=>(i[a.id] = a.metadata,
            i), {})
        }
    }
}
;
Vs.usedForPartialIndexes = !0,
Vs.loadStrategy = dn.partial,
Vs.partialLoadMode = ki.regular;
/** Model Issue. */
let re = Vs;
// "w" should be marking that this field is a "property" of "Issue".
Pe([w({
    persistance: ee.none, // this should not be persisted in the database
    indexed: !0 // this field should be indexed in db
})], re.prototype, "number", void 0);
Pe([w()], re.prototype, "title", void 0);
Pe([kl({ // lazy reference to documentContent
    nullable: !0
})], re.prototype, "documentContent", void 0);
Pe([pe(()=>ne, "issues", { // back reference to team
    // A team should have many issues. It is an n-1 mapping. ne is actually the class of "Team"
    optional: !1, // An issue must belong to a team
    nullable: !1, // An issue must belong to a team
    indexed: !0, // we may want to get all issues of a team
})], re.prototype, "team", void 0);
Pe([pe(()=>ct, "issues", {
    nullable: !0, // An issue can belong to no cycle.
    indexed: !0, // Issue should build index on cycleId. This is related to partial loading.
    onDelete: "SET NULL", // when the cycle is removed, the issue should set it's cycle field to null
    onArchive: "NO ACTION" // when the cycle is archived, LSE should do nothing
})], re.prototype, "cycle", void 0);
Pe([pe(()=>ie, "issues", {
    nullable: !0,
    indexed: !0,
    onDelete: "SET NULL",
    onArchive: "CASCADE"
})], re.prototype, "project", void 0);
Pe([pe(()=>qt, "issues", {
    nullable: !0,
    indexed: !0,
    onDelete: "SET NULL",
    onArchive: "CASCADE"
})], re.prototype, "projectMilestone", void 0);
Pe([Hr(()=>re, "children", {
    nullable: !0,
    indexed: !0
})], re.prototype, "parent", void 0);
Pe([Ue(()=>On, {
    nullable: !0,
    indexed: !0
})], re.prototype, "lastAppliedTemplate", void 0);
Pe([Nt()], re.prototype, "externalEntityRelations", void 0); // Nt is the counterpart of `pe`, means 1-n mapping.
Pe([Nt()], re.prototype, "children", void 0);
Pe([xe()], re.prototype, "draftChildren", void 0);
Pe([xe()], re.prototype, "reminders", void 0);
Pe([xe()], re.prototype, "notifications", void 0);
Pe([xe()], re.prototype, "activities", void 0);
Pe([w({
    serializer: P_
})], re.prototype, "priority", void 0);
Pe([w()], re.prototype, "estimate", void 0);
Pe([pe(()=>K, "createdIssues", {
    persistance: ee.none,
    nullable: !0,
    indexed: !0
})], re.prototype, "creator", void 0);
Pe([g5(()=>qn, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], re.prototype, "externalUserCreator", void 0);
Pe([pe(()=>K, "assignedIssues", {
    nullable: !0,
    indexed: !0
})], re.prototype, "assignee", void 0);
Pe([Ue(()=>K, {
    nullable: !0
})], re.prototype, "snoozedBy", void 0);
Pe([ii(()=>K, "subscribedIssues", {
    indexed: !0
})], re.prototype, "subscribers", void 0);
Pe([pe(()=>on, "issues", {
    optional: !1,
    nullable: !1,
    indexed: !0,
    onDelete: "NO ACTION"
})], re.prototype, "state", void 0);
Pe([Hr(()=>Rn, "issues", {
    persistance: ee.none,
    nullable: !0,
    indexed: !0
})], re.prototype, "issueImport", void 0);
Pe([w()], re.prototype, "sortOrder", void 0);
Pe([w()], re.prototype, "subIssueSortOrder", void 0);
Pe([w({
    persistance: ee.none,
    indexed: !0,
    multiEntry: !0
})], re.prototype, "previousIdentifiers", void 0);
Pe([Dt({
    nullable: !0
})], re.prototype, "favorite", void 0);
Pe([Ue(()=>nt, {
    nullable: !0,
    indexed: !0
})], re.prototype, "referenceComment", void 0);
Pe([ii(()=>Ut, "issues", {
    indexed: !0
})], re.prototype, "labels", void 0);
Pe([Nt()], re.prototype, "comments", void 0);
Pe([xe()], re.prototype, "draftComments", void 0);
Pe([Nt()], re.prototype, "history", void 0);
Pe([Nt()], re.prototype, "attachments", void 0);
Pe([w({
    serializer: bt,
    persistance: ee.none
})], re.prototype, "startedAt", void 0);
Pe([w({
    serializer: bt,
    persistance: ee.none
})], re.prototype, "startedTriageAt", void 0);
Pe([w({
    serializer: bt,
    persistance: ee.none
})], re.prototype, "triagedAt", void 0);
Pe([w({
    serializer: bt,
    persistance: ee.none
})], re.prototype, "completedAt", void 0);
Pe([w({
    serializer: bt,
    persistance: ee.none
})], re.prototype, "canceledAt", void 0);
Pe([w({
    serializer: bt,
    persistance: ee.none
})], re.prototype, "autoClosedAt", void 0);
Pe([w({
    serializer: bt,
    persistance: ee.none
})], re.prototype, "autoArchivedAt", void 0);
Pe([w({
    serializer: bt,
    persistance: ee.updateOnly
})], re.prototype, "snoozedUntilAt", void 0);
Pe([w({
    serializer: bt,
    persistance: ee.none
})], re.prototype, "slaStartedAt", void 0);
Pe([w({
    serializer: bt
})], re.prototype, "slaBreachesAt", void 0);
Pe([w({
    persistance: ee.none
})], re.prototype, "sourceMetadata", void 0);
Pe([Hr(()=>nt, "createdIssues", {
    nullable: !0,
    indexed: !0
})], re.prototype, "sourceComment", void 0);
Pe([xe()], re.prototype, "relations", void 0);
Pe([xe()], re.prototype, "inverseRelations", void 0);
Pe([w({
    serializer: Jo
})], re.prototype, "dueDate", void 0);
Pe([w({
    persistance: ee.updateOnly
})], re.prototype, "trashed", void 0);
Pe([w({
    persistance: ee.createOnly
})], re.prototype, "preserveSortOrderOnCreate", void 0);
Pe([w({
    persistance: ee.none
})], re.prototype, "createdFromDraftId", void 0);
Pe([w({
    persistance: ee.none
})], re.prototype, "traits", void 0);
Pe([w({
    persistance: ee.none,
    serializer: hn
})], re.prototype, "reactionData", void 0);
Pe([w({
    persistance: ee.none
})], re.prototype, "isTemplateWithNoDefaultTeam", void 0);
Pe([O], re.prototype, "slaStatus", null);
Pe([O], re.prototype, "isSlaBreached", null);
Pe([O], re.prototype, "lastActivityAt", null);
Pe([O], re.prototype, "activeSubscribers", null);
Pe([O], re.prototype, "initiatives", null);
Pe([O], re.prototype, "blockingRelations", null);
Pe([O], re.prototype, "blockedByRelations", null);
Pe([O], re.prototype, "relatedRelations", null);
Pe([O], re.prototype, "duplicateRelations", null);
Pe([O], re.prototype, "duplicateOfRelation", null);
Pe([O], re.prototype, "parents", null);
Pe([rt], re, "createSubIssue", null);
Pe([rt], re, "create", null);
Pe([rt], re.prototype, "moveToTeam", null);
Pe([rt], re.prototype, "assignToState", null);
Pe([rt], re.prototype, "applyTemplate", null);
Pe([rt], re.prototype, "clearTemplate", null);
Pe([rt], re.prototype, "addToCycle", null);
Pe([rt], re.prototype, "addToProjectMilestone", null);
Pe([rt], re.prototype, "addToProject", null);
Pe([rt], re.prototype, "setProjectAndMilestone", null);
Pe([rt], re.prototype, "setEstimate", null);
Pe([rt], re.prototype, "applyDraftValues", null);
Pe([rt], re.prototype, "markNotificationAsRead", null);
Pe([rt], re.prototype, "markNonImportantNotificationsAsRead", null);
re = Pe([We("Issue")], re); // declare a model "Issue" using We decorator
const vu = "__DRAFT__"
  , w1e = "failsafe_create_issue";
class d2 {
    static set(e, n) {
        ke.set(`${e}_${vu}`, n.serialize())
    }
    static remove(e) {
        ke.remove(`${e}_${vu}`)
    }
    static clearAllDrafts() {
        ke.removeAllWithCondition(e=>e.endsWith(vu) || e.startsWith(w1e))
    }
    static has(e) {
        return ke.getString(`${e}_${vu}`) !== void 0
    }
    static get(e, n, r) {
        const s = ke.get(`${e}_${vu}`);
        if (!s)
            return;
        const i = new n;
        if (lt(()=>{
            i.updateFromData(s)
        }
        ),
        !(r && !r(i)))
            return i
    }
}
class k1e {
    constructor(e) {
        this.name = e
    }
    get metaKey() {
        return `${this.name}_draft-meta`
    }
    getIssueLocalDraft() {
        return d2.get(this.name, Zt, e=>!!e.team)
    }
    setLocalDraftMeta(e) {
        ke.set(this.metaKey, e)
    }
    hasLocalDraft() {
        return !!this.getIssueLocalDraft()
    }
    getLocalDraftMetadata() {
        return ke.get(this.metaKey)
    }
    getLocalDraft() {
        const e = this.getIssueLocalDraft();
        if (!e)
            return;
        const n = this.getLocalDraftMetadata();
        if (!n)
            return e;
        const r = n != null && n.templateId ? e.team.allIssueTemplates.find(s=>s.id === n.templateId) : void 0;
        return r && (e.lastAppliedTemplate = r),
        n != null && n.childrenData && Array.isArray(n.childrenData) && n.childrenData.forEach(s=>{
            const i = Zt.createOrUpdate(e.team, e.creator, {}, e);
            i.updateFromData(s),
            e.children.add(i)
        }
        ),
        e
    }
    setLocalDraft(e, n, r) {
        var i;
        let s;
        e instanceof re ? (s = Zt.createOrUpdateFromIssue(e.team, n, e),
        lt(()=>{
            s.lastAppliedTemplate = e.lastAppliedTemplate;
            for (const a of e.children.elements) {
                const o = Zt.createOrUpdateFromIssue(a.team, n, a, s);
                s.children.add(o)
            }
        }
        )) : s = e,
        d2.set(this.name, s),
        this.setLocalDraftMeta({
            templateId: (i = e.lastAppliedTemplate) == null ? void 0 : i.id,
            childrenData: s.children.length > 0 ? s.children.map(a=>a.serialize()) : void 0,
            createMore: (r == null ? void 0 : r.createMore) ?? !1
        })
    }
    clearLocalDraft() {
        d2.remove(this.name),
        ke.remove(this.metaKey)
    }
    static clearAll() {
        d2.clearAllDrafts()
    }
}
const _E = `
id
name
urlKey
logoUrl
userCount
previousUrlKeys
deletionRequestedAt
samlEnabled
region
`
  , IE = `
id
name
urlKey
logoUrl
userCount
samlEnabled
allowedAuthServices
`
  , Fh = `
id
name
displayName
email
avatarUrl
role
organization {
  ${_E}
}
`
  , x1e = `
id
name
displayName
email
avatarUrl
role
organization {
  ${IE}
}
`
  , I5 = `
id
email
allowDomainAccess
lastUsedOrganizationId
users {
  ${Fh}
}
availableOrganizations {
  ${_E}
}
lockedOrganizations {
  ${IE}
}
lockedUsers {
  ${x1e}
}
`;
async function aw(t) {
    return t.query(Mt.gql`
    query {
      availableUsers {
        ${I5}
      }
    }
  `, void 0, {
        dontLog: !0,
        asUserAccount: !0
    })
}
async function D1e(t, e) {
    const {name: n, urlKey: r, timezone: s, domainAccess: i, utm: a, survey: o, region: l} = e
      , d = Mt.gql`
    mutation CreateOrganizationFromOnboarding($name: String!, $urlKey: String!, $domainAccess: Boolean, $timezone: String, $utm: String, $companyRole: String, $companySize: String) {
      createOrganizationFromOnboarding(input: { name: $name, urlKey: $urlKey, domainAccess: $domainAccess, timezone: $timezone, utm: $utm }, survey: {
        companyRole: $companyRole,
        companySize: $companySize
      }) {
        user {
          ${Fh}
        }
      }
    }`
      , u = {
        name: n,
        urlKey: r,
        domainAccess: i,
        timezone: s,
        utm: a,
        companyRole: o == null ? void 0 : o.companyRole,
        companySize: o == null ? void 0 : o.companySize
    };
    return t.mutate(d, u, {
        asUserAccount: !0,
        region: l
    })
}
async function S1e(t, e) {
    const n = Mt.gql`
  mutation EmailTokenUserAccountAuth($email: String!, $token: String!, $timezone: String!, $inviteLink: String) {
    emailTokenUserAccountAuth(input: {
      email: $email,
      token: $token,
      timezone: $timezone,
      inviteLink: $inviteLink
    }) {
      ${I5}
    }
  }`;
    return t.mutate(n, e, {
        asAnonymous: !0
    })
}
async function _1e(t, e) {
    const n = Mt.gql`
    mutation EmailUserAccountAuthChallenge(
      $email: String!
      $clientAuthCode: String
      $isDesktop: Boolean
      $inviteLink: String
      $loginCodeOnly: Boolean
    ) {
      emailUserAccountAuthChallenge(
        input: {
          email: $email
          clientAuthCode: $clientAuthCode
          isDesktop: $isDesktop
          inviteLink: $inviteLink
          loginCodeOnly: $loginCodeOnly
        }
      ) {
        success
        authType
      }
    }
  `;
    return t.mutate(n, e, {
        asAnonymous: !0
    })
}
async function I1e(t, e) {
    const n = Mt.gql`
  mutation GoogleUserAccountAuth(
    $code: String!,
    $inviteLink: String,
    $redirectUri: String!,
    $timezone: String!
    $disallowSignup: Boolean
  ) {
    googleUserAccountAuth(
      input: {
        code: $code,
        inviteLink: $inviteLink,
        redirectUri: $redirectUri,
        timezone: $timezone
        disallowSignup: $disallowSignup,
      }
    ) {
      ${I5}
    }
  }`;
    return t.mutate(n, e, {
        asAnonymous: !0
    })
}
async function E1e(t, e) {
    const {organizationId: n, inviteLink: r, region: s} = e
      , i = Mt.gql`
    mutation JoinOrganizationFromOnboarding($organizationId: String!, $inviteLink: String) {
      joinOrganizationFromOnboarding(input: { organizationId: $organizationId, inviteLink: $inviteLink }) {
        user {
          ${Fh}
        }
      }
    }`;
    return t.mutate(i, {
        organizationId: n,
        inviteLink: r
    }, {
        region: s,
        asUserAccount: !0
    })
}
function A1e(t) {
    const e = t + "="
      , n = self.document.cookie.split(";");
    for (let r = 0; r < n.length; r++) {
        let s = n[r];
        for (; s.charAt(0) === " "; )
            s = s.substring(1, s.length);
        if (s.indexOf(e) === 0)
            return s.substring(e.length, s.length)
    }
}
function j1e(t) {
    self.document.cookie = `${t}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`
}
const ow = "recencyRegistry"
  , ga = 5
  , M1e = {
    Issue: ga * 4,
    Project: ga * 2,
    Document: ga * 2,
    IssueLabel: ga * 2,
    CustomView: ga * 2,
    Roadmap: ga * 2,
    Cycle: ga,
    User: ga,
    search: ga * 2
};
class T1e {
    constructor(e) {
        this.user = e;
        const n = ke.get(this.localStorageKey) || {};
        this.recentItems = n,
        L3(this)
    }
    trackModel(e) {
        this.track(e.modelName, e.id)
    }
    track(e, n) {
        const r = (this.recentItems[e] || []).concat([])
          , s = r.findIndex(o=>o.id === n)
          , i = s > -1 ? r[s] : {
            id: n,
            n: 0
        };
        s > -1 && r.splice(s, 1),
        i.n += 1,
        i.lastViewedTimestamp = Date.now(),
        r.unshift(i);
        const a = this.maxRecentPerType(e);
        r.length > a && r.splice(0, a),
        this.recentItems[e] = r,
        ke.set(this.localStorageKey, this.recentItems)
    }
    scores(e) {
        const n = this.recentOfModel(e)
          , r = this.maxRecentPerType(e.modelName);
        return n.map((s,i)=>({
            id: s.id,
            score: (r - i + s.n) * .1
        })).sortBy(s=>-s.score)
    }
    score(e) {
        const n = this.scores(e.constructor).find(r=>r.id === e.id);
        return n ? n.score : 0
    }
    recentOfModel(e) {
        const n = e instanceof at ? e.modelName : Me.getClassName(e);
        return n ? this.recent(n) : []
    }
    recent(e) {
        return this.recentItems[e] || []
    }
    clear() {
        this.recentItems = {},
        ke.remove(this.localStorageKey)
    }
    static clearAll() {
        ke.removeAllWithCondition(e=>e.startsWith(ow))
    }
    clearOfType(e) {
        this.recentItems[e] && (this.recentItems[e] = [],
        ke.set(this.localStorageKey, this.recentItems))
    }
    deleteRecordOfType(e, n) {
        this.deleteItem(e, n)
    }
    get localStorageKey() {
        return `${ow}:${this.user.id}`
    }
    maxRecentPerType(e) {
        return M1e[e] || ga
    }
    deleteItem(e, n) {
        if (this.recentItems[e] && this.recentItems[e].length > 0) {
            const r = this.recentItems[e].findIndex(s=>s.id === n);
            r !== -1 && (this.recentItems[e].splice(r, 1),
            ke.set(this.localStorageKey, this.recentItems))
        }
    }
}
const u2 = "newCommentCache";
var rf;
(function(t) {
    const e = (a,o,l="")=>`${u2}-${a == null ? void 0 : a.id}&}${(o == null ? void 0 : o.id) ?? ""}${l}`;
    function n(a) {
        if (!a.startsWith(u2))
            return;
        const o = a.replace(u2, "")
          , l = o.substring(1, o.indexOf("&}"))
          , u = o.substring(o.indexOf("&}") + 2).substring(0, 36)
          , h = ke.get(a);
        if (h)
            return {
                parentModelId: u.length ? u : l,
                bodyCache: h,
                data: void 0,
                delete: ()=>ke.remove(a)
            }
    }
    t.extractCommentCacheFromCacheKey = n;
    function r(a, o) {
        return !!ke.get(e(a, o))
    }
    t.hasCommentDraft = r;
    function s(a, o, l="") {
        const d = e(a, o, l);
        return {
            commentCache: ke.get(d),
            updateCommentDraft: h=>ke.set(d, h),
            deleteCommentDraft: ()=>ke.remove(d)
        }
    }
    t.getCommentDraft = s;
    function i() {
        ke.removeAllWithCondition(a=>a.startsWith(u2))
    }
    t.clearAll = i
}
)(rf || (rf = {}));
async function L1e(t, e) {
    return (await t.query(Mt.gql`
      query OrganizationInviteLinkDetails($inviteLink: String!) {
        organizationInviteLinkDetails(inviteLink: $inviteLink) {
          organizationId
          organizationLogoUrl
          organizationName
          organizationUrlKey
          organizationRegion
          allowedAuthServices
        }
      }
    `, {
        inviteLink: e
    })).organizationInviteLinkDetails
}
var cw;
(function(t) {
    t.web = "web",
    t.desktop = "desktop",
    t.ios = "ios",
    t.android = "android"
}
)(cw || (cw = {}));
var h3;
(function(t) {
    t.chrome = "chrome",
    t.firefox = "firefox",
    t.safari = "safari",
    t.edge = "edge",
    t.brave = "brave",
    t.opera = "opera",
    t.arc = "arc"
}
)(h3 || (h3 = {}));
const sf = "chromiumForkDetected";
function Q2e() {
    const t = pl();
    return $a.useEffect(()=>{
        const e = getComputedStyle(self.document.documentElement).getPropertyValue("--arc-palette-minContrastColor").length > 0
          , n = navigator.brave !== void 0
          , r = ke.get(sf);
        if ((e || n) && !r) {
            ke.set(sf, !0);
            const s = e ? h3.arc : h3.brave;
            t.sendCommand({
                cmd: "tagChromiumForkBrowserSession",
                browserType: s
            })
        }
    }
    , []),
    null
}
async function O1e(t, e) {
    const n = {
        urlKey: e
    };
    return t.query(Mt.gql`
      query OrganizationMeta($urlKey: String!) {
        organizationMeta(urlKey: $urlKey) {
          region
          allowedAuthServices
        }
      }
    `, n, {
        asAnonymous: !0
    })
}
async function R1e(t, e) {
    const n = Mt.gql`
    mutation PasskeyLoginStartMutation($authId: String!) {
      passkeyLoginStart(authId: $authId) {
        success
        options
      }
    }
  `;
    return t.mutate(n, e, {
        asAnonymous: !0
    })
}
async function P1e(t, e) {
    const n = Mt.gql`
    mutation PasskeyLoginFinishMutation($authId: String!, $response: JSONObject!) {
      passkeyLoginFinish(authId: $authId, response: $response) {
        ${I5}
      }
    }
  `;
    return t.mutate(n, e, {
        asAnonymous: !0
    })
}
var af, lw = Kd;
af = lw.createRoot,
lw.hydrateRoot;
var dw;
(function(t) {
    t.warningToast = "warningToast",
    t.refresh = "refresh",
    t.load = "load",
    t.clear = "clear"
}
)(dw || (dw = {}));
class $1e {
    constructor(e, n) {
        this.id = e,
        this.update = n,
        this.cmd = "collab"
    }
}
ix.registerBinaryExtension($1e, W2.CollabMessage, ["id", "update"]);
var xo;
(function(t) {
    t[t.rebootstrapRequired = 4001] = "rebootstrapRequired",
    t[t.authenticationError = 4002] = "authenticationError",
    t[t.tooManyConnections = 4003] = "tooManyConnections",
    t[t.loggedOut = 4004] = "loggedOut",
    t[t.invalidBinaryMessage = 4005] = "invalidBinaryMessage",
    t[t.unknownAbbreviation = 4006] = "unknownAbbreviation",
    t[t.notPartOfCollabDocument = 4007] = "notPartOfCollabDocument",
    t[t.ipAddrNotAllowed = 4008] = "ipAddrNotAllowed"
}
)(xo || (xo = {}));
function EE(t, e=void 0) {
    return new Promise(n=>{
        setTimeout(()=>{
            n(e)
        }
        , t)
    }
    )
}
function hm(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class zd extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
hm([w()], zd.prototype, "name", void 0);
hm([pe(()=>ne, "keys", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], zd.prototype, "team", void 0);
zd = hm([We("TeamKey")], zd);
var uw;
(function(t) {
    t.desktop = "desktop",
    t.mobile = "mobile",
    t.email = "email",
    t.slack = "slack"
}
)(uw || (uw = {}));
Rc.desktop + "",
Rc.web + "",
Rc.mobile + "";
const Qm = class Qm {
    static unsubscribePreferencesByChannel(e, n) {
        const r = {
            ...e
        }
          , s = Object.keys(e);
        for (let i = 0; i < s.length; i++) {
            const a = s[i]
              , o = r[a];
            if (a === $.system || !o)
                continue;
            Object.keys(o).forEach(d=>{
                gA(r, `${a}.${d}.${n}`, !1)
            }
            )
        }
        return r
    }
}
;
Qm.getNotificationPreference = (e,n)=>{
    var o, l;
    const {notificationType: r, subscriptionType: s, channel: i} = n;
    if (r === $.system)
        return !0;
    const a = (l = (o = e[r]) == null ? void 0 : o[s]) == null ? void 0 : l[i];
    return a === void 0 ? F1e(r, i) : a
}
;
let of = Qm;
const F1e = (t,e)=>{
    switch (t) {
    case $.issueCreated:
    case $.issueMention:
    case $.projectMention:
    case $.initiativeMention:
    case $.projectMilestoneMention:
    case $.documentMention:
    case $.projectUpdateMention:
    case $.issueAddedToTriage:
    case $.triageResponsibilityIssueAddedToTriage:
    case $.issueAddedToView:
    case $.issueAssignedToYou:
    case $.issueUnassignedFromYou:
    case $.documentNewComment:
    case $.issueNewComment:
    case $.projectNewComment:
    case $.initiativeNewComment:
    case $.projectMilestoneNewComment:
    case $.projectUpdateNewComment:
    case $.documentCommentMention:
    case $.issueCommentMention:
    case $.projectCommentMention:
    case $.initiativeCommentMention:
    case $.projectMilestoneCommentMention:
    case $.projectUpdateCommentMention:
    case $.issueStatusChangedDone:
    case $.documentThreadResolved:
    case $.issueThreadResolved:
    case $.projectThreadResolved:
    case $.initiativeThreadResolved:
    case $.projectMilestoneThreadResolved:
    case $.issueReminder:
    case $.documentReminder:
    case $.documentDeleted:
    case $.documentMoved:
    case $.documentRestored:
    case $.documentSubscribed:
    case $.issuePriorityUrgent:
    case $.issueBlocking:
    case $.issueUnblocked:
    case $.issueDue:
    case $.oauthClientApprovalCreated:
    case $.initiativeAddedAsOwner:
    case $.projectAddedAsLead:
    case $.projectAddedAsMember:
    case $.projectUpdateCreated:
    case $.projectUpdatePrompt:
    case $.issueSlaHighRisk:
    case $.issueSlaBreached:
    case $.issueSubscribed:
    case $.issueMovedToProject:
    case $.issueStatusChangedAll:
    case $.system:
        return !0;
    case $.projectMilestoneCommentReaction:
    case $.documentCommentReaction:
    case $.initiativeCommentReaction:
    case $.projectCommentReaction:
    case $.projectUpdateReaction:
    case $.projectUpdateCommentReaction:
    case $.issueCommentReaction:
    case $.issueEmojiReaction:
        return e !== "desktop";
    default:
        throw void 0
    }
}
;
function hw(t) {
    return typeof t != "object" || Array.isArray(t) || t === null ? !1 : Object.keys(t).length === 0
}
class N1e {
    static firstDayOfWeekByBrowserLocale() {
        var i;
        const e = (i = navigator.languages) != null && i.length ? navigator.languages[0] : navigator.language
          , n = e.substring(0, 2)
          , r = e.length === 5 ? e.substring(3, 5) : ""
          , s = V1e[n + r];
        return P3(new Date, {
            weekStartsOn: s
        }).getDay()
    }
}
const V1e = {
    arMA: 1,
    az: 1,
    be: 1,
    bg: 1,
    bs: 1,
    ca: 1,
    cs: 1,
    da: 1,
    de: 1,
    deAT: 1,
    el: 1,
    enAU: 1,
    enGB: 1,
    enIN: 1,
    enNZ: 1,
    eo: 1,
    es: 1,
    et: 1,
    eu: 1,
    faIR: 6,
    fi: 1,
    fr: 1,
    frCH: 1,
    gl: 1,
    gu: 1,
    hr: 1,
    ht: 1,
    hu: 1,
    hy: 1,
    id: 1,
    is: 1,
    it: 1,
    ka: 1,
    kk: 1,
    kn: 1,
    lb: 1,
    lt: 1,
    lv: 1,
    mk: 1,
    mn: 1,
    ms: 1,
    mt: 1,
    nb: 1,
    nl: 1,
    nlBE: 1,
    nn: 1,
    pl: 1,
    pt: 1,
    ro: 1,
    ru: 1,
    sk: 1,
    sl: 1,
    sq: 1,
    sr: 1,
    srLatn: 1,
    sv: 1,
    ta: 1,
    tr: 1,
    uk: 1,
    uz: 1,
    vi: 1,
    zhCN: 1,
    zhTW: 1
};
var Ho;
(function(t) {
    t.overview = "overview",
    t.insights = "insights",
    t.updates = "updates"
}
)(Ho || (Ho = {}));
const Oa = {
    assigned: "assigned",
    created: "created",
    subscribed: "subscribed",
    activity: "activity"
}
  , X2e = {
    [Oa.assigned]: "Assigned",
    [Oa.created]: "Created",
    [Oa.subscribed]: "Subscribed",
    [Oa.activity]: "Activity"
}
  , J2e = {
    [Oa.assigned]: Ae.myIssues,
    [Oa.created]: Ae.myIssuesCreatedByMe,
    [Oa.subscribed]: Ae.myIssuesSubscribedTo,
    [Oa.activity]: Ae.myIssuesActivity
};
function e4e(t) {
    return typeof t == "string" && Oa.hasOwnProperty(t)
}
function C7(t, e) {
    return Mt.gql`
    mutation UserFlagUpdate {
      userFlagUpdate(flag: ${t}, operation: ${e}) {
        flag
        value
        success
      }
    }
  `
}
function B1e(t) {
    return Mt.gql`
    mutation UserSettingsFlagsReset {
      userSettingsFlagsReset${t ? `(flags: [${t.join(", ")}])` : ""} {
        success
      }
    }
  `
}
async function t4e(t, e) {
    if (!U1e(t, e))
        return t.updateFlag(e)
}
function U1e(t, e) {
    return t.getFlag(e) >= RK[e]
}
var zo;
(function(t) {
    t.system = "system",
    t.light = "light",
    t.pureLight = "pureLight",
    t.dark = "dark",
    t.magicBlue = "magicBlue",
    t.classicDark = "classicDark",
    t.ash = "ash",
    t.dawn = "dawn",
    t.midnight = "midnight",
    t.pale = "pale",
    t.custom = "custom"
}
)(zo || (zo = {}));
const n4e = ()=>Object.keys(zo).filter(t=>!["ash", "dawn", "midnight", "pale"].includes(t))
  , r4e = t=>{
    switch (t) {
    case "system":
        return "System preference";
    case "light":
        return "Light";
    case "dark":
        return "Dark";
    case "magicBlue":
        return "Magic Blue";
    case "pureLight":
        return "Pure Light";
    case "classicDark":
        return "Classic Dark";
    case "ash":
        return "Ash";
    case "dawn":
        return "Dawn";
    case "midnight":
        return "Midnight";
    case "pale":
        return "Pale";
    case "custom":
        return "Custom";
    default:
        throw new zt(t)
    }
}
;
class H1e {
    constructor(e, n) {
        this.maxSize = e,
        this.values = n
    }
    push(e) {
        this.values.length >= this.maxSize && this.values.shift(),
        this.values.push(e)
    }
    remove(e) {
        this.values = this.values.filter(n=>n !== e)
    }
    includes(e) {
        return this.values.includes(e)
    }
    toJSON() {
        return [...this.values]
    }
}
const z1e = 1500
  , fw = {
    serialize: t=>JSON.stringify(t.toJSON()),
    deserialize: t=>{
        const e = JSON.parse(t);
        return Array.isArray(e) && e.length > 0 ? new Za(e) : new Za([])
    }
}
  , od = class od {
    constructor(e) {
        this.maxSizeArray = new H1e(z1e,e)
    }
    isOpen(e) {
        return !this.maxSizeArray.includes(e)
    }
    update(e, n) {
        return n === "open" ? this.maxSizeArray.remove(e) : n === "closed" && this.maxSizeArray.push(e),
        new od(this.maxSizeArray.toJSON())
    }
    toJSON() {
        return this.maxSizeArray.toJSON()
    }
}
;
od.DefaultEmptyState = fw.serialize(new od([])),
od.Serializer = fw;
let Za = od;
function se(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const po = us && iL()
  , yo = "userSettings"
  , wd = "defaultUserSettings"
  , s4e = "themeSidebarColor"
  , fm = !po;
var pw;
(function(t) {
    t[t.server = 0] = "server",
    t[t.browser = 1] = "browser",
    t[t.browserSession = 2] = "browserSession",
    t[t.ephemeral = 3] = "ephemeral"
}
)(pw || (pw = {}));
const Z1e = [0, 1, 2, 3]
  , AE = {}
  , jE = [];
class J extends at {
    static get openLinksInDesktop() {
        const e = ke.get(yo);
        return e == null ? void 0 : e.openLinksInDesktop
    }
    get theme() {
        return po ? this.themeMobileWeb : this.themeDesktop
    }
    get themeSystemLight() {
        return po ? this.themeMobileWebLight : this.themeDesktopLight
    }
    get themeSystemDark() {
        return po ? this.themeMobileWebDark : this.themeDesktopDark
    }
    set theme(e) {
        po ? this.themeMobileWeb = e : this.themeDesktop = e
    }
    set themeSystemLight(e) {
        po ? this.themeMobileWebLight = e : this.themeDesktopLight = e
    }
    set themeSystemDark(e) {
        po ? this.themeMobileWebDark = e : this.themeDesktopDark = e
    }
    get currentlySelectedCustomTheme() {
        var e;
        return (e = this.customThemes) == null ? void 0 : e[0]
    }
    setCurrentCustomTheme(e) {
        e ? this.customThemes = [e] : this.customThemes = []
    }
    constructor() {
        super(),
        this.settings = {},
        this.toggleNotificationBadge = ()=>{
            this.user.settings.notificationBadge = !this.user.settings.notificationBadge
        }
        ,
        this.toggleDebugActiveElement = ()=>{
            this.debugActiveElement = !this.debugActiveElement
        }
        ,
        this.toggleDebugBreadcrumbs = ()=>{
            this.debugBreadcrumbs = !this.debugBreadcrumbs
        }
        ,
        this.toggleDebugAnalytics = ()=>(this.debugAnalytics = !this.debugAnalytics,
        this.debugAnalytics),
        this.toggleDebugActionManager = ()=>{
            this.debugActionManager = !this.debugActionManager
        }
        ,
        this.toggleDebugPositionLabels = ()=>{
            this.debugPositionLabels = !this.debugPositionLabels
        }
        ,
        this.toggleDebugSearchScore = ()=>{
            this.debugSearchScore = !this.debugSearchScore
        }
        ,
        this.toggleDebugActionsScore = ()=>{
            this.debugActionsScore = !this.debugActionsScore
        }
        ,
        this.toggleDebugSimilarIssuesScore = ()=>{
            this.debugSimilarIssuesScore = !this.debugSimilarIssuesScore
        }
        ,
        this.toggleDebugShowSimilarIssues = ()=>{
            this.debugShowSimilarIssues = !this.debugShowSimilarIssues
        }
        ,
        this.toggleDebugApplicationStore = ()=>{
            this.debugApplicationStore = !this.debugApplicationStore
        }
        ,
        this.toggleDebugHistory = ()=>{
            this.debugHistory = !this.debugHistory
        }
        ,
        this.recordFlag = async(r,s=!0)=>{
            const i = this.flags[r];
            if (this.store && (s || i === void 0)) {
                const a = await this.store.graphQLClient.mutate(C7(r, Pu.incr))
                  , o = a.userFlagUpdate;
                return lt(()=>{
                    o.success && o.flag && o.value && (this.flags[o.flag] = o.value)
                }
                ),
                a.userFlagUpdate.value
            }
        }
        ,
        this.updateFlag = async(r,s=Pu.incr)=>{
            if (this.store) {
                const i = await this.store.graphQLClient.mutate(C7(r, s))
                  , a = i.userFlagUpdate;
                return lt(()=>{
                    a.success && a.flag && a.value && (this.flags[a.flag] = a.value)
                }
                ),
                i.userFlagUpdate.value
            }
        }
        ,
        this.stopFlag = async(r,s=!0)=>{
            const i = this.flags[r];
            if (this.store && (s || i === void 0)) {
                const a = await this.store.graphQLClient.mutate(C7(r, Pu.lock))
                  , o = a.userFlagUpdate;
                return lt(()=>{
                    o.success && o.flag && o.value && (this.flags[o.flag] = o.value)
                }
                ),
                a.userFlagUpdate.value
            }
        }
        ,
        this.resetFlags = async r=>{
            if (this.store) {
                const s = await this.store.graphQLClient.mutate(B1e(r));
                return s.userSettingsFlagsReset.success && lt(()=>{
                    if (r)
                        for (const i of r)
                            this.flags[i] = void 0;
                    else
                        this.flags = {}
                }
                ),
                s.userSettingsFlagsReset.success
            }
            return !1
        }
        ,
        this.getFlag = r=>this.flags[r] || 0,
        this.getNotificationPreference = (r,s,i)=>of.getNotificationPreference(this.notificationPreferences, {
            userCreatedAt: this.user.createdAt,
            notificationType: r,
            subscriptionType: s,
            channel: i
        }),
        this.setNotificationPreference = (r,s,i,a)=>{
            let o = Fa(this.notificationPreferences);
            if (o) {
                const l = o[r];
                if (l !== void 0) {
                    const d = l[s];
                    d !== void 0 ? d[i] = a : l[s] = {
                        [i]: a
                    }
                } else
                    o[r] = {
                        [s]: {
                            [i]: a
                        }
                    }
            } else
                o = {
                    [r]: {
                        [s]: {
                            [i]: a
                        }
                    }
                };
            this.notificationPreferences = o,
            this.save()
        }
        ,
        this.getUsageWarningHistory = ()=>this.usageWarningHistory,
        this.setUsageWarningHistoryEntry = ({type: r, entityId: s, channel: i, level: a})=>{
            const o = Fa(this.usageWarningHistory)
              , l = o[r] || [];
            let d = l.find(u=>u.entityId === s);
            !d && a ? (d = {
                entityId: s,
                warningsShown: {
                    [i]: {
                        level: a,
                        updatedAt: new Date().toISOString()
                    }
                }
            },
            l.push(d)) : d && !a ? delete d.warningsShown[i] : d && a && (d.warningsShown[i] = {
                level: a,
                updatedAt: new Date().toISOString()
            }),
            o[r] = l,
            this.usageWarningHistory = o,
            this.save()
        }
        ,
        this.resetUserSettings = ()=>{
            this.settings = {},
            this.browserPersistedSettings = {},
            this.browserSessionPersistedSettings = {},
            this.ephemeralSettings = {},
            this.save()
        }
        ,
        this.ephemeralSettings = {},
        this.browserPersistedSettings = {},
        this.browserSessionPersistedSettings = {},
        this.flags = {};
        const e = ke.get(yo);
        e && (this.browserPersistedSettings = e);
        const n = ke.getSession(yo);
        if (n)
            this.browserSessionPersistedSettings = n;
        else {
            const r = ke.get(wd);
            r && (this.browserSessionPersistedSettings = r)
        }
        !Xt.isElectron && typeof BroadcastChannel == "function" && (this.broadcastChannel = new BroadcastChannel(q1e),
        this.broadcastChannel.addEventListener("message", r=>{
            const s = r.data;
            switch (s.type) {
            case "setValue":
                lt(()=>{
                    this.browserPersistedSettings[s.key] = s.value
                }
                );
                break;
            default:
                F.error("Invalid message type for UserSettings broadcast", void 0, {
                    type: s.type
                }),
                s.type;
                break
            }
        }
        ))
    }
    makeObservable() {
        super.makeObservable(),
        Ln(this, {
            ephemeralSettings: ut,
            browserPersistedSettings: ut,
            browserSessionPersistedSettings: ut,
            setActiveTeam: Le,
            toggleNotificationBadge: Le,
            toggleDebugActionManager: Le,
            toggleDebugPositionLabels: Le,
            toggleDebugAnalytics: Le,
            toggleDebugApplicationStore: Le,
            cleanupOpenContainer: Le,
            setOpenContainers: Le,
            getOpenContainer: Le,
            setCurrentCustomTheme: Le,
            updateProjectInfo: Le.bound,
            updateProjectInfoMilestone: Le.bound,
            updateInitiativeInfo: Le.bound,
            updateTeamInfo: Le.bound,
            ...AE
        }),
        this.cleanupOpenContainer()
    }
    clearAll() {
        const e = ke.get(wd) ?? {};
        jE.forEach(n=>{
            this.browserPersistedSettings[n] = void 0,
            this.browserSessionPersistedSettings[n] = void 0,
            e[n] = void 0
        }
        ),
        ke.set(yo, this.browserPersistedSettings),
        ke.setSession(yo, this.browserSessionPersistedSettings),
        ke.set(wd, e)
    }
    get activeTeam() {
        var n;
        const e = this.store;
        return this.activeTeamId && e.findById(ne, this.activeTeamId) || (this.user.teamMemberships.length > 0 ? (n = this.user.teamMemberships.elements[0]) == null ? void 0 : n.team : !1) || this.user.organization.accessibleTeams.elements[0]
    }
    get firstDayOfWeekAsNumber() {
        switch (this.firstDayOfWeek) {
        case xa.sunday:
            return 0;
        case xa.monday:
            return 1;
        case xa.tuesday:
            return 2;
        case xa.wednesday:
            return 3;
        case xa.thursday:
            return 4;
        case xa.friday:
            return 5;
        case xa.saturday:
            return 6;
        default:
            throw new zt(this.firstDayOfWeek)
        }
    }
    get shouldShowInitiativesOnboardingNewBadge() {
        const e = this.user.organization.roadmapEnabled && this.user.organization.roadmaps.length > 1
          , n = this.user.organization.createdAt > new Date("2024-06-19") || this.user.organization.id === "e8507864-9ce4-40f4-8ae3-2ed86f91a6b9";
        return e && !n && this.getFlag(Rd.initiativesBannerDismissed) < 1
    }
    setActiveTeam(e) {
        e && e.private && !e.userIsMember(this.user) || (this.activeTeamId = e == null ? void 0 : e.id)
    }
    getOpenContainer(e, n) {
        const r = this.openContainers[e];
        return r ? (r.accessed = Date.now(),
        r.value) : n
    }
    setOpenContainer(e, n) {
        this.setOpenContainers([e], n)
    }
    setOpenContainers(e, n) {
        let r = !1;
        const s = {};
        for (const i of e) {
            const a = this.openContainers[i];
            a ? a.value !== n && (s[i] = {
                value: n,
                accessed: Date.now()
            },
            r = !0) : (s[i] = {
                value: n,
                accessed: Date.now()
            },
            r = !0)
        }
        r && (Object.entries(this.openContainers).forEach(([i,a])=>{
            s[i] || (s[i] = a)
        }
        ),
        this.openContainers = s)
    }
    cleanupOpenContainer() {
        var r, s, i;
        const e = this.openContainers
          , n = [];
        for (const a in e)
            if (a.startsWith("project_overview_milestone_")) {
                n.push(a);
                const o = a.replace("project_overview_milestone_", "")
                  , l = this.store.findById(qt, o);
                if (l) {
                    const d = l.project.id
                      , u = e[a].value;
                    ((i = (s = (r = this.projectInfos) == null ? void 0 : r[d]) == null ? void 0 : s.milestones) == null ? void 0 : i[o]) == null && this.updateProjectInfoMilestone(d, o, {
                        opened: u
                    })
                }
            }
        if (n.length > 0) {
            const a = {
                ...e
            };
            for (const o of n)
                delete a[o];
            this.openContainers = a
        }
    }
    isIssueContainerOpen(e, n) {
        return e === "links" ? this.collapsedAttachmentSectionsList.isOpen(n) : e === "sub-issues" ? this.collapsedSubIssueSectionsList.isOpen(n) : !1
    }
    updateIssueContainer(e, n, r) {
        e === "links" ? this.collapsedAttachmentSectionsList = this.collapsedAttachmentSectionsList.update(n, r) : e === "sub-issues" && (this.collapsedSubIssueSectionsList = this.collapsedSubIssueSectionsList.update(n, r))
    }
    isGroupContainerOpen(e) {
        return this.collapsedGroups.isOpen(e)
    }
    updateGroupContainerState(e, n) {
        this.collapsedGroups = this.collapsedGroups.update(e, n)
    }
    getDefaultView() {
        return this.defaultView
    }
    setDefaultView(e, n) {
        e === Ss.customView && !(n != null && n.customViewId) || e === Ss.project && !(n != null && n.projectId) || (this.defaultView = e,
        this.defaultViewCustomViewId = n == null ? void 0 : n.customViewId,
        this.defaultViewProjectId = n == null ? void 0 : n.projectId,
        this.save())
    }
    getDefaultViewCustomViewId() {
        if (this.defaultViewCustomViewId && this.store.findById(Ke, this.defaultViewCustomViewId))
            return this.defaultViewCustomViewId
    }
    getDefaultViewProjectId() {
        if (this.defaultViewProjectId && this.store.findById(ie, this.defaultViewProjectId))
            return this.defaultViewProjectId
    }
    getProjectLastSeenTab(e) {
        var r;
        const n = (r = this.projectInfos) == null ? void 0 : r[e.id];
        if (n) {
            if (n.facetId)
                return {
                    facetId: n.facetId
                };
            if (n.mainTab) {
                const s = tY(n.mainTab);
                if (s && "tab"in s)
                    return {
                        mainTab: s.tab
                    };
                if (s && "facetId"in s)
                    return {
                        facetId: s.facetId
                    }
            }
        }
    }
    getInitiativeLastSeenTab(e) {
        var r;
        const n = (r = this.initiativeInfos) == null ? void 0 : r[e.id];
        if (n) {
            if (n.facetId)
                return {
                    facetId: n.facetId
                };
            if (n.mainTab) {
                const s = JX(n.mainTab);
                if (s && "tab"in s)
                    return {
                        mainTab: s.tab
                    };
                if (s && "facetId"in s)
                    return {
                        facetId: s.facetId
                    }
            }
        }
    }
    getWorkspacePageLastSeenTab(e) {
        var n, r;
        return (r = (n = this.fixedPageInfos) == null ? void 0 : n[e]) == null ? void 0 : r.lastSeenTab
    }
    setWorkspacePageLastSeenTab(e, n) {
        var i;
        const s = {
            ...(i = this.fixedPageInfos) == null ? void 0 : i[e],
            lastSeenTab: n
        };
        this.fixedPageInfos = {
            ...this.fixedPageInfos,
            [e]: s
        }
    }
    getTeamPageLastSeenTab(e, n) {
        var r, s, i;
        return (i = (s = (r = this.teamInfos) == null ? void 0 : r[n]) == null ? void 0 : s[e]) == null ? void 0 : i.lastSeenTab
    }
    setTeamPageLastSeenTab(e, n, r) {
        this.updateTeamInfo(n, {
            [e]: {
                lastSeenTab: r
            }
        })
    }
    updateProjectInfo(e, n) {
        this.updateModelInfo("project", e, n)
    }
    updateProjectInfoMilestone(e, n, r) {
        var i, a;
        const s = (a = (i = this.projectInfos) == null ? void 0 : i[e]) == null ? void 0 : a.milestones;
        this.updateProjectInfo(e, {
            milestones: {
                ...s,
                [n]: {
                    ...s == null ? void 0 : s[n],
                    ...r
                }
            }
        })
    }
    updateInitiativeInfo(e, n) {
        this.updateModelInfo("initiative", e, n)
    }
    updateTeamInfo(e, n) {
        this.updateModelInfo("team", e, n)
    }
    getStorageForPersistance(e) {
        if (e === 0)
            return this.settings;
        if (e === 1)
            return this.browserPersistedSettings;
        if (e === 2)
            return this.browserSessionPersistedSettings;
        if (e === 3)
            return this.ephemeralSettings;
        throw new zt(e)
    }
    getModelInfos(e) {
        switch (e) {
        case "project":
            return this.projectInfos;
        case "initiative":
            return this.initiativeInfos;
        case "team":
            return this.teamInfos;
        default:
            throw void 0
        }
    }
    setModelInfos(e, n) {
        switch (e) {
        case "project":
            this.projectInfos = n;
            break;
        case "initiative":
            this.initiativeInfos = n;
            break;
        case "team":
            this.teamInfos = n;
            break;
        default:
            throw void 0
        }
    }
    updateModelInfo(e, n, r) {
        const s = this.getModelInfos(e);
        if (s == null)
            this.setModelInfos(e, {
                [n]: r
            });
        else {
            const i = s[n];
            i == null ? s[n] = r : Object.assign(i, r),
            this.setModelInfos(e, s)
        }
    }
}
se([ue(void 0, 2, {
    clearOnLogout: !0
})], J.prototype, "activeTeamId", void 0);
se([O], J.prototype, "theme", null);
se([O], J.prototype, "themeSystemLight", null);
se([O], J.prototype, "themeSystemDark", null);
se([ue(t=>{
    const e = t.getStorageForPersistance(1);
    if (!po)
        return e.theme ?? zo.system
}
, 0)], J.prototype, "themeDesktop", void 0);
se([ue(zo.light, 0)], J.prototype, "themeDesktopLight", void 0);
se([ue(zo.dark, 0)], J.prototype, "themeDesktopDark", void 0);
se([ue(t=>{
    const e = t.getStorageForPersistance(1);
    if (po)
        return e.theme ?? zo.system
}
, 0)], J.prototype, "themeMobileWeb", void 0);
se([ue(zo.light, 0)], J.prototype, "themeMobileWebLight", void 0);
se([ue(zo.dark, 0)], J.prototype, "themeMobileWebDark", void 0);
se([ue(t=>{
    const n = t.getStorageForPersistance(1).customThemeInput;
    if (n && typeof n == "string")
        try {
            return [JSON.parse(n)]
        } catch {}
}
, 0, {
    serializer: hn
})], J.prototype, "customThemes", void 0);
se([O], J.prototype, "currentlySelectedCustomTheme", null);
se([ue(v1.default, 1)], J.prototype, "fontSize", void 0);
se([ue(GL(N1e.firstDayOfWeekByBrowserLocale()), 0)], J.prototype, "firstDayOfWeek", void 0);
se([ue(!1, 0)], J.prototype, "showFullUserNames", void 0);
se([ue(!1, 0)], J.prototype, "usePointerCursor", void 0);
se([ue(!0, 0)], J.prototype, "spellcheck", void 0);
se([ue(!0, 1)], J.prototype, "alwaysShowTabBar", void 0);
se([w()], J.prototype, "calendarHash", void 0);
se([ue(!0, 0)], J.prototype, "notificationBadge", void 0);
se([ue(244, 2)], J.prototype, "sidebarWidth", void 0);
se([ue(!1, 2)], J.prototype, "sidebarCollapsed", void 0);
se([ue(320, 2)], J.prototype, "timelineAsideWidth", void 0);
se([ue(!0, 2)], J.prototype, "showTimelineAside", void 0);
se([ue(400, 2)], J.prototype, "inboxListWidth", void 0);
se([ue(400, 2)], J.prototype, "triageListWidth", void 0);
se([ue(400, 2)], J.prototype, "searchListWidth", void 0);
se([ue(400, 2)], J.prototype, "initiativesListWidth", void 0);
se([ue([], 1)], J.prototype, "searchFilterTeamIds", void 0);
se([ue(void 0, 2)], J.prototype, "projectsViewType", void 0);
se([ue(void 0, 2, {
    clearOnLogout: !0
})], J.prototype, "lastRoadmap", void 0);
se([ue(void 0, 2)], J.prototype, "customViewsViewType", void 0);
se([ue(void 0, 2)], J.prototype, "teamCustomViewsViewType", void 0);
se([ue(fm, 2)], J.prototype, "showCycleDetailPane", void 0);
se([ue(fm, 2)], J.prototype, "showProjectDetailPane", void 0);
se([ue(fm, 2)], J.prototype, "showCustomViewDetailPane", void 0);
se([ue(!1, 2)], J.prototype, "showRoadmapDetailPane", void 0);
se([ue(!1, 2)], J.prototype, "showInitiativeDetailPane", void 0);
se([ue(!1, 2)], J.prototype, "showIssuesDetailPane", void 0);
se([ue(!1, 2)], J.prototype, "showUserDetailPane", void 0);
se([ue(!1, 2)], J.prototype, "showMyIssuesDetailPane", void 0);
se([ue(!1, 2)], J.prototype, "showQuickViewDetailPane", void 0);
se([ue(!1, 2)], J.prototype, "showProjectDetailPaneInNotifications", void 0);
se([ue(440, 2)], J.prototype, "issuesDetailPaneWidth", void 0);
se([ue(t=>t.issuesDetailPaneWidth, 2)], J.prototype, "issuesInsightsPaneWidth", void 0);
se([ue(350, 2)], J.prototype, "myIssuesDetailPaneWidth", void 0);
se([ue(t=>t.myIssuesDetailPaneWidth, 2)], J.prototype, "myIssuesInsightsPaneWidth", void 0);
se([ue(440, 2)], J.prototype, "quickViewDetailPaneWidth", void 0);
se([ue(400, 2)], J.prototype, "projectDetailPaneWidth", void 0);
se([ue(t=>t.projectDetailPaneWidth, 2)], J.prototype, "projectInsightsPaneWidth", void 0);
se([ue(500, 2)], J.prototype, "projectUpdatesPaneWidth", void 0);
se([ue(400, 2)], J.prototype, "initiativeDetailPaneWidth", void 0);
se([ue(500, 2)], J.prototype, "initiativeUpdatesPaneWidth", void 0);
se([ue(400, 2)], J.prototype, "customViewDetailPaneWidth", void 0);
se([ue(t=>t.customViewDetailPaneWidth, 2)], J.prototype, "customViewInsightsPaneWidth", void 0);
se([ue(400, 2)], J.prototype, "roadmapDetailPaneWidth", void 0);
se([ue(440, 2)], J.prototype, "cycleDetailPaneWidth", void 0);
se([ue(t=>t.cycleDetailPaneWidth, 2)], J.prototype, "cycleInsightsPaneWidth", void 0);
se([ue(Ho.overview, 2)], J.prototype, "projectDetailPaneTab", void 0);
se([ue(Ho.overview, 2)], J.prototype, "initiativeDetailPaneTab", void 0);
se([ue(Ho.overview, 2)], J.prototype, "teamIssuesDetailPaneTab", void 0);
se([ue(Ho.overview, 2)], J.prototype, "userIssuesDetailPaneTab", void 0);
se([ue(Ho.overview, 2)], J.prototype, "customViewDetailPaneTab", void 0);
se([ue(Ho.overview, 2)], J.prototype, "cycleDetailPaneTab", void 0);
se([ue(Ho.overview, 2)], J.prototype, "myIssuesDetailPaneTab", void 0);
se([ue(Oa.assigned, 2)], J.prototype, "myIssuesLastTab", void 0);
se([ue(!1, 0)], J.prototype, "forceShowIssueCount", void 0);
se([ue(!0, 0)], J.prototype, "showGutterComments", void 0);
se([ue(!0, 0)], J.prototype, "showCompletedSubissues", void 0);
se([ue("manual", 0)], J.prototype, "subIssueViewOrdering", void 0);
se([ue(!1, 0)], J.prototype, "startIssueOnGitBranchCopy", void 0);
se([ue(!1, 0)], J.prototype, "selfAssignOnGitBranchCopy", void 0);
se([ue(!1, 0)], J.prototype, "autoAssignToSelf", void 0);
se([ue(!0, 0)], J.prototype, "convertEmojisToEmoticons", void 0);
se([ue(void 0, 0)], J.prototype, "quickEntryShortcut", void 0);
se([ue(!1, 0)], J.prototype, "doubleClickToEdit", void 0);
se([ue(void 0, 1)], J.prototype, "openLinksInDesktop", void 0);
se([ue(!1, 2)], J.prototype, "debugActiveElement", void 0);
se([ue(!1, 2)], J.prototype, "debugBreadcrumbs", void 0);
se([ue(!1, 2)], J.prototype, "debugActionManager", void 0);
se([ue(!1, 2)], J.prototype, "debugPositionLabels", void 0);
se([ue(!1, 2)], J.prototype, "debugSearchScore", void 0);
se([ue(!1, 2)], J.prototype, "debugActionsScore", void 0);
se([ue(!1, 2)], J.prototype, "debugSimilarIssuesScore", void 0);
se([ue(!1, 2)], J.prototype, "debugShowSimilarIssues", void 0);
se([ue(!1, 2)], J.prototype, "debugApplicationStore", void 0);
se([ue(!1, 2)], J.prototype, "debugHistory", void 0);
se([ue(!1, 2)], J.prototype, "debugAnalytics", void 0);
se([ue(void 0, 0)], J.prototype, "recentRoadmapSlugs", void 0);
se([ue(void 0, 1, {
    serializer: bt
})], J.prototype, "lastUpgradeNotification", void 0);
se([ue(void 0, 0, {
    serializer: bt
})], J.prototype, "changelogReadAt", void 0);
se([ue(!1, 0)], J.prototype, "hideChangelogBanners", void 0);
se([ue(!1, 0)], J.prototype, "hideChangelogBannerPromptShown", void 0);
se([ue(!1, 0)], J.prototype, "hideMobileBetaBanners", void 0);
se([ue(void 0, 1)], J.prototype, "membersVisibility", void 0);
se([ue(void 0, 1)], J.prototype, "teamMembersVisibility", void 0);
se([ue(!1, 3)], J.prototype, "cheatCodeEnabled", void 0);
se([ue(!1, 1)], J.prototype, "pointerInputDisabled", void 0);
se([ue(!0, 0)], J.prototype, "delaySendingEmailOutsideOfWorkingHours", void 0);
se([ue(!0, 0)], J.prototype, "immediatelySendUrgentEmailNotifications", void 0);
se([w()], J.prototype, "subscribedToChangelog", void 0);
se([w()], J.prototype, "subscribedToDPA", void 0);
se([w()], J.prototype, "subscribedToInviteAccepted", void 0);
se([w()], J.prototype, "subscribedToPrivacyLegalUpdates", void 0);
se([w()], J.prototype, "subscribedToUnreadNotificationsReminder", void 0);
se([ue(!0, 1)], J.prototype, "developerToolbarVisible", void 0);
se([ue(!1, 1)], J.prototype, "developerToolbarMinimized", void 0);
se([ue(!0, 1)], J.prototype, "developerToolbarUserRole", void 0);
se([ue(!0, ft.PREVIEW_BUILD ? 0 : 1)], J.prototype, "developerToolbarReleaseChannel", void 0);
se([ue(!0, ft.PREVIEW_BUILD ? 0 : 1)], J.prototype, "developerToolbarLogs", void 0);
se([ue(!0, ft.PREVIEW_BUILD ? 0 : 1)], J.prototype, "developerToolbarPromptDesigner", void 0);
se([ue(!0, ft.PREVIEW_BUILD ? 0 : 1)], J.prototype, "developerToolbarFeatureFlags", void 0);
se([ue(!0, ft.PREVIEW_BUILD ? 0 : 1)], J.prototype, "developerToolbarEnvironmentColors", void 0);
se([ue(!0, ft.PREVIEW_BUILD ? 0 : 1)], J.prototype, "developerToolbarFrameJank", void 0);
se([ue(!0, ft.PREVIEW_BUILD ? 0 : 1)], J.prototype, "developerToolbarNetwork", void 0);
se([ue(ft.SANITY_DATASET, 2)], J.prototype, "developerCMSDatasetOverrideValue", void 0);
se([ue(void 0, 1)], J.prototype, "developerUserRoleOverrideValue", void 0);
se([ue(void 0, 2)], J.prototype, "developerUsageLimitsOverrideValue", void 0);
se([ue(void 0, 1)], J.prototype, "developerToolbarFeatureFlag", void 0);
se([w({
    serializer: hn
})], J.prototype, "settings", void 0);
se([Dt(()=>K, "settings", {
    optional: !1,
    nullable: !1
})], J.prototype, "user", void 0);
se([ue({}, 0)], J.prototype, "openContainers", void 0);
se([ue(void 0, 1, {
    clearOnLogout: !0
})], J.prototype, "projectInfos", void 0);
se([ue(void 0, 1, {
    clearOnLogout: !0,
    serializer: hn
})], J.prototype, "fixedPageInfos", void 0);
se([ue(void 0, 1, {
    clearOnLogout: !0
})], J.prototype, "initiativeInfos", void 0);
se([ue(void 0, 1, {
    clearOnLogout: !0
})], J.prototype, "teamInfos", void 0);
se([ue(Ss.activeIssues, 0)], J.prototype, "defaultView", void 0);
se([ue(void 0, 0)], J.prototype, "defaultViewCustomViewId", void 0);
se([ue(void 0, 0)], J.prototype, "defaultViewProjectId", void 0);
se([ue(Za.DefaultEmptyState, 1, {
    serializer: Za.Serializer
})], J.prototype, "collapsedSubIssueSectionsList", void 0);
se([ue(Za.DefaultEmptyState, 1, {
    serializer: Za.Serializer
})], J.prototype, "collapsedAttachmentSectionsList", void 0);
se([ue(Za.DefaultEmptyState, 1, {
    serializer: Za.Serializer
})], J.prototype, "collapsedGroups", void 0);
se([w({
    serializer: hn,
    persistance: ee.none
})], J.prototype, "flags", void 0);
se([w({
    serializer: hn
})], J.prototype, "notificationPreferences", void 0);
se([w({
    serializer: hn
})], J.prototype, "usageWarningHistory", void 0);
J = se([We("UserSettings")], J);
function ue(t, e, n={}) {
    return (r,s)=>{
        const {serializer: i, clearOnLogout: a} = n;
        AE[s] = ms,
        a && jE.push(s);
        function o(l, d) {
            if (d === 0) {
                const u = Fa(this.settings);
                this.settings[s] = l && i ? i.serialize(l) : l,
                this.markPropertyChanged("settings", u),
                this.save()
            } else if (d === 1)
                try {
                    const u = l && i ? i.serialize(l) : l;
                    this.browserPersistedSettings[s] = u,
                    ke.set(yo, this.browserPersistedSettings),
                    this.broadcastChannel != null && this.broadcastChannel.postMessage({
                        type: "setValue",
                        key: s,
                        value: r0(u)
                    })
                } catch (u) {
                    F.error("Error persisting browser user settings", u),
                    ke.remove(yo)
                }
            else if (d === 2)
                try {
                    const u = l && i ? i.serialize(l) : l;
                    this.browserSessionPersistedSettings[s] = u,
                    ke.setSession(yo, this.browserSessionPersistedSettings);
                    const h = ke.get(wd) ?? {};
                    h[s] = u,
                    ke.set(wd, h)
                } catch (u) {
                    F.error("Error persisting browserSession user settings", u),
                    ke.removeSession(yo),
                    ke.remove(wd)
                }
            else
                d === 3 && (this.ephemeralSettings[s] = l && i ? i.serialize(l) : l)
        }
        Object.defineProperty(r, s, {
            get: function() {
                let l;
                const d = this
                  , u = d.getStorageForPersistance(e);
                if (u[s] !== void 0 && (l = u[s]),
                l === void 0 || hw(l)) {
                    const h = Z1e.filter(f=>f !== e);
                    for (const f of h)
                        if (l = d.getStorageForPersistance(f)[s],
                        l !== void 0 && !hw(l)) {
                            o.apply(d, [l, e]),
                            o.apply(d, [void 0, f]);
                            break
                        }
                }
                return l == null && (typeof t == "function" ? l = t.call(null, d) : l = t),
                l && i ? i.deserialize(l) : l
            },
            set: function(l) {
                o.apply(this, [l, e])
            },
            enumerable: !0,
            configurable: !1
        })
    }
}
const q1e = "userSettings";
var mw;
(function(t) {
    t[t.online = 0] = "online",
    t[t.offline = 1] = "offline"
}
)(mw || (mw = {}));
class W1e {
    constructor() {
        this.onlineStatus = 0,
        this.handleOnlineChange = Le(()=>{
            this.onlineStatus = navigator.onLine ? 0 : 1
        }
        ),
        this.onlineStatus = navigator.onLine ? 0 : 1,
        window.addEventListener("online", this.handleOnlineChange),
        window.addEventListener("offline", this.handleOnlineChange),
        Ln(this, {
            onlineStatus: ut
        })
    }
    refreshOnlineStatus() {
        this.handleOnlineChange()
    }
}
class gw {
    static reactNodeToString(e, n="") {
        if (!e)
            return "";
        if (typeof e == "string")
            return e;
        if (typeof e == "number")
            return e.toString();
        if (Array.isArray(e))
            return e.map(s=>this.reactNodeToString(s)).join(n);
        const r = e.props;
        return r && r.children ? this.reactNodeToString(r.children, n) : ""
    }
}
const cd = class cd {
}
;
cd.show = Le(e=>{
    var n;
    (n = cd.presentToast) == null || n.call(cd, e)
}
);
let cf = cd;
var Lo;
(function(t) {
    t[t.info = 0] = "info",
    t[t.success = 1] = "success",
    t[t.warning = 2] = "warning",
    t[t.error = 3] = "error",
    t[t.tip = 4] = "tip"
}
)(Lo || (Lo = {}));
const G1e = 8500;
class kd {
    constructor(e, n, r, s) {
        var i;
        this.reOccurred = !1,
        this.type = e,
        this.title = n,
        this.description = r,
        this.icon = s == null ? void 0 : s.icon,
        this.link = s == null ? void 0 : s.link,
        this.button = s == null ? void 0 : s.button,
        this.id = (s == null ? void 0 : s.id) || this.type + gw.reactNodeToString(n) + gw.reactNodeToString(r) + ((i = this.link) == null ? void 0 : i.url),
        this.singleLine = (s == null ? void 0 : s.singleLine) !== void 0 ? s.singleLine : e === Lo.tip,
        this.dontBounceOnRecurrence = s == null ? void 0 : s.dontBounceOnRecurrence,
        this.onClose = s == null ? void 0 : s.onClose,
        this.timeout = ((s == null ? void 0 : s.timeout) ?? G1e) || be.YEAR,
        Ln(this, {
            reOccurred: ut
        })
    }
    show() {
        return cf.show(this),
        this
    }
}
function pm(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Zd extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
pm([pe(()=>K, "pushSubscriptions", {
    optional: !1,
    nullable: !1,
    persistance: ee.none
})], Zd.prototype, "user", void 0);
pm([w({
    serializer: hn
})], Zd.prototype, "data", void 0);
Zd = pm([We("PushSubscription")], Zd);
var f3;
(function(t) {
    t.desktopThenPush = "desktopThenPush",
    t.desktopAndPush = "desktopAndPush",
    t.desktop = "desktop",
    t.push = "push"
}
)(f3 || (f3 = {}));
var yw;
(function(t) {
    t.web = "web",
    t.apple = "apple",
    t.appleDevelopment = "appleDevelopment",
    t.firebase = "firebase"
}
)(yw || (yw = {}));
function K1e(t) {
    const e = Mt.gql`
    query PushSubscriptionTest($strategy: SendStrategy) {
      pushSubscriptionTest(sendStrategy: $strategy) {
        success
      }
    }
  `;
    return t.mutate(e, {
        strategy: Xt.isElectron ? f3.desktop : f3.push
    })
}
function E5(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
var Cw;
(function(t) {
    t[t.unknown = 0] = "unknown",
    t[t.ineligible = 1] = "ineligible",
    t[t.denied = 2] = "denied",
    t[t.unsubscribed = 3] = "unsubscribed",
    t[t.subscribing = 4] = "subscribing",
    t[t.unsubscribing = 5] = "unsubscribing",
    t[t.subscribed = 6] = "subscribed",
    t[t.error = 7] = "error"
}
)(Cw || (Cw = {}));
class ou {
    constructor(e) {
        this.subscriptionStatus = 0,
        this.store = e,
        L3(this)
    }
    async subscribeUser(e=!0) {
        if (!this.registration)
            throw Error("Service worker not registered");
        const n = ft.PUSH_MESSAGE_VAPID_PUBLIC_KEY || ""
          , r = Y1e(n);
        this.subscriptionStatus = 4;
        try {
            this.subscription = await this.registration.pushManager.subscribe({
                userVisibleOnly: !0,
                applicationServerKey: r
            })
        } catch (s) {
            return oL && s.message.includes("push service error") ? new kd(Lo.error,"Brave settings need updating","To enable browser push notifications you must enable 'Use Google services for push messaging.' in Brave settings.").show() : new kd(Lo.error,"Error subscribing","Please go to your desktop settings and grant Linear permissions to post push notifications to enable this feature.").show(),
            !1
        }
        if (this.subscription && this.user) {
            ke.setPersistent("subscribed_to_push_notifications", this.user, !0);
            const s = new Zd;
            s.data = this.subscription.toJSON(),
            s.user = this.user,
            await s.save(!0).result().catch(async i=>{
                var a;
                await ((a = this.subscription) == null ? void 0 : a.unsubscribe()),
                this.setStatus()
            }
            )
        }
        return this.setStatus(),
        e && K1e(this.store.graphQLClient),
        !0
    }
    async unsubscribeUser() {
        if (!this.subscription)
            throw Error("No active subscription");
        if (!this.user)
            throw Error("No active user");
        ke.removePersistent("subscribed_to_push_notifications", this.user),
        this.subscriptionStatus = 5;
        const e = this.subscriptionForThisBrowser;
        await this.subscription.unsubscribe() ? (this.subscription = null,
        e == null || e.delete(),
        this.setStatus()) : new kd(Lo.error,"Error unsubscribing","Could not unsubscribe from push notifications for an unknown reason.").show()
    }
    async setServiceWorkerRegistration(e) {
        if (this.registration = e,
        !this.registration || !this.registration.pushManager) {
            this.subscriptionStatus = 1;
            return
        }
        this.subscription = await this.registration.pushManager.getSubscription(),
        await this.setStatus()
    }
    async setUser(e) {
        this.user = e,
        await this.setStatus()
    }
    async setStatus() {
        if (typeof Notification > "u")
            this.subscriptionStatus = 1;
        else if (Notification.permission === "denied")
            this.subscriptionStatus = 2;
        else if (!this.user || !this.registration)
            this.subscriptionStatus = 0;
        else if (!this.registration.pushManager)
            this.subscriptionStatus = 1;
        else {
            if (!this.subscription && ke.getPersistent("subscribed_to_push_notifications", this.user) && !await this.subscribeUser(!1)) {
                this.subscriptionStatus = 7;
                return
            }
            this.subscriptionStatus = this.subscriptionForThisBrowser ? 6 : 3
        }
    }
    get subscriptionForThisBrowser() {
        if (!(!this.user || !this.subscription)) {
            for (const e of this.user.pushSubscriptions.elements)
                if (Yo(e.data, this.subscription.toJSON()))
                    return e
        }
    }
}
E5([rt], ou.prototype, "subscribeUser", null);
E5([rt], ou.prototype, "unsubscribeUser", null);
E5([rt], ou.prototype, "setServiceWorkerRegistration", null);
E5([rt], ou.prototype, "setUser", null);
E5([rt], ou.prototype, "setStatus", null);
function Y1e(t) {
    const e = "=".repeat((4 - t.length % 4) % 4)
      , n = (t + e).replace(/\-/g, "+").replace(/_/g, "/")
      , r = window.atob(n)
      , s = new Uint8Array(r.length);
    for (let i = 0; i < r.length; ++i)
        s[i] = r.charCodeAt(i);
    return s
}
class mm {
    static applyDeltaSyncOnModelObjectCollection(e, n) {
        if (n.length === 0)
            return e;
        const r = {}; // Map id to models.
        for (const a of e)
            r[a.id] = a;
        const s = new Set;
        for (const a of n) // Loop though all A D actions, these model will be kept.
            (a.action === "A" || a.action === "D") && s.add(a.modelId);
        let i = !1;
        for (const a of n) {
            const o = a.action;
            if (o === "I" || o === "V" || o === "U") {
                const l = r[a.modelId];
                l ? Object.assign(l, a.data) : (i || (e = [...e],
                i = !0),
                e.push({
                    ...a.data,
                    __class: a.modelName
                }))
            }
        }
        return e.filter(a=>!s.has(a.id))
    }
}
function ME(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const Xm = class Xm { // Bootstrap Helper
    static async fullBootstrap(e, n, r, s) { 
        Hi.addStartupSpanTag("fullBootstrap", !0),
        F.network("Full bootstrap");
        const i = n.join(",")
          , a = r.join(",");
        let o = `/sync/bootstrap?type=full&onlyModels=${i}&partialModels=${a}`;
        (s == null ? void 0 : s.forceNoCache) === !0 && (o += "&noCache=true");
        const l = await e.restModelsJsonStream(o)
          , d = l.metadata
          , u = l.syncActions || []
          , h = l.models
          , f = {
            databaseVersion: (d == null ? void 0 : d.databaseVersion) || 0,
            lastSyncId: (d == null ? void 0 : d.lastSyncId) || 0,
            subscribedSyncGroups: (d == null ? void 0 : d.subscribedSyncGroups) || [],
            method: d.method,
            data: h,
            syncDeltaPackets: u.reverse()
        };
        return F.network("Full bootstrap done", {
            returnedModelsCount: d.returnedModelsCount
        }),
        f
    }
    static async partialBootstrap(e, n, r, s) {
        Hi.addStartupSpanTag("partialBootstrap", !0),
        F.network("Partial bootstrap", {
            modelsToLoad: n,
            syncGroupsToLoad: r
        });
        let i = `/sync/bootstrap?type=partial&onlyModels=${n.join(",")}`;
        r && (i += `&syncGroups=${r.join(",")}`),
        (s == null ? void 0 : s.forceNoCache) === !0 && (i += "&noCache=true"),
        s != null && s.firstSyncId && (i += `&firstSyncId=${s.firstSyncId}`); // Which basically means: please give me models since action
        const a = await e.restModelsJsonStream(i) // Partial bootstrapp is very similar to fullBootstrap
        // except LSE will add parameters syncGroups and lastSyncId
          , o = a.metadata
          , l = a.syncActions || []
          , d = mm.applyDeltaSyncOnModelObjectCollection(a.models, l.reverse())
          , u = {
            databaseVersion: (o == null ? void 0 : o.databaseVersion) || 0,
            lastSyncId: (o == null ? void 0 : o.lastSyncId) || 0,
            subscribedSyncGroups: (o == null ? void 0 : o.subscribedSyncGroups) || [],
            method: o.method,
            data: d
        };
        return F.network("Partial bootstrap done", {
            modelsToLoad: n,
            syncGroupsToLoad: r,
            returnedModelsCount: o.returnedModelsCount
        }),
        u
    }
    static validateDependencies(e) {
        var r;
        const n = at.store;
        for (const s of e) {
            const i = Me.getModelClass(s);
            if (i) {
                for (const o of n.syncClient.allModelsOfType(i, lr.onlyRegularModels)) {
                    const l = Me.referencedPropertiesOfModel(o.modelName);
                    for (const d of Object.keys(l)) {
                        const u = l[d];
                        if (!u.referencedProperty || u.referenceOptional || ((r = u.referencedClassResolver) == null ? void 0 : r.call(u).loadStrategy) !== dn.instant)
                            continue;
                        const h = o[d];
                        if (!o.store.findById(at, h))
                            return !1
                    }
                }
                const a = Me.dependenciesOfModel(s).filter(o=>!o.isOptional);
                for (const o of a) {
                    const l = at.store.syncClient.allModelsOfType(o.model, lr.onlyRegularModels)
                      , d = new Set;
                    for (const u of l) {
                        const h = u[o.property];
                        if (typeof h == "string")
                            d.add(h);
                        else if (Array.isArray(h))
                            for (const f of h)
                                d.add(f)
                    }
                    for (const u of d)
                        if (n.findById(at, u) === void 0)
                            return !1
                }
            }
        }
        return !0
    }
}
;
Xm.constructorName = "BootstrapHelper";
let Oo = Xm;
ME([xt.trace("startup")], Oo, "fullBootstrap", null);
ME([xt.trace("startup")], Oo, "partialBootstrap", null);
var Q1e = vK;
function X1e(t) {
    var e = Q1e(t)
      , n = e % 1;
    return e === e ? n ? e - n : e : 0
}
var J1e = X1e
  , ece = Dk
  , tce = yA
  , nce = J1e
  , rce = Math.ceil
  , sce = Math.max;
function ice(t, e, n) {
    (n ? tce(t, e, n) : e === void 0) ? e = 1 : e = sce(nce(e), 0);
    var r = t == null ? 0 : t.length;
    if (!r || e < 1)
        return [];
    for (var s = 0, i = 0, a = Array(rce(r / e)); s < r; )
        a[i++] = ece(t, s, s += e);
    return a
}
var ace = ice;
const gm = Cn(ace)
  , Mc = "_transactions"
  , dr = "_meta";
var bw;
(function(t) {
    t[t.forceOn = 1] = "forceOn",
    t[t.forceOff = 2] = "forceOff"
}
)(bw || (bw = {}));
/** FullStore */
class TE { 
    get isReady() {
        return this.ready 
    }
    get requiresFlushing() {
        return this.cachedData !== void 0 && !this.flushed
    }
    get isCurrentlyFlushing() {
        return this.cachedData !== void 0 && this.flushed && !this.flushErrored
    }
    waitUntilReady() {
        if (!this.readyPromise) {
            if (this.ready)
                return Id;
            this.readyPromise = new Promise(e=>{
                this.readyPromiseResolver = e
            }
            )
        }
        return this.readyPromise
    }
    get cacheSize() {
        var e;
        return (e = this.cachedData) == null ? void 0 : e.length
    }
    constructor(e, n, r) {
        this.ready = !1, // Whether the store is ready (has loaded data).
        this.flushed = !1, // Whether the store is in sync with the database.
        this.flushErrored = !1,
        this.graphQLClient = n,
        this.modelName = e,
        this.options = r,
        this.storeName = $1(e + Me.propertyHashOfModel(e)) // Table name in the database.
    }
    async modelCount(e) {
        return this.cachedData ? this.cachedData.length : await e.count(this.storeName) || 0
    }
    async getById(e, n, r) {
        const s = typeof n == "string" ? n : n.id;
        if (!this.isReady) {
            if (r != null && r.onlyIfLocallyAvailable)
                return;
            await this.waitUntilReady() // Wait for the store is ready. For an async store, it is always considered as ready.
        }
        return this.cachedData ? this.cachedData.find(i=>i.id === s) : e.get(this.storeName, s) // Get the model for cachedData or IndexedDB.
    }
    async getAllForIndexedKey(e, n, r) {
        return this.cachedData
            // For example, if there are cached data, LSE will try to get call comments whose issueId matches n.value (which is the Issue's id).
            ? this.cachedData.filter(s=>s[n.key] === n.value) 
            : e 
                // Otherwise it will try to read the database with the Issue's id as index.
                // Please notice that even if `coveringPartialIndexValues` may have multi entries,
                // the index used to get data from IndexedDB will be the most direct reference.
                // For example, get comments with issueId-<xxx>.
                ? await e.getAllFromIndex(this.storeName, n.key, IDBKeyRange.only(n.value)) 
                : []
    }
    async getByIds(e, n) {
        return this.isReady || await this.waitUntilReady(),
        this.cachedData ? this.cachedData.filter(r=>n.includes(r.id)) : (await Promise.all(n.map(r=>e.get(this.storeName, r)))).concrete()
    }
    async getAll(e) {
        return this.isReady || await this.waitUntilReady(),
        this.cachedData ? this.cachedData : await e.getAll(this.storeName)
    }
    checkStore(e, n, r) {
        // Check if the model has table in the database. If not, create a table.
        r.has(this.storeName) || (F.network(`Creating new store ${this.storeName} for model ${this.modelName}`),
        // n for IDBTransactionProxy
        n.objectStore(dr).put({ // Put the table's info into _meta table.
            persisted: !1 // Newly created table are not persisted yet.
        }, this.modelName),
         // Create a table in the database for the model, the table's name is the model's hash.
        e.createObjectStore(this.storeName, {
            keyPath: "id"
        })),
        // Create indexes on the new table.
        this.createIndexes(n),
        r.delete(this.storeName) // Mark table checked.
    }
    async clearStore(e) {
        return e.clear(this.storeName)
    }
    setModelData(e) {
        this.cachedData = e, // cacheData is for caching values that should be written into the database
        // it would be cleared when the flush is done
        this.ready = !0, // Mark itself as ready.
        this.flushed = !1 // Mark itself as not flushed so later it will be saved to the database.
    }
    async checkIsReady(e) { // e for IDBTransaction
        const [n,r] = await Promise.all([e.objectStore(dr).get(this.modelName), e.objectStore(this.storeName).count()]);
        // Since partial store is not required, they will be set to ready.
        n && typeof n == "object" && n.persisted && (!this.options.required || r > 0) ? this.ready = !0 : this.ready = !1
    }
    async setIsReady(e) {
        var r;
        const n = e.transaction([dr], "readwrite", {
            durability: "relaxed"
        });
        await n.objectStore(dr).put({
            persisted: !0
        }, this.modelName),
        await n.done,
        this.ready = !0,
        (r = this.readyPromiseResolver) == null || r.call(this)
    }
    async hasModelsForPartialIndexValues(e, n, r) {
        return !0
    }
    async removeLoadedPartialIndexValues(e, n) {
        return []
    }
    async setPartialIndexValue(e, n) {}
    async getPartialIndexValues(e) {}
    inflightRequestForPartialIndexValue(e) {}
    async flush(e) { // sync the in-memory store with the database
        if (!this.cachedData || this.flushed)
            return;
        this.flushed = !0;
        const n = gm(this.cachedData, 1e4);
        n.length === 0 && n.push([]),
        F.network(`Flushing object store ${this.modelName}`, {
            chunks: n.length,
            models: this.cachedData.length
        });
        try {
            e.clear(this.storeName);
            const r = [];
            for (; n.length; ) {
                const i = n.shift()
                  , a = n.length === 0 ? [this.storeName, dr] : [this.storeName]
                  , o = e.transaction(a, "readwrite", {
                    durability: "relaxed"
                })
                  , l = Eo(o)
                  , d = l.objectStore(this.storeName);
                for (const u of i || [])
                    d.put(u);
                n.length === 0 && l.objectStore(dr).put({
                    persisted: !0
                }, this.modelName),
                r.push(o.done),
                await Na(0)
            }
            const s = ta();
            return Promise.all(r).then(async()=>{
                var i;
                this.flushed = !1,
                this.cachedData = void 0,
                (i = this.readyPromiseResolver) == null || i.call(this),
                s.resolve()
            }
            ).catch(()=>{
                this.flushErrored = !0,
                s.reject()
            }
            ),
            {
                writeComplete: s
            }
        } catch (r) {
            throw this.flushErrored = !0,
            r
        }
    }
    createIndexes(e) {
        const n = e.objectStore(this.storeName)
          , r = Me.propertiesOfModel(this.modelName);
        for (const s in r) {
            const i = r[s];
            i.indexed && (n.indexNames.contains(s) || (F.network(`Creating${i.multiEntry ? " multientry" : ""} index ${s} for model ${this.modelName}`),
            // Create table for each entity.
            n.createIndex(s, s, {
                multiEntry: i.multiEntry
            })))
        }
    }
}
/** PartialStore */
const Jm = class Jm extends TE { // PartialStore
    constructor(e, n) {
        super(e, n, {
            required: !1
        }),
        this.partialIndexStoreName = this.storeName + "_partial" // Partial store has a _partial database.
    }
    checkStore(e, n, r) {
        // n for IDBTransactionProxy
        super.checkStore(e, n, r),
        // Create partial index table for PartialStore.
        r.has(this.partialIndexStoreName) || e.createObjectStore(this.partialIndexStoreName, {
            keyPath: "id"
        }),
        r.delete(this.partialIndexStoreName)
    }
    async clearStore(e) {
        return await super.clearStore(e),
        e.clear(this.partialIndexStoreName)
    }
    waitUntilReady() {
        return Id
    }
    async getById(e, n, r) {
        const s = typeof n == "string" ? n : n.id;
        if (!this.isReady) {
            const i = typeof n == "string" ? [n] : n.partialIndexValues
              , a = await super.getById(e, s); // Call getById of FullStore.
            return a && a !== "needs_network_hydration" 
                ? a 
                // Here we determine if we should need from network.
                : r != null && r.onlyIfLocallyAvailable ||  // 1. Not onlyIfLocallyAvailable
                    // 2. If no partialIndex is provided.
                    // 3. canSkipNetworkHydration returns true.
                    e && (i === void 0 || await this.hasModelsForPartialIndexValues(e, i) || r != null && r.canSkipNetworkHydration && await (r == null ? void 0 : r.canSkipNetworkHydration())) || 
                    !Me.getModelClass(this.modelName) 
                        ? void 0 
                        : "needs_network_hydration"
        }
        return super.getById(e, s)
    }
    async getAllForIndexedKey(e, n, r) {
        // e for Database Proxy
        // n for { key, value, coveringPartialIndexValues }
        // n for options
        return this.isReady 
            ? await super.getAllForIndexedKey(e, n) 
            : e && (n.coveringPartialIndexValues === void 0  
                    || await this.hasModelsForPartialIndexValues(e, n.coveringPartialIndexValues) 
                    || r != null && r.canSkipNetworkHydration && await (r == null ? void 0 : r.canSkipNetworkHydration())) 
                // LSE will perform network hydration if
                // 1. There's no covering partial index
                // 2. Check if the partial indexed are in the parital_database
                // 3. can skip network hydration
                // Otherwise it will try to read the database with the Issue's id as index.
                ? await e.getAllFromIndex(this.storeName, n.key, IDBKeyRange.only(n.value)) 
                : "needs_network_hydration"
    }
    async hasModelsForPartialIndexValues(e, n, r) {
        if (this.isReady)
            return !0;
        if (n.length === 0) // No covering partial index.
            return !1;
        if (r != null && r.requireAll) {
            for (const s of n)
                // As for "requireAll", if any indexed key cannot be found in partial store, thisd method returns false.
                if (!await e.get(this.partialIndexStoreName, IDBKeyRange.only(s)))
                    return !1;
            return !0
        } else {
            for (const s of n)
                // If any indexed key can be found in partial store, this method returns true.
                if (await e.get(this.partialIndexStoreName, IDBKeyRange.only(s)))
                    return !0;
            return !1
        }
    }
    async removeLoadedPartialIndexValues(e, n) {
        if (this.isReady || n.length === 0)
            return [];
        const s = e.transaction(this.partialIndexStoreName, "readonly").objectStore(this.partialIndexStoreName);
        if (await s.count() < 5e3) {
            const a = await s.getAll()
              , o = new Set(a.map(l=>l.id));
            return n.filter(l=>!o.has(l))
        } else {
            const a = [];
            for (const o of n)
                await s.getKey(o) === void 0 && a.push(o);
            return a
        }
    }
    async setPartialIndexValue(e, n) {
        await e.put(this.partialIndexStoreName, {
            id: n
        })
    }
    async getPartialIndexValues(e) {
        return (await e.getAll(this.partialIndexStoreName)).map(r=>r.id)
    }
}
;
Jm.schemaVersion = 1;
let p3 = Jm;
/** SyncActionStore */
class oce {
    constructor() {
        this.storeIsEmpty = !1,
        this.storeName = $1("syncActionStore" + Bc.syncActionStoreVersion)
    }
    checkStore(e, n) {
        if (!n.has(this.storeName)) {
            const r = e.createObjectStore(this.storeName, {
                keyPath: "id"
            });
            r.createIndex("syncId", "syncId"),
            r.createIndex("modelName", "modelName"),
            this.storeIsEmpty = !0
        }
        n.delete(this.storeName)
    }
    async getRemovedModelIds(e, n, r) {
        // r for lastSyncId
        if (this.storeIsEmpty)
            return [];
        const s = ta()
          , i = []
          , o = Eo(e).objectStore(this.storeName).index("modelName").openCursor(IDBKeyRange.only(n));
        return o.onsuccess = function() {
            const l = o.result;
            if (l) {
                const d = l.value;
                d.syncId >= r && i.push(d.id), // filter actions whose syncId is larger than the lastSyncId
                l.continue()
            } else
                s.resolve(i)
        }
        ,
        s
    }
    async cleanupStore(e, n) {
        if (this.storeIsEmpty)
            return;
        const r = ta()
          , s = Eo(e).objectStore(this.storeName)
          , i = s.index("syncId").openKeyCursor(IDBKeyRange.upperBound(n));
        return i.onsuccess = function() {
            const a = i.result;
            a ? (a.primaryKey && s.delete(a.primaryKey),
            a.continue()) : r.resolve()
        }
        ,
        r
    }
    addSyncPacket(e, n) {
        if (this.storeIsEmpty = !1,
        n.action === "I" || n.action === "V" || n.action === "U")
            // Insert, Update, Unacrhive action
            // We remove the model from SyncActionStore
            n.modelId && e.delete(n.modelId);
        else if (n.action === "A" || n.action === "D") {
            // Archive and Deletion Action
            // Insert the action to the Store
            // So this store basically stores what models have been removed.
            const r = {
                id: n.modelId,
                modelName: n.modelName,
                syncId: n.id
            };
            e.put(r)
        }
    }
}
/** StoreManager */
class cce {
    get onSavingStoreCountChange() {
        return this._onSavingStoreCountChange
    }
    get requiresFlushing() {
        return this.objectStores.find(e=>e.requiresFlushing) !== void 0
    }
    constructor(e, n) {
        var s;
        this.objectStoreLookup = {},
        this.objectStores = [],
        this._onSavingStoreCountChange = new Tt;
        const r = n.requiredModels.map(i=>Me.getClassName(i));
        // n.requiredModels are ['Team', 'TeamKey', 'User', 'UserSettings', 'WorkflowState', 'Organization'].
        for (const i of Me.getModelNames()) {
            const o = ((s = Me.getModelClass(i)) == null ? void 0 : s.loadStrategy) === dn.partial 
                ? new p3(i,e) // create ParitalObjectStore
                : new TE(i,e,{ // create FullObjectStore
                    required: r.includes(i)
                  });
            this.objectStoreLookup[i] = o,
            this.objectStores.push(o)
        }
        this.syncActionStore = new oce
    }
    createTransaction(e, n) {
        if (!e)
            return;
        const r = n.stores ? n.stores.map(i=>this.objectStore(i)) : this.objectStores
          , s = r.map(i=>i.storeName);
        n.metaStore && s.push(dr),
        n.syncActionStore && s.push(this.syncActionStore.storeName);
        try {
            const i = e.transaction(s, "readwrite", {
                durability: "relaxed"
            })
              , a = Eo(i)
              , o = {};
            for (const l of r)
                o[l.modelName] = a.objectStore(l.storeName);
            return n.syncActionStore && (o[this.syncActionStore.storeName] = a.objectStore(this.syncActionStore.storeName)),
            n.metaStore && (o[dr] = a.objectStore(dr)),
            {
                transaction: i,
                objectStores: o
            }
        } catch {
            return
        }
    }
    createPartialIndexTransaction(e) {
        if (!e)
            return;
        const n = this.partialObjectStores.map(r=>r.partialIndexStoreName);
        try {
            const r = e.transaction(n, "readwrite", {
                durability: "relaxed"
            })
              , s = Eo(r)
              , i = {};
            for (const a of this.partialObjectStores)
                i[a.modelName] = s.objectStore(a.partialIndexStoreName);
            return {
                transaction: r,
                objectStores: i
            }
        } catch {
            return
        }
    }
    createStores(e, n) { // Create tables in the databases.
        // e for IDBDatabaseProxy
        // n for IDBTransactionProxy
        const r = new Set(e.objectStoreNames); // 
        r.has(Mc) || e.createObjectStore(Mc, { // Create "_transactions" table
            keyPath: "id",
            autoIncrement: !0
        }),
        r.has(dr) || e.createObjectStore(dr), // Create "_meta" table
        r.delete(Mc),
        r.delete(dr);
        for (const s of this.objectStores)
            s.checkStore(e, n, r); // Make sure
        this.syncActionStore.checkStore(e, r),
        r.forEach(s=>{ // Delete old models.
            F.network(`Deleting old store ${s}`),
            e.deleteObjectStore(s)
        }
        )
    }
    async clearStores(e) {
        await Promise.all(this.objectStores.map(n=>n.clearStore(e)))
    }
    objectStore(e) {
        return this.objectStoreLookup[e]
    }
    setModelData(e, n) {
        this.objectStore(e).setModelData(n)
    }
    get readyStores() {
        return this.objectStores.filter(e=>e.isReady)
    }
    async flush(e) {
        const n = this.objectStores.sortBy(s=>s.cacheSize ?? 0).filter(s=>s.requiresFlushing).map(s=>s.flush(e).then(i=>(i == null || i.writeComplete.catch(Df).finally(()=>this.updateFlushingCount()),
        i)).catch(()=>{
            this.updateFlushingCount()
        }
        ))
          , r = (await Promise.all(n)).concrete().map(s=>s.writeComplete);
        return {
            updatesFlushed: Promise.all(r)
        }
    }
    async statistics(e) {
        const n = {};
        return await Promise.all(this.objectStores.map(async r=>{
            n[r.modelName] = {
                count: await r.modelCount(e),
                partialIndexValues: await r.getPartialIndexValues(e)
            }
        }
        )),
        n
    }
    async checkReadinessOfStores(e) {
        // check if all stores are ready, including the _meta store
        const n = e.transaction(this.objectStores.map(r=>r.storeName).concat(dr), "readwrite");
        await Promise.all(this.objectStores.map(r=>r.checkIsReady(n)))
    }
    get partialObjectStores() {
        return this.objectStores.filter(e=>e instanceof p3)
    }
    updateFlushingCount() {
        this._onSavingStoreCountChange.fire(this.objectStores.filter(e=>e.isCurrentlyFlushing).length)
    }
}
function Gn(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
// #region Database
/** Database */
const eg = class eg { // class: Database
    get onDatabaseUnavailable() {
        return this._onDatabaseUnavailable
    }
    get onSavingStoreCountChange() {
        return this.storeManager.onSavingStoreCountChange
    }
    requiredBootstrap() { // Determine what type of boostrapping we need to perform.
        var o;
        const e = this.metadata.lastSyncId
          , n = Me.getModelNamesByMaxLoadStrategy(dn.lazy)
          , r = new Set(this.storeManager.readyStores.map(l=>l.modelName))
          , s = n.filter(l=>!r.has(l))
          , i = ft.LINEAR_DEMO_ORGANIZATION_ID && ((o = this.openOptions) == null ? void 0 : o.organizationId) === ft.LINEAR_DEMO_ORGANIZATION_ID
          , a = hs || i ? !1 : this.hasTimelyData(s.length === 0);
        return r.size === 0 || !e || navigator.onLine === !0 && a === !1 ? {
            type: "full",
            untimelyLocalData: !a,
            modelsToLoad: n,
            partialModels: Me.getModelNames(dn.partial),
            lastSyncId: 0
        } : s.length === 0 ? {
            type: "local",
            modelsToLoad: s,
            partialModels: [],
            lastSyncId: e
        } : {
            type: "partial",
            modelsToLoad: s,
            partialModels: [],
            lastSyncId: e
        }
    }
    constructor(e, n) {
        this.options = n,
        this._onDatabaseUnavailable = new Tt,
        this.handleReadError = r=>{
            const {error: s, method: i, modelName: a} = r;
            throw F.remote(`Database read error for ${i}`, {
                error: s.message,
                modelName: a
            }),
            F.warning(`Database read error for ${i}. ${s.message}`, {
                error: s.name,
                stack: s.stack,
                modelName: a
            }),
            Jn.increment("error.database.read"),
            s
        }
        ,
        this.handleWriteError = r=>{
            F.remote("Database write error detected", {
                error: r.message
            }),
            F.warning(`Database write error detected. ${r.message}`, {
                error: r.name,
                stack: r.stack
            }),
            this.deleteDatabase().catch(s=>{
                F.warning("Error deleting database", {
                    error: s,
                    name: this.name
                })
            }
            ),
            Jn.increment("error.database.write"),
            r.name === "QuotaExceededError" && (F.warning("Database quota exceeded. Deleting local database."),
            Jn.increment("error.database.quota_exceeded"),
            this._onDatabaseUnavailable.fire(0),
            Xn.deleteAllDatabases().catch(s=>{
                F.warning("Error deleting all databases", {
                    error: s
                })
            }
            ))
        }
        ,
        this.graphQLClient = e
    }
    async open(e) {
        this.openOptions = e;
        const n = mn.getValue(mn.clientDatabaseMinVersion, 50)
          // When calling this method, linear_databases would be created.
          , r = await Xn.databaseInfo({
            ...e,
            minVersion: n
        });
        Xn.registerDatabase(r), // Save the database's meta into "databases" database.
        this.name = r.name,
        F.network(`Using database ${this.name} schema version ${r.schemaVersion}`);
        let s = !1;
        try {
            // Bootstrap 2. Connect to the database and see if should create or migrate the database.
            this.database = await p_(this.name, r.schemaVersion, { // Use schemaVersion to check if a migration is required.
                // When the schemaVersion changes, or there's no database with name `this.name`, the upgrade callback
                // would be called to creat the database.
                upgrade: (i,a,o,l)=>{
                    // i for the DatabaseProxy
                    // l for the Transaction
                    F.info("Upgrading database.", {
                        name: this.name
                    }),
                    F.network(`Upgrading database ${this.name}`),
                    s = !0,
                    // When creating the database, all ObjectStore will be used to
                    // create corresponding tables.
                    this.storeManager.createStores(i, l)
                }
                ,
                blocked: (i,a)=>{
                    F.info("Database connection blocked by older database version.", {
                        currentVersion: i,
                        blockedVersion: a
                    })
                }
                ,
                blocking: ()=>{
                    this.close("blocking"),
                    Xn.deletingDatabase || this._onDatabaseUnavailable.fire(1)
                }
                ,
                terminated: ()=>{
                    F.info("Database connection abnormally terminated."),
                    this.handleWriteError(new Error("Database connection terminated"))
                }
            })
        } catch (i) {
            if (/The requested version .+ is less than the existing version/.test((i == null ? void 0 : i.message) || ""))
                try {
                    F.warning(`Increasing database ${r.name} version because of schema version mismatch.`, {
                        errorMessage: i.message
                    }),
                    await Xn.incrementUserVersion(e.userId),
                    window.location.replace(window.location.href),
                    await new Promise(pa)
                } catch {
                    throw i
                }
            throw i
        }
        // Get metadata of the database.
        this.metadata = await this.getMetadata(s),
        await this.storeManager.checkReadinessOfStores(this.database), // On first bootstrapping, all models are not ready.
        Xn.cleanOutdatedDatabases(e.userId, r.version, r.userVersion),
        hs || Xn.deleteOutdatedDemoDatabases()
    }
    close(e) {
        F.network(`Closing database due to ${e}`, {
            database: {
                name: this.name,
                metadata: this.metadata
            }
        }),
        this.database && this.database.close(),
        this.database = void 0
    }
    async writeTransaction(e, n) {
        const r = this.storeManager.createTransaction(this.database, e);
        if (!r)
            return await n({
                get: async()=>{}
                ,
                put: pa,
                add: pa,
                delete: pa,
                iterate: pa,
                addSyncPacket: pa,
                setLastSyncId: pa,
                setFirstSyncId: pa,
                setSubscribedSyncGroups: pa,
                commit: pa
            }),
            {
                writeComplete: Promise.resolve()
            };
        const {objectStores: s, transaction: i} = r
          , a = this.storeManager.syncActionStore;
        let o = !1, l = 0, d = 0, u;
        const h = {}
          , f = ()=>{
            if (o)
                throw new Error("Commit operation invoked after transaction has been closed");
            o = !0,
            d && (this.metadata.firstSyncId = d),
            l && (this.metadata.lastSyncId = l,
            this.metadata.firstSyncId || (this.metadata.firstSyncId = l)),
            u && (this.metadata.subscribedSyncGroups = u),
            this.metadata.updatedAt = new Date,
            (l || d || u) && s[dr].put(this.metadata, "meta")
        }
        ;
        if (await n({
            get: (p,m)=>new Promise((g,C)=>{
                const b = s[p].get(m);
                b.onsuccess = ()=>{
                    g(b.result)
                }
                ,
                b.onerror = ()=>{
                    C(b.error)
                }
            }
            ),
            put: (p,m)=>{
                s[p] && s[p].put(m)
            }
            ,
            add: (p,m)=>{
                if (s[p]) {
                    const g = s[p].get(IDBKeyRange.only(m.id));
                    g.onsuccess = ()=>{
                        g.result === void 0 && s[p].put(m)
                    }
                }
            }
            ,
            delete: (p,m)=>{
                s[p] && (s[p].delete(m),
                (h[p] = h[p] || []).push(m))
            }
            ,
            iterate: async(p,m,g)=>{
                const C = Eo(i).objectStore(this.storeManager.objectStore(p).storeName);
                if (m && C.indexNames.contains(m.key))
                    await Promise.all(m.values.map(b=>{
                        const k = ta()
                          , S = C.index(m.key).openCursor(IDBKeyRange.only(b));
                        return S.onsuccess = function() {
                            const D = S.result;
                            D ? (g(D),
                            D.continue()) : k.resolve()
                        }
                        ,
                        k
                    }
                    ));
                else {
                    const b = m ? new Set(m.values) : void 0
                      , k = ta()
                      , S = C.openCursor();
                    S.onsuccess = function() {
                        const D = S.result;
                        if (D) {
                            if (m) {
                                const R = D.value[m.key];
                                Array.isArray(R) ? R.find(T=>b.has(T)) && g(D) : b.has(R) && g(D)
                            } else
                                g(D);
                            D.continue()
                        } else
                            k.resolve()
                    }
                    ,
                    await k
                }
            }
            ,
            addSyncPacket(p) {
                a.addSyncPacket(s[a.storeName], p)
            },
            setLastSyncId: p=>{
                l = Math.max(p, l)
            }
            ,
            setFirstSyncId: p=>{
                d = Math.max(p, d)
            }
            ,
            setSubscribedSyncGroups(p) {
                u = p
            },
            commit: f
        }),
        o || f(),
        Object.keys(h).length !== 0) {
            const p = this.storeManager.createPartialIndexTransaction(this.database);
            if (p) {
                const m = this.storeManager.partialObjectStores.map(g=>g.modelName);
                for (const [g,C] of Object.entries(h)) {
                    const b = p.objectStores[g];
                    if (b && m.includes(g))
                        for (const S of C)
                            b.delete(S);
                    const k = this.storeManager.partialObjectStores;
                    for (const S of k) {
                        const D = p.objectStores[S.modelName];
                        for (const R of Zn.partialIndexInfoForModel(S.modelName, g))
                            for (const T of C) {
                                const B = Zn.createPartialIndexValue(R.path, T);
                                D.delete(B)
                            }
                    }
                }
            }
        }
        return {
            writeComplete: i.done
        }
    }
    async getAllInitialHydratedModelData() {
        const e = this.database;
        if (!e)
            throw new Error("Trying to access closed database");
        const n = Me.getModelNames(dn.instant)
          // Read models that should be load instantly from ObjectStore.
          // During a full boostrapping, models are cached in the ObjectStore
          // so them do not retrieve from IndexedDB.
          , r = n.map(o=>this.storeManager.objectStore(o).getAll(e))
          , s = await Promise.all(r).catch(o=>this.handleReadError({
            error: o,
            method: "getAllInitialHydratedModelData"
        }));
        let i = 0;
        const a = {};
        for (const o of n)
            a[o] = s[i++];
        return a
    }
    objectStoreReady(e) {
        return this.storeManager.objectStore(e).isReady
    }
    async getModelDataById(e, n, r) {
        if (this.database) // e for class name, n for the id, r for options
            return this.storeManager.objectStore(e).getById(this.database, n, r).catch(s=>this.handleReadError({
                error: s,
                method: "getModelDataById",
                modelName: e
            }))
    }
    async getModelDataByIndexedKey(e, n, r) {
        const s = Me.getClassName(e)
          , i = this.storeManager.objectStore(s);
        try {
            return await i.getAllForIndexedKey(this.database, n, r)
        } catch (a) {
            return F.info("Failed fetching data for index", {
                indexedKey: n,
                error: a
            }),
            []
        }
    }
    async getModelDataByIds(e, n) {
        const r = this.database;
        return r ? this.storeManager.objectStore(e).getByIds(r, n).catch(s=>this.handleReadError({
            error: s,
            method: "getModelDataByIds",
            modelName: e
        })) : []
    }
    async getAllModelData(e) {
        const n = this.database;
        return n ? this.storeManager.objectStore(e).getAll(n).catch(r=>this.handleReadError({
            error: r,
            method: "getAllModelData",
            modelName: e
        })) : []
    }
    setBackendDatabaseVersion(e) {
        var n;
        this.metadata.backendDatabaseVersion = e,
        (n = this.database) == null || n.put(dr, this.metadata, "meta").catch(this.handleWriteError)
    }
    setSubscribedSyncGroups(e) {
        var n;
        this.metadata.subscribedSyncGroups = e,
        (n = this.database) == null || n.put(dr, this.metadata, "meta").catch(this.handleWriteError)
    }
    async getMetadata(e=!1) {
        if (!this.database)
            throw new Error("Trying to access closed database");
        const n = await this.database.get(dr, "meta");
        return {
            backendDatabaseVersion: (n == null ? void 0 : n.backendDatabaseVersion) ?? 0,
            firstSyncId: e || n == null ? void 0 : n.firstSyncId,
            lastSyncId: (n == null ? void 0 : n.lastSyncId) ?? 0,
            updatedAt: (n == null ? void 0 : n.updatedAt)instanceof Date ? n == null ? void 0 : n.updatedAt : new Date,
            subscribedSyncGroups: n == null ? void 0 : n.subscribedSyncGroups
        }
    }
    async getAllTransactions() {
        return this.database ? await this.database.transaction(Mc).store.getAll() : []
    }
    async putTransactions(e) {
        if (this.database)
            try {
                const n = this.database.transaction(Mc, "readwrite", {
                    durability: "relaxed"
                })
                  , r = n.objectStore(Mc);
                for (const s of e) {
                    const i = s.serialize();
                    await r.put(i)
                }
                await n.done
            } catch {
                navigator.onLine === !1 && this._onDatabaseUnavailable.fire(2)
            }
    }
    async deleteTransaction(e) {
        if (this.database) {
            if (e)
                return this.database.delete(Mc, e).catch(this.handleWriteError);
            F.error("Tried to delete a transaction without an id")
        }
    }
    async resetDatabase(e) {
        if (!this.database) {
            F.error("Trying to reset closed database", void 0, {
                name: this.name
            });
            return
        }
        F.remote("Resetting database", {
            idb: {
                name: this.name
            }
        });
        try {
            e != null && e.dangerouslyIncrementUserVersion && this.openOptions ? (await Xn.incrementUserVersion(this.openOptions.userId),
            this.close("reset"),
            await this.open(this.openOptions),
            this.metadata = await this.getMetadata()) : (await this.storeManager.clearStores(this.database),
            await this.database.clear(dr),
            this.metadata = await this.getMetadata())
        } catch (n) {
            F.error("Error resetting database", n)
        }
    }
    async deleteDatabase() {
        var e;
        if ((e = this.database) == null || e.close(),
        this.database = void 0,
        F.remote("Delete local database", {
            idb: {
                name: this.name
            }
        }),
        this.name)
            return Xn.deleteDatabase(this.name)
    }
    async statistics() {
        return this.database ? this.storeManager.statistics(this.database) : {}
    }
    async bootstrap() { // bootstrapping of the database
        var s, i;
        const e = this.database;
        if (!e)
            throw new Error("Cannot bootstrap without a database");
        const n = this.requiredBootstrap();
        Hi.addStartupSpanTag("bootstrap.type", n.type),
        n.untimelyLocalData && (Hi.addStartupSpanTag("bootstrap.noTimelyData", !0),
        await this.resetDatabase({
            dangerouslyIncrementUserVersion: !0
        }));
        for (const a of n.modelsToLoad) // here Linear bootstrap all database from each Model
            e.put(dr, {
                persisted: !1 // first make all models as not persisted
            }, a).catch(()=>{}
            );
        let r;
        if (n.type !== "local") {
            // If Linear bootstraps for the first time, it could call `fullBootstrap`.
            // This would trigger a HTTP request and get models and metadata in the response.
            const o = await (n.type === "full" ? Oo.fullBootstrap(this.graphQLClient, n.modelsToLoad, n.partialModels) : Oo.partialBootstrap(this.graphQLClient, n.modelsToLoad)).catch(d=>{
                throw d.userError || F.error("Sync bootstrap query error", d, {
                    type: n.type,
                    lastSyncId: this.metadata.lastSyncId,
                    backendDatabaseVersion: this.metadata.backendDatabaseVersion
                }),
                P1(d) && d.userError ? d : new et({
                    type: "bootstrap error",
                    message: "could not load bootstrap",
                    userError: d.userError ?? !1,
                    userPresentableMessage: d.userPresentableMessage ?? "Could not reach Linear servers in order to load workspace data. Please check your internet connection and try again."
                })
            }
            );
            Hi.addStartupSpanTag("bootstrap.networkModelCount", o.data.length),
            Hi.addStartupSpanTag("bootstrap.syncPacketCount", ((s = o.syncDeltaPackets) == null ? void 0 : s.length) || 0);
            const l = o.data.reduce((d,u)=>{
                const h = u.__class;
                return delete u.__class,
                h && (d[h] = d[h] || [],
                d[h].push(u)),
                d
            }
            , {});
            for (const d of n.modelsToLoad)
                l[d] || (l[d] = []);
            r = o.syncDeltaPackets;
            // Models 
            // Each type of model will be set into ObjectStore.
            for (const d in l)
                this.storeManager.setModelData(d, l[d] ?? []);
            // Update database's metadata.
            this.metadata.backendDatabaseVersion = o.databaseVersion,
            this.metadata.subscribedSyncGroups = o.subscribedSyncGroups,
            n.type === "full" && (this.metadata.lastSyncId = o.lastSyncId,
            this.metadata.firstSyncId = o.lastSyncId),
            (i = this.database) == null || i.put(dr, this.metadata, "meta").catch(this.handleWriteError)
        }
        return {
            lastSyncId: this.metadata.lastSyncId,
            subscribedSyncGroups: this.metadata.subscribedSyncGroups,
            type: n.type,
            backendDatabaseVersion: this.metadata.backendDatabaseVersion,
            syncDeltaPackets: r
        }
    }
    async loadPartialModels(e, n) { // Database.loadPartialModels
        if (e.length === 0)
            return [];
        const r = await Oo.partialBootstrap(this.graphQLClient, e, n, {
            firstSyncId: this.metadata.firstSyncId
        });
        let s;
        return this.database && (s = await this.getRemovedModelIds(e, r.lastSyncId)),
        r.data.filter(i=>!(s != null && s.has(i.id || ""))) // Filter models that not removed since.
    }
    async hasModelsForPartialIndexValues(e, n, r) {
        return this.database !== void 0 && this.storeManager.objectStore(e).hasModelsForPartialIndexValues(this.database, n, r)
    }
    async removeLoadedPartialIndexValues(e, n) {
        return this.database === void 0 ? n : this.storeManager.objectStore(e).removeLoadedPartialIndexValues(this.database, n)
    }
    async setPartialIndexValueForModel(e, n) {
        if (!this.database)
            return;
        const r = this.storeManager.objectStore(e);
        n === Zn.FULLY_LOADED_INDEX_NAME 
            ? await r.setIsReady(this.database) // If the models is fully loaded, change model in _metadata as persisted
            : await r.setPartialIndexValue(this.database, n)
    }
    async flush() {
        if (!(!this.database || !this.storeManager.requiresFlushing))
            try {
                (await this.storeManager.flush(this.database)).updatesFlushed.catch(this.handleWriteError)
            } catch (e) {
                this.handleWriteError(e)
            }
    }
    async cleanupSyncActionStore(e) {
        const n = this.database ? this.database.transaction([this.storeManager.syncActionStore.storeName], "readwrite", {
            durability: "relaxed"
        }) : void 0;
        n && await this.storeManager.syncActionStore.cleanupStore(n, e)
    }
    async getRemovedModelIds(e, n) {
        if (!this.database)
            return;
        const r = []
          , s = this.storeManager.syncActionStore.storeName
          , i = this.database.transaction([s], "readwrite", {
            durability: "relaxed"
        });
        for (const a of e) // e for modelNames
            r.push(...await this.storeManager.syncActionStore.getRemovedModelIds(i, a, n));
        return await i.done,
        new Set(r)
    }
    get storeManager() {
        return this._storeManager || (this._storeManager = new cce(this.graphQLClient,this.options)),
        this._storeManager
    }
    hasTimelyData(e) {
        const n = mn.getValue(mn.timeBeforeFullBootstrap, {
            allModelsReady: "28d",
            hasNotReadyModels: "14d"
        })
          , r = e === !0 ? n.allModelsReady : n.hasNotReadyModels
          , s = qL(r) ? WL(r) : be.DAY * 28;
        return Date.now() - this.metadata.updatedAt.getTime() < s
    }
}
;
eg.constructorName = "Database";
/** Database */
let xn = eg;
// #endregion
Gn([xt.trace("database")], xn.prototype, "open", null);
Gn([xt.trace("database")], xn.prototype, "close", null);
Gn([xt.trace("database")], xn.prototype, "writeTransaction", null);
Gn([xt.trace("database")], xn.prototype, "getAllInitialHydratedModelData", null);
Gn([xt.trace("databaseQueries")], xn.prototype, "getModelDataById", null);
Gn([xt.trace("databaseQueries")], xn.prototype, "getModelDataByIndexedKey", null);
Gn([xt.trace("databaseQueries")], xn.prototype, "getModelDataByIds", null);
Gn([xt.trace("database")], xn.prototype, "getAllModelData", null);
Gn([xt.trace("database")], xn.prototype, "setBackendDatabaseVersion", null);
Gn([xt.trace("database")], xn.prototype, "setSubscribedSyncGroups", null);
Gn([xt.trace("database")], xn.prototype, "getMetadata", null);
Gn([xt.trace("database")], xn.prototype, "getAllTransactions", null);
Gn([xt.trace("database")], xn.prototype, "putTransactions", null);
Gn([xt.trace("database")], xn.prototype, "deleteTransaction", null);
Gn([xt.trace("database")], xn.prototype, "resetDatabase", null);
Gn([xt.trace("database")], xn.prototype, "deleteDatabase", null);
Gn([xt.trace("database")], xn.prototype, "bootstrap", null);
Gn([xt.trace("databaseQueries")], xn.prototype, "loadPartialModels", null);
Gn([xt.trace("databaseQueries")], xn.prototype, "hasModelsForPartialIndexValues", null);
Gn([xt.trace("databaseQueries")], xn.prototype, "removeLoadedPartialIndexValues", null);
Gn([xt.trace("databaseQueries")], xn.prototype, "setPartialIndexValueForModel", null);
Gn([xt.trace("database")], xn.prototype, "flush", null);
Gn([xt.trace("database")], xn.prototype, "cleanupSyncActionStore", null);
const pa = async()=>{}
;
var vw;
(function(t) {
    t[t.quotaExceeded = 0] = "quotaExceeded",
    t[t.upgraded = 1] = "upgraded",
    t[t.transactionFailedAndClientOffline = 2] = "transactionFailedAndClientOffline"
}
)(vw || (vw = {}));
var Ra;
(function(t) {
    t.full = "full",
    t.partial = "partial",
    t.local = "local"
}
)(Ra || (Ra = {}));
function ym(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const LE = {
    browserPersistedSettings: ut
};
class Nh {
    constructor() {
        this.browserPersistedSettings = ke.get("globalSettings") || {};
        for (const e in this.browserPersistedSettings || {})
            this[e] = this.browserPersistedSettings[e];
        Ln(this, LE)
    }
}
ym([Cm(m8.none, t=>{
    F.loggingLevel = t
}
)], Nh.prototype, "loggingLevel", void 0);
ym([Cm(void 0, t=>{
    t !== void 0 && (xn.lazyModelInstantiationSettings = t)
}
)], Nh.prototype, "lazyModelInstantiationSettings", void 0);
ym([Cm(void 0)], Nh.prototype, "disableServiceWorkerCaching", void 0);
function Cm(t, e) {
    return (n,r)=>{
        Object.defineProperty(n, r, {
            get: function() {
                return this.browserPersistedSettings[r] !== void 0 ? this.browserPersistedSettings[r] : t
            },
            set: function(s) {
                this.browserPersistedSettings[r] = s,
                ke.set("globalSettings", this.browserPersistedSettings),
                e && e(s)
            },
            enumerable: !0,
            configurable: !0
        }),
        LE[r] = ms,
        e && e(t)
    }
}
class ww {
    schedule(e) {
        this.scheduled || (this.scheduled = Promise.resolve(),
        this.scheduled.then(()=>{
            this.scheduled = void 0,
            e()
        }
        ))
    }
}

// #region Transactions
/** Base Transaction */
const M3 = class M3 { // BaseTransaction
    constructor(e, n, r, s, i) {
        this.retries = 0,
        this.id = M3.nextId++,
        this.type = e,
        this.model = n,
        this.batchIndex = r,
        this.syncClient = s,
        this.graphQLClient = i,
        this.completionPromise = new Promise((a,o)=>{
            this.resolve = a,
            this.reject = o
        }
        ),
        this.completionPromise.catch(()=>{}
        )
    }
    async result() {
        return this.completionPromise
    }
    cancel() {
        this.syncClient.cancelTransaction(this),
        this.rollback()
    }
    independentOf(e) {
        return this.model.id === e.model.id ? !1 : !this.model.references(e.model) && !e.model.references(this.model)
    }
    static setNextId(e) {
        this.nextId = e
    }
    async transactionCompleted(e, n=0) { 
        // e for error, it could be undefined
        // n for lastSyncId
        this.syncIdNeededForCompletion = n,
        e ? (this.rollback(),
        // If there's an execution error, that means the server has rejected
        // this transaction, so LSE should undo it.
        this.reject(e)) : (await this.syncClient.waitUntilSyncId(n),
        this.resolve(0))
        // If there's no error, we should update the lastSyncId.
    }
    offlined() {
        this.resolve(1)
    }
    prepare(e) {
        const n = this.graphQLMutation(e); // generate graphQL query mutation
        if (!n)
            return;
        const r = this;
        return r.graphQLMutationPrepared = typeof n == "string" ? {
            mutationText: n
        } : n,
        r
    }
    static graphQLMutationSize(e) {
        if (e)
            return typeof e == "string" ? e.length : e.mutationText.length + JSON.stringify(e.variables || {}).length + JSON.stringify(e.variableTypes || {}).length
    }
}
;
M3.nextId = Math.floor(Math.random() * 1e6) + 1;
/** BaseTransaction */
let Zo = M3;
var Ro;
(function(t) {
    t[t.completed = 0] = "completed",
    t[t.offlined = 1] = "offlined"
}
)(Ro || (Ro = {}));
/** ArchiveTransaction */
class m3 extends Zo {
    static async fromSerializedData(e, n, r, s) {
        const i = Me.getModelClass(s.modelClass);
        if (!i) {
            F.info(`ArchiveTransaction: Unknown model class ${s.modelClass}`);
            return
        }
        const a = await n.hydrateModel(i, s.modelId);
        if (a && a instanceof si) {
            const o = new m3(a,s.batchIndex,n,r);
            return o.id = e,
            o
        } else
            F.info(`ArchiveTransaction: ${i} is not an ArchivableModel`, {
                model: a
            })
    }
    get graphQLOperationName() {
        return `${o5(this.model.modelName)}Archive`
    }
    graphQLMutation(e) {
        return this.model.archiveMutation()
    }
    constructor(e, n, r, s) {
        super("archive", e, n, r, s),
        this.syncClient.archiveModel(e)
    }
    transformError(e) {
        return e instanceof et ? e : new et({
            type: "internal error",
            message: "Archive transaction failed",
            userError: !0,
            userPresentableMessage: `Failed to update ${this.model.modelName}`
        })
    }
    serialize() {
        return {
            id: this.id,
            type: "archive",
            batchIndex: this.batchIndex,
            modelId: this.model.id,
            modelClass: this.model.modelName
        }
    }
    undoTransaction() {
        return this.syncClient.unarchive(this.model)
    }
    writeLocalTransactionToDatabase(e) {
        e.delete(this.model.modelName, this.model.id)
    }
    rollback() {
        this.model.archivedAt = void 0,
        this.syncClient.addModel(this.model),
        this.model.attachToReferencedProperties()
    }
}
/**
 * Local transcation
 */
class Tc {
    constructor(e) {
        this.model = e
    }
    result() {
        return Promise.resolve(Ro.completed)
    }
    cancel() {}
    undoTransaction() {
        return this
    }
}
/**
 * CreationTransaction
 */
class Hu extends Zo {
    static async fromSerializedData(e, n, r, s) {
        const i = Me.getModelClass(s.modelType);
        if (!i)
            throw Error(`Could not retrieve class for model type '${s.modelType}'`);
        const a = new i;
        a.updateFromData(s.model);
        const o = new Hu(a,s.batchIndex,n,r,s.additionalCreationArgs);
        return o.id = e,
        o
    }
    get graphQLOperationName() {
        return `${o5(this.model.modelName)}Create`
    }
    graphQLMutation(e) {
        return this.model.createMutation(e, this.additionalCreationArgs)
    }
    constructor(e, n, r, s, i) {
        super("create", e, n, r, s),
        this.additionalCreationArgs = i,
        this.syncClient.addModel(e) && e.attachToReferencedProperties(),
        e.clearSnapshot()
    }
    transformError(e) {
        return e instanceof et ? e : new et({
            type: "internal error",
            message: "Create transaction failed",
            userError: !0,
            userPresentableMessage: `Failed to save ${this.model.modelName}`
        })
    }
    serialize() {
        return {
            id: this.id,
            type: "create",
            batchIndex: this.batchIndex,
            modelType: this.model.modelName,
            model: this.model.serialize(),
            additionalCreationArgs: this.additionalCreationArgs
        }
    }
    undoTransaction() {
        return this.model instanceof It ? this.syncClient.delete(this.model) : this.model instanceof si ? this.syncClient.archive(this.model) : new Tc(this.model)
    }
    writeLocalTransactionToDatabase(e) {
        e.add(this.model.modelName, this.model.serialize())
    }
    rollback() {
        this.syncClient.deleteModelAndDependencies(this.model)
    }
}
/** DeleteTransaction */
class g3 extends Zo {
    static async fromSerializedData(e, n, r, s) {
        const i = Me.getModelClass(s.modelClass);
        if (!i)
            return;
        const a = await n.hydrateModel(i, s.modelId);
        if (a && (a instanceof It || a instanceof Xc)) {
            const o = new g3(a,s.batchIndex,n,r);
            return o.id = e,
            o
        }
    }
    get graphQLOperationName() {
        return `${o5(this.model.modelName)}Delete`
    }
    graphQLMutation(e) {
        return this.model.deleteMutation()
    }
    constructor(e, n, r, s) {
        super("delete", e, n, r, s),
        this.syncClient.archiveModel(e)
    }
    transformError(e) {
        return e instanceof et ? e : new et({
            type: "internal error",
            message: "Delete transaction failed",
            userError: !0,
            userPresentableMessage: `Failed to delete ${this.model.modelName}`
        })
    }
    serialize() {
        return {
            id: this.id,
            type: "delete",
            batchIndex: this.batchIndex,
            modelId: this.model.id,
            modelClass: this.model.modelName
        }
    }
    undoTransaction() {
        return this.model.archivedAt = void 0,
        this.model instanceof Xc ? this.syncClient.unarchive(this.model) : this.syncClient.add(this.model, this.model.supportsUndoCreatedAtArguments ? {
            additionalCreationArgs: {
                overrideCreatedAt: this.model.createdAt
            }
        } : void 0)
    }
    writeLocalTransactionToDatabase(e) {
        e.delete(this.model.modelName, this.model.id)
    }
    rollback() {
        this.model.archivedAt = void 0,
        this.syncClient.addModel(this.model),
        this.model.attachToReferencedProperties()
    }
}
const lce = 8;
/** TransactionExecutor */
class dce { // Transaction executor. Execute many transactions in a batch.
    constructor(e, n) {
        this.transactions = e,
        this.graphQLClient = n,
        this.completionPromise = new Promise((r,s)=>{
            this.resolve = r,
            this.reject = s
        }
        )
    }
    async execute() {
        var e;
        if (this.transactions.length === 0)
            return Ro.completed;
        try {
            const n = this.transactions.length === 1;
            let r = this.transactions[0].graphQLOperationName;
            if (!n) { // If there are 2 or more transactions in this batch.
                // Count different graphQLOperationName
                const d = this.transactions.reduce((u,h)=>{
                    const f = h.graphQLOperationName;
                    return u[f] ? u[f] += 1 : u[f] = 1,
                    u
                }
                , {});
                // And join graphQLOperationName in a string. For example:
                // IssueUpdates_UserUpdate
                r = Object.keys(d).map(u=>u + (d[u] > 1 ? "s" : "")).join("_")
            }
            // Join variable types.
            const s = this.transactions.flatMap(d=>Object.entries(d.graphQLMutationPrepared.variableTypes || {}).map(([u,h])=>`$${u}: ${h}!`)).join(", ")
              , i = this.transactions.reduce((d,u)=>({
                ...d,
                ...u.graphQLMutationPrepared.variables
            }), {})
              , a = `mutation ${r}${s ? `(${s})` : ""} { ${this.transactions.map((d,u)=>(n ? "" : `o${u + 1}:`) + (typeof d == "string" ? d : d.graphQLMutationPrepared.mutationText)).join(", ")} }`
              , o = await this.graphQLClient.mutate(a, i, { // Send the request to the server
                logUserErrors: !0
            })
                // Get the max lastSyncId
              , l = Object.keys(o).reduce((d,u)=>Math.max(d, o[u].lastSyncId), 0);
            for (const d of this.transactions) // Resolve call transaction.
                d.transactionCompleted(void 0, l);
            this.resolve()
        } catch (n) {
            const r = P1(n) ? n : void 0
              , s = this.transactions.reduce((i,a)=>Math.max(i, a.retries), 0);
            if ((r == null ? void 0 : r.type) === "lock timeout" && s < lce) {
                for (const i of this.transactions)
                    i.retries++;
                this.resolve(Ro.offlined)
            } else if ((r == null ? void 0 : r.type) === "network error" || (r == null ? void 0 : r.type) === Nf && ((e = r.metaData) == null ? void 0 : e.downtimeMode) === "offline") {
                this.resolve(Ro.offlined);
                for (const i of this.transactions)
                    i.offlined()
            } else {
                this.reject(n);
                for (const i of this.transactions)
                    i.transactionCompleted(i.transformError(n))
            }
        }
        return this.completionPromise
    }
}
/** UnarchiveTransaction */
class y3 extends Zo {
    static async fromSerializedData(e, n, r, s) {
        const i = Me.getModelClass(s.modelClass);
        if (!i)
            return;
        const a = await n.hydrateModel(i, s.modelId);
        if (a) {
            const o = new y3(a,s.batchIndex,n,r);
            return o.id = e,
            o
        }
    }
    get graphQLOperationName() {
        return `${o5(this.model.modelName)}Unarchive`
    }
    graphQLMutation(e) {
        return this.model.unarchiveMutation()
    }
    constructor(e, n, r, s) {
        super("unarchive", e, n, r, s),
        this.syncClient.addModel(e),
        e.attachToReferencedProperties()
    }
    transformError(e) {
        return e instanceof et ? e : new et({
            type: "internal error",
            message: "Unarchive transaction failed",
            userError: !0,
            userPresentableMessage: `Failed to un-archive ${this.model.modelName}`
        })
    }
    serialize() {
        return {
            id: this.id,
            type: "unarchive",
            batchIndex: this.batchIndex,
            modelId: this.model.id,
            modelClass: this.model.modelName
        }
    }
    undoTransaction() {
        return this.model instanceof Xc ? this.syncClient.delete(this.model) : this.model instanceof si ? this.syncClient.archive(this.model) : new Tc(this.model)
    }
    writeLocalTransactionToDatabase(e) {
        e.add(this.model.modelName, this.model.serialize())
    }
    rollback() {
        this.model.archivedAt = new Date,
        this.syncClient.archiveModel(this.model)
    }
}
/** Update Transaction */
class zu extends Zo { // update transaction
    static async fromSerializedData(e, n, r, s) {
        const i = Me.getModelClass(s.modelClass);
        if (!i)
            return;
        const a = await n.hydrateModel(i, s.modelId);
        if (a) {
            const o = new zu(a,s.batchIndex,n,r,s.additionalUpdateArgs);
            o.id = e,
            o.changeSnapshot = s.changeSnapshot;
            for (const l in s.changeSnapshot.changes) {
                const d = s.changeSnapshot.changes[l].unoptimizedUpdated || s.changeSnapshot.changes[l].updated;
                a.setSerializedValue(l, d, a.properties[l])
            }
            return o
        }
    }
    get graphQLOperationName() {
        return `${o5(this.model.modelName)}Update`
    }
    graphQLMutation(e) {
        return this.model.updateMutation(e, this.changeSnapshot, this.additionalUpdateArgs)
    }
    constructor(e, n, r, s, i) {
        super("update", e, n, r, s),
        this.changeSnapshot = e.changeSnapshot(), // find out what has been changed
        this.additionalUpdateArgs = i || {}
    }
    transformError(e) {
        return e instanceof et ? e : new et({
            type: "internal error",
            message: "Update transaction failed",
            userError: !0,
            userPresentableMessage: `Failed to update ${this.model.modelName}`
        })
    }
    rebase() {
        if (this.changeSnapshot)
            for (const e in this.changeSnapshot.changes) {
                const n = this.changeSnapshot.changes[e].unoptimizedUpdated || this.changeSnapshot.changes[e].updated;
                this.changeSnapshot.changes[e].original = this.model.serializedValue(e, this.model[e]),
                this.model.setSerializedValue(e, n, this.model.properties[e])
            }
    }
    serialize() {
        return {
            id: this.id,
            type: "update",
            batchIndex: this.batchIndex,
            modelId: this.model.id,
            modelClass: this.model.modelName,
            changeSnapshot: this.changeSnapshot,
            additionalUpdateArgs: this.additionalUpdateArgs
        }
    }
    undoTransaction() {
        if (this.changeSnapshot) {
            for (const e in this.changeSnapshot.changes)
                this.model.setSerializedValue(e, this.changeSnapshot.changes[e].updatedFrom, this.model.properties[e]);
            return this.syncClient.update(this.model)
        }
        return new Tc(this.model)
    }
    writeLocalTransactionToDatabase(e) {
        e.put(this.model.modelName, this.model.serialize())
    }
    rollback() {
        if (this.changeSnapshot) {
            const e = {};
            for (const n in this.changeSnapshot.changes)
                e[n] = this.changeSnapshot.changes[n].original; // get all original values
            lt(()=>{
                this.model.updateFromData(e) // dump old values into the model when rollback
            }
            )
        }
    }
}

// #endregion

// #region TransactionQueue

const kw = 40
  , xw = 9e6;
class uce { // class TranscactionQueue
    get onTransactionCountChange() {
        return this._onTransactionCountChange
    }
    get onTransactionQueued() {
        return this._onTransactionQueued
    }
    constructor(e, n) {
        this.createdTransactions = [],
        this.queuedTransactions = [], // all transactions that havn't been executed
        this.executingTransactions = [], // all transcations that are trying to execute (sending them to the backend)
        this.completedButUnsyncedTransactions = [],
        this._onTransactionCountChange = new Tt,
        this._onTransactionQueued = new Tt,
        this.dequeueTransaction = new ww,
        this.batchIndex = 0, // LSE may send several transactions in a batch, this batchIndex is for the batches sequence
        this.commitCreatedTransactions = new ww,
        this.handleTimedRecheck = ()=>{
            this.dequeueNextTransactions()
        }
        ,
        this.graphQLClient = e,
        this.syncClient = n
    }
    // CRUD methods to create different kinds of transaction objects.
    create(e, n) {
        const r = new Hu(e,this.batchIndex,this.syncClient,this.graphQLClient,n == null ? void 0 : n.additionalCreationArgs);
        return n != null && n.sendSynchronously ? this.immediatelyExecuteTransaction(r) : this.enqueueTransaction(r),
        r
    }
    update(e, n) {
        // e for the updated client model object
        const r = new zu(e,this.batchIndex,this.syncClient,this.graphQLClient,n == null ? void 0 : n.additionalUpdateArgs);
        return n != null && n.sendSynchronously && this.transactionIsIndependentOfRunningTransactions(r) ? this.immediatelyExecuteTransaction(r) : this.enqueueTransaction(r),
        e.didUpdate(),
        r
    }
    archive(e) {
        const n = new m3(e,this.batchIndex,this.syncClient,this.graphQLClient);
        return this.enqueueTransaction(n),
        n
    }
    unarchive(e) {
        const n = new y3(e,this.batchIndex,this.syncClient,this.graphQLClient);
        return this.enqueueTransaction(n),
        n
    }
    delete(e) {
        const n = new g3(e,this.batchIndex,this.syncClient,this.graphQLClient);
        return this.enqueueTransaction(n),
        n
    }
    modelUpserted(e) {
        var n;
        if ((n = this.persistedTransactionsEnqueue) != null && n.length) {
            let r;
            for (const s of this.persistedTransactionsEnqueue)
                s instanceof Hu && s.model.id === e && (this.cancelTransaction(s).catch(i=>{
                    F.error("Error canceling transaction", i, {
                        transaction: {
                            id: s.id,
                            modelId: s.model.id
                        }
                    })
                }
                ),
                F.info(`Canceling persisted create transaction for model ${e} as we received an I packet for it`),
                r ?? (r = []),
                r.push(s));
            r != null && r.length && (this.persistedTransactionsEnqueue = this.persistedTransactionsEnqueue.filter(s=>!r.includes(s)))
        }
    }
    rebaseTransactions(e, n) { // `e` for the model to rebase, `n` for the lastsyncid to be rebased on
        var r;
        if (this.lastsyncid = n,
        this.completedbutunsyncedtransactions.length && (this.completedbutunsyncedtransactions = this.completedbutunsyncedtransactions.filter(s=>(s.syncidneededforcompletion || 0) > n)),
        (r = this.persistedtransactionsenqueue) != null && r.length || this.queuedtransactions.length || this.executingtransactions.length || this.completedbutunsyncedtransactions.length) {
            // this line below actually show the time-sequence of these arrays.
            // completedbutunsyncedtransactions:
            const s = this.completedbutunsyncedtransactions.concat(this.executingtransactions, this.queuedtransactions, this.persistedtransactionsenqueue ?? []);
            for (const i of s)
                i instanceof zu && i.model === e && i.rebase()
        }
    }
    async loadPersistedTransactions(e) {
        this.database = e;
        const n = await this.database.getAllTransactions(); // load cached transactions from local database
        F.network(`Loaded ${n.length} persisted transactions`),
        // The only place to assign `persistedTransactionsEnqueue`
        this.persistedTransactionsEnqueue = (await Promise.all(n.map(async s=>{
            const i = await this.deserialize(s.id, s);
            if (i != null && i.id)
                return i;
            i ? F.error("Invalid deserialized transaction", void 0, {
                transaction: i,
                serializedTransaction: s
            }) : F.info("Could not deserialize transaction", {
                transaction: i,
                serializedTransaction: s
            }),
            this.database.deleteTransaction(s.id)
        }
        ))).concrete();
        const r = this.persistedTransactionsEnqueue.reduce((s,i)=>Math.max(s, i.id), 0);
        Zo.setNextId(r + 1),
        await Promise.all(this.persistedTransactionsEnqueue.map(s=>this.syncClient.hydrateModel(s.model.modelClass, s.model.id, {
            onlyIfLocallyAvailable: !0
        })))
    }
    confirmPersistedTransactions() {
        if (this.persistedTransactionsEnqueue) {
            for (const e of this.persistedTransactionsEnqueue)
                this.enqueueTransaction(e).catch(n=>{
                    F.error("Error enqueueing persisted transaction", n, {
                        transaction: {
                            id: e.id,
                            modelId: e.model.id
                        }
                    })
                }
                );
            this.persistedTransactionsEnqueue = void 0
        }
    }
    async cancelTransaction(e) {
        await this.database.deleteTransaction(e.id);
        const n = this.queuedTransactions.indexOf(e);
        n !== -1 && this.queuedTransactions.splice(n, 1),
        this.outstandingTransactionCountChanged()
    }
    transactionsForModel(e) {
        return this.queuedTransactions.concat(this.executingTransactions).concat(this.createdTransactions).filter(n=>n.model === e)
    }
    async deserialize(e, n) {
        switch (n.type) {
        case "create":
            return await Hu.fromSerializedData(e, this.syncClient, this.graphQLClient, n);
        case "update":
            return await zu.fromSerializedData(e, this.syncClient, this.graphQLClient, n);
        case "archive":
            return await m3.fromSerializedData(e, this.syncClient, this.graphQLClient, n);
        case "unarchive":
            return await y3.fromSerializedData(e, this.syncClient, this.graphQLClient, n);
        case "delete":
            return await g3.fromSerializedData(e, this.syncClient, this.graphQLClient, n);
        default:
            F.error("Unknown transaction type", void 0, {
                serializedData: n
            });
            return
        }
    }
    async immediatelyExecuteTransaction(e) {
        const n = new Set;
        this._onTransactionQueued.fire(e);
        let r, s;
        try {
            r = e.prepare(n)
        } catch (i) {
            F.error("Error preparing transaction", i, {
                transaction: {
                    id: e.id,
                    modelId: e.model.id,
                    modelName: e.model.modelName
                }
            }),
            s = new et({
                type: "other",
                message: "error preparing transaction",
                userError: !1
            })
        }
        if (!r) {
            e.transactionCompleted(s),
            this.outstandingTransactionCountChanged();
            return
        }
        this.database.putTransactions([e]),
        this.executeTransactionBatch([r]),
        this.outstandingTransactionCountChanged()
    }
    async enqueueTransaction(e) {
        // e is transaction object
        if (e.model.modelClass.loadStrategy === dn.local) {
            // If this a transaction of a model whose loadStrategy is local, we should immediately change database and complete the transaction
            this.database.writeTransaction({
                metaStore: !1,
                syncActionStore: !1
            }, n=>{
                e.writeLocalTransactionToDatabase(n)
            }
            ),
            e.transactionCompleted();
            return
        }
        this.createdTransactions.push(e),
        this._onTransactionQueued.fire(e),
        this.commitCreatedTransactions.schedule(async()=>{
            this.batchIndex++;
            const n = this.createdTransactions.concat();
            this.createdTransactions = [], // Empty created transactions.
            await this.database.putTransactions(n), // Save all queue transactions into database (offline cache)
            this.queuedTransactions.push(...n), // move createdTransactions to queuedTransactions
            this.outstandingTransactionCountChanged(),
            this.dequeueNextTransactions() // Schedule the next query.
        }
        )
    }
    dequeueNextTransactions() {
        this.dequeueTransaction.schedule(()=>{
            // If there are no queued transacation or more than 40 transcation are executing,
            // skip this.
            if (this.queuedTransactions.length === 0 || this.executingTransactions.length >= kw)
                return;
            let e = 0; // Limit a batch's size.
            const n = this.queuedTransactions[0].batchIndex
              , r = []
              , s = new Set;
            for (; e < xw 
                && this.queuedTransactions.length > 0 
                && r.length < kw // 40
                && this.queuedTransactions[0].batchIndex === n // Transactions belong to the same batch
                && this.transactionIsIndependentOfRunningTransactions(this.queuedTransactions[0]); 
            ) {
                const i = this.queuedTransactions[0];
                if (!i)
                    break;
                let a, o;
                try {
                    a = i.prepare(s) // Prepare that transaction, generating GraphQL query
                } catch (d) {
                    F.error("Error preparing transaction", d, {
                        transaction: {
                            id: i.id,
                            modelId: i.model.id,
                            modelName: i.model.modelName
                        }
                    }),
                    o = new et({
                        type: "other",
                        message: "error preparing transaction",
                        userError: !1
                    })
                }
                if (!a) { // If there's no transaction, LSE will just omit that transaction.
                    i.transactionCompleted(o),
                    this.database.deleteTransaction(i.id),
                    this.queuedTransactions.shift();
                    continue
                }
                const l = Zo.graphQLMutationSize(a.graphQLMutationPrepared) ?? 0;
                if (e > 0 && e + l > xw)
                    break;
                for (const d of Object.keys(a.graphQLMutationPrepared.variables || {}))
                    s.add(d); // Add key to the Set. For example "issueUpdateInput"
                this.queuedTransactions.shift(),
                r.push(a),
                e += l
            }
            if (r.length === 0) {
                this.outstandingTransactionCountChanged(),
                this.queuedTransactions.length > 0 && this.executingTransactions.length === 0 && this.dequeueNextTransactions();
                return
            }
            this.executeTransactionBatch(r),
            this.dequeueNextTransactions()
        }
        )
    }
    transactionIsIndependentOfRunningTransactions(e) {
        for (const n of this.executingTransactions)
            if (e.independentOf(n) === !1)
                return !1;
        return !0
    }
    async executeTransactionBatch(e) {
        // Send transactions to the backend.
        if (e.length !== 0) {
            this.executingTransactions = this.executingTransactions.concat(e);
            try {
                if (await new dce(e,this.graphQLClient).execute() === Ro.offlined) {
                    // If the execution failed, put them back to queuedTransactions
                    this.executingTransactions = this.executingTransactions.filter(s=>!e.includes(s)),
                    this.queuedTransactions.unshift(...e),
                    this.outstandingTransactionCountChanged(); 
                    return
                }
            } catch {}
            for (const n of e)
                this.executingTransactions.splice(this.executingTransactions.indexOf(n), 1), // remove the transaction from exectuting transactions
                await this.database.deleteTransaction(n.id), // once the transaction has completed, we could delete it from the database because we won't send it again
                (!this.lastSyncId || (n.syncIdNeededForCompletion ?? 0) > this.lastSyncId) && this.completedButUnsyncedTransactions.push(n);
                // The transaction has completed (the backend has accepte the transaction), but the corresponding delta has not yet received
            this.outstandingTransactionCountChanged(),
            this.dequeueNextTransactions()
        }
    }
    outstandingTransactionCountChanged() {
        this._onTransactionCountChange.fire(this.queuedTransactions.length + this.executingTransactions.length),
        this.queuedTransactions.length || this.executingTransactions.length ? this.checkInterval || (this.checkInterval = window.setInterval(this.handleTimedRecheck, 2e3)) : this.checkInterval && window.clearTimeout(this.checkInterval)
    }
}
// #endregion
const Dw = 1e3;
/** WaitSyncQueue */
class OE { // WaitSyncQueue
    wait(e) {
        return this.token >= e ? Promise.resolve() : new Promise(n=>{
            this.queue.push({
                token: e,
                resolve: n
            }),
            this.queue.length > Dw && !this.reportedWarning && (this.reportedWarning = !0,
            F.warning(`Wait queue exceeded ${Dw} entries`))
        }
        )
    }
    progressQueue(e) {
        this.token = e;
        for (let n = this.queue.length - 1; n >= 0; n--) {
            const r = this.queue[n];
            e >= r.token && (r.resolve(),
            this.queue.splice(n, 1))
        }
    }
    constructor() {
        this.reportedWarning = !1,
        this.token = 0,
        this.queue = []
    }
}
function hce(t, e) {
    const n = Me.getClassName(t);
    return Mt.gql`
    query ArchivedModelSync {
      archivedModelSync(modelClass: "${n}",identifier: "${e}") {
        archive,
        databaseVersion,
        includesDependencies,
      }
    }`
}
async function fce(t, e) {
    const n = Mt.gql`
    query SyncEntityCount {
      syncEntityCount {
        counts
      }
    }
  `;
    return (await t.query(n, void 0, e)).syncEntityCount.counts
}
class pce {
    constructor(e) {
        this.nextBatch = [],
        this.handleResolve = async()=>{
            let n = this.nextBatch;
            this.nextBatch = [];
            function r() {
                const i = [];
                lt(()=>{
                    for (let a = 0; a < n.length; a++) {
                        const o = n[a];
                        o.promise.isPending ? i.push(o) : o.promise.error ? o.reject(o.promise.error) : o.resolve(o.mapper(o.promise.value))
                    }
                }
                ),
                n = i
            }
            let s;
            this.resolvePartialBatchTimeout && (s = window.setInterval(r, this.resolvePartialBatchTimeout)),
            await Promise.allSettled(n.map(i=>i.promise)),
            r(),
            s && clearInterval(s)
        }
        ,
        this.resolvePartialBatchTimeout = e
    }
    addOperation(e, n) {
        this.nextBatch.length === 0 && (typeof queueMicrotask < "u" ? queueMicrotask(this.handleResolve) : setTimeout(this.handleResolve));
        const r = e instanceof Promise ? e : Promise.resolve(e);
        return new Promise((s,i)=>{
            this.nextBatch.push({
                promise: new Jt((a,o)=>r.then(a).catch(o)),
                mapper: n,
                resolve: s,
                reject: i
            })
        }
        )
    }
}
class mce {
    static getCountBucket(e, n="k") {
        const r = n === "k" ? 1e3 : n === "hg" ? 100 : n === "dag" ? 10 : Gc(n);
        let s = 0;
        for (; ; ) {
            const i = Math.pow(2, s);
            if (e <= i * r || s >= 10)
                return `${i}${n}`;
            s++
        }
    }
    static getTimeBucket(e, n) {
        const r = n === "h" ? Math.ceil(e / be.HOUR) : Gc(n);
        let s = 0;
        for (; ; ) {
            const i = Math.pow(2, s);
            if (r <= i || s >= 12)
                return `${i}${n}`;
            s++
        }
    }
}
class gce {
    static get browserName() {
        return Xt.isElectron ? `Linear.app ${Xt.bridge.version}` : `${this.browser.getBrowserName()} ${this.browser.getBrowserVersion()}`
    }
    static get os() {
        const e = this.browser.getOSName()
          , n = this.browser.getOSVersion();
        return e === "macOS" && n === "10.15.7" ? `${e} ${n}+` : `${e} ${n}`
    }
    static get platform() {
        return this.browser.getPlatformType()
    }
    static get browser() {
        return mj.getParser(window.navigator.userAgent)
    }
}
function RE(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
const tg = class tg {
    scheduleModelRemoval(e, n, r, s, i) {
        var l, d;
        const a = `${n}|${r}`
          , o = this.scheduled.get(a);
        o ? (o.syncId = o.syncId || Math.min(o.syncId ?? 1 / 0, s),
        (l = o.options) != null && l.only && !(i != null && i.only) ? delete o.options.only : (d = o.options) != null && d.only && (i != null && i.only) && (o.options.only = [...new Set([...o.options.only, ...i.only])])) : this.scheduled.set(a, {
            type: e,
            syncId: s,
            options: i
        })
    }
    shouldApplyRemoval(e) {
        return !(this.scheduled.size === 0 || e.action === "D" || e.action === "A" || e.action === "G" || e.action === "S")
    }
    async applyRemovalsToDatabase(e) {
        if (this.scheduled.size === 0)
            return;
        this.used = !0;
        const n = performance.now();
        this.actionsStats.applyCount += 1,
        await this.applyRemovalsToDatabaseInner(e),
        this.timeSpentMs += performance.now() - n
    }
    applyRemovalsToSyncClient(e) {
        if (this.scheduled.size === 0)
            return;
        this.used = !0;
        const n = performance.now();
        this.applyRemovalsToSyncClientInner(e),
        this.timeSpentMs += performance.now() - n
    }
    get removedModelIds() {
        return this.removedModelIdsMap
    }
    get wasUsed() {
        return this.used
    }
    reportPerformance() {
        if (!this.used)
            return;
        const e = Math.round(performance.now() * 100) / 100;
        F.debug(`[PRF] ${e}ms: Transient removal took ${this.timeSpentMs}ms`);
        const n = mce.getCountBucket(this.removedModelIdsMap.size, "dag");
        Jn.distribution("performance.span", this.timeSpentMs, {
            span: "transient-removal",
            countBucket: n,
            partOfBootstrap: this.partOfBootstrap ? "true" : "false"
        }),
        (this.timeSpentMs > 3 * be.SECOND || this.actionsStats.remove > 50) && F.remote("Transient removal time breakdown", {
            removeCount: this.actionsStats.remove,
            applyCount: this.actionsStats.applyCount,
            durationMs: this.timeSpentMs,
            breakdown: this.timeSpentBreakdown,
            browser: gce.browserName,
            partOfBootstrap: this.partOfBootstrap ?? !1,
            newTransientRemoval: !0
        })
    }
    constructor(e, n) {
        this.syncClient = e,
        this.partOfBootstrap = n,
        this.scheduled = new Map,
        this.currentApplyScheduledIds = new Set,
        this.actions = {
            remove: new Map,
            setNull: new Map,
            removeFromArray: new Map
        },
        this.removedModelIdsMap = new Map,
        this.dependentsFoundInDatabase = !1,
        this.used = !1,
        this.timeSpentMs = 0,
        this.timeSpentBreakdown = {},
        this.actionsStats = {
            remove: 0,
            applyCount: 0
        }
    }
    getGroupedScheduledRemovals() {
        this.currentApplyScheduledIds.clear();
        const e = new Map;
        for (const [n,{type: r, syncId: s, options: i}] of this.scheduled) {
            const [a,o] = n.split("|");
            this.currentApplyScheduledIds.add(o);
            const l = e.get(a);
            l ? l.push({
                type: r,
                modelId: o,
                parent: void 0,
                syncId: s,
                options: i
            }) : e.set(a, [{
                type: r,
                modelId: o,
                parent: void 0,
                syncId: s,
                options: i
            }])
        }
        return this.scheduled.clear(),
        e
    }
    async applyRemovalsToDatabaseInner(e) {
        var r, s;
        const n = new Sw(this.getGroupedScheduledRemovals());
        for (const {modelClass: i, removals: a} of n) {
            await this.amendModelRemovalsWithDatabaseDependents(e, i, a),
            this.dependentsFoundInDatabase = !0;
            for (const o of a)
                o.executed || !("modelId"in o) || ((!((r = o.options) != null && r.only) || o.options.only.includes(i.modelName)) && (e.delete(i.modelName, o.modelId),
                o.syncId && o.parent && e.addSyncPacket({
                    id: o.syncId,
                    action: o.type === "archival" ? "A" : "D",
                    modelName: i.modelName,
                    modelId: o.modelId
                }),
                this.trackRemoval(o.modelId, o.syncId),
                this.actions.remove.set(o.modelId, {
                    type: o.type,
                    syncId: o.syncId,
                    parentId: (s = o.parent) == null ? void 0 : s.id
                })),
                o.executed = !0)
        }
    }
    async amendModelRemovalsWithDatabaseDependents(e, n, r) {
        const s = n.modelName
          , i = new _w(s,r);
        for (const {type: a, dependency: o, dependencyRemovals: l} of i) {
            const d = a === "deletion" ? o.deleteType : o.archiveType
              , u = [...l.keys()]
              , h = performance.now();
            await e.iterate(s, {
                key: o.property,
                values: u
            }, f=>{
                var m;
                const p = f.value[o.property];
                if (Array.isArray(p)) {
                    let g;
                    for (const b of p) {
                        const k = l.get(b);
                        k && (!g || k.syncId > g.syncId) && (g = k)
                    }
                    if (!g)
                        return;
                    const C = p.filter(b=>!l.has(b));
                    d === "CASCADE" && C.length === 0 ? (this.actions.removeFromArray.delete(`${f.value.id}-${o.property}`),
                    this.currentApplyScheduledIds.has(f.value.id) || (r.push({
                        type: g.type,
                        modelId: f.value.id,
                        parent: g.parent,
                        syncId: g.syncId,
                        options: g.options
                    }),
                    this.currentApplyScheduledIds.add(f.value.id))) : (this.actions.removeFromArray.set(`${f.value.id}-${o.property}`, {
                        id: f.value.id,
                        property: o.property,
                        removedValues: (((m = this.actions.removeFromArray.get(`${f.value.id}-${o.property}`)) == null ? void 0 : m.removedValues) || []).concat(Object.keys(l)),
                        syncId: g.syncId
                    }),
                    f.update({
                        ...f.value,
                        [o.property]: C
                    }))
                } else {
                    const g = l.get(p);
                    if (!g)
                        return;
                    d === "CASCADE" ? this.currentApplyScheduledIds.has(f.value.id) || (this.currentApplyScheduledIds.add(f.value.id),
                    r.push({
                        type: g.type,
                        modelId: f.value.id,
                        parent: g.parent,
                        syncId: g.syncId,
                        options: g.options
                    })) : (this.actions.setNull.set(`${f.value.id}-${o.property}`, {
                        id: f.value.id,
                        property: o.property,
                        syncId: g.syncId
                    }),
                    f.update({
                        ...f.value,
                        [o.property]: void 0
                    }))
                }
            }
            ),
            this.trackTimeSpent(`IndexDB-FindByIndexedKey-${s}-${o.property}`, h)
        }
    }
    applyRemovalsToSyncClientInner(e) {
        var r;
        const n = new Sw(this.getGroupedScheduledRemovals());
        for (const {modelClass: s, removals: i} of n) {
            if (!this.dependentsFoundInDatabase)
                this.amendModelRemovalsToSyncClient(s, i);
            else
                for (const a of i)
                    "indexedKey"in a && (a.executed = !0);
            for (const a of i) {
                if (a.executed || !("modelId"in a))
                    continue;
                const o = this.syncClient.findById(at, a.modelId);
                o && (this.trackRemoval(a.modelId, a.syncId),
                this.removeModelFromSyncClient(a.type, o, (r = a.parent) == null ? void 0 : r.id)),
                this.actions.remove.delete(a.modelId),
                a.executed = !0
            }
        }
        for (const [s,{syncId: i, type: a, parentId: o}] of this.actions.remove) {
            if (i > e)
                continue;
            this.actions.remove.delete(s);
            const l = this.syncClient.findById(at, s);
            l && (this.trackRemoval(s, i),
            this.removeModelFromSyncClient(a, l, o))
        }
        for (const [s,{id: i, property: a, syncId: o}] of this.actions.setNull) {
            if (o > e)
                continue;
            this.actions.setNull.delete(s);
            const l = this.syncClient.findById(at, i);
            l && (l[a] = void 0)
        }
        for (const [s,{id: i, property: a, removedValues: o, syncId: l}] of this.actions.removeFromArray) {
            if (l > e)
                continue;
            this.actions.removeFromArray.delete(s);
            const d = this.syncClient.findById(at, i);
            if (d) {
                const u = d[a];
                d[a] = u.filter(h=>!o.includes(h))
            }
        }
    }
    amendModelRemovalsToSyncClient(e, n) {
        const r = e.modelName
          , s = new _w(r,n);
        for (const {type: i, dependency: a, dependencyRemovals: o} of s) {
            const l = i === "deletion" ? a.deleteType : a.archiveType
              , d = performance.now();
            for (const u of this.syncClient.allModelsOfTypeGen(e, lr.allModels)) {
                const h = u[a.property];
                if (Array.isArray(h)) {
                    let f;
                    for (const m of h) {
                        const g = o.get(m);
                        g && (!f || g.syncId > f.syncId) && (f = g)
                    }
                    if (!f)
                        continue;
                    const p = h.filter(m=>!o.has(m));
                    l === "CASCADE" && p.length === 0 ? this.currentApplyScheduledIds.has(u.id) || (n.push({
                        type: f.type,
                        modelId: u.id,
                        parent: f.parent,
                        syncId: f.syncId,
                        options: f.options
                    }),
                    this.currentApplyScheduledIds.add(u.id)) : u[a.property] = p
                } else {
                    const f = o.get(h);
                    if (!f)
                        continue;
                    l === "CASCADE" ? this.currentApplyScheduledIds.has(u.id) || (n.push({
                        type: f.type,
                        modelId: u.id,
                        parent: f == null ? void 0 : f.parent,
                        syncId: f == null ? void 0 : f.syncId,
                        options: f == null ? void 0 : f.options
                    }),
                    this.currentApplyScheduledIds.add(u.id)) : u[a.property] = void 0
                }
            }
            this.trackTimeSpent(`Memory-FindByIndexedKey-${r}`, d)
        }
    }
    removeModelFromSyncClient(e, n, r) {
        if (e === "deletion")
            this.syncClient.deleteModel(n);
        else if (e === "archival") {
            if (r && r !== n.id) {
                const s = this.syncClient.findById(at, r);
                n.archivedAt = (s == null ? void 0 : s.archivedAt) || n.archivedAt || new Date
            } else
                n.archivedAt = n.archivedAt || new Date;
            this.syncClient.archiveModel(n)
        } else
            throw new zt(e)
    }
    trackRemoval(e, n) {
        const r = this.removedModelIdsMap.get(e);
        (r === void 0 || r < n) && this.removedModelIdsMap.set(e, n),
        r === void 0 && (this.actionsStats.remove += 1)
    }
    trackTimeSpent(e, n) {
        var r;
        (r = this.timeSpentBreakdown)[e] || (r[e] = {
            times: 0,
            time: 0
        }),
        this.timeSpentBreakdown[e].times += 1,
        this.timeSpentBreakdown[e].time += performance.now() - n
    }
}
;
tg.constructorName = "TransientModelRemoval";
let qd = tg;
RE([xt.trace("startup")], qd.prototype, "applyRemovalsToDatabase", null);
RE([xt.trace("startup")], qd.prototype, "applyRemovalsToSyncClient", null);
class Sw {
    processNext(e, n=!1) {
        n && this.modelNames.includes(e) || this.modelNames.push(e)
    }
    constructor(e) {
        this.removalsPerModel = e,
        this.loopCount = 0,
        this.modelNames = [...Me.dependencyOrder()].reverse()
    }
    next() {
        if (++this.loopCount > 1e3)
            throw new Error("Too many loops in DependencyIterator");
        for (; ; ) {
            if (this.previousModelClass && this.previousPerModelRemovals) {
                for (const i of this.previousPerModelRemovals) {
                    if (!("modelId"in i))
                        continue;
                    const a = Me.dependenciesOfModel(this.previousModelClass.modelName);
                    for (const o of a) {
                        let l = o.model.modelName === this.previousModelClass.modelName ? this.previousPerModelRemovals : this.removalsPerModel.get(o.model.modelName);
                        l || (l = [],
                        this.removalsPerModel.set(o.model.modelName, l)),
                        l.push({
                            type: i.type,
                            indexedKey: {
                                dependency: o,
                                keyValue: i.modelId
                            },
                            parent: {
                                modelName: this.previousModelClass.modelName,
                                id: i.modelId
                            },
                            syncId: i.syncId,
                            options: i.options
                        }),
                        o.model.modelName !== this.previousModelClass.modelName && this.processNext(o.model.modelName, !0)
                    }
                }
                const s = this.previousPerModelRemovals.filter(i=>!i.executed);
                this.removalsPerModel.set(this.previousModelClass.modelName, s),
                s.length && this.processNext(this.previousModelClass.modelName)
            }
            this.previousModelClass = void 0,
            this.previousPerModelRemovals = void 0;
            const e = this.modelNames.pop();
            if (e === void 0)
                return {
                    done: !0,
                    value: void 0
                };
            const n = Me.getModelClass(e);
            if (!n)
                continue;
            const r = (this.removalsPerModel.get(e) || []).filter(s=>!s.executed);
            if (r.length !== 0)
                return this.previousModelClass = n,
                this.previousPerModelRemovals = r,
                {
                    done: !1,
                    value: {
                        modelClass: n,
                        removals: r
                    }
                }
        }
    }
    [Symbol.iterator]() {
        return this
    }
}
class _w {
    constructor(e, n) {
        this.modelName = e,
        this.loopCount = 0;
        const r = this.getIndexedRemovals(n);
        r.length === 0 && (this.groupedPerIndexKey = []),
        this.groupedPerIndexKey = Object.values(m5(r, s=>s.type + "|" + s.indexedKey.dependency.property))
    }
    next() {
        if (++this.loopCount > 1e3)
            throw new Error("Too many loops in IndexKeyRemovalsIterator");
        for (; ; ) {
            const e = this.groupedPerIndexKey.pop();
            if (!e)
                break;
            if (e.length === 0)
                continue;
            const n = e[0].type
              , r = e[0].indexedKey.dependency
              , s = e.reduce((i,a)=>(a.executed = !0,
            i.set(a.indexedKey.keyValue, a),
            i), new Map);
            return {
                done: !1,
                value: {
                    type: n,
                    dependency: r,
                    dependencyRemovals: s
                }
            }
        }
        return {
            done: !0,
            value: void 0
        }
    }
    [Symbol.iterator]() {
        return this
    }
    getIndexedRemovals(e) {
        return e.filter(n=>"indexedKey"in n)
    }
}
const yce = 5e3
  , Cce = 10;
class PE { // BatchedRequest
    constructor(e) {
        this.nextBatch = [], // Next batch of requests
        this.uniqueRequests = new Map, // Dedupe next batch of requests with new requests
        this.inflightRequests = new Set, // Dedupte new request with inflight requests
        this.nextBatchResults = [],
        this.allProcessedResults = [],
        this.allProcessedQueuedResults = [],
        this.handleResolve = async()=>{
            if (this.nextBatch.length === 0)
                return;
            const n = this.uniqueRequests;
            this.uniqueRequests = new Map,
            this.inflightRequests.add(n); // Move uniqueRequests to inflighRequests
            const r = this.nextBatch;
            this.nextBatch = [];
            let s = this.nextBatchResults.concat();
            this.nextBatchResults = [];
            try {
                const i = await this.handleBatch(r); // Send next batch requests.
                for (const a of s)
                    a.resolve(i.result);
                if (s = [],
                this.allProcessedResults.length && this.allProcessedQueuedResults.push(i.result),
                this.nextBatch.length === 0 && (this.inflightRequests.size === 0 || this.inflightRequests.size === 1 && this.inflightRequests.has(n))) {
                    for (const a of this.allProcessedResults)
                        a.resolve(this.allProcessedQueuedResults);
                    this.allProcessedQueuedResults = [],
                    this.allProcessedResults = []
                }
                await i.fullyPersisted
            } catch (i) {
                r.map(a=>a.reject(i));
                for (const a of s)
                    a.reject(i);
                for (const a of this.allProcessedResults)
                    a.reject(i);
                this.allProcessedQueuedResults = [],
                this.allProcessedResults = [],
                F.error("Error caught in BatchedRequest.handleResolve", i)
            } finally {
                this.inflightRequests.delete(n)
            }
        }
        ,
        this.batchInterval = (e == null ? void 0 : e.batchInterval) ?? Cce,
        this.maxBatchedRequests = (e == null ? void 0 : e.maxBatchedRequests) ?? yce
    }
    nextBatchedResult() {
        const e = ta();
        return this.nextBatchResults.push(e),
        e
    }
    allProcessedResult() {
        const e = ta();
        return this.allProcessedResults.push(e),
        e
    }
    addRequest(e) {
        const n = this.getInflightRequest(e); // Dedupe requests.
        if (n)
            return n;
        // Send a batch after batchInternal delay.
        this.nextBatch.length === 0 && setTimeout(this.handleResolve, this.batchInterval);
        const r = this.serializeKeys(e); // We serialize again here. :)
        if (r)
            for (const i of r) {
                const a = this.uniqueRequests.get(i); // If the request is queued but not inflight yet.
                if (a)
                    return a // Return here.
            }

        // Create a quest object
        const s = new Promise((i,a)=>{
            this.nextBatch.push({
                request: e,
                resolve: i,
                reject: a
            })
        }
        );
        // ...and added it to the unique requests map and queue.
        return r != null && r.length && this.uniqueRequests.set(r[0], s),
        // If the queue exceeds maxBatchedRequests, immediately request the next batch.
        this.nextBatch.length >= this.maxBatchedRequests && this.handleResolve(),
        s
    }
    getInflightRequest(e) {
        const n = this.serializeKeys(e); // Serialize here.
        if (n)
            for (const r of n)
                // Check if the model that is going to hydrate is inflight.
                for (const s of this.inflightRequests) {
                    const i = s.get(r);
                    if (i)
                        return i
                }
    }
    serializeKeys(e) {
        const n = this.serializeRequest(e);
        if (n !== void 0)
            return Array.isArray(n) ? n : [n]
    }
}
class Zu extends PE {
    static async supportedPacket(e, n) {
        const r = ["I", "A", "D"]
          , s = n.filter(o=>{
            var l;
            return "modelName"in o && bce.includes(o.modelName) && (o.action === "V" || !r.includes(o.action) && o.data && ((l = Me.getModelClass(o.modelName)) == null ? void 0 : l.usedForPartialIndexes))
        }
        )
          , i = []
          , a = gm(s, 100);
        for (const o of a) {
            const l = await Promise.all(o.map(async d=>{
                if (d.action === "V")
                    return d;
                const u = Zn.transientPartialIndexedKeysOfModel(d.modelName);
                if (u.length === 0)
                    return;
                const h = await e.getModelDataById(d.modelName, d.modelId, {
                    onlyIfLocallyAvailable: !0
                })
                  , f = u.map(({indexedKey: m, dependency: g})=>{
                    if (!(!h || !d.data[m] || ((h == null ? void 0 : h[m]) ?? void 0) === (d.data[m] ?? void 0)))
                        return {
                            modelName: g.model.modelName,
                            newPartialIndex: Zn.createPartialIndexValue(m, d.data[m])
                        }
                }
                ).concrete();
                if (f.length === 0)
                    return;
                if ((await Promise.all(f.map(async m=>e.objectStoreReady(m.modelName) === !0 ? !1 : await e.hasModelsForPartialIndexValues(m.modelName, [m.newPartialIndex])))).some(m=>m))
                    return d
            }
            ));
            i.push(...l.concrete())
        }
        return i
    }
    constructor(e, n=!1, r=0) {
        super({
            batchInterval: 50,
            maxBatchedRequests: 1e3
        }),
        this.graphQLClient = e,
        this.includeDependent = n,
        this.retries = r
    }
    async handleBatch(e) {
        const n = m5(e.map(s=>s.request), s=>s.modelName)
          , r = [];
        await Promise.all(Object.entries(n).map(async([s,i])=>{
            const a = await this.graphQLClient.restModelsJsonStream("/sync/dependents", {
                retry: {
                    times: this.retries,
                    delayMs: d=>(d + 1) * 500,
                    retryOnRatelimit: !0
                },
                method: "POST",
                body: JSON.stringify({
                    modelName: s,
                    identifiers: i.map(d=>d.identifier),
                    firstSyncId: this.graphQLClient.getFirstSyncId(),
                    includeDependent: this.includeDependent
                })
            })
              , o = a.syncActions || []
              , l = mm.applyDeltaSyncOnModelObjectCollection(a.models, o.reverse());
            r.push(...l)
        }
        ));
        for (const s of e)
            s.resolve(void 0);
        return {
            result: r
        }
    }
    serializeRequest(e) {
        return `${e.modelName}-${e.identifier}`
    }
}
const bce = ["Issue", "Project"];
function bm(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
// #region SyncClient
const vce = be.MINUTE * 2
  , wce = be.MINUTE * 4
  /** SyncClient */
  , ng = class ng { // class SyncClient
    get onInitialModelsLoaded() {
        return this._onInitialModelsLoaded
    }
    get onDatabaseVersionChange() {
        return this._onDatabaseVersionChange
    }
    get onBootstrap() {
        return this._onBootstrap
    }
    get onTransactionCountChange() {
        return this.transactionQueue.onTransactionCountChange
    }
    get onTransactionQueued() {
        return this.transactionQueue.onTransactionQueued
    }
    get onArchive() {
        return this._onArchive
    }
    get onArchiveUpdate() {
        return this._onArchiveUpdate
    }
    get onUnarchive() {
        return this._onUnarchive
    }
    get onSyncGroupsChanged() {
        return this._onSyncGroupsChanged
    }
    get onDatabaseUnavailable() {
        return this.database.onDatabaseUnavailable
    }
    get onInvalidateRejectedHydrations() {
        return this._onInvalidateRejectedHydrations
    }
    invalidateRejectedHydrations() {
        this._onInvalidateRejectedHydrations.fire()
    }
    get onSavingStoreCountChange() {
        return this.database.onSavingStoreCountChange
    }
    get shouldResetOnError() {
        return this._shouldResetOnError
    }
    constructor(e, n, r, s) {
        // Each model maps to a set.
        this.modelClassToModelLookup = {},
        this._onInitialModelsLoaded = new Tt,
        this._onDatabaseVersionChange = new Tt,
        this._onBootstrap = new Tt,
        this._onArchive = new Tt,
        this._onArchiveUpdate = new Tt,
        this._onUnarchive = new Tt,
        this._onSyncGroupsChanged = new Tt({
            maxObservers: 0
        }),
        this._onInvalidateRejectedHydrations = new Tt({
            maxObservers: 0
        }),
        this._shouldResetOnError = !1,
        this.lastSyncId = 0,
        this.backendDatabaseVersion = 0,
        this.modelLookup = {}, // Maps a model's id to the object! It is the "ObjectPool".
        this.temporaryModelLookup = {},
        this.archivedModelLookup = {},
        this.modelClassToArchivedModelLookup = {},
        this.modelClassToTemporaryModelLookup = {},
        this.syncWaitQueue = new OE,
        this.subscribedSyncGroups = new Set,
        this.deltaSyncFailures = 0,
        this.hydrationBatch = new pce(200),
        this.addModelToArchiveCollections = Le(i=>{
            const a = this.modelLookup[i.id] !== void 0;
            this.removeModelFromLiveCollections(i),
            this.archivedModelLookup[i.id] || (this.archivedModelLookup[i.id] = i,
            this.modelClassToArchivedModelLookup[i.modelName].add(i),
            a && this._onArchive.fire(i))
        }
        ),
        this.removeModelFromArchiveCollections = Le(i=>{
            this.archivedModelLookup[i.id] && (delete this.archivedModelLookup[i.id],
            this.modelClassToArchivedModelLookup[i.modelName].delete(i),
            this._onUnarchive.fire(i))
        }
        ),
        this.updateLock = new qf,
        this.addNewSyncGroupsToDatabase = (i,a,o)=>{
            if (i.length !== 0) {
                F.network(`Adding sync groups ${i.join(", ")} to database`);
                for (const l of a) {
                    if (!l.id)
                        continue;
                    const {__class: d, ...u} = l;
                    if (!Me.getModelClass(d)) {
                        F.info(`Could not find model class for model type ${d}`);
                        continue
                    }
                    o.put(d, u)
                }
                for (const l of i)
                    this.subscribedSyncGroups.add(l);
                this.persistSubscribedSyncGroups(o)
            }
        }
        ,
        this.addNewSyncGroupsToClient = (i,a,o,l)=>{
            if (i.length === 0)
                return;
            F.network(`Adding sync groups ${i.join(", ")}`);
            const d = [];
            for (const u of a) {
                if (!u.id)
                    continue;
                const h = u.__class;
                let f = this.getModel(u.id);
                if (f && f.isArchived && (this.removeModelFromArchiveCollections(f),
                f = void 0),
                f) {
                    f.updateFromData(u, {
                        dataContainsAllProperties: !0
                    });
                    continue
                }
                const p = Me.getModelClass(h);
                if (!p) {
                    F.info(`Could not find model class for model type ${h}`);
                    continue
                }
                const m = new p(!1);
                m.id = u.id,
                this.addModelToLiveCollections(m),
                d.push([m, u]),
                l.set(m, o)
            }
            for (const u of d)
                u[0].updateFromData(u[1])
        }
        ,
        this.applyEphemeralUpdate = Le(i=>{
            for (const a of i) {
                const {id: o, ...l} = a
                  , d = this.getModel(o);
                d && d.updateFromData(l)
            }
        }
        ),
        this.startObservability = Le(()=>{
            Ln(this, {
                modelClassToModelLookup: ut,
                modelClassToArchivedModelLookup: ut,
                modelClassToTemporaryModelLookup: ut,
                waitForSync: Le,
                temporarilyAdd: Le,
                temporarilyRemove: Le,
                startSyncing: Le,
                addModel: Le,
                archiveModel: Le,
                deleteModel: Le,
                deleteModelAndDependencies: Le
            })
        }
        ),
        this.store = e,
        this.graphQLClient = n,
        this.database = new xn(this.graphQLClient,s),
        this.socket = r,
        this.batchModelLoader = s.batchModelLoader,
        this.transactionQueue = new uce(this.graphQLClient,this),
        this.deltaSyncReceivedPromise = new Jt(i=>{
            this.deltaSyncReceivedResolver = i
        }
        );
        for (const i of Me.getModelNames())
            this.modelClassToModelLookup[i] = new Set,
            this.modelClassToArchivedModelLookup[i] = new Set,
            this.modelClassToTemporaryModelLookup[i] = new Set;

        // Subscribe to web socket message channel
        this.socket.onSyncMessage.subscribe(async i=>{
            try {
                await this.applyDelta(i.sync, i.lastSyncId)
            } catch {
                this.socket.restart()
            }
        }
        ),
        this.socket.onEphemeralUpdate.subscribe(i=>{
            this.applyEphemeralUpdate(i)
        }
        ),
        this.socket.onMessage.subscribe(async i=>{
            if (i.cmd === "refresh") {
                F.remote("Refresh issued");
                const a = Number(ke.get("lastRefreshCmdExec")) || 0;
                Date.now() - a > be.HOUR && (ke.set("lastRefreshCmdExec", Date.now().toString()),
                i.resetDatabase && (await this.resetLocalDatabase(),
                window.location.reload()),
                i.reloadClient && setTimeout(()=>{
                    P9.refresh({
                        delayIfDisabled: be.MINUTE
                    })
                }
                , i.reloadDelay || 0))
            } else
                i.cmd === "cacheSyncId" && this.database.cleanupSyncActionStore(i.syncId)
        }
        ),
        this.batchModelLoader.setSyncClient(this, this.database)
    }
    // CRUD methods here to create different transactions for a model.
    add(e, n) {
        if (this.findById(at, e.id, {
            excludeTemporaryModels: !0
        }))
            throw new Error(`Model ${e.id} already exists and cannot be added`);
        e.createdAt || (e.createdAt = new Date);
        const r = this.transactionQueue.create(e, n);
        return this.handleTransactionOffline(r, n == null ? void 0 : n.offlineError),
        r.result().catch(s=>{
            this.handleTransactionError(e, "Creation failed", s, "An unknown error occurred creating your data and changes have been rolled back.")
        }
        ),
        r
    }
    temporarilyAdd(e) {
        this.temporaryModelLookup[e.id] = e,
        this.modelClassToTemporaryModelLookup[e.modelName].add(e)
    }
    isModelTemporarilyPersisted(e) {
        return this.temporaryModelLookup[e.id] !== void 0
    }
    temporarilyRemove(e) {
        delete this.temporaryModelLookup[e.id],
        this.modelClassToTemporaryModelLookup[e.modelName].delete(e)
    }
    update(e, n) {
        // Call the transcation queue to generate a transaction
        const r = this.transactionQueue.update(e, n);
        return e.isArchived && this._onArchiveUpdate.fire(e),
        this.handleTransactionOffline(r, n == null ? void 0 : n.offlineError),
        r.result().catch(s=>{
            this.handleTransactionError(e, "Update failed", s, "An unknown error occurred updating your data and changes have been rolled back.")
        }
        ),
        r
    }
    archive(e, n) {
        e.archivedAt || (e.archivedAt = new Date);
        const r = this.transactionQueue.archive(e);
        return this.handleTransactionOffline(r, n == null ? void 0 : n.offlineError),
        r.result().catch(s=>{
            this.handleTransactionError(e, "Archiving failed", s, "An unknown error occurred archiving your data and changes have been rolled back.")
        }
        ),
        r
    }
    unarchive(e, n) {
        e.archivedAt && (e.archivedAt = void 0);
        const r = this.transactionQueue.unarchive(e);
        return this.handleTransactionOffline(r, n == null ? void 0 : n.offlineError),
        r.result().catch(s=>{
            this.handleTransactionError(e, "Restoring failed", s, "An unknown error occurred restoring your data and changes have been rolled back.")
        }
        ),
        r
    }
    delete(e, n) {
        this.temporarilyRemove(e),
        e.archivedAt || (e.archivedAt = new Date);
        const r = this.transactionQueue.delete(e);
        return this.handleTransactionOffline(r, n == null ? void 0 : n.offlineError),
        r.result().catch(s=>{
            new kd(Lo.error,"Deleting failed",sy(s, "An unknown error occurred deleting your data and changes have been rolled back.")).show()
        }
        ),
        r
    }
    sendEphemeral(e, n) {
        const r = {
            ...n,
            id: e.id
        }
          , s = {
            cmd: "eu",
            updates: [r]
        };
        F.network("Sending ephemeral update", r),
        this.socket.send(s)
    }
    findById(e, n, r) { // `e` for the Model's constructor function, `n` for id, `r` for options
        let s = this.modelLookup[n] || this.archivedModelLookup[n];
        if (!s && !(r != null && r.excludeTemporaryModels) && (s = this.temporaryModelLookup[n]),
        s !== void 0 && s instanceof e)
            return s.observePropertyChanges(),
            s
    }
    async findArchivedById(e, n) {
        const r = this.findById(e, n);
        if (r && r.dependenciesRequireLoading === !1)
            return r;
        const s = await this.graphQLClient.query(hce(e, n));
        return this.applyArchiveResponse(s.archivedModelSync).find(a=>a instanceof e)
    }
    allModelsOfType(e, n) {
        const r = ()=>Array.from(this.modelClassToArchivedModelLookup[e.modelName]) || []
          , s = ()=>Array.from(this.modelClassToModelLookup[e.modelName]) || []
          , i = ()=>Array.from(this.modelClassToTemporaryModelLookup[e.modelName]) || [];
        switch (n) {
        case lr.noTempModels:
            return [...s(), ...r()];
        case lr.noArchivedModels:
            return [...s(), ...i()];
        case lr.onlyArchivedModels:
            return r();
        case lr.onlyRegularModels:
            return s();
        case lr.allModels:
            return [...s(), ...i(), ...r()];
        default:
            new zt(n)
        }
        return []
    }
    *allModelsOfTypeGen(e, n) {
        if (n !== lr.onlyArchivedModels && this.modelClassToModelLookup[e.modelName])
            for (const r of this.modelClassToModelLookup[e.modelName])
                yield r;
        if ((n === lr.allModels || n === lr.noArchivedModels) && this.modelClassToTemporaryModelLookup[e.modelName])
            for (const r of this.modelClassToTemporaryModelLookup[e.modelName])
                yield r;
        if ((n === lr.allModels || n === lr.noTempModels || n === lr.onlyArchivedModels) && this.modelClassToArchivedModelLookup[e.modelName])
            for (const r of this.modelClassToArchivedModelLookup[e.modelName])
                yield r
    }
    loadAllModelData(e) {
        return this.database.getAllModelData(Me.getClassName(e))
    }
    localStoreReady(e) {
        return this.database.objectStoreReady(Me.getClassName(e))
    }
    async hydrateModel(e, n, r) { // Hydrate a model.
        var l, d; // e for the model's class, n is an object which contains the id of the model that is going to be hydrated, 
        // or indexes, r for a option object
        const s = typeof n == "string" ? n : n.id
          , i = typeof n == "string" ? void 0 : n.partialIndexValues
          , a = this.findById(e, s); // First it will check if the model is already hydrated and lives in the ObjectPool.
        if (a)
            return a;
        const o = await this.database.getModelDataById(Me.getClassName(e), s, r); // If not, it will try to load the model from IndexedDB.
        if (o !== void 0) {
            if (o === "needs_network_hydration") {
                if (r != null && r.onlyIfLocallyAvailable) // If there is an option to let LSE only load from local IndexedDB, it will not trigger a network request.
                    return;
                if (this.store.developerOptions && await this.applyNetworkDeveloperOptions(),
                this.partialModelLoadedInFull(e)) {
                    // Load models in full (load all of this model).
                    if ((l = r == null ? void 0 : r.customNetworkHydration) != null && l.call(r))
                        throw new Error("Custom network hydration is not supported for models loaded in full");
                    // First, load the specific model.
                    await this.batchModelLoader.addRequest({
                        modelClass: e,
                        id: s,
                        coveringPartialIndexValues: i
                    }),
                    // Na is a setTimeout wrapper in Promise
                    // Second, load all instances of that model.
                    Na(1).then(()=>this.batchModelLoader.addRequest({
                        modelClass: e,
                        skipCreatingModelsInMemory: !0
                    }))
                } else {
                    const u = [{
                        modelClass: e,
                        id: s,
                        coveringPartialIndexValues: i
                    }]
                        // A hook for use customNetworHypdration instead of the default one.
                      , h = ((d = r == null ? void 0 : r.customNetworkHydration) == null ? void 0 : d.call(r)) || u;
                    await Promise.all(h.map(f=>this.batchModelLoader.addRequest(f)))
                }
                return this.findById(e, s)
            }

            // If LSE can load the model from the local database, LSE will hydrate these model and return the first one's hydration promise.
            return this.hydrationBatch.addOperation(o, u=>this.createHydratedModels(e, [u])[0])
        }
    }
    async hydrateModelsByIndexedKey(e, n, r) { // e for hydrated model's class, s for indexes, r for options
        var i, a;
        // The first step is to check if we need to perform a network hydration.
        const s = await this.database.getModelDataByIndexedKey(e, n, r);
        if (s === "needs_network_hydration") {
            if (r != null && r.onlyIfLocallyAvailable)
                return !1;
            if (this.store.developerOptions && await this.applyNetworkDeveloperOptions(),
            this.partialModelLoadedInFull(e)) { // If the lazy loaded model should be loaded in full.
                if ((i = r == null ? void 0 : r.customNetworkHydration) != null && i.call(r))
                    throw new Error("Custom network hydration is not supported for models loaded in full");
                const d = {
                    modelClass: e,
                    skipCreatingModelsInMemory: !0
                };
                await this.batchModelLoader.addRequest(d); 

                // After these models are fetched, LSE will hydrate these models.
                const u = await this.database.getModelDataByIndexedKey(e, n, r);
                if (u === "needs_network_hydration")
                    throw new Error("Failed to load models after network full load");
                return this.hydrationBatch.addOperation(u, h=>this.createHydratedModels(e, h))
            }

            // Request object
            const o = [{
                modelClass: e,
                indexedKey: n.key,
                keyValue: n.value.toString(),
                coveringPartialIndexValues: n.coveringPartialIndexValues
            }]
              , l = ((a = r == null ? void 0 : r.customNetworkHydration) == null ? void 0 : a.call(r)) || o;

            // Add request to batchModelLoader.
            return await Promise.all(l.map(d=>this.batchModelLoader.addRequest(d))),
            !0
        }
        // If the result if not network hydration, LSE will hydrate these models from the local database.
        return this.hydrationBatch.addOperation(s, o=>this.createHydratedModels(e, o))
    }
    async hydrateLocalModelsByIds(e, n) {
        const r = this.database.getModelDataByIds(Me.getClassName(e), n);
        return await this.hydrationBatch.addOperation(r, s=>this.createHydratedModels(e, s))
    }
    countModelsOfType(e) {
        return this.modelClassToModelLookup[e.modelName].size
    }
    async initializeDatabase(e) {
        const n = this.logStorageEstimates();
        try {
            await this.database.open(e) // <- Real stuff.
        } catch (r) {
            const s = await n;
            F.withEnabledLogging(()=>{
                F.warning("Error opening database", {
                    error: r,
                    storage: s
                })
            }
            );
            const i = typeof (r == null ? void 0 : r.message) == "string" ? r.message.includes("bucket data directory") : !1
              , a = lL && typeof (r == null ? void 0 : r.message) == "string" && r.message.includes("Internal error opening backing store");
            throw new et({
                type: "bootstrap error",
                message: "error opening database",
                userError: !0,
                userPresentableMessage: `Could not save data to local database${(s == null ? void 0 : s.isStorageProblem) === !0 ? " since it looks like you've run out of disk space" : i || a ? " since you've unfortunately run into a known Chromium bug" : ""}. If you have remaining space on your system and are not browsing in private mode, this error will usually resolve after quitting and restarting your browser. If you continue to see this error after a browser restart, please ${a ? "try installing our desktop app or" : ""} contact us at support@linear.app.`
            })
        }
    }
    async bootstrap(e) {
        var o, l, d;
        const {userId: n, userAccountId: r} = e;
        this.userId = n,
        this.userAccountId = r;
        const s = this.database.requiredBootstrap();
        ((o = this.store.developerOptions) == null ? void 0 : o.forceNotLoadPartialModelsOnBootstrap) === !0 && s.type === "full" && (s.partialModels = []);
        /** Fetch delta request. We only do delta request with a partial bootstrapping. */
        const i = s.type === Ra.partial && this.fetchDelta(s.lastSyncId).catch(()=>{}
        );
        this._onBootstrap.fire(s.type);
        const a = await this.database.bootstrap(); // Bootstrap the Database from here.
        this.firstSyncId = this.lastSyncId = a.lastSyncId,
        this.backendDatabaseVersion = a.backendDatabaseVersion,
        this.subscribedSyncGroups = new Set(a.subscribedSyncGroups);
        try {
            F.network(`Bootstrapping. Last sync id is ${this.lastSyncId}. Backend DB version is ${this.backendDatabaseVersion}`);
            // Get all models that should be hydrated when the application bootstraps.
            const u = await this.database.getAllInitialHydratedModelData()
              , h = [] // To store the model objects.
              , f = []; // To store dehydrated model properties.
            // Construct the models from the fetched data.
            if (xt.trace("startup", "SyncClient.bootstrap.constructModels", ()=>{
                for (const C of Object.keys(u))
                    for (const b of u[C]) {
                        const k = Me.getModelClass(C); // Get the model's constructor for ModelRegistry.
                        if (!k) {
                            F.info(`Could not find model class for model type '${b.__modelName}'.`);
                            continue
                        }
                        const S = new k(!1); // Call the model's constructor to hydrate the model.
                        S.id = b.id, // Change the model's id, the model's properties and references would be set later.
                        h.push(S),
                        f.push(b) 
                    }
            }
            ),
            h.length === 0)
                return {
                    success: !1,
                    type: a.type
                };
            Hi.addStartupSpanTag("models.count", h.length),
            xt.trace("startup", "SyncClient.bootstrap.updateModels", ()=>{
                for (const b of h)
                    // The newly constructed models will be saved into the "ObjectPool".
                    this.addModelToLiveCollections(b);
                let C = 0;
                lt(()=>{ // Do it in MobX's context.
                    for (const b of h)
                        b.updateFromData(f[C++]); // Dump model properties into that model object.
                    for (const b of h) // Dehydrate references.
                        b.attachToReferencedProperties()
                }
                )
            }
            ),
            this._onInitialModelsLoaded.fire();
            const p = a.type === Ra.partial ? Oo.validateDependencies(s.modelsToLoad) : !0;
            if (F.network(`Got ${h.length} stored models.`),
            this.startObservability(),
            await this.transactionQueue.loadPersistedTransactions(this.database).catch(C=>{
                F.error("Error loading persisted transactions", C)
            }
            ),
            (l = a.syncDeltaPackets) != null && l.length) {
                await this.database.flush();
                const C = a.syncDeltaPackets.filter(b=>b.action !== "S");
                await this.applyDelta(C, a.lastSyncId, !0)
            }
            // Demo logic. Omit this.
            if (hs)
                return {
                    success: !0,
                    type: a.type
                };
            const m = i && !p ? await i : void 0;
            m && (await this.database.flush(),
            await this.applyDelta(m, a.lastSyncId, !0));
            const g = !p || await this.store.requireDeltaSyncAtStartup();
            return (g || (d = a.syncDeltaPackets) != null && d.length) && (Hi.addStartupSpanTag("waitingForDelta", !0),
            Jn.increment("bootstrap.waiting.delta")),
            !m && g ? (await this.database.flush(),
            await this.startSyncing(a.type),
            this.transactionQueue.confirmPersistedTransactions()) : (this._shouldResetOnError = a.type === Ra.partial,
            X0.onLoadingDone.subscribeOnce(async()=>{
                await this.database.flush(), // For a full bootstrapping, only flush the database when onLoadingDone is triggered.
                await this.startSyncing(a.type),
                this.transactionQueue.confirmPersistedTransactions(),
                this._shouldResetOnError = !1
            }
            )),
            {
                success: !0,
                type: a.type
            }
        } catch (u) {
            return F.error("Error bootstrapping from local db", u),
            await (this.userId ? Xn.deleteDatabaseForUserId(this.userId) : Xn.deleteAllDatabases()),
            {
                success: !1,
                type: a.type,
                error: u
            }
        }
    }
    disconnect() {
        F.network("Disconnecting from the sync server."),
        this.socket && this.socket.disconnect(),
        this.database.close("disconnected")
    }
    reconnectWebSocket() {
        this.socket.restart()
    }
    async waitForSync() {
        await this.socket.ping()
    }
    startSyncing(e) {
        let n = !1;
        return new Promise(r=>{
            this.socket.connect({
                url: ft.SOCKET_SERVER_URL || "ws://localhost:8090",
                userId: this.userId || "",
                userAccountId: this.userAccountId || "",
                handshakeCallback: async s=>{
                    var h;
                    const i = this.socket.connectionId;
                    let a = this.lastSyncId;
                    try {
                        const f = await this.database.getMetadata();
                        a = f.lastSyncId,
                        this.setFirstSyncId(f.firstSyncId || f.lastSyncId)
                    } catch {}
                    const o = s.sync;
                    if (!o)
                        return F.error("No sync data in handshake message"),
                        !1;
                    const l = Math.min(this.lastSyncId, a)
                      , d = o.lastSyncId
                      , u = o.lastSequentialSyncId ?? o.lastSyncId;
                    if (l < d) {
                        F.network("Client is not up to date, replaying...", {
                            fromSyncId: l,
                            toSyncId: d
                        });
                        try {
                            F.network("Requesting delta packets", {
                                fromSyncId: l,
                                toSyncId: d
                            });
                            const f = await this.fetchDelta(l, d, e === Ra.full && !n);
                            await this.applyDelta(f, u, !0),
                            this.deltaSyncFailures = 0,
                            n = !0
                        } catch (f) {
                            return f instanceof et && ((h = f.flags) == null ? void 0 : h.reSyncRequired) === !0 ? (this.userId ? await Xn.deleteDatabaseForUserId(this.userId) : await Xn.deleteAllDatabases(),
                            window.location.reload()) : hd(f) ? (F.error("Continuosly failed to apply delta sync because of ratelimits", f),
                            this.store.disconnectFromBackendWithBootstrapError(f)) : z3(f) ? (this.userId ? await Xn.deleteDatabaseForUserId(this.userId) : await Xn.deleteAllDatabases(),
                            window.location.reload()) : (this.deltaSyncFailures++,
                            p8(f) || F.error("Failed to apply delta sync", f, {
                                deltaSyncFailures: this.deltaSyncFailures
                            }),
                            this.deltaSyncFailures > 3 && (p8(f) ? this.store.disconnectFromBackendWithBootstrapError(new et({
                                ...f,
                                userPresentableMessage: "It looks like Linear servers are not reachable. Please check your internet connection and try again."
                            })) : (F.error("Continuously failing to apply delta sync", f),
                            this.userId ? await Xn.deleteDatabaseForUserId(this.userId) : await Xn.deleteAllDatabases(),
                            window.location.reload()))),
                            !1
                        }
                    }
                    return this.socket.connectionId !== i ? !1 : (Yo(Array.from(this.subscribedSyncGroups), o.subscribedSyncGroups) || (this.subscribedSyncGroups = new Set(o.subscribedSyncGroups),
                    this.persistSubscribedSyncGroups()),
                    this.checkDatabaseVersionChange(o.databaseVersion),
                    this.deltaSyncReceivedResolver(),
                    r(),
                    !0)
                }
            })
        }
        )
    }
    async resetLocalDatabase() {
        return this.database.resetDatabase()
    }
    async deleteLocalDatabase() {
        return this.database.deleteDatabase()
    }
    addModel(e) {
        return e.isArchived || this.modelLookup[e.id] !== void 0 ? !1 : (this.addModelToLiveCollections(e),
        !0)
    }
    archiveModel(e) {
        e.detachFromReferencedProperties(),
        this.addModelToArchiveCollections(e)
    }
    deleteModel(e) {
        e.detachFromReferencedProperties(),
        this.removeModelFromArchiveCollections(e),
        this.removeModelFromLiveCollections(e)
    }
    async deleteModelAndDependencies(e, n, r) {
        const s = new qd(this);
        n ? (s.scheduleModelRemoval("deletion", e.modelName, e.id, this.lastSyncId, r),
        await s.applyRemovalsToDatabase(n)) : await this.database.writeTransaction({
            metaStore: !1,
            syncActionStore: !0
        }, async i=>{
            s.scheduleModelRemoval("deletion", e.modelName, e.id, this.lastSyncId, r),
            await s.applyRemovalsToDatabase(i)
        }
        ),
        lt(()=>{
            s.scheduleModelRemoval("deletion", e.modelName, e.id, this.lastSyncId, r),
            s.applyRemovalsToSyncClient(this.lastSyncId)
        }
        )
    }
    getModel(e) {
        return this.modelLookup[e] || this.archivedModelLookup[e] || this.temporaryModelLookup[e]
    }
    cancelTransaction(e) {
        this.transactionQueue.cancelTransaction(e)
    }
    transactionsForModel(e) {
        return this.transactionQueue.transactionsForModel(e)
    }
    async waitUntilSyncId(e) {
        // hs is related to demo
        // let's ignore that
        hs || this.lastSyncId >= e || await this.syncWaitQueue.wait(e)
    }
    applyArchiveResponse(e) {
        const n = JSON.parse(e.archive);
        return this.checkDatabaseVersionChange(e.databaseVersion),
        this.createModelsFromData(n, {
            dependenciesRequireLoading: !e.includesDependencies
        })
    }
    applyModelData(e) {
        return this.createModelsFromData(e)
    }
    async reSyncModel(e, n) {
        Me.getModelClass(e) && await this.updateLock.runExclusive(async()=>{
            const r = new Zu(this.graphQLClient,!0,2)
              , s = r.allProcessedResult();
            r.addRequest({
                modelName: e,
                identifier: n
            }).catch(()=>{}
            );
            const i = (await s).flatMap(a=>a).filter(a=>Me.getModelClass(a.__class));
            this.createModelsFromData(i),
            await this.database.writeTransaction({
                metaStore: !1,
                syncActionStore: !1
            }, Le(a=>{
                for (const o of i) {
                    const {__class: l, ...d} = o;
                    a.put(l, d)
                }
            }
            ))
        }
        )
    }
    async loadPartialModels(e, n, r) {
        const s = Array.isArray(e) ? e : [e]
          , i = Array.isArray(n) ? n : [n];
        if (s.length === 0 || i.length === 0)
            return;
        const a = [];
        for (const o of s)
            for (const l of i)
                await this.database.hasModelsForPartialIndexValues(o.modelName, [Zn.createPartialIndexValue({
                    modelClass: o,
                    syncGroup: l
                })]) || a.push({
                    modelClass: o,
                    syncGroup: l,
                    skipCreatingModelsInMemory: r == null ? void 0 : r.skipAddingToMemory
                });
        a.length !== 0 && await Promise.all(a.map(o=>this.batchModelLoader.addRequest(o)))
    }
    async hasModelsForPartialIndexValues(e, n, r) {
        return this.database.hasModelsForPartialIndexValues(e, n, r)
    }
    async removeLoadedPartialIndexValues(e, n) {
        return this.database.removeLoadedPartialIndexValues(e, n)
    }
    async statistics() {
        var s, i;
        const e = await fce(this.graphQLClient)
          , n = await this.database.statistics()
          , r = {};
        for (const a in n)
            r[a] = {
                inMemory: 0,
                inLocalDatabase: ((s = n[a]) == null ? void 0 : s.count) || 0,
                inRemoteDatabase: e[a] || 0,
                partialIndexValues: (i = n[a]) == null ? void 0 : i.partialIndexValues
            };
        return Object.values(this.modelLookup).forEach(a=>{
            a && (r[a.modelName].inMemory += 1)
        }
        ),
        r
    }
    async localStatistics() {
        var r, s;
        const e = await this.database.statistics()
          , n = {};
        for (const i in e)
            n[i] = {
                inMemory: 0,
                inLocalDatabase: ((r = e[i]) == null ? void 0 : r.count) || 0,
                partialIndexValues: (s = e[i]) == null ? void 0 : s.partialIndexValues
            };
        return Object.values(this.modelLookup).forEach(i=>{
            i && (n[i.modelName].inMemory += 1)
        }
        ),
        n
    }
    getLastSyncId() {
        return this.lastSyncId
    }
    getFirstSyncId() {
        return this.firstSyncId
    }
    loadModelDataForDebug(e, n) {
        return typeof n == "string" ? this.database.getModelDataById(Me.getClassName(e), n, {
            onlyIfLocallyAvailable: !0
        }) : this.database.getModelDataByIndexedKey(e, n)
    }
    createModelsFromData(e, n) {
        // This is similar to the last phase of the bootstrapping process.
        return lt(()=>{
            const r = [] // All constructed models.
              , s = e.map(i=>{ // All constructed or updated models.
                const a = Me.getModelClass(i.__class);
                if (a) {
                    const o = this.findById(a, i.id);
                    if (o)
                        return (n == null ? void 0 : n.dontUpdateExistingModels) !== !0 && o.updateFromData(i, {
                            dataContainsAllProperties: !0
                        }),
                        o;
                    const l = this.createModel(a, i);
                    return r.push(l),
                    l
                } else {
                    F.info(`Could not find model class for ${i.__class}`);
                    return
                }
            }
            ).concrete();
            // Build references for all models.
            for (const i of s)
                n != null && n.dependenciesRequireLoading && (i.dependenciesRequireLoading = !0),
                i.attachToReferencedProperties();
            for (const i of r)
                // Some models may be waiting for their reference.
                this.store.delayedRelationManager.resolveDelayedRelation(i);
            return s
        }
        )
    }
    setFirstSyncId(e) {
        this.firstSyncId = e,
        this.graphQLClient.setFirstSyncId(e)
    }
    handleTransactionOffline(e, n) {
        n && e.result().then(r=>{
            r === Ro.offlined && (e.cancel(),
            new kd(Lo.error,"You are offline",n).show())
        }
        )
    }
    async fetchDelta(e, n, r) {
        let s = `/sync/delta?lastSyncId=${e}`;
        n && (s += `&toSyncId=${n}`);
        let a = (await this.graphQLClient.restModelsJsonStream(s)).syncActions || [];
        return r && (a = a.filter(o=>o.action !== "S")),
        a.reverse(),
        F.network(`Received ${a.length} delta packets`, {
            fromSyncId: e,
            toSyncId: n,
            length: a.length
        }),
        a
    }
    createModel(e, n) {
        const r = this.findById(e, n.id)
          , s = r || new e(!1);
        return s.store = this.store, // the model's store property are assigned here
        s.updateFromData(n, {
            dataContainsAllProperties: !!r
        }),
        s.isArchived ? this.addModelToArchiveCollections(s) : this.addModelToLiveCollections(s),
        s
    }
    addModelToLiveCollections(e) { // Add a model object to the "ObjectPool".
        this.removeModelFromArchiveCollections(e),
        this.modelLookup[e.id] || (this.modelLookup[e.id] = e,
        this.modelClassToModelLookup[e.modelName].add(e))
    }
    removeModelFromLiveCollections(e) {
        this.modelLookup[e.id] && (delete this.modelLookup[e.id],
        this.modelClassToModelLookup[e.modelName].delete(e))
    }
    checkDatabaseVersionChange(e) {
        this.backendDatabaseVersion !== e && (this.backendDatabaseVersion < e && setTimeout(()=>{
            this._onDatabaseVersionChange.fire()
        }
        , vce + Math.random() * wce),
        this.backendDatabaseVersion = e,
        this.database.setBackendDatabaseVersion(this.backendDatabaseVersion))
    }
    async applyDelta(e, n, r) {
        // receive delta from the remote server
        // e for the update events
        // n for the lastSyncId
        e.length !== 0 && await this.updateLock.runExclusive(async()=>{
            e.length && F.network(`Processing ${e.length} sync packets. Last sync is ${n}`, {
                updates: e.slice(0, 200)
            });
            const {syncGroupsChanged: s, addedSyncGroups: i, removedSyncGroups: a, loadedSyncGroupsModels: o, syncId: l} = await this.loadDeltaNewSyncGroupsModels(e);
            let d = [];
            const u = await Zu.supportedPacket(this.database, e);
            if (u.length > 0) {
                const f = new Zu(this.graphQLClient,!1,3)
                  , p = f.allProcessedResult();
                for (const m of u)
                    F.network(`Loading dependencies for ${m.modelName} with id ${m.data.id}`),
                    f.addRequest({
                        modelName: m.modelName,
                        identifier: m.data.id
                    }).catch(()=>{}
                    );
                d = (await p).flatMap(m=>m).filter(m=>Me.getModelClass(m.__class))
            }
            await this.database.writeTransaction({
                metaStore: !0,
                syncActionStore: !0
            }, async f=>{
                i.size > 0 && this.addNewSyncGroupsToDatabase([...i], o, f);
                for (const m of d) {
                    const {__class: g, ...C} = m;
                    f.put(g, C)
                }
                const p = new qd(this,r);
                for (const m of e)
                    switch (f.addSyncPacket(m),
                    p.shouldApplyRemoval(m) === !0 && await p.applyRemovalsToDatabase(f),
                    m.action) {
                    case "I": // Insertion
                    case "V": // Unarchive
                    case "U": // Updation
                        f.put(m.modelName, m.data),
                        this.transactionQueue.modelUpserted(m.modelId);
                        break;
                    case "C": // Covering partial data
                        const g = await f.get(m.modelName, m.modelId);
                        g ? (Object.assign(g, m.data),
                        f.put(m.modelName, g)) : F.error("Did not have model for C packet", void 0, {
                            id: m.modelId,
                            modelName: m.modelName
                        });
                        break;
                    case "A": // Archival
                        p.scheduleModelRemoval("archival", m.modelName, m.modelId, m.id);
                        break;
                    case "D": // Deletion
                        p.scheduleModelRemoval("deletion", m.modelName, m.modelId, m.id);
                        break;
                    case "G":
                    case "S": // Change SyncGroups
                        const b = this.changedSyncGroups(m.data.syncGroups, this.subscribedSyncGroups).removedGroups.filter(k=>a.has(k));
                        b.length && await this.removeSyncGroups(b, f, p, m.id);
                        break
                    }
                await p.applyRemovalsToDatabase(f),
                lt(()=>{
                    var C;
                    const m = new Map;
                    i.size > 0 && this.addNewSyncGroupsToClient([...i], o, l, m);
                    // there are two loops of deltas
                    // why necessary? remains unclear to me
                    for (const b of e)
                        switch (b.action) {
                        case "I":
                        case "V":
                        case "U":
                            // Instead of sending the changed property, LSE send the whole data to the clients!
                            const k = Me.getModelClass(b.modelName);
                            if (k) {
                                let D = this.findById(k, b.data.id);
                                if (D && D.isArchived && (b.action === "I" || r === !0) && (this.removeModelFromArchiveCollections(D),
                                D = void 0),
                                !D) {
                                    let R;
                                    try {
                                        R = this.createModel(k, b.data) // or try to create model,
                                        // if the model already exists, it would set data instead
                                    } catch (T) {
                                        throw F.error("Error creating model from sync packet", T, {
                                            packetId: b.id,
                                            modelId: b.modelId,
                                            modelName: b.modelName
                                        }),
                                        T
                                    }
                                    m.set(R, b.id)
                                }
                            }
                            break;
                        case "A":
                            const S = this.findById(at, b.modelId);
                            S && b.data && S.updateFromData(b.data, {
                                dataContainsAllProperties: !0
                            });
                            break
                        }
                    const g = p.removedModelIds;
                    for (const [b,k] of m) {
                        const S = g.get(b.id);
                        S !== void 0 && S >= k && m.delete(b)
                    }
                    for (const [b] of m)
                        b.attachToReferencedProperties(),
                        this.store.delayedRelationManager.resolveDelayedRelation(b);
                    d.length && this.createModelsFromData(d);
                    for (const b of e)
                        switch (p.shouldApplyRemoval(b) === !0 && p.applyRemovalsToSyncClient(b.id),
                        b.action) {
                        case "I": // Insert
                        case "V":
                        case "U": // update?
                        case "C": 
                            const k = this.findById(at, b.modelId);
                            k && (k.updateFromData(b.data, {
                                dataContainsAllProperties: b.action !== "C"
                            }),
                            // rebase the model on lastSyncId
                            this.transactionQueue.rebaseTransactions(k, n));
                            break;
                        case "A": // delete issue is actually archiving it
                            p.scheduleModelRemoval("archival", b.modelName, b.modelId, b.id);
                            break;
                        case "D": // but deleting comment is actually a deletion!
                            p.scheduleModelRemoval("deletion", b.modelName, b.modelId, b.id);
                            break
                        }
                    p.applyRemovalsToSyncClient(((C = e.at(-1)) == null ? void 0 : C.id) || Number.MAX_SAFE_INTEGER),
                    p.reportPerformance(),
                    this.lastSyncId = Math.max(this.lastSyncId, n), // finally update sync id
                    f.setLastSyncId(this.lastSyncId),
                    i.size && (this.setFirstSyncId(this.lastSyncId),
                    f.setFirstSyncId(this.lastSyncId)),
                    this.syncWaitQueue.progressQueue(this.lastSyncId),
                    s && this._onSyncGroupsChanged.fire(),
                    f.commit()
                }
                )
            }
            ).catch(f=>{
                F.error("Error applying sync response", f),
                this.socket.restart()
            }
            )
        }
        )
    }
    async loadDeltaNewSyncGroupsModels(e) {
        const n = new Set
          , r = new Set
          , s = new Set
          , i = new Set;
        let a = 0;
        const o = new Set(this.subscribedSyncGroups);
        for (const h of e)
            if (h.action === "G" || h.action === "S") {
                a = Math.max(a, h.id);
                const f = this.changedSyncGroups(h.data.syncGroups, o);
                for (const p of f.addedGroups)
                    o.add(p),
                    n.add(p),
                    r.delete(p),
                    (h.action !== "G" || h.data.newSyncGroup !== !0 && !i.has(p)) && s.add(p),
                    h.action === "G" && h.data.newSyncGroup === !0 && i.add(p);
                for (const p of f.removedGroups)
                    o.delete(p),
                    n.delete(p),
                    s.delete(p),
                    r.add(p)
            }
        let l = []
          , d = 0;
        if (s.size > 0) {
            const h = Me.getModelNames();
            [l,d] = await E4.executeWithRetries({
                maxRetries: mn.getValue(mn.bootstrapRatelimitedInSyncDeltaRetryCount, 3),
                backoff: f=>{
                    var p, m;
                    return hd(f) && ((m = (p = f.metaData) == null ? void 0 : p.rateLimitResult) == null ? void 0 : m.duration) || 1e3
                }
                ,
                shouldRetry: f=>hd(f)
            }, ()=>Oo.partialBootstrap(this.graphQLClient, h, [...s], {
                firstSyncId: a
            })).then(f=>[f.data, f.lastSyncId])
        }
        return {
            syncGroupsChanged: n.size > 0 || r.size > 0,
            addedSyncGroups: n,
            removedSyncGroups: r,
            loadedSyncGroups: s,
            loadedSyncGroupsModels: l,
            syncId: d
        }
    }
    changedSyncGroups(e, n) {
        const r = e.filter(i=>!n.has(i))
          , s = n ? Array.from(n).filter(i=>!e.includes(i)) : [];
        return {
            addedGroups: r,
            removedGroups: s
        }
    }
    async removeSyncGroups(e, n, r, s) {
        if (e.length === 0)
            return;
        F.network(`Removing sync groups ${e.join(", ")}`);
        const i = "AD619ACC-AAAA-4D84-AD23-61DDCA8319A0"
          , a = "CDA201A7-AAAA-45C5-888B-3CE8B747D26B";
        for (const o of e) {
            const l = this.subscribedSyncGroups.has(o);
            this.subscribedSyncGroups.delete(o),
            this.persistSubscribedSyncGroups(n);
            const d = this.getModel(o);
            (d == null ? void 0 : d.modelName) === "Team" && this.subscribedSyncGroups.has(i) ? r.scheduleModelRemoval("deletion", d.modelName, d.id, s, {
                only: ["Attachment", "Comment", "Cycle", "CustomView", "DocumentContent", "Facet", "Favorite", "Issue", "IssueProgressSnapshot", "IssueHistory", "Project", "ViewPreferences", "TriageResponsibility", "ViewPreferences"]
            }) : r.scheduleModelRemoval("deletion", (d == null ? void 0 : d.modelName) || "Team", o, s),
            (o === i || o === a) && (l ? (F.remote("Resetting due to admin/fullMember access group change"),
            await this.resetLocalDatabase().finally(async()=>{
                window.location.replace(window.location.href),
                await new Promise(Df)
            }
            )) : F.warning("Removed from sync admin/fullMember sync group even though user wasn't a member"))
        }
    }
    handleTransactionError(e, n, r, s) {
        var i, a;
        r instanceof et && ((i = r.flags) != null && i.reSyncRequired) ? Jn.increment("sync.error.re_sync_needed", {
            error: r.message
        }) : r instanceof et && ((a = r.flags) != null && a.entityDeleted) ? (F.error("Client modified an deleted entity", r),
        this.deleteModelAndDependencies(e)) : new kd(Lo.error,n,sy(r, s),{
            link: r instanceof et && r.userError ? void 0 : {
                url: Vz,
                label: "Check if Linear is having issues",
                external: !0
            }
        }).show()
    }
    createHydratedModels(e, n) {
        return lt(()=>{
            const r = n.map(s=>this.createModel(e, s));
            for (const s of r)
                s.observePropertyChanges(),
                s.attachToReferencedProperties(),
                this.store.delayedRelationManager.resolveDelayedRelation(s);
            return r
        }
        )
    }
    persistSubscribedSyncGroups(e) {
        this.subscribedSyncGroups && (e ? e.setSubscribedSyncGroups(Array.from(this.subscribedSyncGroups)) : this.database.setSubscribedSyncGroups(Array.from(this.subscribedSyncGroups)))
    }
    async logStorageEstimates() {
        if (!navigator.storage || !navigator.storage.estimate) {
            F.info("Storage estimate not supported");
            return
        }
        try {
            const e = await navigator.storage.estimate()
              , n = e.quota ? (e.usage ?? 0) / e.quota * 100 : 100
              , r = ((e.quota ?? 0) - (e.usage ?? 0)) / 1024 / 1024
              , s = e.usage === 18446744073709552e3;
            return F.info("Storage estimate in MB", {
                storage: {
                    quota: (e.quota ?? 0) / 1024 / 1024,
                    remaining: r,
                    percentageUsed: n,
                    isStorageProblem: s
                }
            }),
            {
                ...e,
                isStorageProblem: s
            }
        } catch (e) {
            F.info("Storage estimate error", e);
            return
        }
    }
    partialModelLoadedInFull(e) {
        return e.loadStrategy !== dn.partial || e.partialLoadMode === ki.full
    }
    async applyNetworkDeveloperOptions() {
        var e, n;
        if ((e = this.store.developerOptions) != null && e.pingTime && await Na(this.store.developerOptions.pingTime),
        (n = this.store.developerOptions) != null && n.failPercentage && Math.random() * 100 < this.store.developerOptions.failPercentage)
            throw new Error("Failed hydration because of developer option failure settings")
    }
}
;
ng.constructorName = "SyncClient";
// #endregion
/** SyncClient */
let Wd = ng;
bm([xt.trace("startup")], Wd.prototype, "startSyncing", null);
bm([xt.trace("startup")], Wd.prototype, "fetchDelta", null);
bm([xt.trace("startup")], Wd.prototype, "applyDelta", null);
class kce {
    static shouldRetrySendingOnceConnected(e) {
        switch (e.cmd) {
        case "collab":
            return !1;
        default:
            return !0
        }
    }
}
var lf;
(function(t) {
    t[t.onIdleOrActive = 0] = "onIdleOrActive",
    t[t.periodicWhileActive = 1] = "periodicWhileActive"
}
)(lf || (lf = {}));
const ld = class ld {
    constructor() {
        this.callbacks = [],
        this.lastUserInteraction = Date.now(),
        this.timerIds = [],
        this.intervalIds = [],
        this.eventHandlers = {},
        this.idleByTimeout = {},
        this.lastCursorHash = 0,
        this.isInvokingCallback = !1,
        this.handleUserInteraction = async()=>{
            this.lastUserInteraction = Date.now();
            for (const e of this.callbacks.entries())
                await this.checkTimeout(e)()
        }
        ,
        this.checkCursorMovement = e=>{
            const n = e[1];
            return async()=>{
                const r = Xt.bridge.getCursorScreenPoint();
                if (r) {
                    const s = r.x / 1e5 + r.y;
                    if (this.lastCursorHash !== s) {
                        if (this.lastCursorHash = s,
                        !n.shouldCall(this.lastUserInteraction, 0))
                            return;
                        await this.checkTimeout(e, 0)()
                    }
                }
            }
        }
        ,
        this.checkTimeout = (e,n=1)=>{
            const [r,s] = e;
            return async()=>{
                const i = Date.now() - this.lastUserInteraction;
                if (this.isInvokingCallback || !s.shouldCall(this.lastUserInteraction, n))
                    return;
                let a = !1;
                try {
                    this.isInvokingCallback = !0,
                    a = await s.call(this.lastUserInteraction)
                } catch (o) {
                    F.error("Failed to invoke callback for IdleNotifier", o)
                } finally {
                    this.isInvokingCallback = !1
                }
                if (this.setUserIsIdle(s.timeout, i >= s.timeout),
                a) {
                    window.clearTimeout(this.timerIds[r]);
                    const o = Math.min(s.timeout - i, s.timeout);
                    this.timerIds[r] = window.setTimeout(this.checkTimeout(e), o)
                }
            }
        }
        ;
        for (const e of xce) {
            const n = K2(this.handleUserInteraction, be.SECOND);
            this.eventHandlers[e] = n,
            self.document.addEventListener(e, n)
        }
        ld.notifierCount === 20 && F.error("More than 20 IdleNotifier instances created. Most likely older instances haven't been cleared with a call to cancel()."),
        ld.notifierCount++
    }
    subscribe(e, n, r={}) {
        const {behaviour: s=0, checkOSCursorMovement: i=!0} = r;
        let a;
        switch (s) {
        case 0:
            a = new Dce({
                callback: e,
                timeout: n,
                ...r,
                behaviour: s
            },this);
            break;
        case 1:
            a = new Sce({
                callback: e,
                timeout: n,
                ...r,
                behaviour: s
            },this);
            break;
        default:
            throw new zt(s)
        }
        this.callbacks.push(a);
        const o = this.callbacks.length - 1;
        this.timerIds.push(window.setTimeout(this.checkTimeout([o, a]), n)),
        i && this.intervalIds.push(window.setInterval(this.checkCursorMovement([o, a]), n / 2))
    }
    userIsIdle(e) {
        return this.idleByTimeout[e] || !1
    }
    cancel() {
        this.timerIds.forEach(window.clearTimeout),
        this.intervalIds.forEach(window.clearInterval);
        for (const [e,n] of Object.entries(this.eventHandlers))
            self.document.removeEventListener(e, n);
        ld.notifierCount--
    }
    setUserIsIdle(e, n) {
        this.idleByTimeout[e] = n
    }
}
;
ld.notifierCount = 0;
let df = ld;
const xce = ["mousemove", "keydown", "visibilitychange", "touchstart"];
var Iw;
(function(t) {
    t[t.osCursorMovement = 0] = "osCursorMovement",
    t[t.userInteraction = 1] = "userInteraction"
}
)(Iw || (Iw = {}));
class Dce {
    constructor(e, n) {
        this.notifierCallback = e,
        this.idleNotifier = n
    }
    get timeout() {
        return this.notifierCallback.timeout
    }
    shouldCall(e, n) {
        return Date.now() - e >= this.timeout || this.idleNotifier.userIsIdle(this.timeout)
    }
    async call(e) {
        const r = Date.now() - e >= this.timeout
          , s = this.idleNotifier.userIsIdle(this.timeout);
        return r !== s && await this.callback(r, e),
        !r
    }
    get callback() {
        return this.notifierCallback.callback
    }
}
class Sce {
    constructor(e, n) {
        this.lastTimeCallbackInvoked = -1,
        this.lastSentUserInteraction = -1,
        this.notifierCallback = e,
        this.idleNotifier = n
    }
    get timeout() {
        return this.notifierCallback.timeout
    }
    shouldCall(e, n) {
        if (n === 0 && !this.notifierCallback.checkOSCursorMovement)
            return !1;
        const r = this.idleNotifier.userIsIdle(this.timeout)
          , i = Date.now() - e >= this.timeout;
        return r && i ? !1 : this.lastTimeCallbackInvoked + this.timeout <= Date.now() + be.SECOND || r !== i
    }
    async call(e) {
        const r = Date.now() - e >= this.timeout;
        return this.lastSentUserInteraction === e || (await this.callback(r, e),
        this.lastSentUserInteraction = e,
        this.lastTimeCallbackInvoked = Date.now()),
        !r
    }
    get callback() {
        return this.notifierCallback.callback
    }
    get behaviour() {
        return this.notifierCallback.behaviour
    }
}
const _ce = 3
  , Ice = be.SECOND * 20
  , wu = be.MINUTE * 30
  , Ece = be.MINUTE * 5
  , rg = class rg {
    get onConnect() {
        return this._onConnect
    }
    get onDisconnect() {
        return this._onDisconnect
    }
    get onAuthenticationError() {
        return this._onAuthenticationError
    }
    get onSyncMessage() {
        return this._onSyncMessage
    }
    get onEphemeralUpdate() {
        return this._onEphemeralUpdate
    }
    get onMessage() {
        return this._onMessage
    }
    get connectionId() {
        return this._connectionId
    }
    constructor(e) {
        this.status = 1,
        this.reconnectBackoffCount = 0,
        this.lastPong = 0,
        this._onConnect = new Tt,
        this._onDisconnect = new Tt,
        this._onAuthenticationError = new Tt,
        this._onSyncMessage = new Tt,
        this._onEphemeralUpdate = new Tt,
        this._onMessage = new Tt,
        this._connectionId = 1,
        this.preHandshakeMessages = [],
        this.preHandshakeCommands = [],
        this.statefulCommands = [],
        this.explicityClosed = !1,
        this.periodicPingId = 0,
        this.pingId = 0,
        this.pingQueue = new OE,
        this.connectionLock = new qf,
        this.handshakeSuccess = Le(()=>{
            F.network("WebSocket authenticated"),
            this.packer = new rx({
                useRecords: !1,
                bundleStrings: !1,
                sequential: !1
            }),
            this.status = 0;
            let n;
            for (; n = this.statefulCommands.pop(); )
                this.send(n);
            for (const r of this.preHandshakeCommands)
                this.send(r);
            this.preHandshakeCommands = [];
            for (const r of this.preHandshakeMessages)
                this.handleMessage(r);
            this.preHandshakeMessages = [],
            this._onConnect.fire(),
            this.ping()
        }
        ),
        this.handleReconnectIfNecessary = ()=>{
            (Date.now() - this.lastPong > 90 * 1e3 || this.reconnectTimeout || this.status !== 0) && this.reconnect()
        }
        ,
        this.closeWebSocket = Le(n=>{
            this._connectionId++,
            this.reconnectBackoffCount > 2 ? this.status = 3 : this.status = this.idleNotifier.userIsIdle(wu) ? 2 : 1,
            n.onmessage = null,
            n.onopen = null,
            n.onclose = null,
            (n.readyState === WebSocket.CONNECTING || n.readyState === WebSocket.OPEN) && n.close()
        }
        ),
        this.handleIdleTimeout = n=>{
            n ? this.webSocket.close() : this.handleReconnectIfNecessary()
        }
        ,
        this.clientType = e,
        Ln(this, {
            status: ut
        })
    }
    connect(e) {
        this.url = e.url,
        this.userId = e.userId,
        this.userAccountId = e.userAccountId,
        this.handshakeCallback = e.handshakeCallback,
        this.lastPong = Date.now(),
        this.idleNotifier = new df,
        this.idleNotifier.subscribe(this.handleIdleTimeout, wu),
        this.idleNotifier.subscribe((n,r)=>{
            this.updateLastActiveAt(r)
        }
        , Ece, {
            behaviour: lf.periodicWhileActive,
            checkOSCursorMovement: !1
        }),
        this.reconnect(),
        qs.onVisible.subscribe(this.handleReconnectIfNecessary)
    }
    disconnect() {
        window.clearInterval(this.periodicPingId),
        qs.onVisible.unsubscribe(this.handleReconnectIfNecessary),
        this.idleNotifier.cancel(),
        this.explicityClosed = !0,
        this.status = this.idleNotifier.userIsIdle(wu) ? 2 : 1,
        this.webSocket.close()
    }
    restart() {
        this.webSocket && (this.webSocket.onmessage = null,
        this.webSocket.close())
    }
    send(e, n) {
        this.status === 0 || e.cmd === "hshk" ? (F.verbose(()=>({
            message: "↑ WebSocket",
            metaData: e
        })),
        this.packer ? this.webSocket.send(this.packer.pack(e)) : this.webSocket.send(JSON.stringify(e))) : kce.shouldRetrySendingOnceConnected(e) && (n == null ? void 0 : n.onlySendWhenOnline) !== !0 && this.preHandshakeCommands.push(e)
    }
    sendStateful(e) {
        return this.status === 0 ? this.send(e) : this.statefulCommands.push(e),
        ()=>{
            const n = this.statefulCommands.indexOf(e);
            n !== -1 && this.statefulCommands.splice(n, 1)
        }
    }
    async ping() {
        const e = {
            cmd: "ping",
            id: ++this.pingId
        };
        this.send(e),
        await this.pingQueue.wait(this.pingId)
    }
    updateLastActiveAt(e) {
        const n = {
            cmd: "presence",
            time: e
        };
        this.send(n)
    }
    reconnect() {
        window.clearInterval(this.periodicPingId),
        window.clearTimeout(this.reconnectTimeout),
        this.webSocket && this.closeWebSocket(this.webSocket),
        this.reconnectTimeout = void 0;
        const e = new URL(this.url);
        e.searchParams.set("userAccountId", this.userAccountId),
        e.searchParams.set("userId", this.userId),
        this.webSocket = new WebSocket(e.toString()),
        this.webSocket.binaryType = "arraybuffer",
        this.packer = void 0,
        this.unpacker = new _d({
            useRecords: !1,
            bundleStrings: !1,
            sequential: !1
        }),
        this.webSocket.onopen = ()=>{
            this.preHandshakeMessages = [];
            const n = {
                cmd: "hshk",
                userId: this.userId,
                userAccountId: this.userAccountId,
                clientType: this.clientType,
                protocolVersion: _ce,
                clientVersion: V3.versionString(ft.BUILD_REVISION),
                releaseChannelOverride: _r.getReleaseChannelOverride(this.userId),
                useBinaryProtocol: !0
            };
            this.send(n)
        }
        ,
        this.webSocket.onmessage = n=>{
            try {
                const r = n.data;
                if (r instanceof ArrayBuffer) {
                    const s = this.unpacker.unpack(r);
                    if (typeof s != "object")
                        throw new Error("Received non-object from unpacker");
                    this.handleMessage(s)
                } else {
                    const s = JSON.parse(r);
                    this.handleMessage(s)
                }
            } catch (r) {
                F.error("Received incorrect WebSocket message", r)
            }
        }
        ,
        this.webSocket.onclose = n=>{
            F.network(this.idleNotifier.userIsIdle(wu) ? "WebSocket closed due to idle user" : "WebSocket closed"),
            window.clearInterval(this.periodicPingId),
            this.closeWebSocket(this.webSocket),
            this._onDisconnect.fire(n.code),
            !(this.explicityClosed || this.idleNotifier.userIsIdle(wu) === !0) && this.connectionLock.runExclusive(async()=>{
                this.reconnectBackoffCount = Math.min(this.reconnectBackoffCount + 1, 12);
                const r = Math.min(3e4, (200 + Math.random() * 100) * Math.pow(this.reconnectBackoffCount, 2));
                this.reconnectTimeout = window.setTimeout(()=>{
                    this.reconnect()
                }
                , r)
            }
            )
        }
    }
    async handleMessage(e) {
        if (F.verbose(()=>({
            message: "↓ WebSocket",
            metaData: e
        })),
        e.cmd === "noauth") {
            this._onAuthenticationError.fire();
            return
        }
        if (e.cmd !== "hshk" && this.status !== 0) {
            this.preHandshakeMessages.push(e);
            return
        }
        switch (e.cmd) {
        case "hshk":
            e.sync && (F.network("Received handshake sync", {
                messageLastSyncId: e.sync.lastSyncId,
                messageLastSequentialSyncId: e.sync.lastSequentialSyncId,
                subscribedSyncGroups: e.sync.subscribedSyncGroups
            }),
            window.clearInterval(this.periodicPingId),
            this.periodicPingId = window.setInterval(()=>{
                if (this.webSocket.readyState === WebSocket.OPEN) {
                    const n = {
                        cmd: "ping",
                        id: ++this.pingId
                    };
                    this.send(n)
                }
            }
            , Ice),
            this.connectionLock.runExclusive(async()=>{
                await this.handshakeCallback(e).catch(r=>{
                    F.error("Handshake callback reported error", r),
                    this.webSocket.close()
                }
                ) && this.webSocket.readyState === WebSocket.OPEN ? this.handshakeSuccess() : this.webSocket.close()
            }
            ));
            break;
        case "sync":
            this._onSyncMessage.fire(e);
            break;
        case "eu":
            this._onEphemeralUpdate.fire(e.updates);
            break;
        case "pong":
            this.reconnectBackoffCount = Math.max(this.reconnectBackoffCount - 2, 0),
            this.lastPong = Date.now(),
            this.pingQueue.progressQueue(e.id);
            break;
        case "push":
            if (!Xt.isElectron)
                break;
            if ("notifyPushMessage"in Xt.bridge)
                Xt.bridge.notifyPushMessage(e);
            else {
                const n = {
                    body: e.body,
                    requireInteraction: e.requireInteraction,
                    data: {
                        link: e.link
                    }
                }
                  , r = new Notification(e.title,n)
                  , s = e.link;
                s && (r.onclick = ()=>{
                    Xt.bridge.activate(),
                    ds.instance.redirectTo(s)
                }
                )
            }
            break;
        default:
            this._onMessage.fire(e)
        }
    }
}
;
rg.constructorName = "SyncWebSocket";
let uf = rg;
var Ew;
(function(t) {
    t[t.connected = 0] = "connected",
    t[t.disconnected = 1] = "disconnected",
    t[t.disconnectedDueToUserIdle = 2] = "disconnectedDueToUserIdle",
    t[t.failingToConnect = 3] = "failingToConnect"
}
)(Ew || (Ew = {}));
class Ace {
    constructor(e) {
        this.targetToRelationshipLookup = {},
        this.store = e
    }
    addDelayedRelation(e, n) {
        this.targetToRelationshipLookup[n] === void 0 ? this.targetToRelationshipLookup[n] = new Set([e.id]) : this.targetToRelationshipLookup[n].add(e.id)
    }
    resolveDelayedRelation(e) {
        const n = this.targetToRelationshipLookup[e.id];
        if (n)
            for (const r of n) {
                const s = this.store.findById(at, r);
                s && s.attachToReferencedProperties()
            }
    }
}
const Aw = 100;
class jce {
    get nextUndoOperation() {
        return this.undoQueue[this.undoQueue.length - 1]
    }
    get nextRedoOperation() {
        return this.redoQueue[this.redoQueue.length - 1]
    }
    constructor(e) {
        this.transactionQueuedSignal = e,
        this.undoQueue = [],
        this.redoQueue = [],
        Ln(this, {
            addOperation: Le
        })
    }
    async addOperation(e, n) {
        const r = [];
        function s(i) {
            r.push(i)
        }
        this.transactionQueuedSignal.subscribe(s);
        try {
            const i = ds.instance.location
              , a = await n();
            return this.transactionQueuedSignal.unsubscribe(s),
            r.length && (this.undoQueue.push({
                name: e,
                location: i,
                time: new Date,
                transactions: r
            }),
            this.redoQueue.splice(0, this.redoQueue.length),
            this.undoQueue.length > Aw && this.undoQueue.shift()),
            a
        } catch (i) {
            this.transactionQueuedSignal.unsubscribe(s),
            F.error("addOperation error", i);
            return
        }
    }
    addCustomOperation(e, n, r) {
        const s = ds.instance.location;
        this.undoQueue.push({
            name: e,
            location: s,
            time: new Date,
            transactions: [],
            customCallbacks: {
                undo: n,
                redo: r
            }
        }),
        this.redoQueue.splice(0, this.redoQueue.length),
        this.undoQueue.length > Aw && this.undoQueue.shift()
    }
    undo() {
        const e = this.undoQueue.pop();
        if (e) {
            const n = {
                ...e,
                transactions: e.transactions.reverse().map(r=>r.undoTransaction()),
                time: new Date
            };
            n.customCallbacks && n.customCallbacks.undo(),
            this.redoQueue.push(n)
        }
        return e
    }
    redo() {
        const e = this.redoQueue.pop();
        if (e) {
            const n = {
                ...e,
                transactions: e.transactions.map(r=>r.undoTransaction()),
                time: new Date
            };
            n.customCallbacks && n.customCallbacks.redo(),
            this.undoQueue.push(n)
        }
        return e
    }
}
function Mce(t, e) {
    const n = ta()
      , r = setTimeout(()=>n.reject(new Tce("Promise timed out")), e);
    return Promise.resolve(t).then(s=>n.resolve(s)).catch(s=>n.reject(s)).finally(()=>{
        clearTimeout(r)
    }
    ),
    n
}
class Tce extends Error {
    constructor(e) {
        super(e),
        Object.defineProperty(this, "name", {
            value: "TimeoutError"
        })
    }
}
async function Lce(t, e) {
    return t.query(Mt.gql`
      query Flags($releaseChannelOverride: ReleaseChannel) {
        flags(releaseChannelOverride: $releaseChannelOverride) {
          userId
          flags
        }
      }
    `, {
        releaseChannelOverride: e
    }, {
        dontLog: !0
    })
}
class vm {
    static async init(e, n, r) {
        this.instance && this.instance.stop(),
        this.instance = new vm(e,n,r),
        await this.instance.ensureLoaded()
    }
    static async changeReleaseChannelOverride(e) {
        if (!this.instance)
            throw new Error("FlagsSync not initialized");
        _r.setReleaseOverrideChannel(this.instance.userId, e);
        const n = {
            cmd: "flagsReevaluate",
            releaseChannelOverride: e
        };
        this.instance.socket.send(n);
        const r = ta();
        this.instance.featureFlagsPromises.add(r),
        await Mce(r, 5 * be.SECOND).finally(()=>{
            var s;
            (s = this.instance) == null || s.featureFlagsPromises.delete(r)
        }
        )
    }
    constructor(e, n, r) {
        this.socket = e,
        this.client = n,
        this.userId = r,
        this.ensureLoaded = async()=>{
            const s = _r.getMissingFlags(this.userId);
            if (!s) {
                _r.ensureLoaded(this.userId);
                return
            }
            F.info("Loading flags for user as at least one flag is missing", s);
            try {
                const {flags: i} = await Lce(this.client, _r.getReleaseChannelOverride(this.userId));
                for (const {userId: a, flags: o} of i)
                    _r.setFlags(a, o),
                    _r.ensureLoaded(a)
            } catch (i) {
                if (P1(i) && i.userError === !0 || F.error("Error loading flags", i),
                z3(i)) {
                    await C3().logoutCurrentUserAccount("Fetching flags failed", i);
                    return
                }
                this.errorLoadingUserFlags.add(this.userId)
            }
        }
        ,
        this.reportEvaluation = s=>{
            try {
                this.socket.send(s)
            } catch (i) {
                F.error("Error sending flag evaluated command", i, {
                    flag: s.flag
                })
            }
        }
        ,
        this.handleMessage = s=>{
            if (s.cmd === "featureFlags") {
                _r.setFlags(s.userId, s.flags),
                _r.ensureLoaded(this.userId),
                this.errorLoadingUserFlags.delete(s.userId);
                for (const i of this.featureFlagsPromises)
                    i.resolve()
            }
        }
        ,
        this.errorLoadingUserFlags = new Set,
        this.featureFlagsPromises = new Set,
        e.onMessage.subscribe(this.handleMessage),
        _r.registerReportEvaluationFnc(this.reportEvaluation)
    }
    stop() {
        this.socket.onMessage.unsubscribe(this.handleMessage),
        _r.unregisterReportEvaluationFnc(this.reportEvaluation)
    }
}
// #region SyncedStore
const sg = class sg { // class SyncedStore
    get socketStatus() {
        return this.socket.status
    }
    get onSocketConnect() {
        return this.socket.onConnect
    }
    get onSocketDisconnect() {
        return this.socket.onDisconnect
    }
    get onMessage() {
        return this.socket.onMessage
    }
    get onDatabaseVersionChange() {
        return this.syncClient.onDatabaseVersionChange
    }
    get onArchive() {
        return this.syncClient.onArchive
    }
    get onUnarchive() {
        return this.syncClient.onUnarchive
    }
    get onArchiveUpdate() {
        return this.syncClient.onArchiveUpdate
    }
    get onTransactionQueued() {
        return this.syncClient.onTransactionQueued
    }
    get onDatabaseUnavailable() {
        return this.syncClient.onDatabaseUnavailable
    }
    get onInvalidateRejectedHydrations() {
        return this.syncClient.onInvalidateRejectedHydrations
    }
    invalidateRejectedHydrations() {
        this.syncClient.invalidateRejectedHydrations()
    }
    constructor(e, n) {
        this.outstandingTransactionCount = 0,
        this.savingStoreCount = 0,
        this.syncProgress = 0,
        this.syncError = void 0,
        this.connectionError = void 0,
        this.setSyncProgress = Le(r=>{
            this.syncProgress = r
        }
        ),
        this.setSyncError = Le(r=>{
            this.syncError = r
        }
        ),
        this.setConnectionError = Le(r=>{
            this.connectionError = r
        }
        ),
        this.localTransactions = [],
        this.handleTransactionCountChange = Le(r=>{
            this.outstandingTransactionCount = r
        }
        ),
        this.handleSavingStoreCountChange = Le(r=>{
            this.savingStoreCount = r
        }
        ),
        this._developerOptions = ke.get("StoreDeveloperOptions"),
        this.graphQLClient = e,
        this.options = n,
        this.socket = new uf(Xt.isElectron ? Rc.desktop : Rc.web),
        this.delayedRelationManager = new Ace(this),
        this.syncClient = new Wd(this,this.graphQLClient,this.socket,this.options),
        this.undoQueue = new jce(this.onTransactionQueued),
        this.batchModelLoader = n.batchModelLoader,
        this.socket.onDisconnect.subscribe(async r=>{
            switch (r) {
            case xo.rebootstrapRequired:
                await this.resetLocalDatabase(),
                window.location.reload();
                break;
            case xo.unknownAbbreviation:
                F.error("Client sent an unknown abbreviation");
                break;
            case xo.notPartOfCollabDocument:
                F.error("Client sent a message to a collab document that they're not part of");
                break
            }
        }
        ),
        Ln(this, {
            syncProgress: ut,
            syncError: ut,
            connectionError: ut,
            outstandingTransactionCount: ut,
            savingStoreCount: ut,
            bootstrap: Le,
            disconnectFromBackend: Le,
            disconnectFromBackendWithBootstrapError: Le
        })
    }
    async mutate(e, n, r) {
        const s = r ? Object.keys(r).map(u=>`${u}: ${JSON.stringify(r[u])}`).join(", ") : void 0
          , i = Zl(e.modelName)
          , a = `mutation { ${n}${s ? `( ${s} )` : ""} { ${i} { id } lastSyncId }}`
          , o = await this.graphQLClient.mutate(a)
          , {id: l} = o[n][i]
          , d = o[n].lastSyncId;
        return await this.syncClient.waitUntilSyncId(d),
        this.findById(e, l)
    }
    findById(e, n, r) {
        return this.syncClient.findById(e, n, r)
    }
    async findArchivedById(e, n) {
        return this.syncClient.findArchivedById(e, n)
    }
    applyArchiveResponse(e) {
        return this.syncClient.applyArchiveResponse(e)
    }
    applyModelData(e) {
        return this.syncClient.applyModelData(e)
    }
    async findByIdAsync(e, n) {
        const r = this.syncClient.findById(e, n);
        return r || (await this.waitForSync(),
        this.syncClient.findById(e, n))
    }
    allModelsOfType(e, n=lr.noArchivedModels) {
        return this.syncClient.allModelsOfType(e, n)
    }
    countModelsOfType(e) {
        return this.syncClient.countModelsOfType(e)
    }
    localStoreReady(e) {
        return this.syncClient.localStoreReady(e)
    }
    hydrateModel(e, n, r) {
        return this.syncClient.hydrateModel(e, n, r)
    }
    hydrateModels(e, n, r) {
        return this.syncClient.hydrateModelsByIndexedKey(e, n, r)
    }
    hydrateLocalModelsByIds(e, n) {
        return this.syncClient.hydrateLocalModelsByIds(e, n)
    }
    async resetLocalDatabase() {
        return this.syncClient.resetLocalDatabase()
    }
    async deleteLocalDatabase() {
        return this.syncClient.deleteLocalDatabase()
    }
    async bootstrap({userId: e, userAccountId: n, organizationId: r}) {
        this.graphQLClient.setUser({
            userId: e,
            userAccountId: n,
            organizationId: r
        }),
        await vm.init(this.socket, this.graphQLClient, e);
        const s = {
            userId: e,
            userAccountId: n,
            organizationId: r,
            modelSchemaHash: Me.schemaHash // the schema hash would be used here to detect if there is a database migration
        };
        this.syncClient.onTransactionCountChange.subscribe(this.handleTransactionCountChange),
        // In this line StoreManager will be constructed.
        // So the ObjectStores are created before database initialization.
        this.syncClient.onSavingStoreCountChange.subscribe(this.handleSavingStoreCountChange);
        try {
            return await this.syncClient.initializeDatabase(s), // <- Create databases and tables.
            await this.syncClient.bootstrap(s) // <- Boostrap!
        } catch (i) {
            return {
                success: !1,
                type: Ra.local,
                error: i
            }
        }
    }
    disconnectFromBackend() {
        this.setSyncProgress(2),
        this.syncClient.disconnect()
    }
    disconnectFromBackendWithBootstrapError(e) {
        const n = hd(e);
        this.setSyncProgress(n ? 3 : 4),
        this.setSyncError(e),
        this.syncClient.disconnect()
    }
    async waitForSync() {
        return await this.syncClient.waitForSync()
    }
    save(e, n=!1, r) { // Determined what kind of transaction need to be dispatched in this funciton.
        // e for the model that changed
        return this.saveForLocalTransaction(e, r) 
            ? new Tc(e)  // If it should be a local transaction. It would return from here.
            : (e.shouldSetUpdatedAt && (e.updatedAt = new Date),
        this.syncClient.findById(at, e.id, {
            excludeTemporaryModels: !0
        }) ? (e.beforeSave(!1), // nullable false, beforeSave only works for "Document" at the moment
        this.syncClient.update(e, r)) // generete a UpdateTransaction object
        : (e.beforeSave(!0), // nullable true
        this.removeTemporarily(e),
        n ? (e.createdAt = new Date,
        e.prepareForAdd(),
        e.observePropertyChanges(),
        this.syncClient.add(e, r)) : new Tc(e))) // a AddTransaction or a LocalTransaction
    }
    addTemporarily(e) {
        return this.syncClient.temporarilyAdd(e)
    }
    removeTemporarily(e) {
        this.syncClient.temporarilyRemove(e)
    }
    archive(e, n) {
        return this.syncClient.archive(e, n)
    }
    unarchive(e, n) {
        return this.syncClient.unarchive(e, n)
    }
    delete(e, n) {
        return this.deleteForLocalTransaction(e) ? new Tc(e) : this.syncClient.delete(e, n)
    }
    trash(e) {
        return e.trashed = !0,
        this.deleteForLocalTransaction(e) ? new Tc(e) : e.isArchived ? e.save() : this.syncClient.delete(e)
    }
    sendEphemeralUpdate(e, n) {
        if (this.syncClient.findById(at, e.id))
            return this.syncClient.sendEphemeral(e, n)
    }
    registerLocalTransaction(e) {
        this.localTransactions.push(e)
    }
    localTransactionsForModel(e) {
        return this.localTransactions.filter(n=>n.hasModel(e))
    }
    unregisterLocalTransaction(e) {
        this.localTransactions = this.localTransactions.filter(n=>n !== e)
    }
    sendCommand(e, n) {
        this.socket.send(e, n)
    }
    sendStatefulCommand(e) {
        return this.socket.sendStateful(e)
    }
    set developerOptions(e) {
        e ? ke.set("StoreDeveloperOptions", e) : ke.remove("StoreDeveloperOptions"),
        this._developerOptions = e
    }
    get developerOptions() {
        return this._developerOptions
    }
    get hasDeveloperOptions() {
        return this._developerOptions ? Object.values(this._developerOptions).some(e=>!!e) : !1
    }
    getUserOrganization(e) {}
    async requireDeltaSyncAtStartup() {
        return !1
    }
    getLastSyncId() {
        return this.syncClient.getLastSyncId()
    }
    transactionsForModel(e) {
        return this.syncClient.transactionsForModel(e)
    }
    isModelTemporarilyPersisted(e) {
        return this.syncClient.isModelTemporarilyPersisted(e)
    }
    modelIsInTransaction(e) {
        return this.localTransactions.some(n=>n.hasModel(e))
    }
    deleteForLocalTransaction(e) {
        let n = !1;
        return this.localTransactions.forEach(r=>{
            (r.hasModel(e) || r.hasReferenceToModel(e)) && (r.deleteLocally(e),
            n = !0)
        }
        ),
        n
    }
    saveForLocalTransaction(e, n) {
        var s;
        if (this.modelIsInTransaction(e))
            return n && this.localTransactions.filter(a=>a.hasModel(e)).forEach(a=>a.modelSavedLocally(e, n)),
            !0;
        const r = this.localTransactions.filter(i=>i.hasReferenceToModel(e));
        return r.length ? ((s = r.pop()) == null || s.addReferenceModel(e, n),
        !0) : !1
    }
}
;
sg.constructorName = "SyncedStore";
let hf = sg;
// #endregion
var u1;
(function(t) {
    t[t.initial = 0] = "initial",
    t[t.syncing = 1] = "syncing",
    t[t.stopped = 2] = "stopped",
    t[t.ratelimited = 3] = "ratelimited",
    t[t.bootstrapError = 4] = "bootstrapError",
    t[t.noTeams = 5] = "noTeams"
}
)(u1 || (u1 = {}));
const i4e = {
    query: {
        rate: .2
    },
    mutation: {
        rate: .2
    },
    $pageview: {
        rate: .2
    }
};
var ff;
(function(t) {
    function e(r, s) {
        const i = zS(s, 0, 1)
          , o = (t.computeHash(r) % 100 + 1) / 100;
        return {
            shouldTrack: o <= i,
            samplingRate: i,
            bucket: o
        }
    }
    t.shouldUserBeTracked = e;
    function n(r) {
        let s = 5381
          , i = r.length;
        for (; i; )
            s = s * 33 ^ r.charCodeAt(--i);
        return s >>> 0
    }
    t.computeHash = n
}
)(ff || (ff = {}));
const jw = "trackedEvents"
  , Mw = "hasAliasedUser";
class Oce {
    constructor(e, n) {
        this.track = (r,s={},i={})=>{
            var l;
            if (this.store.user.isAnonymous || i.stopTrackingAt && i.stopTrackingAt <= new Date)
                return;
            if (this.updateSessionTrackedEvents(),
            i.trackOncePerSession) {
                if (this.sessionTrackedEvents.has(r))
                    return;
                lt(()=>this.sessionTrackedEvents.add(r))
            }
            let a;
            if (i.sampleRate && (a = ff.shouldUserBeTracked(this.store.user.id, i.sampleRate),
            !a.shouldTrack))
                return;
            s = {
                $useragent: navigator.userAgent,
                platform: Xt.isElectron ? "desktop" : "web",
                $browser_language: (l = navigator.languages) != null && l.length ? navigator.languages[0] : navigator.language,
                $screen_height: screen.height,
                $screen_width: screen.width,
                $set: {
                    ...i.setUserProperties
                },
                ...s,
                sampling: {
                    ...a
                }
            };
            const o = {
                cmd: "track",
                event: {
                    event: r,
                    properties: s
                }
            };
            this.store.user.settings.debugAnalytics && console.info("Analytics event: ", r, s),
            this.socket.send(o)
        }
        ,
        this.sessionTrackedEvents = lt(()=>new Set),
        this.anonymousIdKey = `ph_${ft.POSTHOG_WRITE_KEY}_posthog`,
        this.updateSessionTrackedEvents = Le(()=>{
            this.sessionTrackedEvents = new Set(ke.getSession(jw) ?? [])
        }
        ),
        this.store = e,
        this.socket = n,
        this.updateSessionTrackedEvents(),
        Tk(()=>{
            ke.setSession(jw, Array.from(this.sessionTrackedEvents));
            const r = this.getWebAnonymousId();
            if (r && !ke.get(Mw)) {
                const s = {
                    cmd: "alias",
                    anonymousId: r
                };
                this.socket.send(s),
                ke.set(Mw, !0)
            }
        }
        , {
            delay: 50
        }),
        L3(this)
    }
    getWebAnonymousId() {
        var e;
        return (e = ke.getSession(this.anonymousIdKey)) == null ? void 0 : e.distinct_id
    }
}
class Rce {
    static async request(e, n) {
        var i;
        const {name: r} = e;
        let s;
        if ((i = navigator.locks) != null && i.request) {
            const a = Date.now();
            let o = 0
              , l = !1;
            const d = ta()
              , u = navigator.locks.request(r, async()=>{
                l || (d.resolve("handled"),
                Jn.distribution("weblock.wait", Date.now() - a, {
                    lockName: r
                }),
                o = Date.now(),
                s = await n(),
                Jn.distribution("weblock.duration", Date.now() - o, {
                    lockName: r
                }))
            }
            )
              , h = e.timeout ? EE(e.timeout, "timeout") : void 0;
            await Promise.any([d, h].concrete()) === "timeout" ? (l = !0,
            Jn.increment("weblock.timeout", {
                lockName: r
            }),
            s = await n()) : await u
        } else
            s = await n();
        return s
    }
}
const Tw = t=>c.jsxs(Pce, {
    children: [c.jsx("div", {
        className: "line"
    }), c.jsx("div", {
        children: t.text || "Loading…"
    })]
})
  , Pce = ae.div`
  font-size: 13px;
  font-weight: 500;
  position: relative;
  text-align: center;
  width: 100vw;
`;
function $E(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class wm extends PE { // BatchModelLoader
    constructor(e) {
        super({
            batchInterval: 10,
            maxBatchedRequests: 500
        }),
        this.graphQLClient = e
    }
    addRequest(e) {
        return super.addRequest(e)
    }
    async loadModelById(e, n, r) {
        const s = new Zu(this.graphQLClient,r == null ? void 0 : r.includeDependent,2)
          , i = s.allProcessedResult();
        s.addRequest({
            modelName: e,
            identifier: n
        }).catch(()=>{}
        );
        const a = (await i).flatMap(o=>o).filter(o=>Me.getModelClass(o.__class));
        if (a.length)
            return this.handleLoadedModels(a, [])[0]
    }
    setSyncClient(e, n) {
        this.syncClient = e,
        this.database = n
    }
    async handleBatch(e) {
        // It divides requests into 3 categories:
        // 1. SyncGroupRequests (r). When 'syncGroup' is in the request object. -> loadPartialModels
        // 2. full requests (s). When there's no id, nor indexKey nor syncGroup are provided. -> loadFullModels
        // 3. Requests by id or indexedKey (n) -> loadSyncBatch
        const n = e.filter(l=>!this.isSyncGroupRequestEntry(l) && !this.isInFullRequestEntry(l))
          , r = this.filterSyncGroupRequestEntries(e)
          , s = this.filterInFullEntries(e)
          , i = await Promise.all([this.loadFullModels(s), this.loadPartialModels(r), this.loadSyncBatch(n)]);
        let a = [];
        const o = [];
        for (const l of i)
            a = a.concat(l.result),
            l.fullyPersisted && o.push(l.fullyPersisted);
        return {
            result: a,
            fullyPersisted: o.length ? Promise.all(o) : void 0
        }
    }
    serializeRequest(e) {
        var r, s;
        const n = Me.getClassName(e.modelClass);
        return "id"in e 
            ? (r = e.coveringPartialIndexValues) != null && r.length 
                ? [`${n}_${e.id}`, ...e.coveringPartialIndexValues.map(i=>`${n}_partial_${i}`)] 
                : `${n}_${Zn.createPartialIndexValue(e)}` 
            : "syncGroup"in e 
                ? `${n}_syncId_${Zn.createPartialIndexValue(e)}` 
                : "indexedKey"in e 
                    ? (s = e.coveringPartialIndexValues) != null && s.length 
                        ? [`${n}_partial_${Zn.createPartialIndexValue(e)}`, ...e.coveringPartialIndexValues.map(i=>`${n}_partial_${i}`)] 
                        : `${n}_partial_${Zn.createPartialIndexValue(e)}` 
                    : `${n}_all_${Zn.createPartialIndexValue(e)}`
    }
    async loadSyncBatch(e) { // Load sync batch
        if (e.length === 0)
            return {
                result: []
            };
        const n = await this.graphQLClient.restModelsJsonStream("/sync/batch", { // Send request to server. We cell this method in `fullBoostrap`.
            retry: {
                times: 2,
                delayMs: o=>(o + 1) * 250,
                retryOnRatelimit: !0,
                retryAllErrors: !0
            },
            method: "POST",
            body: JSON.stringify({
                firstSyncId: this.graphQLClient.getFirstSyncId(),
                requests: e.map(o=>({
                    ...o.request,
                    modelName: Me.getClassName(o.request.modelClass),
                    modelClass: void 0,
                    partialIndexValues: void 0
                }))
            })
        })
          , r = n.syncActions || []
          , s = mm.applyDeltaSyncOnModelObjectCollection(n.models, r.reverse()); // Apply actions on these models.
        let i = e.every(o=>o.request.skipCreatingModelsInMemory === !0)
          , a = e.every(o=>o.request.skipSavingModelsInDatabase === !0);
        return i && a && (i = !1, // When all requests skip creating models in memory and saving models in database, LSE will not skip them.
            // In method handleLoadedModels, we will learn we cannot skip both of them.
        a = !1),
        this.handleLoadedModels(s, e, { // Handle newly loaded models
            skipCreatingModelsInMemory: i,
            skipSavingModelsInDatabase: a
        })
    }
    async loadPartialModels(e) {
        // For syncGroup requests
        var l;
        if (e.length === 0)
            return {
                result: []
            };
        const n = {}; // Load models by syncGroup, for example
        // {
        //   "Issue": [
        //     "89388c30-9823-4b14-8140-4e0650fbb9eb"
        //   ],
        //   "Attachment": [
        //     "89388c30-9823-4b14-8140-4e0650fbb9eb"
        //   ]
        // }
        for (const d of e) {
            const u = Me.getClassName(d.request.modelClass);
            u && (await ((l = this.database) == null 
                ? void 0 
                : l.hasModelsForPartialIndexValues(u, [Zn.createPartialIndexValue(d.request)])) 
                    || (n[u] = (n[u] || []).concat(d.request.syncGroup)))
        }
        const r = []
        // [
        //   {
        //     "modelName": {}, // "Issue", "Attachment"
        //     "syncGroups": {} // "89388c30-9823-4b14-8140-4e0650fbb9eb"
        //   }
        // ]
          , s = {}; // Load tasks by syncGroup
        //   
        // {
        //   "89388c30-9823-4b14-8140-4e0650fbb9eb": {
        //     "modelName": {}, // "Issue", "Attachment"
        //     "syncGroups": {} // "89388c30-9823-4b14-8140-4e0650fbb9eb"
        //   }
        // }
        for (const [d,u] of Object.entries(n)) {
            const h = u.join(",");
            if (s[h])
                s[h].modelName.add(d);
            else {
                const f = {
                    modelName: new Set([d]),
                    syncGroups: new Set(u)
                };
                r.push(f),
                s[h] = f
            }
        }
        const i = await Promise.all(r.map(async d=>{
            var u;
            // Call database.loadPartialModels
            return (u = this.database) == null ? void 0 : u.loadPartialModels([...d.modelName], [...d.syncGroups]).catch(h=>{
                throw F.error("Partial load models query error", h, {
                    modelNames: [...d.modelName]
                }),
                h
            }
            )
        }
        ))
          , a = e.every(d=>d.request.skipCreatingModelsInMemory === !0)
          , o = i.concrete().reduce((d,u)=>d.concat(u), []);
        return this.handleLoadedModels(o, e, {
            skipCreatingModelsInMemory: a
        })
    }
    async loadFullModels(e) {
        var i, a;
        if (e.length === 0)
            return {
                result: []
            };
        const n = new Set; // Models that will be loaded eventually
        for (const o of e) {
            const l = Me.getClassName(o.request.modelClass);
            l && (await ((i = this.database) == null 
                ? void 0 
                // Maybe this model has been loaded by previous requests?
                // Basically this repeats what has been checked in `getModelDataByIndexedKey`.
                : i.hasModelsForPartialIndexValues(l, [Zn.createPartialIndexValue(o.request)])) || n.add(l)
            )
        }
        // Call `Database.loadPartialModels`.
        const r = await ((a = this.database) == null ? void 0 : a.loadPartialModels([...n]).catch(o=>{
            throw F.error("Partial load models query error", o, {
                modelNames: [...n]
            }),
            o
        }
        ))
        // It can skip creating models in memory only when every requests skip creating models in memory.
          , s = e.every(o=>o.request.skipCreatingModelsInMemory === !0);
        return this.handleLoadedModels(r ?? [], e, {
            skipCreatingModelsInMemory: s
        })
    }
    handleLoadedModels(e, n, r) { // e for loaded models, n for requests, r for options
        if (r != null && r.skipCreatingModelsInMemory && (r != null && r.skipSavingModelsInDatabase))
            throw new Error("Cannot skip creating models in memory and saving models in database at the same time");
        const s = this.database
          , i = this.syncClient;
        if (!i) {
            F.error("Sync client or database not correctly set on BatchModelLoader");
            for (const d of n)
                d.resolve(void 0);
            return {
                result: []
            }
        }
        F.network("Batch loaded models", {
            count: e.length
        });
        const a = ta();
        r != null && r.skipSavingModelsInDatabase || setTimeout(async()=>{
            // Save the models into database.
            try {
                if (s) {
                    const d = new Set;
                    for (const u of e)
                        d.add(u.__class);
                    // Write models into database.
                    await s.writeTransaction({
                        metaStore: !1,
                        syncActionStore: !1,
                        stores: [...d]
                    }, u=>{
                        for (const h of e) {
                            const {__class: f, ...p} = h;
                            u.add(f, p)
                        }
                    }
                    ),
                    // And set partial index value for that model.
                    await Promise.all(n.map(u=>{
                        const h = u.request;
                        return s.setPartialIndexValueForModel(Me.getClassName(h.modelClass), Zn.createPartialIndexValue(h))
                    }
                    ).concrete())
                }
                for (const d of n)
                    d.request.skipCreatingModelsInMemory && d.resolve(void 0);
                await Na(1e3),
                a.resolve() // Will resolve the promise when the response is fully persisted.
            } catch (d) {
                for (const u of n)
                    u.request.skipCreatingModelsInMemory && u.resolve(void 0);
                F.error("Error persisting batch loaded models", d, {
                    modelData: e,
                    entries: n
                }),
                a.reject(new Error("Error persisting batch loaded models"))
            }
        }
        , 1);
        let o = [];
        // Create models in memory.
        r != null && r.skipCreatingModelsInMemory || (o = i.createModelsFromData(e, {
            dontUpdateExistingModels: !0
        }));
        const l = {};
        for (const d of o)
            l[d.id] = d;
        for (const d of n)
            // When the newly create model are passed to resolve() here, they model
            // will be assgigned to `LazyReference`.
            d.request.skipCreatingModelsInMemory || ("id"in d.request ? d.resolve(l[d.request.id]) : d.resolve(void 0));
        return {
            result: o,
            fullyPersisted: a
        }
    }
    isSyncGroupRequestEntry(e) {
        // There is a syncGroup field in the request object.
        return "syncGroup"in e.request
    }
    filterSyncGroupRequestEntries(e) {
        return e.filter(n=>this.isSyncGroupRequestEntry(n))
    }
    isInFullRequestEntry(e) {
        // There is no id field in the request object, nor indexedKey nor syncGroup.
        return !("id"in e.request) && !("indexedKey"in e.request) && !("syncGroup"in e.request)
    }
    filterInFullEntries(e) {
        return e.filter(n=>this.isInFullRequestEntry(n))
    }
}
$E([xt.trace("network")], wm.prototype, "loadSyncBatch", null);
$E([xt.trace("network")], wm.prototype, "handleLoadedModels", null);
class $ce {
    static hydrate(e, n) {
        if (e.store.user.favorites.hydrateElements(),
        qe.isEnabled(qe.preHydrate)) {
            const r = O1(n, {
                path: o4.team
            });
            if (r != null && r.params.teamKey)
                for (const s of e.accessibleTeams)
                    s.key === r.params.teamKey && s.issues.hydrate()
        }
    }
}
async function Fce(t, e, n, r, s, i, a, o) {
    const l = Mt.gql`
    query ArchivedModelsSync(
      $modelClass: String!
      $teamId: String!
      $trashOption: TrashOptionType
      $last: Int
      $before: DateTime
      $beforeId: String
      $issueFilter: IssueFilter
    ) {
      archivedModelsSync(
        modelClass: $modelClass
        teamId: $teamId
        trashOption: $trashOption
        last: $last
        before: $before
        beforeId: $beforeId
        issueFilter: $issueFilter
      ) {
        archive
        databaseVersion
        includesDependencies
        totalCount
      }
    }
  `
      , d = {
        modelClass: Me.getClassName(e),
        teamId: n,
        trashOption: r,
        last: s,
        before: i,
        beforeId: a,
        issueFilter: o
    };
    return t.query(l, d)
}
const Nce = 4;
class Vce {
    constructor(e, n) {
        this.syncClient = e,
        this.options = n,
        this.startStreaming().catch(r=>{
            F.error("Error streaming issues for all teams", r)
        }
        )
    }
    async startStreaming() {
        var s;
        const e = he.store.user
          , n = e == null ? void 0 : e.organization;
        if (!n)
            return;
        await Na(((s = this.options) == null ? void 0 : s.delay) ?? 500);
        const r = gm(n.accessibleTeams.elements.sortBy(i=>i.userIsMember(e) ? 0 : 1), Nce);
        for (const i of r)
            await this.syncClient.loadPartialModels(re, i.map(a=>a.id), {
                skipAddingToMemory: !0
            })
    }
}
class Bce {
    constructor(e, n) {
        if (this.loadedData = {},
        this.stopped = !1,
        this.graphQLClient = e,
        !qe.isEnabled(qe.preloadPageData))
            return;
        const r = O1(n, {
            path: o4.issue
        });
        r && r.params.issueId && this.graphQLClient.onClientReady.subscribeOnce(()=>{
            const s = r.params.issueId;
            this.registerPreload(re, s, this.preloadIssue(s))
        }
        )
    }
    getLoadedData(e, n) {
        const r = this.loadedData[this.keyForModel(e, n)];
        return delete this.loadedData[this.keyForModel(e, n)],
        r
    }
    stop() {
        this.stopped = !0,
        this.loadedData = {}
    }
    async preloadIssue(e) {
        const n = new Zu(this.graphQLClient,!0,2)
          , r = n.allProcessedResult();
        return n.addRequest({
            modelName: "Issue",
            identifier: e
        }).catch(()=>{}
        ),
        (await r).flatMap(s=>s).filter(s=>Me.getModelClass(s.__class))
    }
    keyForModel(e, n) {
        return e.modelName + "_" + n
    }
    registerPreload(e, n, r) {
        this.stopped || (this.loadedData[this.keyForModel(e, n)] = Jt.create((s,i)=>{
            r.then(s, i)
        }
        ))
    }
}
function FE(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class km extends hf { // some class extends SyncedStore
    get user() {
        if (this.userId) {
            const n = this.findById(K, this.userId);
            if (n)
                return n
        }
        if (this.anonymousUser)
            return this.anonymousUser;
        const e = new K;
        return e.name = "Anonymous",
        e.displayName = "Anonymous",
        e.organization = new he,
        e.settings = new J,
        e.isAnonymous = !0,
        this.anonymousUser = e,
        e
    }
    constructor(e, n) {
        xt.createSpanFromStart("startup", "prelogin"),
        super(e, {
            requiredModels: [ne, zd, K, J, on, he],
            batchModelLoader: new wm(e)
        }),
        this.settings = new Nh,
        this.connectivity = new W1e,
        this.setOrganization = Le(r=>{
            this.organization = r
        }
        ),
        this.connectRetryCount = 0,
        Ln(this, {
            user: ms
        }),
        Object.defineProperty(this, "organization", {
            writable: !0,
            configurable: !0,
            value: void 0
        }),
        F.initialize(this.socket),
        this.applicationStore = n,
        this.pushNotification = new ou(this),
        this.pageDataPreloader = new Bce(this.graphQLClient,window.location.pathname),
        X0.onLoadingDone.subscribeOnce(()=>{
            this.pageDataPreloader.stop()
        }
        ),
        this.socket.onAuthenticationError.subscribe(()=>{
            hs || this.applicationStore.logoutCurrentUserAccount("Authentication error")
        }
        ),
        this.socket.onConnect.subscribe(()=>{
            this.setConnectionError(void 0)
        }
        ),
        this.socket.onDisconnect.subscribe(r=>{
            switch (r) {
            case xo.authenticationError:
                this.applicationStore.logoutCurrentUserAccount("Authentication error");
                break;
            case xo.ipAddrNotAllowed:
                this.setConnectionError(new et({
                    type: "ip addr restricted",
                    message: "Organization access limited to specific IP ranges",
                    userError: !0,
                    userPresentableMessage: "Workspace access is restricted and accessible only within your private network. Please contact your workspace admin for more information."
                }));
                break;
            case xo.tooManyConnections:
                this.setConnectionError(new et({
                    type: "ratelimited",
                    message: "Too many opened socket connections",
                    userError: !0,
                    userPresentableMessage: "Looks like you have too many instances of Linear app opened"
                }));
                break;
            case xo.invalidBinaryMessage:
                window.location.reload();
                break
            }
        }
        ),
        Ln(this, {
            organization: ut,
            startBootstrap: Le
        })
    }
    async findArchivedModels(e, n, r, s, i, a, o) {
        const l = await Fce(this.graphQLClient, e, n, r, s, i, a, o);
        return {
            models: this.applyArchiveResponse(l.archivedModelsSync).filter(u=>u instanceof e),
            totalCount: l.archivedModelsSync.totalCount
        }
    }
    async login({userId: e, userAccountId: n}) {
        this.userId = e,
        this.userAccountId = n,
        !Xt.isElectron && qs.visible === !1 && ke.getSession("StoreFirstLoginSuccess") === !0 && await Promise.any([EE(be.SECOND * 10), qs.waitUntilVisible()]),
        await xt.trace("startup", "Weblock.request", async()=>{
            const r = Date.now();
            await Rce.request({
                name: "initial-bootstrap",
                timeout: qs.visible ? 3 * be.SECOND : 5 * be.SECOND
            }, async()=>{
                await xt.trace("startup", "Weblock.request.called", async()=>{
                    Hi.addStartupSpanTag("weblock.wait", Date.now() - r),
                    await this.startBootstrap()
                }
                )
            }
            )
        }
        ),
        ke.setSession("StoreFirstLoginSuccess", !0)
    }
    async startBootstrap() { // bootstrap the application from here
        var e, n;
        this.setSyncProgress(u1.initial),
        this.setSyncError(void 0),
        Jn.setSocket(this.socket),
        this.syncClient.onBootstrap.subscribeOnce(r=>{
            if (r === Ra.partial) {
                self.document.body.classList.add("loadingText");
                const s = self.document.getElementById("loadingText");
                af(s).render(c.jsx(Tw, {
                    text: "Loading your workspace…"
                }))
            } else if (r === Ra.full) {
                self.document.body.classList.add("loadingText");
                const s = self.document.getElementById("loadingText");
                af(s).render(c.jsx(Tw, {
                    text: `Setting up ${hs ? "Linear Demo…" : "your workspace…"}`
                }))
            }
        }
        ),
        this.syncClient.onInitialModelsLoaded.subscribeOnce(()=>{
            const r = this.allModelsOfType(he);
            r.length === 1 && $ce.hydrate(r[0], window.location.pathname)
        }
        ),
        X0.onLoadingDone.subscribeOnce(async()=>{
            new Vce(this.syncClient,{
                delay: 2e3
            })
        }
        );
        try {
            if (!this.userId || !this.userAccountId || !this.applicationStore.currentOrganization)
                throw Error("Trying to bootstrap anonymously");
            this.applicationStore.currentUser && F.setUser(this.applicationStore.currentUser);
            const r = await this.bootstrap({
                userId: this.userId,
                userAccountId: this.userAccountId,
                organizationId: this.applicationStore.currentOrganization.id
            });
            if (!r.success) {
                if (r.error && z3(r.error, {
                    logoutOnForbidden: !1
                }))
                    await this.applicationStore.logoutCurrentUserAccount("Connect to backend failed", r.error);
                else if (r.error && nO(r.error))
                    this.applicationStore.unsetUser();
                else if (r.error && hd(r.error)) {
                    const i = mn.getValue(mn.bootstrapRateLimitedRetryCount, 3);
                    if (this.connectRetryCount < i)
                        return this.connectRetryCount++,
                        await Na(Math.max(((n = (e = r.error.metaData) == null ? void 0 : e.rateLimitResult) == null ? void 0 : n.duration) || 3 * be.SECOND, 10 * be.SECOND)),
                        this.startBootstrap();
                    this.setSyncProgress(u1.ratelimited),
                    this.setSyncError(r.error)
                } else
                    this.setSyncProgress(u1.bootstrapError),
                    this.setSyncError(r.error);
                this.connectRetryCount = 0;
                return
            }
            if (this.user.isAnonymous)
                throw new et({
                    type: "bootstrap error",
                    message: "error loading user",
                    userError: !1,
                    userPresentableMessage: "Unable to load the workspace user."
                });
            F.setUser(this.user);
            const s = this.allModelsOfType(he);
            if (s.length === 1)
                this.setOrganization(s[0]),
                this.analytics = new Oce(this,this.socket),
                this.pushNotification.setUser(this.user),
                this.setSyncProgress(u1.syncing);
            else
                throw new et({
                    type: "bootstrap error",
                    message: "error loading organization",
                    userError: !1,
                    userPresentableMessage: "Unable to load the workspace model."
                });
            if (s.length === 1 && s[0].accessibleTeams.length === 0)
                this.setSyncProgress(u1.noTeams);
            else if (r.type !== Ra.full && !this.dataIsValid())
                throw new et({
                    type: "bootstrap error",
                    message: "invalid local data",
                    userError: !1,
                    userPresentableMessage: "Received invalid data when loading the workspace from the local disk."
                });
            this.connectRetryCount = 0
        } catch (r) {
            F.error("Error bootstrapping", r),
            this.setSyncError(r),
            this.setSyncProgress(u1.bootstrapError)
        }
    }
    findIssueByIdentifier(e, n={}) {
        const r = e.split("-");
        if (r.length !== 2 || !Number(r[1]))
            return;
        const s = this.organization.findTeamByKey(e);
        if (!s)
            return;
        const i = Number(r[1]);
        let a = this.allModelsOfType(re, lr.allModels).find(o=>o.number === i && o.team === s);
        return !a && n.includePreviousIdentifiers && (a = this.allModelsOfType(re, lr.allModels).find(o=>o.previousIdentifiers.includes(e))),
        a == null || a.observePropertyChanges(),
        a
    }
    getUserOrganization(e) {
        const n = this.findById(K, e);
        return n == null ? void 0 : n.organization
    }
    async requireDeltaSyncAtStartup() {
        if (!this.userId)
            return !0;
        const e = this.findById(K, this.userId);
        return !e || e.isSuspended === !0 || e.showOnboarding(this.applicationStore.allUserAccounts.length) === !0
    }
    dataIsValid() {
        for (const e of this.options.requiredModels || [])
            if (this.countModelsOfType(e) === 0)
                return !1;
        if (this.countModelsOfType(he) !== 1) {
            const e = this.allModelsOfType(he);
            return F.error("User has multiple stored organizations", void 0, {
                organizationIds: e.map(n=>n.id)
            }),
            !1
        }
        return !0
    }
}
FE([xt.trace("startup")], km.prototype, "login", null);
FE([xt.trace("startup")], km.prototype, "startBootstrap", null);
var NE = {
    exports: {}
};
(function(t) {
    function e(n) {
        return n && n.__esModule ? n : {
            default: n
        }
    }
    t.exports = e,
    t.exports.__esModule = !0,
    t.exports.default = t.exports
}
)(NE);
var Uce = NE.exports, b7 = {
    exports: {}
}, v7 = {
    exports: {}
}, Lw;
function Vh() {
    return Lw || (Lw = 1,
    function(t) {
        function e(n) {
            "@babel/helpers - typeof";
            return t.exports = e = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(r) {
                return typeof r
            }
            : function(r) {
                return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports,
            e(n)
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(v7)),
    v7.exports
}
var Ow;
function Hce() {
    return Ow || (Ow = 1,
    function(t) {
        var e = Vh().default;
        function n() {
            t.exports = n = function() {
                return r
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports;
            var r = {}
              , s = Object.prototype
              , i = s.hasOwnProperty
              , a = Object.defineProperty || function(P, A, E) {
                P[A] = E.value
            }
              , o = typeof Symbol == "function" ? Symbol : {}
              , l = o.iterator || "@@iterator"
              , d = o.asyncIterator || "@@asyncIterator"
              , u = o.toStringTag || "@@toStringTag";
            function h(P, A, E) {
                return Object.defineProperty(P, A, {
                    value: E,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                P[A]
            }
            try {
                h({}, "")
            } catch {
                h = function(E, V, X) {
                    return E[V] = X
                }
            }
            function f(P, A, E, V) {
                var X = A && A.prototype instanceof g ? A : g
                  , L = Object.create(X.prototype)
                  , q = new _e(V || []);
                return a(L, "_invoke", {
                    value: z(P, E, q)
                }),
                L
            }
            function p(P, A, E) {
                try {
                    return {
                        type: "normal",
                        arg: P.call(A, E)
                    }
                } catch (V) {
                    return {
                        type: "throw",
                        arg: V
                    }
                }
            }
            r.wrap = f;
            var m = {};
            function g() {}
            function C() {}
            function b() {}
            var k = {};
            h(k, l, function() {
                return this
            });
            var S = Object.getPrototypeOf
              , D = S && S(S(I([])));
            D && D !== s && i.call(D, l) && (k = D);
            var R = b.prototype = g.prototype = Object.create(k);
            function T(P) {
                ["next", "throw", "return"].forEach(function(A) {
                    h(P, A, function(E) {
                        return this._invoke(A, E)
                    })
                })
            }
            function B(P, A) {
                function E(X, L, q, oe) {
                    var we = p(P[X], P, L);
                    if (we.type !== "throw") {
                        var _ = we.arg
                          , M = _.value;
                        return M && e(M) == "object" && i.call(M, "__await") ? A.resolve(M.__await).then(function(Z) {
                            E("next", Z, q, oe)
                        }, function(Z) {
                            E("throw", Z, q, oe)
                        }) : A.resolve(M).then(function(Z) {
                            _.value = Z,
                            q(_)
                        }, function(Z) {
                            return E("throw", Z, q, oe)
                        })
                    }
                    oe(we.arg)
                }
                var V;
                a(this, "_invoke", {
                    value: function(L, q) {
                        function oe() {
                            return new A(function(we, _) {
                                E(L, q, we, _)
                            }
                            )
                        }
                        return V = V ? V.then(oe, oe) : oe()
                    }
                })
            }
            function z(P, A, E) {
                var V = "suspendedStart";
                return function(X, L) {
                    if (V === "executing")
                        throw new Error("Generator is already running");
                    if (V === "completed") {
                        if (X === "throw")
                            throw L;
                        return Q()
                    }
                    for (E.method = X,
                    E.arg = L; ; ) {
                        var q = E.delegate;
                        if (q) {
                            var oe = W(q, E);
                            if (oe) {
                                if (oe === m)
                                    continue;
                                return oe
                            }
                        }
                        if (E.method === "next")
                            E.sent = E._sent = E.arg;
                        else if (E.method === "throw") {
                            if (V === "suspendedStart")
                                throw V = "completed",
                                E.arg;
                            E.dispatchException(E.arg)
                        } else
                            E.method === "return" && E.abrupt("return", E.arg);
                        V = "executing";
                        var we = p(P, A, E);
                        if (we.type === "normal") {
                            if (V = E.done ? "completed" : "suspendedYield",
                            we.arg === m)
                                continue;
                            return {
                                value: we.arg,
                                done: E.done
                            }
                        }
                        we.type === "throw" && (V = "completed",
                        E.method = "throw",
                        E.arg = we.arg)
                    }
                }
            }
            function W(P, A) {
                var E = A.method
                  , V = P.iterator[E];
                if (V === void 0)
                    return A.delegate = null,
                    E === "throw" && P.iterator.return && (A.method = "return",
                    A.arg = void 0,
                    W(P, A),
                    A.method === "throw") || E !== "return" && (A.method = "throw",
                    A.arg = new TypeError("The iterator does not provide a '" + E + "' method")),
                    m;
                var X = p(V, P.iterator, A.arg);
                if (X.type === "throw")
                    return A.method = "throw",
                    A.arg = X.arg,
                    A.delegate = null,
                    m;
                var L = X.arg;
                return L ? L.done ? (A[P.resultName] = L.value,
                A.next = P.nextLoc,
                A.method !== "return" && (A.method = "next",
                A.arg = void 0),
                A.delegate = null,
                m) : L : (A.method = "throw",
                A.arg = new TypeError("iterator result is not an object"),
                A.delegate = null,
                m)
            }
            function fe(P) {
                var A = {
                    tryLoc: P[0]
                };
                1 in P && (A.catchLoc = P[1]),
                2 in P && (A.finallyLoc = P[2],
                A.afterLoc = P[3]),
                this.tryEntries.push(A)
            }
            function me(P) {
                var A = P.completion || {};
                A.type = "normal",
                delete A.arg,
                P.completion = A
            }
            function _e(P) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                P.forEach(fe, this),
                this.reset(!0)
            }
            function I(P) {
                if (P) {
                    var A = P[l];
                    if (A)
                        return A.call(P);
                    if (typeof P.next == "function")
                        return P;
                    if (!isNaN(P.length)) {
                        var E = -1
                          , V = function X() {
                            for (; ++E < P.length; )
                                if (i.call(P, E))
                                    return X.value = P[E],
                                    X.done = !1,
                                    X;
                            return X.value = void 0,
                            X.done = !0,
                            X
                        };
                        return V.next = V
                    }
                }
                return {
                    next: Q
                }
            }
            function Q() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return C.prototype = b,
            a(R, "constructor", {
                value: b,
                configurable: !0
            }),
            a(b, "constructor", {
                value: C,
                configurable: !0
            }),
            C.displayName = h(b, u, "GeneratorFunction"),
            r.isGeneratorFunction = function(P) {
                var A = typeof P == "function" && P.constructor;
                return !!A && (A === C || (A.displayName || A.name) === "GeneratorFunction")
            }
            ,
            r.mark = function(P) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(P, b) : (P.__proto__ = b,
                h(P, u, "GeneratorFunction")),
                P.prototype = Object.create(R),
                P
            }
            ,
            r.awrap = function(P) {
                return {
                    __await: P
                }
            }
            ,
            T(B.prototype),
            h(B.prototype, d, function() {
                return this
            }),
            r.AsyncIterator = B,
            r.async = function(P, A, E, V, X) {
                X === void 0 && (X = Promise);
                var L = new B(f(P, A, E, V),X);
                return r.isGeneratorFunction(A) ? L : L.next().then(function(q) {
                    return q.done ? q.value : L.next()
                })
            }
            ,
            T(R),
            h(R, u, "Generator"),
            h(R, l, function() {
                return this
            }),
            h(R, "toString", function() {
                return "[object Generator]"
            }),
            r.keys = function(P) {
                var A = Object(P)
                  , E = [];
                for (var V in A)
                    E.push(V);
                return E.reverse(),
                function X() {
                    for (; E.length; ) {
                        var L = E.pop();
                        if (L in A)
                            return X.value = L,
                            X.done = !1,
                            X
                    }
                    return X.done = !0,
                    X
                }
            }
            ,
            r.values = I,
            _e.prototype = {
                constructor: _e,
                reset: function(A) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = void 0,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = void 0,
                    this.tryEntries.forEach(me),
                    !A)
                        for (var E in this)
                            E.charAt(0) === "t" && i.call(this, E) && !isNaN(+E.slice(1)) && (this[E] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var A = this.tryEntries[0].completion;
                    if (A.type === "throw")
                        throw A.arg;
                    return this.rval
                },
                dispatchException: function(A) {
                    if (this.done)
                        throw A;
                    var E = this;
                    function V(_, M) {
                        return q.type = "throw",
                        q.arg = A,
                        E.next = _,
                        M && (E.method = "next",
                        E.arg = void 0),
                        !!M
                    }
                    for (var X = this.tryEntries.length - 1; X >= 0; --X) {
                        var L = this.tryEntries[X]
                          , q = L.completion;
                        if (L.tryLoc === "root")
                            return V("end");
                        if (L.tryLoc <= this.prev) {
                            var oe = i.call(L, "catchLoc")
                              , we = i.call(L, "finallyLoc");
                            if (oe && we) {
                                if (this.prev < L.catchLoc)
                                    return V(L.catchLoc, !0);
                                if (this.prev < L.finallyLoc)
                                    return V(L.finallyLoc)
                            } else if (oe) {
                                if (this.prev < L.catchLoc)
                                    return V(L.catchLoc, !0)
                            } else {
                                if (!we)
                                    throw new Error("try statement without catch or finally");
                                if (this.prev < L.finallyLoc)
                                    return V(L.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(A, E) {
                    for (var V = this.tryEntries.length - 1; V >= 0; --V) {
                        var X = this.tryEntries[V];
                        if (X.tryLoc <= this.prev && i.call(X, "finallyLoc") && this.prev < X.finallyLoc) {
                            var L = X;
                            break
                        }
                    }
                    L && (A === "break" || A === "continue") && L.tryLoc <= E && E <= L.finallyLoc && (L = null);
                    var q = L ? L.completion : {};
                    return q.type = A,
                    q.arg = E,
                    L ? (this.method = "next",
                    this.next = L.finallyLoc,
                    m) : this.complete(q)
                },
                complete: function(A, E) {
                    if (A.type === "throw")
                        throw A.arg;
                    return A.type === "break" || A.type === "continue" ? this.next = A.arg : A.type === "return" ? (this.rval = this.arg = A.arg,
                    this.method = "return",
                    this.next = "end") : A.type === "normal" && E && (this.next = E),
                    m
                },
                finish: function(A) {
                    for (var E = this.tryEntries.length - 1; E >= 0; --E) {
                        var V = this.tryEntries[E];
                        if (V.finallyLoc === A)
                            return this.complete(V.completion, V.afterLoc),
                            me(V),
                            m
                    }
                },
                catch: function(A) {
                    for (var E = this.tryEntries.length - 1; E >= 0; --E) {
                        var V = this.tryEntries[E];
                        if (V.tryLoc === A) {
                            var X = V.completion;
                            if (X.type === "throw") {
                                var L = X.arg;
                                me(V)
                            }
                            return L
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(A, E, V) {
                    return this.delegate = {
                        iterator: I(A),
                        resultName: E,
                        nextLoc: V
                    },
                    this.method === "next" && (this.arg = void 0),
                    m
                }
            },
            r
        }
        t.exports = n,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(b7)),
    b7.exports
}
var w7, Rw;
function zce() {
    if (Rw)
        return w7;
    Rw = 1;
    var t = Hce()();
    w7 = t;
    try {
        regeneratorRuntime = t
    } catch {
        typeof globalThis == "object" ? globalThis.regeneratorRuntime = t : Function("r", "regeneratorRuntime = r")(t)
    }
    return w7
}
var k7 = {
    exports: {}
}, Pw;
function Zce() {
    return Pw || (Pw = 1,
    function(t) {
        function e(r, s, i, a, o, l, d) {
            try {
                var u = r[l](d)
                  , h = u.value
            } catch (f) {
                i(f);
                return
            }
            u.done ? s(h) : Promise.resolve(h).then(a, o)
        }
        function n(r) {
            return function() {
                var s = this
                  , i = arguments;
                return new Promise(function(a, o) {
                    var l = r.apply(s, i);
                    function d(h) {
                        e(l, a, o, d, u, "next", h)
                    }
                    function u(h) {
                        e(l, a, o, d, u, "throw", h)
                    }
                    d(void 0)
                }
                )
            }
        }
        t.exports = n,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(k7)),
    k7.exports
}
var x7 = {
    exports: {}
}, D7 = {
    exports: {}
}, S7 = {
    exports: {}
}, $w;
function VE() {
    return $w || ($w = 1,
    function(t) {
        function e(n, r) {
            (r == null || r > n.length) && (r = n.length);
            for (var s = 0, i = new Array(r); s < r; s++)
                i[s] = n[s];
            return i
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(S7)),
    S7.exports
}
var Fw;
function qce() {
    return Fw || (Fw = 1,
    function(t) {
        var e = VE();
        function n(r) {
            if (Array.isArray(r))
                return e(r)
        }
        t.exports = n,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(D7)),
    D7.exports
}
var _7 = {
    exports: {}
}, Nw;
function Wce() {
    return Nw || (Nw = 1,
    function(t) {
        function e(n) {
            if (typeof Symbol < "u" && n[Symbol.iterator] != null || n["@@iterator"] != null)
                return Array.from(n)
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(_7)),
    _7.exports
}
var I7 = {
    exports: {}
}, Vw;
function Gce() {
    return Vw || (Vw = 1,
    function(t) {
        var e = VE();
        function n(r, s) {
            if (r) {
                if (typeof r == "string")
                    return e(r, s);
                var i = Object.prototype.toString.call(r).slice(8, -1);
                if (i === "Object" && r.constructor && (i = r.constructor.name),
                i === "Map" || i === "Set")
                    return Array.from(r);
                if (i === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))
                    return e(r, s)
            }
        }
        t.exports = n,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(I7)),
    I7.exports
}
var E7 = {
    exports: {}
}, Bw;
function Kce() {
    return Bw || (Bw = 1,
    function(t) {
        function e() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(E7)),
    E7.exports
}
var Uw;
function Yce() {
    return Uw || (Uw = 1,
    function(t) {
        var e = qce()
          , n = Wce()
          , r = Gce()
          , s = Kce();
        function i(a) {
            return e(a) || n(a) || r(a) || s()
        }
        t.exports = i,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(x7)),
    x7.exports
}
var A7 = {
    exports: {}
}, j7 = {
    exports: {}
}, M7 = {
    exports: {}
}, Hw;
function Qce() {
    return Hw || (Hw = 1,
    function(t) {
        var e = Vh().default;
        function n(r, s) {
            if (e(r) !== "object" || r === null)
                return r;
            var i = r[Symbol.toPrimitive];
            if (i !== void 0) {
                var a = i.call(r, s || "default");
                if (e(a) !== "object")
                    return a;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return (s === "string" ? String : Number)(r)
        }
        t.exports = n,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(M7)),
    M7.exports
}
var zw;
function BE() {
    return zw || (zw = 1,
    function(t) {
        var e = Vh().default
          , n = Qce();
        function r(s) {
            var i = n(s, "string");
            return e(i) === "symbol" ? i : String(i)
        }
        t.exports = r,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(j7)),
    j7.exports
}
var Zw;
function Xce() {
    return Zw || (Zw = 1,
    function(t) {
        var e = BE();
        function n(s, i) {
            for (var a = 0; a < i.length; a++) {
                var o = i[a];
                o.enumerable = o.enumerable || !1,
                o.configurable = !0,
                "value"in o && (o.writable = !0),
                Object.defineProperty(s, e(o.key), o)
            }
        }
        function r(s, i, a) {
            return i && n(s.prototype, i),
            a && n(s, a),
            Object.defineProperty(s, "prototype", {
                writable: !1
            }),
            s
        }
        t.exports = r,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(A7)),
    A7.exports
}
var T7 = {
    exports: {}
}, qw;
function Jce() {
    return qw || (qw = 1,
    function(t) {
        var e = BE();
        function n(r, s, i) {
            return s = e(s),
            s in r ? Object.defineProperty(r, s, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : r[s] = i,
            r
        }
        t.exports = n,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(T7)),
    T7.exports
}
var L7 = {
    exports: {}
}, Ww;
function ele() {
    return Ww || (Ww = 1,
    function(t) {
        function e(n, r) {
            if (!(n instanceof r))
                throw new TypeError("Cannot call a class as a function")
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(L7)),
    L7.exports
}
var O7 = {
    exports: {}
}, R7 = {
    exports: {}
}, Gw;
function xm() {
    return Gw || (Gw = 1,
    function(t) {
        function e(n, r) {
            return t.exports = e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, a) {
                return i.__proto__ = a,
                i
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports,
            e(n, r)
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(R7)),
    R7.exports
}
var Kw;
function tle() {
    return Kw || (Kw = 1,
    function(t) {
        var e = xm();
        function n(r, s) {
            if (typeof s != "function" && s !== null)
                throw new TypeError("Super expression must either be null or a function");
            r.prototype = Object.create(s && s.prototype, {
                constructor: {
                    value: r,
                    writable: !0,
                    configurable: !0
                }
            }),
            Object.defineProperty(r, "prototype", {
                writable: !1
            }),
            s && e(r, s)
        }
        t.exports = n,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(O7)),
    O7.exports
}
var P7 = {
    exports: {}
}, $7 = {
    exports: {}
}, Yw;
function nle() {
    return Yw || (Yw = 1,
    function(t) {
        function e(n) {
            if (n === void 0)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return n
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }($7)),
    $7.exports
}
var Qw;
function rle() {
    return Qw || (Qw = 1,
    function(t) {
        var e = Vh().default
          , n = nle();
        function r(s, i) {
            if (i && (e(i) === "object" || typeof i == "function"))
                return i;
            if (i !== void 0)
                throw new TypeError("Derived constructors may only return object or undefined");
            return n(s)
        }
        t.exports = r,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(P7)),
    P7.exports
}
var F7 = {
    exports: {}
}, Xw;
function UE() {
    return Xw || (Xw = 1,
    function(t) {
        function e(n) {
            return t.exports = e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(s) {
                return s.__proto__ || Object.getPrototypeOf(s)
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports,
            e(n)
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(F7)),
    F7.exports
}
var N7 = {
    exports: {}
}, V7 = {
    exports: {}
}, Jw;
function sle() {
    return Jw || (Jw = 1,
    function(t) {
        function e(n) {
            return Function.toString.call(n).indexOf("[native code]") !== -1
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(V7)),
    V7.exports
}
var B7 = {
    exports: {}
}, U7 = {
    exports: {}
}, ek;
function ile() {
    return ek || (ek = 1,
    function(t) {
        function e() {
            if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                return !1;
            if (typeof Proxy == "function")
                return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})),
                !0
            } catch {
                return !1
            }
        }
        t.exports = e,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(U7)),
    U7.exports
}
var tk;
function ale() {
    return tk || (tk = 1,
    function(t) {
        var e = xm()
          , n = ile();
        function r(s, i, a) {
            return n() ? (t.exports = r = Reflect.construct.bind(),
            t.exports.__esModule = !0,
            t.exports.default = t.exports) : (t.exports = r = function(l, d, u) {
                var h = [null];
                h.push.apply(h, d);
                var f = Function.bind.apply(l, h)
                  , p = new f;
                return u && e(p, u.prototype),
                p
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports),
            r.apply(null, arguments)
        }
        t.exports = r,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(B7)),
    B7.exports
}
var nk;
function ole() {
    return nk || (nk = 1,
    function(t) {
        var e = UE()
          , n = xm()
          , r = sle()
          , s = ale();
        function i(a) {
            var o = typeof Map == "function" ? new Map : void 0;
            return t.exports = i = function(d) {
                if (d === null || !r(d))
                    return d;
                if (typeof d != "function")
                    throw new TypeError("Super expression must either be null or a function");
                if (typeof o < "u") {
                    if (o.has(d))
                        return o.get(d);
                    o.set(d, u)
                }
                function u() {
                    return s(d, arguments, e(this).constructor)
                }
                return u.prototype = Object.create(d.prototype, {
                    constructor: {
                        value: u,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                n(u, d)
            }
            ,
            t.exports.__esModule = !0,
            t.exports.default = t.exports,
            i(a)
        }
        t.exports = i,
        t.exports.__esModule = !0,
        t.exports.default = t.exports
    }(N7)),
    N7.exports
}
var Ya = Uce
  , h2 = Ya(zce())
  , rk = Ya(Zce())
  , cle = Ya(Yce())
  , lle = Ya(Xce())
  , dle = Ya(Jce())
  , HE = Ya(ele())
  , ule = Ya(tle())
  , hle = Ya(rle())
  , sk = Ya(UE())
  , fle = Ya(ole());
function ple(t) {
    var e = mle();
    return function() {
        var r = (0,
        sk.default)(t), s;
        if (e) {
            var i = (0,
            sk.default)(this).constructor;
            s = Reflect.construct(r, arguments, i)
        } else
            s = r.apply(this, arguments);
        return (0,
        hle.default)(this, s)
    }
}
function mle() {
    if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
    if (typeof Proxy == "function")
        return !0;
    try {
        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})),
        !0
    } catch {
        return !1
    }
}
var Dm = function(t) {
    (0,
    ule.default)(n, t);
    var e = ple(n);
    function n() {
        var r;
        return (0,
        HE.default)(this, n),
        r = e.call(this, "throttled invocation was canceled"),
        r.name = "CanceledError",
        r
    }
    return n
}((0,
fle.default)(Error))
  , gle = function() {
    function t(e, n) {
        var r = this;
        (0,
        HE.default)(this, t),
        (0,
        dle.default)(this, "canceled", !1);
        var s = new Promise(function(i) {
            r.timeout = setTimeout(i, n),
            r.resolve = i
        }
        );
        this.ready = e.then(function() {
            return s
        }, function() {
            return s
        }).then(function() {
            r.ready = null
        })
    }
    return (0,
    lle.default)(t, [{
        key: "flush",
        value: function() {
            clearTimeout(this.timeout),
            this.resolve()
        }
    }, {
        key: "cancel",
        value: function() {
            this.canceled = !0,
            clearTimeout(this.timeout),
            this.resolve()
        }
    }, {
        key: "then",
        value: function(n) {
            var r = this;
            return (this.ready || Promise.resolve()).then(function() {
                if (r.canceled)
                    throw new Dm;
                return n()
            })
        }
    }]),
    t
}();
function zE(t, e) {
    var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r = e != null && Number.isFinite(e) ? Math.max(e, 0) : 0, s = n.getNextArgs || function(p, m) {
        return m
    }
    , i, a = null, o = null, l = null;
    function d() {
        var p = i;
        if (!p)
            return Promise.reject(new Error("unexpected error: nextArgs is null"));
        l = null,
        i = null;
        var m = Promise.resolve(t.apply(void 0, (0,
        cle.default)(p)));
        return a = m.catch(function() {}).then(function() {
            a = null
        }),
        o = new gle(a,r),
        m
    }
    function u(p) {
        if (i = i ? s(i, p) : p,
        !i)
            throw new Error("unexpected error: nextArgs is null")
    }
    function h() {
        return l = (o || Promise.resolve()).then(d)
    }
    function f() {
        try {
            for (var p = arguments.length, m = new Array(p), g = 0; g < p; g++)
                m[g] = arguments[g];
            u(m)
        } catch (C) {
            return Promise.reject(C)
        }
        return l || h()
    }
    return f.invokeIgnoreResult = function() {
        for (var p = arguments.length, m = new Array(p), g = 0; g < p; g++)
            m[g] = arguments[g];
        u(m),
        l || h().catch(function(C) {
            if (!(C instanceof Dm))
                throw C
        })
    }
    ,
    f.cancel = (0,
    rk.default)(h2.default.mark(function p() {
        var m, g, C;
        return h2.default.wrap(function(k) {
            for (; ; )
                switch (k.prev = k.next) {
                case 0:
                    return C = a,
                    (m = o) === null || m === void 0 || (g = m.cancel) === null || g === void 0 || g.call(m),
                    l = null,
                    i = null,
                    a = null,
                    o = null,
                    k.next = 8,
                    C;
                case 8:
                case "end":
                    return k.stop()
                }
        }, p)
    })),
    f.flush = (0,
    rk.default)(h2.default.mark(function p() {
        var m, g;
        return h2.default.wrap(function(b) {
            for (; ; )
                switch (b.prev = b.next) {
                case 0:
                    return (m = o) === null || m === void 0 || (g = m.flush) === null || g === void 0 || g.call(m),
                    b.next = 3,
                    a;
                case 3:
                case "end":
                    return b.stop()
                }
        }, p)
    })),
    f
}
zE.CanceledError = Dm;
var yle = zE;
const Cle = Cn(yle);
async function ZE(t, e) {
    const n = {
        urlKey: e
    };
    return t.query(Mt.gql`
      query OrganizationExists($urlKey: String!) {
        organizationExists(urlKey: $urlKey) {
          success
          exists
        }
      }
    `, n)
}
const a4e = Cle((t,e)=>ZE(t, e), 500);
async function ble(t, e, n) {
    const r = Mt.gql`
    mutation LeaveOrganization($organizationId: String!) {
      leaveOrganization(organizationId: $organizationId) {
        user {
          ${Fh}
        }
      }
    }`
      , s = {
        organizationId: e
    };
    return t.mutate(r, s, {
        region: n
    })
}
async function vle(t, e) {
    const n = Mt.gql`
  mutation SamlTokenUserAccountAuth($email: String!, $token: String!, $timezone: String!) {
    samlTokenUserAccountAuth(input: { email: $email, token: $token, timezone: $timezone }) {
      ${I5}
    }
  }`;
    return t.mutate(n, e, {
        asAnonymous: !0
    })
}
async function wle(t, e, n={
    dontLog: !0
}) {
    const r = await t.query(Mt.gql`
      query OrganizationInviteDetails($id: String!) {
        organizationInviteDetails(id: $id) {
          ... on OrganizationInviteFullDetailsPayload {
            status
            inviter
            email
            role
            createdAt
            organizationName
            organizationId
            organizationLogoUrl
            accepted
            expired
            allowedAuthServices
          }
          ... on OrganizationAcceptedOrExpiredInviteDetailsPayload {
            status
          }
        }
      }
    `, {
        id: e
    }, n);
    return {
        organizationInviteDetails: "createdAt"in r.organizationInviteDetails ? {
            ...r.organizationInviteDetails,
            createdAt: new Date(r.organizationInviteDetails.createdAt)
        } : r.organizationInviteDetails
    }
}
async function kle(t) {
    const e = Mt.gql`
    mutation logout {
      logout {
        success
      }
    }
  `;
    return t.mutate(e)
}
async function xle(t, e) {
    const n = Mt.gql`
    mutation userAccountEmailChangeVerifyCode($email: String!, $code: String!) {
      userAccountEmailChangeVerifyCode(email: $email, code: $code) {
        success
        failureReason
      }
    }
  `;
    return t.mutate(n, e)
}
const hc = "ApplicationStore"
  , Dle = "isLinearSuperuser"
  , H7 = "redirectTo"
  , z7 = "AuthKey"
  , ik = 50;
function C3() {
    return Lc.instance
}
function Wr() {
    return Lc.instance.store
}
class Lc { // class ApplicationStore
    static get instance() {
        return Lc.privateInstance || (Lc.privateInstance = new Lc),
        Lc.privateInstance
    }
    get isAuthenticated() {
        return this.currentUserAccountId !== void 0
    }
    get hasUser() {
        return !!(this.currentUserId && this.userAllowed(this.currentUserId))
    }
    get client() {
        return this.clientInstance ? this.clientInstance : (this.clientInstance = new A8({
            httpURL: ft.GRAPHQL_SERVER_HTTP
        }),
        this.clientInstance)
    }
    get usersAvailableToSwitchTo() {
        return this.currentUserId ? this.users ? this.users.length < 2 ? [] : this.users.filter(e=>e.id !== this.currentUserId) : [] : []
    }
    get timezone() {
        return C5()
    }
    get currentUser() {
        var e;
        return (e = this.users) == null ? void 0 : e.find(n=>n.id === this.currentUserId)
    }
    get currentUserAccount() {
        if (!(!this.currentUserAccountId || !this.userAccounts))
            return this.userAccounts[this.currentUserAccountId]
    }
    get users() {
        var e;
        return ((e = this.currentUserAccount) == null ? void 0 : e.users) ?? []
    }
    get allUserAccounts() {
        return Object.values(this.userAccounts)
    }
    get allUsers() {
        return this.allUserAccounts.reduce((e,n)=>e.concat(n.users), [])
    }
    findUserAndUserAccountByOrgUrlKey(e) {
        for (const n of this.allUserAccounts) {
            const r = n.users.find(s=>s.organization.urlKey === e);
            if (r)
                return {
                    user: r,
                    userAccount: n
                }
        }
    }
    get availableOrganizations() {
        var e;
        return ((e = this.currentUserAccount) == null ? void 0 : e.availableOrganizations) ?? []
    }
    get lockedOrganizations() {
        var e;
        return ((e = this.currentUserAccount) == null ? void 0 : e.lockedOrganizations) ?? []
    }
    get email() {
        var e;
        return (e = this.currentUserAccount) == null ? void 0 : e.email
    }
    get lockedUsers() {
        var e;
        return ((e = this.currentUserAccount) == null ? void 0 : e.lockedUsers) ?? []
    }
    get currentOrganization() {
        var e;
        return (e = this.currentUser) == null ? void 0 : e.organization
    }
    get organizations() {
        return !this.users || this.users.length === 0 ? [] : this.users.map(e=>e.organization)
    }
    async refreshStateSync() {
        this.log("Refreshing workspace state");
        const e = await this.fetchState();
        if (e) {
            if (!e.id) {
                this.error("Did not receive user account ID when refreshing state.");
                return
            }
            this.updateUserAccount(e),
            this.allowDomainAccess = e.allowDomainAccess,
            this.persistData()
        }
    }
    constructor() {
        this.userAccounts = {},
        this.currentUserId = void 0,
        this.currentUserAccountId = void 0,
        this.refreshState = K2(this.refreshStateSync, 10 * 1e3, {
            leading: !0,
            trailing: !1
        }),
        this.fetchState = async()=>{
            try {
                return (await aw(this.client)).availableUsers
            } catch (e) {
                if (z3(e, {
                    logoutOnForbidden: !0
                }) && !hs) {
                    await this.logoutCurrentUserAccount("Fetching state failed", e);
                    return
                }
                this.log("Could not refresh application store state", {
                    error: e
                })
            }
        }
        ,
        this.updateUserAccount = Le(e=>{
            e.id && (this.userAccounts[e.id] = {
                ...this.userAccounts[e.id],
                id: e.id,
                email: e.email,
                users: e.users,
                lockedUsers: e.lockedUsers,
                availableOrganizations: e.availableOrganizations,
                lockedOrganizations: e.lockedOrganizations
            })
        }
        ),
        this.persistData = Le((e={})=>{
            const n = Object.assign({
                currentUserAccountId: this.currentUserAccountId,
                currentUserId: this.currentUserId,
                allowDomainAccess: this.allowDomainAccess,
                availableOrganizations: this.availableOrganizations,
                userAccounts: this.userAccounts,
                version: 2
            }, e);
            if (!ke.set(hc, n))
                return !1;
            const r = {
                currentUserId: n.currentUserId,
                currentUserAccountId: n.currentUserAccountId
            };
            return !!ke.setSession(hc, r)
        }
        ),
        this.handleCheckStorage = Le(e=>{
            if (e.key === hc) {
                if (!this.isAuthenticated) {
                    this.log("Access token found, trying to log in"),
                    this.tryLogin();
                    return
                }
                this.log("Application store information updated");
                for (const n of this.allUserAccounts)
                    this.updateUserAccount(n)
            }
        }
        ),
        this.tryLogin = Le(()=>{
            var a;
            const e = ke.get(hc);
            if (!e)
                return !1;
            if (!e.currentUserAccountId)
                return this.reset(),
                !1;
            if (e.version !== 2) {
                const o = new Error("Persisted data version mismatch");
                return this.error("Old application store data model found", o, {
                    persistedData: e
                }),
                this.reset(),
                window.location.reload(),
                !1
            }
            let n = e.currentUserId
              , r = e.currentUserAccountId;
            const s = ke.getSession(hc) || {};
            s.currentUserId && (n = s.currentUserId),
            s.currentUserAccountId && (r = s.currentUserAccountId);
            const i = r ? e.userAccounts[r] : void 0;
            if (hs) {
                if (!i)
                    return !1;
                const o = (a = i.users) == null ? void 0 : a.some(d=>d.id !== ft.DEMO_USER_ID)
                  , l = [...i.availableOrganizations ?? [], ...i.users.map(d=>d.organization)].some(d=>d.id === ft.DEMO_ORGANIZATION_ID);
                if (o || !l)
                    return !1
            }
            return this.login({
                id: r,
                email: i == null ? void 0 : i.email,
                users: (i == null ? void 0 : i.users) || [],
                lockedUsers: (i == null ? void 0 : i.lockedUsers) || [],
                availableOrganizations: i == null ? void 0 : i.availableOrganizations,
                allowDomainAccess: e.allowDomainAccess
            }, n, e.userAccounts),
            !0
        }
        ),
        this.handleMessage = e=>{
            e.cmd === "updateWorkspaces" && setTimeout(this.refreshState, JQ({
                max: 30
            }) * 1e3)
        }
        ,
        xt.trace("startup", "ApplicationStore.constructor", ()=>{
            this.store = new km(this.client,this), // Application.store is also the global static store
            Ln(this, {
                userAccounts: ut,
                currentUserId: ut,
                currentUserAccountId: ut,
                organizations: ms,
                setUserAccount: Le,
                setUser: Le,
                login: Le,
                logout: Le,
                setServiceWorkerRegistration: Le
            }),
            addEventListener("storage", this.handleCheckStorage),
            this.tryLogin() && (this.store.onMessage.subscribe(this.handleMessage),
            this.refreshState())
        }
        )
    }
    ssoUrlFromEmail(e) {
        return gR(this.client, {
            email: e,
            isDesktop: Xt.isElectron
        })
    }
    async organizationExists(e) {
        return (await ZE(this.client, e)).organizationExists.exists
    }
    async organizationMeta(e) {
        return (await O1e(this.client, e)).organizationMeta
    }
    async organizationInviteDetails(e) {
        return (await wle(this.client, e)).organizationInviteDetails
    }
    async organizationInviteLinkDetails(e) {
        return await L1e(this.client, e)
    }
    async previewBuildLogin() {
        const e = await aw(this.client);
        this.login(e.availableUsers)
    }
    async googleAuthLogin(e, n) {
        const {inviteLink: r, redirectUri: s, disallowSignup: i} = n
          , a = (await I1e(this.client, {
            code: e,
            inviteLink: r,
            redirectUri: s,
            timezone: this.timezone,
            disallowSignup: i
        })).googleUserAccountAuth;
        return r ? await this.loginWithInviteLink(r, a) : await this.login(a)
    }
    async emailAuthChallenge(e, n={}) {
        const {inviteLink: r, loginCodeOnly: s} = n;
        return (await _1e(this.client, {
            email: e,
            clientAuthCode: this.generateAuthCode(),
            isDesktop: Xt.isElectron,
            inviteLink: r,
            loginCodeOnly: s
        })).emailUserAccountAuthChallenge
    }
    async passkeyLoginStart(e) {
        return (await R1e(this.client, {
            authId: e
        })).passkeyLoginStart
    }
    async passkeyLoginFinish(e, n) {
        const r = await P1e(this.client, {
            authId: e,
            response: n
        });
        return this.login(r.passkeyLoginFinish)
    }
    async tokenAuthLogin(e) {
        var l;
        const {email: n, authToken: r, service: s, clientAuthCode: i, inviteLink: a} = e;
        if (this.isAuthenticated && ((l = this.currentUser) == null ? void 0 : l.email) === n) {
            this.log("Already logged in as this user, skipping email auth.");
            return
        }
        if (i && !this.authCodeValid(i))
            throw new et({
                type: "authentication error",
                message: "Auth code invalid",
                userError: !0,
                userPresentableMessage: "You're trying to log into a browser that was not used to initiate the login."
            });
        this.log(`Attempting token auth login for service ${s}`, {
            service: s
        });
        let o;
        switch (s) {
        case z2.email:
            o = (await S1e(this.client, {
                email: n,
                token: r,
                timezone: this.timezone,
                inviteLink: a
            })).emailTokenUserAccountAuth,
            a ? await this.loginWithInviteLink(a, o) : await this.login(o);
            break;
        case z2.saml:
            o = (await vle(this.client, {
                email: n,
                token: r,
                timezone: this.timezone
            })).samlTokenUserAccountAuth,
            await this.login(o);
            break;
        default:
            throw new zt(s)
        }
    }
    async login(e, n, r) {
        if (!e.id)
            return this.error("Did not receive user account ID when refreshing state."),
            this.reset(),
            !1;
        if (this.log("Attempting login", {
            login: {
                authData: e,
                userId: n,
                userAccounts: r
            }
        }),
        Object.values(this.userAccounts).length === 0 && r && (this.userAccounts = r),
        this.updateUserAccount(e),
        this.allowDomainAccess = e.allowDomainAccess,
        e.id === this.currentUserAccountId)
            return this.log("Client already logged in"),
            !0;
        const s = e.id
          , i = e.users
          , a = e.lastUsedOrganizationId
          , o = n || (i && i.length > 0 ? (i.find(l=>l.organization.id === a && !l.organization.deletionRequestedAt) || i.find(l=>!l.organization.deletionRequestedAt) || i[0]).id : void 0);
        return o && !this.userAllowed(o, s) ? (this.log("User not allowed", {
            notAllowed: {
                userId: o,
                userAccount: s
            }
        }),
        this.reset(),
        !1) : (j1e("loggedIn"),
        Xt.bridge.notifyLoginStatusChange(!0),
        this.log("Client logged in"),
        o ? await this.setUser(o, s) : await this.setUserAccount(s))
    }
    async loginWithInviteLink(e, n) {
        if (this.spendRedirect(),
        !await this.login(n))
            return !1;
        try {
            const s = await this.organizationInviteLinkDetails(e);
            return this.organizations.some(a=>a.id === s.organizationId) ? (window.location.replace(`/${s.organizationUrlKey}`),
            !0) : (await this.joinOrganization({
                organizationId: s.organizationId,
                inviteLink: e,
                inviteRegion: s.organizationRegion
            }),
            window.location.replace(`/${s.organizationUrlKey}`),
            !0)
        } catch (s) {
            return s instanceof et ? this.error(s.message, s) : this.error("Failed to join organization", s),
            !1
        }
    }
    async setUserAccount(e, n) {
        if (!this.userAccounts[e])
            return this.error("User account not allowed"),
            await this.reset(),
            !1;
        if (this.currentUserAccountId === e)
            return !0;
        const r = this.currentUserAccountId;
        return this.log("Setting user account", {
            fromUserAccountId: r,
            toUserAccountId: e
        }),
        this.currentUserAccountId ? (this.persistData({
            currentUserAccountId: e,
            currentUserId: void 0
        }),
        n != null && n.reloadOnly ? window.location.reload() : window.location.href = (n == null ? void 0 : n.pathname) ?? "/") : (this.client.setUser({
            userAccountId: e
        }),
        this.currentUserAccountId = e,
        this.persistData({
            currentUserAccountId: e
        })),
        !0
    }
    async setUser(e, n, r) {
        if (!this.userAllowed(e, n))
            throw new zl(`User ${e} not allowed`);
        if (_r.setUser(e),
        this.currentUserId === e)
            return !0;
        const s = this.currentUserId
          , i = this.currentUserAccountId;
        if (n = n ?? this.currentUserAccountId,
        !n)
            return this.error("Trying to set user, but do not have userAccountId", void 0, {
                fromUserAccountId: i,
                fromUserId: s,
                toUserId: e,
                toUserAccountId: n
            }),
            !1;
        if (hs || this.persistData({
            currentUserId: e,
            currentUserAccountId: n
        }) || this.log("Failed persisting data when setting user", {
            currentUserId: e,
            currentUserAccountId: n
        }),
        !this.currentUserId && (!this.currentUserAccountId || this.currentUserAccountId && (!n || this.currentUserAccountId === n)))
            this.currentUserAccountId = n ?? this.currentUserAccountId,
            this.currentUserId = e,
            this.client.setUser({
                userId: this.currentUserId,
                userAccountId: this.currentUserAccountId
            }),
            await this.store.login({
                userId: this.currentUserId,
                userAccountId: this.currentUserAccountId
            });
        else {
            const a = ()=>{
                var l, d;
                if (!n)
                    return;
                const o = (d = (l = this.userAccounts[n].users) == null ? void 0 : l.find(u=>u.id === e)) == null ? void 0 : d.organization.urlKey;
                this.log(`Switching workspace to ${o}`, {
                    urlKey: o,
                    ...r
                }),
                r != null && r.reloadOnly ? window.location.reload() : window.location.href = (r == null ? void 0 : r.pathname) ?? (o ? `/${o}` : "")
            }
            ;
            if ((r == null ? void 0 : r.checkOutstandingTransactions) !== !1 && this.store.outstandingTransactionCount > 0)
                return await new k8({
                    title: "Current workspace is still syncing",
                    description: "If you switch before the syncing has finished, you could lose data.",
                    confirmButtonTitle: "Switch workspace",
                    confirmButtonType: "dangerous"
                }).show() === u0.confirm && a(),
                !1;
            a()
        }
        return this.log("Setting user", {
            fromUserAccountId: i,
            fromUserId: s,
            toUserId: e,
            toUserAccountId: n
        }),
        !0
    }
    unsetUser() {
        const e = this.currentUserId
          , n = this.currentUserAccountId;
        this.log("Unsetting user", {
            fromUserId: e,
            fromUserAccountId: n
        }),
        this.persistData({
            currentUserId: void 0,
            currentUserAccountId: void 0
        }),
        this.currentUserId = void 0,
        this.currentUserAccountId = void 0,
        this.client.setUser({
            userId: void 0,
            userAccountId: void 0
        }),
        window.location.replace("/")
    }
    async reset() {
        this.log("Resetting application store"),
        await this.logout("Resetting application store", !1),
        this.spendRedirect(),
        lt(()=>{
            this.currentUserAccountId = void 0,
            this.currentUserId = void 0,
            this.userAccounts = {}
        }
        )
    }
    setRedirect(e) {
        return this.log("Set redirect", {
            url: e
        }),
        ke.setString(H7, e ?? window.location.pathname, sessionStorage),
        e
    }
    spendRedirect() {
        const e = ke.getString(H7, sessionStorage);
        return e && (ke.remove(H7, sessionStorage),
        this.log("Spent the redirect", {
            url: e
        })),
        e
    }
    async logoutCurrentUserAccount(e, n) {
        var o, l, d;
        let r = Xt.isElectron ? "/login" : "/";
        P1(n) && ((o = n.metaData) == null ? void 0 : o.code) === Z2 && (r = "/not-available-in-your-country");
        const s = (l = this.allUserAccounts.find(u=>u.id !== this.currentUserAccountId)) == null ? void 0 : l.id;
        if (hs) {
            await Xn.deleteDatabaseForUserId(ft.DEMO_USER_ID),
            window.location.href = "/";
            return
        }
        if (!this.currentUserAccountId || !s || this.allUserAccounts.length === 1)
            return await this.logout(e, r);
        this.log("User account logged out");
        const i = ((d = this.currentUserAccount) == null ? void 0 : d.users.map(u=>u.id)) || []
          , a = {
            ...this.userAccounts
        };
        delete a[this.currentUserAccountId],
        this.persistData({
            userAccounts: a,
            currentUserAccountId: s,
            currentUserId: void 0
        });
        for (const u of i)
            await Xn.deleteDatabaseForUserId(u);
        window.location.href = r
    }
    async logout(e, n=!0) {
        var r, s;
        F.remote("Logging out", this.loggerMetadata({
            reason: e
        }));
        try {
            await kle(this.client)
        } catch (i) {
            i instanceof et && ((r = i.metaData) != null && r.code) && ["AUTHENTICATION_ERROR", "FORBIDDEN"].includes((s = i.metaData) == null ? void 0 : s.code) || this.error("Failed to revoke JWT", i)
        }
        this.registration && await this.registration.unregister().catch(i=>{
            this.error("Service worker un-registration failed", i)
        }
        ),
        this.currentUserId && this.log("Client logged out"),
        Xt.bridge.notifyLoginStatusChange(!1),
        ke.remove(hc, localStorage),
        ke.remove(hc, sessionStorage),
        Xn.deleteAllDatabases(),
        ke.remove(Dle, localStorage),
        ke.remove(sf, localStorage),
        ke.removeAllWithCondition(i=>i.startsWith(iD), localStorage),
        this.store.user.isAnonymous || this.store.user.settings.clearAll(),
        _r.clearAll(this.store.user.isSuperuser),
        k1e.clearAll(),
        rf.clearAll(),
        W4.clearAll(),
        T1e.clearAll(),
        n && (window.location.href = typeof n == "string" ? n : Xt.isElectron ? "/login" : "/")
    }
    async leaveOrganization() {
        const e = this.currentOrganization;
        if (!e)
            throw new zl("Can't leave an organization you're not a member of.");
        new k8({
            title: `Are you sure you want to leave "${e.name}"?`,
            description: "You can always rejoin the workspace from the workspace picker.",
            confirmButtonTitle: "Leave workspace"
        }).show().then(async r=>{
            r === u0.confirm && n()
        }
        );
        const n = async()=>{
            var a, o;
            if (!this.users)
                throw new zl("Can't leave an organization as you're not a member of any.");
            const r = await ble(this.client, e.id, e.region)
              , {user: s} = r.leaveOrganization
              , i = this.users.map(l=>l.id).indexOf(s.id);
            if (this.users.splice(i, 1),
            (o = (a = this.currentUserAccount) == null ? void 0 : a.availableOrganizations) == null || o.push(e),
            this.currentUserId === s.id) {
                const l = this.usersAvailableToSwitchTo[0];
                if (l) {
                    this.setUser(l.id);
                    return
                }
                this.unsetUser()
            }
        }
    }
    async joinOrganization(e) {
        const {organizationId: n, inviteLink: r, inviteRegion: s} = e;
        let i;
        this.joinOrganizationLock || (this.joinOrganizationLock = new qf(1));
        const a = await this.joinOrganizationLock.runExclusive(async()=>{
            var d, u, h;
            if (r)
                s && (i = s);
            else {
                if (!this.availableOrganizations)
                    throw new zl("Can't join organization as there’s no available organizations.");
                const f = this.availableOrganizations.map(p=>p.id).indexOf(n);
                if (f !== void 0 && f > -1)
                    i = this.availableOrganizations[f].region;
                else {
                    const p = this.lockedOrganizations.find(m=>m.id === n);
                    if (p && p.allowedAuthServices) {
                        const m = mR((d = p.allowedAuthServices) == null ? void 0 : d.map(g=>xL[g]));
                        throw new et({
                            type: "authentication error",
                            message: "error joining organization",
                            userError: !0,
                            userPresentableMessage: `The workspace you are trying to join only allows logging in via ${m}.

            Please sign out and log in with ${m} in order to accept the invite.`,
                            metaData: {
                                authServiceRestriction: {
                                    allowed: p.allowedAuthServices.map(g=>g.toString()),
                                    signOut: !0
                                }
                            }
                        })
                    }
                    throw new zl("Can't join organization that's not one of the available organizations.")
                }
            }
            if (!i)
                throw new zl("Can't join organization without a region.");
            const o = await E1e(this.client, {
                ...e,
                region: i
            })
              , {user: l} = o.joinOrganizationFromOnboarding;
            return (h = (u = this.currentUserAccount) == null ? void 0 : u.users) == null || h.push(l),
            await this.setUser(l.id)
        }
        );
        if (a === void 0)
            throw new et({
                type: "other",
                message: "joining organization already in progress",
                userError: !0,
                userPresentableMessage: "Joining workspace already in progress…"
            });
        return a
    }
    async createAndJoinOrganization(e) {
        var d, u;
        const {name: n, urlKey: r, region: s, domainAccess: i, survey: a} = e
          , o = await D1e(this.client, {
            name: n,
            urlKey: r,
            region: s,
            domainAccess: i,
            timezone: this.timezone,
            utm: A1e("utm"),
            survey: a
        })
          , {user: l} = o.createOrganizationFromOnboarding;
        (u = (d = this.currentUserAccount) == null ? void 0 : d.users) == null || u.push(l),
        this.setUser(l.id)
    }
    async verifyEmailChangeCode(e, n) {
        return await xle(this.client, {
            email: e,
            code: n
        })
    }
    async setServiceWorkerRegistration(e) {
        this.registration = e
    }
    userAllowed(e, n) {
        var s;
        const r = n ? (s = this.userAccounts[n]) == null ? void 0 : s.users : this.users;
        return r != null && r.length ? r.some(i=>i.id === e) : !1
    }
    loggerMetadata(e={}) {
        return Object.assign({
            currentUserAccountId: this.currentUserAccountId,
            currentUserId: this.currentUserId,
            usersAccounts: this.userAccounts ? Object.values(this.userAccounts).reduce((n,r)=>{
                var s, i, a, o;
                return n[r.id] = {
                    id: r.id,
                    email: r.email,
                    users: (s = r.users) == null ? void 0 : s.map(l=>l.id),
                    lockedUsers: (i = r.lockedUsers) == null ? void 0 : i.map(l=>l.id),
                    availableOrganizations: (a = r.availableOrganizations) == null ? void 0 : a.map(l=>l.id),
                    lockedOrganizations: (o = r.lockedOrganizations) == null ? void 0 : o.map(l=>l.id)
                },
                n
            }
            , {}) : void 0,
            isAuthenticated: this.isAuthenticated,
            hasUser: this.hasUser,
            email: this.email,
            allowDomainAccess: this.allowDomainAccess
        }, e)
    }
    log(e, n={}) {
        F.network(e, this.loggerMetadata(n))
    }
    error(e, n, r={}) {
        F.error(e, n, this.loggerMetadata(r))
    }
    get authCodes() {
        return ke.get(z7) || []
    }
    generateAuthCode() {
        const e = this.authCodes
          , n = Qc();
        return e.push(n),
        e.length > ik && e.splice(0, e.length - ik),
        ke.set(z7, e),
        n
    }
    authCodeValid(e) {
        const n = this.authCodes;
        if (n.includes(e)) {
            const r = n.filter(s=>s !== e);
            return ke.set(z7, r),
            !0
        }
        return !1
    }
}
class zl extends Error {
}
function A5(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class ll extends at {
    matchInlineFind(e) {
        var n, r;
        return (r = (n = this.issue) == null ? void 0 : n.value) != null && r.matchInlineFind(e) ? !0 : this.events.some(s=>{
            if ("issueTitle"in s && s.issueTitle.toLowerCase().includes(e) || "commentText"in s && s.commentText.toLowerCase().includes(e))
                return !0;
            if ("reactions"in s) {
                const i = G1.findNativeBySymbol(e);
                if (s.reactions.some(a=>a.emoji.toLowerCase().includes(e) || i && a.emoji.toLowerCase().includes(i.name)))
                    return !0
            }
            return !1
        }
        )
    }
}
A5([pe(()=>K, "activities", {
    persistance: ee.none,
    optional: !0,
    nullable: !1,
    indexed: !0
})], ll.prototype, "user", void 0);
A5([Hr(()=>re, "activities", {
    persistance: ee.none,
    optional: !0,
    nullable: !1,
    indexed: !0
})], ll.prototype, "issue", void 0);
A5([w()], ll.prototype, "issueId", void 0);
A5([w()], ll.prototype, "events", void 0);
ll = A5([We("Activity")], ll);
function Bh(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Gd extends It {
    constructor(e=!0) {
        super(e),
        this.newlyCreatedKey = "",
        this.label = "",
        e && this.makeObservable()
    }
}
Bh([w()], Gd.prototype, "label", void 0);
Bh([w({
    persistance: ee.createOnly
})], Gd.prototype, "key", void 0);
Bh([pe(()=>K, "apiKeys", {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], Gd.prototype, "user", void 0);
Gd = Bh([We("ApiKey")], Gd);
function Al(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class qo extends It {
    get emailAddress() {
        const e = this.template ? this.template.name : this.team ? this.team.name : "linear"
          , n = wl(e.replace(/[^a-zA-Z0-9 \-_]/g, ""));
        return `${n ? n + "-" : ""}${this.address}@${ft.EMAIL_INTAKE_HOSTNAME}`
    }
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
Al([w()], qo.prototype, "address", void 0);
Al([w()], qo.prototype, "enabled", void 0);
Al([Ue(()=>K, {
    persistance: ee.none,
    nullable: !0
})], qo.prototype, "creator", void 0);
Al([pe(()=>ne, "emailIntakeAddresses", {
    nullable: !1,
    optional: !0,
    indexed: !0
})], qo.prototype, "team", void 0);
Al([pe(()=>On, "emailIntakeAddresses", {
    nullable: !1,
    optional: !0
})], qo.prototype, "template", void 0);
Al([pe(()=>he, "emailIntakeAddresses", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], qo.prototype, "organization", void 0);
qo = Al([We("EmailIntakeAddress")], qo);
function jl(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Wo extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
jl([w()], Wo.prototype, "name", void 0);
jl([w()], Wo.prototype, "url", void 0);
jl([w()], Wo.prototype, "color", void 0);
jl([w({
    persistance: ee.none
})], Wo.prototype, "source", void 0);
jl([Ue(()=>K, {
    persistance: ee.none,
    nullable: !0
})], Wo.prototype, "creator", void 0);
jl([pe(()=>he, "emojis", {
    optional: !1,
    nullable: !1
})], Wo.prototype, "organization", void 0);
Wo = jl([We("Emoji")], Wo);
function Ml(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Go extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
    get parent() {
        return this.initiative ?? this.project
    }
    setLabel(e) {
        if (e && e !== "")
            this.label = e;
        else if (this.url) {
            const {hostname: n} = new URL(this.url);
            this.label = n.startsWith("www.") ? n.slice(4) : n
        }
    }
}
Ml([w()], Go.prototype, "url", void 0);
Ml([w()], Go.prototype, "label", void 0);
Ml([w()], Go.prototype, "sortOrder", void 0);
Ml([pe(()=>ot, "links", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Go.prototype, "initiative", void 0);
Ml([pe(()=>ie, "links", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Go.prototype, "project", void 0);
Ml([Ue(()=>K, {
    optional: !1,
    nullable: !1,
    persistance: ee.none
})], Go.prototype, "creator", void 0);
Go = Ml([We("EntityExternalLink")], Go);
var ak;
(function(t) {
    t.draft = "draft",
    t.opened = "opened",
    t.readyForReview = "readyForReview",
    t.requestedReview = "requestedReview",
    t.reviewSubmitted = "reviewSubmitted",
    t.readyForMerge = "readyForMerge",
    t.notReadyForMerge = "notReadyForMerge",
    t.merged = "merged"
}
)(ak || (ak = {}));
var ok;
(function(t) {
    t.pushed = "opened",
    t.merged = "merged"
}
)(ok || (ok = {}));
var nd;
(function(t) {
    t.draft = "draft",
    t.start = "start",
    t.review = "review",
    t.mergeable = "mergeable",
    t.merge = "merge"
}
)(nd || (nd = {}));
function j5(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class X1 extends It {
    constructor(e=!0) {
        super(e),
        this.isRegex = !1,
        this.automationStates = new te,
        e && this.makeObservable()
    }
}
j5([pe(()=>ne, "gitAutomationTargetBranches", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], X1.prototype, "team", void 0);
j5([w()], X1.prototype, "branchPattern", void 0);
j5([w()], X1.prototype, "isRegex", void 0);
j5([xe()], X1.prototype, "automationStates", void 0);
X1 = j5([We("GitAutomationTargetBranch")], X1);
function M5(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Ko extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
    static groupByEventsForBranch(e) {
        return e.reduce((n,r)=>{
            const {event: s} = r;
            if (n[s])
                throw new Error(`Duplicate automation state for type: ${s}`);
            return n[s] = r,
            n
        }
        , {})
    }
    static createDefaultGitAutomationStates(e) {
        if (!e || e.gitAutomationStates.length > 0)
            return;
        const n = (i,a)=>{
            if (!a || e.gitAutomationStates.find(l=>l.event === i))
                return;
            const o = new Ko;
            o.team = e,
            o.state = a,
            o.event = i,
            o.save(!0)
        }
        ;
        if (e.states.find(i=>i.name === "In Review") === void 0 && e.gitAutomationStates.find(i=>i.event === nd.review) === void 0) {
            const i = new on;
            i.name = "In Review",
            i.description = "Pull request is being reviewed",
            i.color = "#0f783c",
            i.type = ye.started,
            i.team = e,
            i.save(!0),
            n(nd.review, i)
        }
        const r = e.states.find(i=>i.type === ye.started && i.name === "In Progress")
          , s = e.states.find(i=>i.type === ye.completed && i.name === "Done");
        n(nd.start, r),
        n(nd.merge, s)
    }
}
M5([pe(()=>on, "gitAutomationStates", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ko.prototype, "state", void 0);
M5([pe(()=>ne, "gitAutomationStates", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Ko.prototype, "team", void 0);
M5([pe(()=>X1, "automationStates", {
    nullable: !1,
    optional: !0,
    indexed: !0
})], Ko.prototype, "targetBranch", void 0);
M5([w()], Ko.prototype, "event", void 0);
Ko = M5([We("GitAutomationState")], Ko);
var Sle = bA
  , _le = vA
  , Ile = CA
  , Ele = Sk
  , Ale = _k
  , jle = wA
  , Mle = Object.prototype
  , Tle = Mle.hasOwnProperty
  , Lle = Ile(function(t, e) {
    if (Ale(e) || Ele(e)) {
        _le(e, jle(e), t);
        return
    }
    for (var n in e)
        Tle.call(e, n) && Sle(t, n, e[n])
})
  , Ole = Lle;
const Rle = Cn(Ole);
var qu;
(function(t) {
    function e(n) {
        if (!t.isTemplateEnabledIntegration(n))
            throw new Error(`Templates are not supported for the ${n} integration`);
        switch (n) {
        case G.slackAsks:
            return Number.MAX_VALUE;
        default:
            return 10
        }
    }
    t.maxNumTemplatesPerIntegration = e,
    t.isTemplateEnabledIntegration = n=>Object.values(pf).includes(n),
    t.isPrivateTemplateEnabledIntegration = n=>[G.slackAsks].includes(n),
    t.isWorkspaceTemplatesEnabledIntegration = n=>[G.intercom, G.slack, G.zendesk].includes(n)
}
)(qu || (qu = {}));
var pf;
(function(t) {
    t[t.asks = G.slackAsks] = "asks",
    t[t.intercom = G.intercom] = "intercom",
    t[t.slack = G.slack] = "slack",
    t[t.zendesk = G.zendesk] = "zendesk"
}
)(pf || (pf = {}));
const o4e = t=>{
    const {botScopes: e, userScopes: n, slackApp: r, callbackUrl: s=nJ(), teamId: i} = t
      , a = "https://slack.com/oauth/v2/authorize"
      , o = {
        client_id: r === M8.Linear ? qe.isEnabled(qe.slackStagingApp) ? ft.SLACK_STAGING_CLIENT_ID : ft.SLACK_CLIENT_ID : ft.SLACK_INTAKE_APP_CLIENT_ID,
        scope: e ? e.join(",") : "",
        user_scope: n ? n.join(",") : "",
        install_redirect: "update-to-granular-scopes",
        redirect_uri: s,
        team: i
    }
      , l = Object.keys(o).map(d=>`${d}=${encodeURIComponent(o[d])}`).join("&");
    return `${a}?${l}`
}
  , ku = "links.embed:write"
  , qE = "channels:join"
  , Ple = ["chat:write", "chat:write.customize"]
  , Z7 = [...Ple, "channels:history", "groups:history", "mpim:history", "commands", "im:history", "links:read", "links:write", "users:read", "users:read.email", "channels:read", "groups:read", "im:read", "mpim:read", "reactions:read", "reactions:write", "files:read", "files:write", qE]
  , ck = ()=>{
    const e = !qe.isEnabled(qe.previewVideosInSlack)
      , n = qe.isEnabled(qe.slackIntegrationOptOutOfAutojoiningChannel)
      , r = s=>(n && (s = s.filter(i=>i !== qE)),
    e && (s = s.filter(i=>i !== ku)),
    s);
    return {
        Linear: r([...Z7, "im:write", ku]),
        LinearStaging: r([...Z7, "im:write", "channels:manage", "bookmarks:write", "links.embed:write"]),
        Asks: r([...Z7, "app_mentions:read", ku]),
        Post: r(["incoming-webhook", ku]),
        Personal: r(["chat:write", "im:write", "im:history", "reactions:read", ku]),
        EmojiImport: r(["emoji:read"]),
        ChannelPicker: r(["incoming-webhook"])
    }
}
;
async function $le(t, e, n) {
    const r = Mt.gql`
    mutation IntegrationSettingsUpdate($id: String!, $input: IntegrationSettingsInput!) {
      integrationSettingsUpdate(id: $id, input: $input) {
        success
      }
    }
  `;
    return t.mutate(r, {
        id: e,
        input: n
    })
}
function ji(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Jr extends It {
    get name() {
        return h0.getDisplayName(this.service)
    }
    get isPullRequestIntegration() {
        return this.service === G.github || this.service === G.gitlab
    }
    get isSupportIntegration() {
        return [G.front, G.intercom, G.zendesk].includes(this.service)
    }
    get isTemplateEnabledIntegration() {
        return qu.isTemplateEnabledIntegration(this.service)
    }
    constructor(e=!0) {
        super(e),
        this.settings = {},
        this.integrationTemplates = new te,
        this.timeSchedules = new te,
        this.shouldReinstall = ()=>this.service !== G.slack ? Promise.resolve(!1) : qe.isEnabled(qe.forceSlackUpdate) ? Promise.resolve(!0) : Fle(this.store.graphQLClient, {
            scopes: qe.isEnabled(qe.slackStagingApp) ? ck().LinearStaging : ck().Linear,
            integrationId: this.id
        }).then(n=>!n.integrationHasScopes.hasAllScopes),
        this.userCanManageAsksSettings = (n,r)=>{
            var s, i, a;
            if (r.service !== G.slackAsks || !((s = r.settings) != null && s.slackAsks))
                throw new Error("Integration is not a Slack Asks integration");
            return ((a = (i = r.settings) == null ? void 0 : i.slackAsks) == null ? void 0 : a.canAdministrate) === Cr.admin ? n.isAdmin : !n.guest
        }
        ,
        this.setSettings = async n=>{
            if ([G.front, G.intercom, G.jira, G.slack, G.slackAsks, G.zendesk, G.github].includes(this.service))
                return lt(async()=>{
                    let r = Fa(this.settings);
                    const s = this.service === G.github ? "gitHub" : this.service;
                    return r = {
                        [s]: Rle(r[s], n)
                    },
                    await $le(this.store.graphQLClient, this.id, r)
                }
                )
        }
        ,
        e && this.makeObservable()
    }
    sortedTemplates() {
        return Of(this.integrationTemplates.map(e=>e.template), [e=>{
            var n;
            return (n = e.team) == null ? void 0 : n.name
        }
        , "sortOrder", "createdAt"], ["asc", "asc", "asc"])
    }
    isAvailableForTemplate(e) {
        var a, o, l, d;
        const n = this.service === G.slackAsks ? this.organization.canAccessSome([j0.asksLimited, j0.asks]) : !0
          , r = this.service === G.slackAsks ? !!((l = (o = (a = this.settings) == null ? void 0 : a.slackAsks) == null ? void 0 : o.slackChannelMapping) != null && l.length) : this.isTemplateEnabledIntegration
          , s = qu.isWorkspaceTemplatesEnabledIntegration(this.service)
          , i = qu.isPrivateTemplateEnabledIntegration(this.service);
        return e.type === qi.issue && n && r && (e.team || s) && (!((d = e.team) != null && d.private) || i)
    }
}
ji([w()], Jr.prototype, "service", void 0);
ji([w()], Jr.prototype, "serviceId", void 0);
ji([Ue(()=>ne, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Jr.prototype, "team", void 0);
ji([Ue(()=>ie, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Jr.prototype, "project", void 0);
ji([Ue(()=>Ke, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Jr.prototype, "customView", void 0);
ji([Ue(()=>K, {
    optional: !1,
    nullable: !1
})], Jr.prototype, "creator", void 0);
ji([pe(()=>he, "integrations", {
    optional: !1,
    nullable: !1
})], Jr.prototype, "organization", void 0);
ji([w({
    serializer: hn
})], Jr.prototype, "settings", void 0);
ji([xe()], Jr.prototype, "integrationTemplates", void 0);
ji([xe()], Jr.prototype, "timeSchedules", void 0);
ji([w({
    serializer: hn,
    persistance: ee.none
})], Jr.prototype, "authError", void 0);
Jr = ji([We("Integration")], Jr);
function Fle(t, e) {
    return t.query(Mt.gql`
      query CheckScopes($integrationId: String!, $scopes: [String!]!) {
        integrationHasScopes(integrationId: $integrationId, scopes: $scopes) {
          hasAllScopes
          missingScopes
        }
      }
    `, e)
}
function vs(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Br extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
    isProjectIntegrationsSettings() {
        return !!this.project
    }
    isTeamIntegrationsSettings() {
        return !!this.team
    }
    isCustomViewIntegrationsSettings() {
        return !!this.team
    }
}
vs([Dt(()=>ie, "integrationsSettings", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Br.prototype, "project", void 0);
vs([Dt(()=>ne, "integrationsSettings", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Br.prototype, "team", void 0);
vs([Dt(()=>Ke, "integrationsSettings", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Br.prototype, "customView", void 0);
vs([w()], Br.prototype, "slackIssueCreated", void 0);
vs([w()], Br.prototype, "slackIssueAddedToView", void 0);
vs([w()], Br.prototype, "slackIssueNewComment", void 0);
vs([w()], Br.prototype, "slackIssueStatusChangedDone", void 0);
vs([w()], Br.prototype, "slackIssueStatusChangedAll", void 0);
vs([w()], Br.prototype, "slackProjectUpdateCreated", void 0);
vs([w()], Br.prototype, "slackProjectUpdateCreatedToTeam", void 0);
vs([w()], Br.prototype, "slackProjectUpdateCreatedToWorkspace", void 0);
vs([w()], Br.prototype, "slackIssueAddedToTriage", void 0);
vs([w()], Br.prototype, "slackIssueSlaHighRisk", void 0);
vs([w()], Br.prototype, "slackIssueSlaBreached", void 0);
Br = vs([We("IntegrationsSettings")], Br);
function Uh(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class J1 extends It {
    static create(e) {
        const n = J1.createEmpty();
        return n.template = e.template,
        n.integration = e.integration,
        n.foreignEntityId = e.foreignEntityId,
        n
    }
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
Uh([pe(()=>On, "integrationTemplates", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], J1.prototype, "template", void 0);
Uh([pe(()=>Jr, "integrationTemplates", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], J1.prototype, "integration", void 0);
Uh([w()], J1.prototype, "foreignEntityId", void 0);
J1 = Uh([We("IntegrationTemplate")], J1);
var mf;
(function(t) {
    t.newIssue = "newIssue",
    t.newComment = "newComment",
    t.newProjectUpdate = "newProjectUpdate",
    t.newProjectUpdateReminder = "newProjectUpdateReminder",
    t.newTriageIssue = "newTriageIssue",
    t.issueMovedToProject = "issueMovedToProject",
    t.mentions = "mentions",
    t.reactions = "reactions",
    t.resolvedThread = "resolvedThread",
    t.projectMembership = "projectMembership",
    t.issueUrgent = "issueUrgent",
    t.issueDue = "issueDue",
    t.issueStatusChanged = "issueStatusChanged",
    t.issueSlaBreached = "issueSlaBreached",
    t.issueSlaHighRisk = "issueSlaHighRisk",
    t.issueBlocking = "issueBlocking",
    t.issueUnblocked = "issueUnblocked",
    t.issueReminder = "issueReminder",
    t.issueAssignment = "issueAssignment",
    t.issueSubscribed = "issueSubscribed",
    t.issueAddedToView = "issueAddedToView",
    t.newApplicationReview = "newApplicationReview",
    t.documentReminder = "documentReminder",
    t.documentMoved = "documentMoved",
    t.documentSubscribed = "documentSubscribed",
    t.other = "other"
}
)(mf || (mf = {}));
class Nle {
    static get allValues() {
        return Object.values(mf).filter(e=>typeof e == "string")
    }
    static getNotificationFilterType(e) {
        switch (e) {
        case $.issueCreated:
            return "newIssue";
        case $.issueNewComment:
        case $.projectUpdateNewComment:
        case $.documentNewComment:
        case $.projectNewComment:
        case $.initiativeNewComment:
        case $.projectMilestoneNewComment:
            return "newComment";
        case $.projectUpdateCreated:
            return "newProjectUpdate";
        case $.projectUpdatePrompt:
            return "newProjectUpdateReminder";
        case $.issueThreadResolved:
        case $.documentThreadResolved:
        case $.projectThreadResolved:
        case $.initiativeThreadResolved:
        case $.projectMilestoneThreadResolved:
            return "resolvedThread";
        case $.documentCommentMention:
        case $.issueCommentMention:
        case $.projectUpdateCommentMention:
        case $.projectMilestoneCommentMention:
        case $.issueMention:
        case $.projectMention:
        case $.initiativeMention:
        case $.documentMention:
        case $.projectUpdateMention:
        case $.projectCommentMention:
        case $.initiativeCommentMention:
        case $.projectMilestoneMention:
            return "mentions";
        case $.issueEmojiReaction:
        case $.issueCommentReaction:
        case $.projectUpdateReaction:
        case $.projectUpdateCommentReaction:
        case $.documentCommentReaction:
        case $.projectCommentReaction:
        case $.initiativeCommentReaction:
        case $.projectMilestoneCommentReaction:
            return "reactions";
        case $.triageResponsibilityIssueAddedToTriage:
        case $.issueAddedToTriage:
            return "newTriageIssue";
        case $.issueSlaBreached:
            return "issueSlaBreached";
        case $.issueSlaHighRisk:
            return "issueSlaHighRisk";
        case $.issueMovedToProject:
            return "issueMovedToProject";
        case $.projectAddedAsLead:
        case $.projectAddedAsMember:
            return "projectMembership";
        case $.issuePriorityUrgent:
            return "issueUrgent";
        case $.oauthClientApprovalCreated:
            return "newApplicationReview";
        case $.issueDue:
            return "issueDue";
        case $.issueReminder:
            return "issueReminder";
        case $.issueBlocking:
            return "issueBlocking";
        case $.issueUnblocked:
            return "issueUnblocked";
        case $.issueStatusChangedAll:
        case $.issueStatusChangedDone:
            return "issueStatusChanged";
        case $.issueAssignedToYou:
        case $.issueUnassignedFromYou:
            return "issueAssignment";
        case $.issueAddedToView:
            return "issueAddedToView";
        case $.issueSubscribed:
            return "issueSubscribed";
        case $.documentSubscribed:
            return "documentSubscribed";
        case $.documentReminder:
            return "documentReminder";
        case $.documentMoved:
        case $.documentDeleted:
        case $.documentRestored:
            return "documentMoved";
        case $.system:
        case $.initiativeAddedAsOwner:
            return "other";
        default:
            throw void 0
        }
    }
    static labelForFilterType(e) {
        switch (e) {
        case "newIssue":
            return "New issue";
        case "newComment":
            return "New comment";
        case "resolvedThread":
            return "Comments thread is resolved";
        case "mentions":
            return "Mentions";
        case "reactions":
            return "Reactions";
        case "newProjectUpdate":
            return "New project update";
        case "newTriageIssue":
            return "New triage issue";
        case "issueMovedToProject":
            return "Issue moved to project";
        case "issueSlaBreached":
            return "SLA is breached";
        case "issueSlaHighRisk":
            return "SLA is at high risk";
        case "issueBlocking":
            return "Issue is blocking";
        case "issueUnblocked":
            return "Issue is unblocked";
        case "issueStatusChanged":
            return "Issue status is changed";
        case "projectMembership":
            return "Project membership";
        case "newProjectUpdateReminder":
            return "Project update reminder";
        case "issueUrgent":
            return "Urgent issue";
        case "issueDue":
            return "Issue is due";
        case "newApplicationReview":
            return "New application review request";
        case "issueReminder":
            return "Issue reminder";
        case "issueAssignment":
            return "Issue assignment";
        case "issueAddedToView":
            return "Issue added to view";
        case "issueSubscribed":
            return "Subscribed to issue";
        case "documentSubscribed":
            return "Subscribed to document";
        case "documentReminder":
            return "Document reminder";
        case "documentMoved":
            return "Document moved";
        case "other":
            return "Other";
        default:
            throw void 0
        }
    }
}
class t5 {
    static getNotificationGrouping(e, n, r) {
        const {isNewInboxBehaviorEnabled: s} = r;
        switch (n) {
        case $.oauthClientApprovalCreated:
            return {
                type: "oauth-client-approval",
                entityId: e.oauthClientApprovalId || e.id
            };
        case $.issueReminder:
            return {
                type: "issue-reminder",
                entityId: e.issueId || e.id
            };
        case $.documentReminder:
            return {
                type: "document-reminder",
                entityId: e.documentId || e.id
            };
        case $.issueSlaBreached:
        case $.issueSlaHighRisk:
            return {
                type: "issue-sla",
                entityId: e.issueId || e.id
            };
        case $.documentMoved:
        case $.documentRestored:
        case $.documentDeleted:
            return {
                type: "document-moved",
                entityId: e.documentId || e.id
            };
        case $.documentMention:
            return {
                type: "document",
                entityId: e.documentId || e.id
            };
        case $.documentSubscribed:
        case $.documentCommentMention:
        case $.documentCommentReaction:
        case $.documentNewComment:
        case $.documentThreadResolved:
            return e.parentCommentId || e.commentId ? {
                type: "document-thread",
                entityId: e.parentCommentId || e.commentId || e.id
            } : {
                type: "document",
                entityId: e.documentId || e.id
            };
        case $.initiativeAddedAsOwner:
        case $.initiativeMention:
            return {
                type: "initiative",
                entityId: e.initiativeId || e.id
            };
        case $.initiativeCommentMention:
        case $.initiativeCommentReaction:
        case $.initiativeNewComment:
        case $.initiativeThreadResolved:
            return e.parentCommentId || e.commentId ? {
                type: "initiative-thread",
                entityId: e.parentCommentId || e.commentId || e.id
            } : {
                type: "initiative-thread",
                entityId: e.commentId || e.id
            };
        case $.projectUpdateCreated:
        case $.projectUpdateCommentMention:
        case $.projectUpdateNewComment:
        case $.projectUpdateMention:
        case $.projectUpdateCommentReaction:
        case $.projectUpdateReaction:
            return {
                type: "project-update",
                entityId: e.projectUpdateId || e.id
            };
        case $.projectMilestoneMention:
        case $.projectMilestoneCommentMention:
        case $.projectMilestoneCommentReaction:
        case $.projectMilestoneNewComment:
        case $.projectMilestoneThreadResolved:
            return e.parentCommentId || e.commentId ? {
                type: "project-milestone-thread",
                entityId: e.parentCommentId || e.commentId || e.id
            } : {
                type: "project-milestone",
                entityId: e.projectMilestoneId || e.id
            };
        case $.projectUpdatePrompt:
            return {
                type: "project-update-prompt",
                entityId: e.projectId || e.id
            };
        case $.projectAddedAsLead:
        case $.projectAddedAsMember:
        case $.projectMention:
            return {
                type: "project",
                entityId: e.projectId || e.id
            };
        case $.projectCommentMention:
        case $.projectCommentReaction:
        case $.projectNewComment:
        case $.projectThreadResolved:
            return e.parentCommentId || e.commentId ? {
                type: "project-thread",
                entityId: e.parentCommentId || e.commentId || e.id
            } : {
                type: "project",
                entityId: e.projectId || e.id
            };
        case $.system:
            return {
                type: "system",
                entityId: e.id
            };
        case $.issueCreated:
        case $.issueMention:
        case $.issueAddedToTriage:
        case $.issueAssignedToYou:
        case $.issueAddedToView:
        case $.issueUnassignedFromYou:
        case $.issueNewComment:
        case $.issueCommentMention:
        case $.issueCommentReaction:
        case $.issueThreadResolved:
        case $.issueEmojiReaction:
        case $.issuePriorityUrgent:
        case $.issueSubscribed:
        case $.issueBlocking:
        case $.issueUnblocked:
        case $.issueMovedToProject:
        case $.issueStatusChangedDone:
        case $.issueStatusChangedAll:
        case $.issueDue:
        case $.triageResponsibilityIssueAddedToTriage:
            return s ? {
                type: "issue",
                entityId: e.issueId || e.id
            } : {
                type: "issue",
                entityId: e.issueId || e.id
            };
        default:
            throw void 0
        }
    }
    static getNotificationGroupingId(e, n, r) {
        const s = t5.getNotificationGrouping(e, n, r);
        return `${s.type}#${s.entityId}`
    }
}
function ss(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class wr extends at {
    constructor(e=!0) {
        super(e),
        this.active = !0,
        this.notifications = new Et(En,this,"subscriptionIds",new de("createdAt","asc")),
        e && this.makeObservable()
    }
    isCustomViewNotificationSubscription() {
        var e;
        return !!((e = this.customView) != null && e.id)
    }
    isLabelNotificationSubscription() {
        var e;
        return !!((e = this.label) != null && e.id)
    }
    isProjectNotificationSubscription() {
        var e;
        return !!((e = this.project) != null && e.id)
    }
    isTeamNotificationSubscription() {
        var e;
        return !!((e = this.team) != null && e.id)
    }
    isUserNotificationSubscription() {
        var e;
        return !!((e = this.user) != null && e.id)
    }
    getModel() {
        const e = this.customView ?? this.label ?? this.project ?? this.team ?? this.user;
        if (!e)
            throw new Error("Subscription does not have a targeted model");
        return e
    }
    getTargetProps(e={}) {
        const n = this.getModel();
        return n instanceof Ke ? {
            target: "customView",
            customView: n
        } : n instanceof Ut ? {
            target: "label",
            label: n
        } : n instanceof ie ? {
            target: "project",
            project: n,
            withProjectUpdateReminder: e.withProjectUpdateReminder,
            withSlackSection: e.withSlackSection
        } : n instanceof ne ? {
            target: "team",
            team: n,
            contextViewType: this.contextViewType
        } : {
            target: "user",
            user: n,
            userContextViewType: this.userContextViewType
        }
    }
    getDisplayName(e={}) {
        const n = this.getTargetProps();
        switch (n.target) {
        case "customView":
            return n.customView.name;
        case "label":
            return n.label.name;
        case "project":
            return n.project.name;
        case "team":
            const r = n.contextViewType;
            switch (r) {
            case Ir.activeCycle:
                return `${e.withBreadcrumb ? `${n.team.name} › ` : ""}Current cycle`;
            case Ir.activeIssues:
                return `${e.withBreadcrumb ? `${n.team.name} › ` : ""}Active issues`;
            case Ir.backlog:
                return `${e.withBreadcrumb ? `${n.team.name} › ` : ""}Backlog`;
            case Ir.triage:
                return `${e.withBreadcrumb ? `${n.team.name} › ` : ""}Triage`;
            case Ir.upcomingCycle:
                return `${e.withBreadcrumb ? `${n.team.name} › ` : ""}Upcoming cycle`;
            case void 0:
                return n.team.name;
            default:
                throw new zt(r)
            }
        case "user":
            return e.userSettings ? X4.getUsername(e.userSettings, n.user) : n.user.name;
        default:
            throw new zt(n)
        }
    }
    getModelPath() {
        const e = this.getTargetProps();
        switch (e.target) {
        case "customView":
            return ph(e.customView);
        case "label":
            return H_(e.label);
        case "project":
            return bs(e.project);
        case "team":
            const n = e.contextViewType;
            switch (n) {
            case Ir.activeCycle:
                return uJ(e.team);
            case Ir.activeIssues:
                return O9(e.team);
            case Ir.backlog:
                return U_(e.team);
            case Ir.triage:
                return B_(e.team);
            case Ir.upcomingCycle:
                return hJ(e.team);
            case void 0:
                return Y0(e.team);
            default:
                throw new zt(n)
            }
        case "user":
            return su(e.user);
        default:
            throw new zt(e)
        }
    }
    disable() {
        this.active = !1,
        this.save()
    }
    enable() {
        this.active = !0,
        this.save()
    }
    subscribeToNotificationType(e) {
        var n;
        (n = this.notificationSubscriptionTypes) != null && n.includes(e) || (this.notificationSubscriptionTypes || (this.notificationSubscriptionTypes = []),
        this.notificationSubscriptionTypes = [...this.notificationSubscriptionTypes, e].distinct(),
        this.save(!0))
    }
    unsubscribeFromNotificationType(e) {
        !this.notificationSubscriptionTypes || !this.notificationSubscriptionTypes.includes(e) || (this.notificationSubscriptionTypes = this.notificationSubscriptionTypes.filter(n=>n !== e),
        this.save(!0))
    }
}
ss([pe(()=>K, "subscriptions", {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], wr.prototype, "subscriber", void 0);
ss([Dt(()=>Ke, "subscription", {
    nullable: !0,
    indexed: !0
})], wr.prototype, "customView", void 0);
ss([Dt(()=>Ut, "subscription", {
    nullable: !0,
    indexed: !0
})], wr.prototype, "label", void 0);
ss([Dt(()=>ie, "subscription", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], wr.prototype, "project", void 0);
ss([Dt(()=>ne, "subscription", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], wr.prototype, "team", void 0);
ss([Dt(()=>K, "subscription", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], wr.prototype, "user", void 0);
ss([w({
    enum: Ir
})], wr.prototype, "contextViewType", void 0);
ss([w({
    enum: o9
})], wr.prototype, "userContextViewType", void 0);
ss([w()], wr.prototype, "notificationSubscriptionTypes", void 0);
ss([w()], wr.prototype, "active", void 0);
ss([Nt()], wr.prototype, "notifications", void 0);
ss([rt], wr.prototype, "disable", null);
ss([rt], wr.prototype, "enable", null);
ss([rt], wr.prototype, "subscribeToNotificationType", null);
ss([rt], wr.prototype, "unsubscribeFromNotificationType", null);
wr = ss([We("NotificationSubscription")], wr);
class Wu {
    static handleNotification(e, n) {
        var i;
        const r = qe.isEnabled(qe.newInboxBehavior)
          , s = t5.getNotificationGrouping(e, e.type, {
            isNewInboxBehaviorEnabled: r
        });
        switch (s.type) {
        case "issue":
        case "issue-reminder":
        case "issue-sla":
        case "issue-thread":
            return n.issue((i = e.issue) == null ? void 0 : i.value);
        case "initiative":
            return n.initiative(e.initiative);
        case "project":
        case "project-update-prompt":
            return n.project(e.project);
        case "project-milestone":
            return n.projectMilestone(e.projectMilestone);
        case "project-update":
            return n.projectUpdate(e.projectUpdate);
        case "document":
        case "document-moved":
        case "document-reminder":
            return n.document(e.document);
        case "oauth-client-approval":
            return n.oauthClientApproval(e.oauthClientApproval);
        case "document-thread":
            return n.document(e.document);
        case "project-thread":
            return n.project(e.project);
        case "initiative-thread":
            return n.initiative(e.initiative);
        case "project-milestone-thread":
            return n.projectMilestone(e.projectMilestone);
        case "system":
            return;
        default:
            throw F.warning("Unknown notification type", {
                notificationType: e.type
            }),
            s.type,
            void 0
        }
    }
    static entity(e) {
        return Wu.handleNotification(e, {
            issue: n=>n,
            oauthClientApproval: n=>n,
            project: n=>n,
            initiative: n=>n,
            projectUpdate: n=>n,
            projectMilestone: n=>n,
            document: n=>n
        })
    }
    static getAllNotificationsFromTheSameGroup(e, n) {
        const r = n.groupingEntityId;
        return e.notifications.filter(s=>s.groupingEntityId === r).elements
    }
    static groupNotificationsByGroupingEntityId(e) {
        return Object.values(m5(e, n=>n.groupingEntityId))
    }
    static getFirstPerNotificationGroup(e) {
        const n = qe.isEnabled(qe.newInboxBehavior);
        return this.groupNotificationsByGroupingEntityId(e).map(r=>n ? Vle(r) : Ble(r)).concrete()
    }
    static findByHash(e, n) {
        return e.find(r=>r.id.startsWith(n))
    }
}
function Vle(t) {
    if (t.length !== 0)
        return t.every(e=>e.readAt) ? Gi(t, e=>e.readAt ? -e.readAt.getTime() : 0, e=>-e.createdAt.getTime(), e=>e.id)[0] : Gi(t.filter(e=>!e.readAt), e=>-e.createdAt.getTime(), e=>e.id)[0]
}
function Ble(t) {
    if (t.length === 0)
        return;
    const e = t.some(r=>!r.readAt)
      , n = m5(e ? t.filter(r=>!r.readAt) : t, r=>r.type);
    for (const r of w4.notificationsOrder) {
        const s = n[r];
        if (s != null && s.length)
            return lk(s)
    }
    return lk(t)
}
function lk(t) {
    const e = Date.now();
    return Gi(t, n=>-((n.readAt ? 0 : e) + n.createdAt.getTime()), "id")[0]
}
var xd;
(function(t) {
    t.requested = "requested",
    t.approved = "approved",
    t.denied = "denied"
}
)(xd || (xd = {}));
const Bs = class Bs {
}
;
Bs.minNoteLength = 2,
Bs.maxNoteLength = 1e3,
Bs.errorCodeAuthorize = "oauthAppApprovalError",
Bs.errorCodeDenied = `${Bs.errorCodeAuthorize}-Denied`,
Bs.errorCodeGuestCantRequest = `${Bs.errorCodeAuthorize}-GuestCantRequest`,
Bs.errorCodeNotRequested = `${Bs.errorCodeAuthorize}-NotRequested`,
Bs.errorCodeUnanswered = `${Bs.errorCodeAuthorize}-Unanswered`;
let dk = Bs;
function WE(t, e) {
    return t.query(Mt.gql`
      query ApplicationInfoByIdsQuery($ids: [String!]!) {
        applicationInfoByIds(ids: $ids) {
          id
          clientId
          name
          description
          developer
          developerUrl
          imageUrl
        }
      }
    `, {
        ids: e
    }, {
        cache: !0
    })
}
function la(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Os extends si {
    get isApproved() {
        return this.status === xd.approved
    }
    get isDenied() {
        return this.status === xd.denied
    }
    get isRequested() {
        return this.status === xd.requested
    }
    constructor(e=!0) {
        super(e),
        this.notifications = new te,
        e && this.makeObservable()
    }
    async hydrateOAuthApplicationInfo() {
        if (!this.oauthApplication)
            try {
                const e = await WE(this.store.graphQLClient, [this.oauthClientId]);
                lt(()=>{
                    this.oauthApplication = e.applicationInfoByIds.length > 0 ? e.applicationInfoByIds[0] : void 0
                }
                )
            } catch {
                return
            }
    }
    markNotificationAsRead() {
        this.notifications.forEach(e=>{
            e.readAt || (e.markAsRead(),
            e.save())
        }
        )
    }
}
la([pe(()=>he, "oauthClientApprovals", {
    optional: !1,
    nullable: !1
})], Os.prototype, "organization", void 0);
la([w()], Os.prototype, "oauthClientId", void 0);
la([Ue(()=>K, {
    optional: !1,
    nullable: !1
})], Os.prototype, "requester", void 0);
la([Ue(()=>K, {
    nullable: !0
})], Os.prototype, "responder", void 0);
la([w({
    enum: xd
})], Os.prototype, "status", void 0);
la([w()], Os.prototype, "scopes", void 0);
la([w()], Os.prototype, "requestReason", void 0);
la([w()], Os.prototype, "denyReason", void 0);
la([xe()], Os.prototype, "notifications", void 0);
la([rt], Os.prototype, "markNotificationAsRead", null);
Os = la([We("OauthClientApproval")], Os);
function Kn(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
let En = class extends si {
    get issueId() {
        var e;
        return (e = this.issue) == null ? void 0 : e.id
    }
    get projectId() {
        var e;
        return (e = this.project) == null ? void 0 : e.id
    }
    get projectMilestoneId() {
        var e;
        return (e = this.projectMilestone) == null ? void 0 : e.id
    }
    get projectUpdateId() {
        var e;
        return (e = this.projectUpdate) == null ? void 0 : e.id
    }
    get initiativeId() {
        var e;
        return (e = this.initiative) == null ? void 0 : e.id
    }
    get documentId() {
        var e;
        return (e = this.document) == null ? void 0 : e.id
    }
    get commentId() {
        var e;
        return (e = this.comment) == null ? void 0 : e.id
    }
    get parentCommentId() {
        var e;
        return (e = this.parentComment) == null ? void 0 : e.id
    }
    get oauthClientApprovalId() {
        var e;
        return (e = this.oauthClientApproval) == null ? void 0 : e.id
    }
    get filterType() {
        return Nle.getNotificationFilterType(this.type)
    }
    get label() {
        var e, n;
        switch (this.type) {
        case $.issueStatusChangedDone:
        case $.issueStatusChangedAll:
            switch ((n = (e = this.issue) == null ? void 0 : e.value) == null ? void 0 : n.state.type) {
            case ye.completed:
                return "Completed";
            case ye.canceled:
                return "Canceled";
            default:
                return "Status updated"
            }
        default:
            return w4.labelForType(this.type)
        }
    }
    get teams() {
        return Wu.handleNotification(this, {
            issue: n=>{
                const r = n == null ? void 0 : n.team;
                return r ? [r] : []
            }
            ,
            initiative: ()=>[],
            project: n=>(n == null ? void 0 : n.accessibleTeams.elements) ?? [],
            projectUpdate: n=>(n == null ? void 0 : n.project.accessibleTeams.elements) ?? [],
            projectMilestone: n=>(n == null ? void 0 : n.project.accessibleTeams.elements) ?? [],
            document: n=>{
                var r;
                return n != null && n.project ? ((r = n.project) == null ? void 0 : r.accessibleTeams.elements) ?? [] : n != null && n.initiative ? [] : []
            }
            ,
            oauthClientApproval: ()=>[]
        }) || []
    }
    get grouping() {
        return t5.getNotificationGrouping(this, this.type, {
            isNewInboxBehaviorEnabled: this.user.isNewInboxBehaviorEnabled
        })
    }
    get groupingEntityId() {
        return t5.getNotificationGroupingId(this, this.type, {
            isNewInboxBehaviorEnabled: this.user.isNewInboxBehaviorEnabled
        })
    }
    get movedToInboxAt() {
        return this.unsnoozedAt ?? this.createdAt
    }
    getActor() {
        var e;
        return this.actor ?? ((e = this.externalUserActor) == null ? void 0 : e.value)
    }
    constructor(e=!0) {
        super(e),
        this.subscriptions = new te,
        this.markedUnreadAt = null,
        e && this.makeObservable()
    }
    markAsRead() {
        if (this.readAt === void 0) {
            if (this.markedUnreadAt && Date.now() - this.markedUnreadAt.getTime() < 500)
                return;
            this.readAt = new Date
        }
    }
    markAsUnread() {
        this.readAt !== void 0 && (this.markedUnreadAt = new Date,
        this.readAt = void 0)
    }
    matchInlineFind(e) {
        var s, i, a;
        const n = [this.label];
        Wu.handleNotification(this, {
            issue: o=>{
                o && (n.push(o.identifier),
                n.push(o.title))
            }
            ,
            oauthClientApproval: o=>{
                var l;
                o && (n.push((l = o.oauthApplication) == null ? void 0 : l.name),
                n.push("application approval"))
            }
            ,
            project: o=>{
                o && n.push(o.name)
            }
            ,
            projectUpdate: o=>{
                o && n.push(o.project.name)
            }
            ,
            projectMilestone: o=>{
                o && (n.push(o.project.name),
                n.push(o.name))
            }
            ,
            initiative: o=>{
                o && n.push(o.name)
            }
            ,
            document: o=>{
                o && (n.push(o.title),
                o.project && n.push(o.project.name),
                o.initiative && n.push(o.initiative.name))
            }
        }),
        (i = (s = this.comment) == null ? void 0 : s.value) != null && i.notificationText && n.push(this.comment.value.notificationText),
        n.push(((a = this.getActor()) == null ? void 0 : a.name) || "Linear");
        const r = ml(n.concrete().join(" ")).toLowerCase();
        return e.split(" ").reduce((o,l)=>o && r.indexOf(l) !== -1, !0)
    }
    entityPath() {
        const e = Wu.handleNotification(this, {
            issue: n=>n ? ru(n) : void 0,
            project: n=>n ? bs(n) : void 0,
            projectUpdate: n=>n ? Up(n) : void 0,
            initiative: n=>n ? nu(n, W0.overview) : void 0,
            projectMilestone: n=>n ? Bp(n) : void 0,
            document: n=>n ? mh(n) : void 0,
            oauthClientApproval: ()=>sb(this.user.organization.urlKey, this.id)
        });
        return e || (F.error("Notification.entityPath: Unhandled notification type", void 0, {
            notificationId: this.id
        }),
        sb(this.user.organization.urlKey, this.id))
    }
    isProjectDocumentNotification() {
        return [$.projectMention, $.projectNewComment, $.projectThreadResolved, $.projectCommentMention, $.projectCommentReaction, $.projectMilestoneMention, $.projectMilestoneNewComment, $.projectMilestoneThreadResolved, $.projectMilestoneCommentMention, $.projectMilestoneCommentReaction].includes(this.type)
    }
}
;
Kn([w()], En.prototype, "type", void 0);
Kn([Ue(()=>K, {
    optional: !0,
    nullable: !1
})], En.prototype, "actor", void 0);
Kn([g5(()=>qn, {
    optional: !0,
    nullable: !1
})], En.prototype, "externalUserActor", void 0);
Kn([w()], En.prototype, "sourceMetadata", void 0);
Kn([pe(()=>K, "notifications", {
    optional: !1,
    nullable: !1
})], En.prototype, "user", void 0);
Kn([w({
    serializer: bt
})], En.prototype, "readAt", void 0);
Kn([w({
    serializer: bt
})], En.prototype, "snoozedUntilAt", void 0);
Kn([w({
    serializer: bt
})], En.prototype, "unsnoozedAt", void 0);
Kn([ii(()=>wr, "notifications", {
    persistance: ee.none,
    indexed: !0
})], En.prototype, "subscriptions", void 0);
Kn([Hr(()=>re, "notifications", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], En.prototype, "issue", void 0);
Kn([Ue(()=>on, {
    optional: !0,
    nullable: !1,
    persistance: ee.none,
    indexed: !0
})], En.prototype, "workflowState", void 0);
Kn([Hr(()=>nt, "notifications", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], En.prototype, "comment", void 0);
Kn([g5(()=>nt, {
    optional: !0,
    nullable: !1,
    indexed: !0
})], En.prototype, "parentComment", void 0);
Kn([w()], En.prototype, "reactionEmoji", void 0);
Kn([pe(()=>Kt, "notifications", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], En.prototype, "document", void 0);
Kn([pe(()=>ie, "notifications", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], En.prototype, "project", void 0);
Kn([pe(()=>ot, "notifications", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], En.prototype, "initiative", void 0);
Kn([pe(()=>un, "notifications", {
    nullable: !0,
    indexed: !0
})], En.prototype, "projectUpdate", void 0);
Kn([pe(()=>qt, "notifications", {
    nullable: !0,
    indexed: !0
})], En.prototype, "projectMilestone", void 0);
Kn([pe(()=>Os, "notifications", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], En.prototype, "oauthClientApproval", void 0);
Kn([O], En.prototype, "grouping", null);
Kn([O], En.prototype, "groupingEntityId", null);
En = Kn([We("Notification")], En);
async function Ule(t, e) {
    const n = Mt.gql`
    mutation OauthClientRotateSecret($id: String!) {
      oauthClientRotateSecret(id: $id) {
        success
      }
    }
  `;
    return t.mutate(n, e)
}
function Ps(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class es extends si {
    constructor(e=!0) {
        super(e),
        this.webhookResourceTypes = [],
        e && this.makeObservable()
    }
    rotateSecret() {
        if (this.store)
            return Ule(this.store.graphQLClient, {
                id: this.id
            })
    }
}
Ps([w()], es.prototype, "clientId", void 0);
Ps([w()], es.prototype, "clientSecret", void 0);
Ps([w()], es.prototype, "name", void 0);
Ps([w()], es.prototype, "description", void 0);
Ps([w()], es.prototype, "developer", void 0);
Ps([w()], es.prototype, "developerUrl", void 0);
Ps([w()], es.prototype, "imageUrl", void 0);
Ps([w()], es.prototype, "redirectUris", void 0);
Ps([w()], es.prototype, "publicEnabled", void 0);
Ps([pe(()=>he, "oauthClients", {
    optional: !1,
    nullable: !1
})], es.prototype, "organization", void 0);
Ps([w()], es.prototype, "webhookResourceTypes", void 0);
Ps([w()], es.prototype, "webhookUrl", void 0);
Ps([w()], es.prototype, "webhookSecret", void 0);
es = Ps([We("OauthClient")], es);
var gf;
(function(t) {
    t.saml = "saml",
    t.general = "general"
}
)(gf || (gf = {}));
function r1(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class sa extends It {
    constructor(e=!0) {
        super(e),
        this.verified = !1,
        this.claimed = !1,
        this.authType = gf.general,
        e && this.makeObservable()
    }
    save(e=!1, n) {
        return super.save(e, n)
    }
}
r1([w()], sa.prototype, "name", void 0);
r1([w({
    persistance: ee.none
})], sa.prototype, "verified", void 0);
r1([w({
    persistance: ee.none
})], sa.prototype, "claimed", void 0);
r1([w({
    persistance: ee.updateOnly
})], sa.prototype, "disableOrganizationCreation", void 0);
r1([pe(()=>he, "domains", {
    optional: !1,
    nullable: !1
})], sa.prototype, "organization", void 0);
r1([Ue(()=>K, {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], sa.prototype, "creator", void 0);
r1([w()], sa.prototype, "verificationEmail", void 0);
r1([w()], sa.prototype, "authType", void 0);
sa = r1([We("OrganizationDomain")], sa);
function Qa(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Si extends It {
    get isAdmin() {
        return this.role === Cr.admin
    }
    get isGuest() {
        return this.role === Cr.guest
    }
    delete() {
        return super.delete()
    }
    constructor(e=!0) {
        super(e),
        this.email = "",
        this.teams = new te,
        e && this.makeObservable()
    }
    get roleLabel() {
        switch (this.role) {
        case Cr.admin:
            return "Admin";
        case Cr.guest:
            return "Guest";
        case Cr.user:
            return "Member";
        default:
            throw this.role,
            void 0
        }
    }
    get isAccepted() {
        return !!this.acceptedAt && this.acceptedAt <= new Date
    }
    get isExpired() {
        return this.isAccepted === !0 ? !0 : !!this.expiresAt && this.expiresAt <= new Date
    }
}
Qa([w()], Si.prototype, "email", void 0);
Qa([w({
    enum: Cr
})], Si.prototype, "role", void 0);
Qa([Ue(()=>K, {
    optional: !1,
    nullable: !1
})], Si.prototype, "invitee", void 0);
Qa([Ue(()=>K, {
    optional: !1,
    nullable: !1
})], Si.prototype, "inviter", void 0);
Qa([w({
    serializer: bt,
    persistance: ee.none
})], Si.prototype, "acceptedAt", void 0);
Qa([w({
    serializer: bt,
    persistance: ee.none
})], Si.prototype, "expiresAt", void 0);
Qa([ii(()=>ne, void 0, {
    indexed: !0
})], Si.prototype, "teams", void 0);
Qa([pe(()=>he, "invites", {
    optional: !1,
    nullable: !1
})], Si.prototype, "organization", void 0);
Qa([w({
    serializer: Yi
})], Si.prototype, "metadata", void 0);
Si = Qa([We("OrganizationInvite")], Si);
class Hle extends at {
    constructor(e=!0) {
        super(e),
        this.modelName = "PredefinedView"
    }
    get issues() {
        return (this.group instanceof K ? this.group.assignedIssues : this.group instanceof Ut ? this.group.allIssues : this.group instanceof he ? te.of([]) : this.group.issues).filter([zle, this.filter])
    }
    get teams() {
        return this.group instanceof K ? this.group.organization.accessibleTeams.elements : this.group instanceof he ? this.group.accessibleTeams.elements : this.group instanceof ie ? this.team ? [this.team] : this.group.accessibleTeams.elements : this.group instanceof ne ? [this.group] : this.group instanceof Ut ? this.group.team ? [this.group.team] : this.group.organization ? this.group.organization.accessibleTeams.elements : [] : [this.group.team]
    }
    get cycles() {
        if (this.group instanceof ct)
            return [this.group]
    }
    get stateFilter() {
        var r;
        const e = this.rawFilter.and
          , n = this.rawFilter.state || ((r = e == null ? void 0 : e.find(s=>s.state)) == null ? void 0 : r.state) || void 0;
        if (n !== void 0)
            return s=>T1.filterElement(n, s)
    }
    toggleFavorite() {
        const e = this.favorite;
        if (e)
            return e.delete(),
            !1;
        {
            const n = Rt.create({
                predefinedViewTeam: this.team,
                predefinedViewType: this.favoriteViewType
            });
            return n.save(!0),
            n
        }
    }
    hydrateIssues() {
        let e;
        if (this.group instanceof K)
            e = this.group.assignedIssues.hydrate();
        else if (this.group instanceof ie)
            e = this.group.issues.hydrate();
        else if (this.group instanceof ne)
            e = this.group.issues.hydrate();
        else if (this.group instanceof Ut) {
            if (this.group.childLabels.length)
                return [this.group, ...this.group.childLabels.elements].map(n=>n.issues.hydrate());
            e = this.group.issues.hydrate()
        } else
            this.group instanceof ct && (e = this.group.issues.hydrate());
        return [e ?? Promise.resolve()]
    }
    get favorite() {
        return this.team && this.favoriteViewType && this.store.user.favorites.find(e=>e.predefinedViewTeam === this.team && this.favoriteViewType === e.predefinedViewType)
    }
    get rawFilter() {
        var e;
        return (e = this.filter) == null ? void 0 : e.filter
    }
    initialize({filter: e={}, group: n, team: r, favoriteViewType: s}) {
        this.group = n,
        this.team = r,
        this.favoriteViewType = s,
        this.filter = new T1({
            filter: e
        }),
        this.observePropertyChanges()
    }
}
function zle(t) {
    return !t.isClone
}
function cu(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class ec extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
    setLabel(e) {
        if (e && e !== "")
            this.label = e;
        else if (this.url) {
            const {hostname: n} = new URL(this.url);
            this.label = n.startsWith("www.") ? n.slice(4) : n
        }
    }
}
cu([w()], ec.prototype, "url", void 0);
cu([w()], ec.prototype, "label", void 0);
cu([w()], ec.prototype, "sortOrder", void 0);
cu([pe(()=>ie, "projectLinks", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], ec.prototype, "project", void 0);
cu([Ue(()=>K, {
    optional: !1,
    nullable: !1,
    persistance: ee.none
})], ec.prototype, "creator", void 0);
ec = cu([We("ProjectLink")], ec);
var yf;
(function(t) {
    t.active = "active",
    t.canceled = "canceled",
    t.incomplete = "incomplete",
    t.incompleteExpired = "incomplete_expired",
    t.pastDue = "past_due",
    t.trialing = "trialing",
    t.unpaid = "unpaid"
}
)(yf || (yf = {}));
const ig = class ig {
    static isActiveStatus(e) {
        return this.activeStatuses.includes(e)
    }
    static displayName(e) {
        switch (e) {
        case "active":
            return "Active";
        case "canceled":
            return "Canceled";
        case "incomplete":
            return "Incomplete";
        case "incomplete_expired":
            return "Expired";
        case "past_due":
            return "Past due";
        case "trialing":
            return "Trialing";
        case "unpaid":
            return "Unpaid";
        default:
            return "Unknown"
        }
    }
}
;
ig.activeStatuses = ["active", "past_due", "trialing"];
let Cf = ig;
function da(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class ri extends si {
    get quantity() {
        return zS(this.seats, this.seatsMinimum || 0, this.seatsMaximum || 1 / 0)
    }
    get isActive() {
        return !this.archivedAt && Cf.isActiveStatus(this.stripeStatus)
    }
    get needsAttention() {
        return !this.archivedAt && this.stripeStatus === yf.pastDue
    }
    get cancelationDate() {
        if (!(this.type === A0.free || !this.canceledAt || !this.isActive))
            return this.billingPeriodEnd
    }
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
    get nextBillingDate() {
        if (!(this.canceledAt || !this.isActive))
            return this.billingPeriodEnd
    }
    isChangePending(e) {
        return !!(this.pendingChangeType && this.pendingChangeType === e)
    }
    canDowngradeTo(e) {
        const n = Is.planForSubscription(this.type);
        return e === n ? !1 : Vc.isPlanEqualOrBetterThan(n, e)
    }
    canUpgradeTo(e) {
        const n = Is.planForSubscription(this.type);
        return e === n ? !1 : Vc.isPlanEqualOrBetterThan(e, n)
    }
    get changePending() {
        return !!(this.cancelationDate || this.pendingChangeType)
    }
    get details() {
        const e = Is.planForSubscription(this.type)
          , n = Is.billingPeriodForSubscription(this.type)
          , r = Is.pricePerSeatForSubscription(this.type);
        return {
            planType: e,
            billingPeriod: n,
            monthlyPrice: r
        }
    }
    get billingPeriodEnd() {
        if (this.type === A0.free || !this.isActive)
            return;
        if (this.nextBillingAt)
            return this.nextBillingAt;
        const e = Is.billingPeriodForSubscription(this.type)
          , n = Er(this.createdAt);
        return new Date(n.add(n.diff(Er(), e) + 1, e).epoch)
    }
}
da([w()], ri.prototype, "type", void 0);
da([w()], ri.prototype, "seats", void 0);
da([w()], ri.prototype, "seatsMinimum", void 0);
da([w()], ri.prototype, "seatsMaximum", void 0);
da([w()], ri.prototype, "pendingChangeType", void 0);
da([pe(()=>he, "subscriptions", {
    optional: !1,
    nullable: !1
})], ri.prototype, "organization", void 0);
da([w({
    serializer: bt
})], ri.prototype, "canceledAt", void 0);
da([w({
    serializer: bt
})], ri.prototype, "nextBillingAt", void 0);
da([w({
    persistance: ee.none
})], ri.prototype, "stripeStatus", void 0);
da([w()], ri.prototype, "collectionMethod", void 0);
ri = da([We("Subscription")], ri);
function T5(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class dl extends It {
    constructor(e=!0) {
        super(e),
        this.owner = !1,
        e && this.makeObservable()
    }
}
T5([pe(()=>ne, "memberships", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], dl.prototype, "team", void 0);
T5([pe(()=>K, "teamMemberships", {
    optional: !1,
    nullable: !1
})], dl.prototype, "user", void 0);
T5([w()], dl.prototype, "owner", void 0);
T5([w()], dl.prototype, "sortOrder", void 0);
dl = T5([We("TeamMembership")], dl);
class $2 {
    static getCurrentAndNextScheduleEntry(e=[]) {
        const n = new Date;
        let r;
        const s = i=>i instanceof Date ? i : n0(i);
        for (const i of e) {
            const a = s(i.startsAt)
              , o = i.endsAt ? s(i.endsAt) : void 0;
            if (a <= n && (!o || n < o) && (r = i),
            a > n)
                return [r, i]
        }
        return [r, void 0]
    }
    static getScheduleEntriesWithIndex(e) {
        if (e === void 0)
            return [];
        const [n,r] = this.getCurrentAndNextScheduleEntry(e)
          , s = e.findIndex(o=>o === n)
          , i = e.findIndex(o=>o === r);
        if (s === -1 && i === -1)
            return [];
        const a = s !== -1 ? s : i;
        return e.map((o,l)=>{
            let d = l - a;
            return d >= 0 && s === -1 && d++,
            [o, d]
        }
        )
    }
}
function s1(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class _i extends at {
    get originName() {
        return this.integration ? this.integration.name : this.oauthApplication ? this.oauthApplication.name : this.oauthClientId ? (this.hydrateOAuthApplicationInfo(),
        "OAuth app") : "API"
    }
    constructor(e=!0) {
        super(e),
        this.triageResponsibilities = new te,
        e && this.makeObservable()
    }
    get currentAndNextScheduleEntries() {
        const [e,n] = $2.getCurrentAndNextScheduleEntry(this.entries);
        return [this.mapEntry(e, 0), this.mapEntry(n, 1)]
    }
    getRecentScheduleEntries(e) {
        const {entries: n} = this;
        if (!n)
            return [];
        const r = $2.getScheduleEntriesWithIndex(n).map(([a,o])=>this.mapEntry(a, o)).concrete()
          , s = r.findIndex(a=>a.position === "current" || a.position === "next");
        if (s === -1)
            return [];
        const i = Math.max(s - e.before, 0);
        return r.slice(i).slice(0, e.after + e.before + 1)
    }
    getFutureShiftForUser(e) {
        const {entries: n} = this;
        return n ? $2.getScheduleEntriesWithIndex(n).map(([s,i])=>s.userId === e.id && i > 1 ? this.mapEntry(s, i) : void 0).concrete()[0] : void 0
    }
    getRequiredIntegrationAction() {
        var i, a;
        const {integration: e} = this;
        if (!e)
            return;
        const n = e.service;
        if (!fF(n))
            throw new Error(`Invariant: Unexpected integration service ${n}`);
        if (!((a = (i = e.settings) == null ? void 0 : i[n]) == null ? void 0 : a.apiFailedWithUnauthorizedErrorAt))
            return;
        let s = "";
        if (n === G.pagerDuty || n === G.opsgenie)
            s = zz(n, this.organization);
        else
            throw new zt(n);
        return {
            url: s,
            title: `Reconnect ${e.name} to synchronize triage responsibility`,
            subtitle: "Reconnect integration"
        }
    }
    async hydrateOAuthApplicationInfo() {
        if (!(!this.oauthClientId || this.oauthApplication))
            try {
                const e = await WE(this.store.graphQLClient, [this.oauthClientId]);
                lt(()=>{
                    this.oauthApplication = e.applicationInfoByIds.length > 0 ? e.applicationInfoByIds[0] : void 0
                }
                )
            } catch {
                return
            }
    }
    mapEntry(e, n) {
        if (!e)
            return;
        let r = null;
        return n === -1 ? r = "previous" : n === 0 ? r = "current" : n === 1 && (r = "next"),
        {
            startsAt: typeof e.startsAt == "string" ? n0(e.startsAt) : e.startsAt,
            endsAt: typeof e.endsAt == "string" ? n0(e.endsAt) : e.endsAt,
            user: e != null && e.userId ? this.store.findById(K, e.userId) : void 0,
            externalUserEmail: e.userEmail,
            position: r
        }
    }
}
s1([w()], _i.prototype, "name", void 0);
s1([w({
    serializer: Yi
})], _i.prototype, "entries", void 0);
s1([pe(()=>Jr, "timeSchedules", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], _i.prototype, "integration", void 0);
s1([w()], _i.prototype, "oauthClientId", void 0);
s1([pe(()=>he, "timeSchedules", {
    optional: !1,
    nullable: !1
})], _i.prototype, "organization", void 0);
s1([w()], _i.prototype, "externalId", void 0);
s1([w()], _i.prototype, "externalUrl", void 0);
s1([xe()], _i.prototype, "triageResponsibilities", void 0);
_i = s1([We("TimeSchedule")], _i);
var uk;
(function(t) {
    t.assign = "assign",
    t.notify = "notify"
}
)(uk || (uk = {}));
class hk {
    static getCurrentUserId(e) {
        const {manualSelection: n, timeSchedule: r} = e;
        if (n) {
            const {assignmentIndex: s, userIds: i} = n;
            return i.length === 1 ? i[0] : s === void 0 ? void 0 : i[s]
        } else if (r) {
            const [s] = $2.getCurrentAndNextScheduleEntry(r.entries || []);
            return s == null ? void 0 : s.userId
        }
    }
    static getUserIds(e) {
        var s;
        const {manualSelection: n, timeSchedule: r} = e;
        return n ? n.userIds : r ? ((s = r.entries) == null ? void 0 : s.map(i=>i.userId).filter(i=>i !== void 0)) || [] : []
    }
}
function L5(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class ul extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
    get configType() {
        return this.manualSelection ? "manualSelection" : this.timeSchedule ? "schedule" : void 0
    }
    get currentUser() {
        const e = hk.getCurrentUserId(this);
        return e ? this.store.findById(K, e) : void 0
    }
    async persistChanges() {
        if (this.manualSelection && this.manualSelection.userIds.length === 0 && !this.timeSchedule) {
            if (!this.team.triageResponsibility)
                return;
            await this.delete().result() === Ro.completed && (this.id = Qc())
        } else
            this.save(!0)
    }
    get userIds() {
        return hk.getUserIds(this)
    }
    get users() {
        return this.userIds.map(e=>this.store.findById(K, e)).concrete()
    }
    addUser(e) {
        const {manualSelection: n, timeSchedule: r} = this;
        if (!n && !r)
            this.manualSelection = {
                userIds: [e.id]
            };
        else if (n)
            this.manualSelection = {
                ...n,
                userIds: [...n.userIds, e.id]
            };
        else
            throw new Error("Cannot manipulate schedule")
    }
    removeUser(e) {
        const {manualSelection: n, timeSchedule: r} = this;
        if (!(!n && !r))
            if (n) {
                const s = n.userIds.filter(i=>i !== e.id);
                this.manualSelection = {
                    ...n,
                    userIds: s
                }
            } else
                throw new Error("Cannot manipulate schedule")
    }
}
L5([Dt(()=>ne, "triageResponsibility", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], ul.prototype, "team", void 0);
L5([w()], ul.prototype, "action", void 0);
L5([w({
    serializer: Yi
})], ul.prototype, "manualSelection", void 0);
L5([pe(()=>_i, "triageResponsibilities", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], ul.prototype, "timeSchedule", void 0);
ul = L5([We("TriageResponsibility")], ul);
function i1(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class ia extends It {
    constructor(e=!0) {
        super(e),
        this.enabled = !1,
        this.activities = [],
        this.sortOrder = 0,
        e && this.makeObservable()
    }
    get isTeamWorkflow() {
        return !!this.team
    }
}
i1([w()], ia.prototype, "name", void 0);
i1([w()], ia.prototype, "description", void 0);
i1([w()], ia.prototype, "enabled", void 0);
i1([w({
    serializer: Yi
})], ia.prototype, "activities", void 0);
i1([w({
    serializer: hn
})], ia.prototype, "schedule", void 0);
i1([pe(()=>ne, "workflowCronJobDefinitions", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], ia.prototype, "team", void 0);
i1([Ue(()=>K, {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], ia.prototype, "creator", void 0);
i1([w()], ia.prototype, "sortOrder", void 0);
ia = i1([We("WorkflowCronJobDefinition")], ia);
var bf;
(function(t) {
    t.sla = "sla",
    t.custom = "custom",
    t.viewSubscription = "viewSubscription"
}
)(bf || (bf = {}));
var vf;
(function(t) {
    t.entityCreated = "entityCreated",
    t.entityUpdated = "entityUpdated",
    t.entityCreatedOrUpdated = "entityCreatedOrUpdated",
    t.entityRemoved = "entityRemoved",
    t.entityUnarchived = "entityUnarchived"
}
)(vf || (vf = {}));
var wf;
(function(t) {
    t.issue = "Issue",
    t.project = "Project"
}
)(wf || (wf = {}));
const Oi = class Oi {
    static getAllowedKeysForWorkflowType(e) {
        switch (e) {
        case "sla":
            return new Set(Oi.allowedIssueFilterKeysInSlaCondition);
        default:
            return new Set(Oi.allowedIssueFilterKeysInCondition)
        }
    }
}
;
Oi.maxNameLength = 64,
Oi.maxGroupNameLength = 64,
Oi.maxDescriptionLength = 255,
Oi.maxConditionCount = 8,
Oi.maxActivityCount = 8,
Oi.allowedIssueFilterKeysInSlaCondition = ["team", "state", "assignee", "creator", "priority", "labels", "project", "sourceMetadata", "lastAppliedTemplate"],
Oi.allowedIssueFilterKeysInCondition = ["team", "state", "assignee", "creator", "priority", "labels", "project", "subscribers", "slaStatus", "cycle", "parent", "searchableContent", "attachments", "relations", "children", "hasBlockedByRelations", "hasBlockingRelations", "hasRelatedRelations", "hasDuplicateRelations", "estimate", "sourceMetadata", "lastAppliedTemplate", "dueDate", "updatedAt", "createdAt", "startedAt", "completedAt", "triagedAt"];
let fk = Oi;
function ws(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Ur extends It {
    constructor(e=!0) {
        super(e),
        this.enabled = !1,
        this.activities = [],
        this.sortOrder = 0,
        e && this.makeObservable()
    }
    get isTeamWorkflow() {
        return !!this.team
    }
}
ws([w()], Ur.prototype, "name", void 0);
ws([w()], Ur.prototype, "groupName", void 0);
ws([w()], Ur.prototype, "description", void 0);
ws([w({
    enum: bf
})], Ur.prototype, "type", void 0);
ws([w({
    enum: vf
})], Ur.prototype, "trigger", void 0);
ws([w({
    enum: wf
})], Ur.prototype, "triggerType", void 0);
ws([w({
    serializer: Yi
})], Ur.prototype, "conditions", void 0);
ws([w()], Ur.prototype, "enabled", void 0);
ws([w({
    serializer: Yi
})], Ur.prototype, "activities", void 0);
ws([w({
    serializer: hn
})], Ur.prototype, "schedule", void 0);
ws([pe(()=>he, "allWorkflowDefinitions", {
    optional: !1,
    nullable: !1,
    persistance: ee.none
})], Ur.prototype, "organization", void 0);
ws([pe(()=>ne, "workflowDefinitions", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Ur.prototype, "team", void 0);
ws([Ue(()=>K, {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], Ur.prototype, "creator", void 0);
ws([w()], Ur.prototype, "sortOrder", void 0);
Ur = ws([We("WorkflowDefinition")], Ur);
function Xa(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Ii extends It {
    get description() {
        switch (this.anchorType) {
        case Mn.start:
            switch (this.relatedAnchorType) {
            case Mn.start:
                return cr.startsWith;
            case Mn.end:
            case Mn.milestone:
                return cr.blockedBy;
            default:
                return this.relatedAnchorType,
                ""
            }
        case Mn.end:
        case Mn.milestone:
            switch (this.relatedAnchorType) {
            case Mn.start:
            case Mn.milestone:
                return cr.blocking;
            case Mn.end:
                return cr.endsWith;
            default:
                return this.relatedAnchorType,
                ""
            }
        default:
            return this.anchorType,
            ""
        }
    }
    get inverseDescription() {
        switch (this.relatedAnchorType) {
        case Mn.start:
        case Mn.milestone:
            switch (this.anchorType) {
            case Mn.start:
                return cr.startsWith;
            case Mn.end:
            case Mn.milestone:
                return cr.blockedBy;
            default:
                return this.anchorType,
                ""
            }
        case Mn.end:
            switch (this.anchorType) {
            case Mn.start:
            case Mn.milestone:
                return cr.blocking;
            case Mn.end:
                return cr.endsWith;
            default:
                return this.anchorType,
                ""
            }
        default:
            return this.relatedAnchorType,
            ""
        }
    }
    get isViolated() {
        const e = this.project
          , n = this.projectMilestone
          , r = this.relatedProject
          , s = this.relatedProjectMilestone;
        if (e.isDone || r.isDone)
            return !1;
        function i(l, d, u) {
            switch (l) {
            case Mn.start:
                return d.startDate ?? d.targetDate;
            case Mn.milestone:
                return (u == null ? void 0 : u.targetDate) ?? d.startDate ?? d.targetDate;
            case Mn.end:
                return d.targetDate ?? d.startDate;
            default:
                return
            }
        }
        const a = i(this.anchorType, e, n)
          , o = i(this.relatedAnchorType, r, s);
        if (!a || !o)
            return !1;
        switch (this.description) {
        case cr.blocking:
            return Do(a.toLocalDate(), o.toLocalDate());
        case cr.blockedBy:
            return Do(o.toLocalDate(), a.toLocalDate());
        case cr.endsWith:
        case cr.startsWith:
        case "":
            return !1;
        default:
            return this.description,
            !1
        }
    }
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
Xa([w({
    enum: g9
})], Ii.prototype, "type", void 0);
Xa([pe(()=>ie, "relations", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Ii.prototype, "project", void 0);
Xa([pe(()=>qt, "relations", {
    nullable: !0,
    indexed: !0
})], Ii.prototype, "projectMilestone", void 0);
Xa([w({
    enum: Mn
})], Ii.prototype, "anchorType", void 0);
Xa([pe(()=>ie, "inverseRelations", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Ii.prototype, "relatedProject", void 0);
Xa([pe(()=>qt, "inverseRelations", {
    nullable: !0,
    indexed: !0
})], Ii.prototype, "relatedProjectMilestone", void 0);
Xa([w({
    enum: Mn
})], Ii.prototype, "relatedAnchorType", void 0);
Xa([Ue(()=>K, {
    nullable: !0,
    persistance: ee.none
})], Ii.prototype, "user", void 0);
Xa([O], Ii.prototype, "isViolated", null);
Ii = Xa([We("ProjectRelation")], Ii);
function lu(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class qa extends It {
    get markdownContent() {
        return this.bodyData ? Po.serialize(this.bodyData) : ""
    }
    get weekKey() {
        return "" + Pk(this.date.toLocalDate()) + this.date.toLocalDate().getFullYear()
    }
    static create(e) {
        const n = qa.createEmpty();
        return n.user = e.user,
        n.date = new Date().toTimelessDate(),
        n
    }
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
lu([w({
    serializer: hn,
    shallowObservation: !0
})], qa.prototype, "bodyData", void 0);
lu([pe(()=>K, "diaryEntries", {
    persistance: ee.none,
    optional: !1,
    nullable: !1
})], qa.prototype, "user", void 0);
lu([w({
    serializer: Jo
})], qa.prototype, "date", void 0);
lu([O], qa.prototype, "markdownContent", null);
lu([O], qa.prototype, "weekKey", null);
qa = lu([We("DiaryEntry")], qa);
function ac(t, e, n, r) {
    var s = arguments.length, i = s < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, n) : r, a;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
        i = Reflect.decorate(t, e, n, r);
    else
        for (var o = t.length - 1; o >= 0; o--)
            (a = t[o]) && (i = (s < 3 ? a(i) : s > 3 ? a(e, n, i) : a(e, n)) || i);
    return s > 3 && i && Object.defineProperty(e, n, i),
    i
}
class Wa extends It {
    constructor(e=!0) {
        super(e),
        e && this.makeObservable()
    }
}
ac([w()], Wa.prototype, "comment", void 0);
ac([pe(()=>ie, "reminders", {
    optional: !1,
    nullable: !1,
    indexed: !0
})], Wa.prototype, "project", void 0);
ac([pe(()=>re, "reminders", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Wa.prototype, "issue", void 0);
ac([pe(()=>Kt, "reminders", {
    optional: !0,
    nullable: !1,
    indexed: !0
})], Wa.prototype, "document", void 0);
ac([pe(()=>K, "reminders", {
    nullable: !1,
    optional: !1,
    persistance: ee.none
})], Wa.prototype, "user", void 0);
ac([w({
    serializer: bt
})], Wa.prototype, "remindAt", void 0);
ac([w({
    serializer: Yi
})], Wa.prototype, "schedule", void 0);
Wa = ac([We("Reminder")], Wa);
const Zle = [ll, Gd, mr, Y1, nt, Ke, ct, qa, Kt, en, Ha, Yr, qo, Wo, Go, Qr, qn, kn, Rt, Ko, X1, ot, Uo, Jr, Br, J1, re, Zt, tt, Rn, Ut, Nr, cl, En, wr, es, Os, he, sa, Si, Hle, ie, hr, H1, ec, qt, Ii, un, Zd, Wa, cn, Bo, ri, ne, zd, dl, On, _i, ul, K, J, Ot, Xr, ia, Ur, on];
function qle() {
    Zle.forEach(t=>{
        try {
            new t
        } catch {}
    }
    )
}
g8.preloadComponentsForPath(self.document.location.pathname);
qle();
at.store = Wr(); // the as.store is created here
gj({
    enforceActions: "never"
});
const Wle = ()=>H2(()=>import("./Root.hash-_Q_JDMPl.js").then(t=>t.o4), __vite__mapDeps([4, 2, 1, 3, 5]), import.meta.url).then(t=>t.default()).catch(t=>{
    var n;
    console.log("Root loading error,", t);
    const e = self.document.getElementById("loadingText");
    e && (e.innerHTML = `
          <div class="root-loading-error">
            <p>We detected a network error. Something might be wrong with your internet connection.</p>
            <p>Try <a href=".">reloading</a> the Linear app. Don't hesitate to reach out to us if this problem persists: <a href="mailto:support@linear.app">support@linear.app</a></p>
          </div>
        `,
    self.document.body.classList.add("loadingText"),
    (n = self.document.getElementById("loading")) == null || n.style.setProperty("pointer-events", "initial"))
}
)
  , Gle = "/client/sw.js" + (typeof SW_HASH < "u" && SW_HASH ? `?${SW_HASH}` : "");
if ("serviceWorker"in navigator) {
    const t = new MessageChannel;
    t.port1.onmessage = e=>{
        var n;
        try {
            if (((n = e.data) == null ? void 0 : n.type) === "error") {
                const r = e.data.metadata || (e.data.message ? {
                    message: e.data.messsage
                } : void 0);
                F.error("Service worker error", e.data.error, r)
            }
        } catch (r) {
            F.info("Unknown message from service worker", r)
        }
    }
    ,
    window.addEventListener("load", async()=>{
        navigator.serviceWorker.register(Gle, {
            scope: "/",
            type: "module"
        }).then(e=>{
            Wr().pushNotification.setServiceWorkerRegistration(e),
            C3().setServiceWorkerRegistration(e)
        }
        ).then(()=>{
            var e, n;
            (e = navigator.serviceWorker.controller) == null || e.postMessage("init", [t.port2]),
            (n = navigator.serviceWorker.controller) == null || n.postMessage(Wr().settings.disableServiceWorkerCaching === !0 ? "disable-offline-caching" : "enable-offline-caching")
        }
        ).catch(e=>{
            Wr().pushNotification.setServiceWorkerRegistration(void 0),
            C3().setServiceWorkerRegistration(void 0)
        }
        )
    }
    )
}
mL(V3.versionString(ft.BUILD_REVISION));
Ff && window.addEventListener("touchmove", t=>{
    t.scale !== 1 && t.preventDefault()
}
, {
    passive: !1
});
VO();
Wle();
export {yn as $, nD as A, Qi as B, g8 as C, Ta as D, Ca as E, Cl as F, Ft as G, md as H, x as I, aue as J, Fc as K, $r as L, ep as M, KC as N, $D as O, Zr as P, nue as Q, yl as R, Q3 as S, Xe as T, cue as U, GC as V, rue as W, GH as X, KU as Y, ZC as Z, H2 as _, Sde as a, L_ as a$, Ga as a0, Ld as a1, Gs as a2, gs as a3, ide as a4, F8 as a5, hN as a6, DD as a7, vK as a8, q3 as a9, Po as aA, G3 as aB, xt as aC, Hi as aD, mde as aE, X0 as aF, Yde as aG, at as aH, be as aI, Jn as aJ, F as aK, P9 as aL, pl as aM, Mde as aN, Xt as aO, GP as aP, Ed as aQ, Lc as aR, Xn as aS, ta as aT, A1 as aU, ds as aV, re as aW, Pb as aX, uh as aY, ch as aZ, wJ as a_, Qf as aa, Jle as ab, zS as ac, rD as ad, Tn as ae, OR as af, ql as ag, Jf as ah, Oz as ai, $x as aj, Bx as ak, Lt as al, li as am, f6 as an, Hde as ao, r4 as ap, lL as aq, Ff as ar, Cc as as, Y2 as at, eue as au, K3 as av, Qde as aw, o4 as ax, j1 as ay, Iu as az, pn as b, xD as b$, ru as b0, C4 as b1, Rb as b2, Di as b3, ree as b4, pJ as b5, Q0 as b6, $o as b7, io as b8, xl as b9, Pc as bA, tde as bB, vR as bC, NN as bD, HN as bE, fq as bF, Qd as bG, zt as bH, zo as bI, eI as bJ, IR as bK, lD as bL, vF as bM, YF as bN, J1e as bO, gw as bP, gde as bQ, zue as bR, o1 as bS, $f as bT, qk as bU, f$ as bV, jc as bW, VX as bX, UX as bY, aV as bZ, Wf as b_, Vp as ba, _D as bb, bV as bc, BR as bd, Kf as be, Ey as bf, fh as bg, O9 as bh, U_ as bi, Y0 as bj, G4 as bk, qp as bl, qe as bm, mn as bn, mb as bo, I4 as bp, _4 as bq, ZJ as br, ie as bs, qt as bt, Kt as bu, mw as bv, yr as bw, mh as bx, v4 as by, YG as bz, ze as c, su as c$, Pf as c0, h$ as c1, c$ as c2, Hy as c3, Kc as c4, Wue as c5, ic as c6, Ke as c7, x1 as c8, UV as c9, Me as cA, vn as cB, It as cC, Ro as cD, d2 as cE, kd as cF, Lo as cG, Zt as cH, Fa as cI, k1e as cJ, tD as cK, gh as cL, j as cM, nt as cN, Zp as cO, zN as cP, zJ as cQ, Ut as cR, ab as cS, un as cT, K5e as cU, L9 as cV, nu as cW, bs as cX, Np as cY, z_ as cZ, $d as c_, KZ as ca, En as cb, Wu as cc, ct as cd, GW as ce, SV as cf, cn as cg, rp as ch, ot as ci, eV as cj, SD as ck, ne as cl, ip as cm, K as cn, bi as co, ht as cp, XJ as cq, Yf as cr, Ob as cs, bde as ct, eD as cu, r$ as cv, Qe as cw, Qn as cx, en as cy, Lu as cz, BN as d, O4 as d$, H_ as d0, ph as d1, ti as d2, Up as d3, ye as d4, G as d5, zz as d6, K0e as d7, UR as d8, l$ as d9, o4e as dA, ck as dB, M8 as dC, nJ as dD, sy as dE, TD as dF, DI as dG, bI as dH, Sh as dI, Rie as dJ, Xp as dK, nc as dL, hh as dM, Ii as dN, g9 as dO, Mn as dP, nI as dQ, D_ as dR, Nl as dS, F9 as dT, i9 as dU, N2e as dV, it as dW, wi as dX, hr as dY, F2e as dZ, ko as d_, Ys as da, Xoe as db, Z6 as dc, Mt as dd, Ao as de, iV as df, Bo as dg, u0e as dh, Uo as di, At as dj, IW as dk, kV as dl, h9 as dm, K1 as dn, l1e as dp, $ as dq, Ode as dr, Ir as ds, j0 as dt, Tde as du, wr as dv, o9 as dw, ft as dx, HR as dy, s_ as dz, Ede as e, w9 as e$, T4 as e0, R4 as e1, Nr as e2, BV as e3, On as e4, k8 as e5, u0 as e6, qo as e7, qi as e8, ur as e9, Rn as eA, pX as eB, I5e as eC, JS as eD, wZ as eE, vZ as eF, n_ as eG, yZ as eH, gZ as eI, uX as eJ, mZ as eK, pZ as eL, _p as eM, p5 as eN, uZ as eO, E_ as eP, Z0 as eQ, _X as eR, ts as eS, tf as eT, E9 as eU, I_ as eV, yde as eW, b9 as eX, $i as eY, Ma as eZ, v9 as e_, W5e as ea, g5e as eb, e2e as ec, Iue as ed, J0e as ee, cJ as ef, J5e as eg, c2e as eh, Lp as ei, Q2 as ej, te as ek, de as el, LD as em, J1 as en, qu as eo, hee as ep, G5e as eq, Ot as er, Hle as es, Ui as et, Kb as eu, rJ as ev, y2e as ew, h0 as ex, ke as ey, WE as ez, Ni as f, S2 as f$, gY as f0, hs as f1, Gc as f2, Db as f3, Mue as f4, C9 as f5, Oa as f6, G0 as f7, Pee as f8, aI as f9, Cr as fA, T0e as fB, mR as fC, Si as fD, c9 as fE, AR as fF, o1e as fG, V8 as fH, w4 as fI, v5e as fJ, Wr as fK, Cle as fL, sJ as fM, W0 as fN, os as fO, Eue as fP, D2 as fQ, gn as fR, Lde as fS, Z_ as fT, S4 as fU, q5e as fV, fJ as fW, B_ as fX, Y5e as fY, hJ as fZ, uJ as f_, CV as fa, iX as fb, ID as fc, rX as fd, k9 as fe, q0 as ff, Ze as fg, jue as fh, Er as fi, on as fj, bQ as fk, v2e as fl, Ae as fm, Gb as fn, pd as fo, Vb as fp, m2e as fq, Go as fr, Mu as fs, pc as ft, s5e as fu, U5e as fv, Rd as fw, ade as fx, et as fy, gf as fz, c5 as g, HQ as g$, KN as g0, t2e as g1, l0e as g2, Kue as g3, rde as g4, pue as g5, q4 as g6, Sn as g7, j$ as g8, ks as g9, dl as gA, oJ as gB, $p as gC, HV as gD, U0e as gE, dc as gF, WP as gG, FP as gH, a$ as gI, Fde as gJ, Gue as gK, o3 as gL, C5 as gM, el as gN, e0e as gO, qQ as gP, yu as gQ, P8 as gR, WQ as gS, Que as gT, hx as gU, Fie as gV, um as gW, d9 as gX, y9 as gY, X0e as gZ, Yue as g_, lh as ga, zV as gb, sde as gc, d2e as gd, u2e as ge, Rde as gf, Es as gg, N_ as gh, C5e as gi, iJ as gj, R5e as gk, P5e as gl, $5e as gm, Z5e as gn, B5e as go, f5e as gp, tK as gq, b5e as gr, l5e as gs, h5e as gt, c5e as gu, ED as gv, fue as gw, Q5e as gx, H5e as gy, Jl as gz, $1 as h, ri as h$, KR as h0, nV as h1, mr as h2, Pi as h3, Tc as h4, Yn as h5, fde as h6, gJ as h7, k2e as h8, v1 as h9, ib as hA, iI as hB, c_ as hC, lR as hD, Gy as hE, m5 as hF, Jc as hG, _n as hH, z5e as hI, Tt as hJ, D$ as hK, f8 as hL, a2e as hM, kR as hN, vde as hO, js as hP, pV as hQ, FN as hR, gce as hS, V3 as hT, p0e as hU, g0e as hV, hue as hW, y0e as hX, $W as hY, d5e as hZ, AZ as h_, sI as ha, e7 as hb, X4 as hc, e4 as hd, G_ as he, Y3 as hf, uV as hg, _2e as hh, Y_ as hi, __ as hj, o0e as hk, I2e as hl, Dq as hm, GJ as hn, K2 as ho, Rp as hp, LR as hq, Px as hr, Ux as hs, ev as ht, G1 as hu, HJ as hv, Qx as hw, $2e as hx, wo as hy, gm as hz, DR as i, aee as i$, Vde as i0, T2e as i1, O2e as i2, C1e as i3, u3 as i4, cl as i5, hv as i6, hV as i7, O_ as i8, a1 as i9, qS as iA, Gz as iB, ny as iC, x4 as iD, Xde as iE, tY as iF, db as iG, a9 as iH, QQ as iI, Op as iJ, i_ as iK, XS as iL, e_ as iM, t_ as iN, Ip as iO, f0 as iP, r_ as iQ, Yr as iR, Y2e as iS, Bde as iT, R2e as iU, A2e as iV, j2e as iW, M2e as iX, fi as iY, O as iZ, fs as i_, VR as ia, WR as ib, Sp as ic, qZ as id, er as ie, Bie as ig, ZR as ih, F1 as ii, lue as ij, wl as ik, Z3 as il, ml as im, Hp as io, T1 as ip, g2e as iq, l9 as ir, ode as is, Xf as it, Ude as iu, JP as iv, XP as iw, KP as ix, oue as iy, Fb as iz, Fx as j, P1 as j$, P2e as j0, _1 as j1, qJ as j2, iL as j3, F5e as j4, N5e as j5, Q0e as j6, St as j7, Gt as j8, Y0e as j9, kq as jA, h0e as jB, z0e as jC, P0e as jD, R0e as jE, $0e as jF, gl as jG, z2e as jH, $re as jI, Fre as jJ, B2e as jK, E5e as jL, ZS as jM, Ss as jN, d0e as jO, V5e as jP, i0e as jQ, pW as jR, w2e as jS, cK as jT, Ko as jU, o5e as jV, t4 as jW, Is as jX, $e as jY, ul as jZ, _i as j_, n0e as ja, a5e as jb, eX as jc, A9 as jd, Sue as je, t5e as jf, r5e as jg, Fp as jh, Zue as ji, Qc as jj, s0e as jk, e5e as jl, k4 as jm, rf as jn, Y4 as jo, qy as jp, c0e as jq, a0e as jr, Vc as js, Jr as jt, nN as ju, uk as jv, Die as jw, hie as jx, kne as jy, fZ as jz, wde as k, x5e as k$, H0e as k0, Wde as k1, qde as k2, Gde as k3, q0e as k4, Z0e as k5, Zde as k6, mne as k7, np as k8, J0 as k9, lb as kA, Ide as kB, xY as kC, Hue as kD, vY as kE, cO as kF, Ks as kG, Aue as kH, Pre as kI, Bne as kJ, Une as kK, Fne as kL, UN as kM, Ew as kN, C3 as kO, wue as kP, bue as kQ, xL as kR, QN as kS, pK as kT, L2e as kU, _de as kV, nde as kW, Rce as kX, u5e as kY, p5e as kZ, k5e as k_, Xi as ka, Ad as kb, x2e as kc, i5e as kd, Wz as ke, Fn as kf, due as kg, I8 as kh, VP as ki, Bp as kj, AV as kk, _u as kl, mo as km, jde as kn, Ho as ko, E2e as kp, bR as kq, Ve as kr, Bu as ks, Rt as kt, mt as ku, he as kv, dI as kw, wY as kx, $b as ky, Yc as kz, qV as l, wte as l$, m5e as l0, D5e as l1, y5e as l2, S5e as l3, _5e as l4, w5e as l5, F_ as l6, j8 as l7, n4e as l8, r4e as l9, kde as lA, wR as lB, que as lC, kn as lD, r2e as lE, s2e as lF, i2e as lG, n2e as lH, yE as lI, K2e as lJ, xZ as lK, $P as lL, Roe as lM, t0e as lN, H3 as lO, YQ as lP, qn as lQ, cr as lR, cL as lS, jR as lT, ZN as lU, OD as lV, oI as lW, qr as lX, I2 as lY, Ree as lZ, d1 as l_, MD as la, j5e as lb, K0 as lc, px as ld, MP as le, j_ as lf, Pde as lg, o2e as lh, fx as li, Q4 as lj, Na as lk, n$ as ll, $U as lm, Hs as ln, Us as lo, MU as lp, x6 as lq, zB as lr, Aa as ls, b4 as lt, qs as lu, zL as lv, iue as lw, oF as lx, TX as ly, mF as lz, w8 as m, p2e as m$, _2 as m0, C2e as m1, Kde as m2, f9 as m3, eJ as m4, Lue as m5, Oue as m6, Bue as m7, Nue as m8, Vue as m9, kW as mA, yo as mB, m8 as mC, bw as mD, vw as mE, _r as mF, vm as mG, K1e as mH, dn as mI, Oo as mJ, Jt as mK, Wa as mL, hw as mM, ki as mN, bo as mO, cD as mP, Jue as mQ, Xc as mR, i4 as mS, a4 as mT, jD as mU, lr as mV, pde as mW, pee as mX, Wk as mY, Mce as mZ, J as m_, Rue as ma, $ue as mb, Uue as mc, Pue as md, Fue as me, g3 as mf, m3 as mg, Hu as mh, y3 as mi, Pd as mj, Nde as mk, z2 as ml, A1e as mm, lde as mn, cde as mo, dde as mp, DL as mq, nB as mr, vue as ms, wL as mt, cf as mu, p8 as mv, df as mw, WN as mx, A0 as my, kue as mz, xde as n, H2e as n$, IP as n0, R_ as n1, Bi as n2, QJ as n3, Xz as n4, V_ as n5, ol as n6, c1e as n7, i4e as n8, dw as n9, uG as nA, l2e as nB, xue as nC, Pu as nD, tt as nE, Qr as nF, X2e as nG, e4e as nH, J2e as nI, f2e as nJ, A_ as nK, EQ as nL, l0 as nM, JN as nN, XN as nO, tV as nP, E0e as nQ, Wb as nR, xV as nS, Cde as nT, Mne as nU, W2e as nV, xa as nW, hde as nX, GL as nY, N1e as nZ, U2e as n_, s4e as na, _P as nb, jP as nc, EP as nd, AP as ne, TP as nf, LP as ng, X2 as nh, Dle as ni, hK as nj, Q2e as nk, T1e as nl, G2e as nm, u1 as nn, hd as no, Fy as np, A$ as nq, mue as nr, RP as ns, af as nt, o$ as nu, a4e as nv, f0e as nw, pb as nx, HD as ny, Os as nz, Dde as o, C0e as o$, Z2e as o0, M5e as o1, v0e as o2, T5e as o3, O5e as o4, L5e as o5, Gd as o6, B9 as o7, uue as o8, es as o9, Yy as oA, b0e as oB, Of as oC, oo as oD, $8 as oE, Zs as oF, Ky as oG, N0e as oH, E0 as oI, sa as oJ, XX as oK, Cue as oL, gue as oM, yue as oN, G0e as oO, L0e as oP, W0e as oQ, ude as oR, YN as oS, D0e as oT, cw as oU, h3 as oV, wq as oW, $de as oX, LZ as oY, A0e as oZ, ede as o_, uw as oa, Cw as ob, Xr as oc, j0e as od, U1 as oe, r0e as of, YT as og, x0e as oh, K$ as oi, n4 as oj, w0e as ok, Xue as ol, yb as om, yf as on, FZ as oo, gb as op, u_ as oq, pne as or, Wo as os, k0e as ot, I0e as ou, _0e as ov, M0e as ow, nK as ox, O0e as oy, F0e as oz, us as p, Yee as p$, xd as p0, qz as p1, XL as p2, bf as p3, Ur as p4, vf as p5, wf as p6, fk as p7, A5e as p8, nd as p9, AD as pA, _V as pB, RV as pC, PV as pD, s4 as pE, lN as pF, t4e as pG, o_ as pH, Yq as pI, D2e as pJ, b$ as pK, U1e as pL, lQ as pM, I9 as pN, Se as pO, _a as pP, Oe as pQ, Pn as pR, rV as pS, dV as pT, YL as pU, Sb as pV, xb as pW, b2e as pX, Z4 as pY, La as pZ, Nee as p_, X1 as pa, dk as pb, h2e as pc, sp as pd, fV as pe, yV as pf, gV as pg, mV as ph, nq as pi, X5e as pj, qa as pk, bZ as pl, m0e as pm, sq as pn, VW as po, zde as pp, KW as pq, S0e as pr, Ade as ps, uz as pt, yF as pu, Due as pv, ob as pw, tp as px, vV as py, wV as pz, Fo as q, go as q$, Kee as q0, Vee as q1, Qee as q2, E2 as q3, $ee as q4, Fee as q5, Mee as q6, Tee as q7, Hee as q8, Wee as q9, Hc as qA, ote as qB, lte as qC, dte as qD, ute as qE, hte as qF, gte as qG, pte as qH, tte as qI, cte as qJ, mte as qK, v as qL, le as qM, Ye as qN, zs as qO, oa as qP, rI as qQ, vd as qR, b5 as qS, na as qT, di as qU, qN as qV, gee as qW, H6 as qX, Nle as qY, mf as qZ, ir as q_, qee as qa, zee as qb, Zee as qc, Eee as qd, kee as qe, See as qf, xee as qg, _ee as qh, Dee as qi, Lee as qj, Uee as qk, Iee as ql, Gee as qm, A2 as qn, j2 as qo, cI as qp, lI as qq, M2 as qr, yte as qs, ete as qt, fte as qu, ste as qv, rte as qw, nte as qx, ite as qy, ate as qz, iU as r, n5e as r0, Kz as r1, V0e as r2, uv as r3, S2e as r4, PK as r5, B0e as r6, W3 as r7, dv as r8, u6 as s, d0 as t, Jx as u, y6 as v, eh as w, Bt as x, gd as y, vo as z};

//# debugId=f8bed1b0-24a3-5791-9cdc-d677732ec8dd
